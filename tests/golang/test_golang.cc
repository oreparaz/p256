// DO NOT MODIFY, autogenerated on 2023-02-26T21:59:52Z
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN
#include "doctest.h"
#include "../../p256.h"

using byte_vec_t = std::vector< unsigned char >;

TEST_CASE("testing p256_verify valid signature") {
    byte_vec_t msg {0x68,0x69,0x0a};
    byte_vec_t sig {
        /* r */
        0x6c,0x98,0xb6,0x80,0x9f,0x6e,0x2c,0x73,
        0x95,0xc6,0xc9,0xf1,0x8a,0x30,0x28,0x21,
        0xc5,0xf6,0x03,0x69,0xd3,0xab,0xd1,0x92,
        0xe9,0xe5,0xc4,0xf6,0x07,0xd5,0x18,0xd3,

        /* s */
        0x4a,0x9d,0x74,0xa0,0xf4,0x4c,0x61,0x03,
        0x13,0x30,0xa7,0xe3,0xf2,0x79,0x08,0xf5,
        0xc5,0x89,0xfe,0x64,0x27,0xdb,0x7c,0x3f,
        0x3f,0x74,0x09,0x55,0x9e,0x50,0x0c,0x3c};

    byte_vec_t pk {
        /* constant */ 0x04,

        /* x-coord */
        0x56,0x16,0xab,0x0d,0xf8,0x5a,0xc8,0x9c,
        0xc8,0x53,0xb8,0x4e,0x53,0xca,0xb5,0x35,
        0x22,0x4a,0x7d,0xbc,0x39,0x27,0x02,0x76,
        0xdd,0xa8,0x00,0x85,0x3e,0xe8,0xae,0x9b, 

        /* y-coord */
        0x68,0xb9,0x53,0x59,0x70,0x4f,0x87,0xe0,
        0x23,0x42,0x4d,0x5d,0x84,0x2f,0x08,0x21,
        0xd8,0x8c,0xe0,0x1f,0xb6,0xa8,0x1a,0x6a,
        0x1c,0x87,0x8a,0x81,0x13,0x0c,0x61,0x68
    };

    CHECK( p256_verify(msg.data(),
                         static_cast< unsigned >(msg.size()),
                         sig.data(),
                         pk.data()) == P256_SUCCESS );
}

TEST_CASE("testing p256_verify negative case") {
    byte_vec_t msg {0x68,0x69,0x0a};
    /* incorrect signature */
    byte_vec_t sig {
        /* incorrect r */
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        0xe9,0xe5,0xc4,0xf6,0x07,0xd5,0x18,0xd3,

        /* s */
        0x4a,0x9d,0x74,0xa0,0xf4,0x4c,0x61,0x03,
        0x13,0x30,0xa7,0xe3,0xf2,0x79,0x08,0xf5,
        0xc5,0x89,0xfe,0x64,0x27,0xdb,0x7c,0x3f,
        0x3f,0x74,0x09,0x55,0x9e,0x50,0x0c,0x3c};

    byte_vec_t pk {
        /* constant */ 0x04,

        /* x-coord */
        0x56,0x16,0xab,0x0d,0xf8,0x5a,0xc8,0x9c,
        0xc8,0x53,0xb8,0x4e,0x53,0xca,0xb5,0x35,
        0x22,0x4a,0x7d,0xbc,0x39,0x27,0x02,0x76,
        0xdd,0xa8,0x00,0x85,0x3e,0xe8,0xae,0x9b, 

        /* y-coord */
        0x68,0xb9,0x53,0x59,0x70,0x4f,0x87,0xe0,
        0x23,0x42,0x4d,0x5d,0x84,0x2f,0x08,0x21,
        0xd8,0x8c,0xe0,0x1f,0xb6,0xa8,0x1a,0x6a,
        0x1c,0x87,0x8a,0x81,0x13,0x0c,0x61,0x68
    };

    REQUIRE( p256_verify(msg.data(),
                         static_cast< unsigned >(msg.size()),
                         sig.data(),
                         pk.data()) == P256_INVALID_SIGNATURE );
  }
TEST_CASE(" test golang valid 0 ") {
    byte_vec_t msg { 10,82,193,26 };
    byte_vec_t sig { 98,88,130,80,20,221,60,201,61,108,90,224,54,44,132,61,49,181,244,246,54,67,200,135,227,57,227,237,68,242,47,167,244,133,208,239,49,43,70,146,33,180,241,38,160,2,67,116,240,131,247,234,62,55,85,220,25,59,29,73,100,99,3,50 };
    byte_vec_t pk { 4,221,52,251,32,152,14,82,120,178,211,220,213,217,199,21,4,221,142,169,84,43,236,201,58,61,70,172,248,65,75,218,26,131,40,29,90,50,43,241,6,133,131,186,94,119,193,180,232,84,198,66,249,216,10,62,27,41,114,218,230,231,172,132,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 0 ") {
    byte_vec_t msg { 240,18,107,97 };
    byte_vec_t sig { 169,179,92,238,15,73,232,64,79,48,208,12,18,62,227,137,3,12,187,35,46,172,110,73,178,1,123,23,5,149,165,104,255,131,4,103,139,57,144,230,242,183,2,156,225,31,239,97,153,90,87,179,122,202,163,193,177,249,196,69,246,247,228,20 };
    byte_vec_t pk { 4,171,35,107,198,190,21,31,165,10,87,110,173,46,112,25,93,19,119,21,95,163,74,223,231,90,92,18,210,130,70,40,112,58,234,84,209,122,180,209,211,248,157,56,245,128,156,135,241,41,36,236,232,250,71,195,117,239,55,191,105,135,79,120,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 1 ") {
    byte_vec_t msg { 172,173,204,230 };
    byte_vec_t sig { 26,47,78,129,93,131,96,209,187,91,175,67,54,197,57,38,229,128,131,165,80,49,77,206,197,225,165,217,251,12,3,128,128,236,91,1,252,223,38,247,103,212,89,128,101,98,172,42,139,205,77,244,7,22,1,43,171,231,156,185,107,177,139,124 };
    byte_vec_t pk { 4,183,249,40,9,126,197,199,207,66,194,173,167,23,92,55,115,119,123,123,129,155,10,254,132,83,184,95,43,54,38,150,0,12,182,212,197,29,224,91,161,70,101,132,87,178,194,205,145,83,70,19,138,132,121,153,250,195,58,35,85,96,220,2,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 1 ") {
    byte_vec_t msg { 25,236,95,39 };
    byte_vec_t sig { 104,15,12,241,147,178,86,151,190,84,207,222,140,254,227,109,30,170,23,171,91,50,173,164,199,157,175,163,190,145,254,7,241,171,112,77,97,159,213,41,152,10,4,114,39,85,13,243,20,58,143,66,87,149,252,11,164,21,123,112,114,136,211,228 };
    byte_vec_t pk { 4,14,51,51,94,31,78,11,139,231,31,247,150,233,177,214,84,38,167,212,237,109,157,80,156,222,170,13,240,50,133,18,84,225,209,4,20,47,239,73,139,191,58,105,249,202,25,152,59,17,214,93,168,157,99,6,184,96,242,111,117,181,47,146,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 2 ") {
    byte_vec_t msg { 194,104,125,78 };
    byte_vec_t sig { 178,145,50,53,20,204,254,181,238,228,154,90,104,16,68,10,162,16,169,70,119,146,143,197,48,228,181,255,2,31,125,65,56,108,217,167,204,227,125,207,132,15,14,213,200,158,44,20,169,123,78,117,83,150,38,81,37,74,66,85,187,161,76,172 };
    byte_vec_t pk { 4,108,61,71,154,241,218,231,37,170,155,78,243,54,184,85,221,194,219,30,36,19,238,51,4,227,142,16,88,27,193,190,159,55,53,238,58,23,236,218,76,155,162,56,218,162,125,32,60,219,139,58,218,245,233,17,64,246,243,0,228,0,60,255,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 2 ") {
    byte_vec_t msg { 223,66,51,55 };
    byte_vec_t sig { 32,243,205,155,67,245,112,204,63,211,42,170,106,239,179,252,30,183,94,116,37,138,99,15,159,236,173,27,27,68,180,243,210,0,254,126,53,197,6,17,176,192,8,71,233,235,163,216,138,175,145,156,199,102,95,87,216,5,18,159,254,117,45,193 };
    byte_vec_t pk { 4,91,37,210,217,19,51,253,127,51,50,119,118,165,200,224,54,251,201,167,255,74,17,65,121,235,240,181,178,239,182,155,65,199,184,112,192,137,136,16,21,137,33,148,28,195,139,131,52,132,147,204,54,226,49,5,229,75,242,230,156,149,133,207,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 3 ") {
    byte_vec_t msg { 109,184,79,0 };
    byte_vec_t sig { 231,2,18,56,36,76,63,141,175,11,166,189,64,109,135,36,67,74,167,109,65,207,68,203,153,193,190,211,150,223,95,198,16,165,234,195,215,146,112,176,152,240,183,107,13,223,134,194,233,103,107,110,173,75,21,204,191,39,121,193,153,173,26,248 };
    byte_vec_t pk { 4,58,92,8,140,128,114,75,66,238,211,90,36,41,131,153,103,223,17,201,201,66,227,2,92,58,30,199,158,92,219,4,139,161,85,41,120,93,154,68,226,196,179,235,233,224,244,24,109,104,200,46,143,34,236,22,201,142,224,62,150,160,143,147,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 3 ") {
    byte_vec_t msg { 184,29,202,83 };
    byte_vec_t sig { 119,248,116,92,34,160,168,196,201,135,157,53,152,172,128,228,159,232,93,242,84,192,143,126,203,121,162,19,41,41,196,39,162,11,233,8,222,65,1,247,128,221,254,44,245,134,9,106,217,115,116,10,63,139,170,119,14,70,232,156,4,130,66,57 };
    byte_vec_t pk { 4,20,208,241,36,79,243,212,144,157,152,3,183,238,13,174,16,101,42,101,137,86,247,96,85,71,67,91,248,52,251,29,14,177,186,192,48,183,115,60,20,117,184,103,22,238,249,136,78,40,77,164,210,47,172,227,110,23,165,163,221,42,156,125,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 4 ") {
    byte_vec_t msg { 116,177,242,99 };
    byte_vec_t sig { 119,128,63,172,165,94,201,206,173,252,187,28,251,35,102,203,139,56,227,116,213,41,67,136,253,224,103,77,250,227,41,10,160,147,53,81,100,137,66,230,7,183,81,111,67,40,217,252,143,221,8,167,134,2,107,251,194,203,143,27,194,87,198,245 };
    byte_vec_t pk { 4,255,40,45,182,100,138,8,79,213,223,227,148,119,189,192,142,86,139,68,250,153,221,93,236,144,37,159,53,55,2,72,21,82,209,126,156,213,182,222,167,76,104,37,84,7,176,196,96,97,17,246,91,151,158,217,30,136,139,233,34,18,65,154,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 4 ") {
    byte_vec_t msg { 129,134,233,69 };
    byte_vec_t sig { 120,241,126,116,140,150,131,176,113,17,32,89,103,9,245,46,82,89,168,84,233,126,192,254,100,154,115,215,34,218,16,231,251,207,170,77,43,55,129,34,21,154,159,162,138,65,1,111,70,212,1,61,166,0,80,186,59,50,208,154,53,174,6,234 };
    byte_vec_t pk { 4,115,149,70,137,130,12,32,189,114,171,84,51,53,98,109,139,174,118,218,73,226,165,151,162,200,75,35,110,159,132,96,23,177,201,140,46,210,89,71,55,106,191,251,236,198,75,252,141,231,110,160,173,53,157,13,4,173,111,135,213,152,71,164,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 5 ") {
    byte_vec_t msg { 94,235,150,16 };
    byte_vec_t sig { 152,250,229,127,105,168,101,109,185,81,173,191,3,235,165,49,181,6,175,150,166,190,52,125,213,247,17,1,13,178,102,198,246,11,230,194,97,172,75,77,50,220,242,128,127,61,194,127,148,89,236,19,208,230,152,207,109,250,141,14,138,105,149,76 };
    byte_vec_t pk { 4,54,247,63,161,25,6,81,78,118,16,192,236,223,202,208,149,86,188,63,127,209,218,246,95,89,178,82,145,26,214,205,255,90,29,211,52,26,93,160,250,20,149,8,194,162,248,36,40,151,35,158,127,178,115,195,126,190,194,108,178,31,143,162,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 5 ") {
    byte_vec_t msg { 87,185,81,28 };
    byte_vec_t sig { 53,186,26,184,222,86,77,137,76,196,62,120,171,78,133,8,236,96,214,45,153,138,107,204,247,192,253,117,231,254,37,226,169,169,211,90,255,38,232,25,167,50,135,46,141,248,93,65,242,119,5,163,85,202,18,237,205,203,67,51,212,26,39,6 };
    byte_vec_t pk { 4,129,151,63,252,174,174,22,230,172,189,190,140,28,144,223,220,116,141,9,126,148,38,145,16,135,231,203,127,168,239,213,186,172,226,194,227,42,66,18,93,107,17,26,200,98,140,140,61,35,229,246,112,23,125,159,113,240,249,57,249,72,132,138,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 6 ") {
    byte_vec_t msg { 215,6,19,60 };
    byte_vec_t sig { 97,254,53,30,248,164,137,27,172,219,182,200,88,46,61,99,215,169,115,228,101,89,155,9,149,176,107,200,249,48,47,115,178,116,115,191,137,50,210,66,189,59,88,137,128,214,100,219,52,227,142,216,116,159,5,140,35,127,13,117,150,206,149,80 };
    byte_vec_t pk { 4,19,242,129,204,198,67,9,245,114,212,217,111,208,45,205,136,182,94,1,7,159,13,253,80,47,90,195,147,198,170,222,21,200,156,85,160,238,39,73,168,2,255,100,30,28,8,206,101,106,160,203,130,152,197,198,191,222,245,50,110,217,43,219,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 6 ") {
    byte_vec_t msg { 178,222,46,44 };
    byte_vec_t sig { 96,182,253,116,214,215,16,196,244,183,60,133,104,134,18,112,24,25,75,184,153,247,124,67,110,158,208,222,95,245,246,131,15,188,145,134,161,218,236,137,3,179,167,143,172,248,214,135,126,195,8,77,65,118,217,9,58,133,203,23,150,73,10,75 };
    byte_vec_t pk { 4,187,215,252,240,149,131,214,224,47,200,254,133,85,141,233,238,15,16,214,234,105,215,97,171,174,36,66,36,207,40,177,115,238,214,209,12,200,208,150,64,156,145,240,73,38,226,89,106,101,52,219,212,230,124,13,230,178,65,185,43,248,121,53,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 7 ") {
    byte_vec_t msg { 68,139,173,142 };
    byte_vec_t sig { 91,80,216,124,173,106,149,157,56,167,86,158,111,139,48,149,101,81,200,187,205,8,181,127,22,160,218,197,83,241,67,202,53,146,100,180,60,50,180,193,53,62,36,236,204,50,137,173,159,18,125,197,206,37,250,182,112,0,164,7,244,93,206,186 };
    byte_vec_t pk { 4,183,155,34,115,41,117,39,177,105,76,68,186,9,111,45,200,24,117,194,228,254,97,92,243,227,182,158,43,16,8,62,58,71,150,3,214,157,57,125,202,46,218,201,27,216,141,53,104,21,246,122,24,95,20,164,45,170,116,72,185,252,34,229,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 7 ") {
    byte_vec_t msg { 249,120,72,113 };
    byte_vec_t sig { 164,235,211,72,63,114,196,38,201,52,149,162,26,145,51,128,214,98,118,250,231,22,22,212,157,109,124,76,249,40,229,212,134,201,15,23,103,9,98,156,175,226,178,208,171,19,105,14,137,13,72,192,166,44,83,231,129,37,114,68,139,128,191,183 };
    byte_vec_t pk { 4,28,18,91,218,137,37,1,113,197,11,84,198,6,73,246,171,136,136,105,65,241,6,204,93,3,174,115,155,191,53,134,52,162,127,158,106,167,57,150,255,61,25,88,166,244,94,5,127,19,51,227,80,203,19,36,151,233,201,160,202,27,125,220,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 8 ") {
    byte_vec_t msg { 31,147,170,64 };
    byte_vec_t sig { 148,102,161,128,177,99,159,205,4,135,175,245,187,126,161,244,160,190,35,77,19,81,79,174,16,68,41,40,151,149,132,127,41,179,169,6,25,126,191,8,83,206,32,252,197,131,121,166,202,223,30,106,243,254,229,200,44,5,169,20,137,248,113,97 };
    byte_vec_t pk { 4,231,146,68,71,24,170,119,229,179,25,87,30,216,134,107,166,39,32,133,95,154,215,166,143,149,28,125,255,201,77,40,186,43,125,57,120,136,247,202,154,200,212,90,248,82,118,180,81,82,101,147,123,98,133,227,211,122,107,64,147,19,239,131,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 8 ") {
    byte_vec_t msg { 34,176,183,201 };
    byte_vec_t sig { 114,120,179,189,104,148,251,222,183,137,151,105,40,102,49,194,219,23,217,59,44,56,18,140,195,40,5,219,110,233,80,162,16,17,161,145,8,239,26,205,68,4,99,219,152,69,111,130,89,142,94,242,217,204,216,194,243,147,76,186,156,159,153,246 };
    byte_vec_t pk { 4,115,51,249,116,10,13,68,254,154,197,218,106,3,113,21,148,89,67,226,32,219,251,151,241,102,121,183,108,74,0,148,75,74,153,48,68,58,85,134,144,57,72,33,191,87,3,250,164,71,65,123,155,42,192,124,81,206,207,90,248,216,0,157,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 9 ") {
    byte_vec_t msg { 230,72,254,127 };
    byte_vec_t sig { 29,152,112,217,55,72,3,245,237,10,231,216,114,84,92,109,151,55,17,56,245,17,149,62,71,116,229,161,79,182,111,73,62,33,106,192,191,79,212,26,207,82,195,117,67,185,18,162,227,14,220,241,85,30,225,168,236,170,221,183,103,234,244,229 };
    byte_vec_t pk { 4,125,128,60,30,17,235,20,9,45,202,159,151,180,148,162,206,214,209,78,183,113,147,97,177,116,34,91,153,84,106,86,92,86,42,83,23,254,94,32,87,64,120,12,41,234,181,2,166,224,161,138,235,75,51,95,192,141,227,232,227,222,120,187,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 9 ") {
    byte_vec_t msg { 97,237,121,134 };
    byte_vec_t sig { 41,198,110,201,157,78,190,6,183,159,169,8,41,111,162,145,33,6,181,46,0,75,247,52,92,5,132,208,56,101,242,12,191,23,119,98,21,13,152,120,59,105,175,79,29,105,29,34,188,50,134,52,158,69,44,241,224,58,84,173,3,171,244,38 };
    byte_vec_t pk { 4,129,4,82,128,211,112,91,197,87,181,128,12,129,242,176,115,117,138,166,232,156,39,29,57,83,226,20,231,120,158,139,194,227,38,249,160,128,214,81,147,192,214,245,5,13,225,84,76,87,63,131,154,249,65,33,68,71,110,250,107,158,215,62,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 10 ") {
    byte_vec_t msg { 120,253,136,75 };
    byte_vec_t sig { 110,185,31,62,233,232,123,237,58,13,215,170,6,139,0,89,248,36,220,198,187,166,52,155,90,222,239,27,2,203,127,96,217,247,154,241,158,233,8,39,247,131,190,79,82,96,165,254,213,191,125,228,164,136,50,252,188,58,162,52,11,191,161,198 };
    byte_vec_t pk { 4,94,210,145,15,165,21,57,213,234,205,62,177,34,131,186,97,252,24,9,108,101,217,17,249,141,205,86,100,95,152,230,216,235,7,45,68,109,16,182,253,17,62,114,9,19,39,39,234,189,77,15,106,243,109,19,70,55,106,119,19,69,209,240,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 10 ") {
    byte_vec_t msg { 58,194,18,202 };
    byte_vec_t sig { 76,162,103,15,52,250,245,90,10,118,6,148,227,189,135,8,55,1,29,120,91,180,17,104,100,229,85,169,54,52,136,248,193,82,50,220,175,156,52,156,217,159,95,144,208,100,13,50,131,8,253,200,26,126,244,64,2,244,49,222,179,93,215,102 };
    byte_vec_t pk { 4,165,21,70,211,109,88,161,48,151,240,185,18,209,150,92,175,211,71,62,78,219,215,179,113,236,172,123,213,148,131,94,143,62,35,57,209,109,26,100,122,107,42,137,195,212,197,129,139,255,61,209,221,42,136,180,97,126,241,174,98,50,125,106,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 11 ") {
    byte_vec_t msg { 132,29,151,252 };
    byte_vec_t sig { 93,203,45,238,192,190,91,235,168,170,52,169,75,227,122,32,105,248,108,219,79,174,226,67,198,241,126,94,141,143,211,147,67,83,88,156,206,177,65,194,193,88,127,109,164,95,152,26,105,186,58,185,63,110,125,206,39,183,178,221,105,153,107,137 };
    byte_vec_t pk { 4,245,85,55,192,26,105,255,168,193,223,109,175,4,220,133,171,109,123,98,84,160,26,144,138,172,151,2,84,130,218,101,95,35,170,163,250,213,222,181,77,15,62,244,81,82,25,252,90,124,255,160,136,138,142,238,51,220,71,2,95,102,16,218,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 11 ") {
    byte_vec_t msg { 231,90,216,109 };
    byte_vec_t sig { 138,236,132,60,13,240,24,141,69,252,115,66,71,47,141,206,242,36,98,235,253,239,29,159,255,216,238,222,76,106,71,147,178,239,58,63,57,116,4,22,9,19,128,205,89,48,199,113,212,224,8,44,165,253,210,81,184,156,14,26,45,178,95,98 };
    byte_vec_t pk { 4,226,31,204,221,123,101,197,74,23,166,30,69,140,153,111,115,155,221,112,85,157,120,163,237,37,37,2,253,244,67,203,132,250,53,100,99,88,63,162,46,142,206,57,238,162,175,147,34,212,247,143,182,86,198,25,172,54,245,182,199,206,72,53,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 12 ") {
    byte_vec_t msg { 121,119,91,120 };
    byte_vec_t sig { 24,148,192,99,59,147,147,97,137,178,3,255,99,157,58,240,218,243,216,40,255,96,241,34,141,25,137,157,13,76,18,226,30,210,182,174,3,27,36,208,51,61,112,225,203,178,27,21,244,230,125,157,179,166,113,221,99,212,210,70,51,136,107,235 };
    byte_vec_t pk { 4,199,98,94,98,66,175,29,152,72,209,7,156,43,10,190,40,67,91,191,173,11,158,224,252,67,118,123,122,30,39,237,222,92,18,127,29,90,217,4,184,156,220,64,182,157,128,84,129,101,65,212,64,53,236,218,131,42,76,218,212,103,247,243,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 12 ") {
    byte_vec_t msg { 151,102,177,57 };
    byte_vec_t sig { 166,241,161,113,81,72,238,150,23,172,74,33,26,176,123,231,233,212,17,229,194,138,69,237,151,196,10,175,44,93,66,41,23,98,60,148,19,86,98,40,99,47,186,124,197,188,9,7,242,99,218,218,206,255,116,110,188,99,52,32,193,144,119,225 };
    byte_vec_t pk { 4,170,123,0,197,98,204,204,139,209,158,147,194,63,251,76,209,201,251,165,88,203,220,191,239,158,98,158,106,49,131,248,144,149,174,125,63,67,241,206,218,87,50,208,120,120,243,152,179,230,6,232,89,21,143,185,117,206,130,48,133,148,51,95,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 13 ") {
    byte_vec_t msg { 68,171,213,159 };
    byte_vec_t sig { 69,169,229,123,115,152,237,94,247,139,175,221,107,178,42,145,91,131,110,55,39,3,221,76,55,77,88,35,38,29,71,10,124,1,163,38,144,66,17,101,76,186,75,45,199,113,225,37,172,29,166,115,191,98,229,233,178,236,45,145,168,251,218,14 };
    byte_vec_t pk { 4,144,31,88,62,11,27,196,179,48,55,153,59,190,144,19,15,239,192,219,130,4,22,196,190,38,95,206,220,45,136,167,104,190,146,146,139,82,55,167,213,57,161,134,101,133,182,129,5,120,130,117,138,150,44,139,212,15,74,183,88,66,164,150,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 13 ") {
    byte_vec_t msg { 198,205,119,39 };
    byte_vec_t sig { 28,185,185,53,6,50,134,107,105,64,125,153,197,20,62,97,217,122,53,149,21,217,140,109,37,174,143,65,43,62,162,15,153,143,139,196,183,112,255,254,247,106,167,19,57,165,44,114,209,127,188,173,170,71,27,144,129,102,119,157,227,98,229,177 };
    byte_vec_t pk { 4,104,17,88,148,71,156,164,117,214,60,53,164,224,253,148,3,217,115,163,121,153,191,204,44,90,178,236,15,201,103,239,155,141,175,108,68,91,107,212,188,26,92,35,26,118,236,15,44,198,190,158,91,230,202,231,144,183,107,114,111,131,160,177,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 14 ") {
    byte_vec_t msg { 66,131,38,107 };
    byte_vec_t sig { 7,6,193,134,208,195,97,213,63,102,25,4,165,97,54,65,158,225,68,178,21,196,236,187,30,238,210,4,95,156,37,241,177,134,48,121,251,80,168,139,156,23,71,151,163,148,32,22,61,153,80,59,123,115,196,47,86,210,96,72,6,211,22,147 };
    byte_vec_t pk { 4,89,59,249,204,192,130,147,192,175,57,145,85,185,194,250,161,40,152,194,118,232,200,68,203,19,99,104,198,128,114,164,185,150,129,175,194,52,81,83,6,135,217,169,194,73,186,80,101,17,178,57,109,90,226,235,138,141,59,83,195,234,230,221,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 14 ") {
    byte_vec_t msg { 85,113,223,226 };
    byte_vec_t sig { 44,140,66,166,101,68,12,3,26,54,63,23,201,164,38,127,45,19,200,214,182,68,40,97,188,121,7,31,189,201,159,209,254,59,138,144,225,93,32,80,16,31,245,241,210,242,160,4,7,50,64,135,180,196,3,210,145,63,122,200,159,235,209,52 };
    byte_vec_t pk { 4,147,42,33,144,59,148,98,104,70,27,234,38,183,107,255,101,61,251,252,77,123,148,199,118,88,52,148,152,11,110,217,204,180,203,45,201,34,212,115,143,143,99,85,108,22,104,143,255,162,249,123,167,43,168,143,195,24,168,58,132,253,10,163,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 15 ") {
    byte_vec_t msg { 65,26,198,166 };
    byte_vec_t sig { 62,125,204,10,187,9,81,238,124,175,124,151,105,44,250,7,165,38,109,24,26,166,90,34,111,130,77,255,113,218,145,112,8,187,28,160,62,19,181,175,140,221,39,137,130,20,17,161,170,144,211,30,128,20,241,135,89,111,177,226,43,239,98,151 };
    byte_vec_t pk { 4,238,67,173,56,220,45,214,180,235,78,106,221,48,36,84,235,230,245,1,223,213,45,18,141,29,250,187,25,95,89,240,76,114,198,105,25,14,64,228,225,176,253,65,176,56,35,198,166,108,135,55,69,254,97,30,171,29,74,82,174,50,183,149,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 15 ") {
    byte_vec_t msg { 116,147,20,12 };
    byte_vec_t sig { 41,225,106,138,22,236,187,227,230,157,6,142,116,22,78,137,118,108,143,22,190,90,233,204,236,166,104,15,37,35,227,15,110,145,113,206,85,32,18,134,187,255,133,203,123,62,151,181,238,193,194,220,160,46,167,193,216,66,199,13,37,203,139,85 };
    byte_vec_t pk { 4,250,254,161,99,99,156,142,169,158,70,181,65,64,147,140,43,18,20,129,179,238,36,148,176,206,168,79,50,115,105,166,47,163,115,51,153,43,26,93,112,168,198,160,196,27,243,34,57,60,122,29,72,162,245,49,130,213,76,97,90,105,136,169,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 16 ") {
    byte_vec_t msg { 71,117,237,118 };
    byte_vec_t sig { 15,174,52,12,223,117,177,11,254,32,46,85,254,170,210,198,232,37,209,80,154,220,55,155,175,133,39,44,199,201,166,51,35,176,120,77,209,240,71,31,194,97,140,162,145,249,70,84,85,81,63,3,14,167,103,142,75,210,106,82,10,241,139,254 };
    byte_vec_t pk { 4,99,23,55,184,130,139,113,245,198,82,69,205,231,53,2,237,38,104,150,0,156,240,208,44,58,199,147,32,95,179,17,125,54,43,38,243,38,0,154,250,208,167,236,145,12,119,190,213,120,37,175,24,42,92,48,87,60,218,217,236,69,39,49,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 16 ") {
    byte_vec_t msg { 55,253,47,79 };
    byte_vec_t sig { 102,51,170,146,148,129,1,156,20,113,152,118,255,20,249,224,23,214,226,82,176,108,216,54,121,22,1,148,29,195,110,153,2,118,52,206,142,199,41,195,225,135,189,140,231,12,122,80,24,199,215,157,105,24,35,157,159,229,209,228,161,151,21,207 };
    byte_vec_t pk { 4,78,22,249,222,29,28,35,143,176,103,243,151,85,212,110,44,180,242,49,195,38,0,49,42,106,178,175,47,4,83,141,183,223,13,229,187,62,46,195,176,254,142,198,76,240,165,77,127,255,75,77,229,145,176,35,23,145,114,77,192,129,123,213,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 17 ") {
    byte_vec_t msg { 85,62,146,147 };
    byte_vec_t sig { 253,193,79,156,41,81,130,224,40,181,144,52,162,223,90,42,221,127,176,84,251,24,112,131,88,113,236,127,136,146,153,65,220,227,47,27,241,80,229,213,6,30,71,171,140,37,122,115,244,61,26,246,151,52,128,130,60,68,25,32,166,19,129,66 };
    byte_vec_t pk { 4,108,110,183,36,120,212,156,158,65,207,173,106,192,247,18,143,216,226,224,78,55,78,227,145,172,182,217,185,207,40,184,122,125,173,178,37,126,197,246,205,234,165,233,124,31,60,254,103,132,82,102,137,77,203,142,157,188,116,165,182,20,247,150,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 17 ") {
    byte_vec_t msg { 3,116,169,184 };
    byte_vec_t sig { 232,162,85,114,190,226,210,184,157,246,240,236,161,231,81,142,191,212,124,40,125,61,236,115,111,100,135,229,86,217,241,136,235,135,203,211,235,161,83,201,23,42,102,206,134,17,20,139,227,148,217,145,124,9,33,218,214,111,55,138,98,97,158,174 };
    byte_vec_t pk { 4,215,219,48,7,122,74,79,26,5,86,214,54,58,65,164,243,55,67,170,73,191,150,47,0,220,209,17,36,213,108,236,191,37,197,33,109,90,16,220,26,98,162,213,179,45,207,115,29,250,98,211,174,86,70,29,24,241,60,218,185,134,134,214,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 18 ") {
    byte_vec_t msg { 88,44,198,33 };
    byte_vec_t sig { 200,92,232,95,226,104,112,133,55,77,154,163,56,76,101,56,228,243,18,86,247,48,202,40,203,201,35,169,253,230,133,83,191,39,75,25,154,103,187,106,237,86,4,251,139,80,176,113,6,191,196,114,202,183,149,93,169,64,29,168,16,28,117,191 };
    byte_vec_t pk { 4,240,65,198,8,233,110,187,58,50,9,40,194,209,34,150,32,28,160,123,29,153,238,83,59,53,185,51,115,118,73,89,188,55,72,244,36,176,0,159,242,71,209,38,216,38,215,231,24,48,237,107,109,99,87,187,102,97,86,37,135,28,62,231,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 18 ") {
    byte_vec_t msg { 88,175,84,158 };
    byte_vec_t sig { 142,16,170,69,187,241,199,195,33,68,242,130,243,17,212,90,173,106,29,78,192,55,85,225,29,42,232,164,137,122,242,190,139,183,153,249,137,154,46,131,31,172,231,106,210,162,116,196,42,24,57,60,156,67,64,90,46,51,228,25,8,47,68,26 };
    byte_vec_t pk { 4,204,45,219,126,253,110,184,126,248,165,156,241,222,241,76,54,180,219,221,94,118,9,220,34,58,206,209,247,163,116,120,43,59,40,240,222,83,77,152,96,218,115,233,78,236,41,116,130,38,51,178,14,201,52,118,89,53,149,14,193,21,117,87,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 19 ") {
    byte_vec_t msg { 194,156,156,227 };
    byte_vec_t sig { 229,12,94,176,177,222,22,84,98,124,174,80,196,181,140,78,172,168,237,114,60,4,248,134,159,67,16,67,223,221,44,97,39,89,166,110,233,226,143,39,42,216,175,224,38,86,243,223,13,196,75,174,64,10,214,12,149,194,25,46,40,188,24,226 };
    byte_vec_t pk { 4,138,128,152,115,115,81,100,206,140,6,29,32,165,138,60,12,187,154,202,18,14,49,150,59,246,150,181,179,147,189,234,53,183,51,55,36,138,183,197,41,236,232,147,96,49,143,87,4,72,175,30,186,38,210,156,114,217,55,135,41,8,161,179,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 19 ") {
    byte_vec_t msg { 47,14,71,115 };
    byte_vec_t sig { 174,28,40,242,85,137,199,166,39,88,64,149,141,105,181,20,215,51,29,187,254,70,218,108,25,129,192,159,20,187,112,68,81,33,124,75,150,73,190,203,97,121,157,71,163,105,154,41,97,189,102,244,59,37,54,28,23,180,137,131,71,153,89,7 };
    byte_vec_t pk { 4,221,30,188,3,86,22,233,208,13,221,167,203,86,190,159,214,1,107,238,127,13,112,26,30,68,41,237,73,110,238,208,27,27,115,83,99,4,99,164,132,164,170,160,202,69,47,226,89,217,235,210,214,212,108,74,234,205,20,66,157,113,132,71,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 20 ") {
    byte_vec_t msg { 248,159,88,166 };
    byte_vec_t sig { 49,27,197,162,198,181,66,247,224,14,24,65,178,23,71,251,175,34,92,176,81,226,16,71,253,117,177,10,86,206,9,20,199,125,3,192,126,216,171,227,239,107,205,19,127,122,71,17,4,212,119,242,60,15,172,132,122,30,176,157,165,226,209,69 };
    byte_vec_t pk { 4,119,237,174,166,235,175,44,96,198,148,225,106,180,22,79,28,194,174,70,251,99,47,181,187,114,158,28,74,134,137,219,139,69,0,28,164,100,53,117,198,176,232,99,48,140,83,60,97,212,120,41,114,178,126,4,253,33,123,4,147,38,38,205,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 20 ") {
    byte_vec_t msg { 8,171,49,166 };
    byte_vec_t sig { 162,56,164,89,136,16,123,38,101,29,212,90,182,97,39,52,180,65,148,241,205,49,100,11,34,99,88,252,169,37,228,183,176,244,248,56,180,104,203,184,36,97,68,81,141,134,19,230,100,84,159,107,14,108,96,235,119,24,46,147,53,76,123,193 };
    byte_vec_t pk { 4,183,115,154,182,163,243,170,233,176,114,140,128,214,149,199,208,189,249,150,249,47,226,206,140,22,29,160,111,234,57,113,226,51,75,104,43,31,220,72,118,156,182,93,191,21,6,254,1,234,100,237,134,37,25,62,207,243,206,32,54,254,192,7,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 21 ") {
    byte_vec_t msg { 248,251,144,141 };
    byte_vec_t sig { 34,254,66,167,176,165,53,23,222,40,155,180,38,81,217,159,241,122,248,216,201,145,214,96,67,123,191,204,10,99,216,200,227,34,212,40,2,11,177,231,127,47,21,29,237,216,136,24,202,245,202,69,95,58,88,174,87,0,126,210,38,206,85,25 };
    byte_vec_t pk { 4,187,69,78,251,155,99,32,230,11,71,244,72,122,190,124,130,62,29,105,148,59,94,15,122,254,180,245,182,138,18,63,109,25,164,243,198,115,41,200,252,57,147,204,94,141,22,173,244,177,170,102,214,153,188,145,168,150,218,246,161,231,120,91,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 21 ") {
    byte_vec_t msg { 115,72,29,42 };
    byte_vec_t sig { 129,0,47,110,226,63,58,120,57,230,215,242,173,231,84,241,158,180,151,27,78,85,247,24,216,231,190,149,126,50,179,162,241,5,237,88,139,118,119,44,129,169,93,120,62,51,24,114,129,172,190,250,96,14,22,150,207,49,170,13,246,37,93,26 };
    byte_vec_t pk { 4,17,235,67,116,141,250,156,154,210,22,35,136,207,233,30,162,61,132,112,23,68,4,162,155,205,236,221,165,247,104,81,13,158,89,89,128,249,247,151,98,16,155,139,92,108,21,84,254,97,207,181,76,74,30,100,8,190,152,14,225,65,190,31,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 22 ") {
    byte_vec_t msg { 77,112,236,12 };
    byte_vec_t sig { 248,216,118,124,199,17,170,76,130,105,64,43,218,208,191,233,149,80,174,105,56,178,24,141,47,136,50,235,81,172,140,158,128,70,20,254,181,252,25,12,172,0,112,145,193,146,19,181,188,170,255,168,46,89,78,147,38,207,230,69,62,64,185,75 };
    byte_vec_t pk { 4,19,110,106,181,157,241,227,37,60,14,52,143,134,157,147,61,14,84,140,122,74,244,210,139,26,102,27,163,14,64,212,109,196,153,253,87,57,119,8,131,5,139,198,209,202,246,159,8,140,114,231,226,132,109,20,198,128,170,195,55,161,107,53,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 22 ") {
    byte_vec_t msg { 192,242,208,205 };
    byte_vec_t sig { 217,112,89,160,36,187,1,234,50,183,95,249,166,208,253,177,93,121,202,182,176,5,105,150,140,26,139,10,175,204,134,174,237,190,110,155,160,53,230,230,155,119,121,74,131,118,222,214,211,226,188,79,119,61,133,9,7,86,71,45,254,208,165,138 };
    byte_vec_t pk { 4,12,169,115,212,230,35,179,167,40,38,44,33,74,206,59,88,131,79,193,97,255,120,89,236,25,58,12,95,37,209,106,108,154,209,170,13,106,109,157,142,108,82,149,221,140,100,246,50,124,219,180,38,16,21,127,205,74,183,21,160,163,251,133,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 23 ") {
    byte_vec_t msg { 59,118,53,15 };
    byte_vec_t sig { 80,67,71,13,25,1,93,160,88,59,43,182,184,199,11,92,27,246,236,71,190,180,15,22,198,146,85,240,13,178,71,152,61,176,227,8,129,246,66,173,9,11,41,31,41,249,70,160,6,246,239,73,80,110,36,197,243,18,136,139,137,36,32,33 };
    byte_vec_t pk { 4,220,220,27,74,21,12,9,98,109,169,240,217,131,103,116,111,102,162,193,38,39,246,197,54,174,198,160,143,203,156,249,144,145,255,117,104,192,160,249,39,126,26,31,17,152,217,243,53,78,55,144,223,174,164,49,238,63,100,253,149,133,94,24,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 23 ") {
    byte_vec_t msg { 55,231,246,132 };
    byte_vec_t sig { 202,109,3,153,15,63,149,41,230,55,82,10,32,165,7,138,53,159,254,248,98,246,72,205,27,219,55,170,124,115,220,8,3,50,205,248,18,20,66,246,207,16,103,0,15,152,71,125,253,12,95,175,228,104,98,239,209,153,42,108,115,63,197,252 };
    byte_vec_t pk { 4,241,192,200,77,159,15,114,174,120,251,10,150,240,145,33,209,81,38,170,5,190,244,196,142,65,7,112,249,74,126,10,169,23,223,109,90,213,5,37,149,49,246,178,205,154,78,106,43,207,218,122,230,218,129,206,3,197,142,229,110,138,128,240,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 24 ") {
    byte_vec_t msg { 91,183,12,171 };
    byte_vec_t sig { 14,212,196,66,141,217,177,46,81,101,87,239,165,37,26,138,221,183,20,176,47,124,56,122,166,70,58,206,57,137,121,177,240,128,62,209,220,181,49,149,146,244,27,138,153,29,14,45,204,2,181,11,184,255,156,163,39,146,98,239,107,250,242,141 };
    byte_vec_t pk { 4,166,198,104,13,171,101,217,2,67,46,76,158,70,83,181,148,188,134,43,6,178,65,227,58,235,195,242,212,94,89,150,213,118,211,207,0,184,14,231,184,96,182,16,10,160,135,111,225,14,76,38,26,26,138,141,56,113,250,112,52,41,197,148,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 24 ") {
    byte_vec_t msg { 133,54,41,187 };
    byte_vec_t sig { 22,126,75,13,168,148,18,52,117,195,69,198,63,59,121,238,240,126,91,216,227,192,110,64,150,62,242,131,117,44,246,47,51,126,62,237,172,112,179,178,254,170,17,56,237,32,234,198,40,131,108,165,94,161,137,48,104,184,42,224,42,133,48,105 };
    byte_vec_t pk { 4,195,106,64,120,58,55,18,32,83,45,196,41,209,179,148,245,116,110,225,156,69,4,135,252,71,88,45,232,71,93,67,4,174,21,228,139,150,36,64,101,124,254,63,209,120,150,236,247,55,164,145,82,75,142,67,254,119,194,150,155,248,169,207,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 25 ") {
    byte_vec_t msg { 172,171,186,177 };
    byte_vec_t sig { 58,3,39,30,64,183,3,60,125,175,209,77,51,153,98,244,84,219,159,49,133,180,69,228,246,165,96,89,153,197,113,9,87,141,185,239,6,84,103,189,236,76,212,240,220,194,38,49,120,168,43,115,157,230,141,12,97,113,178,115,143,182,149,132 };
    byte_vec_t pk { 4,132,229,157,109,143,169,16,194,146,75,253,170,35,189,70,206,203,223,43,177,149,129,60,108,13,82,165,239,199,18,114,16,240,217,207,109,163,57,85,98,249,124,183,219,93,77,243,83,31,99,147,74,234,50,106,142,89,57,5,95,250,194,174,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 25 ") {
    byte_vec_t msg { 233,65,20,48 };
    byte_vec_t sig { 187,56,181,26,3,128,83,21,162,154,215,154,237,176,78,217,22,42,41,28,253,191,170,151,56,164,162,0,198,141,198,130,207,126,156,232,31,104,52,96,158,239,193,89,87,53,70,196,130,224,3,164,133,13,136,14,14,185,106,66,221,133,126,204 };
    byte_vec_t pk { 4,116,182,68,244,167,15,127,79,250,112,83,76,14,43,92,130,81,216,215,168,21,82,49,148,237,162,246,188,223,110,60,194,8,220,216,63,108,38,176,35,239,105,143,71,24,151,76,38,127,117,107,244,120,206,50,195,32,191,17,7,186,147,114,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 26 ") {
    byte_vec_t msg { 139,34,255,181 };
    byte_vec_t sig { 168,26,46,171,51,115,50,10,63,88,99,176,207,45,26,171,42,227,254,43,190,4,179,55,4,207,11,141,59,92,180,26,62,164,84,94,31,23,178,33,69,242,97,176,52,29,141,162,76,142,110,5,217,254,172,147,133,168,141,56,149,107,161,165 };
    byte_vec_t pk { 4,214,62,106,51,225,138,77,86,143,27,115,119,54,203,140,152,124,65,13,225,72,205,205,162,19,255,153,50,132,254,62,246,111,13,181,92,166,202,97,46,194,89,173,123,167,15,184,40,165,27,33,123,213,239,124,199,22,145,129,9,223,169,121,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 26 ") {
    byte_vec_t msg { 144,105,230,123 };
    byte_vec_t sig { 121,227,20,7,220,33,85,98,72,224,204,34,11,4,117,79,31,123,141,82,226,130,192,76,95,141,214,174,105,111,80,127,143,44,236,31,174,50,92,213,126,120,168,247,199,11,137,215,215,0,95,175,103,132,86,209,147,165,99,110,229,111,251,57 };
    byte_vec_t pk { 4,170,206,80,118,45,16,228,136,145,79,41,12,253,5,127,251,51,16,242,58,6,240,164,140,140,7,109,81,161,41,67,198,50,153,124,20,5,186,48,218,38,67,111,199,54,246,48,41,182,4,141,94,232,197,107,15,246,23,149,183,13,209,24,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 27 ") {
    byte_vec_t msg { 18,141,119,96 };
    byte_vec_t sig { 56,201,101,142,55,225,9,99,97,124,27,97,14,126,218,177,167,48,110,94,202,237,206,196,133,98,208,243,103,54,148,46,41,8,199,134,181,109,160,71,249,168,243,245,12,164,51,26,138,119,224,235,205,102,251,85,172,9,228,245,60,35,92,220 };
    byte_vec_t pk { 4,217,254,231,130,181,217,111,203,172,227,244,142,29,164,137,152,106,75,236,82,154,55,141,64,47,22,68,250,211,108,209,246,79,208,188,5,77,113,180,111,5,112,97,93,128,149,231,13,148,69,42,154,5,188,6,112,124,217,43,143,17,55,66,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 27 ") {
    byte_vec_t msg { 184,235,54,198 };
    byte_vec_t sig { 169,78,252,82,114,248,182,190,120,118,46,212,158,137,35,201,22,17,148,244,47,140,120,201,55,83,157,229,65,49,171,116,174,20,100,114,225,19,255,228,112,223,192,197,141,101,215,238,197,140,25,199,71,88,151,127,70,75,197,29,240,155,231,190 };
    byte_vec_t pk { 4,58,204,222,203,163,21,114,23,225,80,111,218,126,217,210,254,30,26,45,197,141,50,151,180,101,90,163,183,207,25,60,159,172,167,136,2,57,137,141,210,38,192,209,7,82,124,194,50,177,90,231,87,188,41,139,100,213,254,42,76,65,175,39,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 28 ") {
    byte_vec_t msg { 174,35,238,196 };
    byte_vec_t sig { 179,193,30,203,21,100,120,96,248,84,63,10,157,158,99,231,171,176,61,222,232,197,118,212,173,53,20,164,40,61,199,58,134,227,65,18,84,62,68,146,8,40,149,154,163,206,39,203,219,103,142,161,244,138,208,192,2,77,23,248,55,167,140,250 };
    byte_vec_t pk { 4,142,172,100,199,148,123,76,242,239,139,107,149,71,50,114,57,170,209,237,70,146,3,144,228,216,91,124,35,87,77,163,57,68,68,96,149,97,62,32,11,69,89,219,243,199,41,195,48,120,243,84,39,96,249,113,85,159,11,135,247,11,13,12,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 28 ") {
    byte_vec_t msg { 238,113,116,88 };
    byte_vec_t sig { 246,121,14,119,129,215,26,95,74,230,145,205,132,181,3,70,45,5,82,46,61,204,36,42,238,50,224,38,172,194,88,181,18,57,228,157,8,195,249,27,24,26,241,154,0,98,90,229,155,234,159,139,178,118,245,89,82,182,41,202,115,186,174,45 };
    byte_vec_t pk { 4,43,110,45,42,201,47,2,161,215,52,37,197,236,169,136,251,181,255,58,137,66,43,149,40,240,63,255,216,108,74,199,131,152,51,233,247,130,91,29,159,196,210,22,73,7,248,234,197,175,239,19,46,198,178,201,225,12,35,168,64,162,65,38,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 29 ") {
    byte_vec_t msg { 87,223,196,213 };
    byte_vec_t sig { 133,77,35,103,88,200,128,109,114,78,20,71,7,166,46,147,196,87,51,154,180,117,239,100,21,214,124,22,205,150,23,153,243,111,81,76,226,135,137,219,134,98,180,229,53,81,66,159,229,222,140,200,195,9,12,143,128,188,26,77,134,87,56,41 };
    byte_vec_t pk { 4,220,61,140,169,144,32,133,127,122,249,27,88,120,209,211,141,93,193,24,158,42,154,69,200,222,164,149,85,33,136,7,250,62,0,137,113,61,9,224,163,171,228,145,172,174,203,47,129,241,63,204,156,44,156,250,74,80,175,128,40,248,41,9,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 29 ") {
    byte_vec_t msg { 37,82,3,174 };
    byte_vec_t sig { 249,132,80,133,69,171,159,142,121,192,92,200,245,9,254,142,123,250,153,130,202,184,127,167,112,144,156,78,158,244,234,128,86,170,1,43,168,253,29,199,110,215,1,148,60,4,247,110,147,182,111,119,6,80,160,99,195,224,183,133,122,8,55,114 };
    byte_vec_t pk { 4,225,96,98,147,31,113,13,147,185,202,164,153,181,5,240,158,107,211,139,50,75,15,13,111,128,180,235,166,123,250,42,83,187,145,101,80,12,34,38,15,79,184,51,215,62,234,149,106,57,117,109,189,120,240,155,113,104,87,26,136,242,70,240,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 30 ") {
    byte_vec_t msg { 255,176,195,122 };
    byte_vec_t sig { 181,31,142,203,151,190,202,204,94,50,220,118,2,162,88,229,251,245,246,202,227,111,206,160,153,152,102,46,196,141,4,173,49,155,83,230,126,129,24,104,34,212,200,166,166,235,85,240,124,240,163,77,211,41,37,35,196,240,10,231,228,135,128,68 };
    byte_vec_t pk { 4,98,89,241,236,172,154,245,104,51,57,12,192,187,111,237,203,250,175,6,70,212,221,139,29,243,38,104,147,163,139,143,231,131,105,65,246,204,126,150,5,7,19,204,151,73,18,124,80,138,140,182,125,115,172,8,115,249,157,191,154,222,160,238,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 30 ") {
    byte_vec_t msg { 95,106,207,247 };
    byte_vec_t sig { 72,14,201,45,77,244,57,95,143,159,144,4,108,29,24,50,195,96,21,124,135,112,61,176,59,11,71,153,160,146,250,20,145,7,173,84,146,16,87,214,162,0,181,250,119,59,107,215,209,162,48,47,181,42,196,197,28,26,32,87,181,79,27,147 };
    byte_vec_t pk { 4,240,209,31,56,210,112,146,5,100,211,201,14,25,130,99,7,110,83,3,14,62,137,170,72,162,109,218,91,85,65,251,14,82,55,220,159,162,114,182,164,47,46,219,1,249,19,126,78,210,27,12,125,235,83,184,154,131,200,175,135,62,82,143,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 31 ") {
    byte_vec_t msg { 43,141,131,229 };
    byte_vec_t sig { 84,96,189,128,146,95,190,242,49,108,186,0,243,233,159,112,149,12,134,217,81,225,116,56,43,79,155,74,17,35,37,213,102,164,119,253,206,108,120,31,145,52,234,237,68,193,239,164,152,164,159,165,195,129,18,150,249,21,81,104,245,214,77,15 };
    byte_vec_t pk { 4,181,199,255,122,186,97,54,139,114,178,86,206,204,127,202,99,159,89,125,49,183,31,0,71,60,100,249,250,220,227,156,85,97,40,135,115,155,61,33,11,127,195,237,156,166,31,36,126,39,26,89,44,113,79,118,195,229,198,246,146,24,193,7,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 31 ") {
    byte_vec_t msg { 238,161,251,13 };
    byte_vec_t sig { 215,159,162,123,50,11,208,170,9,81,36,55,105,18,60,158,125,110,247,50,214,121,54,225,125,100,80,136,103,203,122,142,168,199,191,166,105,211,90,19,134,146,29,165,247,156,78,196,227,127,128,201,121,94,28,147,65,43,238,89,81,177,157,149 };
    byte_vec_t pk { 4,67,24,62,238,24,237,109,65,7,53,109,197,134,128,216,9,70,98,223,227,92,217,173,245,175,98,70,245,44,58,39,8,208,90,120,133,228,103,230,182,111,52,195,161,44,208,85,83,181,186,96,99,243,74,143,180,210,97,169,218,211,119,172,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 32 ") {
    byte_vec_t msg { 105,122,97,66 };
    byte_vec_t sig { 51,254,219,1,2,238,252,20,61,48,142,93,212,39,228,238,147,9,3,32,229,27,219,1,41,46,68,13,22,106,178,11,145,11,35,241,221,184,13,215,24,192,55,182,23,181,104,232,170,72,144,233,181,81,73,81,7,14,180,244,250,210,14,30 };
    byte_vec_t pk { 4,214,203,163,115,149,19,156,191,2,131,58,169,210,36,165,75,207,203,85,99,59,151,141,18,145,112,67,21,202,191,32,136,96,41,86,110,162,116,88,223,2,85,113,156,80,45,113,116,57,216,215,142,213,183,37,5,251,232,30,111,199,180,158,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 32 ") {
    byte_vec_t msg { 183,252,45,89 };
    byte_vec_t sig { 164,143,158,129,35,120,123,67,89,158,175,170,45,13,95,28,150,143,34,138,141,221,215,247,52,166,105,17,228,254,93,10,100,187,245,181,113,57,121,234,64,190,225,59,250,237,239,209,74,188,132,120,209,92,65,253,26,109,110,235,154,42,245,228 };
    byte_vec_t pk { 4,10,157,239,213,240,225,128,208,40,54,118,249,154,84,134,225,180,99,104,223,33,139,219,13,85,139,62,179,125,85,21,152,180,14,80,46,39,225,153,243,48,37,235,11,186,16,57,205,147,114,72,43,166,73,99,229,196,164,13,38,138,113,191,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 33 ") {
    byte_vec_t msg { 199,37,211,174 };
    byte_vec_t sig { 197,132,125,53,25,226,222,14,189,45,95,7,154,80,187,98,244,232,78,92,66,49,92,117,107,203,250,37,236,160,180,255,211,149,5,1,235,180,24,224,67,81,248,176,53,185,51,199,146,162,63,185,249,13,101,205,143,129,143,109,20,9,234,52 };
    byte_vec_t pk { 4,154,46,206,23,113,151,31,55,196,203,205,164,253,200,112,184,196,130,233,160,119,103,96,13,60,147,119,209,54,89,19,97,174,102,179,220,243,97,87,16,113,208,218,252,124,231,124,99,130,163,182,100,98,93,3,166,25,65,79,199,166,68,171,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 33 ") {
    byte_vec_t msg { 229,230,26,224 };
    byte_vec_t sig { 66,72,124,59,130,239,155,49,167,214,52,63,143,181,170,176,248,167,44,10,62,85,186,211,101,214,53,179,234,215,149,232,169,172,14,94,153,181,208,51,116,121,116,41,122,66,205,16,254,253,27,73,112,208,127,82,137,66,65,15,122,128,197,13 };
    byte_vec_t pk { 4,154,252,78,169,53,72,25,112,78,181,118,172,236,44,216,150,41,235,176,145,251,62,116,35,194,159,176,173,244,135,191,182,102,5,51,32,255,153,138,212,239,128,9,235,238,6,35,135,1,7,62,14,251,201,231,193,40,121,100,92,152,225,116,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 34 ") {
    byte_vec_t msg { 136,146,101,22 };
    byte_vec_t sig { 33,173,138,176,56,73,59,119,23,197,240,231,169,200,65,54,187,62,11,0,151,116,233,31,36,155,144,16,32,192,13,46,149,231,18,170,78,122,215,147,196,138,94,197,102,15,54,186,139,98,254,118,69,246,3,193,206,199,52,188,42,3,189,41 };
    byte_vec_t pk { 4,66,164,110,146,184,190,34,94,96,58,138,23,234,201,142,107,13,107,227,230,83,13,33,45,206,89,124,104,65,1,182,204,65,218,255,218,178,62,50,186,102,186,249,54,178,132,73,198,32,145,240,18,104,206,183,143,250,158,127,211,87,193,19,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 34 ") {
    byte_vec_t msg { 245,207,88,99 };
    byte_vec_t sig { 99,18,78,77,45,64,169,236,88,244,43,39,142,116,254,249,66,188,52,172,74,155,236,67,77,88,149,169,39,102,56,38,130,6,126,245,174,113,218,207,61,118,1,215,250,129,228,105,26,226,214,78,193,66,137,0,116,209,240,77,226,63,11,7 };
    byte_vec_t pk { 4,220,39,135,199,227,119,42,248,139,177,239,234,211,43,49,160,152,139,23,253,147,25,58,185,164,33,193,142,125,29,253,230,101,102,242,231,229,18,120,199,39,119,81,215,218,110,252,3,27,231,61,129,37,157,247,170,167,10,77,93,238,69,208,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 35 ") {
    byte_vec_t msg { 4,25,169,67 };
    byte_vec_t sig { 179,104,5,108,16,60,247,55,2,95,213,100,234,109,85,108,59,16,23,100,5,233,85,193,107,227,28,138,103,217,193,219,253,72,183,102,138,209,197,132,73,3,129,181,185,187,92,98,218,35,157,218,125,216,51,175,227,210,76,214,234,74,143,54 };
    byte_vec_t pk { 4,232,143,215,231,42,126,204,121,120,253,122,227,38,214,138,190,100,101,207,216,29,106,97,123,211,123,85,169,150,146,221,164,90,211,244,47,31,227,189,131,12,9,100,173,160,132,153,152,19,155,113,213,239,232,127,165,184,137,121,110,27,24,48,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 35 ") {
    byte_vec_t msg { 151,117,32,9 };
    byte_vec_t sig { 193,50,126,58,86,231,28,217,19,243,122,196,255,82,93,23,96,48,239,30,20,65,41,72,4,6,17,107,217,194,13,39,109,247,57,115,243,61,152,227,128,240,153,102,115,102,171,20,88,61,192,124,165,164,17,58,96,162,72,34,69,241,40,202 };
    byte_vec_t pk { 4,185,147,121,244,232,14,86,51,13,241,79,48,64,226,38,31,19,228,161,41,19,23,123,21,53,48,227,241,253,65,108,75,239,245,211,141,199,29,138,181,11,159,215,164,205,141,98,174,123,92,231,60,222,222,185,0,120,3,27,83,96,123,224,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 36 ") {
    byte_vec_t msg { 26,42,184,238 };
    byte_vec_t sig { 235,246,45,148,56,234,107,105,43,141,15,97,224,138,73,127,24,108,90,98,132,205,66,67,106,224,136,24,34,209,160,132,124,241,229,21,2,162,162,200,133,64,152,59,86,228,163,16,95,55,11,172,233,215,176,214,177,21,185,211,48,245,225,17 };
    byte_vec_t pk { 4,241,171,102,89,56,49,124,37,169,166,210,170,65,228,200,191,202,127,131,179,148,146,45,17,211,56,22,144,123,57,209,27,19,64,166,197,226,27,184,170,168,103,47,229,196,168,159,254,95,51,103,150,192,55,166,34,204,248,222,20,211,111,133,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 36 ") {
    byte_vec_t msg { 118,160,177,51 };
    byte_vec_t sig { 52,174,85,167,51,78,67,209,86,252,0,106,21,120,218,12,16,203,8,231,32,173,117,213,192,224,145,205,229,105,162,107,65,54,190,171,43,127,77,41,23,184,148,194,188,138,104,115,104,230,204,250,164,174,125,178,144,168,206,136,119,14,53,85 };
    byte_vec_t pk { 4,122,124,101,195,66,27,123,29,91,0,46,96,11,225,1,33,30,75,89,236,179,222,239,255,64,177,192,6,181,158,186,188,39,230,83,147,41,156,225,217,211,86,69,209,133,247,186,169,113,25,208,224,109,128,161,53,164,1,41,171,131,220,195,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 37 ") {
    byte_vec_t msg { 237,206,224,56 };
    byte_vec_t sig { 146,191,26,117,87,144,60,249,253,161,105,87,129,208,125,146,94,16,225,33,104,60,213,99,125,140,31,192,76,75,1,103,39,132,140,106,213,168,138,24,246,97,26,83,217,110,188,120,68,109,224,138,97,82,177,47,42,225,154,84,186,108,112,252 };
    byte_vec_t pk { 4,84,10,135,246,47,71,16,241,89,90,56,57,243,52,72,26,31,188,96,226,139,88,129,21,16,150,206,50,252,200,240,160,127,171,152,36,173,191,217,250,220,109,240,79,198,126,19,111,208,100,201,180,227,229,237,229,22,231,107,168,50,71,178,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 37 ") {
    byte_vec_t msg { 68,253,22,86 };
    byte_vec_t sig { 102,76,219,180,111,75,244,199,154,242,254,42,15,41,109,33,198,125,88,244,32,241,0,163,169,116,41,130,196,243,105,90,61,227,97,65,2,216,182,105,119,170,134,201,54,99,248,140,59,241,24,186,213,240,197,215,96,23,66,215,129,195,87,229 };
    byte_vec_t pk { 4,21,141,79,204,178,224,118,25,58,123,191,118,133,148,200,31,144,227,208,189,1,12,73,69,80,78,121,215,189,156,187,39,86,163,130,204,232,146,91,82,187,88,53,123,143,137,116,188,74,62,208,112,19,16,152,19,130,254,168,154,118,249,150,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 38 ") {
    byte_vec_t msg { 54,233,46,86 };
    byte_vec_t sig { 63,118,247,9,193,131,228,218,19,18,192,65,126,19,88,246,183,73,189,2,168,3,121,212,13,82,19,137,45,145,69,79,79,58,183,196,28,160,112,106,25,30,180,43,163,47,240,205,234,228,178,169,179,95,181,46,168,121,112,49,110,78,45,232 };
    byte_vec_t pk { 4,131,142,23,150,163,252,222,79,106,81,251,53,29,255,8,219,180,62,45,200,107,25,245,187,135,247,234,104,200,30,162,175,243,236,20,91,196,180,79,95,26,190,82,7,224,211,167,38,167,149,142,98,174,10,219,12,140,195,230,45,254,227,122,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 38 ") {
    byte_vec_t msg { 37,141,217,155 };
    byte_vec_t sig { 202,69,225,190,200,224,173,87,40,233,150,169,203,215,24,62,73,251,63,69,77,18,2,140,128,139,167,78,2,38,156,167,127,56,180,115,76,56,64,147,56,155,76,33,72,132,28,11,247,241,194,178,125,137,145,252,234,117,216,48,98,104,142,246 };
    byte_vec_t pk { 4,65,27,59,231,45,99,179,98,190,235,204,55,31,155,99,175,206,158,16,222,241,44,81,46,62,97,225,124,180,152,91,43,134,76,117,7,236,207,255,7,171,98,92,108,117,200,99,103,81,176,14,77,120,161,184,121,239,70,55,116,199,137,38,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 39 ") {
    byte_vec_t msg { 182,68,194,181 };
    byte_vec_t sig { 206,210,122,244,121,1,211,32,133,233,56,39,22,191,250,144,148,67,53,0,129,237,122,80,100,2,101,24,180,197,76,92,41,250,230,7,220,52,149,91,138,95,91,14,52,174,66,137,245,108,153,164,121,132,242,84,205,189,30,93,154,118,117,171 };
    byte_vec_t pk { 4,135,163,176,229,146,16,40,53,191,239,118,222,193,214,37,163,213,108,254,199,158,112,74,252,81,135,90,157,246,219,155,10,249,186,175,143,159,183,78,173,222,118,205,185,112,182,220,249,203,77,47,249,109,195,89,126,101,97,0,237,89,85,141,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 39 ") {
    byte_vec_t msg { 211,15,161,144 };
    byte_vec_t sig { 214,103,143,107,124,236,130,188,181,228,169,62,190,143,246,188,147,110,184,120,120,94,201,156,47,72,5,96,88,107,180,24,2,23,214,105,11,98,113,161,73,229,20,18,121,215,218,107,84,82,153,23,162,155,83,88,219,72,16,255,130,66,167,151 };
    byte_vec_t pk { 4,17,190,47,59,68,46,64,31,171,66,172,128,240,147,29,202,170,7,3,51,30,31,40,150,119,185,178,169,122,192,86,232,2,137,47,76,219,39,16,40,140,81,101,90,12,35,75,97,166,102,90,227,248,25,89,138,42,106,142,77,167,110,19,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 40 ") {
    byte_vec_t msg { 247,24,120,62 };
    byte_vec_t sig { 5,2,107,217,54,68,208,166,110,207,106,26,200,119,36,80,133,172,202,242,255,3,203,119,73,215,69,238,168,187,99,19,30,73,215,28,156,108,129,186,195,126,159,86,17,137,227,138,24,146,64,92,161,219,222,206,220,241,241,43,252,75,192,197 };
    byte_vec_t pk { 4,252,36,124,130,119,146,19,198,48,136,188,155,123,135,135,182,148,249,134,160,128,189,149,90,150,58,138,28,41,195,63,235,175,202,111,72,188,217,98,73,109,31,182,194,174,131,156,197,255,59,67,30,154,134,30,80,236,132,215,129,215,237,208,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 40 ") {
    byte_vec_t msg { 234,235,75,170 };
    byte_vec_t sig { 178,31,37,2,162,104,177,41,88,206,180,12,202,212,69,96,146,208,30,223,191,72,38,210,120,14,68,35,174,3,187,160,140,159,77,230,38,198,154,111,224,125,77,245,190,210,171,135,70,233,111,237,213,241,199,226,73,66,0,141,126,193,154,165 };
    byte_vec_t pk { 4,253,240,231,172,30,242,28,204,185,11,58,69,24,176,226,75,55,115,129,105,30,136,243,158,102,130,65,68,176,196,74,247,90,206,100,214,145,65,149,99,248,74,203,62,254,51,127,230,50,184,112,88,217,59,151,253,112,228,54,56,92,111,247,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 41 ") {
    byte_vec_t msg { 67,98,150,214 };
    byte_vec_t sig { 110,65,212,77,102,219,95,60,52,164,160,174,225,71,220,58,187,83,179,78,167,219,180,235,57,82,105,105,22,80,65,238,194,85,56,153,196,130,177,83,250,63,136,163,125,241,133,77,179,6,138,51,201,24,35,111,186,202,107,169,81,222,131,229 };
    byte_vec_t pk { 4,233,93,183,15,185,106,112,96,110,52,97,130,161,53,39,131,233,70,217,178,130,48,203,183,144,122,244,93,19,172,210,239,67,190,235,253,162,97,30,49,108,70,158,5,216,102,30,138,27,73,191,53,133,173,80,218,22,94,33,114,34,62,75,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 41 ") {
    byte_vec_t msg { 179,236,159,69 };
    byte_vec_t sig { 50,150,234,189,255,95,128,214,190,101,61,159,183,235,73,65,241,154,120,218,211,247,34,192,165,46,44,37,181,167,194,28,102,98,114,162,180,218,162,172,155,111,218,65,69,104,77,243,177,88,195,34,212,221,4,127,236,85,6,148,193,247,220,239 };
    byte_vec_t pk { 4,113,24,194,91,75,134,65,76,80,245,144,15,8,47,58,79,48,236,112,12,191,20,179,211,164,83,20,28,111,133,157,30,55,77,63,53,33,55,101,9,11,115,92,141,119,41,202,13,175,212,156,239,55,18,84,52,245,151,212,204,156,157,233,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 42 ") {
    byte_vec_t msg { 51,98,147,4 };
    byte_vec_t sig { 188,45,49,32,255,111,155,248,39,109,235,158,73,181,183,29,41,82,39,109,122,14,39,152,151,230,5,42,216,112,185,10,229,248,4,20,177,201,75,77,5,174,92,203,125,140,2,142,48,251,250,149,157,190,43,49,207,95,14,55,210,165,241,32 };
    byte_vec_t pk { 4,108,0,154,209,220,39,241,8,71,134,71,144,240,138,138,79,151,206,56,145,179,236,12,58,26,213,16,220,202,32,213,199,62,150,115,202,140,27,220,96,53,81,120,21,140,117,8,240,75,205,167,133,18,95,2,139,139,237,206,216,247,13,192,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 42 ") {
    byte_vec_t msg { 163,36,225,123 };
    byte_vec_t sig { 67,165,244,139,37,49,7,190,246,243,209,70,249,28,243,236,73,177,119,213,210,237,215,93,95,26,222,219,172,236,145,238,63,167,50,222,72,75,76,84,201,1,68,179,151,252,162,8,180,151,15,78,164,209,244,150,87,105,255,15,105,22,123,82 };
    byte_vec_t pk { 4,197,233,247,177,227,82,108,109,104,69,117,139,193,159,201,35,55,209,177,98,114,220,88,248,130,149,194,113,194,231,1,191,110,36,199,221,120,157,173,28,233,153,109,168,163,98,195,40,95,145,56,161,92,154,255,194,153,194,119,20,101,241,225,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 43 ") {
    byte_vec_t msg { 108,123,52,170 };
    byte_vec_t sig { 13,240,24,213,117,214,94,18,37,96,52,150,167,191,248,238,171,100,194,21,14,254,10,56,154,136,22,99,130,142,18,235,215,149,119,163,186,38,196,240,196,133,239,145,48,122,167,34,61,251,230,111,204,84,220,31,221,142,164,209,166,80,140,223 };
    byte_vec_t pk { 4,153,173,80,188,19,87,177,15,68,205,110,46,43,244,154,69,221,171,217,54,2,192,47,153,38,127,254,151,31,202,46,22,37,84,246,53,204,254,23,105,105,22,218,7,79,194,201,133,243,228,227,236,4,184,41,39,65,32,141,205,100,61,210,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 43 ") {
    byte_vec_t msg { 214,141,205,31 };
    byte_vec_t sig { 176,138,173,127,124,220,16,169,168,188,13,185,20,58,155,97,243,240,191,206,33,222,232,109,164,208,4,110,250,222,30,255,239,174,50,167,243,40,112,190,229,110,73,49,191,146,42,18,189,249,181,239,90,145,166,132,152,230,129,62,89,104,19,181 };
    byte_vec_t pk { 4,123,161,215,62,174,100,33,110,251,94,119,79,98,158,228,88,123,62,98,66,1,219,212,73,10,56,117,38,169,219,55,153,46,86,204,153,165,93,242,11,120,151,54,33,114,176,94,200,195,130,116,67,24,48,120,223,125,94,81,96,70,232,149,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 44 ") {
    byte_vec_t msg { 90,41,188,172 };
    byte_vec_t sig { 57,57,27,93,7,11,53,180,96,190,230,226,219,234,203,215,223,173,50,150,104,94,190,131,121,10,77,242,43,48,37,100,89,179,183,107,212,118,109,4,40,2,172,229,169,59,13,63,195,93,74,130,49,222,175,212,179,35,27,73,139,148,215,250 };
    byte_vec_t pk { 4,200,39,196,150,12,13,157,235,194,8,211,62,115,88,178,192,155,246,63,74,83,250,118,213,201,153,81,80,188,87,123,150,238,121,193,184,137,154,66,214,6,237,53,3,162,138,65,230,185,42,223,203,50,103,100,130,192,93,113,175,173,191,36,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 44 ") {
    byte_vec_t msg { 123,183,158,169 };
    byte_vec_t sig { 204,110,199,57,180,11,145,40,138,95,103,54,133,164,44,104,83,59,218,1,38,200,157,121,253,71,178,114,164,124,181,238,165,35,91,145,217,207,58,137,22,231,162,75,243,61,146,38,35,172,137,26,49,233,183,225,85,108,74,36,203,241,188,43 };
    byte_vec_t pk { 4,185,110,192,121,114,214,0,57,153,126,38,201,175,240,50,200,198,123,210,39,58,87,220,38,131,89,120,201,35,49,155,179,239,250,219,133,153,33,200,63,196,213,76,223,36,153,124,232,255,249,124,89,95,4,252,159,111,255,141,64,202,221,134,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 45 ") {
    byte_vec_t msg { 210,200,229,22 };
    byte_vec_t sig { 234,107,83,245,133,18,174,253,126,24,221,92,69,145,60,57,45,231,168,179,109,83,209,168,151,56,15,161,126,135,183,117,118,188,170,119,124,141,7,21,194,131,236,44,175,236,55,155,119,187,31,121,56,165,181,232,72,87,186,188,55,25,58,52 };
    byte_vec_t pk { 4,19,87,134,77,115,131,163,227,132,57,112,145,227,221,223,188,195,149,249,192,136,51,248,2,147,125,53,223,2,167,57,30,205,137,222,13,59,85,144,157,178,227,228,206,247,148,73,19,20,184,198,113,80,94,244,38,61,243,60,107,114,136,76,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 45 ") {
    byte_vec_t msg { 184,111,191,102 };
    byte_vec_t sig { 208,87,128,81,231,140,123,192,198,192,127,188,233,131,224,79,92,158,84,27,156,66,24,166,84,223,174,116,98,121,63,22,185,193,93,179,60,184,179,61,217,85,117,144,48,47,150,65,171,174,60,50,91,133,181,248,11,140,208,52,96,240,94,110 };
    byte_vec_t pk { 4,105,124,79,164,96,28,85,86,229,118,204,33,121,153,244,44,165,214,210,204,198,160,233,30,14,77,9,137,11,208,206,80,172,218,49,17,124,180,233,42,221,204,68,199,215,206,62,76,10,180,173,134,121,231,72,39,76,116,213,116,81,79,1,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 46 ") {
    byte_vec_t msg { 208,243,3,71 };
    byte_vec_t sig { 233,172,155,206,44,136,2,216,26,244,37,99,61,9,37,34,131,185,50,67,176,247,209,65,23,167,70,80,62,71,75,72,222,255,156,13,233,165,32,216,29,119,177,53,72,161,112,36,197,170,137,132,234,70,114,231,196,248,118,165,255,234,166,22 };
    byte_vec_t pk { 4,55,147,117,137,26,155,7,51,132,185,244,115,162,242,3,148,158,47,227,158,68,53,119,143,100,59,213,188,68,153,138,156,246,244,133,151,133,124,78,241,240,122,203,175,139,186,5,42,155,176,122,76,41,12,196,77,35,38,124,130,78,79,55,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 46 ") {
    byte_vec_t msg { 203,64,210,210 };
    byte_vec_t sig { 57,149,53,43,205,145,53,143,196,131,79,245,175,50,21,65,51,214,85,183,8,175,121,140,76,219,197,179,23,98,148,168,55,62,111,130,217,207,200,9,71,232,216,12,171,159,241,167,144,190,213,197,238,146,24,193,191,228,65,201,82,128,8,88 };
    byte_vec_t pk { 4,158,107,170,100,217,67,62,48,128,117,179,109,81,216,112,163,64,188,144,119,23,191,142,83,13,177,23,62,210,108,90,78,174,154,111,114,94,9,22,142,103,231,178,193,16,141,122,188,151,149,51,195,112,149,203,1,65,131,153,167,115,138,33,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 47 ") {
    byte_vec_t msg { 14,150,95,180 };
    byte_vec_t sig { 92,78,12,102,247,84,227,171,62,12,77,121,27,138,174,241,98,54,127,169,238,105,90,70,40,191,69,32,59,141,189,236,52,149,170,42,240,82,179,110,16,252,213,11,27,95,22,78,229,163,23,98,4,120,55,2,190,251,221,191,59,113,172,36 };
    byte_vec_t pk { 4,180,223,170,254,65,165,105,150,68,129,26,174,212,212,81,171,48,173,208,187,211,181,34,172,137,100,171,185,206,209,56,7,42,126,135,152,52,165,237,59,102,145,209,85,246,130,40,32,243,183,202,186,76,89,109,206,215,242,82,216,234,187,92,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 47 ") {
    byte_vec_t msg { 254,60,196,91 };
    byte_vec_t sig { 129,7,121,9,245,71,186,173,50,218,119,34,43,60,158,127,44,97,209,31,164,149,239,150,252,123,119,196,13,38,56,165,17,60,173,118,217,226,58,189,230,207,186,199,4,231,220,91,238,84,65,104,3,50,165,43,101,223,216,173,114,42,74,59 };
    byte_vec_t pk { 4,52,173,51,108,86,232,235,217,131,1,223,55,50,238,197,31,43,164,154,98,182,71,217,248,119,178,131,0,198,199,160,79,93,70,30,217,224,230,236,189,196,35,129,180,238,51,39,124,169,135,184,105,246,139,223,211,195,114,146,192,181,82,194,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 48 ") {
    byte_vec_t msg { 244,178,176,78 };
    byte_vec_t sig { 165,23,3,120,227,53,46,132,63,45,17,247,186,189,108,145,87,224,138,241,28,189,96,60,128,81,59,143,175,106,64,89,170,88,59,230,136,97,141,8,249,49,118,240,193,226,224,189,246,13,6,234,38,46,191,241,110,17,18,215,79,79,218,203 };
    byte_vec_t pk { 4,147,121,208,201,235,117,54,138,170,237,44,134,235,192,236,133,247,35,81,20,60,1,3,136,82,159,61,5,92,32,60,84,8,68,80,223,34,24,237,212,144,29,250,119,57,68,193,188,85,239,171,54,29,249,220,83,185,201,249,95,133,97,50,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 48 ") {
    byte_vec_t msg { 84,244,213,197 };
    byte_vec_t sig { 13,82,46,96,138,124,250,175,9,47,221,103,209,7,17,162,149,250,75,2,201,24,255,46,107,154,234,91,233,228,10,41,68,187,33,226,110,142,165,134,101,218,180,36,225,63,100,64,30,110,186,155,161,242,118,98,63,204,25,213,169,40,52,254 };
    byte_vec_t pk { 4,231,137,210,175,249,28,35,164,233,238,1,10,197,34,248,41,154,27,11,83,227,2,157,19,87,49,123,239,182,199,234,88,189,203,82,39,167,23,148,29,47,39,203,159,34,33,249,243,208,63,7,138,108,242,38,92,198,45,126,88,33,149,185,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 49 ") {
    byte_vec_t msg { 33,236,244,89 };
    byte_vec_t sig { 38,72,36,226,174,191,117,12,184,207,196,134,84,79,228,8,35,6,234,145,218,15,29,185,245,238,168,204,97,167,154,177,35,246,160,171,91,45,164,131,44,84,87,204,42,112,75,63,111,84,250,165,110,106,237,115,150,51,134,234,254,165,219,182 };
    byte_vec_t pk { 4,209,242,113,73,62,6,48,234,79,2,46,86,135,124,30,137,129,28,1,202,212,16,66,224,241,63,54,133,160,23,232,164,124,102,82,89,128,29,43,50,143,176,103,77,171,97,33,58,69,165,238,227,0,158,211,241,220,38,112,135,202,101,171,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 49 ") {
    byte_vec_t msg { 120,140,158,60 };
    byte_vec_t sig { 118,229,177,64,6,40,118,144,132,4,18,65,57,150,57,224,135,212,27,100,158,140,107,225,239,224,222,201,20,218,71,51,85,253,235,226,206,100,6,159,126,165,1,189,176,117,112,49,36,9,40,200,184,234,175,73,119,199,106,193,166,221,110,178 };
    byte_vec_t pk { 4,146,246,203,55,144,25,122,151,202,153,63,13,150,24,132,56,93,190,186,185,46,209,44,42,161,254,46,85,15,0,159,203,137,14,1,23,126,57,7,199,209,16,69,194,61,68,77,195,118,127,60,33,205,67,123,212,247,52,86,146,80,130,42,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 50 ") {
    byte_vec_t msg { 215,101,169,219 };
    byte_vec_t sig { 141,76,74,172,61,239,229,185,70,55,93,241,154,178,135,105,81,207,38,64,73,65,188,16,57,26,86,186,179,254,133,111,200,150,96,136,189,180,94,180,229,110,44,37,49,100,30,130,227,23,37,34,90,106,27,248,92,43,245,250,254,59,79,138 };
    byte_vec_t pk { 4,108,113,124,104,21,58,196,151,139,184,2,250,229,57,79,139,28,123,75,129,16,95,25,13,48,78,166,91,96,111,148,42,108,209,123,154,193,34,124,75,147,29,0,134,35,90,80,132,253,77,226,99,38,206,165,249,41,103,253,56,199,33,38,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 50 ") {
    byte_vec_t msg { 144,200,183,127 };
    byte_vec_t sig { 207,102,83,69,56,255,114,94,188,54,132,14,79,70,62,181,230,224,36,86,45,113,111,77,253,242,187,232,201,147,223,202,203,127,127,39,210,132,102,216,44,229,26,141,72,66,32,231,133,83,45,153,61,47,20,244,41,80,118,86,7,11,136,88 };
    byte_vec_t pk { 4,130,156,109,235,156,124,214,193,222,69,91,110,92,44,212,203,104,125,100,18,229,197,182,252,7,80,28,76,7,58,76,119,229,97,139,136,51,191,45,224,36,191,117,254,95,200,127,50,130,224,171,85,14,96,140,249,139,252,25,217,70,137,232,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 51 ") {
    byte_vec_t msg { 215,230,19,11 };
    byte_vec_t sig { 25,37,155,222,101,70,140,203,116,70,187,181,212,202,96,236,107,187,116,199,109,34,97,198,152,19,70,88,201,212,94,144,176,0,246,23,209,200,109,237,94,112,244,218,106,5,77,43,2,159,210,129,226,142,241,196,153,67,198,180,50,200,101,255 };
    byte_vec_t pk { 4,77,136,79,112,9,225,152,178,162,255,49,83,1,128,50,82,254,209,195,99,93,220,245,176,209,150,195,40,113,52,71,73,183,107,90,181,227,16,206,42,147,54,208,41,72,58,77,77,126,190,7,100,190,180,53,182,19,93,78,163,173,18,180,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 51 ") {
    byte_vec_t msg { 160,102,125,138 };
    byte_vec_t sig { 169,52,215,53,98,253,234,127,169,44,194,223,179,215,214,238,194,20,141,143,242,207,246,179,218,44,109,111,218,193,248,152,71,1,182,148,144,65,96,241,168,144,187,14,0,5,223,6,35,151,200,44,68,247,64,98,121,209,165,149,197,78,169,255 };
    byte_vec_t pk { 4,213,11,14,242,167,49,152,250,76,235,118,12,185,217,203,235,38,30,39,80,91,61,84,167,145,30,229,129,144,10,27,146,194,87,233,136,124,218,74,53,42,236,188,202,166,214,144,133,11,132,225,9,235,29,158,73,89,132,14,36,231,240,113,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 52 ") {
    byte_vec_t msg { 136,29,210,225 };
    byte_vec_t sig { 107,173,159,54,230,90,121,254,141,19,64,138,208,238,60,113,7,230,53,144,250,85,159,72,68,244,144,219,83,58,109,132,43,155,135,182,49,193,9,14,47,146,223,86,231,189,105,105,31,40,232,121,232,41,79,186,74,172,226,71,27,169,137,2 };
    byte_vec_t pk { 4,28,200,234,218,205,184,154,38,42,186,194,78,228,74,164,98,73,21,232,99,84,190,203,85,140,121,182,209,74,179,181,9,225,89,14,77,47,174,94,129,101,7,32,5,104,179,18,17,18,58,64,4,202,3,255,224,83,14,88,61,72,187,71,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 52 ") {
    byte_vec_t msg { 48,223,79,250 };
    byte_vec_t sig { 81,65,9,12,0,103,113,134,126,95,155,142,151,156,43,99,218,253,206,19,120,96,92,16,225,84,178,55,46,118,238,62,34,210,191,213,138,162,150,51,134,76,159,20,215,55,200,52,47,234,67,107,149,123,99,118,176,224,31,148,50,119,181,194 };
    byte_vec_t pk { 4,165,29,145,156,21,13,81,18,192,77,206,62,22,119,180,129,219,92,188,138,183,189,49,77,251,160,238,13,190,17,209,114,147,67,94,191,130,1,35,175,139,20,138,213,132,228,32,139,211,131,196,152,101,114,27,190,84,139,2,139,139,188,46,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 53 ") {
    byte_vec_t msg { 65,26,196,168 };
    byte_vec_t sig { 94,195,199,210,143,243,124,80,160,216,27,206,194,1,22,64,186,224,97,59,212,0,25,235,27,90,78,39,63,6,177,142,138,139,107,222,247,193,125,12,5,152,111,6,113,224,205,40,80,226,85,114,195,199,131,209,196,80,201,248,85,133,94,251 };
    byte_vec_t pk { 4,147,33,14,100,6,84,189,6,105,63,177,147,21,88,6,221,126,162,162,180,204,124,3,218,71,0,12,30,164,155,26,127,236,210,84,197,28,242,47,221,241,122,37,227,96,57,50,225,54,105,69,39,82,32,185,130,85,97,88,155,15,186,128,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 53 ") {
    byte_vec_t msg { 199,186,89,90 };
    byte_vec_t sig { 113,95,70,215,155,97,72,252,52,20,113,223,223,5,23,217,223,127,44,122,158,144,235,153,112,247,178,130,134,52,16,73,189,252,70,232,69,118,222,160,71,182,206,61,159,75,148,240,198,49,3,199,148,226,248,253,170,222,105,91,2,189,110,24 };
    byte_vec_t pk { 4,91,234,33,103,51,217,112,154,1,125,213,159,221,33,25,68,80,11,231,31,91,129,246,251,108,42,142,253,11,123,61,22,84,202,142,47,90,233,144,89,114,80,189,81,82,138,102,102,40,87,110,224,11,90,159,32,111,123,169,206,183,175,169,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 54 ") {
    byte_vec_t msg { 229,202,169,49 };
    byte_vec_t sig { 249,123,91,37,130,154,183,64,124,14,188,211,212,66,177,243,244,32,224,29,208,158,222,42,199,162,205,149,5,76,10,8,148,197,105,27,159,177,208,7,187,65,61,4,34,130,186,92,178,23,70,82,30,242,84,172,154,199,69,168,249,14,69,207 };
    byte_vec_t pk { 4,113,37,152,128,59,250,51,94,77,44,217,121,55,150,47,82,198,61,217,163,183,217,95,42,8,203,193,174,119,167,28,235,129,153,172,35,69,12,158,202,212,219,235,10,186,199,47,167,225,103,226,67,165,247,110,202,56,171,21,219,111,61,169,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 54 ") {
    byte_vec_t msg { 74,92,166,145 };
    byte_vec_t sig { 107,155,11,249,252,10,160,172,225,210,107,19,182,128,50,22,116,228,202,171,83,141,192,108,68,180,213,180,55,33,166,10,248,1,159,81,42,192,225,240,145,70,179,82,93,37,247,23,191,127,187,224,180,221,123,218,128,23,99,87,54,90,176,3 };
    byte_vec_t pk { 4,99,190,201,144,72,39,1,219,25,178,245,91,167,210,47,168,25,92,119,233,137,198,35,2,225,70,226,225,109,27,20,10,171,212,26,88,55,237,131,107,166,79,40,52,210,17,206,229,200,82,205,131,77,72,239,78,178,216,67,240,96,84,146,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 55 ") {
    byte_vec_t msg { 47,230,79,87 };
    byte_vec_t sig { 27,159,164,202,242,26,52,216,195,21,208,181,173,225,100,83,207,235,60,108,76,49,111,73,186,27,179,229,122,23,170,0,97,228,142,226,171,241,11,80,233,42,143,61,190,203,20,252,7,21,133,211,106,114,60,71,156,139,126,62,28,227,27,54 };
    byte_vec_t pk { 4,110,7,5,128,14,201,178,90,187,194,144,61,191,22,159,65,208,25,235,139,22,166,79,200,168,92,155,129,170,202,134,56,111,160,2,113,36,21,235,5,111,152,253,85,122,91,138,0,36,17,155,7,138,250,155,241,210,56,111,164,133,92,87,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 55 ") {
    byte_vec_t msg { 158,107,135,12 };
    byte_vec_t sig { 6,109,84,166,75,207,207,189,4,2,3,214,97,141,228,134,249,59,100,74,41,99,9,11,199,199,216,192,5,65,40,225,21,172,205,142,219,248,76,12,202,32,96,198,233,16,187,60,222,36,157,111,65,11,27,215,195,95,200,42,134,224,199,110 };
    byte_vec_t pk { 4,45,19,74,119,81,59,41,14,103,212,16,254,121,214,122,23,221,163,118,137,61,84,141,24,160,111,29,205,43,53,108,249,249,59,12,70,58,196,45,189,150,208,204,132,59,89,52,10,201,96,18,29,81,115,240,97,5,65,90,177,47,119,45,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 56 ") {
    byte_vec_t msg { 152,197,240,133 };
    byte_vec_t sig { 44,223,17,177,183,133,40,14,61,95,213,95,183,88,217,165,209,40,56,39,160,220,255,192,41,245,62,140,159,154,216,66,233,229,127,140,89,242,111,47,63,7,39,138,198,248,118,218,197,65,128,113,110,113,97,128,130,193,206,36,92,129,121,78 };
    byte_vec_t pk { 4,126,192,16,49,75,118,151,206,175,149,50,183,192,159,113,229,19,112,202,255,131,64,105,76,47,143,186,255,5,196,177,81,170,177,95,76,25,98,172,216,211,72,177,76,226,38,210,99,66,102,162,161,44,150,15,63,211,7,113,27,120,29,130,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 56 ") {
    byte_vec_t msg { 209,84,160,2 };
    byte_vec_t sig { 154,154,167,227,189,152,15,64,98,68,39,99,68,95,98,103,153,140,86,58,92,43,111,121,230,231,0,141,249,212,117,6,88,237,229,119,221,149,96,201,185,151,182,65,110,228,0,134,225,165,60,19,48,85,181,92,29,248,45,185,15,12,16,182 };
    byte_vec_t pk { 4,98,17,220,234,96,228,74,177,193,31,160,190,137,213,154,27,109,211,177,185,169,10,163,137,126,153,8,122,208,11,248,171,29,228,170,198,166,128,167,142,144,168,130,165,112,73,53,116,121,55,109,238,207,6,9,130,247,155,45,64,233,129,67,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 57 ") {
    byte_vec_t msg { 249,153,174,156 };
    byte_vec_t sig { 212,156,13,86,130,150,160,50,91,10,190,126,15,6,158,207,169,17,90,115,214,52,55,251,204,134,149,56,75,169,192,241,35,212,143,45,137,128,99,38,28,154,248,3,185,41,129,123,63,241,30,160,62,229,172,33,203,143,71,19,18,64,57,200 };
    byte_vec_t pk { 4,100,63,245,235,158,47,96,17,104,77,57,128,58,97,28,4,103,191,211,77,93,140,179,11,7,25,102,254,220,69,16,218,200,138,251,65,10,34,57,68,106,26,196,13,103,224,125,76,204,75,241,0,58,196,203,209,23,221,232,213,98,75,50,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 57 ") {
    byte_vec_t msg { 4,24,135,185 };
    byte_vec_t sig { 227,152,226,162,53,192,28,175,89,62,13,228,178,90,101,52,169,200,72,203,20,129,164,60,126,143,123,119,189,245,114,100,41,81,28,157,238,235,155,43,101,51,229,128,66,160,192,212,71,252,134,101,61,43,114,144,196,94,49,228,10,10,214,192 };
    byte_vec_t pk { 4,91,65,95,199,90,46,131,163,217,164,86,86,138,63,29,218,143,128,46,194,63,240,61,71,134,214,122,93,170,58,53,217,193,244,137,151,6,89,32,10,90,246,167,89,224,249,206,189,138,123,35,152,76,51,228,194,117,52,82,58,21,75,204,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 58 ") {
    byte_vec_t msg { 1,151,220,245 };
    byte_vec_t sig { 91,25,43,107,0,48,199,7,4,102,23,94,238,91,202,46,142,194,231,26,171,145,94,74,78,222,214,210,241,35,170,109,198,60,191,232,171,33,112,243,49,18,179,189,120,122,77,113,158,113,70,77,73,105,144,87,222,58,210,181,212,126,176,106 };
    byte_vec_t pk { 4,53,91,215,76,142,110,191,218,194,174,254,136,221,170,152,52,196,174,152,200,161,249,4,50,224,147,76,140,219,61,68,186,186,206,68,62,183,191,28,230,42,144,67,185,173,220,7,191,176,164,54,144,229,152,40,200,211,11,210,174,105,238,122,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 58 ") {
    byte_vec_t msg { 1,132,226,182 };
    byte_vec_t sig { 12,107,50,116,29,121,109,36,196,145,171,146,232,144,30,111,164,7,223,139,233,251,38,86,0,59,80,255,8,100,154,105,203,253,243,246,13,11,134,108,9,219,164,121,13,135,58,103,169,216,28,34,143,117,83,87,65,160,10,63,40,95,4,56 };
    byte_vec_t pk { 4,228,111,132,77,11,137,210,174,102,185,188,144,204,205,189,144,32,35,41,79,51,151,170,232,27,249,9,151,38,243,126,239,39,217,206,190,187,86,99,121,102,113,67,106,182,171,35,48,225,124,247,101,26,30,145,91,79,52,97,15,86,123,151,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 59 ") {
    byte_vec_t msg { 128,49,203,107 };
    byte_vec_t sig { 186,205,230,158,172,63,143,46,182,233,127,205,140,255,72,243,184,170,54,230,155,133,143,93,149,172,72,74,141,68,254,64,141,252,245,50,200,122,13,135,183,136,159,144,219,251,219,245,156,252,195,160,58,188,105,252,197,19,66,93,71,13,255,159 };
    byte_vec_t pk { 4,165,33,241,124,163,108,104,140,224,11,183,21,178,15,135,33,94,8,11,233,217,127,168,42,179,208,228,155,34,206,126,107,6,70,241,26,19,197,67,190,179,211,32,113,10,148,138,52,101,28,172,118,108,190,133,222,69,16,166,121,89,71,227,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 59 ") {
    byte_vec_t msg { 89,86,210,102 };
    byte_vec_t sig { 39,243,3,219,51,178,63,248,197,32,102,195,66,112,233,9,46,83,206,222,63,199,85,166,170,190,184,138,99,65,182,126,152,233,162,187,218,227,248,53,42,233,14,106,193,111,8,159,177,92,166,138,45,92,105,173,206,207,228,7,1,255,206,57 };
    byte_vec_t pk { 4,119,220,98,182,21,241,54,44,215,183,36,22,146,202,253,29,213,239,22,195,164,75,74,101,35,154,31,163,177,45,222,9,32,71,22,170,229,210,139,34,25,137,169,210,184,234,2,94,107,141,117,189,105,112,228,167,250,38,194,80,107,56,28,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 60 ") {
    byte_vec_t msg { 17,112,15,132 };
    byte_vec_t sig { 22,31,168,186,147,153,106,243,127,153,103,165,106,80,119,16,231,196,121,189,133,117,74,251,23,6,241,68,168,31,173,199,126,43,211,30,126,159,97,41,148,216,77,245,215,9,26,122,118,178,50,226,161,246,175,33,226,48,207,40,105,128,69,53 };
    byte_vec_t pk { 4,146,169,24,18,139,204,236,251,171,96,135,45,140,211,64,167,249,217,151,120,189,129,12,28,65,104,14,201,159,157,191,155,141,207,231,98,215,178,129,250,199,147,91,148,79,202,185,105,171,141,147,42,201,4,48,76,57,185,122,152,40,136,113,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 60 ") {
    byte_vec_t msg { 228,236,150,26 };
    byte_vec_t sig { 201,215,223,85,10,191,188,51,228,87,120,144,193,128,156,237,235,70,96,171,100,10,70,191,81,191,101,175,172,68,48,40,129,241,30,128,186,55,202,118,64,44,250,238,209,118,166,242,173,249,163,65,152,59,203,188,93,210,154,221,116,222,140,21 };
    byte_vec_t pk { 4,31,83,120,229,244,179,79,200,243,6,185,8,68,79,161,63,66,233,67,81,178,141,254,145,55,182,85,196,137,141,59,92,141,164,219,196,15,205,253,13,73,139,173,54,70,170,122,121,179,53,200,152,52,65,41,27,107,229,246,240,248,182,247,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 61 ") {
    byte_vec_t msg { 72,91,90,223 };
    byte_vec_t sig { 208,209,58,206,130,116,117,80,206,13,142,161,136,149,138,194,76,173,34,175,34,74,209,191,126,114,172,40,144,201,9,63,172,179,117,254,29,217,42,189,42,48,21,215,15,173,242,141,122,202,15,185,168,197,245,78,60,236,68,231,38,112,54,247 };
    byte_vec_t pk { 4,232,35,38,138,96,133,220,36,150,92,239,203,44,1,218,47,17,10,130,143,135,151,185,145,78,174,46,229,252,178,206,15,239,145,65,0,121,63,250,94,74,10,253,13,169,200,71,99,224,240,55,96,96,109,84,175,150,2,214,141,142,10,60,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 61 ") {
    byte_vec_t msg { 27,7,161,37 };
    byte_vec_t sig { 249,181,22,7,160,39,11,170,38,11,232,60,93,202,93,50,246,145,1,190,153,33,89,135,33,159,26,230,113,93,83,5,217,90,16,64,82,27,40,182,132,254,48,224,198,131,251,8,184,122,146,170,101,50,115,82,253,170,15,52,204,233,65,163 };
    byte_vec_t pk { 4,121,213,194,58,56,224,183,241,217,169,110,136,113,102,176,37,193,122,83,182,69,100,141,134,91,194,100,33,186,97,99,205,204,239,202,100,113,155,189,36,72,72,73,187,63,185,61,36,204,65,119,103,14,211,130,197,65,144,47,135,218,203,145,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 62 ") {
    byte_vec_t msg { 196,210,124,171 };
    byte_vec_t sig { 94,60,42,147,236,83,184,78,214,93,82,254,40,203,174,154,76,186,196,25,15,198,81,68,241,47,2,216,227,45,109,88,179,233,225,45,32,194,184,5,104,59,35,4,114,130,219,114,8,62,193,208,205,147,221,91,225,231,40,48,182,200,202,6 };
    byte_vec_t pk { 4,202,14,50,22,181,76,40,213,193,245,129,101,38,215,147,155,52,0,55,215,14,38,0,251,138,217,3,118,31,126,178,219,204,227,113,48,19,153,18,154,25,162,3,132,227,236,46,106,92,102,244,244,63,160,166,189,5,103,230,98,156,30,153,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 62 ") {
    byte_vec_t msg { 231,187,78,177 };
    byte_vec_t sig { 192,244,193,84,93,75,25,119,66,146,193,145,36,157,209,50,141,106,246,153,49,186,203,57,123,236,165,120,215,16,177,252,124,104,65,70,229,114,164,171,172,10,171,172,172,80,222,68,118,234,173,212,119,196,246,177,131,50,107,200,104,151,252,91 };
    byte_vec_t pk { 4,13,45,142,83,196,107,62,3,251,8,169,10,239,241,125,71,9,63,252,34,142,36,211,184,216,154,240,104,142,8,218,114,255,0,120,187,73,32,125,3,148,22,193,114,67,48,99,253,153,7,13,111,249,192,160,243,63,115,8,213,143,124,71,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 63 ") {
    byte_vec_t msg { 84,169,212,203 };
    byte_vec_t sig { 204,240,65,44,180,91,35,93,198,230,38,36,96,102,152,3,44,173,230,2,77,92,236,222,186,30,174,253,16,79,4,69,212,11,65,46,79,169,11,20,108,6,173,186,205,78,122,142,9,220,110,197,47,67,0,242,9,132,255,131,2,114,161,178 };
    byte_vec_t pk { 4,118,60,206,7,168,171,94,171,176,40,249,6,99,53,108,161,163,119,41,162,15,52,193,9,223,183,82,75,178,95,231,162,40,59,72,223,34,81,141,53,196,210,125,113,141,140,41,223,110,106,70,131,142,140,159,237,174,127,42,192,146,212,164,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 63 ") {
    byte_vec_t msg { 71,254,195,84 };
    byte_vec_t sig { 153,6,217,253,36,190,209,116,9,56,133,46,181,129,108,156,17,36,209,26,208,130,8,144,3,196,151,180,100,171,208,157,203,28,91,33,71,145,161,213,165,121,196,240,42,75,131,191,161,50,205,166,194,93,253,124,79,173,137,218,230,193,137,48 };
    byte_vec_t pk { 4,28,47,201,216,19,55,198,76,194,225,171,19,28,230,216,231,49,183,154,3,170,145,191,47,99,152,198,148,131,163,146,60,121,92,236,15,144,90,245,42,245,156,175,223,3,178,98,226,87,183,224,230,90,92,108,117,24,118,202,49,217,254,161,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 64 ") {
    byte_vec_t msg { 138,227,127,203 };
    byte_vec_t sig { 132,25,13,82,150,193,152,75,239,245,41,78,240,34,137,253,97,183,137,86,214,220,187,14,237,70,219,87,106,123,79,226,12,253,69,197,67,122,159,10,122,188,71,250,245,88,23,31,8,221,203,94,23,95,56,150,97,125,121,102,152,60,169,5 };
    byte_vec_t pk { 4,104,10,231,107,245,233,212,54,122,155,219,61,134,28,252,76,197,76,27,42,185,100,72,118,34,42,10,56,83,64,213,39,87,74,254,114,194,207,234,148,252,11,249,25,160,187,7,108,239,110,21,241,154,12,25,7,5,131,90,163,223,186,68,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 64 ") {
    byte_vec_t msg { 17,242,178,106 };
    byte_vec_t sig { 111,117,98,247,147,243,188,154,164,74,148,108,232,164,235,127,65,56,81,138,40,8,39,3,63,187,115,58,89,221,3,48,10,174,110,138,193,111,11,119,106,72,232,27,93,133,6,69,180,29,116,144,67,212,72,73,34,240,137,176,144,255,77,121 };
    byte_vec_t pk { 4,66,216,191,251,23,71,99,155,172,194,222,50,37,200,19,251,66,16,101,162,175,176,106,22,15,133,44,104,249,93,84,175,13,65,137,239,108,244,180,94,135,125,47,100,53,87,220,177,26,66,178,179,44,25,37,110,83,33,156,207,160,90,81,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 65 ") {
    byte_vec_t msg { 89,193,109,185 };
    byte_vec_t sig { 171,129,113,219,155,17,224,16,54,252,124,38,155,60,219,64,7,162,246,228,242,129,248,57,57,131,19,82,57,121,60,13,200,58,234,149,223,219,91,73,38,7,80,180,217,173,92,215,196,201,227,103,126,230,176,18,108,169,243,35,63,174,126,44 };
    byte_vec_t pk { 4,223,4,112,205,146,195,95,192,203,60,34,59,156,196,251,240,138,43,212,109,33,28,67,217,62,82,88,14,160,47,155,144,12,244,95,13,185,156,33,204,33,106,111,205,189,249,42,95,231,200,28,90,113,202,71,111,167,48,171,25,187,162,46,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 65 ") {
    byte_vec_t msg { 210,142,246,30 };
    byte_vec_t sig { 213,181,12,250,17,77,97,46,65,76,108,158,29,4,82,120,181,132,86,3,90,51,80,228,158,28,208,12,137,56,158,2,55,137,172,25,169,239,221,167,78,119,42,68,250,214,140,100,42,200,211,112,246,145,15,229,213,233,48,42,212,199,100,23 };
    byte_vec_t pk { 4,254,252,165,209,214,118,237,85,90,2,193,179,4,130,106,252,168,199,102,207,187,120,152,45,151,156,175,120,9,167,50,231,45,42,116,55,145,27,41,64,127,188,120,13,206,236,66,148,234,50,119,80,241,222,255,120,60,26,14,227,59,242,83,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 66 ") {
    byte_vec_t msg { 38,171,35,246 };
    byte_vec_t sig { 14,253,13,119,152,140,50,38,29,125,195,222,56,196,120,79,28,220,186,229,4,52,116,141,76,132,129,40,233,167,16,128,251,83,101,72,128,210,227,251,48,16,150,208,55,36,2,241,172,98,237,92,228,42,115,111,89,80,41,111,36,102,136,88 };
    byte_vec_t pk { 4,80,44,100,216,237,203,119,79,159,52,72,175,70,140,245,6,174,150,16,225,174,51,35,59,157,190,68,123,232,127,8,122,207,181,163,165,41,181,121,171,134,63,85,116,159,90,61,100,40,27,24,252,200,178,91,0,217,72,75,175,70,122,41,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 66 ") {
    byte_vec_t msg { 202,29,121,167 };
    byte_vec_t sig { 213,138,220,5,152,82,254,186,95,157,77,63,6,161,198,52,157,193,110,221,224,195,243,32,219,208,156,80,95,31,246,58,28,40,230,121,62,53,235,84,62,114,70,115,164,36,219,58,37,138,126,82,138,210,55,54,88,54,170,127,239,11,46,7 };
    byte_vec_t pk { 4,172,75,46,221,230,190,244,154,8,97,43,104,41,171,92,27,224,62,105,60,232,204,103,232,46,23,109,32,89,212,181,136,181,219,108,61,190,239,207,115,153,119,247,6,84,19,215,146,106,90,92,58,87,107,9,99,191,199,65,72,75,195,71,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 67 ") {
    byte_vec_t msg { 10,11,232,203 };
    byte_vec_t sig { 28,6,95,197,208,162,41,46,189,159,133,151,157,188,80,134,82,218,235,48,79,149,83,2,20,121,250,200,186,90,57,126,129,157,234,130,81,249,214,5,110,216,120,124,3,22,94,107,14,158,177,20,141,99,212,49,16,84,231,139,203,33,65,6 };
    byte_vec_t pk { 4,234,8,248,17,21,173,167,198,78,143,85,118,172,221,91,96,79,164,173,155,217,146,16,145,217,4,234,152,140,42,119,76,5,47,140,13,168,232,212,1,188,231,94,139,138,163,64,195,99,18,213,80,216,34,169,42,83,225,85,53,190,21,13,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 67 ") {
    byte_vec_t msg { 98,71,162,223 };
    byte_vec_t sig { 131,150,150,157,209,28,76,209,182,146,162,52,168,134,156,5,224,188,224,158,94,159,68,115,145,55,133,86,133,11,74,169,93,223,66,204,227,88,159,227,228,70,250,40,174,244,157,204,85,73,124,241,60,154,55,180,2,69,9,36,84,175,17,75 };
    byte_vec_t pk { 4,201,201,230,12,6,229,173,204,35,194,21,117,194,88,222,0,8,166,80,51,213,54,126,172,122,49,188,51,96,46,208,89,175,197,132,179,191,204,210,239,254,21,142,220,84,246,51,35,25,106,188,98,183,205,91,62,60,157,241,188,216,154,39,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 68 ") {
    byte_vec_t msg { 147,114,24,217 };
    byte_vec_t sig { 161,227,115,125,24,5,100,146,236,156,253,127,90,109,203,248,150,179,207,48,141,109,196,111,13,147,212,120,83,126,28,238,244,58,203,134,131,158,194,132,158,247,118,71,95,96,243,164,230,102,196,58,42,66,144,75,196,100,33,223,96,108,213,239 };
    byte_vec_t pk { 4,207,150,254,13,203,161,158,64,96,37,110,87,225,211,64,137,28,186,229,148,247,79,249,203,152,63,17,75,76,14,221,190,232,225,239,24,98,131,22,65,191,63,5,59,86,171,1,136,44,248,41,31,49,146,84,147,157,173,156,141,137,31,238,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 68 ") {
    byte_vec_t msg { 74,162,81,219 };
    byte_vec_t sig { 18,83,245,8,0,163,154,225,175,203,131,66,196,76,22,228,45,154,236,54,48,146,34,187,63,116,105,141,119,243,16,48,245,247,64,118,53,105,73,112,131,172,46,7,204,190,83,213,5,69,16,118,73,94,4,156,96,224,0,119,61,96,212,83 };
    byte_vec_t pk { 4,75,228,124,30,26,0,215,245,21,83,46,49,50,107,218,216,159,243,154,213,176,64,208,49,216,206,238,84,205,231,110,128,57,181,43,133,176,1,147,39,50,127,248,36,11,34,48,100,234,221,201,84,193,155,44,228,93,168,14,33,77,209,44,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 69 ") {
    byte_vec_t msg { 213,248,67,101 };
    byte_vec_t sig { 145,25,135,207,201,60,43,194,80,133,246,24,46,33,245,204,123,184,187,11,163,183,13,142,176,173,189,115,75,14,55,141,60,254,24,172,207,215,189,104,252,215,146,74,85,100,116,97,179,22,152,34,108,141,1,235,209,41,195,233,64,145,253,223 };
    byte_vec_t pk { 4,169,41,207,93,161,132,120,253,132,42,227,102,64,31,64,20,84,175,139,185,158,61,182,14,15,121,163,71,34,29,140,156,66,175,130,99,144,232,227,93,214,180,255,74,48,30,36,213,139,176,143,83,167,207,183,131,255,143,58,167,35,41,31,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 69 ") {
    byte_vec_t msg { 24,0,31,84 };
    byte_vec_t sig { 206,9,90,69,95,3,1,110,43,0,218,237,205,238,55,48,133,40,100,61,254,220,73,70,238,224,76,168,160,210,13,196,146,212,110,86,222,238,201,185,98,229,134,159,239,51,85,86,160,68,242,122,87,17,18,47,158,120,0,125,242,243,223,231 };
    byte_vec_t pk { 4,83,84,182,106,180,117,209,173,209,192,135,238,151,207,41,108,37,102,87,28,184,139,8,50,165,113,17,45,27,121,15,81,221,80,165,122,11,41,20,246,194,204,223,22,194,92,33,176,57,238,229,232,246,220,8,242,176,228,15,187,198,144,204,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 70 ") {
    byte_vec_t msg { 94,227,255,131 };
    byte_vec_t sig { 68,150,124,244,76,212,122,81,28,241,137,123,245,197,238,7,199,142,160,139,3,144,202,95,115,106,140,174,229,11,92,226,208,140,153,40,165,198,141,67,9,200,228,160,232,195,54,55,244,45,15,78,192,73,99,250,15,15,68,172,174,76,195,70 };
    byte_vec_t pk { 4,94,91,228,168,213,172,228,159,217,49,63,23,71,78,69,60,156,113,241,151,130,9,199,202,133,53,174,191,65,247,4,107,179,44,20,102,139,186,212,163,90,184,236,55,165,124,25,221,64,70,146,126,245,192,20,37,250,132,30,205,75,75,191,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 70 ") {
    byte_vec_t msg { 89,176,125,246 };
    byte_vec_t sig { 23,60,170,240,48,240,44,28,158,8,8,52,228,193,12,18,248,223,57,84,227,198,19,105,54,3,2,178,242,3,211,157,64,161,84,162,119,90,62,251,8,112,76,180,51,79,40,215,35,31,194,220,209,140,142,39,158,123,45,128,10,202,85,22 };
    byte_vec_t pk { 4,27,224,77,113,35,226,118,107,74,209,34,85,253,142,97,33,219,176,156,129,39,1,105,185,207,208,37,226,120,19,241,152,177,60,102,85,73,159,205,38,23,201,185,108,228,128,178,21,154,172,160,71,252,254,63,76,171,96,0,212,69,152,218,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 71 ") {
    byte_vec_t msg { 77,202,3,137 };
    byte_vec_t sig { 186,73,142,85,255,227,89,117,114,182,135,133,35,32,149,138,24,191,23,45,133,167,8,237,251,219,157,175,182,124,84,230,99,182,253,224,242,119,242,104,150,64,204,99,49,98,96,76,109,250,249,174,49,244,241,9,71,74,62,231,1,51,205,211 };
    byte_vec_t pk { 4,230,238,152,165,61,33,39,75,104,5,104,185,97,66,12,68,28,224,64,94,42,158,18,91,119,174,68,91,5,220,105,250,102,135,30,50,247,63,250,249,30,109,243,146,169,97,206,198,120,252,231,71,42,195,8,230,207,149,172,150,243,178,4,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 71 ") {
    byte_vec_t msg { 102,190,220,137 };
    byte_vec_t sig { 114,69,35,86,66,220,39,10,26,78,109,154,161,96,80,134,255,55,228,235,210,235,65,242,66,35,55,159,185,157,199,195,120,62,71,171,130,104,38,224,113,122,79,209,88,192,95,153,54,244,133,17,83,176,140,86,221,140,147,52,2,7,103,40 };
    byte_vec_t pk { 4,125,27,86,16,30,253,216,89,82,44,6,60,102,157,196,184,84,101,132,74,199,66,155,171,140,242,178,197,62,113,85,142,157,220,195,180,244,191,223,114,80,167,249,229,248,116,163,173,9,51,22,220,252,193,240,13,144,190,229,141,25,71,135,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 72 ") {
    byte_vec_t msg { 103,205,83,22 };
    byte_vec_t sig { 7,57,33,228,34,234,215,36,211,89,250,102,236,9,204,130,255,112,134,183,189,30,252,189,7,211,118,45,9,121,220,112,80,175,52,213,148,45,222,137,125,157,227,91,191,245,156,227,222,116,63,230,104,60,162,232,164,141,170,213,45,174,197,50 };
    byte_vec_t pk { 4,60,52,16,51,83,165,91,254,142,191,97,141,60,100,4,219,24,71,81,6,33,122,10,109,182,85,152,4,55,130,133,184,244,199,163,131,25,27,128,160,201,81,143,218,74,97,123,158,184,7,155,174,142,124,217,197,87,70,83,189,71,146,25,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 72 ") {
    byte_vec_t msg { 77,60,128,47 };
    byte_vec_t sig { 171,239,130,1,4,43,251,128,169,14,243,171,210,1,35,223,250,227,166,194,220,167,97,7,142,34,168,102,203,126,58,43,211,112,95,169,249,124,181,127,173,33,89,84,253,163,194,126,120,186,203,80,72,124,51,236,91,226,191,183,134,110,136,47 };
    byte_vec_t pk { 4,229,55,218,251,62,186,103,56,48,184,122,197,222,47,99,149,116,51,201,228,55,210,143,141,22,137,176,147,224,236,95,209,221,242,61,143,24,200,29,177,231,133,87,204,42,45,127,181,246,100,83,154,225,71,1,106,105,153,58,10,18,69,255,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 73 ") {
    byte_vec_t msg { 155,146,38,253 };
    byte_vec_t sig { 233,76,252,171,69,248,211,162,76,244,247,133,159,127,101,76,200,163,80,80,72,77,69,165,80,56,220,142,127,97,182,183,220,79,21,56,106,49,247,245,100,196,84,113,63,138,80,126,210,68,19,214,185,193,241,176,7,134,25,57,103,95,158,163 };
    byte_vec_t pk { 4,216,20,131,93,153,143,192,32,208,126,224,72,101,35,41,83,81,140,129,34,185,45,31,71,118,193,38,31,38,210,239,146,37,245,167,240,70,51,169,238,52,28,131,185,158,79,191,231,255,34,0,208,43,190,45,254,239,2,133,6,23,98,90,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 73 ") {
    byte_vec_t msg { 142,247,118,167 };
    byte_vec_t sig { 215,246,210,34,57,9,190,246,17,53,246,103,152,52,240,104,133,173,253,58,131,124,117,73,133,178,92,95,151,92,200,107,248,171,198,165,123,88,161,217,119,237,41,43,2,75,22,72,214,32,229,190,97,193,172,216,81,75,28,186,116,198,33,42 };
    byte_vec_t pk { 4,90,75,162,16,174,210,106,138,150,158,87,111,36,199,64,183,66,127,119,202,155,22,209,80,239,173,169,149,79,217,184,160,203,166,246,55,21,213,119,85,195,39,30,145,182,141,72,171,213,240,237,127,118,82,35,92,74,203,12,167,68,5,2,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 74 ") {
    byte_vec_t msg { 133,238,20,219 };
    byte_vec_t sig { 142,74,205,220,142,127,15,250,4,172,1,175,168,215,43,107,21,24,97,153,54,9,18,255,15,57,41,72,137,94,60,34,58,111,48,138,89,178,27,204,81,225,70,204,120,62,200,134,42,162,36,49,110,6,7,110,230,225,245,194,94,242,28,245 };
    byte_vec_t pk { 4,61,178,11,33,200,109,220,204,161,244,17,11,81,173,125,4,178,87,187,53,250,18,82,29,167,166,101,4,148,140,114,11,148,29,6,38,2,201,123,240,220,108,61,35,109,74,250,77,81,118,153,212,101,114,158,170,36,237,225,108,124,183,98,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 74 ") {
    byte_vec_t msg { 209,198,226,250 };
    byte_vec_t sig { 222,88,141,183,27,88,156,72,123,87,1,237,201,254,111,248,17,87,97,192,94,233,13,36,195,235,0,61,39,25,155,243,241,255,25,178,118,198,223,156,179,106,219,33,119,147,41,127,248,107,58,234,223,242,219,194,23,45,19,79,149,57,140,75 };
    byte_vec_t pk { 4,183,52,58,61,249,48,103,0,68,195,58,149,215,156,4,167,158,146,92,89,220,159,130,175,82,244,27,235,243,186,49,174,109,64,222,28,36,240,195,107,54,246,17,13,184,133,94,84,152,192,225,66,189,37,144,21,179,105,156,48,184,81,36,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 75 ") {
    byte_vec_t msg { 199,121,205,13 };
    byte_vec_t sig { 224,217,210,192,127,234,66,46,208,46,178,149,216,201,106,50,41,35,167,160,222,70,16,137,31,7,151,211,164,197,83,80,87,24,185,219,32,197,92,160,64,204,228,211,41,36,160,182,71,89,87,230,132,199,147,4,228,65,1,149,201,125,82,174 };
    byte_vec_t pk { 4,5,231,243,190,138,212,9,25,236,127,187,11,169,162,194,96,110,227,143,85,162,198,158,83,156,187,170,190,82,247,88,184,90,73,185,78,147,63,92,158,206,72,239,176,254,227,129,208,236,82,14,75,102,109,147,36,234,143,180,86,238,158,63,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 75 ") {
    byte_vec_t msg { 8,173,13,45 };
    byte_vec_t sig { 219,254,49,231,157,108,94,206,105,61,94,165,249,141,50,18,194,202,65,27,153,177,37,60,27,101,69,29,98,234,188,15,114,154,70,170,242,67,111,187,149,147,2,54,159,45,63,190,88,219,145,70,13,29,157,4,186,4,14,100,152,65,55,58 };
    byte_vec_t pk { 4,191,35,121,31,87,132,25,61,23,50,244,203,202,182,216,92,15,23,82,35,151,27,70,168,129,167,130,0,193,43,100,183,161,12,32,69,13,208,3,67,43,14,190,16,109,172,22,229,65,50,55,231,15,55,116,135,247,48,13,196,212,120,214,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 76 ") {
    byte_vec_t msg { 228,100,73,142 };
    byte_vec_t sig { 212,23,92,8,49,68,255,135,223,231,98,105,19,253,233,182,18,195,64,118,31,32,253,140,140,50,63,82,130,143,85,82,221,186,92,232,76,77,247,78,228,99,217,92,251,18,22,70,28,21,143,181,37,166,170,120,158,209,130,124,231,129,213,24 };
    byte_vec_t pk { 4,43,59,20,85,40,20,195,11,112,163,151,40,72,65,62,168,14,118,54,182,233,62,93,2,240,14,123,24,87,12,91,80,186,233,244,134,27,44,37,49,166,79,20,196,226,160,30,78,183,182,203,30,99,37,191,16,121,228,181,15,3,78,132,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 76 ") {
    byte_vec_t msg { 174,155,164,173 };
    byte_vec_t sig { 110,141,116,211,48,193,157,34,160,145,195,109,60,138,207,55,150,239,217,194,3,112,77,149,204,217,99,103,134,243,51,51,83,250,10,35,107,153,238,237,176,92,175,175,215,238,97,106,52,235,21,79,156,244,212,58,251,192,158,247,255,235,182,33 };
    byte_vec_t pk { 4,133,110,124,101,19,92,106,209,166,35,215,241,210,198,196,54,227,191,171,110,37,220,111,208,65,53,220,98,22,166,232,49,229,196,170,107,152,172,24,160,162,193,22,3,102,66,104,231,199,139,239,125,84,174,224,162,15,1,139,46,181,13,216,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 77 ") {
    byte_vec_t msg { 116,129,74,141 };
    byte_vec_t sig { 182,192,221,55,176,15,91,119,159,230,202,53,163,189,141,217,255,55,105,130,142,9,130,158,56,52,159,73,144,232,244,50,183,79,230,221,74,78,88,158,57,53,232,199,244,245,72,104,142,103,217,55,68,105,196,155,176,145,61,203,178,75,69,202 };
    byte_vec_t pk { 4,51,166,48,117,217,145,201,47,210,105,100,23,113,94,146,205,188,177,3,247,54,27,76,75,99,208,10,217,201,158,42,24,60,52,189,136,87,23,66,23,3,199,181,180,134,156,30,42,169,139,5,53,242,205,206,21,246,236,107,248,113,2,129,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 77 ") {
    byte_vec_t msg { 37,170,12,82 };
    byte_vec_t sig { 246,64,213,208,190,165,36,83,252,106,130,73,129,77,14,149,201,65,8,55,223,127,165,198,170,27,57,138,39,86,30,174,232,182,54,171,90,115,240,64,115,146,197,139,50,173,57,68,252,39,173,66,107,64,161,241,71,30,152,207,185,103,149,185 };
    byte_vec_t pk { 4,129,82,164,63,2,62,54,77,136,109,132,29,98,96,83,36,123,119,6,89,41,54,204,185,218,39,187,188,51,186,143,117,11,223,195,170,83,82,27,20,190,171,200,65,226,76,251,138,104,27,88,89,215,68,253,239,29,50,15,75,111,20,163,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 78 ") {
    byte_vec_t msg { 234,8,41,248 };
    byte_vec_t sig { 177,183,252,108,46,123,21,179,139,251,195,215,171,63,67,231,35,15,117,250,153,58,118,124,210,228,176,115,70,164,254,207,41,182,100,63,26,169,133,247,51,24,105,226,67,229,232,137,48,28,142,101,84,77,109,25,85,175,7,113,251,118,222,91 };
    byte_vec_t pk { 4,83,222,232,63,142,209,252,100,177,137,38,1,176,223,226,237,129,205,188,46,89,21,78,222,216,108,31,118,41,196,90,227,139,7,28,141,111,250,48,176,80,141,97,240,74,161,23,39,18,238,106,247,118,12,148,134,175,74,40,174,197,145,160,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 78 ") {
    byte_vec_t msg { 222,34,143,155 };
    byte_vec_t sig { 159,223,229,84,193,39,214,96,52,138,131,23,97,167,140,209,212,100,0,94,76,38,71,134,220,35,125,203,87,75,130,214,197,116,26,162,117,135,23,86,173,178,101,60,184,108,209,69,149,89,182,14,20,84,223,135,160,185,155,154,115,66,75,245 };
    byte_vec_t pk { 4,176,38,92,91,168,137,1,255,241,103,235,158,143,239,250,174,252,67,81,127,1,167,92,202,226,246,105,73,107,54,155,18,203,28,57,2,119,181,233,8,43,177,151,106,252,9,198,26,41,59,196,91,74,45,78,133,133,151,149,176,159,26,155,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 79 ") {
    byte_vec_t msg { 94,189,48,121 };
    byte_vec_t sig { 51,144,184,222,71,84,61,182,228,51,206,175,142,95,22,98,183,106,240,96,155,253,194,164,138,209,240,190,229,166,5,23,237,245,191,105,55,10,121,154,237,113,188,245,106,252,38,52,140,53,186,110,0,187,233,77,21,194,8,109,117,240,80,60 };
    byte_vec_t pk { 4,194,169,85,62,8,187,254,50,159,224,79,222,159,139,18,204,245,152,120,68,74,123,255,205,77,143,224,39,15,33,78,90,81,247,204,72,65,218,130,146,80,68,128,62,6,123,216,114,152,80,141,65,126,92,215,132,247,179,28,73,193,128,134,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 79 ") {
    byte_vec_t msg { 231,141,155,165 };
    byte_vec_t sig { 22,255,115,60,86,44,241,158,124,193,129,93,231,229,253,172,25,128,143,194,72,158,116,195,39,190,178,102,123,187,53,30,247,212,38,30,174,54,48,37,154,121,47,23,91,47,190,96,58,27,188,156,114,34,26,146,7,98,111,119,221,249,39,54 };
    byte_vec_t pk { 4,166,69,58,138,216,165,197,106,195,187,73,131,229,242,186,211,43,235,255,143,34,100,178,46,74,146,158,39,91,235,209,38,91,201,187,194,246,14,198,172,72,54,44,240,2,219,27,66,108,76,70,77,122,132,125,136,60,126,136,211,89,149,170,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 80 ") {
    byte_vec_t msg { 231,191,0,152 };
    byte_vec_t sig { 63,95,153,216,185,225,114,241,225,54,75,32,39,219,36,152,11,116,203,197,233,32,31,244,225,44,200,205,50,74,45,62,25,171,238,71,17,195,143,3,154,113,139,156,155,185,172,92,38,236,199,185,59,211,35,133,147,84,152,40,207,145,96,14 };
    byte_vec_t pk { 4,248,75,193,194,196,64,186,37,192,62,130,133,185,118,99,156,145,95,93,104,169,80,218,216,118,183,146,171,45,186,173,195,205,64,23,166,50,192,253,204,219,205,116,214,7,216,94,222,18,13,159,109,223,31,136,14,97,146,103,121,157,48,93,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 80 ") {
    byte_vec_t msg { 171,88,192,190 };
    byte_vec_t sig { 161,56,112,216,35,53,240,215,30,196,171,158,214,214,93,37,10,184,105,144,143,94,145,49,14,40,153,40,201,157,82,80,42,52,221,0,158,51,195,26,4,43,26,9,114,202,224,75,23,17,12,60,63,28,90,209,206,40,47,45,4,125,82,16 };
    byte_vec_t pk { 4,216,36,220,216,222,129,246,236,146,43,244,96,34,93,202,169,2,247,139,240,80,58,243,58,118,49,246,114,170,93,206,62,189,234,76,172,233,22,43,231,67,200,86,105,107,82,204,212,114,69,216,253,15,147,124,176,92,49,181,181,104,182,111,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 81 ") {
    byte_vec_t msg { 28,122,69,201 };
    byte_vec_t sig { 83,243,108,50,250,185,97,6,78,43,184,7,114,198,45,89,253,73,35,87,212,204,99,209,42,246,128,128,153,24,62,8,242,61,5,205,63,110,40,42,113,8,69,154,15,117,105,6,139,2,110,243,214,217,120,191,92,176,100,11,138,243,68,153 };
    byte_vec_t pk { 4,45,12,171,25,42,94,132,32,8,221,245,217,171,72,251,179,6,95,228,64,100,146,174,152,128,207,177,149,169,90,151,9,220,73,119,15,192,22,188,101,108,169,6,145,195,180,152,197,108,244,116,156,226,67,225,148,176,179,36,246,181,200,15,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 81 ") {
    byte_vec_t msg { 165,28,110,244 };
    byte_vec_t sig { 217,155,116,102,177,252,153,199,55,76,12,113,69,5,227,89,78,175,57,130,7,119,181,29,92,20,208,237,251,62,46,69,209,242,102,21,0,27,255,163,116,234,109,6,67,21,253,146,45,54,148,59,242,53,159,103,114,215,63,35,245,58,137,195 };
    byte_vec_t pk { 4,172,123,61,218,63,198,243,89,22,245,21,92,115,204,64,191,14,163,186,165,47,33,138,231,233,119,67,13,153,139,250,112,171,36,232,44,211,103,155,23,31,175,221,237,189,85,181,12,63,235,84,144,108,45,19,208,148,129,151,28,176,253,180,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 82 ") {
    byte_vec_t msg { 116,198,127,170 };
    byte_vec_t sig { 110,243,167,61,78,112,49,85,233,167,224,104,59,253,141,13,133,131,229,170,120,68,0,135,93,25,120,69,21,70,128,247,67,243,99,185,56,10,25,242,212,144,71,28,119,232,204,64,113,180,103,111,184,239,233,251,151,117,12,134,8,73,145,47 };
    byte_vec_t pk { 4,239,206,189,222,239,55,75,208,168,110,168,15,50,83,157,250,119,195,79,206,16,197,143,82,48,62,146,30,136,104,197,133,185,219,34,136,68,182,103,120,74,166,31,194,108,222,203,148,12,45,235,3,52,226,59,84,147,5,91,119,245,101,181,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 82 ") {
    byte_vec_t msg { 82,147,93,199 };
    byte_vec_t sig { 231,59,51,92,180,187,156,226,231,203,194,12,87,79,19,158,68,199,107,26,114,2,102,56,121,66,242,232,173,91,1,209,225,24,115,79,66,127,142,43,164,255,203,40,220,237,44,143,201,13,91,23,206,245,63,177,34,138,223,255,201,25,1,12 };
    byte_vec_t pk { 4,234,87,141,236,178,81,131,92,9,42,1,131,119,138,221,71,211,239,155,166,151,114,10,122,47,194,148,53,207,4,169,212,67,150,51,65,132,99,97,126,75,190,89,178,254,201,180,211,222,34,56,192,63,249,30,191,160,176,187,30,244,120,17,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 83 ") {
    byte_vec_t msg { 192,99,93,143 };
    byte_vec_t sig { 91,249,232,124,230,91,99,7,151,101,33,209,85,80,211,50,89,131,106,148,243,160,163,23,194,191,141,225,241,149,254,157,126,39,172,223,120,22,43,90,161,214,99,158,190,5,251,58,224,154,55,38,28,70,174,136,104,11,217,192,181,99,228,100 };
    byte_vec_t pk { 4,137,116,45,181,25,202,66,162,38,207,82,81,0,25,16,254,3,164,106,32,16,254,183,11,18,101,173,161,147,248,153,209,41,22,217,226,17,38,10,37,185,246,72,4,233,145,203,64,52,103,0,222,203,191,120,252,103,113,186,210,96,115,14,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 83 ") {
    byte_vec_t msg { 122,27,176,16 };
    byte_vec_t sig { 191,32,36,181,255,34,99,127,81,140,64,125,88,54,230,169,63,93,200,14,33,108,254,49,13,148,90,136,147,171,220,214,17,111,205,79,206,240,65,174,62,250,162,57,169,77,2,29,75,34,232,249,157,145,240,171,3,167,222,156,194,247,60,247 };
    byte_vec_t pk { 4,165,87,4,114,184,167,114,197,37,181,234,227,114,48,178,165,4,104,57,164,137,63,191,150,91,139,125,96,54,45,164,202,41,46,254,216,12,146,183,230,164,140,13,67,230,33,51,153,61,238,232,44,68,163,50,28,216,157,55,147,85,112,154,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 84 ") {
    byte_vec_t msg { 78,36,15,249 };
    byte_vec_t sig { 127,34,158,143,167,47,168,188,242,78,92,114,74,171,37,203,83,1,187,47,120,72,85,220,51,25,122,104,48,70,153,88,105,16,187,73,216,124,224,63,233,18,238,90,7,18,218,168,23,146,76,163,147,48,34,225,217,176,136,237,87,56,17,105 };
    byte_vec_t pk { 4,138,74,156,204,32,248,167,29,126,21,95,163,151,238,106,221,251,161,26,83,71,87,132,15,67,137,217,84,102,96,133,226,4,18,172,51,21,155,106,60,243,204,123,254,217,55,11,241,213,225,232,229,141,178,54,141,55,168,210,88,103,246,128,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 84 ") {
    byte_vec_t msg { 156,235,33,171 };
    byte_vec_t sig { 80,253,172,246,242,213,90,55,127,37,119,188,217,119,121,192,245,150,94,202,135,241,21,167,190,129,168,136,92,123,234,167,52,189,204,11,92,240,131,96,60,36,51,120,109,21,239,36,185,82,250,14,80,179,45,78,85,68,27,204,228,156,140,246 };
    byte_vec_t pk { 4,235,38,35,83,167,229,0,29,180,202,3,123,4,118,255,238,210,125,36,37,94,48,170,143,123,190,147,228,80,120,9,138,15,174,34,255,68,103,78,190,132,9,9,129,249,48,39,0,49,192,70,210,204,6,61,205,152,58,91,146,168,48,118,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 85 ") {
    byte_vec_t msg { 120,20,103,230 };
    byte_vec_t sig { 125,49,89,60,44,151,184,204,52,36,83,73,209,194,33,250,248,69,249,62,83,38,59,168,217,87,8,53,226,107,191,227,73,99,79,44,19,248,15,171,130,240,68,105,146,7,90,154,16,160,60,31,224,170,49,132,229,223,214,197,247,213,14,63 };
    byte_vec_t pk { 4,77,86,179,83,113,195,232,103,186,181,39,72,69,171,202,162,179,140,89,220,153,149,74,105,89,197,115,173,118,93,20,132,88,108,61,85,160,196,76,197,81,139,59,221,141,160,90,26,34,228,202,30,226,110,191,253,37,50,236,213,158,83,170,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 85 ") {
    byte_vec_t msg { 58,97,119,151 };
    byte_vec_t sig { 232,71,42,203,111,135,94,128,253,167,223,58,1,246,31,24,146,202,171,4,141,127,197,93,132,210,119,102,13,105,132,137,207,87,163,176,115,70,86,30,216,53,226,191,28,109,245,74,236,73,152,1,82,18,229,111,9,218,23,159,229,20,5,201 };
    byte_vec_t pk { 4,65,130,248,68,97,253,129,154,152,68,227,33,165,61,166,241,123,119,29,184,138,250,198,133,100,122,97,163,221,129,241,8,155,101,116,123,144,75,89,246,76,227,68,171,239,133,78,234,155,210,172,122,96,6,96,175,30,82,96,141,63,168,59,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 86 ") {
    byte_vec_t msg { 84,23,147,236 };
    byte_vec_t sig { 211,176,8,206,181,2,94,170,23,88,178,39,137,214,78,22,247,169,233,57,156,35,166,150,234,27,4,125,104,53,169,4,161,103,24,220,68,147,248,236,240,186,34,36,86,23,1,180,216,77,144,134,212,10,161,102,110,246,154,238,63,134,239,131 };
    byte_vec_t pk { 4,156,170,46,69,120,17,134,50,60,227,112,64,121,147,73,49,50,20,101,148,202,135,54,115,10,79,123,4,0,202,68,84,75,224,34,103,37,55,33,139,214,85,15,103,49,201,210,18,84,0,152,106,26,83,177,112,9,186,33,195,115,158,17,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 86 ") {
    byte_vec_t msg { 30,13,125,221 };
    byte_vec_t sig { 4,249,114,240,31,253,94,107,234,243,159,130,206,2,27,21,91,203,202,88,183,73,36,33,123,3,41,222,7,29,6,122,3,177,111,13,135,185,105,216,44,230,34,142,196,28,44,138,205,31,249,37,178,101,26,124,119,89,196,28,191,168,74,62 };
    byte_vec_t pk { 4,25,178,49,121,110,17,163,141,65,31,37,184,73,214,64,6,184,234,71,52,122,234,216,190,219,191,234,14,100,73,223,89,92,57,27,214,84,228,54,227,234,68,33,232,220,234,62,245,171,54,88,217,55,138,36,29,79,16,215,175,41,82,132,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 87 ") {
    byte_vec_t msg { 25,190,120,100 };
    byte_vec_t sig { 205,5,193,119,182,145,34,208,183,194,53,60,204,158,7,44,23,217,90,129,151,191,10,82,99,49,136,169,230,123,243,139,80,243,92,49,94,6,179,238,111,252,64,137,54,135,167,6,111,247,176,180,172,254,176,166,56,226,228,41,82,145,8,110 };
    byte_vec_t pk { 4,236,104,202,251,4,237,178,60,164,46,210,125,177,203,123,22,1,38,123,106,122,11,226,240,198,116,100,58,139,209,57,132,33,197,140,161,230,35,93,45,19,168,52,57,18,30,170,53,10,78,13,6,139,60,222,236,12,67,225,158,159,63,29,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 87 ") {
    byte_vec_t msg { 237,251,239,167 };
    byte_vec_t sig { 149,38,60,113,177,131,99,21,2,139,246,207,17,26,125,117,163,204,32,160,219,108,160,151,190,210,252,44,111,96,100,22,70,130,109,61,17,140,144,162,222,149,69,140,37,171,197,142,140,56,228,37,1,13,214,118,191,134,18,227,196,39,127,41 };
    byte_vec_t pk { 4,22,79,148,4,172,149,110,63,148,229,10,88,119,77,175,9,128,176,170,135,49,198,30,35,233,244,106,80,129,172,111,45,102,50,218,50,11,188,214,129,175,111,70,218,21,88,0,78,105,48,16,248,198,36,113,1,149,155,52,18,123,193,38,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 88 ") {
    byte_vec_t msg { 140,164,43,245 };
    byte_vec_t sig { 83,213,3,113,215,95,80,99,84,35,242,87,143,188,220,30,60,67,245,125,167,217,14,112,120,191,208,135,195,64,14,242,104,210,172,163,68,139,163,59,23,39,245,220,15,228,250,77,15,83,255,23,225,254,224,221,47,137,190,34,160,90,71,227 };
    byte_vec_t pk { 4,126,232,118,217,253,178,45,14,252,12,139,162,74,196,221,223,195,121,37,32,248,190,15,174,90,13,150,42,104,117,166,10,126,209,11,11,213,198,208,240,3,133,112,188,176,17,85,166,217,233,202,106,45,241,125,56,202,104,137,208,220,69,217,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 88 ") {
    byte_vec_t msg { 89,237,4,99 };
    byte_vec_t sig { 213,112,65,251,89,126,158,78,21,236,110,186,174,211,85,198,171,163,138,58,81,53,125,178,220,10,3,252,237,52,11,199,155,54,160,138,65,38,221,135,3,19,50,67,120,84,52,237,26,203,117,176,127,199,37,112,200,194,41,11,90,229,195,205 };
    byte_vec_t pk { 4,198,152,195,70,122,75,216,76,233,77,198,71,29,190,213,31,99,77,171,96,160,89,192,81,143,17,71,176,147,211,227,231,175,80,153,207,9,228,83,236,124,209,193,105,184,8,126,186,0,248,79,90,169,158,166,39,104,37,164,92,63,170,154,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 89 ") {
    byte_vec_t msg { 25,5,107,222 };
    byte_vec_t sig { 110,72,130,48,3,127,227,153,78,146,11,186,198,51,79,155,60,163,155,194,78,37,44,30,156,207,242,168,31,136,152,77,162,208,29,173,81,76,3,195,2,130,87,105,177,167,103,164,23,25,217,120,167,119,252,169,124,23,227,180,94,53,2,233 };
    byte_vec_t pk { 4,142,141,192,58,211,14,98,119,131,102,227,193,235,108,89,149,28,98,101,184,32,196,37,133,239,231,188,143,255,23,110,245,89,143,170,172,139,138,174,236,214,212,165,162,128,17,11,15,39,103,215,227,138,17,24,173,236,194,227,29,226,254,231,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 89 ") {
    byte_vec_t msg { 234,213,71,246 };
    byte_vec_t sig { 132,128,148,49,220,5,222,222,7,123,39,15,18,243,122,1,61,66,105,121,113,46,95,176,82,123,141,202,45,214,139,125,29,246,31,60,194,63,163,19,167,183,65,105,149,170,45,146,164,87,122,161,68,141,19,164,213,152,101,41,160,124,115,181 };
    byte_vec_t pk { 4,128,223,19,147,158,152,55,56,149,3,1,59,237,65,217,137,241,125,137,184,62,27,26,78,120,69,201,237,138,182,227,135,10,21,150,213,115,69,137,121,242,211,206,172,56,75,161,222,140,25,106,237,65,101,65,240,184,101,118,83,183,241,1,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 90 ") {
    byte_vec_t msg { 206,10,234,95 };
    byte_vec_t sig { 187,221,1,66,241,70,100,47,83,13,63,29,85,125,235,255,87,226,1,69,210,107,231,205,181,187,24,186,92,47,124,168,198,26,114,21,81,87,26,103,73,229,235,31,5,200,136,191,5,174,162,185,110,206,51,140,13,203,71,199,51,97,220,238 };
    byte_vec_t pk { 4,94,194,51,225,167,211,15,239,98,195,3,158,125,218,29,40,183,123,84,169,182,115,222,248,215,116,14,230,15,39,201,206,124,14,38,73,196,217,109,207,31,127,230,255,223,172,154,115,62,84,5,8,5,122,208,107,26,223,9,11,36,102,141,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 90 ") {
    byte_vec_t msg { 127,83,216,59 };
    byte_vec_t sig { 45,35,147,145,176,134,49,117,97,25,133,89,20,61,164,144,101,12,44,26,47,30,208,72,244,13,138,78,223,224,49,180,60,135,189,203,15,123,39,89,25,175,137,202,83,9,37,254,214,60,254,195,149,100,4,79,149,242,206,91,152,61,122,117 };
    byte_vec_t pk { 4,35,123,57,229,168,91,48,183,148,69,179,138,179,75,85,180,22,2,243,142,76,185,101,84,92,72,162,51,107,166,251,59,96,240,92,12,141,136,58,127,44,213,68,68,21,142,254,214,95,150,134,7,240,78,229,109,164,234,148,25,125,248,73,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 91 ") {
    byte_vec_t msg { 152,202,8,157 };
    byte_vec_t sig { 159,134,179,164,63,45,56,214,64,87,130,105,163,42,204,47,188,70,95,44,141,20,60,159,69,120,175,38,63,164,133,111,247,241,148,52,16,16,230,33,135,17,225,146,159,131,120,235,37,188,84,23,106,245,16,183,129,89,230,41,21,91,131,87 };
    byte_vec_t pk { 4,189,220,120,36,215,57,216,57,122,50,113,38,4,229,108,53,91,7,216,127,145,242,224,108,40,78,38,94,50,137,233,47,197,234,93,147,242,34,24,250,196,132,30,140,213,33,37,217,113,50,35,126,61,20,66,181,129,54,76,136,120,177,1,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 91 ") {
    byte_vec_t msg { 192,48,227,74 };
    byte_vec_t sig { 178,50,202,168,72,16,249,103,195,54,45,56,251,126,129,185,48,39,2,17,45,162,143,4,167,154,246,163,11,160,95,43,5,248,111,76,185,160,111,46,52,59,178,106,70,106,210,116,31,241,213,114,209,184,29,24,131,1,165,140,171,165,198,23 };
    byte_vec_t pk { 4,207,11,5,51,170,123,6,74,244,130,218,196,91,231,235,100,23,42,215,223,0,16,184,137,39,73,193,204,165,222,33,240,162,129,44,138,56,57,98,95,134,120,95,132,232,8,231,47,93,200,238,104,3,85,221,39,88,120,187,110,112,19,130,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 92 ") {
    byte_vec_t msg { 49,106,54,133 };
    byte_vec_t sig { 235,184,185,34,73,59,252,63,86,9,123,216,78,58,245,152,79,218,219,27,161,12,66,26,3,171,249,236,100,168,106,104,195,111,142,204,31,77,76,94,201,233,194,6,215,163,221,188,194,246,146,86,230,121,51,40,150,49,9,168,201,158,152,17 };
    byte_vec_t pk { 4,212,125,47,243,210,149,20,128,31,10,146,227,19,228,7,25,201,197,4,60,214,229,207,3,152,153,102,189,31,124,242,40,231,243,158,220,117,67,12,209,255,73,147,119,77,185,4,34,29,52,128,217,43,247,115,176,37,160,9,147,140,125,22,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 92 ") {
    byte_vec_t msg { 198,124,91,119 };
    byte_vec_t sig { 223,216,251,87,245,157,254,185,172,243,237,197,98,198,20,159,73,123,186,251,36,232,101,138,52,127,133,236,192,66,143,80,109,39,143,138,88,123,15,41,151,29,235,47,48,215,71,175,247,232,254,55,100,160,44,1,215,126,105,44,30,64,120,196 };
    byte_vec_t pk { 4,29,163,187,231,112,172,44,175,148,17,182,205,49,214,110,46,70,207,183,3,118,22,21,44,213,154,182,121,43,219,208,4,187,231,244,31,104,186,196,246,46,92,142,161,204,178,149,65,218,161,240,142,76,155,101,201,223,119,231,35,51,74,86,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 93 ") {
    byte_vec_t msg { 205,82,87,217 };
    byte_vec_t sig { 71,251,40,81,111,1,92,45,144,159,221,52,190,187,87,240,99,163,68,188,53,106,210,154,230,222,179,2,139,15,176,114,237,74,165,189,220,146,89,31,22,177,129,33,66,56,36,70,122,108,247,197,31,202,99,53,146,176,55,32,107,116,159,83 };
    byte_vec_t pk { 4,198,143,194,13,25,199,81,249,187,51,103,86,85,154,61,7,88,27,89,233,228,56,37,105,23,233,87,209,203,80,181,30,139,38,11,227,78,172,18,149,72,137,37,69,107,238,108,8,125,198,202,39,194,242,86,86,136,247,125,177,0,127,78,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 93 ") {
    byte_vec_t msg { 211,48,81,50 };
    byte_vec_t sig { 71,135,66,247,177,39,155,72,177,161,177,80,161,49,244,163,230,208,147,193,7,214,92,69,220,178,87,84,170,105,145,56,64,23,140,157,150,109,72,5,187,51,247,21,120,49,74,222,152,241,114,14,209,221,58,143,65,37,223,190,39,43,124,87 };
    byte_vec_t pk { 4,88,45,135,182,122,180,80,123,246,84,234,115,200,207,102,246,113,209,210,23,182,230,35,104,57,4,9,219,130,64,197,220,234,174,47,32,141,95,115,144,113,140,165,109,94,72,60,169,157,245,203,159,237,119,172,186,92,193,24,206,43,134,188,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 94 ") {
    byte_vec_t msg { 141,133,224,239 };
    byte_vec_t sig { 79,80,52,203,76,121,236,106,14,221,189,19,1,185,82,50,47,120,199,117,138,240,194,60,109,183,34,198,20,19,81,26,120,184,252,65,8,81,167,142,223,236,64,222,2,92,189,131,65,246,111,83,76,68,89,179,108,225,75,220,59,137,228,13 };
    byte_vec_t pk { 4,254,162,227,243,156,246,147,58,104,21,254,7,81,7,164,205,242,249,45,218,5,147,192,202,228,60,48,35,11,83,66,200,22,156,192,216,246,96,120,53,207,49,216,27,21,175,204,17,110,27,51,133,45,36,244,112,59,122,144,245,68,174,117,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 94 ") {
    byte_vec_t msg { 112,183,47,6 };
    byte_vec_t sig { 104,141,181,67,99,12,71,169,224,19,151,139,252,218,36,74,227,175,49,49,77,14,174,174,145,50,135,241,217,90,115,52,167,184,83,60,92,227,239,140,158,235,174,244,113,74,138,58,57,68,239,24,206,90,126,114,75,10,206,192,183,8,142,226 };
    byte_vec_t pk { 4,104,241,161,31,191,99,197,65,117,6,7,95,97,62,220,88,11,127,248,221,158,153,200,177,125,243,71,158,46,65,35,91,191,40,114,8,204,66,234,167,131,191,214,217,159,153,78,49,34,55,25,84,42,55,22,221,13,110,221,225,28,22,13,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 95 ") {
    byte_vec_t msg { 149,121,142,7 };
    byte_vec_t sig { 54,184,145,26,159,124,79,168,37,158,26,64,90,123,9,119,43,52,244,153,162,68,165,212,214,170,73,79,38,158,101,181,57,175,79,184,70,174,217,45,207,176,138,205,234,227,247,100,138,29,92,213,182,113,102,225,13,74,202,131,196,48,34,3 };
    byte_vec_t pk { 4,14,6,77,47,232,114,164,86,155,107,59,36,137,103,111,97,165,154,161,242,95,74,152,44,77,122,71,44,12,186,141,153,192,94,229,84,92,56,130,74,211,180,216,240,91,103,189,119,161,188,138,13,236,239,145,250,212,168,132,147,100,175,11,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 95 ") {
    byte_vec_t msg { 145,147,145,211 };
    byte_vec_t sig { 152,69,9,10,123,57,52,247,27,140,125,141,140,223,199,85,194,98,57,29,20,191,236,232,118,81,83,76,254,144,60,136,25,163,202,135,25,72,140,44,201,195,182,173,131,160,93,172,172,126,154,20,222,36,167,177,147,39,172,242,17,215,4,170 };
    byte_vec_t pk { 4,193,240,249,246,54,70,187,189,142,35,27,81,180,78,18,180,255,255,155,82,185,87,64,160,102,170,111,100,51,131,153,156,109,215,10,47,81,168,122,13,26,79,78,87,129,125,46,210,222,105,72,212,246,166,16,34,23,120,221,2,58,138,166,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 96 ") {
    byte_vec_t msg { 104,140,77,157 };
    byte_vec_t sig { 179,74,66,0,215,231,127,99,4,41,82,129,211,94,155,235,29,15,5,193,236,219,3,239,180,37,152,173,47,66,15,224,54,46,14,202,214,12,125,134,157,184,137,128,212,28,164,232,67,62,93,16,233,79,52,48,179,154,177,203,233,109,64,239 };
    byte_vec_t pk { 4,82,50,213,61,57,201,26,211,79,190,85,237,104,149,64,207,191,188,238,126,38,117,4,48,215,123,6,93,164,248,143,245,214,235,114,38,135,145,25,247,34,46,200,49,5,207,140,100,227,46,34,140,138,120,91,153,3,64,130,165,131,182,232,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 96 ") {
    byte_vec_t msg { 124,254,2,246 };
    byte_vec_t sig { 11,103,189,221,76,115,198,115,60,230,232,167,78,29,194,23,21,231,80,186,249,62,235,215,133,193,123,217,73,31,250,255,222,7,9,155,72,216,117,41,121,50,101,200,120,211,227,58,162,7,204,26,133,77,141,212,218,223,64,230,160,105,211,10 };
    byte_vec_t pk { 4,156,138,139,154,174,98,142,57,103,18,124,215,50,65,128,70,80,113,176,197,245,135,223,67,94,126,68,164,39,151,14,146,157,9,65,245,110,135,144,149,170,126,225,162,56,137,39,40,243,35,211,37,65,76,171,223,137,36,88,126,137,1,6,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 97 ") {
    byte_vec_t msg { 9,172,90,197 };
    byte_vec_t sig { 171,249,127,65,255,9,28,183,116,45,251,99,3,18,175,60,224,143,102,16,193,3,128,42,140,120,189,100,176,143,39,230,133,99,209,117,137,8,205,210,18,105,156,248,247,4,209,18,102,125,145,196,29,184,149,229,25,136,97,200,202,197,49,180 };
    byte_vec_t pk { 4,224,197,223,209,166,197,43,49,224,99,6,144,188,10,27,153,105,32,222,108,101,18,88,135,27,219,151,153,189,44,241,130,133,251,129,48,175,174,61,66,85,30,133,1,140,31,20,73,42,215,93,100,206,121,230,124,241,65,0,6,170,167,87,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 97 ") {
    byte_vec_t msg { 139,22,17,109 };
    byte_vec_t sig { 116,78,182,132,57,151,188,117,47,166,105,110,145,218,8,163,237,107,184,154,161,246,80,210,205,220,118,132,213,60,89,20,99,152,39,189,61,103,139,147,139,90,211,191,195,42,146,152,20,82,229,29,68,2,46,15,75,249,31,163,92,82,219,169 };
    byte_vec_t pk { 4,89,206,60,214,54,167,246,117,209,4,0,127,144,231,13,136,245,137,32,37,172,207,83,219,125,97,21,183,215,82,103,194,118,138,138,77,60,183,217,209,167,148,44,71,165,118,159,51,125,231,222,233,186,18,201,28,39,200,198,120,49,208,57,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 98 ") {
    byte_vec_t msg { 102,16,120,198 };
    byte_vec_t sig { 82,98,186,49,128,99,135,124,158,235,61,156,172,60,104,108,149,144,249,132,7,220,158,234,207,90,57,107,55,86,102,111,25,168,201,203,181,223,249,234,177,179,228,43,3,123,189,49,169,90,44,98,232,73,215,94,136,21,224,92,60,111,69,11 };
    byte_vec_t pk { 4,163,52,226,245,232,190,39,193,119,196,17,103,133,190,4,24,142,169,166,0,6,123,180,40,144,203,25,194,44,176,77,255,97,194,5,11,36,160,249,17,7,142,65,58,18,226,35,225,41,242,145,182,34,61,83,6,75,116,230,44,15,7,215,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 98 ") {
    byte_vec_t msg { 184,175,236,15 };
    byte_vec_t sig { 78,203,203,80,193,49,19,22,155,56,255,232,203,218,179,16,109,183,170,142,224,73,219,199,12,11,23,125,67,150,232,37,223,215,25,44,217,83,138,43,229,82,67,27,9,127,146,60,120,224,148,122,241,34,52,64,179,13,185,54,113,221,51,242 };
    byte_vec_t pk { 4,23,107,65,41,46,165,113,191,35,253,104,83,230,27,14,86,31,43,250,96,242,62,114,91,252,71,220,99,41,60,165,5,173,209,192,179,208,192,230,181,103,234,92,255,124,100,189,49,174,95,224,46,227,189,250,0,180,126,36,102,157,74,26,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 99 ") {
    byte_vec_t msg { 147,70,16,7 };
    byte_vec_t sig { 73,8,31,218,216,174,193,144,179,176,59,21,72,240,183,51,228,6,236,44,212,184,24,28,254,100,131,23,1,109,29,18,10,212,165,23,250,20,138,238,110,146,91,88,178,179,114,242,160,128,234,192,143,202,110,95,143,127,204,248,244,37,62,239 };
    byte_vec_t pk { 4,21,129,226,117,34,81,226,156,1,12,192,87,150,162,148,58,200,103,88,250,43,179,80,133,249,214,54,67,198,173,199,227,102,42,38,243,58,179,7,163,17,162,77,72,39,51,218,89,129,42,96,104,30,99,196,144,90,12,24,185,138,161,53,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 99 ") {
    byte_vec_t msg { 185,198,49,91 };
    byte_vec_t sig { 244,198,137,181,97,210,200,193,47,52,234,236,28,236,205,39,19,214,112,188,140,139,236,176,51,169,184,158,56,22,254,129,214,148,165,212,169,35,25,40,45,23,70,10,115,57,82,143,57,18,212,216,202,19,179,124,184,4,20,195,240,75,32,156 };
    byte_vec_t pk { 4,8,10,8,23,211,183,62,45,59,18,27,6,102,164,30,165,199,219,34,43,164,157,176,14,182,159,88,225,122,157,131,32,23,109,68,179,72,223,194,186,44,156,204,249,36,36,36,142,191,117,91,140,239,207,71,76,137,255,172,10,180,241,87,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 100 ") {
    byte_vec_t msg { 15,220,241,16 };
    byte_vec_t sig { 33,189,203,174,97,151,125,111,182,134,187,74,31,178,105,31,148,253,167,24,44,126,14,138,161,220,220,177,224,239,78,0,79,59,47,126,206,148,96,212,54,77,106,61,171,103,194,166,122,138,188,75,170,248,41,124,137,158,231,32,176,232,223,35 };
    byte_vec_t pk { 4,19,123,36,191,235,79,71,98,17,53,50,85,254,201,52,55,120,171,50,92,115,152,132,15,143,107,71,250,231,205,166,208,126,196,131,165,90,214,242,235,168,19,187,53,224,0,253,209,20,167,150,168,135,214,166,216,29,92,196,213,93,73,165,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 100 ") {
    byte_vec_t msg { 171,121,65,117 };
    byte_vec_t sig { 60,66,215,207,227,135,180,157,225,154,135,142,226,239,18,242,80,102,84,2,24,220,95,99,161,34,196,67,124,60,166,239,183,151,227,23,17,30,121,233,160,33,121,146,116,143,241,16,202,190,136,214,116,2,6,150,228,122,167,1,154,226,135,221 };
    byte_vec_t pk { 4,153,118,183,182,53,160,238,100,111,235,139,126,251,217,26,51,114,108,210,121,204,158,77,9,203,243,67,92,2,211,157,213,132,183,138,0,85,160,55,140,67,27,172,202,190,83,200,166,20,163,180,65,52,119,167,86,129,247,13,170,216,196,104,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 101 ") {
    byte_vec_t msg { 221,147,245,161 };
    byte_vec_t sig { 86,178,52,191,48,206,95,213,127,99,42,68,131,122,162,126,100,202,185,49,15,186,9,18,140,98,84,102,227,33,48,4,211,96,169,72,2,29,132,45,253,254,120,177,211,223,50,66,224,235,203,220,124,210,62,186,48,63,126,128,27,168,251,110 };
    byte_vec_t pk { 4,184,59,212,113,6,60,137,235,96,185,250,209,168,129,98,252,178,77,212,84,204,86,134,124,68,149,74,2,155,73,51,65,6,154,252,174,176,216,224,2,49,245,124,51,246,59,147,8,107,152,28,235,16,249,154,170,133,161,44,97,250,174,137,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 101 ") {
    byte_vec_t msg { 191,119,146,221 };
    byte_vec_t sig { 186,229,130,93,26,248,103,137,216,174,13,88,225,188,125,25,227,23,129,235,46,254,61,69,148,113,50,35,210,127,165,139,246,151,248,0,201,198,2,41,24,203,103,70,245,146,103,78,229,19,105,118,195,106,201,1,11,59,125,70,193,232,233,19 };
    byte_vec_t pk { 4,184,139,173,227,120,114,160,87,66,140,27,238,148,253,97,6,177,42,71,189,58,161,86,248,24,160,75,214,83,252,161,67,176,147,225,94,101,168,160,3,95,187,130,116,112,14,175,45,181,239,91,101,22,169,99,64,206,89,232,191,37,241,100,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 102 ") {
    byte_vec_t msg { 35,236,8,26 };
    byte_vec_t sig { 55,121,98,228,146,19,49,43,236,52,182,42,28,93,75,129,34,100,216,142,6,202,153,252,143,81,104,13,94,43,88,181,216,38,132,250,86,69,125,20,236,204,166,35,141,211,72,226,240,214,109,142,175,36,208,233,88,140,20,251,108,46,91,233 };
    byte_vec_t pk { 4,149,11,255,52,230,41,169,72,177,233,160,173,195,1,242,216,233,70,243,33,153,122,254,68,36,92,159,159,21,198,69,206,192,245,94,205,237,81,42,11,5,108,40,127,208,55,160,31,153,27,77,11,242,217,41,244,131,208,208,83,215,65,71,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 102 ") {
    byte_vec_t msg { 51,216,24,192 };
    byte_vec_t sig { 12,99,177,121,93,246,218,51,154,22,153,151,183,197,138,126,71,206,167,79,223,173,73,64,86,96,49,216,58,61,111,163,139,190,11,163,196,51,63,117,68,229,133,237,232,83,122,139,28,199,191,184,31,243,210,135,53,215,218,113,124,80,228,39 };
    byte_vec_t pk { 4,112,129,0,135,215,54,35,160,74,219,106,24,58,57,249,198,207,140,246,189,91,250,250,252,231,203,231,158,207,149,198,163,93,200,40,101,218,249,210,208,110,151,59,194,165,246,210,251,158,31,9,17,114,154,215,186,139,203,245,153,114,85,204,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 103 ") {
    byte_vec_t msg { 189,40,72,188 };
    byte_vec_t sig { 225,133,82,50,214,213,30,0,161,124,126,117,106,180,234,80,83,155,65,189,236,81,84,56,133,89,122,181,181,213,167,100,111,191,206,197,3,125,25,102,32,139,196,98,133,93,80,102,24,219,193,98,250,34,166,8,134,252,208,213,113,150,61,202 };
    byte_vec_t pk { 4,1,72,252,5,116,71,103,61,29,81,31,58,24,39,110,103,120,130,27,125,198,158,211,170,254,243,64,208,67,77,123,84,176,70,24,222,3,100,86,39,90,112,189,216,189,115,217,248,208,204,44,232,16,215,158,71,237,75,131,97,205,2,3,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 103 ") {
    byte_vec_t msg { 203,24,66,183 };
    byte_vec_t sig { 152,184,0,243,186,0,114,103,14,106,251,2,131,74,183,248,153,155,124,129,248,187,10,163,185,43,245,4,201,167,51,95,183,63,47,199,35,42,81,130,122,234,220,51,91,78,97,25,158,170,130,242,104,23,103,146,162,23,35,18,239,88,157,96 };
    byte_vec_t pk { 4,102,43,68,166,78,83,158,229,41,172,57,78,216,41,252,48,84,64,17,9,196,43,47,108,49,117,103,219,117,36,59,221,221,113,19,94,33,112,11,66,235,96,198,162,242,197,10,135,211,140,16,127,230,133,136,101,21,211,185,106,136,9,188,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 104 ") {
    byte_vec_t msg { 6,251,42,54 };
    byte_vec_t sig { 243,247,127,63,41,220,18,133,17,246,43,9,138,199,168,69,143,10,92,247,20,170,32,3,145,50,165,148,50,134,16,142,149,130,18,25,206,38,234,173,186,245,197,229,101,197,166,61,20,252,250,158,39,20,2,100,149,170,185,11,158,250,97,170 };
    byte_vec_t pk { 4,137,163,210,255,108,16,210,46,204,60,184,0,234,141,28,22,101,114,237,3,114,83,38,212,148,98,21,64,153,52,243,98,240,15,146,215,75,62,62,101,199,108,93,133,26,137,199,174,51,200,174,62,212,109,139,66,66,76,33,84,183,225,108,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 104 ") {
    byte_vec_t msg { 132,255,116,251 };
    byte_vec_t sig { 16,124,140,102,115,204,200,209,195,251,174,176,198,63,78,228,235,89,104,191,226,104,213,14,71,217,25,248,184,155,143,44,84,71,100,145,199,59,168,208,53,212,247,169,232,72,124,142,15,20,249,118,85,94,169,83,116,181,20,152,182,25,167,92 };
    byte_vec_t pk { 4,34,248,109,162,108,25,254,81,36,150,135,137,67,220,165,164,60,203,243,97,53,199,247,112,177,106,52,106,70,121,231,16,0,0,120,157,212,231,158,155,91,205,122,45,227,202,177,119,243,73,95,145,209,244,51,136,195,246,131,72,94,205,131,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 105 ") {
    byte_vec_t msg { 195,60,195,185 };
    byte_vec_t sig { 126,68,253,193,162,109,141,169,247,2,246,221,105,42,141,86,66,23,31,208,239,234,207,60,81,108,50,153,132,64,173,126,64,58,95,186,191,166,218,106,44,198,91,42,239,224,220,142,201,56,98,121,6,152,221,226,252,218,132,41,151,61,212,6 };
    byte_vec_t pk { 4,240,99,150,4,171,104,4,172,53,148,179,226,10,156,69,95,93,194,126,182,86,203,143,238,205,117,249,88,96,5,238,235,248,8,165,80,139,71,156,213,210,123,87,202,188,53,219,22,155,219,211,65,211,77,233,107,65,113,123,79,98,82,69,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 105 ") {
    byte_vec_t msg { 85,196,85,36 };
    byte_vec_t sig { 148,68,72,172,248,202,53,59,101,195,139,195,55,249,249,182,109,94,160,193,126,34,141,64,249,116,106,9,244,221,181,115,215,85,120,232,223,183,194,14,119,33,250,183,161,163,79,19,196,83,246,220,88,13,104,101,39,69,85,59,188,183,31,42 };
    byte_vec_t pk { 4,71,217,205,180,179,83,196,190,151,26,222,137,123,98,185,203,141,105,53,58,8,149,198,217,142,64,107,32,64,82,241,36,195,209,23,38,43,72,12,230,177,93,41,31,72,199,137,183,159,154,246,94,107,183,48,98,81,15,14,130,213,164,148,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 106 ") {
    byte_vec_t msg { 83,80,213,66 };
    byte_vec_t sig { 68,126,171,158,72,250,166,23,117,133,42,21,31,137,109,156,86,10,242,190,207,188,229,79,250,199,215,238,99,230,63,110,227,105,255,3,112,110,211,164,20,104,167,204,95,47,106,113,63,114,209,186,159,249,251,6,23,140,113,106,63,2,72,63 };
    byte_vec_t pk { 4,144,98,99,115,150,110,84,218,130,139,204,134,61,31,198,234,13,81,139,198,86,46,178,10,187,124,93,23,220,32,77,204,210,250,93,132,247,63,169,204,72,19,87,37,240,39,242,21,215,229,210,81,14,101,32,136,205,115,252,107,22,84,175,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 106 ") {
    byte_vec_t msg { 176,46,182,156 };
    byte_vec_t sig { 55,191,222,123,119,31,253,51,208,194,143,146,223,64,118,79,140,57,218,136,27,114,107,176,70,110,114,200,98,23,125,52,166,148,214,87,79,242,182,102,35,165,167,117,133,151,121,185,92,136,38,58,171,89,112,71,181,32,46,37,242,19,127,75 };
    byte_vec_t pk { 4,58,31,76,91,86,65,146,181,45,104,191,48,190,113,43,150,149,183,121,47,7,113,141,14,67,83,111,214,155,22,60,73,49,180,250,132,234,245,225,124,199,136,38,8,208,10,159,122,168,20,190,118,132,45,197,8,113,57,14,72,232,99,116,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 107 ") {
    byte_vec_t msg { 156,189,40,51 };
    byte_vec_t sig { 191,207,177,31,51,18,38,21,96,247,103,115,142,150,226,146,55,209,237,6,20,84,80,33,193,116,182,253,82,155,72,48,85,139,155,105,11,31,125,94,241,177,195,62,200,50,175,116,97,159,185,105,237,207,149,71,104,153,114,126,25,224,223,74 };
    byte_vec_t pk { 4,109,152,177,178,231,148,158,231,171,52,71,158,224,10,32,91,76,92,239,107,68,208,70,103,27,54,18,66,155,198,49,247,146,240,206,96,147,155,32,141,217,246,58,17,178,152,178,71,92,5,4,168,204,56,11,109,153,204,142,81,29,96,131,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 107 ") {
    byte_vec_t msg { 40,54,208,1 };
    byte_vec_t sig { 94,50,192,134,148,127,22,76,206,48,46,82,245,104,209,119,19,79,138,248,95,177,15,147,44,97,71,35,209,82,249,190,50,168,58,25,153,102,95,14,11,41,163,98,249,210,104,233,1,27,69,127,19,106,84,132,74,6,170,65,124,238,150,199 };
    byte_vec_t pk { 4,27,234,171,129,2,40,142,175,131,28,129,81,22,133,252,240,153,16,121,40,243,11,116,246,114,143,254,50,238,0,29,95,14,120,68,71,18,110,82,242,16,247,199,223,188,154,97,171,62,96,91,53,239,222,32,16,181,143,237,127,142,179,182,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 108 ") {
    byte_vec_t msg { 255,18,127,144 };
    byte_vec_t sig { 181,60,46,49,98,195,97,31,48,90,90,110,92,140,244,41,39,174,47,144,63,133,128,218,105,180,229,111,58,137,255,139,189,53,88,34,232,245,109,62,149,157,146,14,232,30,123,66,65,244,22,170,96,208,31,30,30,106,123,53,85,198,142,213 };
    byte_vec_t pk { 4,227,148,91,200,23,233,118,212,53,156,242,9,154,252,163,236,149,95,86,141,70,221,188,199,243,75,127,181,192,21,253,85,229,111,111,4,81,240,101,125,194,196,116,217,230,184,224,3,131,50,72,193,78,56,61,227,214,62,78,114,65,33,51,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 108 ") {
    byte_vec_t msg { 84,255,247,253 };
    byte_vec_t sig { 239,44,177,83,137,225,163,120,27,159,151,252,37,81,171,46,92,194,15,196,148,130,13,237,200,255,116,145,187,49,169,101,246,76,194,217,107,3,180,72,11,9,162,245,121,135,244,162,153,136,254,9,41,16,62,112,227,234,76,14,173,53,122,225 };
    byte_vec_t pk { 4,17,214,14,170,62,235,23,52,66,165,74,179,146,228,211,124,180,248,102,0,144,44,65,110,24,253,233,28,32,85,102,200,137,7,162,26,129,212,144,61,185,153,57,73,92,139,38,126,129,30,198,192,240,164,197,33,5,42,53,126,148,49,0,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 109 ") {
    byte_vec_t msg { 207,86,221,193 };
    byte_vec_t sig { 104,255,46,108,59,31,212,239,61,114,9,56,228,88,234,252,164,66,152,149,11,7,235,0,169,99,90,179,87,82,50,43,150,130,97,121,190,201,231,74,61,243,180,223,80,68,55,248,248,147,83,18,53,83,48,79,44,22,28,99,139,218,214,210 };
    byte_vec_t pk { 4,135,66,229,151,210,12,79,47,34,165,232,233,203,248,247,60,216,89,178,31,116,231,148,217,74,177,55,128,175,108,120,49,31,147,55,38,102,181,102,231,207,227,232,26,77,200,88,14,100,169,212,192,140,187,234,225,100,162,222,101,22,189,48,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 109 ") {
    byte_vec_t msg { 167,28,43,1 };
    byte_vec_t sig { 209,93,12,3,41,239,249,117,169,239,100,61,46,25,165,197,241,15,82,95,163,88,198,53,119,186,116,40,237,47,180,154,113,165,131,121,167,180,18,115,44,93,180,98,231,231,168,135,150,166,169,17,242,146,4,40,28,162,192,185,59,9,170,126 };
    byte_vec_t pk { 4,129,178,156,249,10,138,5,169,143,211,36,252,192,82,233,209,53,133,97,35,122,136,105,37,16,51,194,111,35,33,108,125,219,25,152,182,208,67,60,79,215,116,76,64,61,122,201,192,76,27,246,246,28,243,126,249,18,147,9,114,219,171,251,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 110 ") {
    byte_vec_t msg { 127,5,12,56 };
    byte_vec_t sig { 119,24,52,196,27,233,15,180,227,181,97,113,215,170,151,90,226,60,59,50,74,50,112,58,173,126,7,34,206,247,43,216,150,48,1,187,2,206,242,70,119,73,218,187,79,235,135,198,253,49,216,169,134,14,247,54,255,31,80,241,142,121,74,39 };
    byte_vec_t pk { 4,64,2,58,57,253,5,18,5,175,226,173,128,174,86,110,196,154,238,83,65,103,113,94,93,182,227,133,208,67,225,185,230,47,44,90,155,68,1,203,95,214,131,1,42,28,147,109,116,59,24,50,22,115,198,146,5,6,38,179,221,175,254,30,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 110 ") {
    byte_vec_t msg { 10,59,185,148 };
    byte_vec_t sig { 72,254,120,52,57,254,51,101,109,6,159,238,221,233,31,189,91,12,210,217,112,188,24,149,249,219,73,164,202,78,165,79,231,173,87,38,168,45,12,120,222,157,13,159,248,80,21,1,195,147,251,214,49,195,118,16,177,19,241,21,217,7,21,197 };
    byte_vec_t pk { 4,152,106,61,171,86,84,253,37,2,144,110,38,92,184,54,87,137,143,85,123,63,251,233,178,197,124,74,166,189,161,161,154,45,157,223,95,150,53,217,120,179,219,83,117,90,192,71,60,45,254,222,24,79,85,229,81,128,97,242,226,227,196,31,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 111 ") {
    byte_vec_t msg { 199,94,218,212 };
    byte_vec_t sig { 131,167,99,165,99,72,245,0,43,241,119,64,156,50,89,137,127,191,65,206,111,150,17,23,243,250,176,80,178,107,74,251,223,159,202,31,252,208,15,143,72,145,175,254,84,180,201,119,102,226,161,13,149,244,106,4,1,44,41,96,162,254,206,228 };
    byte_vec_t pk { 4,152,240,77,163,200,252,69,58,82,234,75,121,70,237,147,98,159,136,121,212,204,49,16,216,111,254,21,17,35,159,97,195,254,192,15,212,227,225,82,246,130,240,242,11,132,233,88,121,33,240,8,116,201,244,60,29,243,162,150,196,108,118,238,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 111 ") {
    byte_vec_t msg { 196,238,193,152 };
    byte_vec_t sig { 251,217,172,114,209,58,58,30,28,49,160,174,229,120,73,186,129,119,37,163,81,196,95,40,41,174,8,101,104,227,247,35,18,10,163,34,104,227,158,137,70,126,129,215,221,82,176,251,90,76,139,158,79,18,61,199,74,47,158,72,228,250,93,246 };
    byte_vec_t pk { 4,90,84,148,201,40,121,80,32,138,83,229,8,138,1,37,242,94,138,180,76,53,248,89,216,213,10,83,236,137,72,136,30,193,238,192,227,122,42,122,32,82,38,241,16,19,234,145,62,121,55,59,81,174,168,6,108,53,118,6,113,254,133,130,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 112 ") {
    byte_vec_t msg { 98,24,165,163 };
    byte_vec_t sig { 117,154,149,222,236,203,230,222,27,76,32,126,54,142,222,43,163,234,157,89,235,39,67,47,13,38,206,128,26,99,24,206,70,38,241,171,23,254,100,159,213,10,129,106,106,118,240,82,168,2,61,181,98,72,242,243,115,7,198,232,204,216,122,159 };
    byte_vec_t pk { 4,160,13,195,59,241,67,143,76,105,238,121,60,174,16,142,40,175,4,221,91,58,109,11,19,250,51,98,224,25,34,37,1,245,47,83,203,19,100,92,201,226,12,6,89,26,160,8,70,43,248,179,37,24,85,38,212,170,80,55,78,129,13,15,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 112 ") {
    byte_vec_t msg { 71,51,38,151 };
    byte_vec_t sig { 175,148,58,210,117,242,122,27,191,67,38,235,182,91,151,144,117,170,55,43,137,199,234,183,20,238,99,198,119,116,158,144,31,37,102,223,152,84,185,196,152,151,108,146,185,93,3,114,19,168,42,93,172,9,177,50,249,182,203,88,106,18,5,156 };
    byte_vec_t pk { 4,241,43,43,251,47,233,238,55,155,172,87,45,60,250,40,98,78,160,74,24,204,152,241,148,4,138,183,136,35,62,233,64,120,102,101,71,77,127,176,143,151,213,137,24,22,24,117,124,20,31,144,110,201,214,116,143,51,180,82,38,133,205,24,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 113 ") {
    byte_vec_t msg { 143,84,42,247 };
    byte_vec_t sig { 133,233,209,168,169,60,55,190,26,173,36,42,123,78,158,83,120,245,30,199,204,56,180,174,210,185,148,105,168,53,170,189,120,64,217,240,105,218,217,176,255,214,89,132,198,96,61,76,23,60,20,243,75,240,94,175,250,223,9,152,83,150,120,215 };
    byte_vec_t pk { 4,1,228,130,154,168,188,171,85,230,136,255,88,40,123,30,191,193,157,67,107,132,228,86,255,83,29,135,116,11,79,161,162,50,119,129,201,114,67,66,77,137,55,64,69,87,42,39,209,49,101,37,136,245,148,220,215,183,16,120,42,234,114,67,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 113 ") {
    byte_vec_t msg { 246,126,167,171 };
    byte_vec_t sig { 60,106,182,89,119,253,212,135,51,100,223,81,160,181,138,46,134,125,176,38,28,165,137,65,251,51,4,124,140,185,26,225,98,241,149,230,178,149,39,181,218,97,214,105,148,237,163,46,246,147,185,69,226,138,112,143,13,68,95,230,2,231,55,217 };
    byte_vec_t pk { 4,184,47,109,173,228,239,10,249,197,222,233,241,167,196,250,183,43,252,105,246,254,152,246,45,162,83,243,255,70,183,165,188,87,232,173,109,241,58,253,2,31,207,72,222,63,60,50,27,73,33,184,146,74,189,207,38,204,230,127,49,107,130,218,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 114 ") {
    byte_vec_t msg { 15,145,185,151 };
    byte_vec_t sig { 82,74,149,203,108,205,5,101,106,127,198,93,183,32,116,192,130,160,109,131,26,217,93,67,226,85,248,205,99,232,107,245,189,242,212,124,92,88,23,222,55,234,224,148,36,203,144,196,66,222,36,34,91,83,89,254,165,177,43,68,212,221,211,22 };
    byte_vec_t pk { 4,193,18,36,174,162,26,61,134,50,138,68,93,255,237,160,223,80,174,201,214,165,170,68,135,215,202,115,127,103,189,229,83,171,24,133,171,155,238,94,52,51,243,18,167,8,162,183,110,142,51,125,80,14,173,183,205,46,6,114,63,251,159,198,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 114 ") {
    byte_vec_t msg { 26,61,75,38 };
    byte_vec_t sig { 59,63,212,184,164,208,88,76,102,243,44,185,66,116,46,188,247,188,212,87,110,139,117,229,175,52,243,135,99,149,84,142,92,29,138,154,20,24,2,162,248,208,6,135,16,90,19,252,11,237,210,5,157,48,166,93,166,172,25,215,201,218,104,239 };
    byte_vec_t pk { 4,31,146,211,243,11,206,149,15,60,115,218,155,78,83,92,219,5,89,194,210,84,126,235,133,13,44,214,150,40,193,149,214,27,79,9,201,244,109,121,108,76,95,107,131,124,17,56,204,3,130,5,228,120,137,229,15,214,251,178,177,97,36,12,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 115 ") {
    byte_vec_t msg { 18,212,131,191 };
    byte_vec_t sig { 234,139,153,112,58,204,229,85,122,231,56,211,103,5,9,130,129,251,137,248,145,59,42,159,182,92,3,38,156,153,70,188,34,81,3,120,33,209,11,204,35,52,228,168,174,72,97,207,99,242,11,21,140,48,201,253,115,5,236,236,101,162,57,84 };
    byte_vec_t pk { 4,146,7,242,171,12,140,214,18,225,87,64,10,209,126,173,89,98,137,142,230,65,220,144,187,210,195,35,246,134,150,116,228,83,249,71,92,134,32,129,218,114,161,139,14,89,154,107,240,129,59,113,222,235,91,1,33,62,161,92,102,184,175,201,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 115 ") {
    byte_vec_t msg { 175,22,191,149 };
    byte_vec_t sig { 216,197,176,57,93,36,204,231,168,244,181,135,75,9,165,136,145,132,7,243,120,122,237,217,181,80,193,23,53,148,185,157,118,205,155,216,52,141,48,244,218,60,53,72,165,81,239,233,167,62,30,182,1,221,37,28,49,49,56,238,59,178,86,215 };
    byte_vec_t pk { 4,91,110,131,168,198,87,91,84,130,105,127,159,102,92,169,248,27,173,87,162,181,197,76,226,52,215,245,181,70,92,235,183,240,33,101,194,86,252,68,200,108,203,229,70,17,17,187,175,66,120,146,149,231,108,43,74,122,57,197,92,8,152,114,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 116 ") {
    byte_vec_t msg { 45,129,64,179 };
    byte_vec_t sig { 9,149,11,27,211,27,116,201,101,242,194,30,237,200,249,133,58,96,227,94,242,64,203,228,182,220,236,120,182,16,159,121,57,122,165,64,212,198,226,131,132,205,182,181,57,206,192,252,55,99,154,13,183,94,214,139,102,114,250,138,248,52,76,137 };
    byte_vec_t pk { 4,134,214,75,0,184,27,190,178,94,244,43,93,110,160,152,43,8,160,186,2,150,167,100,95,154,226,114,101,42,87,61,240,173,54,197,7,45,90,165,134,49,177,14,140,24,158,177,148,40,56,194,148,217,85,119,213,25,77,102,106,116,100,115,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 116 ") {
    byte_vec_t msg { 217,3,15,169 };
    byte_vec_t sig { 234,234,105,62,148,22,213,3,211,53,29,10,180,96,225,174,48,94,76,62,76,47,138,215,193,202,184,253,38,197,244,136,200,171,254,199,26,44,14,12,111,41,193,228,150,2,47,21,66,183,78,238,114,203,65,125,138,124,84,171,246,136,152,206 };
    byte_vec_t pk { 4,31,95,250,186,32,166,30,120,28,102,131,212,164,232,180,15,92,46,116,156,148,203,163,39,22,148,147,182,248,106,119,99,173,132,54,6,162,93,127,229,118,172,83,134,164,160,154,172,218,73,44,188,164,145,227,4,13,92,131,138,185,66,156,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 117 ") {
    byte_vec_t msg { 13,73,194,119 };
    byte_vec_t sig { 219,71,134,25,181,254,125,117,220,161,89,1,230,218,248,10,98,141,10,21,129,197,177,119,172,32,221,52,103,39,198,221,150,158,165,156,189,176,23,250,209,123,54,212,217,183,182,180,121,205,2,210,43,120,158,71,224,7,93,148,56,220,215,168 };
    byte_vec_t pk { 4,124,208,86,61,180,174,97,78,86,0,197,237,151,157,77,92,56,58,181,30,128,179,160,130,177,0,53,6,108,82,33,46,124,176,176,21,66,140,55,118,41,27,30,46,241,230,109,91,212,220,47,138,180,188,57,111,161,189,86,64,239,95,114,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 117 ") {
    byte_vec_t msg { 154,242,247,22 };
    byte_vec_t sig { 248,15,19,115,71,35,35,141,9,74,47,151,56,188,226,115,21,69,159,22,238,248,152,255,5,97,104,217,193,65,209,100,39,198,170,64,181,239,93,249,148,34,211,15,99,196,58,116,148,34,183,24,112,21,93,140,154,109,122,231,110,32,71,162 };
    byte_vec_t pk { 4,231,174,5,14,46,146,215,61,144,233,208,229,231,22,22,255,250,161,63,83,82,91,75,22,92,115,171,212,76,140,136,120,203,105,238,44,79,177,202,123,132,14,249,221,184,208,118,62,222,150,213,185,175,10,211,43,176,67,107,241,0,189,229,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 118 ") {
    byte_vec_t msg { 130,254,57,118 };
    byte_vec_t sig { 120,89,37,121,28,207,19,101,191,103,253,25,96,8,201,208,196,40,109,111,9,224,1,192,178,80,54,21,64,207,5,157,28,221,129,180,247,126,82,185,114,95,143,107,216,21,177,47,116,70,45,83,157,148,205,48,215,40,218,161,161,66,69,5 };
    byte_vec_t pk { 4,50,141,249,181,160,121,49,154,18,58,127,182,187,95,165,79,55,197,137,177,244,181,175,0,56,27,105,203,207,251,61,78,142,252,225,133,139,128,20,97,254,99,77,136,221,24,164,186,233,171,77,55,189,184,152,44,130,234,111,113,204,206,133,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 118 ") {
    byte_vec_t msg { 253,95,202,229 };
    byte_vec_t sig { 155,244,19,77,19,163,46,91,150,114,34,27,225,100,240,102,196,175,38,154,30,184,241,130,250,245,160,219,206,131,197,75,137,148,131,233,254,47,182,144,161,211,56,38,45,52,25,94,184,129,52,129,143,232,216,37,0,152,22,143,6,155,120,54 };
    byte_vec_t pk { 4,234,48,66,215,111,107,106,159,112,206,184,37,197,44,104,203,125,44,222,154,172,111,153,12,238,120,189,33,129,116,68,253,28,35,141,84,203,57,149,210,165,101,158,76,16,213,90,135,104,220,189,53,34,120,90,134,104,179,16,18,182,66,189,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 119 ") {
    byte_vec_t msg { 112,245,94,11 };
    byte_vec_t sig { 63,200,61,184,25,34,32,253,121,58,47,237,118,245,145,3,72,29,141,100,53,128,12,234,119,136,122,178,64,25,8,157,157,250,14,2,137,95,133,175,161,39,71,220,196,186,177,185,51,99,26,65,49,114,139,125,96,246,91,4,100,224,161,145 };
    byte_vec_t pk { 4,49,154,27,150,230,12,65,112,43,206,92,239,189,112,207,101,55,198,94,157,9,25,108,119,2,169,245,171,102,104,19,64,159,207,200,238,80,228,176,45,218,137,255,32,247,253,105,21,234,4,111,214,18,155,63,230,226,226,208,169,102,210,26,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 119 ") {
    byte_vec_t msg { 191,22,204,242 };
    byte_vec_t sig { 238,175,191,32,217,89,84,235,51,210,103,183,227,221,58,83,184,28,38,195,63,195,243,54,181,143,10,83,152,205,54,127,174,240,110,83,30,114,209,0,206,154,58,139,60,37,101,20,179,199,98,131,97,11,45,163,156,65,97,255,24,215,29,200 };
    byte_vec_t pk { 4,170,209,33,57,41,29,84,33,7,83,248,229,1,253,231,106,38,89,147,221,192,218,149,41,176,47,236,229,121,191,36,90,44,123,142,213,16,95,234,154,242,156,216,228,65,12,51,116,201,231,239,206,101,135,64,248,231,217,132,134,33,244,185,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 120 ") {
    byte_vec_t msg { 211,199,207,32 };
    byte_vec_t sig { 97,238,168,85,98,128,93,124,216,249,194,154,43,228,209,103,145,157,22,239,76,53,142,201,102,254,175,203,115,130,26,120,24,37,172,239,190,117,225,87,234,117,223,55,85,218,220,29,213,86,104,161,38,19,55,130,35,231,48,183,186,32,104,235 };
    byte_vec_t pk { 4,66,71,166,209,50,115,22,149,3,73,174,3,4,189,6,131,159,230,90,104,21,207,147,66,115,90,84,126,115,238,236,168,146,5,123,35,95,254,61,183,236,171,160,49,21,41,58,136,226,123,8,5,115,105,150,156,127,38,144,244,253,56,167,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 120 ") {
    byte_vec_t msg { 117,54,163,28 };
    byte_vec_t sig { 205,27,48,151,49,186,197,86,41,16,226,212,117,235,73,187,133,80,54,79,23,133,87,70,249,40,147,7,38,27,59,182,245,128,33,51,170,249,176,56,101,65,48,171,67,226,215,177,126,145,155,64,7,114,138,79,64,252,195,235,90,101,72,242 };
    byte_vec_t pk { 4,28,4,105,202,9,143,55,194,23,106,5,197,149,197,82,149,146,82,202,69,12,95,126,53,26,24,53,57,24,148,249,175,216,41,83,131,0,18,29,44,215,69,184,242,27,61,80,195,138,250,44,204,40,62,229,103,28,148,193,222,224,153,215,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 121 ") {
    byte_vec_t msg { 224,119,231,147 };
    byte_vec_t sig { 50,189,249,149,79,158,174,242,250,158,0,45,202,10,136,87,204,163,89,138,210,248,100,104,88,16,216,75,21,100,245,88,115,97,148,45,222,86,34,197,37,207,210,133,245,199,62,245,50,134,68,203,211,178,35,192,80,194,200,145,103,143,134,30 };
    byte_vec_t pk { 4,147,55,155,145,187,105,33,57,87,170,175,130,93,217,48,222,74,221,220,11,47,123,184,189,234,248,157,81,226,167,254,22,113,167,67,218,35,230,154,37,53,76,40,198,5,158,241,222,248,140,192,141,70,106,218,188,15,189,125,93,7,169,140,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 121 ") {
    byte_vec_t msg { 194,69,217,154 };
    byte_vec_t sig { 181,127,181,56,77,185,152,166,72,177,20,36,121,126,158,178,140,163,238,170,92,158,37,20,147,254,6,25,22,216,235,247,2,49,134,149,131,117,45,126,118,232,32,205,42,226,188,52,73,11,221,156,242,168,80,46,194,186,175,7,70,75,5,100 };
    byte_vec_t pk { 4,16,181,197,219,14,83,227,114,105,165,152,31,186,55,93,168,124,156,68,111,177,194,106,208,235,126,185,16,213,36,46,127,93,224,101,6,48,183,199,246,150,230,190,71,90,105,62,192,70,129,104,40,213,26,24,242,54,237,13,210,232,55,33,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 122 ") {
    byte_vec_t msg { 136,230,48,151 };
    byte_vec_t sig { 178,60,37,193,191,80,254,202,26,98,50,87,121,100,185,240,69,239,160,37,94,209,233,194,240,222,60,76,128,215,1,52,108,83,179,195,161,105,184,77,9,142,184,14,221,192,8,36,72,70,142,103,220,242,103,101,48,211,136,128,89,87,64,187 };
    byte_vec_t pk { 4,71,5,122,212,94,34,118,47,52,128,6,107,182,253,160,18,96,54,94,22,80,68,80,65,0,120,196,137,238,115,90,160,242,233,61,97,114,134,233,72,173,41,91,223,243,129,113,36,43,247,135,195,251,239,250,50,26,109,25,133,67,124,175,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 122 ") {
    byte_vec_t msg { 80,210,177,37 };
    byte_vec_t sig { 225,236,47,198,192,72,41,240,153,21,129,110,217,9,204,207,248,141,142,120,99,191,190,172,142,155,37,225,146,157,112,74,165,91,186,2,1,248,239,185,65,255,129,253,216,64,33,104,59,207,133,231,1,208,52,166,16,17,186,22,156,222,224,107 };
    byte_vec_t pk { 4,104,14,24,89,32,21,77,40,220,156,236,197,184,114,115,31,206,22,91,35,123,68,23,214,83,222,69,137,51,26,55,134,129,217,119,12,247,221,224,192,241,127,199,38,204,232,62,253,232,130,161,204,79,124,89,114,173,159,49,108,9,244,104,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 123 ") {
    byte_vec_t msg { 156,93,5,165 };
    byte_vec_t sig { 222,211,36,79,68,114,80,105,105,101,199,191,211,173,71,137,227,131,127,189,99,50,63,44,26,200,104,241,171,192,89,132,224,225,26,228,80,159,102,213,108,11,214,22,242,61,105,121,29,241,42,167,13,169,145,95,91,197,213,155,29,228,131,2 };
    byte_vec_t pk { 4,248,156,15,168,152,139,33,87,77,185,127,180,135,39,196,233,66,51,129,154,36,229,253,218,131,129,78,154,75,114,140,71,134,116,255,95,127,22,241,232,128,157,186,45,27,185,209,32,116,226,194,136,54,142,18,195,68,157,111,97,171,62,85,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 123 ") {
    byte_vec_t msg { 42,141,126,189 };
    byte_vec_t sig { 232,224,90,149,10,109,81,201,79,248,179,72,249,170,61,169,137,69,106,155,183,81,251,38,136,229,67,92,138,173,161,47,57,97,23,205,196,219,162,213,238,228,150,216,185,55,40,205,47,105,19,174,24,65,227,94,248,144,99,33,70,183,6,215 };
    byte_vec_t pk { 4,203,80,221,4,170,13,41,131,112,222,205,13,157,229,0,214,170,30,247,159,90,114,192,220,1,50,111,224,87,30,176,135,228,14,83,42,141,139,244,174,50,135,91,243,73,165,146,34,113,105,17,255,245,14,87,146,216,29,154,240,25,196,61,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 124 ") {
    byte_vec_t msg { 71,99,181,190 };
    byte_vec_t sig { 65,9,83,221,103,75,41,205,237,196,22,48,111,163,67,71,132,110,104,63,158,67,150,95,147,180,65,154,57,50,184,194,227,98,184,5,86,242,32,149,104,119,138,132,87,150,179,207,11,33,21,155,7,92,219,57,59,152,69,1,134,34,225,79 };
    byte_vec_t pk { 4,189,255,110,150,92,67,242,142,20,254,24,139,2,57,30,46,14,93,139,35,179,201,8,72,82,149,9,124,159,16,47,33,107,126,1,253,17,25,4,213,103,21,31,106,109,183,134,203,21,114,244,14,200,100,215,35,107,103,227,197,129,196,35,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 124 ") {
    byte_vec_t msg { 38,144,58,85 };
    byte_vec_t sig { 129,165,242,68,218,222,70,121,87,224,135,57,197,155,191,154,106,129,30,243,188,164,82,193,188,214,13,205,8,132,89,217,175,147,171,143,127,97,209,0,119,151,98,234,59,216,215,34,125,103,137,212,204,123,18,152,110,29,37,151,239,71,237,204 };
    byte_vec_t pk { 4,109,205,42,91,227,206,22,175,170,95,225,161,15,9,140,89,201,62,155,30,61,208,51,28,132,88,226,3,87,144,91,156,237,209,6,207,18,113,168,194,69,171,26,106,202,166,218,66,140,10,226,97,33,43,10,120,175,104,154,139,78,228,85,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 125 ") {
    byte_vec_t msg { 98,125,41,173 };
    byte_vec_t sig { 244,147,88,18,139,120,106,218,110,45,178,103,79,133,203,185,133,168,162,53,250,96,77,65,68,26,187,164,193,25,167,139,153,166,109,120,142,110,158,168,206,12,115,173,35,166,13,126,80,48,39,174,178,149,54,11,71,135,183,80,187,81,48,28 };
    byte_vec_t pk { 4,205,42,35,223,165,187,101,2,43,25,204,255,196,208,159,251,1,12,161,141,67,225,89,126,169,220,96,32,240,98,42,218,173,250,134,123,64,131,72,33,171,104,92,74,229,42,252,70,49,149,176,183,140,32,129,24,138,134,215,146,109,126,97,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 125 ") {
    byte_vec_t msg { 194,107,145,162 };
    byte_vec_t sig { 33,243,22,104,133,102,236,38,226,97,34,77,46,153,236,195,129,237,58,205,59,40,244,102,15,236,225,5,36,70,70,174,232,2,143,110,181,125,21,140,92,20,8,185,209,144,228,104,210,128,77,72,134,9,23,110,195,73,59,150,199,2,202,58 };
    byte_vec_t pk { 4,151,34,38,202,43,12,79,10,107,223,99,35,83,62,128,219,248,127,10,47,179,236,38,6,105,0,8,217,95,87,23,100,189,166,76,101,247,203,190,103,52,166,122,155,21,183,102,187,106,229,216,78,58,11,216,237,173,119,32,132,166,125,72,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 126 ") {
    byte_vec_t msg { 238,79,40,149 };
    byte_vec_t sig { 126,240,44,114,16,63,68,148,46,246,152,151,77,210,53,188,242,249,210,169,11,87,213,219,200,226,194,243,20,115,3,47,56,157,216,236,129,242,114,17,49,77,62,30,140,16,122,251,202,41,114,50,88,211,235,199,199,61,198,91,154,210,238,78 };
    byte_vec_t pk { 4,73,75,202,155,122,71,142,107,34,205,151,116,180,107,120,14,130,203,112,106,85,139,24,196,1,13,33,8,217,111,79,137,156,160,90,200,156,151,237,206,213,229,223,96,50,81,165,84,251,225,111,3,169,238,111,171,199,21,118,39,163,119,55,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 126 ") {
    byte_vec_t msg { 39,73,122,133 };
    byte_vec_t sig { 251,246,200,195,25,48,239,67,176,161,219,12,116,51,10,241,149,204,114,225,209,3,142,170,170,180,203,195,143,225,196,69,112,114,211,163,8,230,214,53,98,57,238,214,189,61,128,56,236,185,52,139,34,71,41,169,174,241,102,38,74,114,172,199 };
    byte_vec_t pk { 4,202,40,185,35,24,22,35,223,28,249,45,28,136,134,59,171,61,155,160,73,8,61,45,153,121,207,78,104,96,60,111,173,189,65,156,13,204,147,244,31,199,54,116,16,127,201,188,125,150,223,177,236,234,58,157,220,63,56,249,149,204,126,80,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 127 ") {
    byte_vec_t msg { 7,72,18,151 };
    byte_vec_t sig { 153,165,89,138,219,108,116,149,66,59,92,222,192,81,137,149,205,190,166,199,199,152,199,113,214,1,101,69,120,80,126,132,148,116,209,75,100,189,173,104,57,93,119,245,47,1,39,169,9,3,233,80,164,194,2,228,131,80,40,239,49,139,186,135 };
    byte_vec_t pk { 4,230,251,72,81,203,79,241,212,49,185,165,162,195,122,53,153,137,246,207,167,137,69,198,242,73,213,221,106,62,98,47,130,88,142,179,50,148,13,222,109,210,95,222,239,88,79,46,121,196,164,24,178,98,86,247,29,146,101,33,81,228,1,33,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 127 ") {
    byte_vec_t msg { 133,200,63,239 };
    byte_vec_t sig { 147,101,245,150,199,53,247,121,5,140,96,223,245,71,84,167,8,192,37,172,22,201,160,150,87,214,53,37,167,67,123,248,141,23,25,162,231,185,53,72,97,136,66,242,128,98,46,183,49,197,242,145,219,111,152,142,102,253,241,78,80,18,147,166 };
    byte_vec_t pk { 4,141,160,31,7,5,252,11,14,61,64,172,39,192,172,170,219,96,46,67,253,170,73,96,18,198,87,237,221,170,251,43,103,93,36,200,33,177,124,159,108,216,158,21,30,224,176,255,226,22,111,216,1,215,128,52,111,227,166,196,102,234,209,78,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 128 ") {
    byte_vec_t msg { 18,167,41,120 };
    byte_vec_t sig { 252,146,44,178,95,250,210,170,47,123,82,241,88,118,164,1,73,131,111,190,162,0,62,214,210,201,38,123,84,16,12,243,233,122,214,248,78,146,60,162,112,238,50,246,38,229,29,12,35,179,129,195,216,104,213,187,173,246,67,209,205,240,204,201 };
    byte_vec_t pk { 4,153,129,88,25,131,92,150,118,76,221,142,85,164,215,241,217,156,183,0,111,96,157,0,209,126,58,109,216,43,10,228,159,189,161,99,139,176,163,117,187,153,223,221,84,32,170,137,103,186,45,25,123,64,205,120,195,161,219,40,36,170,39,146,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 128 ") {
    byte_vec_t msg { 24,105,245,137 };
    byte_vec_t sig { 41,172,134,176,154,2,48,34,99,18,68,69,183,178,183,129,211,112,4,22,34,225,227,246,49,50,33,57,111,236,110,122,237,186,62,49,115,187,165,148,195,255,26,210,191,236,178,23,153,208,57,232,16,221,165,103,149,228,72,85,138,97,110,88 };
    byte_vec_t pk { 4,69,3,172,217,88,4,103,180,131,65,156,211,116,241,245,168,244,81,9,176,156,240,86,184,234,248,205,190,243,58,195,208,25,155,117,142,86,164,15,32,191,95,125,40,130,165,234,83,202,222,11,158,196,1,220,238,236,120,79,234,56,12,124,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 129 ") {
    byte_vec_t msg { 186,70,106,181 };
    byte_vec_t sig { 200,205,242,34,61,64,94,220,42,195,48,58,24,110,210,200,63,144,61,12,118,64,251,69,167,166,213,119,131,220,78,242,237,120,21,72,211,217,30,133,7,150,31,34,170,184,195,153,210,60,47,238,228,18,16,34,210,108,164,108,108,21,85,41 };
    byte_vec_t pk { 4,51,154,128,40,166,42,33,123,59,246,194,102,51,35,166,218,28,176,62,33,128,95,97,89,162,54,126,190,241,39,241,254,37,253,226,48,189,255,176,32,194,204,242,176,155,1,198,87,46,49,88,4,192,235,127,29,224,62,239,39,160,160,149,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 129 ") {
    byte_vec_t msg { 167,27,67,220 };
    byte_vec_t sig { 242,10,137,84,80,78,163,185,23,1,42,90,170,250,27,88,189,221,195,116,165,209,20,62,137,218,139,128,179,127,6,156,8,46,45,80,229,124,108,184,16,166,233,70,245,43,23,172,121,86,52,203,138,222,55,65,108,32,97,102,192,40,181,205 };
    byte_vec_t pk { 4,219,124,143,200,70,199,89,190,80,224,174,141,145,230,238,162,149,146,155,12,11,161,163,206,111,240,25,162,243,241,198,141,72,107,232,25,0,149,121,76,136,84,158,148,148,56,136,180,180,162,40,56,96,171,140,26,190,246,15,172,231,207,232,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 130 ") {
    byte_vec_t msg { 43,182,206,214 };
    byte_vec_t sig { 213,121,121,248,114,92,239,79,198,131,91,208,53,23,60,248,39,40,50,100,24,88,222,231,148,108,211,173,156,130,243,237,215,168,188,228,115,26,223,97,165,78,245,204,185,216,51,91,131,30,232,89,215,14,153,109,190,87,57,78,119,101,230,139 };
    byte_vec_t pk { 4,235,124,159,102,136,192,52,84,36,134,69,235,91,6,44,248,69,31,56,225,165,136,44,97,185,255,187,113,123,94,37,168,70,214,205,118,127,199,16,199,253,153,34,67,81,116,136,232,252,227,91,198,101,75,200,181,208,184,88,244,203,30,186,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 130 ") {
    byte_vec_t msg { 19,7,228,185 };
    byte_vec_t sig { 245,153,201,70,64,119,195,189,136,48,124,85,56,213,171,234,87,122,129,79,58,194,71,64,94,224,182,226,149,106,220,133,32,255,249,68,192,214,43,128,23,84,219,243,210,15,255,65,52,62,71,78,226,89,209,193,33,124,214,244,220,6,182,47 };
    byte_vec_t pk { 4,188,214,237,204,50,16,159,232,174,69,109,161,20,216,99,241,222,234,79,20,181,126,56,41,15,103,180,181,112,198,126,168,199,225,39,60,80,98,38,28,27,127,54,204,9,232,218,130,232,252,133,192,20,127,50,88,138,246,215,121,242,170,203,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 131 ") {
    byte_vec_t msg { 158,90,111,136 };
    byte_vec_t sig { 177,145,191,84,82,83,158,227,248,39,16,148,33,149,225,239,152,16,130,84,98,85,136,80,230,221,84,205,197,163,161,176,242,89,30,209,129,32,170,1,83,146,59,184,217,134,242,186,49,125,94,67,123,247,63,120,86,47,191,231,148,255,12,76 };
    byte_vec_t pk { 4,154,100,133,2,91,175,99,239,139,78,251,205,52,133,38,92,72,241,123,218,19,237,155,60,177,174,119,227,9,66,48,3,18,127,82,146,62,152,216,144,166,33,132,97,97,240,116,179,247,57,184,231,12,125,125,240,2,177,186,166,203,175,77,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 131 ") {
    byte_vec_t msg { 25,221,229,114 };
    byte_vec_t sig { 47,77,131,26,65,232,207,110,25,232,0,8,82,101,63,82,5,29,188,42,176,211,226,123,14,146,158,204,210,17,4,239,4,10,78,44,206,27,182,17,8,144,122,61,86,12,14,146,0,172,66,196,6,85,91,77,47,158,115,37,117,142,221,72 };
    byte_vec_t pk { 4,59,43,139,198,245,122,68,173,248,11,173,195,130,238,137,244,110,84,57,28,183,138,15,91,47,37,130,146,167,55,152,15,187,139,253,160,50,31,66,232,76,94,169,182,83,240,20,17,50,140,228,172,185,68,54,90,212,113,42,57,155,151,51,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 132 ") {
    byte_vec_t msg { 43,65,186,249 };
    byte_vec_t sig { 199,7,245,178,87,115,4,117,48,233,31,156,27,162,241,71,73,157,205,3,11,225,80,93,8,51,86,85,212,197,229,120,232,178,169,225,62,196,246,123,33,44,60,243,152,49,232,77,182,251,88,103,129,114,120,65,197,238,104,232,88,195,129,6 };
    byte_vec_t pk { 4,230,47,81,19,24,130,85,128,23,199,216,51,189,242,23,171,134,178,68,165,206,152,225,93,134,102,223,138,160,114,96,75,70,47,177,67,160,130,105,247,197,17,146,40,68,0,23,235,249,96,48,203,84,5,82,58,222,47,85,40,153,153,8,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 132 ") {
    byte_vec_t msg { 191,158,24,5 };
    byte_vec_t sig { 62,161,120,51,234,38,28,239,183,110,37,238,73,81,24,196,70,186,173,142,120,200,175,89,154,252,38,200,95,140,129,140,2,30,109,224,108,218,179,137,18,52,53,251,233,142,82,160,11,249,115,34,233,26,137,223,101,120,133,10,127,164,17,199 };
    byte_vec_t pk { 4,136,217,187,19,82,155,111,211,49,51,167,32,41,142,166,21,142,155,232,175,167,78,194,109,53,188,180,214,228,98,170,39,32,0,4,14,20,180,16,57,65,82,109,71,121,54,188,8,251,99,122,211,69,246,17,134,42,15,88,118,156,197,182,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 133 ") {
    byte_vec_t msg { 158,101,13,171 };
    byte_vec_t sig { 248,79,42,221,162,7,41,179,207,105,86,222,106,182,101,156,18,115,142,133,16,152,71,113,52,200,210,139,8,32,43,3,121,38,151,194,140,48,247,66,106,49,191,194,48,106,226,190,244,117,176,69,228,51,248,97,172,41,78,194,241,189,49,96 };
    byte_vec_t pk { 4,115,31,212,167,114,99,49,137,219,47,90,177,34,143,174,26,183,11,231,193,76,225,211,102,164,56,34,48,221,239,224,255,249,67,94,220,252,95,7,36,189,35,6,32,237,105,227,135,97,121,161,167,38,241,164,24,119,189,147,174,198,52,126,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 133 ") {
    byte_vec_t msg { 219,184,224,22 };
    byte_vec_t sig { 195,244,53,92,235,105,213,251,19,15,224,101,54,172,74,61,128,29,218,251,211,245,22,155,7,24,88,202,41,86,38,8,132,3,62,69,145,158,146,192,191,181,216,129,6,255,168,251,100,222,176,116,52,229,92,116,248,3,204,6,152,24,11,203 };
    byte_vec_t pk { 4,92,48,148,40,244,249,60,36,218,86,16,151,163,240,37,148,255,199,208,221,29,185,214,35,29,68,175,68,254,214,108,120,129,11,167,136,108,79,241,221,126,177,235,57,76,59,73,46,173,18,235,195,101,211,85,237,88,144,152,199,65,137,174,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 134 ") {
    byte_vec_t msg { 246,81,231,183 };
    byte_vec_t sig { 109,224,189,252,222,210,238,8,253,61,65,141,4,254,29,240,213,189,119,55,206,212,182,255,160,201,176,62,224,208,68,170,225,227,161,204,218,211,155,74,114,9,143,97,105,250,176,110,210,57,5,170,136,49,41,7,114,184,75,108,49,15,185,139 };
    byte_vec_t pk { 4,247,215,195,31,161,11,66,133,17,15,184,91,153,231,10,213,105,56,138,122,22,231,149,181,40,32,210,237,5,17,47,148,185,16,103,86,171,217,190,102,213,56,133,209,212,222,14,115,135,247,139,170,206,21,122,52,139,199,49,249,15,172,18,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 134 ") {
    byte_vec_t msg { 26,134,2,115 };
    byte_vec_t sig { 155,62,140,227,211,77,172,151,222,114,253,22,118,137,44,53,105,237,32,224,250,177,197,199,58,122,127,101,111,135,125,48,176,241,189,114,111,192,15,111,145,183,56,20,99,98,10,162,92,175,148,103,20,182,94,64,227,84,115,235,43,134,82,231 };
    byte_vec_t pk { 4,124,200,73,167,6,245,190,29,185,155,14,226,22,193,230,189,224,176,242,159,58,105,46,87,139,217,202,216,12,226,186,37,210,199,37,190,79,43,191,17,214,76,242,84,178,185,224,210,156,64,84,169,105,220,32,196,189,244,172,21,180,252,0,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 135 ") {
    byte_vec_t msg { 93,190,66,154 };
    byte_vec_t sig { 26,229,114,250,251,42,154,241,22,87,118,207,51,35,234,123,19,54,97,98,87,220,239,94,1,224,158,138,149,99,130,190,107,201,172,235,134,9,153,180,52,180,184,226,46,48,170,250,242,147,132,253,52,67,13,238,175,221,15,195,106,213,119,107 };
    byte_vec_t pk { 4,59,153,47,242,158,138,11,204,88,171,237,35,160,40,253,78,170,112,169,54,162,219,156,61,14,119,96,134,54,81,147,144,247,114,22,82,153,218,8,122,225,200,156,120,255,156,30,133,183,209,143,153,142,104,174,6,82,84,105,134,13,156,127,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 135 ") {
    byte_vec_t msg { 56,41,7,238 };
    byte_vec_t sig { 39,88,41,195,86,31,254,188,53,65,252,182,100,39,157,226,187,88,0,168,97,132,112,40,30,5,91,28,183,103,188,88,39,67,82,249,243,8,104,247,201,212,48,222,18,116,51,166,252,106,56,73,110,27,71,78,238,127,44,58,200,166,128,32 };
    byte_vec_t pk { 4,252,157,111,64,197,229,249,186,248,100,196,161,51,144,232,164,16,243,110,120,89,29,173,166,153,182,173,221,54,130,140,138,188,62,222,198,226,26,171,108,103,33,129,1,141,208,249,142,111,24,19,167,44,74,201,70,28,65,129,164,218,87,236,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 136 ") {
    byte_vec_t msg { 245,190,232,242 };
    byte_vec_t sig { 158,240,182,5,99,67,107,73,223,190,148,46,6,167,105,234,192,131,95,2,121,7,231,223,88,93,189,110,191,103,22,6,228,33,12,174,194,244,156,220,179,133,138,244,17,250,245,150,237,125,59,61,18,52,240,23,59,16,98,129,39,183,180,234 };
    byte_vec_t pk { 4,30,143,231,83,56,161,218,73,131,11,67,160,113,6,230,160,52,85,2,207,78,231,79,216,58,242,26,104,138,226,177,183,49,89,54,243,96,75,14,37,168,128,31,87,237,93,171,25,16,6,64,160,156,174,162,198,128,91,214,225,209,76,173,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 136 ") {
    byte_vec_t msg { 244,73,136,27 };
    byte_vec_t sig { 14,65,211,24,110,236,214,131,9,67,46,10,223,238,188,111,178,37,191,16,186,167,59,110,183,84,232,243,173,31,52,197,58,2,123,90,243,147,2,27,249,167,122,171,80,79,253,221,31,88,54,113,251,141,73,19,89,98,238,179,141,25,20,49 };
    byte_vec_t pk { 4,175,161,122,67,132,224,2,144,188,147,82,106,140,3,226,33,103,91,184,174,188,103,185,207,125,151,240,218,127,159,143,5,251,106,109,127,139,120,164,182,23,238,64,64,46,1,162,53,94,46,245,170,27,13,27,233,223,83,154,49,117,77,173,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 137 ") {
    byte_vec_t msg { 138,89,139,86 };
    byte_vec_t sig { 150,9,169,158,6,119,249,148,91,228,192,247,90,71,246,124,143,213,250,41,66,149,225,180,96,50,50,104,71,120,179,56,143,193,40,149,232,169,215,213,245,78,132,197,4,243,34,79,38,81,82,181,74,159,219,45,13,229,93,184,0,247,135,90 };
    byte_vec_t pk { 4,41,5,133,1,188,45,237,218,69,232,21,59,212,27,77,172,105,204,189,64,104,17,2,142,215,234,200,85,199,85,138,47,226,77,221,54,172,237,50,35,11,59,225,6,203,6,164,201,200,33,243,17,248,188,154,175,86,66,119,59,163,203,114,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 137 ") {
    byte_vec_t msg { 44,153,118,49 };
    byte_vec_t sig { 246,45,232,121,108,113,54,46,31,214,85,26,58,168,248,0,85,47,95,212,177,65,207,49,199,38,188,210,227,96,252,129,90,132,2,212,31,160,133,99,151,175,161,26,215,98,225,187,252,83,23,108,202,228,94,158,246,166,186,218,127,15,100,248 };
    byte_vec_t pk { 4,223,179,165,208,242,102,230,253,22,45,2,220,229,250,251,50,104,167,111,5,254,35,146,62,233,22,176,222,135,137,207,14,157,252,33,248,171,230,101,191,97,194,71,76,32,240,120,193,153,138,246,105,94,171,165,121,252,145,126,125,99,198,159,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 138 ") {
    byte_vec_t msg { 178,91,73,86 };
    byte_vec_t sig { 219,199,82,3,83,246,215,16,14,88,91,28,138,77,175,110,233,126,46,164,88,154,126,88,46,99,29,96,188,88,59,206,183,67,84,221,218,83,57,200,41,247,224,138,157,73,115,74,237,187,251,202,202,221,131,252,116,62,246,19,109,227,12,37 };
    byte_vec_t pk { 4,88,245,28,31,147,25,183,112,245,8,236,61,5,246,182,87,225,152,69,139,46,147,138,48,106,203,76,53,75,42,164,178,148,30,55,152,61,216,74,9,50,51,223,103,169,112,245,51,130,64,232,141,216,67,111,231,180,38,244,25,48,253,238,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 138 ") {
    byte_vec_t msg { 25,64,46,115 };
    byte_vec_t sig { 43,160,145,216,84,209,126,8,128,211,9,120,163,20,240,243,153,230,107,207,125,12,171,66,68,127,58,32,231,210,105,107,180,6,128,127,238,57,76,72,245,59,85,184,236,248,50,234,142,112,214,4,122,46,252,96,152,117,205,166,84,151,22,65 };
    byte_vec_t pk { 4,157,186,42,82,30,128,26,64,117,162,39,90,84,146,4,27,254,195,136,169,168,12,242,3,162,65,4,218,36,215,213,101,177,117,49,242,148,87,127,155,112,220,28,106,234,244,164,102,179,196,198,77,76,164,61,105,64,166,131,210,124,34,74,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 139 ") {
    byte_vec_t msg { 103,3,105,49 };
    byte_vec_t sig { 26,32,245,157,184,192,214,52,186,187,252,82,45,212,198,89,196,201,254,107,248,144,14,177,174,26,232,38,172,69,243,131,143,0,63,65,130,49,130,20,87,13,12,33,43,33,77,226,174,27,143,87,44,171,119,207,22,74,62,163,10,208,62,205 };
    byte_vec_t pk { 4,96,53,154,47,95,7,220,190,95,152,216,148,44,91,39,133,42,220,222,41,173,165,103,3,10,203,159,134,126,210,66,207,189,98,84,205,161,128,14,114,165,230,129,219,42,232,77,158,61,172,12,232,179,241,141,230,200,224,11,214,98,180,228,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 139 ") {
    byte_vec_t msg { 82,199,180,8 };
    byte_vec_t sig { 119,195,187,154,56,15,206,138,99,56,0,17,32,72,142,178,108,183,14,68,241,209,155,100,64,65,234,241,158,233,197,128,52,88,242,159,67,250,38,229,40,67,213,221,195,148,188,195,197,33,102,153,136,215,117,64,199,58,125,66,23,220,170,140 };
    byte_vec_t pk { 4,9,34,169,137,195,41,34,236,183,48,132,127,27,226,164,107,247,52,21,142,85,26,212,18,254,229,3,131,220,164,39,224,138,147,3,56,176,199,136,76,186,107,0,88,146,233,42,174,36,73,81,45,241,133,204,112,163,175,21,15,99,225,39,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 140 ") {
    byte_vec_t msg { 42,226,75,23 };
    byte_vec_t sig { 103,197,105,36,162,136,84,26,214,245,29,153,2,79,163,189,55,7,211,247,88,20,222,97,56,175,118,130,217,124,163,89,62,155,7,89,134,1,157,66,135,216,5,59,129,91,236,153,25,97,110,235,79,58,66,173,239,228,243,233,202,8,20,132 };
    byte_vec_t pk { 4,59,133,115,190,3,168,27,96,91,83,48,92,169,68,74,126,183,118,246,227,251,146,239,149,179,14,20,124,140,145,113,183,218,9,100,157,0,66,183,107,152,95,243,173,30,140,60,56,142,196,5,209,242,122,113,1,29,132,251,242,25,58,247,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 140 ") {
    byte_vec_t msg { 23,89,136,92 };
    byte_vec_t sig { 102,28,37,239,104,188,59,85,254,16,116,120,227,4,163,9,236,74,75,156,227,149,18,30,255,154,106,21,209,120,124,18,236,114,232,141,200,182,208,90,97,139,15,39,41,62,196,43,121,125,16,169,122,138,104,24,129,43,60,117,122,166,200,83 };
    byte_vec_t pk { 4,138,50,214,17,182,6,75,32,86,122,196,239,218,8,186,83,94,149,136,161,160,134,128,50,173,166,9,239,49,163,172,29,102,165,187,178,95,68,197,145,61,225,60,184,64,166,58,97,19,19,212,124,143,83,200,77,94,248,12,138,206,85,123,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 141 ") {
    byte_vec_t msg { 132,244,182,218 };
    byte_vec_t sig { 201,188,175,36,60,117,10,34,127,17,145,113,248,84,235,193,237,73,224,216,116,192,181,36,100,20,102,71,174,215,39,138,146,76,134,31,243,231,54,26,82,150,102,154,124,187,46,208,91,180,143,39,0,254,208,108,127,183,22,103,25,166,152,132 };
    byte_vec_t pk { 4,56,202,139,83,174,114,181,21,56,48,90,214,8,177,185,234,177,205,168,134,96,189,199,76,92,201,128,153,24,137,218,232,136,254,171,242,151,222,24,142,233,24,122,223,221,135,143,133,96,109,94,255,104,50,8,99,182,169,29,132,58,29,148,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 141 ") {
    byte_vec_t msg { 237,241,251,212 };
    byte_vec_t sig { 197,170,135,252,84,116,50,226,164,91,216,227,202,78,194,175,130,77,75,190,60,70,65,209,15,158,194,124,135,79,128,215,25,57,63,191,212,247,209,244,216,114,110,66,89,210,171,92,18,217,51,129,83,49,13,195,79,208,176,25,231,184,137,121 };
    byte_vec_t pk { 4,137,120,98,37,67,79,64,91,182,100,185,181,239,201,241,83,226,245,175,0,97,31,229,58,97,253,228,25,142,91,242,144,34,210,23,101,47,40,85,47,157,201,178,214,254,181,44,18,56,7,209,90,124,80,121,232,44,60,99,126,227,55,63,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 142 ") {
    byte_vec_t msg { 198,105,195,234 };
    byte_vec_t sig { 78,197,191,168,99,109,89,33,8,214,65,65,4,169,244,224,58,229,162,50,85,113,28,222,159,100,197,148,65,162,61,123,159,97,130,27,76,47,169,210,24,217,161,223,60,223,219,16,143,155,83,161,163,21,84,40,140,160,52,240,206,117,154,140 };
    byte_vec_t pk { 4,34,176,255,144,140,147,247,70,126,245,127,99,126,95,14,12,10,89,102,108,95,162,79,211,131,178,247,61,230,219,68,167,21,1,159,55,193,44,113,204,227,45,2,90,227,60,53,127,133,169,241,83,138,250,139,57,2,26,102,164,238,243,227,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 142 ") {
    byte_vec_t msg { 142,158,146,133 };
    byte_vec_t sig { 54,65,73,15,201,36,255,121,5,12,194,243,99,74,20,5,127,185,65,83,85,138,171,177,93,97,44,57,85,134,196,164,199,148,237,97,1,214,238,56,64,91,112,70,121,142,188,2,125,93,111,217,199,224,204,46,93,147,64,96,163,223,75,192 };
    byte_vec_t pk { 4,201,62,247,171,132,206,9,67,32,153,197,29,197,196,114,151,96,235,132,52,242,235,172,41,199,141,228,34,140,142,15,216,132,88,156,155,136,247,104,111,195,199,59,43,162,81,208,237,111,55,250,17,196,229,158,24,154,83,24,206,240,8,246,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 143 ") {
    byte_vec_t msg { 28,175,223,154 };
    byte_vec_t sig { 25,18,149,81,10,165,232,216,134,141,193,89,9,139,170,173,150,214,127,16,42,163,238,157,57,11,71,44,35,51,63,144,249,227,130,167,114,22,181,182,181,255,30,169,36,99,8,107,58,98,158,71,239,8,75,201,95,108,41,241,217,121,242,102 };
    byte_vec_t pk { 4,96,47,175,251,71,135,120,103,144,56,127,154,125,104,175,31,239,221,141,150,244,148,23,181,158,231,154,190,180,60,153,254,154,254,75,247,43,182,116,137,139,77,237,233,249,232,37,208,160,3,9,205,140,87,252,102,101,141,212,142,217,202,96,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 143 ") {
    byte_vec_t msg { 146,143,38,216 };
    byte_vec_t sig { 138,91,100,104,89,35,105,13,230,58,201,153,147,231,67,193,205,221,219,219,26,205,183,159,148,73,28,116,189,129,25,248,14,111,109,13,210,148,204,61,181,87,117,82,229,6,1,252,231,238,253,218,52,141,105,148,226,115,240,231,207,157,14,252 };
    byte_vec_t pk { 4,66,36,8,193,154,198,92,176,12,124,126,118,106,232,191,68,151,233,15,50,202,112,242,36,86,37,60,240,207,47,22,38,29,19,130,21,45,40,244,101,247,225,21,14,90,123,24,120,81,214,211,137,182,26,35,102,228,231,61,71,242,111,178,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 144 ") {
    byte_vec_t msg { 122,44,173,66 };
    byte_vec_t sig { 52,25,50,60,213,200,73,88,55,50,171,72,73,209,30,111,230,31,192,99,20,155,55,245,66,54,190,5,68,68,98,132,38,154,15,22,117,84,79,111,105,219,250,114,237,186,128,70,161,28,68,3,41,37,58,209,77,64,135,51,83,106,159,116 };
    byte_vec_t pk { 4,254,66,24,15,126,125,98,243,157,66,0,193,175,90,146,231,244,250,113,49,115,240,87,232,241,65,178,244,199,18,90,172,207,21,44,4,34,137,3,87,168,201,86,106,67,167,199,136,51,29,18,162,210,216,82,121,24,130,219,35,118,65,128,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 144 ") {
    byte_vec_t msg { 167,195,21,100 };
    byte_vec_t sig { 45,175,15,155,224,28,111,214,137,87,154,70,219,210,239,54,30,105,51,14,72,253,158,33,226,69,39,234,104,127,23,75,215,35,246,242,155,202,232,124,77,60,84,146,86,195,72,204,36,9,188,93,20,87,54,0,213,250,112,110,224,236,171,80 };
    byte_vec_t pk { 4,11,157,217,202,103,198,213,122,209,80,104,149,122,149,192,209,126,11,70,68,56,52,77,212,170,64,185,171,72,166,245,41,2,210,43,3,139,4,14,247,130,20,240,199,159,136,173,121,116,247,12,144,16,159,53,223,13,213,244,231,112,32,55,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 145 ") {
    byte_vec_t msg { 165,144,59,238 };
    byte_vec_t sig { 224,175,65,37,29,209,131,140,152,23,87,156,96,137,178,221,159,143,8,53,195,115,228,136,62,145,135,2,6,119,86,160,39,2,254,145,162,113,169,68,91,230,83,38,64,33,55,149,75,29,56,21,199,137,3,148,148,182,51,25,59,65,165,236 };
    byte_vec_t pk { 4,162,246,223,158,3,11,238,165,83,181,146,174,139,240,223,0,109,54,34,147,238,122,62,207,44,53,190,244,137,34,158,216,31,173,18,83,123,68,144,34,203,170,218,213,211,4,58,49,21,127,139,145,23,141,252,189,104,48,236,191,33,124,254,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 145 ") {
    byte_vec_t msg { 115,255,206,22 };
    byte_vec_t sig { 252,101,169,51,186,26,254,147,186,224,109,86,72,249,120,205,1,19,9,99,45,151,163,81,128,172,228,66,252,232,85,17,139,108,171,185,207,168,140,102,7,5,170,249,133,6,38,138,191,60,62,45,175,177,144,56,249,8,162,158,77,125,243,56 };
    byte_vec_t pk { 4,160,28,142,119,56,53,76,62,142,32,203,149,184,128,56,36,128,253,155,254,251,162,225,255,151,106,37,234,135,47,253,52,220,218,221,12,80,69,32,17,28,255,237,6,20,95,87,252,58,102,131,177,64,63,224,119,186,142,250,111,20,188,244,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 146 ") {
    byte_vec_t msg { 246,78,155,71 };
    byte_vec_t sig { 2,50,6,25,197,50,217,139,34,124,145,123,216,46,238,120,219,238,84,18,234,64,238,33,134,64,113,76,253,30,130,30,145,229,183,52,230,76,201,32,43,162,178,235,255,145,14,170,163,226,50,227,37,44,214,235,164,182,120,181,185,31,167,139 };
    byte_vec_t pk { 4,172,71,31,212,73,138,92,99,215,197,152,125,73,96,36,63,102,86,198,235,87,227,41,37,213,135,64,166,15,181,157,175,151,116,97,33,216,88,93,195,201,220,127,70,78,134,15,4,220,191,153,12,172,156,26,18,200,119,163,124,38,119,214,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 146 ") {
    byte_vec_t msg { 72,118,70,87 };
    byte_vec_t sig { 167,14,181,44,97,113,2,87,141,178,7,177,177,47,238,25,218,123,230,182,77,211,234,148,187,3,188,255,18,237,168,71,247,143,166,164,0,69,68,210,31,47,158,200,254,118,73,242,102,238,180,172,89,119,169,231,226,151,188,89,174,226,78,170 };
    byte_vec_t pk { 4,207,155,113,171,173,210,163,89,28,70,73,0,234,153,129,145,179,230,241,96,90,27,46,9,16,5,17,119,98,251,92,176,9,254,183,104,33,2,188,32,197,117,113,58,174,124,213,86,177,206,105,247,149,5,131,26,171,114,215,188,49,123,53,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 147 ") {
    byte_vec_t msg { 99,197,214,175 };
    byte_vec_t sig { 18,100,83,99,231,164,210,9,230,158,206,49,111,175,95,0,54,162,15,41,184,48,171,123,62,233,214,187,215,212,81,238,191,170,17,39,72,89,177,134,79,98,119,224,168,42,63,225,58,200,46,210,14,182,32,180,76,131,122,155,74,121,84,57 };
    byte_vec_t pk { 4,87,1,151,184,94,186,17,214,17,159,36,137,193,84,102,161,31,19,243,76,135,128,192,5,11,139,172,74,66,86,174,220,46,145,253,33,202,83,89,42,227,70,7,164,167,97,39,75,2,140,10,85,126,203,228,226,158,107,108,201,195,157,42,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 147 ") {
    byte_vec_t msg { 171,247,248,71 };
    byte_vec_t sig { 66,182,22,13,0,201,189,203,209,118,31,51,130,132,255,19,161,118,93,67,2,43,203,4,52,157,225,31,224,191,230,6,71,15,162,148,29,49,68,176,182,135,64,39,181,208,126,207,178,85,120,119,63,32,180,211,254,237,43,42,225,33,151,16 };
    byte_vec_t pk { 4,180,139,251,234,20,82,204,75,153,174,229,14,109,86,217,121,255,137,21,213,224,153,3,141,127,24,103,23,160,95,151,48,251,16,106,3,127,211,227,232,204,169,85,136,210,7,16,5,126,91,36,86,110,101,107,253,129,48,18,62,27,69,151,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 148 ") {
    byte_vec_t msg { 34,109,238,215 };
    byte_vec_t sig { 64,128,183,233,209,168,94,205,210,86,31,107,51,172,53,249,107,55,142,164,58,226,147,166,233,236,224,50,154,232,107,151,58,99,94,133,151,111,223,25,238,185,156,177,57,28,42,142,249,71,162,120,230,26,143,107,83,35,177,185,107,28,67,87 };
    byte_vec_t pk { 4,35,137,173,175,167,177,140,232,162,26,241,123,4,216,189,163,57,156,124,163,154,165,104,159,223,80,76,183,56,98,138,16,247,51,55,239,104,26,8,166,195,179,184,3,192,147,149,63,93,87,25,45,246,137,200,190,0,78,185,252,210,186,185,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 148 ") {
    byte_vec_t msg { 223,227,212,32 };
    byte_vec_t sig { 20,226,22,176,84,17,19,181,36,228,236,164,158,230,91,248,208,126,197,148,104,207,7,67,0,216,12,1,59,199,19,199,24,46,2,65,149,37,232,216,86,7,163,182,244,241,159,169,62,227,226,27,248,169,53,142,159,53,230,18,50,221,143,247 };
    byte_vec_t pk { 4,125,96,139,124,234,151,28,52,232,57,79,124,75,36,86,197,249,231,101,160,163,71,95,169,147,220,226,110,87,251,150,61,173,188,38,47,205,224,142,161,179,28,39,171,209,5,72,20,248,238,45,125,40,136,116,43,250,27,0,160,38,33,216,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 149 ") {
    byte_vec_t msg { 17,81,5,128 };
    byte_vec_t sig { 81,167,197,69,245,9,111,111,62,241,242,183,17,8,192,224,101,143,249,118,65,129,150,19,127,156,193,141,8,59,7,130,56,80,118,117,66,8,28,178,61,206,43,73,40,196,98,225,24,21,71,110,227,163,1,183,228,10,11,104,45,235,192,25 };
    byte_vec_t pk { 4,127,45,87,105,4,110,197,141,38,252,25,240,161,227,129,24,215,34,225,222,4,131,170,98,144,161,0,11,30,183,54,80,213,125,196,23,203,162,94,63,28,142,38,24,203,9,158,134,195,235,219,65,181,116,33,146,192,192,46,181,65,124,232,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 149 ") {
    byte_vec_t msg { 163,165,241,90 };
    byte_vec_t sig { 7,117,136,16,106,21,175,129,7,59,212,182,2,47,16,55,120,141,253,187,182,187,95,80,35,158,197,145,148,33,80,40,35,35,91,114,13,60,48,30,208,222,91,59,95,94,244,245,241,41,203,22,100,162,229,12,136,99,220,166,181,77,138,230 };
    byte_vec_t pk { 4,137,20,94,170,186,136,142,86,33,95,174,250,199,195,229,78,109,166,233,105,236,90,149,123,229,5,34,80,237,242,125,235,97,161,8,21,127,127,144,53,145,125,223,24,244,20,247,24,176,55,131,152,185,20,102,78,97,31,180,253,48,94,80,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 150 ") {
    byte_vec_t msg { 215,42,246,187 };
    byte_vec_t sig { 175,239,22,192,149,38,133,229,63,94,124,105,75,100,74,238,178,213,50,39,161,230,113,184,211,248,246,234,112,191,23,206,167,119,215,225,92,212,190,131,135,21,254,61,223,75,26,198,81,156,14,215,59,132,200,207,120,2,76,87,34,251,48,195 };
    byte_vec_t pk { 4,109,159,127,75,171,203,53,38,155,173,15,153,212,254,22,111,251,148,103,155,5,19,200,253,155,224,242,86,109,141,78,122,183,21,190,201,255,12,192,60,102,220,235,185,95,182,7,42,57,186,147,176,237,135,115,167,232,150,153,6,148,228,52,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 150 ") {
    byte_vec_t msg { 18,228,119,58 };
    byte_vec_t sig { 36,164,226,108,250,192,103,53,70,84,6,128,77,45,239,126,123,236,244,59,190,249,201,147,237,149,18,174,208,55,10,223,133,46,173,215,171,187,61,247,179,224,122,181,188,234,243,252,1,75,45,132,135,30,12,102,138,10,142,93,53,176,208,16 };
    byte_vec_t pk { 4,145,216,181,103,141,126,26,6,57,11,169,47,58,8,57,150,75,36,63,14,143,127,252,102,155,151,163,226,58,66,8,178,217,203,3,112,40,51,181,90,101,66,107,190,51,13,171,135,155,113,121,144,24,63,104,11,240,149,193,54,115,231,55,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 151 ") {
    byte_vec_t msg { 169,65,40,246 };
    byte_vec_t sig { 243,192,83,88,60,255,65,62,194,91,22,168,110,171,24,81,120,223,7,221,87,80,66,248,60,210,60,201,225,182,178,151,190,31,205,228,191,230,247,38,83,155,51,207,192,39,45,251,0,30,62,241,61,215,170,121,129,7,159,20,232,45,27,159 };
    byte_vec_t pk { 4,101,135,199,148,190,203,104,180,102,224,27,175,32,183,94,44,191,69,179,213,211,152,125,141,226,96,94,68,67,29,13,125,56,101,247,119,104,199,240,8,86,244,121,40,122,53,66,138,46,155,194,226,210,29,214,40,71,210,180,26,104,88,49,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 151 ") {
    byte_vec_t msg { 185,25,234,190 };
    byte_vec_t sig { 56,134,202,208,225,45,190,129,155,52,152,176,108,196,233,8,106,39,49,154,206,116,139,160,9,96,171,134,8,199,42,52,70,166,224,173,191,197,84,90,215,27,3,154,100,183,33,147,17,155,177,117,43,208,45,117,230,225,29,17,240,177,47,192 };
    byte_vec_t pk { 4,85,44,42,200,139,29,253,21,142,126,23,122,174,178,50,142,214,40,132,35,10,29,220,83,80,165,109,151,203,159,244,245,140,165,40,125,139,197,228,185,228,60,148,107,49,5,31,59,191,239,153,254,206,14,91,53,62,251,181,228,128,140,168,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 152 ") {
    byte_vec_t msg { 60,231,146,159 };
    byte_vec_t sig { 39,13,29,113,202,69,78,189,130,73,98,229,92,24,18,248,197,45,236,64,250,19,72,251,216,173,105,162,142,34,111,245,167,89,199,94,202,242,99,17,124,228,252,253,61,215,96,98,245,226,2,124,70,16,18,234,206,173,87,151,58,200,86,73 };
    byte_vec_t pk { 4,85,138,114,112,46,89,138,215,128,35,226,115,84,3,181,168,219,94,49,56,17,149,143,23,117,15,68,218,76,31,129,255,6,138,240,41,61,204,48,21,47,134,173,17,137,77,211,75,75,55,152,33,151,54,234,18,23,132,106,32,252,137,124,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 152 ") {
    byte_vec_t msg { 7,222,252,34 };
    byte_vec_t sig { 120,82,109,183,22,66,98,196,4,18,247,158,66,9,195,254,241,241,41,69,217,253,137,78,211,45,34,233,217,179,142,198,7,24,68,121,233,176,126,115,143,99,112,49,248,156,214,1,152,221,109,28,74,30,37,130,192,67,103,216,53,93,11,29 };
    byte_vec_t pk { 4,105,172,149,109,194,183,54,55,180,172,36,205,10,93,105,3,157,128,42,48,22,195,233,252,228,91,231,62,50,193,133,15,108,237,125,145,51,36,187,227,152,6,208,232,36,62,95,25,249,218,146,12,99,121,146,113,83,85,236,179,146,132,73,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 153 ") {
    byte_vec_t msg { 86,213,164,194 };
    byte_vec_t sig { 60,3,91,128,54,237,95,25,179,146,233,162,5,221,130,210,225,135,67,138,32,13,111,211,254,69,46,49,8,224,24,141,12,58,23,125,189,179,97,179,222,239,40,205,192,121,92,119,52,216,214,215,72,207,9,206,127,168,48,229,253,107,37,237 };
    byte_vec_t pk { 4,7,182,124,70,7,153,71,204,180,238,9,128,103,145,255,161,95,67,12,195,191,183,195,250,21,128,197,218,37,30,172,198,205,12,216,79,219,50,179,79,137,194,237,18,79,113,165,165,244,89,44,115,68,165,144,189,247,131,42,19,96,54,61,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 153 ") {
    byte_vec_t msg { 13,201,95,20 };
    byte_vec_t sig { 254,215,30,74,214,66,56,175,166,228,10,23,130,115,169,128,7,32,28,119,212,88,26,11,219,56,193,186,28,184,245,9,157,80,240,98,15,248,94,194,166,55,165,183,22,149,84,50,238,242,208,99,127,242,34,23,36,71,156,246,231,215,98,166 };
    byte_vec_t pk { 4,125,72,189,134,123,175,162,227,61,75,128,51,97,86,169,104,163,248,227,32,178,39,249,79,37,231,202,200,66,28,244,146,34,183,142,200,143,240,179,199,71,85,102,102,20,199,84,45,173,154,247,57,49,255,167,45,239,153,137,194,165,187,98,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 154 ") {
    byte_vec_t msg { 14,216,217,219 };
    byte_vec_t sig { 80,66,190,155,241,1,194,239,250,106,227,1,218,29,235,212,194,108,4,164,179,174,6,131,253,175,139,25,241,157,198,86,167,201,193,136,178,98,125,137,178,166,2,255,52,228,181,1,61,225,134,169,94,75,8,52,104,104,213,207,34,3,212,216 };
    byte_vec_t pk { 4,228,82,36,1,99,119,64,32,61,129,46,87,20,235,132,76,196,66,124,188,59,108,239,214,251,36,218,119,93,255,250,65,41,155,48,91,131,47,154,126,24,89,38,96,205,64,199,36,165,245,36,50,218,104,7,165,85,185,25,131,193,93,155,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 154 ") {
    byte_vec_t msg { 203,159,174,125 };
    byte_vec_t sig { 18,55,10,11,50,38,197,197,200,223,18,46,245,43,231,131,114,38,61,168,26,114,146,55,123,42,56,155,113,204,180,197,32,90,200,200,115,101,67,94,152,40,68,37,114,229,157,7,194,29,126,100,218,7,23,237,181,87,9,236,184,174,40,115 };
    byte_vec_t pk { 4,220,59,195,235,29,110,157,184,26,52,218,212,40,68,175,193,133,109,182,209,5,173,108,67,175,108,208,47,129,36,147,212,131,0,95,133,234,49,228,46,118,4,38,151,83,172,84,73,3,85,43,255,254,119,164,110,88,98,108,76,207,218,29,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 155 ") {
    byte_vec_t msg { 47,67,33,48 };
    byte_vec_t sig { 176,170,195,85,40,137,28,249,208,174,60,70,62,113,229,101,169,74,243,14,118,78,211,51,61,140,154,187,127,206,94,154,249,140,189,111,241,123,19,206,239,110,154,231,105,242,165,67,20,103,21,242,139,45,54,174,170,192,17,130,147,200,107,28 };
    byte_vec_t pk { 4,255,102,37,178,215,197,231,228,19,219,219,150,247,247,223,199,65,18,159,3,101,251,226,17,151,23,216,41,70,244,27,204,31,165,100,2,177,59,178,238,217,168,189,222,50,212,213,138,17,248,244,135,105,187,99,194,151,37,15,236,168,40,161,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 155 ") {
    byte_vec_t msg { 222,110,97,252 };
    byte_vec_t sig { 103,125,76,61,74,145,38,228,117,70,36,69,235,94,120,26,238,32,239,181,105,223,98,233,60,194,188,181,139,177,5,108,183,134,206,172,193,126,21,219,156,253,152,101,76,140,172,183,125,112,169,137,224,217,99,102,83,157,90,113,131,129,4,69 };
    byte_vec_t pk { 4,176,217,189,60,66,195,252,136,6,105,60,244,197,77,142,118,221,173,71,86,216,157,71,164,132,171,45,11,82,109,31,235,233,158,170,136,93,0,53,21,178,122,96,15,92,129,73,235,92,178,109,255,161,93,145,71,50,210,117,185,60,8,114,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 156 ") {
    byte_vec_t msg { 118,166,203,202 };
    byte_vec_t sig { 38,142,236,212,160,169,211,5,166,142,218,210,12,62,248,85,209,105,153,164,160,85,136,204,162,205,17,103,207,132,150,222,99,1,209,78,112,113,37,150,186,224,142,94,229,50,105,192,251,165,39,232,226,2,248,186,241,45,53,166,64,156,102,77 };
    byte_vec_t pk { 4,98,121,233,125,47,153,42,2,114,141,72,210,255,82,43,183,92,194,222,245,124,34,138,126,81,158,90,88,4,193,92,135,186,88,104,189,201,68,49,215,150,118,166,219,24,165,79,204,223,175,92,102,115,205,61,245,18,168,46,250,176,63,24,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 156 ") {
    byte_vec_t msg { 97,236,107,224 };
    byte_vec_t sig { 250,117,240,224,149,209,93,135,189,78,54,53,37,71,214,65,182,103,53,159,42,138,122,53,204,199,209,169,8,148,59,221,100,73,134,204,151,57,136,18,2,153,154,228,201,156,203,20,44,202,30,135,244,79,5,5,12,148,145,220,17,250,35,201 };
    byte_vec_t pk { 4,178,151,245,68,120,135,134,219,121,125,150,213,137,101,203,106,95,54,237,9,29,182,148,60,104,212,202,127,106,56,3,140,139,236,255,171,113,253,213,30,78,106,140,174,166,38,137,175,135,2,96,7,61,115,23,120,102,13,17,57,183,178,244,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 157 ") {
    byte_vec_t msg { 225,107,123,49 };
    byte_vec_t sig { 247,51,151,39,222,229,228,217,25,2,165,237,68,119,104,50,138,32,124,34,64,39,110,84,220,58,98,75,204,238,37,155,95,7,127,137,190,25,94,85,238,12,181,89,196,169,245,3,253,190,74,169,232,113,135,211,63,138,227,146,185,187,32,58 };
    byte_vec_t pk { 4,53,14,200,114,190,34,80,120,84,31,243,60,169,228,238,202,23,93,149,184,226,31,85,45,87,93,37,78,164,38,106,184,92,176,251,248,81,227,67,137,191,245,178,139,204,207,72,135,125,167,190,1,181,80,202,4,208,92,16,195,212,217,56,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 157 ") {
    byte_vec_t msg { 188,121,200,116 };
    byte_vec_t sig { 232,110,118,140,83,240,37,28,201,200,255,58,122,167,139,10,14,132,7,58,176,195,50,180,233,121,80,227,125,175,64,46,215,138,58,200,43,152,116,98,191,116,99,205,34,209,160,9,114,52,20,74,75,126,241,92,228,152,206,146,253,198,0,138 };
    byte_vec_t pk { 4,21,238,216,107,20,152,69,86,60,240,121,173,204,245,74,151,119,17,103,144,220,59,249,5,56,31,185,65,206,237,199,14,12,239,205,132,240,226,8,198,198,241,92,38,210,130,14,148,64,129,248,69,123,188,158,253,127,101,87,92,180,49,76,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 158 ") {
    byte_vec_t msg { 23,2,247,73 };
    byte_vec_t sig { 17,88,187,137,217,148,151,83,121,39,8,234,138,47,208,36,67,239,104,202,168,93,9,31,200,200,6,124,173,115,202,137,124,182,179,128,187,164,64,179,145,120,235,52,159,47,253,181,66,97,44,163,181,78,204,80,10,216,92,36,213,21,111,159 };
    byte_vec_t pk { 4,160,30,59,112,244,82,89,168,192,49,245,54,180,124,213,249,224,175,138,81,4,150,5,124,119,23,114,187,106,152,151,238,119,16,105,78,177,185,166,106,24,159,224,255,188,55,146,126,172,168,216,101,173,170,23,114,227,83,100,63,83,78,119,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 158 ") {
    byte_vec_t msg { 209,82,88,189 };
    byte_vec_t sig { 127,167,152,46,149,244,173,136,59,1,84,33,71,181,237,175,77,169,10,115,104,178,111,217,94,200,59,146,106,128,141,67,170,79,208,159,41,123,235,46,143,68,78,79,21,209,247,105,8,213,234,195,19,85,226,195,172,54,227,167,68,69,163,152 };
    byte_vec_t pk { 4,31,28,54,202,109,168,30,164,155,121,40,197,69,201,140,27,44,231,82,135,233,66,69,243,184,101,250,9,193,194,106,203,230,255,84,45,177,83,109,198,223,189,133,78,118,181,228,71,182,251,148,21,161,178,48,46,30,148,129,202,173,151,25,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 159 ") {
    byte_vec_t msg { 103,115,3,147 };
    byte_vec_t sig { 67,75,145,96,62,135,177,178,126,180,50,3,62,88,150,109,65,227,34,75,70,54,251,225,61,89,217,248,184,7,34,172,109,125,52,108,191,235,200,151,3,88,130,48,18,167,28,226,201,60,134,233,162,166,96,26,117,167,99,192,25,81,17,32 };
    byte_vec_t pk { 4,116,167,68,217,164,139,21,202,109,197,124,58,75,183,118,172,208,163,236,226,163,111,121,78,207,144,81,209,22,89,249,41,164,181,220,246,244,61,189,30,196,245,232,190,81,90,97,202,116,190,159,194,100,120,112,190,249,96,207,155,47,21,101,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 159 ") {
    byte_vec_t msg { 139,94,88,203 };
    byte_vec_t sig { 236,37,194,198,104,9,31,101,254,166,73,127,185,203,11,229,55,124,132,245,50,29,77,207,211,109,251,44,201,237,202,230,137,133,79,69,57,190,238,160,218,49,148,121,220,159,124,186,148,198,239,33,41,109,171,116,102,92,184,218,130,4,120,102 };
    byte_vec_t pk { 4,4,86,183,80,52,138,0,226,17,208,147,166,150,10,148,113,47,192,144,39,227,43,41,125,87,64,244,105,169,160,92,66,104,57,172,164,1,150,196,197,146,169,244,234,191,38,69,202,228,194,155,63,162,129,70,197,147,32,253,189,102,67,17,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 160 ") {
    byte_vec_t msg { 12,168,159,4 };
    byte_vec_t sig { 103,183,26,159,88,176,64,233,35,127,220,92,215,27,184,172,124,188,30,112,232,30,247,229,7,27,223,14,250,226,235,203,218,79,74,138,122,145,205,60,203,220,133,129,94,146,45,25,35,49,191,135,167,15,241,132,216,196,28,207,97,39,220,153 };
    byte_vec_t pk { 4,75,16,186,50,19,124,174,30,144,69,58,8,216,20,42,67,46,220,165,184,202,48,151,59,215,208,5,64,59,100,242,108,163,120,187,51,252,200,42,180,71,78,113,95,242,44,104,181,146,128,192,135,242,215,255,104,80,64,76,16,197,46,244,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 160 ") {
    byte_vec_t msg { 127,111,238,222 };
    byte_vec_t sig { 57,208,15,7,25,30,17,7,197,24,92,254,21,215,124,194,116,91,181,185,242,146,77,35,59,237,210,4,120,220,121,172,77,138,1,80,78,53,25,163,22,227,148,88,83,153,25,21,46,147,214,10,187,113,9,49,135,75,213,176,89,223,0,100 };
    byte_vec_t pk { 4,250,58,36,78,71,228,196,35,246,42,168,247,99,251,110,242,156,32,216,84,25,41,52,104,67,22,244,188,229,250,244,10,208,34,222,235,220,41,199,71,217,193,69,177,158,185,148,6,4,198,151,72,177,59,123,52,245,164,112,46,176,62,83,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 161 ") {
    byte_vec_t msg { 86,121,63,192 };
    byte_vec_t sig { 239,34,19,158,239,165,81,72,53,105,172,211,144,32,185,2,148,98,104,112,100,253,229,137,194,160,63,120,1,207,71,140,68,0,72,202,223,122,207,110,117,223,236,148,42,163,225,164,83,148,240,3,53,136,252,130,249,15,186,165,82,109,238,27 };
    byte_vec_t pk { 4,53,89,60,56,54,137,130,213,148,135,131,100,148,127,111,51,99,218,67,84,177,214,76,104,129,46,197,77,186,137,78,12,215,231,213,213,135,212,98,97,250,113,8,135,102,24,59,102,7,28,198,215,24,136,164,213,224,29,234,208,84,95,243,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 161 ") {
    byte_vec_t msg { 130,131,15,13 };
    byte_vec_t sig { 138,85,162,73,153,25,24,206,234,69,183,252,111,169,14,109,178,132,192,73,83,155,162,44,123,202,150,9,91,215,192,15,83,67,13,192,191,119,30,21,187,184,99,173,14,38,255,99,144,71,63,239,253,90,225,253,205,158,255,133,64,81,172,92 };
    byte_vec_t pk { 4,110,74,138,193,242,40,231,197,242,159,1,223,27,87,214,162,221,172,222,140,245,176,113,70,35,196,145,194,79,212,128,233,227,49,68,110,52,254,83,237,65,6,12,169,128,232,86,234,128,199,45,111,158,68,21,40,155,72,87,140,253,66,208,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 162 ") {
    byte_vec_t msg { 116,57,5,126 };
    byte_vec_t sig { 1,251,173,205,36,132,231,90,77,212,34,42,91,112,113,224,72,185,210,85,152,85,29,186,255,175,43,200,86,17,203,47,57,41,51,46,160,203,46,102,2,19,243,100,232,90,27,221,29,103,198,223,235,197,59,247,83,70,67,15,53,33,146,66 };
    byte_vec_t pk { 4,87,55,171,176,120,182,69,159,41,173,65,249,128,66,103,180,145,251,50,28,74,213,169,219,199,150,214,44,12,142,86,107,163,116,15,110,58,164,88,60,96,16,74,103,224,73,13,106,239,153,0,44,58,84,58,206,198,113,7,83,146,106,104,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 162 ") {
    byte_vec_t msg { 104,92,227,210 };
    byte_vec_t sig { 21,231,61,5,24,59,180,31,49,187,166,164,180,120,56,131,50,59,49,160,11,252,71,80,221,187,156,161,138,150,183,136,7,3,93,135,155,58,66,244,22,145,203,242,132,207,118,249,35,218,27,95,159,213,32,139,193,104,201,169,195,244,175,220 };
    byte_vec_t pk { 4,212,171,63,140,171,46,40,108,92,165,120,105,246,84,157,64,183,56,236,106,253,241,15,170,173,175,194,95,189,167,186,123,215,222,45,198,78,72,243,94,66,85,175,236,108,72,180,110,16,180,113,171,192,39,68,40,243,148,241,183,157,1,57,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 163 ") {
    byte_vec_t msg { 26,124,70,46 };
    byte_vec_t sig { 62,0,160,172,61,137,164,59,214,40,29,50,150,100,174,45,71,43,66,225,203,5,20,231,255,22,155,14,217,199,33,140,247,21,161,57,122,8,68,53,2,136,67,122,19,172,86,151,211,145,201,122,171,129,232,121,72,34,90,94,144,69,157,82 };
    byte_vec_t pk { 4,32,197,144,80,229,20,104,7,175,131,26,24,81,117,40,56,166,101,250,118,63,56,54,205,230,175,16,56,198,180,246,222,232,164,111,165,152,165,117,205,11,5,10,195,185,117,213,25,159,39,69,214,35,130,49,42,16,242,102,190,13,82,146,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 163 ") {
    byte_vec_t msg { 147,195,181,167 };
    byte_vec_t sig { 31,47,213,224,87,164,37,223,207,139,159,33,158,202,101,219,187,16,80,41,117,39,159,119,154,136,251,212,202,27,119,203,90,131,148,240,103,8,51,218,239,126,164,72,2,205,52,36,117,146,34,171,68,120,246,39,94,63,232,25,56,178,165,49 };
    byte_vec_t pk { 4,164,165,103,127,128,176,90,244,254,83,238,247,162,43,75,85,46,164,169,223,198,177,115,98,238,166,251,42,170,194,8,102,32,136,113,52,135,237,1,235,214,7,25,161,98,56,8,241,203,13,214,26,158,194,93,62,250,123,32,204,30,216,197,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 164 ") {
    byte_vec_t msg { 254,167,10,223 };
    byte_vec_t sig { 107,163,202,208,237,162,235,23,27,106,226,46,75,61,28,21,142,51,61,50,44,137,194,134,96,26,19,98,116,62,120,111,36,37,74,103,239,209,171,221,41,34,250,83,197,139,211,171,151,170,203,208,122,254,160,178,22,113,36,67,207,147,215,208 };
    byte_vec_t pk { 4,104,160,95,226,175,231,56,176,192,15,154,93,163,56,68,197,238,74,76,85,108,103,3,185,235,36,36,6,171,4,76,16,176,237,82,134,239,191,250,50,203,34,170,59,203,108,72,29,94,216,187,253,177,245,221,27,252,161,14,15,216,219,130,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 164 ") {
    byte_vec_t msg { 90,13,232,97 };
    byte_vec_t sig { 24,255,3,44,45,111,120,88,227,176,45,90,222,114,194,132,45,111,148,99,171,139,227,163,23,236,41,34,14,69,120,102,159,99,74,228,28,66,168,92,128,121,114,40,111,223,61,243,213,175,71,193,83,68,63,94,117,106,223,228,30,202,170,210 };
    byte_vec_t pk { 4,46,145,225,190,131,193,87,233,196,255,221,20,254,73,127,141,7,156,37,46,102,181,239,139,91,171,185,161,187,226,228,225,239,243,103,158,187,181,58,244,180,10,118,163,65,209,45,238,37,143,90,114,192,7,184,154,110,103,155,44,162,233,107,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 165 ") {
    byte_vec_t msg { 211,144,241,80 };
    byte_vec_t sig { 240,251,171,246,109,121,40,255,64,50,34,246,247,130,157,32,219,43,71,73,72,97,112,150,45,7,219,23,238,82,37,51,170,25,141,8,231,125,157,141,85,107,177,66,120,135,159,74,222,89,213,184,179,190,75,98,247,28,214,217,1,42,225,173 };
    byte_vec_t pk { 4,111,24,106,244,37,149,196,254,87,39,74,215,86,240,242,247,45,195,153,188,41,80,17,185,84,116,215,177,210,104,195,15,84,115,71,103,12,204,195,234,243,84,207,72,189,50,240,234,159,161,198,20,222,193,94,87,2,161,195,188,232,89,41,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 165 ") {
    byte_vec_t msg { 132,228,79,45 };
    byte_vec_t sig { 220,196,169,49,180,39,240,10,57,6,164,176,98,131,220,159,251,108,238,200,13,110,115,174,255,52,111,101,187,63,9,210,92,19,115,213,106,193,36,106,182,169,207,246,219,121,230,152,120,89,8,29,126,170,100,100,84,87,62,77,213,87,173,189 };
    byte_vec_t pk { 4,22,52,147,146,21,248,16,1,242,98,166,7,172,174,47,33,17,125,157,27,10,74,76,63,174,59,170,237,242,123,124,182,117,4,119,138,184,133,44,216,96,11,163,28,41,211,177,16,183,101,174,100,120,203,82,86,223,137,180,4,29,227,21,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 166 ") {
    byte_vec_t msg { 248,109,238,221 };
    byte_vec_t sig { 70,59,152,137,82,3,66,4,84,200,211,182,237,78,121,60,15,184,189,37,233,140,83,16,50,54,69,18,187,210,92,67,66,45,197,123,82,227,149,112,184,93,242,127,229,164,203,65,172,105,14,233,174,43,117,10,187,161,33,214,176,40,25,43 };
    byte_vec_t pk { 4,66,231,203,211,242,154,130,121,216,112,42,8,120,223,184,10,224,181,51,168,254,137,121,209,67,90,59,71,11,189,128,240,251,81,191,31,228,185,204,120,50,133,62,65,46,236,40,82,38,10,7,253,109,253,178,114,228,252,56,73,75,136,144,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 166 ") {
    byte_vec_t msg { 55,210,254,216 };
    byte_vec_t sig { 219,69,92,100,97,254,80,116,188,163,253,101,182,146,184,183,201,16,133,97,160,105,103,75,232,226,83,254,174,232,164,34,134,67,35,16,85,95,160,57,187,158,176,0,255,201,100,151,34,32,117,206,195,120,166,64,103,56,251,229,229,31,156,71 };
    byte_vec_t pk { 4,139,184,132,122,122,62,14,169,15,7,210,89,152,98,185,200,54,155,225,75,39,82,40,25,211,199,12,123,198,91,188,71,21,159,84,204,51,15,17,214,236,47,147,99,0,31,247,113,151,9,232,218,66,104,229,114,111,195,189,79,29,140,216,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 167 ") {
    byte_vec_t msg { 232,74,133,38 };
    byte_vec_t sig { 82,233,153,232,189,57,187,219,46,76,183,12,186,224,151,109,225,183,216,139,125,6,125,121,157,2,123,90,218,10,252,224,119,182,39,112,1,156,27,59,33,141,200,182,90,254,243,141,172,57,118,32,184,138,27,208,142,216,196,52,254,189,26,12 };
    byte_vec_t pk { 4,145,65,173,25,115,203,30,198,124,123,7,64,55,220,17,136,121,22,238,203,212,185,230,0,62,36,216,71,122,40,154,74,99,166,233,102,98,243,204,165,211,241,208,12,97,56,66,242,118,200,124,171,48,60,217,118,236,42,29,68,39,152,88,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 167 ") {
    byte_vec_t msg { 193,80,159,61 };
    byte_vec_t sig { 162,46,160,65,180,157,53,176,181,127,28,222,35,9,155,36,44,240,233,203,73,72,99,108,106,10,102,120,184,179,182,171,64,16,193,148,242,242,225,241,131,218,131,21,219,255,63,128,59,192,2,128,217,95,0,77,161,229,248,44,123,129,184,28 };
    byte_vec_t pk { 4,90,146,22,140,36,223,120,238,8,4,245,102,67,158,223,76,204,71,165,121,175,22,44,63,228,98,202,209,1,18,220,224,250,27,82,92,155,177,228,137,100,226,169,32,125,122,170,252,89,55,192,191,49,90,160,198,232,173,6,43,36,92,105,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 168 ") {
    byte_vec_t msg { 218,38,5,65 };
    byte_vec_t sig { 5,229,70,225,225,163,207,176,200,96,9,155,77,221,190,159,200,29,214,132,178,105,193,99,85,182,117,174,216,16,254,198,233,86,0,230,127,228,43,3,202,92,223,7,245,127,192,223,82,38,92,134,120,51,239,39,97,155,147,39,249,183,225,144 };
    byte_vec_t pk { 4,115,231,82,0,146,89,18,229,105,208,176,10,227,77,223,2,158,92,203,67,245,252,5,95,47,187,251,140,136,234,39,90,223,116,55,4,217,44,134,52,118,167,170,206,242,52,35,225,225,201,45,170,39,200,247,67,171,163,44,234,199,78,80,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 168 ") {
    byte_vec_t msg { 116,77,88,106 };
    byte_vec_t sig { 220,87,231,92,183,109,83,30,194,56,56,192,44,245,126,46,117,93,30,79,182,32,99,153,4,83,144,10,62,74,170,248,127,220,78,58,198,107,166,25,182,239,118,25,89,212,207,66,203,221,230,154,216,134,132,195,178,224,167,180,178,123,109,3 };
    byte_vec_t pk { 4,235,34,105,150,216,175,9,37,168,44,139,104,254,155,166,231,120,90,222,236,61,201,111,35,191,93,21,238,15,89,145,140,22,40,61,52,225,253,231,69,231,122,52,136,215,46,135,183,90,135,227,78,61,23,73,171,26,178,224,94,54,173,162,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 169 ") {
    byte_vec_t msg { 189,85,253,92 };
    byte_vec_t sig { 193,79,48,155,144,129,174,70,59,248,153,146,251,201,222,92,76,212,66,47,10,42,24,192,153,141,150,203,119,176,0,207,28,111,80,235,30,147,81,200,80,15,199,177,213,222,101,215,126,216,153,93,16,225,106,198,149,159,118,35,65,196,52,195 };
    byte_vec_t pk { 4,220,5,184,71,157,196,28,228,8,216,237,192,44,116,20,69,230,95,137,191,247,115,43,160,72,85,194,180,72,92,53,79,236,102,142,158,218,81,21,93,131,3,217,130,67,220,102,225,243,209,20,117,51,251,10,29,217,193,246,189,102,113,188,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 169 ") {
    byte_vec_t msg { 30,7,50,189 };
    byte_vec_t sig { 59,83,178,71,133,53,151,110,142,100,24,201,18,186,5,169,138,65,61,174,132,113,123,20,241,37,60,198,195,7,189,14,170,39,48,82,78,154,118,47,32,124,74,152,36,1,135,165,47,236,141,44,165,65,53,108,101,54,144,23,157,46,122,78 };
    byte_vec_t pk { 4,162,28,133,62,140,246,111,100,97,97,75,76,79,66,57,126,41,74,35,26,166,64,130,161,139,25,145,225,5,132,15,20,175,204,2,217,102,228,79,103,115,136,16,196,162,55,239,4,140,5,7,218,103,161,128,248,233,212,96,1,192,254,39,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 170 ") {
    byte_vec_t msg { 27,229,19,185 };
    byte_vec_t sig { 118,170,38,96,142,210,116,2,248,252,227,222,74,113,185,74,216,152,17,72,188,120,196,124,74,129,61,37,2,229,250,245,187,150,69,190,249,182,84,29,248,228,95,96,98,207,96,67,107,43,114,250,149,22,47,154,89,241,233,217,174,194,104,220 };
    byte_vec_t pk { 4,198,197,248,129,112,41,19,19,184,78,139,76,243,85,176,208,83,252,219,239,250,33,55,21,81,126,102,234,114,82,96,192,183,71,151,37,139,70,226,111,222,142,115,67,130,131,128,5,56,62,183,108,221,66,135,31,110,180,78,8,105,215,171,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 170 ") {
    byte_vec_t msg { 215,217,119,85 };
    byte_vec_t sig { 36,119,148,225,71,96,251,120,69,112,92,19,29,223,202,23,34,143,213,181,70,217,211,106,73,225,178,115,219,59,40,228,125,72,76,118,97,14,57,225,40,81,211,161,116,69,195,36,104,187,255,105,19,218,254,39,219,232,64,102,73,243,96,170 };
    byte_vec_t pk { 4,30,75,181,75,102,87,201,34,243,97,175,151,105,47,208,198,75,209,197,58,54,95,3,154,111,24,114,105,20,127,27,92,61,28,197,138,152,143,239,61,179,166,111,38,194,150,240,255,231,129,45,50,216,4,102,248,151,213,161,179,62,172,215,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 171 ") {
    byte_vec_t msg { 88,135,107,254 };
    byte_vec_t sig { 107,140,59,129,126,84,95,79,207,136,173,39,236,233,157,229,186,95,69,67,209,61,206,134,46,89,0,91,214,31,145,25,170,251,72,75,253,156,1,134,68,5,23,249,86,104,22,207,218,78,197,103,75,61,144,138,32,118,247,83,103,20,226,194 };
    byte_vec_t pk { 4,254,6,200,125,191,237,22,71,5,108,21,32,168,64,59,212,228,162,20,10,25,106,203,105,178,38,36,27,214,183,69,35,80,102,237,112,27,28,222,5,59,241,48,23,229,82,240,231,62,64,180,159,78,251,249,152,128,146,48,111,25,67,163,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 171 ") {
    byte_vec_t msg { 58,237,201,110 };
    byte_vec_t sig { 46,166,196,190,250,218,35,193,57,26,244,27,133,204,25,111,16,123,37,204,204,71,40,137,213,84,221,147,175,9,79,221,203,138,148,227,255,233,27,228,192,48,93,40,3,69,38,133,118,148,33,149,118,193,229,132,241,204,115,150,135,196,96,15 };
    byte_vec_t pk { 4,172,8,75,235,224,129,128,142,227,18,51,214,2,130,61,197,145,16,233,82,130,243,16,246,94,240,29,167,10,206,202,58,213,43,136,0,91,118,12,202,23,40,17,156,111,115,50,210,153,144,89,171,95,13,75,77,213,198,252,86,120,229,133,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 172 ") {
    byte_vec_t msg { 192,64,162,189 };
    byte_vec_t sig { 201,220,230,19,34,200,253,96,235,120,191,94,30,224,29,99,95,245,64,72,139,1,206,187,82,37,31,167,17,176,107,77,192,188,69,38,153,152,238,156,119,42,203,174,101,38,39,212,169,70,157,59,123,62,60,222,7,233,106,116,182,239,125,220 };
    byte_vec_t pk { 4,74,121,155,78,169,203,5,246,78,129,168,121,213,179,63,216,145,237,199,112,190,23,169,245,70,122,242,9,163,105,128,51,38,201,162,19,13,192,102,16,56,88,116,216,99,66,37,182,192,129,218,224,239,101,83,202,213,120,168,133,135,59,146,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 172 ") {
    byte_vec_t msg { 138,26,164,183 };
    byte_vec_t sig { 101,251,34,82,102,128,112,144,157,235,91,205,163,72,245,106,152,9,86,129,14,211,138,16,255,49,40,147,121,124,2,94,211,96,134,5,176,73,201,230,200,208,161,18,108,149,171,39,10,226,104,80,73,104,27,52,116,57,136,237,71,105,9,241 };
    byte_vec_t pk { 4,66,192,1,230,14,219,140,207,184,179,31,88,60,97,65,87,223,81,69,92,89,200,28,142,243,165,146,128,7,212,116,142,15,185,197,95,36,35,107,81,66,128,208,203,224,157,70,58,112,160,139,50,48,63,222,61,126,214,163,3,159,86,19,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 173 ") {
    byte_vec_t msg { 224,212,81,51 };
    byte_vec_t sig { 187,12,117,27,78,121,73,16,190,25,52,250,99,180,23,133,172,46,236,66,195,75,115,21,246,78,13,174,106,173,48,247,129,231,53,88,5,118,31,235,240,34,223,232,11,34,116,130,211,122,236,197,106,169,23,126,239,152,94,174,233,136,18,202 };
    byte_vec_t pk { 4,195,104,17,20,174,157,199,93,4,227,87,139,22,140,135,153,205,119,198,249,86,18,163,156,32,151,216,147,201,221,230,235,193,69,116,127,173,117,210,102,163,19,38,49,141,110,209,51,220,240,171,52,86,52,104,92,226,244,60,24,229,1,209,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 173 ") {
    byte_vec_t msg { 139,93,197,64 };
    byte_vec_t sig { 213,211,161,171,1,142,124,210,119,230,55,109,197,143,74,161,138,66,231,81,209,44,186,250,31,3,159,66,70,207,140,103,33,98,87,214,68,123,67,117,19,51,252,141,69,247,138,167,49,123,16,35,55,114,50,128,210,119,73,197,64,140,63,92 };
    byte_vec_t pk { 4,21,49,158,9,56,154,78,124,15,81,32,37,140,72,178,88,57,158,132,7,190,177,139,183,137,243,6,185,71,116,231,252,215,244,52,111,164,229,85,124,238,72,173,209,236,223,88,255,80,127,177,4,106,167,187,61,179,173,71,188,87,109,75,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 174 ") {
    byte_vec_t msg { 36,218,251,34 };
    byte_vec_t sig { 247,229,42,238,90,61,252,35,164,130,59,92,49,206,157,154,78,29,39,204,55,111,191,149,133,36,188,216,134,143,74,203,163,140,2,49,236,16,78,130,64,63,139,26,175,181,190,207,73,58,107,87,178,137,134,230,161,63,113,135,211,59,171,215 };
    byte_vec_t pk { 4,93,176,135,3,215,50,207,205,100,244,223,74,44,184,152,41,236,33,248,75,69,202,195,112,116,104,72,214,38,97,43,111,255,31,57,228,128,108,15,185,88,31,97,172,175,187,195,81,29,116,221,103,252,220,124,54,165,130,249,63,225,163,123,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 174 ") {
    byte_vec_t msg { 171,109,49,245 };
    byte_vec_t sig { 126,78,215,139,241,76,105,196,245,117,179,39,67,235,42,240,223,223,165,10,28,195,155,152,155,27,185,96,6,51,138,57,27,89,106,225,191,174,89,5,98,155,224,7,81,146,99,89,243,178,81,73,37,99,109,168,18,15,110,39,158,198,6,98 };
    byte_vec_t pk { 4,241,148,182,129,158,125,172,145,47,255,29,225,163,165,103,32,42,153,250,95,71,15,34,228,237,13,167,119,150,32,62,110,233,171,100,119,171,182,184,253,102,3,247,145,169,214,162,108,137,116,98,189,189,48,118,63,137,153,0,227,75,246,34,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 175 ") {
    byte_vec_t msg { 43,219,19,6 };
    byte_vec_t sig { 8,36,181,129,30,126,230,20,133,131,104,175,108,92,238,89,74,67,15,86,203,234,29,48,245,145,4,185,173,70,18,172,55,73,200,109,46,61,186,237,140,56,137,6,206,60,8,155,178,2,179,225,105,255,119,55,57,53,212,21,119,226,103,196 };
    byte_vec_t pk { 4,172,13,194,196,40,245,229,250,173,126,144,133,26,72,50,146,212,219,43,15,31,155,88,50,155,213,232,89,224,193,232,84,115,244,64,140,39,212,45,71,0,180,113,224,196,73,86,216,38,44,178,201,119,78,45,239,49,3,171,245,215,150,126,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 175 ") {
    byte_vec_t msg { 51,80,17,141 };
    byte_vec_t sig { 74,220,125,19,58,223,177,222,243,176,63,30,56,119,59,53,41,167,24,76,235,48,108,247,137,111,140,234,165,242,119,3,76,12,93,239,155,251,235,242,22,54,209,245,194,62,178,241,45,78,86,172,222,53,149,121,188,219,182,137,220,31,209,174 };
    byte_vec_t pk { 4,187,20,89,215,217,146,246,84,190,17,81,195,161,10,57,228,29,242,35,214,246,20,16,128,13,246,78,141,202,82,150,197,214,96,115,238,61,131,25,158,161,110,17,206,34,85,253,41,30,230,200,38,146,154,40,242,77,180,83,89,139,91,13,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 176 ") {
    byte_vec_t msg { 87,121,136,144 };
    byte_vec_t sig { 81,248,105,202,204,107,127,144,181,244,247,121,131,83,88,54,92,33,190,11,91,255,16,170,195,61,130,93,70,12,238,78,47,9,153,11,189,141,82,154,142,39,95,139,221,21,49,243,31,22,152,29,109,39,64,144,57,21,199,135,149,68,110,21 };
    byte_vec_t pk { 4,226,74,57,72,121,114,218,73,97,53,230,26,39,170,253,128,197,101,132,225,152,145,118,16,97,124,193,82,26,69,123,82,146,73,55,146,153,112,157,182,186,246,9,237,71,69,133,136,205,242,16,132,10,93,47,250,199,74,42,141,176,151,88,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 176 ") {
    byte_vec_t msg { 116,189,96,215 };
    byte_vec_t sig { 18,25,93,144,6,245,136,89,202,172,220,220,247,253,221,111,220,255,173,4,29,148,1,250,108,45,199,170,241,119,228,50,92,79,56,40,111,99,140,146,240,3,153,242,81,107,96,205,161,119,14,87,163,119,82,180,154,59,139,43,87,174,10,95 };
    byte_vec_t pk { 4,15,34,130,143,50,247,118,72,68,198,206,95,87,41,173,21,23,27,105,111,189,58,123,134,56,135,129,178,249,64,182,28,96,14,191,149,65,2,108,168,28,149,51,132,54,50,198,197,132,118,159,192,120,138,65,73,93,47,89,205,193,113,199,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 177 ") {
    byte_vec_t msg { 227,64,249,200 };
    byte_vec_t sig { 91,248,144,168,164,78,33,46,99,217,234,149,26,16,2,90,213,243,146,238,226,244,232,68,12,58,27,211,136,97,26,11,102,174,115,145,227,199,21,111,56,157,240,230,210,51,15,25,86,180,14,118,85,11,89,163,24,155,85,101,224,0,234,94 };
    byte_vec_t pk { 4,199,190,69,159,195,217,31,220,171,129,79,128,93,192,170,244,25,209,226,173,120,147,19,132,83,99,43,111,156,102,70,125,76,28,76,215,6,192,191,13,159,199,72,237,24,67,253,7,207,79,21,172,91,186,157,252,11,255,17,254,190,10,249,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 177 ") {
    byte_vec_t msg { 133,131,137,65 };
    byte_vec_t sig { 68,98,239,66,76,16,39,106,197,30,228,24,145,23,25,215,254,87,105,107,31,8,215,218,154,32,105,187,214,107,100,236,151,183,253,119,42,142,96,219,48,49,140,197,172,170,150,119,230,210,57,81,99,187,250,4,198,187,202,25,197,221,83,155 };
    byte_vec_t pk { 4,112,185,127,168,1,188,237,229,40,7,140,201,74,10,52,242,185,124,73,207,247,120,24,59,68,108,196,3,117,88,202,255,113,194,144,89,174,216,247,45,1,178,155,94,250,176,139,125,107,52,70,66,139,185,224,217,233,44,159,238,41,37,16,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 178 ") {
    byte_vec_t msg { 85,41,105,164 };
    byte_vec_t sig { 67,59,56,47,7,81,202,224,38,61,48,156,76,121,255,242,39,87,230,118,154,200,74,128,175,89,103,95,48,224,12,10,119,142,154,156,235,227,63,207,114,85,157,48,57,40,201,150,141,99,215,99,183,139,45,21,141,43,139,246,164,173,164,121 };
    byte_vec_t pk { 4,36,7,235,198,127,225,21,230,45,45,9,214,83,73,42,9,205,113,201,229,240,123,207,65,171,68,79,136,127,207,30,99,199,144,135,36,192,0,2,24,0,27,193,47,77,142,30,41,45,53,137,78,215,3,116,158,93,149,224,140,71,25,22,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 178 ") {
    byte_vec_t msg { 142,86,78,156 };
    byte_vec_t sig { 179,53,220,191,0,89,144,54,150,214,96,84,254,221,39,113,222,47,207,62,194,167,219,68,234,200,75,215,248,199,110,222,119,35,120,37,137,25,222,159,161,113,77,236,2,132,160,119,28,86,238,133,235,77,80,161,96,23,56,253,169,222,243,27 };
    byte_vec_t pk { 4,196,238,247,30,123,212,52,0,148,90,217,27,12,82,255,193,137,62,86,174,54,50,235,225,182,147,118,94,182,98,150,250,144,132,170,99,191,135,244,223,200,197,118,222,75,177,76,64,57,29,123,125,40,20,142,222,242,157,14,204,66,187,240,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 179 ") {
    byte_vec_t msg { 60,131,70,82 };
    byte_vec_t sig { 40,44,183,61,177,34,209,234,12,197,72,188,164,30,251,196,71,133,73,196,119,78,190,174,203,128,207,60,153,115,213,234,74,232,10,121,196,136,158,48,0,170,0,35,156,194,196,29,62,24,0,1,144,88,119,231,224,211,223,36,40,66,75,126 };
    byte_vec_t pk { 4,42,105,158,206,200,210,23,50,182,30,197,158,196,14,4,251,216,175,130,44,214,41,156,119,237,47,190,210,192,215,99,12,163,92,70,9,155,147,102,193,193,102,203,47,124,23,220,72,58,54,28,19,85,150,30,192,186,32,224,110,228,44,158,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 179 ") {
    byte_vec_t msg { 62,206,68,249 };
    byte_vec_t sig { 94,161,169,108,103,120,35,123,160,210,134,215,186,141,126,41,208,171,105,194,182,11,241,233,9,118,223,101,78,137,239,8,88,211,74,155,61,140,216,33,86,122,255,187,151,113,90,25,57,56,14,115,17,180,147,191,253,169,68,173,49,76,88,48 };
    byte_vec_t pk { 4,181,252,124,180,204,48,125,175,208,102,3,226,7,85,220,191,89,34,185,174,106,112,25,145,95,252,243,16,248,117,156,255,146,194,90,215,136,243,102,250,139,212,16,180,247,195,98,178,170,66,223,207,172,144,245,73,142,69,96,198,70,113,220,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 180 ") {
    byte_vec_t msg { 20,166,201,86 };
    byte_vec_t sig { 225,21,108,16,203,147,15,11,130,228,37,246,206,243,95,147,92,38,197,232,152,73,110,185,209,66,148,185,208,134,142,52,196,28,125,219,167,220,1,200,175,176,146,89,208,186,207,196,93,236,33,134,178,251,16,142,9,35,144,217,211,225,178,47 };
    byte_vec_t pk { 4,48,108,44,254,23,212,211,69,185,29,200,179,186,119,30,109,0,248,97,253,223,202,205,151,56,121,236,175,208,142,7,250,126,75,136,56,36,122,224,16,87,201,233,221,24,172,160,195,103,178,10,3,225,88,70,106,72,157,2,189,73,102,217,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 180 ") {
    byte_vec_t msg { 148,120,193,38 };
    byte_vec_t sig { 10,100,180,201,86,131,217,242,145,127,100,127,140,101,119,191,226,47,61,233,167,104,123,28,255,147,88,9,37,160,77,60,238,39,102,185,90,20,91,243,5,14,153,236,68,151,168,2,216,179,170,102,182,172,140,204,136,229,195,37,246,59,236,80 };
    byte_vec_t pk { 4,24,81,99,27,231,232,228,246,80,85,235,192,195,98,35,240,224,48,166,37,132,18,49,72,202,206,112,226,1,116,244,214,103,222,153,134,15,99,23,16,61,149,36,72,229,66,35,195,57,29,91,108,90,160,238,144,165,204,152,48,143,125,225,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 181 ") {
    byte_vec_t msg { 122,163,164,113 };
    byte_vec_t sig { 116,108,188,145,120,71,95,163,19,13,225,11,102,99,58,90,216,114,157,118,74,217,205,212,134,145,32,82,126,214,185,211,237,2,110,134,244,45,133,59,162,207,107,59,102,96,43,72,39,233,200,253,43,210,1,105,3,29,177,159,183,27,157,42 };
    byte_vec_t pk { 4,187,190,9,63,4,158,141,145,109,34,137,159,164,116,219,174,55,122,66,40,11,180,202,8,162,125,154,113,69,59,79,43,203,251,69,90,199,244,9,42,100,191,67,238,78,6,118,238,188,239,95,18,207,230,93,182,213,79,146,255,6,48,79,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 181 ") {
    byte_vec_t msg { 85,158,78,9 };
    byte_vec_t sig { 77,85,129,182,207,174,171,78,39,179,247,109,56,26,49,156,209,99,42,33,16,16,226,239,40,167,225,19,96,124,240,117,150,252,102,18,181,30,174,50,84,149,114,109,94,155,178,143,87,141,64,168,28,59,238,210,228,246,219,123,220,165,26,81 };
    byte_vec_t pk { 4,105,96,173,31,1,131,250,26,22,180,214,91,100,178,223,102,93,51,193,229,56,75,47,228,2,228,205,61,196,83,7,165,188,100,229,234,42,234,255,184,207,192,222,189,101,131,161,30,55,149,9,149,117,89,6,114,254,197,194,116,22,2,162,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 182 ") {
    byte_vec_t msg { 95,51,247,197 };
    byte_vec_t sig { 97,27,174,53,48,130,170,159,80,205,55,110,120,44,107,80,41,20,97,48,16,103,88,191,218,46,95,236,149,24,101,181,224,172,147,50,60,127,162,106,37,102,135,247,137,21,155,199,191,237,41,147,255,38,10,29,137,209,206,66,201,178,152,235 };
    byte_vec_t pk { 4,56,80,101,69,14,231,139,199,161,62,152,25,238,171,141,146,204,214,88,74,87,95,1,246,89,11,152,148,47,188,109,224,231,176,96,136,212,156,30,120,105,19,240,24,114,115,191,92,16,153,152,236,148,35,223,40,68,166,42,212,120,131,16,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 182 ") {
    byte_vec_t msg { 8,47,177,46 };
    byte_vec_t sig { 148,177,168,72,102,146,8,109,90,233,201,188,3,0,95,200,152,210,76,121,103,249,183,199,158,70,45,87,225,203,54,45,241,223,145,228,82,191,90,5,211,113,167,240,100,153,63,80,98,1,188,24,50,21,254,195,124,2,22,65,63,151,59,38 };
    byte_vec_t pk { 4,38,78,220,4,249,9,232,254,91,122,199,240,219,199,31,18,153,188,252,91,161,216,238,125,244,108,77,82,49,215,197,202,151,189,35,114,217,226,129,155,15,222,188,23,119,101,29,186,152,239,85,173,87,191,107,157,11,232,29,204,41,240,157,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 183 ") {
    byte_vec_t msg { 234,10,186,87 };
    byte_vec_t sig { 74,142,253,2,90,74,223,230,179,254,185,33,201,9,187,253,225,64,120,88,224,90,233,32,27,248,173,30,149,119,223,85,191,159,213,54,157,244,12,146,47,117,82,67,89,62,245,7,196,79,195,196,194,37,212,38,199,248,59,32,133,25,252,153 };
    byte_vec_t pk { 4,60,246,53,12,215,184,108,122,250,22,108,29,101,117,212,19,39,97,65,44,129,3,102,216,61,113,222,168,160,1,3,174,43,115,106,159,123,173,17,208,71,217,125,18,111,215,108,65,132,219,66,93,42,156,67,205,137,72,98,188,245,106,82,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 183 ") {
    byte_vec_t msg { 154,194,132,76 };
    byte_vec_t sig { 240,69,123,95,177,7,138,249,91,126,41,29,126,253,125,82,199,207,28,46,61,117,242,17,227,15,106,17,185,158,182,46,173,196,198,149,150,73,162,41,218,29,238,110,166,58,24,70,146,167,243,161,201,8,204,69,42,237,201,147,80,137,28,116 };
    byte_vec_t pk { 4,106,72,62,135,140,235,217,184,202,254,240,175,58,222,200,253,210,87,69,119,187,76,242,15,7,218,122,149,216,218,117,175,69,163,44,246,243,156,164,238,99,67,248,58,84,111,216,122,1,234,111,44,210,107,249,53,203,71,238,132,223,121,67,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 184 ") {
    byte_vec_t msg { 195,152,111,141 };
    byte_vec_t sig { 165,195,17,241,58,115,182,193,20,198,29,128,50,168,48,12,121,103,192,127,145,122,143,143,70,227,184,7,200,158,198,118,5,137,88,180,70,115,75,76,235,105,33,97,42,197,53,204,144,71,60,210,171,216,194,200,46,149,188,108,194,223,194,210 };
    byte_vec_t pk { 4,218,92,92,49,142,68,98,222,21,96,115,80,27,85,208,151,201,64,196,102,109,231,237,124,13,173,116,185,116,155,66,33,156,16,61,189,233,101,85,26,159,116,115,154,157,113,144,175,171,68,141,50,129,181,152,131,63,22,59,173,111,214,73,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 184 ") {
    byte_vec_t msg { 147,110,88,6 };
    byte_vec_t sig { 67,47,135,23,60,123,117,212,120,152,166,74,83,235,123,78,215,91,3,124,108,65,249,179,210,184,180,45,0,9,2,52,136,185,104,97,95,31,213,80,235,169,125,185,80,247,232,30,91,30,42,198,255,47,14,94,175,109,47,92,29,131,97,91 };
    byte_vec_t pk { 4,14,253,157,255,26,94,6,5,96,189,216,28,59,80,98,73,111,52,58,64,231,139,241,169,40,120,200,12,27,191,228,63,56,127,142,180,112,252,128,252,33,121,124,113,143,172,74,15,215,69,232,5,109,186,122,126,133,212,28,67,81,138,77,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 185 ") {
    byte_vec_t msg { 223,32,162,92 };
    byte_vec_t sig { 155,79,77,201,27,177,193,251,113,52,2,247,98,80,175,183,43,71,193,28,40,92,1,254,58,217,78,208,70,39,165,219,105,114,155,214,36,190,189,6,19,104,6,97,69,34,70,68,236,85,11,197,127,154,235,161,85,68,41,239,161,83,42,213 };
    byte_vec_t pk { 4,249,47,245,169,123,6,234,118,53,7,14,77,68,116,179,1,232,29,112,66,85,168,1,185,194,44,176,45,146,191,82,20,62,60,68,82,108,99,130,144,168,251,169,225,199,183,81,109,52,181,105,11,153,117,71,184,144,3,167,81,117,166,3,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 185 ") {
    byte_vec_t msg { 145,232,142,22 };
    byte_vec_t sig { 52,124,165,170,208,54,24,198,108,113,120,9,175,65,18,88,192,245,41,244,37,106,249,197,87,105,55,112,156,83,46,245,153,166,230,102,15,181,209,212,198,5,239,52,141,140,47,26,96,1,7,13,239,19,251,181,120,216,133,60,64,38,231,111 };
    byte_vec_t pk { 4,39,13,23,73,215,92,186,148,149,35,164,118,219,49,177,51,168,24,209,2,71,156,16,0,72,187,217,65,83,69,119,205,216,215,118,190,130,4,103,104,132,141,187,152,38,249,13,56,232,30,47,55,127,194,252,177,179,139,239,101,219,173,131,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 186 ") {
    byte_vec_t msg { 252,67,131,150 };
    byte_vec_t sig { 115,127,251,56,160,195,99,29,175,77,48,250,241,8,53,205,218,125,44,138,64,238,92,36,88,25,115,5,110,98,51,160,45,17,159,110,16,253,216,151,226,41,197,128,175,209,237,205,210,217,98,210,211,69,149,50,22,245,253,105,138,32,228,182 };
    byte_vec_t pk { 4,66,67,37,157,200,77,181,126,229,131,79,241,148,236,146,116,198,9,139,196,233,109,159,41,177,79,33,4,47,159,205,53,146,133,84,180,242,91,106,53,58,62,194,130,135,119,17,203,180,152,84,172,57,18,236,177,154,34,227,170,59,129,123,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 186 ") {
    byte_vec_t msg { 53,105,128,216 };
    byte_vec_t sig { 5,195,156,110,174,33,158,1,119,102,141,194,32,150,99,33,86,205,5,48,215,186,184,190,43,152,99,116,120,26,72,76,165,126,32,139,195,91,136,74,144,171,62,108,167,143,35,152,81,31,37,51,48,132,167,200,139,254,119,126,241,128,51,118 };
    byte_vec_t pk { 4,74,106,110,142,26,195,153,199,138,246,200,8,99,118,37,156,56,58,8,23,218,224,179,133,59,105,20,169,235,33,236,226,152,164,112,240,191,215,181,101,130,107,209,135,236,112,154,124,135,132,144,184,3,80,19,219,137,153,0,85,129,124,61,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 187 ") {
    byte_vec_t msg { 39,203,27,177 };
    byte_vec_t sig { 235,115,17,7,49,45,46,151,211,216,184,145,166,11,153,17,114,219,188,116,86,144,229,67,135,177,64,80,44,55,74,205,27,17,76,40,15,73,67,245,239,65,196,66,106,82,43,61,191,31,80,83,116,208,17,52,216,47,30,128,228,140,18,55 };
    byte_vec_t pk { 4,77,193,216,142,12,163,23,231,219,115,236,170,82,75,41,57,108,240,123,16,233,88,41,251,97,132,51,93,134,70,83,74,40,68,10,152,25,252,212,108,53,14,127,129,34,197,250,173,8,221,185,244,15,139,112,14,128,186,177,128,44,140,1,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 187 ") {
    byte_vec_t msg { 227,161,215,37 };
    byte_vec_t sig { 208,107,154,183,99,53,161,37,113,130,168,171,180,83,4,220,192,194,33,120,176,224,181,219,54,159,109,48,76,115,104,116,27,52,237,235,222,158,34,69,99,39,102,93,33,81,123,64,167,112,41,55,153,34,207,131,184,200,92,162,138,45,228,78 };
    byte_vec_t pk { 4,235,56,69,151,85,68,254,242,130,46,204,87,14,194,83,161,27,199,174,226,115,153,146,104,226,19,183,85,108,128,50,242,209,164,186,1,254,67,29,194,54,190,60,64,54,28,40,99,57,71,166,164,155,202,81,106,203,20,96,105,2,123,103,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 188 ") {
    byte_vec_t msg { 250,166,131,85 };
    byte_vec_t sig { 19,42,57,108,17,100,173,93,56,109,119,92,72,249,244,58,121,5,114,241,122,152,78,253,222,33,218,107,205,78,57,25,188,187,206,222,82,17,30,42,7,213,79,200,255,240,150,72,79,18,27,171,87,129,251,67,86,130,141,162,101,6,153,56 };
    byte_vec_t pk { 4,54,55,252,211,241,194,36,31,71,113,177,235,0,203,146,141,29,237,244,174,11,13,47,116,128,190,58,205,213,169,64,155,158,93,70,113,49,175,212,15,221,140,23,57,60,24,248,70,41,122,203,82,193,26,139,113,125,208,240,58,33,0,232,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 188 ") {
    byte_vec_t msg { 103,245,168,49 };
    byte_vec_t sig { 161,174,229,116,220,195,91,249,134,253,135,148,233,227,57,120,86,235,175,239,41,151,0,254,68,105,69,217,12,254,16,245,78,231,144,246,16,141,29,83,248,183,138,251,14,79,51,144,60,63,221,64,137,155,133,161,108,49,231,191,5,114,241,127 };
    byte_vec_t pk { 4,179,166,69,214,232,133,200,121,190,127,105,127,28,93,180,197,165,62,89,40,232,42,125,72,243,41,119,4,221,63,6,144,119,105,61,124,223,216,10,15,67,113,139,154,109,39,190,35,180,181,25,150,24,39,191,108,141,217,163,9,97,149,132,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 189 ") {
    byte_vec_t msg { 129,62,75,45 };
    byte_vec_t sig { 44,21,6,4,81,109,213,192,0,85,59,210,203,95,183,36,52,238,169,190,172,91,151,253,102,45,239,43,155,100,138,94,13,28,197,139,253,185,107,167,238,225,61,80,93,68,145,4,220,145,169,40,186,178,171,238,8,105,153,5,20,106,151,106 };
    byte_vec_t pk { 4,84,220,147,234,139,29,183,46,10,141,173,152,87,197,187,208,87,68,41,163,74,107,178,188,125,200,206,116,188,206,18,250,204,126,39,115,128,180,53,82,116,79,51,185,49,24,2,135,12,215,96,61,232,234,206,150,231,71,252,255,76,116,144,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 189 ") {
    byte_vec_t msg { 20,46,225,119 };
    byte_vec_t sig { 178,67,76,6,228,72,246,193,71,253,114,161,175,116,105,117,121,237,137,129,229,8,136,227,153,22,139,46,75,202,255,30,19,67,226,34,58,44,104,235,84,82,40,31,176,98,6,171,46,145,71,166,220,255,84,54,122,173,99,12,92,230,239,27 };
    byte_vec_t pk { 4,5,142,133,148,51,23,12,116,31,193,0,118,78,59,214,164,155,67,29,143,92,151,172,195,67,124,239,70,139,253,16,250,27,161,181,150,109,209,60,238,42,150,100,39,69,46,243,155,66,79,219,103,32,181,18,177,51,78,1,157,80,88,39,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 190 ") {
    byte_vec_t msg { 16,3,129,222 };
    byte_vec_t sig { 127,116,123,92,231,105,215,46,79,204,253,10,133,18,60,24,183,99,159,247,76,69,20,248,129,207,145,210,33,128,161,238,106,46,82,232,46,54,31,211,232,144,221,8,131,17,200,46,108,149,188,234,129,181,16,244,254,216,81,247,4,110,2,134 };
    byte_vec_t pk { 4,6,48,84,182,250,174,103,161,224,246,21,20,141,202,36,153,144,190,241,40,255,38,4,244,60,3,198,138,55,199,88,64,56,93,213,109,87,216,59,97,188,106,169,168,65,152,54,29,96,139,37,29,96,58,227,110,62,185,80,208,254,188,253,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 190 ") {
    byte_vec_t msg { 28,120,133,72 };
    byte_vec_t sig { 176,58,97,72,78,199,23,89,74,59,237,226,92,176,106,69,139,248,56,109,50,46,172,207,136,251,64,54,215,224,15,106,88,40,56,75,47,23,162,0,144,10,170,97,189,64,125,187,44,34,213,231,149,24,33,180,223,135,11,236,164,214,247,163 };
    byte_vec_t pk { 4,214,137,167,30,210,255,11,34,20,140,117,87,15,158,241,149,250,235,159,75,89,81,141,156,245,235,172,47,230,208,42,191,182,52,17,147,224,30,104,159,195,39,178,118,195,60,47,167,188,156,216,135,170,48,248,211,254,38,53,172,161,254,64,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 191 ") {
    byte_vec_t msg { 116,187,13,155 };
    byte_vec_t sig { 128,0,0,15,12,77,172,124,142,215,19,243,90,187,178,248,24,32,68,148,210,146,173,212,24,171,132,34,50,14,100,38,12,155,140,103,190,249,162,210,245,232,169,42,183,34,123,201,89,115,78,111,52,53,6,18,93,136,250,192,239,224,219,163 };
    byte_vec_t pk { 4,145,130,192,157,177,228,67,33,160,219,123,164,249,198,168,165,104,239,106,162,186,131,108,49,77,142,133,186,153,45,255,190,224,49,147,115,147,24,66,30,1,15,107,64,3,217,186,217,154,154,8,58,166,24,163,250,145,191,80,66,16,247,237,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 191 ") {
    byte_vec_t msg { 124,235,96,12 };
    byte_vec_t sig { 167,164,203,120,4,247,128,19,50,202,69,23,106,157,78,251,237,21,138,11,247,196,248,123,17,36,241,139,213,228,231,87,36,250,112,107,3,123,247,244,36,108,207,132,234,112,188,105,43,106,33,229,203,176,33,254,178,142,137,235,249,149,149,81 };
    byte_vec_t pk { 4,237,222,13,184,218,216,232,245,27,174,205,202,72,133,254,187,173,167,73,207,179,242,148,115,67,190,15,164,142,227,229,211,237,57,104,133,104,249,66,65,16,162,40,247,249,208,26,247,100,40,131,148,52,180,51,224,19,195,143,124,183,33,81,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 192 ") {
    byte_vec_t msg { 187,77,167,113 };
    byte_vec_t sig { 142,54,76,140,65,191,174,189,87,172,199,181,143,116,109,241,227,156,32,234,106,149,149,183,186,176,188,243,121,32,202,127,44,221,180,126,57,50,17,203,218,131,245,13,216,240,184,225,88,185,104,69,131,96,164,125,85,168,243,198,36,82,203,69 };
    byte_vec_t pk { 4,170,203,151,230,49,97,94,128,133,143,100,2,123,147,55,150,97,89,43,199,88,26,89,143,56,4,200,152,230,5,187,79,143,72,69,247,181,29,254,224,21,69,130,196,48,201,140,0,98,163,224,88,9,49,249,181,59,230,127,145,98,71,253,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 192 ") {
    byte_vec_t msg { 196,46,106,11 };
    byte_vec_t sig { 130,81,78,165,28,87,62,136,203,235,190,81,31,40,5,96,113,61,223,207,184,72,233,77,76,243,94,108,64,254,145,242,200,104,161,140,106,12,107,219,192,217,246,147,79,197,113,167,208,59,212,15,153,253,217,147,86,43,58,162,209,237,136,88 };
    byte_vec_t pk { 4,99,231,205,53,211,37,29,72,193,210,181,144,88,109,117,248,28,161,221,219,34,99,101,168,62,56,1,35,189,217,8,200,250,103,70,255,54,3,54,156,95,103,101,6,246,170,160,225,221,71,192,114,240,166,4,116,202,36,139,179,167,137,110,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 193 ") {
    byte_vec_t msg { 177,141,237,192 };
    byte_vec_t sig { 230,146,125,191,37,34,97,219,23,238,22,153,35,189,217,218,230,164,251,193,173,245,78,44,8,0,225,245,71,255,60,19,102,75,12,246,84,30,250,21,163,236,126,241,191,120,221,80,101,179,13,242,15,106,209,134,154,81,239,193,59,235,57,88 };
    byte_vec_t pk { 4,195,209,197,71,29,7,138,114,233,31,128,174,210,141,83,209,175,45,203,110,86,127,232,4,18,192,4,148,185,3,100,162,103,248,189,160,116,178,182,100,32,125,207,72,28,67,121,62,57,23,231,247,137,192,4,221,193,246,204,209,75,215,59,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 193 ") {
    byte_vec_t msg { 91,94,144,237 };
    byte_vec_t sig { 163,74,33,96,2,98,167,9,148,4,165,79,52,147,84,228,31,20,174,56,165,78,133,0,241,181,165,139,64,44,4,87,243,135,241,244,65,183,127,162,90,48,128,166,58,91,229,223,177,92,73,172,34,20,0,201,231,156,165,44,23,248,25,50 };
    byte_vec_t pk { 4,19,118,25,240,185,40,1,245,1,167,180,130,70,178,155,141,222,210,207,101,96,123,154,151,181,254,24,96,119,123,55,175,13,60,46,29,237,70,221,107,159,159,42,150,9,234,31,214,244,105,198,97,250,111,178,35,116,222,189,221,222,56,158,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 194 ") {
    byte_vec_t msg { 207,209,7,185 };
    byte_vec_t sig { 150,132,23,192,119,60,239,24,38,199,143,166,82,100,9,189,89,163,52,99,247,243,45,157,199,113,162,115,234,50,61,142,19,37,28,113,204,147,25,22,51,136,155,105,23,179,69,197,164,43,38,39,104,27,9,61,249,6,131,142,20,245,91,109 };
    byte_vec_t pk { 4,58,233,27,92,172,39,48,173,87,89,40,162,66,51,30,124,86,80,67,73,104,117,97,217,8,176,104,184,64,132,0,136,96,236,141,184,184,91,253,61,138,221,185,23,75,110,3,118,77,14,30,146,153,194,228,197,98,1,238,70,219,187,114,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 194 ") {
    byte_vec_t msg { 163,233,218,52 };
    byte_vec_t sig { 32,250,253,8,61,254,180,148,97,89,151,156,28,19,142,36,108,213,202,252,117,229,236,73,166,88,254,154,112,122,9,93,79,26,140,26,98,59,15,72,244,20,102,194,237,183,205,203,33,98,238,132,148,220,200,145,143,94,190,159,218,75,190,229 };
    byte_vec_t pk { 4,90,78,196,28,146,48,67,175,240,204,229,75,195,121,247,196,15,170,156,126,188,22,81,103,131,42,132,74,6,210,238,27,111,111,213,210,97,23,51,21,113,92,207,54,180,54,216,27,115,3,85,148,173,199,5,169,66,102,53,200,53,26,72,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 195 ") {
    byte_vec_t msg { 111,154,226,164 };
    byte_vec_t sig { 42,122,178,199,88,108,42,147,233,127,24,156,164,146,113,187,188,180,47,157,238,149,13,28,60,181,156,248,49,127,35,130,240,151,90,84,45,128,136,234,161,68,137,42,53,4,102,34,73,212,53,155,51,66,49,101,100,231,100,216,35,75,113,52 };
    byte_vec_t pk { 4,168,209,56,25,64,164,64,194,229,245,180,119,61,83,162,225,245,92,25,111,206,95,249,150,167,222,116,144,91,101,177,161,147,103,229,175,229,11,156,153,27,127,214,208,233,40,21,45,81,234,179,178,101,67,108,156,248,93,187,252,3,117,137,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 195 ") {
    byte_vec_t msg { 34,34,9,225 };
    byte_vec_t sig { 229,239,162,145,181,192,152,93,239,161,49,37,240,83,206,148,174,58,250,13,156,91,64,185,76,120,109,179,196,179,240,121,141,99,98,100,163,233,97,21,178,233,79,88,249,87,80,19,210,189,213,101,151,188,253,142,209,19,1,35,236,213,196,37 };
    byte_vec_t pk { 4,60,251,135,205,6,18,218,196,63,199,40,34,155,181,123,116,220,246,141,229,149,195,54,74,170,125,180,201,76,49,138,158,48,146,222,163,129,131,101,2,145,123,58,13,103,231,95,164,109,116,225,19,223,52,130,132,148,111,136,45,218,192,71,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 196 ") {
    byte_vec_t msg { 185,33,180,234 };
    byte_vec_t sig { 116,253,182,23,194,141,121,41,122,248,20,248,92,23,49,165,53,86,90,9,63,192,7,64,117,249,99,60,182,48,95,217,95,160,231,179,9,243,94,185,181,7,13,157,103,201,235,170,181,63,39,153,125,102,74,91,29,225,144,11,142,115,82,187 };
    byte_vec_t pk { 4,147,172,62,26,60,54,83,41,78,217,30,130,173,226,94,238,237,149,38,4,167,124,227,42,2,81,140,150,81,237,169,120,114,10,168,48,118,110,171,180,205,122,91,81,235,233,216,240,111,51,241,52,67,221,157,94,222,170,47,238,46,125,23,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 196 ") {
    byte_vec_t msg { 186,46,6,36 };
    byte_vec_t sig { 188,246,175,26,27,58,206,106,178,40,71,123,119,246,176,9,177,202,248,72,15,17,254,28,167,226,148,150,179,136,102,117,38,183,241,66,118,93,48,84,86,98,35,229,134,53,214,117,40,161,110,23,11,66,98,11,167,68,101,243,105,144,127,56 };
    byte_vec_t pk { 4,30,118,58,231,183,50,129,30,164,72,65,32,180,12,108,213,38,177,76,163,255,15,206,70,11,163,42,32,26,15,226,220,37,135,221,128,164,47,167,194,192,135,67,30,78,64,87,217,162,93,47,60,170,223,48,102,57,185,83,81,21,244,214,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 197 ") {
    byte_vec_t msg { 222,157,243,62 };
    byte_vec_t sig { 52,173,71,40,193,216,120,51,30,2,202,40,82,65,200,91,213,93,41,160,83,215,3,218,16,227,163,230,233,131,37,219,130,254,230,96,125,35,195,245,133,205,162,192,177,107,32,54,128,208,215,58,189,253,3,31,180,234,194,204,67,207,200,248 };
    byte_vec_t pk { 4,29,37,85,63,254,95,21,197,64,153,136,91,69,14,194,215,26,192,66,51,32,136,205,53,180,60,166,242,186,88,77,103,197,250,226,193,202,64,161,73,249,78,158,220,89,96,114,71,70,239,217,41,95,42,13,18,18,90,202,107,168,254,76,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 197 ") {
    byte_vec_t msg { 15,68,113,5 };
    byte_vec_t sig { 156,129,173,113,194,233,187,178,239,114,104,33,244,116,81,115,119,14,164,212,241,150,100,112,248,208,198,86,174,79,145,40,70,81,69,173,220,106,167,127,1,12,135,200,57,196,186,89,73,145,206,110,116,106,154,148,200,147,221,240,131,243,113,244 };
    byte_vec_t pk { 4,132,134,195,13,252,122,247,54,109,34,209,17,56,248,176,128,100,110,158,179,46,76,164,140,74,168,183,119,227,127,9,68,131,231,101,126,89,97,192,104,18,230,244,111,92,37,36,164,177,0,232,1,80,127,1,205,223,226,195,190,93,1,253,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 198 ") {
    byte_vec_t msg { 221,43,34,238 };
    byte_vec_t sig { 94,102,8,45,175,73,30,144,131,221,15,78,40,211,23,90,191,55,212,112,219,188,248,244,131,166,76,83,208,5,112,183,211,243,210,103,42,168,245,2,97,172,120,2,84,243,135,109,37,90,236,70,208,23,27,177,164,149,203,3,14,222,220,33 };
    byte_vec_t pk { 4,125,204,5,178,242,34,31,83,146,96,50,180,230,211,61,152,63,83,217,178,116,197,110,112,171,46,128,166,209,34,192,141,174,183,115,88,53,11,80,11,194,222,60,235,180,192,71,51,115,101,102,153,211,59,118,167,247,116,64,5,37,149,94,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 198 ") {
    byte_vec_t msg { 206,149,27,247 };
    byte_vec_t sig { 145,217,62,225,39,140,196,118,0,41,169,244,182,146,87,137,73,142,171,197,234,156,148,93,184,227,124,33,219,251,109,30,7,57,139,206,44,158,150,188,192,231,168,42,130,21,128,194,132,196,142,240,189,78,145,42,154,9,192,98,221,169,146,137 };
    byte_vec_t pk { 4,131,146,206,112,181,116,41,174,114,143,192,97,39,165,233,158,209,1,245,129,185,121,108,238,229,65,30,121,27,160,71,195,119,120,47,233,189,177,173,217,20,84,69,38,79,28,244,96,212,164,121,17,93,76,142,240,180,31,39,203,215,58,24,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 199 ") {
    byte_vec_t msg { 56,144,145,25 };
    byte_vec_t sig { 91,211,141,142,44,94,239,95,145,165,37,246,25,208,141,180,45,216,65,40,184,23,159,206,71,86,5,27,161,5,110,68,80,233,181,160,178,61,164,205,176,56,48,6,98,160,56,97,187,153,9,183,92,96,175,186,103,67,177,11,223,140,31,51 };
    byte_vec_t pk { 4,236,48,33,221,54,201,110,164,178,228,148,103,72,157,3,26,94,247,0,194,80,210,195,215,99,190,101,93,217,132,169,25,27,35,178,217,232,176,73,174,191,131,103,109,254,7,167,61,108,67,76,5,53,10,218,55,102,41,190,90,245,173,208,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 199 ") {
    byte_vec_t msg { 33,23,253,184 };
    byte_vec_t sig { 180,48,200,207,122,198,179,115,184,115,116,97,202,160,210,162,124,163,127,57,98,207,200,204,136,166,78,214,23,5,210,163,146,141,206,201,184,211,145,100,239,19,139,14,162,90,142,190,96,39,127,244,30,124,248,185,118,6,60,109,189,109,240,228 };
    byte_vec_t pk { 4,226,238,7,173,223,247,51,80,147,156,252,4,108,220,170,119,164,255,180,157,250,98,209,26,107,215,119,115,242,113,246,7,113,116,82,178,78,119,60,177,100,22,63,247,190,75,114,217,201,61,88,101,110,174,28,244,210,23,101,118,25,4,241,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 200 ") {
    byte_vec_t msg { 7,108,168,138 };
    byte_vec_t sig { 85,99,42,82,177,75,69,228,84,117,218,146,36,138,17,240,91,119,69,217,193,164,112,58,158,13,18,156,108,15,151,89,144,152,154,253,252,124,247,118,177,173,195,149,109,210,138,2,1,175,243,24,151,87,232,189,77,128,195,129,194,63,174,138 };
    byte_vec_t pk { 4,135,242,173,17,99,185,35,190,220,5,114,103,243,233,69,180,75,40,171,0,253,71,204,137,110,200,51,239,28,155,25,223,156,158,133,71,128,254,93,233,77,240,210,145,184,47,181,92,252,51,161,200,10,233,43,151,83,122,135,253,255,150,237,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 200 ") {
    byte_vec_t msg { 20,127,86,47 };
    byte_vec_t sig { 90,148,255,103,82,254,2,3,229,36,111,204,69,80,177,181,28,9,231,2,245,195,6,38,28,38,225,165,173,163,31,103,17,176,108,148,242,98,53,99,166,114,61,95,107,4,123,4,243,168,170,192,55,137,112,221,53,255,240,101,168,86,76,59 };
    byte_vec_t pk { 4,12,160,149,20,153,187,18,116,133,245,233,144,133,81,155,109,58,104,99,14,149,156,253,47,98,247,131,41,149,225,235,205,76,184,151,8,212,51,230,142,126,235,76,194,183,63,130,64,41,73,253,97,208,181,70,246,200,145,29,243,16,102,234,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 201 ") {
    byte_vec_t msg { 161,59,150,18 };
    byte_vec_t sig { 188,246,92,169,90,198,26,57,238,120,49,159,171,162,34,170,152,131,112,182,112,212,61,147,101,169,193,249,70,241,138,140,219,173,94,61,137,73,40,4,134,26,58,11,78,121,119,55,133,206,79,205,65,63,216,160,78,45,50,30,171,226,8,111 };
    byte_vec_t pk { 4,199,56,36,57,47,206,96,37,247,230,87,169,35,138,95,102,57,172,23,161,32,141,123,120,239,212,95,50,35,255,7,127,201,56,44,44,96,20,228,192,218,106,15,11,63,59,160,5,176,13,180,173,214,80,23,42,112,36,222,171,111,149,102,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 201 ") {
    byte_vec_t msg { 77,232,64,132 };
    byte_vec_t sig { 236,159,144,66,65,13,43,110,79,69,100,22,230,197,10,122,255,210,123,68,35,1,5,171,184,57,44,212,104,43,251,214,158,163,37,132,91,35,195,241,0,176,156,208,155,21,18,179,168,9,210,51,165,45,93,136,219,99,29,70,241,239,144,133 };
    byte_vec_t pk { 4,120,150,141,202,15,205,84,214,176,47,87,183,202,176,146,57,160,225,148,44,214,38,126,146,63,210,195,65,253,201,88,164,127,115,174,58,102,202,8,184,51,24,116,28,40,205,10,18,161,29,253,230,126,195,57,208,5,90,27,219,206,59,198,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 202 ") {
    byte_vec_t msg { 77,185,50,231 };
    byte_vec_t sig { 226,54,203,156,196,71,207,179,58,221,1,108,5,77,12,110,205,142,78,22,182,93,89,145,113,142,144,88,179,237,194,37,141,248,14,88,45,236,34,249,84,234,161,201,165,178,9,94,177,167,92,100,134,141,246,94,153,243,143,151,1,95,56,248 };
    byte_vec_t pk { 4,51,189,85,251,224,154,254,73,183,208,124,158,55,130,85,220,250,30,196,96,96,59,211,42,90,27,67,19,105,48,45,49,247,204,105,17,172,245,172,127,202,12,140,215,194,186,200,90,254,172,41,168,241,22,224,50,233,72,211,118,205,72,43,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 202 ") {
    byte_vec_t msg { 77,174,204,35 };
    byte_vec_t sig { 54,196,24,40,113,214,102,180,134,128,94,144,135,93,222,48,166,73,45,254,210,26,75,16,178,43,74,58,109,99,27,83,95,35,196,127,44,15,102,58,25,91,248,97,169,221,144,100,99,223,54,65,198,12,159,83,111,89,16,220,87,254,122,182 };
    byte_vec_t pk { 4,56,220,151,12,199,166,31,34,122,21,129,10,41,17,170,183,78,239,93,189,223,63,135,206,46,28,163,33,219,95,132,115,159,242,150,146,119,194,53,198,8,1,128,74,169,169,165,115,178,179,20,64,69,106,89,151,105,101,110,97,56,141,215,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 203 ") {
    byte_vec_t msg { 247,216,154,231 };
    byte_vec_t sig { 3,195,119,132,223,103,72,45,219,250,168,108,156,82,71,78,46,248,73,92,208,180,24,212,101,91,140,122,166,12,84,42,180,169,73,151,198,87,66,93,37,165,101,60,166,247,194,77,178,164,76,237,17,225,119,118,29,89,49,80,167,48,148,145 };
    byte_vec_t pk { 4,21,197,167,143,148,28,92,99,101,87,191,68,213,91,3,183,156,115,211,123,143,111,173,218,232,162,174,115,96,241,67,62,243,169,217,215,119,217,33,79,164,84,41,250,72,113,192,141,196,37,6,254,56,161,127,56,188,136,55,131,141,30,250,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 203 ") {
    byte_vec_t msg { 10,158,197,140 };
    byte_vec_t sig { 153,241,147,246,138,239,120,1,201,169,59,169,79,199,219,213,122,249,233,90,87,87,211,165,26,235,61,185,231,29,177,213,230,18,222,106,186,174,116,37,171,228,130,162,237,171,18,253,86,169,119,41,49,64,25,255,77,57,222,255,149,53,164,200 };
    byte_vec_t pk { 4,137,53,229,25,164,6,200,41,74,113,175,73,246,76,117,133,36,12,229,184,27,249,244,208,232,212,251,184,59,8,214,87,253,117,101,78,83,124,228,222,134,45,223,141,52,211,255,228,177,219,0,90,214,161,41,156,116,59,239,21,241,94,189,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 204 ") {
    byte_vec_t msg { 13,201,198,26 };
    byte_vec_t sig { 197,199,160,102,87,48,157,56,5,225,250,62,46,174,46,3,224,254,227,137,87,211,72,105,18,252,146,147,163,195,9,86,81,28,67,56,145,119,128,242,86,20,229,128,143,89,140,11,45,43,188,186,140,173,179,76,93,221,122,55,124,204,74,241 };
    byte_vec_t pk { 4,28,240,238,7,190,79,39,84,186,67,59,108,214,243,227,2,205,138,199,176,161,126,69,222,75,177,80,222,91,196,136,168,36,101,188,181,147,69,178,181,148,188,15,54,38,191,244,160,243,129,47,174,81,167,235,166,62,22,55,219,198,104,255,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 204 ") {
    byte_vec_t msg { 235,84,107,234 };
    byte_vec_t sig { 133,99,139,148,60,23,12,29,230,253,243,28,246,82,234,110,134,29,176,56,70,130,186,103,37,250,242,10,183,191,40,122,221,21,49,20,103,230,215,114,101,33,184,207,123,49,115,15,29,43,228,108,71,220,254,229,41,243,150,0,91,226,30,1 };
    byte_vec_t pk { 4,65,182,186,74,227,96,45,71,166,217,248,29,56,219,171,95,145,211,42,205,249,15,207,74,40,109,176,163,192,140,143,51,200,129,134,44,20,62,250,72,47,16,157,132,74,9,49,196,119,52,108,66,33,145,54,50,174,54,135,150,2,86,113,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 205 ") {
    byte_vec_t msg { 189,123,11,72 };
    byte_vec_t sig { 64,207,136,184,222,67,29,22,153,124,214,105,203,224,77,158,128,100,113,232,104,14,232,20,130,165,171,13,135,182,105,104,18,26,172,191,115,192,188,197,83,12,88,228,93,253,39,207,177,202,153,10,68,164,66,235,255,155,12,189,199,34,164,197 };
    byte_vec_t pk { 4,217,89,4,144,238,33,10,115,120,4,247,166,236,32,147,4,112,190,203,35,29,166,102,62,12,161,107,106,219,205,180,196,169,252,3,179,170,54,128,70,250,187,239,5,218,246,148,213,113,115,237,17,226,31,95,38,114,237,254,227,62,140,255,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 205 ") {
    byte_vec_t msg { 196,107,238,195 };
    byte_vec_t sig { 187,55,51,139,138,213,157,6,29,240,243,43,183,231,234,45,83,91,74,126,21,41,42,226,47,8,15,237,94,203,143,77,205,213,66,76,85,189,218,205,243,5,118,150,168,133,132,208,40,33,140,184,237,129,128,60,76,85,104,46,63,82,218,220 };
    byte_vec_t pk { 4,139,228,224,39,202,223,228,166,178,44,55,102,114,210,221,158,112,221,88,48,83,205,68,107,154,87,184,21,116,56,223,10,88,60,121,188,231,250,39,203,21,88,223,48,177,112,255,171,59,117,166,29,85,115,61,37,164,97,135,248,20,34,113,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 206 ") {
    byte_vec_t msg { 111,111,220,34 };
    byte_vec_t sig { 20,67,120,196,254,151,196,150,252,155,93,192,93,129,96,88,127,26,21,75,137,105,164,122,207,104,88,143,12,126,149,5,159,195,122,160,189,160,247,136,199,106,208,192,47,135,51,136,106,230,112,116,100,102,27,154,232,127,10,110,147,131,170,133 };
    byte_vec_t pk { 4,186,7,214,231,152,175,155,112,133,125,17,193,167,45,41,192,116,31,206,223,182,132,36,51,25,164,200,113,14,175,102,228,132,6,150,211,41,179,117,59,235,246,86,136,8,45,73,191,133,128,221,25,210,194,106,43,81,200,124,211,38,40,123,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 206 ") {
    byte_vec_t msg { 109,152,62,248 };
    byte_vec_t sig { 103,111,100,74,241,179,155,247,130,78,192,125,119,225,102,116,219,89,145,126,124,60,24,62,203,233,238,34,166,116,135,106,73,88,123,208,123,26,215,101,97,133,113,102,110,168,159,134,92,22,94,216,40,202,154,45,82,24,4,83,100,102,249,148 };
    byte_vec_t pk { 4,130,234,105,239,32,49,242,83,179,177,19,143,239,230,54,170,230,145,17,15,146,17,76,92,246,51,56,103,17,46,160,215,63,237,105,104,200,32,241,191,46,103,82,52,252,43,190,93,130,28,48,204,182,18,169,222,248,62,63,195,142,227,69,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 207 ") {
    byte_vec_t msg { 140,96,79,138 };
    byte_vec_t sig { 151,130,81,206,152,97,35,91,153,232,99,199,50,72,248,215,133,133,130,42,89,145,6,158,173,158,130,91,76,210,103,122,229,246,105,186,12,215,219,151,196,49,90,33,207,215,28,146,61,166,62,188,4,173,56,71,26,176,202,11,234,176,122,161 };
    byte_vec_t pk { 4,47,35,193,50,117,190,115,2,23,192,255,126,90,145,245,116,231,1,70,154,65,251,175,43,13,190,180,101,82,135,3,241,139,111,33,252,20,32,169,52,45,245,167,172,138,16,18,185,56,244,128,110,216,144,127,7,205,181,202,195,28,170,174,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 207 ") {
    byte_vec_t msg { 115,152,193,50 };
    byte_vec_t sig { 121,209,72,37,36,213,22,128,103,99,92,113,189,21,225,105,52,50,166,165,198,155,82,97,226,149,31,214,129,85,183,0,223,112,77,32,177,38,131,76,66,243,182,215,166,56,247,248,237,2,166,222,72,188,26,28,200,183,250,174,71,126,131,146 };
    byte_vec_t pk { 4,59,183,161,74,167,217,150,70,82,40,201,157,124,210,70,182,177,139,225,41,226,206,90,123,61,10,242,141,31,50,15,47,32,108,226,196,3,7,185,179,113,216,75,241,182,218,180,53,75,41,20,27,187,245,42,191,210,211,251,17,38,87,57,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 208 ") {
    byte_vec_t msg { 87,114,133,68 };
    byte_vec_t sig { 74,200,192,33,201,232,214,241,101,82,128,29,50,188,201,54,7,183,173,183,223,157,211,251,145,25,177,30,28,69,113,231,171,173,102,11,253,137,43,118,79,193,49,230,112,63,117,104,192,124,93,108,211,111,226,192,79,60,1,194,66,211,69,202 };
    byte_vec_t pk { 4,107,14,70,118,13,54,174,32,29,32,129,7,137,181,162,22,232,3,165,106,193,160,146,253,55,113,132,175,166,120,104,150,251,201,7,169,248,56,83,135,241,81,217,179,83,202,192,116,2,159,69,192,54,197,116,244,163,191,182,148,153,102,121,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 208 ") {
    byte_vec_t msg { 42,107,169,181 };
    byte_vec_t sig { 69,253,118,68,62,32,191,163,119,155,31,14,196,90,187,174,159,119,189,15,191,80,184,56,200,148,16,246,38,167,227,23,66,121,41,105,16,218,28,217,3,116,209,127,116,196,54,21,160,12,101,35,141,64,26,15,207,239,190,228,93,143,86,116 };
    byte_vec_t pk { 4,36,200,21,168,237,164,160,191,143,14,45,248,209,76,224,89,235,32,63,181,228,142,213,95,243,70,184,71,253,72,176,224,226,8,69,147,38,129,88,85,205,194,194,145,131,112,44,81,52,14,215,36,148,27,163,134,103,247,242,80,140,132,57,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 209 ") {
    byte_vec_t msg { 199,141,127,190 };
    byte_vec_t sig { 7,250,244,140,236,207,11,1,215,98,65,240,253,2,51,105,112,97,165,62,48,115,205,127,80,176,79,255,57,67,74,228,50,12,14,206,87,45,233,214,158,151,163,70,79,43,255,222,8,10,161,107,159,97,31,181,103,79,219,29,225,151,85,232 };
    byte_vec_t pk { 4,205,47,141,200,221,130,96,151,154,219,132,39,94,15,244,139,68,244,150,103,43,147,133,205,243,45,193,101,60,112,228,122,55,223,108,178,12,36,128,246,54,196,92,149,22,136,110,255,183,255,67,27,166,122,97,176,152,252,186,60,215,229,91,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 209 ") {
    byte_vec_t msg { 113,34,32,62 };
    byte_vec_t sig { 57,123,131,177,122,173,199,205,98,105,78,53,87,241,63,146,199,29,37,96,129,123,89,207,156,174,242,112,171,237,15,181,220,150,34,164,38,115,114,61,241,169,169,120,23,118,17,240,181,176,205,90,82,226,91,164,43,62,203,167,90,205,25,233 };
    byte_vec_t pk { 4,68,246,66,108,156,122,28,111,125,186,60,39,29,101,120,51,48,118,115,226,44,159,38,223,26,206,47,12,64,40,108,210,22,135,229,36,150,167,9,138,151,204,142,152,2,37,233,137,245,250,104,74,226,118,29,57,137,64,44,96,140,59,237,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 210 ") {
    byte_vec_t msg { 31,30,190,208 };
    byte_vec_t sig { 205,98,91,158,60,98,139,35,55,83,179,169,166,143,93,149,57,36,65,56,85,156,136,16,244,117,192,109,82,221,255,172,30,6,6,187,51,224,104,204,66,51,16,93,226,121,209,196,214,151,253,19,235,159,86,131,25,240,101,88,148,2,199,27 };
    byte_vec_t pk { 4,115,222,209,169,111,238,115,87,184,89,96,131,193,231,208,75,86,118,71,180,125,103,56,193,80,126,112,182,182,247,183,52,120,118,249,111,242,208,217,245,83,79,10,246,129,135,70,137,45,69,97,110,133,192,30,239,207,54,172,18,148,96,135,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 210 ") {
    byte_vec_t msg { 113,223,194,86 };
    byte_vec_t sig { 11,23,184,222,98,178,170,56,79,54,5,166,174,155,133,173,212,17,47,84,1,165,158,44,130,2,12,186,111,89,246,255,181,119,254,130,71,222,164,20,22,161,202,120,223,125,166,246,57,54,126,76,105,246,255,123,20,119,172,208,109,250,169,99 };
    byte_vec_t pk { 4,22,63,103,56,61,16,222,137,111,193,242,96,170,145,196,79,126,109,232,225,218,82,34,143,59,156,10,175,141,113,164,132,209,183,111,37,2,75,41,8,27,221,118,145,225,110,217,176,42,88,152,218,181,103,31,140,18,30,135,86,130,107,92,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 211 ") {
    byte_vec_t msg { 48,107,255,247 };
    byte_vec_t sig { 215,38,201,213,144,180,168,144,12,25,205,223,200,17,209,111,233,198,220,37,238,6,41,189,83,120,144,225,185,59,30,1,45,91,33,204,114,242,126,48,35,138,155,240,53,73,13,34,182,35,216,17,15,118,208,242,109,239,114,142,144,88,205,35 };
    byte_vec_t pk { 4,71,58,39,69,89,246,182,216,127,108,165,251,239,131,243,206,55,218,142,45,166,247,180,45,252,239,195,87,192,236,200,168,204,89,202,76,3,50,187,249,240,51,44,123,58,55,185,75,225,134,56,124,147,103,230,135,110,43,35,76,77,136,13,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 211 ") {
    byte_vec_t msg { 83,168,206,23 };
    byte_vec_t sig { 161,239,48,225,38,35,21,118,152,126,120,168,124,188,194,35,98,156,197,199,51,97,166,29,187,144,231,110,22,150,196,205,107,65,253,42,18,68,100,201,48,39,85,114,205,190,192,68,69,144,65,1,127,137,231,75,77,62,79,35,253,217,142,53 };
    byte_vec_t pk { 4,163,15,235,118,80,240,238,88,210,143,153,63,121,133,155,98,162,107,83,226,82,97,210,76,156,36,76,117,89,163,243,173,32,233,72,8,36,40,84,99,113,45,65,17,44,2,195,19,25,222,40,153,247,69,114,10,214,2,104,12,98,172,76,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 212 ") {
    byte_vec_t msg { 90,47,191,72 };
    byte_vec_t sig { 155,240,47,185,189,218,237,180,253,24,44,129,203,83,72,107,242,18,32,90,90,20,88,232,169,98,110,240,35,249,226,87,125,32,78,90,217,147,106,5,226,23,232,38,92,162,126,13,57,109,30,135,174,101,18,159,14,152,234,228,239,9,225,26 };
    byte_vec_t pk { 4,17,29,144,163,209,77,180,91,193,104,247,29,226,214,49,218,227,218,237,85,177,147,26,73,25,60,145,220,111,178,178,254,104,54,128,115,80,26,197,129,4,36,20,254,40,56,119,220,118,47,91,56,130,3,156,220,193,189,218,39,81,114,31,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 212 ") {
    byte_vec_t msg { 182,76,186,40 };
    byte_vec_t sig { 16,164,199,95,205,182,24,160,16,147,160,102,215,54,26,115,56,215,109,11,8,237,58,255,9,56,103,78,104,196,217,247,2,164,108,163,15,235,48,110,158,156,147,172,19,122,20,155,216,92,148,157,244,224,53,125,52,39,152,108,237,158,125,61 };
    byte_vec_t pk { 4,99,216,129,60,6,38,103,96,186,181,228,111,231,66,174,81,243,104,242,57,206,181,157,50,51,82,73,17,211,34,9,89,110,89,34,19,198,214,67,186,126,62,127,18,108,63,254,159,124,185,233,235,162,231,213,69,97,139,216,18,92,176,173,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 213 ") {
    byte_vec_t msg { 56,247,242,33 };
    byte_vec_t sig { 178,60,43,253,124,164,241,173,161,24,255,4,4,20,94,53,68,70,242,179,186,62,33,148,209,150,169,169,113,206,68,220,115,159,22,191,145,249,48,112,11,117,26,17,197,73,62,56,250,247,255,92,12,232,183,134,32,150,81,65,207,211,66,193 };
    byte_vec_t pk { 4,133,248,122,113,53,119,97,229,1,104,216,16,11,31,252,196,213,30,233,53,127,123,170,175,246,45,45,37,89,185,40,61,9,15,214,89,5,6,242,187,91,149,109,77,107,169,131,217,113,131,169,89,18,250,160,1,74,250,33,248,225,185,207,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 213 ") {
    byte_vec_t msg { 86,114,33,235 };
    byte_vec_t sig { 91,196,68,202,203,135,9,245,163,113,33,219,93,80,158,201,222,2,162,38,116,77,217,199,39,143,62,41,17,212,197,101,187,111,48,113,5,233,150,7,86,181,183,91,141,90,113,243,15,174,159,223,17,56,36,134,161,121,169,85,133,147,154,74 };
    byte_vec_t pk { 4,34,120,143,183,207,156,161,170,206,20,252,71,22,124,3,179,136,233,211,221,55,26,253,205,88,159,219,55,122,152,136,157,246,174,239,77,192,53,245,173,21,93,208,194,38,2,16,107,106,171,139,114,140,119,122,224,99,186,203,175,41,123,242,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 214 ") {
    byte_vec_t msg { 20,43,4,31 };
    byte_vec_t sig { 217,117,224,176,225,241,69,207,237,109,87,240,123,97,199,215,11,188,158,193,145,160,111,104,57,252,0,110,33,15,164,133,176,41,55,43,222,159,207,178,81,125,26,151,9,33,6,1,104,203,191,38,235,181,108,166,206,17,172,160,51,47,229,227 };
    byte_vec_t pk { 4,202,255,63,48,65,202,94,92,67,90,77,225,35,45,29,248,123,125,26,105,78,70,34,136,88,203,89,135,25,146,65,66,6,154,21,110,179,220,129,248,48,110,165,61,187,143,251,248,71,84,69,221,221,27,186,186,209,163,205,136,224,59,133,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 214 ") {
    byte_vec_t msg { 147,36,48,109 };
    byte_vec_t sig { 72,9,35,151,91,176,121,170,220,36,15,21,71,16,167,59,139,22,76,206,25,170,203,116,154,99,215,176,60,172,42,134,223,158,89,31,29,95,176,77,162,235,252,186,9,153,5,3,139,90,90,210,205,187,113,40,17,27,198,251,242,123,95,132 };
    byte_vec_t pk { 4,215,89,35,170,118,92,6,57,197,253,138,129,11,164,75,146,125,47,51,214,226,136,35,109,60,32,7,40,183,98,177,102,176,7,224,220,15,77,6,64,234,128,84,143,21,105,241,113,85,27,109,195,159,127,85,154,190,97,228,221,159,44,235,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 215 ") {
    byte_vec_t msg { 17,56,128,48 };
    byte_vec_t sig { 147,240,63,149,191,53,249,33,238,171,20,19,89,98,124,70,91,5,66,21,207,158,234,11,47,230,217,0,0,184,200,121,25,83,129,76,240,9,193,112,12,5,68,234,192,6,200,53,56,142,208,2,183,230,52,76,26,62,191,86,233,240,37,40 };
    byte_vec_t pk { 4,6,226,43,220,255,31,55,252,230,149,138,172,156,131,180,4,105,119,172,61,154,137,129,4,41,212,168,45,56,95,0,30,207,50,79,215,228,24,5,244,30,102,236,169,28,112,240,193,19,45,63,162,238,173,141,4,25,210,25,2,147,202,40,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 215 ") {
    byte_vec_t msg { 131,21,24,47 };
    byte_vec_t sig { 115,181,30,59,2,11,35,166,104,135,191,195,90,249,214,25,214,89,159,165,246,73,250,15,68,7,4,136,35,223,242,149,32,27,227,213,196,116,123,141,99,21,139,53,165,225,156,169,244,10,246,4,166,145,240,82,243,50,253,220,158,55,66,33 };
    byte_vec_t pk { 4,135,31,178,81,238,181,112,200,107,138,234,181,197,56,6,198,75,245,5,35,178,54,165,91,107,69,56,214,46,41,92,92,15,220,56,207,132,67,74,95,200,146,116,59,35,31,167,18,143,115,11,86,132,118,182,3,36,155,30,14,99,5,9,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 216 ") {
    byte_vec_t msg { 227,242,23,252 };
    byte_vec_t sig { 220,43,217,102,139,157,90,13,205,210,96,218,215,125,241,179,252,68,67,242,13,165,182,106,91,52,203,236,187,4,103,88,105,137,46,169,40,221,120,11,202,68,242,252,107,254,252,72,200,150,77,149,218,119,102,140,200,243,123,152,89,242,15,66 };
    byte_vec_t pk { 4,221,15,29,15,253,192,122,251,217,24,169,50,136,115,119,177,16,111,239,214,236,63,160,251,213,206,213,142,96,224,194,230,227,104,235,143,53,195,113,200,231,208,140,115,79,61,73,86,56,109,144,48,71,44,66,166,14,204,180,205,84,234,84,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 216 ") {
    byte_vec_t msg { 91,90,85,10 };
    byte_vec_t sig { 240,156,39,56,223,191,26,206,74,210,157,192,173,40,234,55,112,244,150,186,206,224,107,26,251,12,175,42,158,39,114,193,189,51,22,95,19,243,108,32,121,0,141,23,173,83,162,46,47,12,62,28,15,29,109,225,16,58,149,13,77,168,239,29 };
    byte_vec_t pk { 4,147,5,181,245,166,84,52,232,106,108,240,177,97,43,46,245,107,81,125,69,3,88,134,173,154,238,206,94,189,117,254,138,15,207,172,216,236,89,219,60,83,134,147,4,131,23,197,244,186,155,187,232,35,143,171,32,66,118,119,152,166,52,165,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 217 ") {
    byte_vec_t msg { 254,87,149,170 };
    byte_vec_t sig { 66,49,195,152,12,38,87,33,143,21,239,103,174,172,247,41,126,184,83,179,151,183,178,69,252,88,109,88,144,28,8,180,87,65,248,226,157,41,69,124,187,51,12,112,31,167,138,198,105,1,83,67,110,127,95,198,229,0,8,164,192,17,156,223 };
    byte_vec_t pk { 4,84,170,235,66,142,108,155,216,192,151,231,152,14,180,13,213,105,171,13,72,56,191,37,172,198,127,162,53,86,255,190,208,14,57,210,122,52,104,249,52,161,36,134,2,76,111,46,97,85,118,58,40,124,227,27,38,96,13,166,123,205,88,16,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 217 ") {
    byte_vec_t msg { 95,155,113,53 };
    byte_vec_t sig { 188,10,197,82,98,122,147,224,44,32,104,142,22,144,85,191,236,23,106,44,39,72,89,195,43,43,200,224,46,250,196,24,72,15,37,165,153,181,206,40,29,130,33,160,25,234,15,98,78,87,228,117,49,119,161,107,134,221,93,65,199,192,252,60 };
    byte_vec_t pk { 4,188,71,183,58,116,158,196,84,200,151,164,124,51,0,184,211,92,53,22,47,166,49,228,117,79,39,168,227,128,116,219,234,106,2,175,232,206,173,146,121,176,148,61,211,21,132,161,216,154,36,90,249,205,209,75,182,24,139,14,197,117,169,61,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 218 ") {
    byte_vec_t msg { 202,97,115,118 };
    byte_vec_t sig { 114,130,214,202,122,33,104,172,11,132,123,191,193,213,93,7,236,14,59,181,74,100,97,131,141,156,82,171,109,97,21,129,94,237,103,125,253,46,226,193,152,51,75,75,88,248,73,166,1,29,196,160,237,184,100,149,174,234,28,219,15,81,49,82 };
    byte_vec_t pk { 4,189,187,191,140,52,145,203,63,133,196,86,208,0,0,134,238,95,68,54,205,164,41,6,221,225,27,92,173,81,224,112,77,205,109,234,215,167,141,183,16,2,43,55,142,43,127,191,154,164,109,231,1,82,126,46,235,62,132,218,242,130,251,146,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 218 ") {
    byte_vec_t msg { 218,175,49,48 };
    byte_vec_t sig { 162,178,213,65,240,149,84,26,37,162,176,27,241,186,254,24,251,72,58,242,44,216,18,248,179,61,170,116,157,241,83,20,223,134,207,198,129,79,104,113,228,103,143,106,97,221,12,145,21,41,145,202,162,11,15,119,41,185,197,50,197,179,98,55 };
    byte_vec_t pk { 4,206,213,175,168,138,255,9,44,24,231,249,32,21,151,12,59,144,234,224,145,28,151,157,173,235,33,139,232,158,67,6,76,143,80,85,15,177,59,23,185,38,248,233,19,255,22,68,38,146,116,192,12,35,248,89,206,239,234,134,129,164,165,251,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 219 ") {
    byte_vec_t msg { 92,231,243,2 };
    byte_vec_t sig { 177,139,38,24,253,113,184,121,247,11,212,242,54,105,39,116,40,84,236,20,82,118,171,89,234,241,48,223,117,251,224,138,22,63,127,25,252,183,102,38,42,116,185,163,202,126,196,168,98,46,57,138,173,157,129,38,153,35,172,90,107,132,31,208 };
    byte_vec_t pk { 4,78,50,247,168,148,88,141,202,12,141,70,132,254,228,22,35,65,213,255,142,52,147,19,114,112,233,246,161,147,58,47,129,46,190,132,63,147,93,50,72,99,200,223,143,148,56,216,100,200,112,107,164,183,91,196,110,31,98,83,29,105,93,49,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 219 ") {
    byte_vec_t msg { 33,226,219,137 };
    byte_vec_t sig { 44,129,159,159,20,165,186,162,204,178,197,118,42,95,184,223,105,43,68,242,51,244,31,232,77,5,156,138,109,150,71,116,213,197,110,8,185,72,4,60,107,127,199,159,39,251,31,197,50,41,107,49,188,111,91,29,253,184,202,3,198,8,14,156 };
    byte_vec_t pk { 4,108,14,113,115,128,54,189,23,173,190,85,77,10,254,130,112,72,83,122,169,25,6,196,92,39,213,54,236,224,209,36,154,251,49,111,203,8,31,100,164,20,170,206,196,82,154,157,80,36,108,61,78,239,127,91,125,14,59,89,159,26,180,105,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 220 ") {
    byte_vec_t msg { 210,139,194,93 };
    byte_vec_t sig { 230,212,251,40,168,226,99,224,164,123,241,157,214,35,31,129,95,231,118,204,93,255,106,171,56,13,58,17,205,170,75,89,172,104,94,105,176,3,223,38,36,129,119,85,78,197,183,60,56,240,49,237,128,53,98,93,192,81,28,23,10,5,232,106 };
    byte_vec_t pk { 4,11,237,191,176,28,243,131,241,102,111,128,12,138,103,29,141,179,54,136,249,243,214,74,116,245,28,237,222,102,108,55,57,233,181,61,148,119,153,31,230,49,85,29,243,116,185,161,26,152,166,216,145,70,148,7,195,228,193,88,64,92,140,244,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 220 ") {
    byte_vec_t msg { 197,157,198,141 };
    byte_vec_t sig { 220,83,64,228,122,49,27,255,80,25,69,88,154,200,191,94,46,60,59,97,233,20,73,31,62,243,161,23,118,21,121,142,250,209,14,44,46,251,192,172,41,242,227,174,29,110,0,93,100,186,63,215,20,191,132,43,38,72,105,173,107,94,222,150 };
    byte_vec_t pk { 4,182,23,153,14,107,195,24,73,139,177,128,147,197,207,210,85,155,117,165,3,127,114,157,196,250,218,57,45,68,10,234,254,156,197,95,214,243,97,171,0,203,111,95,192,69,16,33,110,163,78,1,204,149,3,205,223,52,103,60,114,84,194,112,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 221 ") {
    byte_vec_t msg { 31,48,20,115 };
    byte_vec_t sig { 119,9,0,207,133,74,77,76,161,36,194,127,185,227,42,200,42,165,33,30,188,17,48,160,177,102,35,60,90,56,15,227,202,41,240,34,250,111,86,107,79,110,116,48,208,87,253,90,54,143,79,17,181,43,90,128,68,242,222,212,207,178,85,112 };
    byte_vec_t pk { 4,55,121,231,226,171,86,179,168,67,225,93,87,201,204,121,3,89,226,63,213,191,116,113,116,81,41,74,60,165,233,9,4,71,133,172,149,9,34,184,95,29,88,74,17,246,48,48,38,190,184,197,68,18,125,90,121,56,62,215,182,50,173,158,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 221 ") {
    byte_vec_t msg { 110,25,249,89 };
    byte_vec_t sig { 109,230,36,130,170,139,235,159,230,184,216,140,180,184,69,12,228,133,8,80,231,241,182,177,223,179,173,89,156,230,191,223,144,147,81,67,206,142,224,230,25,72,93,60,54,9,127,172,201,245,0,158,0,147,183,48,186,247,126,226,233,170,33,167 };
    byte_vec_t pk { 4,93,53,74,87,232,153,252,91,75,57,174,166,214,74,255,159,50,100,71,237,133,112,65,175,31,254,42,27,143,143,140,59,232,204,8,6,19,239,110,70,67,144,77,203,220,30,32,245,69,240,41,31,52,189,12,189,218,254,192,146,8,122,158,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 222 ") {
    byte_vec_t msg { 75,163,147,186 };
    byte_vec_t sig { 85,154,133,107,51,68,116,81,134,135,162,34,129,130,37,32,223,145,163,109,48,11,78,143,199,162,144,227,151,30,239,63,18,239,10,36,152,187,48,68,104,42,95,65,156,81,115,55,227,109,3,208,135,55,215,229,235,165,86,4,125,31,83,184 };
    byte_vec_t pk { 4,207,216,101,85,127,206,245,18,180,7,134,209,25,45,227,210,170,100,231,186,124,192,115,102,73,21,250,67,37,113,0,190,153,183,75,75,33,237,166,5,119,147,14,153,84,174,7,171,152,204,111,223,58,195,200,87,110,21,212,242,115,58,181,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 222 ") {
    byte_vec_t msg { 141,174,67,229 };
    byte_vec_t sig { 100,36,255,236,137,104,198,145,61,2,70,232,221,184,254,48,185,135,68,241,172,145,191,30,194,192,140,102,250,192,37,144,54,130,4,191,134,161,171,220,145,242,208,133,110,66,110,212,36,254,189,171,105,11,109,121,153,252,112,181,222,220,166,225 };
    byte_vec_t pk { 4,174,49,121,233,28,205,241,149,253,97,146,171,115,76,155,47,153,96,47,61,85,57,131,31,25,113,132,197,214,218,167,214,63,185,218,222,101,120,255,28,230,149,92,228,18,49,43,200,39,181,71,87,92,69,46,204,109,246,62,174,108,45,36,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 223 ") {
    byte_vec_t msg { 166,102,88,106 };
    byte_vec_t sig { 81,147,15,43,201,173,91,140,100,144,53,200,115,66,57,240,58,169,201,59,151,1,160,120,254,78,17,56,80,254,97,132,83,174,17,149,222,49,231,152,75,174,138,80,151,14,119,89,69,173,178,21,104,233,198,64,112,165,23,31,32,202,209,209 };
    byte_vec_t pk { 4,226,211,249,6,240,115,232,232,111,225,119,38,44,137,39,252,183,226,5,179,25,18,155,143,42,171,196,208,119,173,121,42,61,231,11,6,159,170,40,56,113,119,236,92,124,142,8,185,118,152,254,69,220,100,172,52,93,147,169,200,207,198,191,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 223 ") {
    byte_vec_t msg { 114,234,138,224 };
    byte_vec_t sig { 212,128,138,151,137,227,141,188,115,224,111,193,106,178,219,77,209,226,142,142,143,205,109,249,205,185,47,77,178,113,149,50,50,233,88,120,194,139,132,32,108,40,88,23,11,214,155,36,10,238,60,111,177,104,150,126,55,200,242,195,58,142,6,146 };
    byte_vec_t pk { 4,93,61,127,203,134,81,165,13,195,158,255,237,208,33,100,217,99,5,14,179,225,15,234,200,222,22,10,160,197,53,72,153,150,174,48,83,132,144,77,164,9,57,74,108,21,119,136,102,161,25,115,170,150,106,89,153,100,176,225,73,28,20,244,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 224 ") {
    byte_vec_t msg { 239,70,18,13 };
    byte_vec_t sig { 26,88,234,3,88,52,201,3,2,139,110,103,224,87,215,22,62,103,231,27,43,206,108,147,59,162,179,20,100,181,220,84,251,113,41,99,27,67,4,61,230,71,140,118,11,255,112,247,69,161,16,94,187,190,140,52,202,194,55,87,79,148,187,214 };
    byte_vec_t pk { 4,42,53,5,14,94,46,159,223,163,47,203,73,60,198,207,128,102,142,74,177,142,10,89,19,152,128,187,64,81,83,119,195,14,128,167,7,5,78,208,36,125,138,249,234,216,168,203,246,150,200,0,223,235,188,247,118,40,85,144,117,224,145,198,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 224 ") {
    byte_vec_t msg { 255,232,133,159 };
    byte_vec_t sig { 131,19,219,112,196,99,247,167,53,64,115,205,109,63,84,57,149,244,206,73,26,89,124,213,28,108,241,133,26,76,173,23,0,135,162,110,0,14,77,117,160,128,12,96,196,193,17,215,114,108,27,102,207,23,107,111,221,216,114,205,40,76,172,133 };
    byte_vec_t pk { 4,175,152,15,125,127,230,167,200,27,68,183,186,7,250,223,160,114,37,222,232,17,253,25,112,226,203,76,141,173,240,116,31,226,18,178,107,156,159,79,35,174,176,111,251,220,161,180,8,163,22,1,57,7,135,145,251,133,219,246,81,184,207,182,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 225 ") {
    byte_vec_t msg { 231,81,134,222 };
    byte_vec_t sig { 176,202,188,99,126,28,104,195,233,79,152,28,220,99,30,161,127,234,50,54,249,73,127,101,233,13,128,167,139,231,216,25,66,224,91,238,52,23,178,90,208,143,159,235,213,30,8,206,244,238,51,196,155,4,124,26,112,157,40,104,14,65,4,0 };
    byte_vec_t pk { 4,240,222,165,200,28,101,244,169,104,184,32,36,250,75,210,85,158,7,148,181,16,102,48,197,168,188,234,159,220,152,68,170,84,176,233,120,73,127,120,125,0,249,128,217,74,214,111,73,19,2,124,10,188,254,110,146,102,124,111,234,228,206,251,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 225 ") {
    byte_vec_t msg { 127,177,253,173 };
    byte_vec_t sig { 231,201,241,202,52,201,57,43,88,106,192,27,65,246,227,64,142,243,235,170,218,57,212,163,205,21,56,222,139,165,3,29,73,24,6,49,195,240,160,196,186,93,137,159,19,175,230,24,34,235,47,19,241,106,142,249,69,152,122,33,122,71,199,17 };
    byte_vec_t pk { 4,42,25,31,85,243,146,1,46,144,145,52,213,26,119,228,194,223,160,1,210,200,45,200,145,41,119,87,220,50,179,138,243,225,137,31,72,11,50,178,72,170,194,204,254,95,107,140,19,171,67,115,244,148,44,102,44,69,223,243,34,27,255,40,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 226 ") {
    byte_vec_t msg { 94,55,128,228 };
    byte_vec_t sig { 210,6,193,7,143,131,53,193,144,244,168,111,243,49,185,20,154,181,161,58,39,219,142,27,196,117,172,119,79,39,205,138,45,174,99,199,178,232,13,152,249,68,98,188,139,55,89,218,37,0,36,117,82,143,147,145,232,76,104,17,36,196,16,90 };
    byte_vec_t pk { 4,15,73,216,87,59,131,76,6,170,231,139,250,60,96,247,139,181,99,207,43,36,34,90,125,131,226,91,40,59,200,144,103,86,61,66,34,105,76,20,122,76,63,176,78,150,145,7,180,200,22,214,196,70,143,49,167,120,94,30,118,140,204,101,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 226 ") {
    byte_vec_t msg { 211,240,114,133 };
    byte_vec_t sig { 35,119,118,174,42,155,25,73,39,146,188,196,192,25,104,93,158,191,63,132,2,29,107,225,251,135,3,99,138,61,227,73,87,230,198,168,119,10,174,77,47,191,155,158,204,97,40,12,109,240,20,178,64,95,26,203,53,222,31,220,70,93,107,77 };
    byte_vec_t pk { 4,181,42,38,195,247,196,221,231,123,173,87,52,1,236,81,217,84,182,169,145,199,177,105,195,192,8,215,145,116,34,180,163,73,220,19,193,212,255,143,202,156,19,54,133,213,216,246,39,160,32,239,211,108,197,196,167,126,245,55,160,108,97,214,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 227 ") {
    byte_vec_t msg { 58,67,17,103 };
    byte_vec_t sig { 150,232,111,156,99,81,104,178,211,18,113,182,237,155,173,86,244,149,246,119,161,117,38,224,93,10,133,242,43,129,170,102,149,81,21,92,109,86,1,200,20,150,166,179,112,110,23,62,92,248,160,231,83,240,203,115,161,194,233,154,41,29,100,156 };
    byte_vec_t pk { 4,158,16,165,168,24,32,122,246,124,211,250,96,14,108,47,58,49,77,154,106,14,162,29,158,111,213,111,111,161,190,198,75,133,40,121,142,112,177,64,168,66,55,77,39,217,187,205,248,36,165,162,46,39,233,131,8,142,186,186,72,179,71,122,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 227 ") {
    byte_vec_t msg { 47,50,163,129 };
    byte_vec_t sig { 210,121,77,90,111,19,76,193,61,55,247,39,107,33,112,141,118,98,161,61,26,96,197,218,177,174,111,115,55,112,18,35,188,123,151,199,168,167,97,55,122,117,27,87,145,241,70,164,40,124,255,232,254,239,1,32,148,91,173,14,28,104,181,205 };
    byte_vec_t pk { 4,82,118,163,176,89,193,145,29,89,243,199,146,219,141,162,36,64,194,14,129,218,248,14,196,200,99,64,58,213,205,84,239,197,184,114,33,14,196,220,41,20,59,39,81,251,184,136,101,188,90,162,226,238,245,18,137,183,149,29,181,125,66,133,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 228 ") {
    byte_vec_t msg { 73,97,255,188 };
    byte_vec_t sig { 39,191,254,41,225,230,220,224,5,121,227,43,73,101,213,51,68,144,239,4,181,209,160,71,127,108,220,149,205,77,6,120,193,58,204,208,19,51,173,224,57,51,101,240,177,124,222,240,188,160,245,19,13,97,141,246,185,28,52,199,127,41,182,69 };
    byte_vec_t pk { 4,113,61,15,193,121,89,72,5,122,96,120,68,60,192,7,35,101,157,187,148,135,119,249,12,11,244,238,52,10,41,187,180,31,153,8,136,162,133,136,51,189,207,102,82,119,184,193,5,84,194,230,223,232,243,200,56,15,111,43,202,154,48,237,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 228 ") {
    byte_vec_t msg { 48,155,216,91 };
    byte_vec_t sig { 128,100,37,74,159,251,227,25,15,238,219,74,152,80,180,92,49,157,99,51,93,170,230,73,108,210,148,155,123,247,87,99,187,162,168,52,108,33,0,184,183,60,71,183,173,18,157,155,236,122,242,167,106,49,68,156,121,133,116,131,19,75,77,187 };
    byte_vec_t pk { 4,151,69,254,222,85,232,97,234,189,69,21,19,190,254,122,82,90,42,201,66,217,6,252,222,115,210,73,80,175,191,64,233,109,37,252,254,173,127,155,77,225,234,77,145,0,51,242,70,90,10,9,57,26,212,147,250,228,154,100,120,16,179,118,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 229 ") {
    byte_vec_t msg { 189,196,139,143 };
    byte_vec_t sig { 37,106,109,205,59,62,143,167,171,150,158,203,131,184,44,52,143,2,199,224,45,123,236,144,209,233,122,26,137,116,80,52,4,44,131,15,212,177,209,33,46,75,36,2,161,199,198,245,10,56,87,173,192,9,250,167,226,76,164,6,226,43,33,116 };
    byte_vec_t pk { 4,137,131,30,44,250,81,30,171,17,65,24,136,128,42,123,54,32,147,136,77,29,181,125,133,229,60,90,83,181,141,135,242,212,152,189,174,25,7,38,62,53,67,222,23,172,191,67,217,20,148,209,88,116,249,62,179,80,114,173,95,195,147,72,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 229 ") {
    byte_vec_t msg { 233,214,185,52 };
    byte_vec_t sig { 84,176,129,70,94,197,154,67,137,83,223,27,204,91,120,227,148,70,227,152,157,95,195,248,244,134,211,210,59,170,255,48,239,130,187,70,184,245,40,181,148,50,18,84,204,55,253,201,166,108,202,220,117,52,211,124,12,11,75,71,73,103,132,1 };
    byte_vec_t pk { 4,186,139,22,17,156,203,175,77,212,77,42,167,176,39,98,227,22,37,94,182,169,68,136,94,88,186,217,203,88,20,135,108,154,233,148,203,194,78,231,74,152,99,172,216,243,34,142,241,226,25,54,142,157,4,239,211,209,166,107,20,208,14,191,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 230 ") {
    byte_vec_t msg { 71,162,61,234 };
    byte_vec_t sig { 111,204,98,127,84,60,25,9,36,45,2,83,218,145,140,23,131,211,101,58,194,160,76,158,127,136,49,143,42,131,115,43,244,56,234,242,148,200,65,40,233,126,145,64,196,171,204,60,42,247,19,155,248,68,145,115,52,127,155,97,193,69,144,16 };
    byte_vec_t pk { 4,255,95,62,189,230,122,199,36,182,200,204,97,215,187,25,93,171,145,123,138,91,194,174,200,8,89,132,97,91,106,188,218,243,247,58,242,114,143,156,106,238,103,140,119,1,182,83,51,162,249,113,104,149,106,66,134,66,36,77,91,169,50,187,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 230 ") {
    byte_vec_t msg { 101,68,47,137 };
    byte_vec_t sig { 0,136,100,185,65,47,24,161,208,226,6,89,204,23,138,121,75,29,109,19,131,25,129,233,37,141,142,75,242,77,219,209,163,9,165,34,15,200,96,214,148,222,46,220,213,189,180,65,212,111,90,182,165,239,24,169,146,209,111,145,172,117,166,146 };
    byte_vec_t pk { 4,161,182,131,102,134,47,153,32,173,131,52,28,50,73,78,107,18,20,68,34,40,96,36,210,172,62,192,141,211,196,173,209,173,131,84,206,102,151,51,232,137,203,27,36,18,201,208,174,146,161,158,29,247,213,143,89,230,134,173,227,29,13,8,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 231 ") {
    byte_vec_t msg { 149,165,64,247 };
    byte_vec_t sig { 232,32,108,39,96,136,73,81,168,100,99,156,94,127,36,195,223,153,189,160,216,231,207,70,202,238,22,208,1,149,48,122,175,89,91,253,177,170,252,200,88,8,13,179,150,181,237,18,156,160,57,65,176,232,225,27,158,218,214,154,187,201,71,216 };
    byte_vec_t pk { 4,249,184,110,223,208,19,61,110,113,237,66,31,0,43,201,202,152,223,74,241,222,8,90,66,113,157,234,200,44,165,30,130,121,124,163,249,159,91,164,152,154,236,182,136,87,121,151,226,30,151,117,231,143,99,225,1,78,252,189,189,252,223,144,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 231 ") {
    byte_vec_t msg { 36,51,206,102 };
    byte_vec_t sig { 226,35,75,29,21,16,150,28,172,158,222,199,28,120,233,94,20,84,112,169,212,255,142,215,122,230,113,152,2,55,85,122,163,177,148,87,86,60,243,112,182,53,24,163,73,197,211,175,231,238,48,208,80,206,186,80,100,220,62,14,36,213,112,29 };
    byte_vec_t pk { 4,15,171,31,73,108,103,212,247,68,108,10,33,172,10,238,120,145,50,224,237,78,65,118,44,190,127,217,198,161,218,192,238,134,70,223,14,160,199,67,15,178,144,83,181,31,176,32,158,249,37,213,41,9,136,90,137,203,42,137,129,131,14,162,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 232 ") {
    byte_vec_t msg { 4,4,168,211 };
    byte_vec_t sig { 116,241,173,26,144,80,49,68,208,203,190,39,54,172,65,184,243,148,210,251,12,193,202,44,59,18,26,110,183,27,165,215,243,146,38,197,234,32,224,149,251,128,175,203,91,28,6,171,5,84,146,177,206,158,238,41,16,122,225,78,182,24,177,207 };
    byte_vec_t pk { 4,202,164,84,221,158,120,8,162,18,252,138,11,13,109,138,241,242,194,236,232,99,72,26,45,200,96,253,203,194,15,142,48,176,205,104,167,153,199,59,65,119,20,70,56,114,26,168,112,220,45,135,4,177,252,145,110,198,122,0,215,153,115,125,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 232 ") {
    byte_vec_t msg { 199,23,165,21 };
    byte_vec_t sig { 230,93,178,38,203,155,39,221,134,216,246,148,253,114,245,171,142,105,7,121,198,120,99,220,246,13,253,66,68,33,80,163,245,196,45,242,3,70,233,151,185,10,102,104,199,249,51,113,60,12,57,199,129,37,191,162,170,247,193,149,147,152,134,210 };
    byte_vec_t pk { 4,43,233,134,58,64,45,149,87,77,58,71,228,76,22,115,80,49,18,102,214,19,6,166,58,55,178,75,105,207,48,178,186,152,154,247,187,67,151,128,205,185,21,150,58,46,119,237,65,2,158,37,39,148,124,34,146,110,224,113,63,160,117,225,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 233 ") {
    byte_vec_t msg { 208,202,251,87 };
    byte_vec_t sig { 144,157,43,36,238,164,151,160,112,73,195,105,48,245,106,108,37,244,183,44,45,222,101,26,23,9,242,5,152,254,113,188,149,12,212,33,123,65,88,21,11,159,8,244,199,178,143,63,170,177,240,51,18,97,161,4,98,199,34,100,121,192,246,185 };
    byte_vec_t pk { 4,115,157,244,173,29,172,159,115,151,88,214,211,74,151,198,177,123,150,113,224,240,233,161,96,173,1,50,219,172,42,221,38,165,197,167,184,185,133,207,55,74,201,38,72,222,142,99,44,120,190,39,55,137,227,88,219,169,83,195,207,2,237,118,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 233 ") {
    byte_vec_t msg { 1,177,232,15 };
    byte_vec_t sig { 187,32,47,95,32,171,169,166,115,81,90,11,197,144,156,23,174,2,122,234,219,89,138,28,104,180,40,189,195,172,190,243,77,75,71,132,22,81,0,253,30,83,149,109,99,4,64,252,60,221,121,37,205,189,156,30,219,142,153,124,182,191,217,8 };
    byte_vec_t pk { 4,216,244,45,142,126,76,89,141,157,195,144,128,108,150,2,195,83,145,27,232,227,54,243,222,100,121,126,13,104,24,220,199,69,223,13,75,18,6,191,6,181,35,0,36,94,164,194,60,84,232,83,220,32,190,148,5,196,132,150,244,44,225,101,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 234 ") {
    byte_vec_t msg { 143,68,192,62 };
    byte_vec_t sig { 121,153,93,204,25,248,88,194,53,34,18,197,68,30,212,68,208,84,182,187,119,191,148,214,135,57,74,93,174,231,215,28,213,31,217,29,26,126,234,162,56,139,116,221,5,32,248,25,144,187,82,156,196,217,185,121,131,121,223,110,238,109,245,129 };
    byte_vec_t pk { 4,101,152,171,0,76,86,219,164,30,226,183,205,237,94,61,172,90,78,25,140,1,223,12,149,204,194,122,20,86,141,242,250,47,58,239,140,73,1,249,178,198,32,217,5,15,53,197,232,106,42,235,70,22,12,94,231,62,40,55,169,37,93,135,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 234 ") {
    byte_vec_t msg { 203,232,2,187 };
    byte_vec_t sig { 173,117,45,97,181,134,7,126,245,69,165,126,189,147,214,49,168,167,251,247,67,239,159,126,87,95,44,1,1,119,245,247,109,118,181,186,144,67,160,225,61,58,150,111,111,202,71,75,174,139,12,174,132,45,18,197,210,176,233,128,98,143,182,255 };
    byte_vec_t pk { 4,228,223,126,24,30,5,126,222,116,240,156,151,225,86,132,91,203,222,246,168,227,235,94,237,21,139,197,228,166,39,1,169,206,196,21,176,69,95,2,73,71,30,128,143,252,193,71,136,62,39,35,52,95,11,115,176,249,152,29,43,213,111,74,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 235 ") {
    byte_vec_t msg { 159,46,105,133 };
    byte_vec_t sig { 243,222,14,222,13,80,161,249,179,115,101,202,108,120,72,165,112,13,59,92,82,248,32,112,251,5,105,40,239,179,39,241,175,30,251,63,49,81,138,206,189,83,73,132,146,86,181,94,235,92,166,55,74,214,36,241,97,118,245,78,172,219,27,31 };
    byte_vec_t pk { 4,223,75,228,211,30,255,229,243,74,36,104,50,126,159,188,178,178,91,128,98,194,51,111,141,21,142,158,178,124,105,64,57,142,14,8,29,100,103,55,17,245,203,29,120,32,55,170,13,18,9,234,16,99,135,170,2,60,3,33,169,125,124,247,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 235 ") {
    byte_vec_t msg { 234,54,43,116 };
    byte_vec_t sig { 249,154,113,211,207,54,11,241,46,201,43,28,123,177,241,245,155,172,105,107,112,249,84,14,239,135,242,135,63,62,20,233,247,183,89,172,228,94,147,19,77,217,200,233,83,128,145,16,63,69,1,64,207,117,241,189,132,203,67,42,15,235,121,25 };
    byte_vec_t pk { 4,195,68,23,169,116,161,78,47,141,135,109,170,201,166,28,220,141,242,245,11,242,172,121,198,120,151,42,72,178,39,188,123,79,165,248,51,145,203,188,219,69,90,221,237,149,19,144,3,22,242,82,155,107,220,124,215,109,127,177,113,23,182,71,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 236 ") {
    byte_vec_t msg { 71,6,230,0 };
    byte_vec_t sig { 190,167,106,61,132,157,190,246,105,97,59,201,40,182,252,147,86,64,251,174,161,175,239,5,220,54,219,10,98,27,252,152,219,107,127,238,84,66,130,242,206,134,138,183,219,227,133,179,166,165,55,75,3,157,195,219,60,207,101,89,27,56,175,106 };
    byte_vec_t pk { 4,174,36,62,130,71,250,17,48,15,175,150,93,218,32,219,125,18,246,171,127,159,109,39,57,3,186,223,246,47,80,28,222,33,237,26,4,71,81,99,140,227,185,141,25,228,157,249,217,19,177,182,206,156,121,102,223,224,29,250,207,173,42,89,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 236 ") {
    byte_vec_t msg { 56,131,214,158 };
    byte_vec_t sig { 4,199,99,196,182,220,137,148,149,127,229,101,76,231,183,125,238,221,191,134,21,197,228,27,73,148,204,3,71,126,155,154,9,105,219,129,247,74,27,210,226,48,62,149,118,140,95,91,35,109,5,250,190,214,158,64,153,86,226,53,213,16,29,20 };
    byte_vec_t pk { 4,34,207,144,154,63,40,254,185,32,207,73,207,94,74,42,158,113,218,206,29,85,1,84,108,197,150,77,220,228,136,168,137,130,83,154,56,191,148,198,33,126,20,202,102,214,217,248,205,132,28,72,81,67,125,253,28,88,61,12,220,201,200,140,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 237 ") {
    byte_vec_t msg { 92,202,111,210 };
    byte_vec_t sig { 116,177,169,131,193,143,222,18,252,142,247,5,47,69,35,49,164,184,134,93,132,86,39,150,131,45,174,23,247,208,38,234,71,249,17,169,34,94,43,207,198,80,178,175,61,148,63,29,117,224,251,141,88,114,20,118,180,124,136,104,209,167,105,125 };
    byte_vec_t pk { 4,129,219,33,212,121,189,107,147,40,174,22,231,165,100,220,125,36,237,99,82,236,229,77,6,41,103,200,230,73,13,59,69,102,151,250,112,161,175,52,110,248,23,165,111,213,191,239,154,4,240,107,152,115,43,62,144,215,205,176,226,255,153,233,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 237 ") {
    byte_vec_t msg { 99,44,142,118 };
    byte_vec_t sig { 37,61,9,172,64,152,217,174,12,166,141,212,5,117,92,236,241,193,246,62,179,251,181,63,124,244,97,11,243,84,172,69,70,90,65,31,255,206,84,118,240,196,10,242,73,207,25,178,165,100,98,217,134,26,72,151,224,1,86,209,119,214,129,62 };
    byte_vec_t pk { 4,71,68,206,230,73,26,129,171,4,62,139,223,112,237,5,231,224,252,195,188,121,238,177,169,202,251,128,21,150,2,93,250,89,253,15,68,255,79,236,94,247,162,64,158,158,25,82,86,24,138,30,34,179,121,117,128,71,190,128,149,96,119,187,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 238 ") {
    byte_vec_t msg { 35,241,3,127 };
    byte_vec_t sig { 234,226,159,45,54,26,120,220,7,250,95,144,234,236,236,130,133,231,15,85,146,66,11,30,151,111,225,44,84,91,66,1,255,41,180,70,11,135,179,36,232,66,54,63,30,167,30,4,180,228,221,251,185,201,243,182,30,179,31,55,68,88,83,198 };
    byte_vec_t pk { 4,62,221,13,54,136,231,200,216,213,91,169,62,242,191,34,161,68,116,234,203,20,37,155,98,103,121,128,83,162,100,155,80,181,1,137,61,243,230,7,59,91,217,127,242,41,13,179,148,60,100,197,229,119,117,140,65,149,81,177,255,167,47,144,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 238 ") {
    byte_vec_t msg { 127,226,172,178 };
    byte_vec_t sig { 69,85,237,100,169,236,184,201,231,68,35,39,199,47,55,146,86,238,98,163,129,186,12,200,91,226,191,137,201,20,229,128,105,152,95,35,29,216,79,217,144,111,143,66,115,113,44,52,50,122,27,37,8,199,38,226,113,49,95,209,30,77,239,41 };
    byte_vec_t pk { 4,250,42,36,238,189,175,237,162,214,151,140,54,40,219,141,250,9,145,108,0,157,18,208,43,193,151,247,123,193,96,113,68,188,25,93,25,180,142,100,221,148,101,77,70,181,202,116,152,79,93,33,247,225,67,7,72,90,87,231,58,200,239,235,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 239 ") {
    byte_vec_t msg { 232,16,195,86 };
    byte_vec_t sig { 165,139,211,53,159,244,117,254,126,66,152,72,127,74,116,34,128,8,112,155,249,170,216,161,227,153,112,102,212,147,82,177,39,64,5,212,136,13,49,126,216,21,46,126,10,58,133,75,168,237,92,42,225,12,193,228,156,48,58,115,83,125,76,44 };
    byte_vec_t pk { 4,110,32,238,29,173,189,180,208,207,1,68,70,200,93,45,212,217,107,53,170,71,2,241,137,234,151,158,95,141,3,164,186,30,243,159,51,230,93,200,94,65,96,24,51,242,220,202,28,252,209,103,104,138,22,116,12,76,82,230,14,251,226,42,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 239 ") {
    byte_vec_t msg { 181,71,30,206 };
    byte_vec_t sig { 26,235,223,153,194,37,237,141,38,149,142,203,51,212,45,79,23,234,134,175,32,148,73,64,132,103,117,218,169,173,225,135,197,16,255,62,247,36,235,104,62,8,208,14,224,254,214,0,47,249,122,13,179,212,93,16,249,78,47,207,50,98,10,176 };
    byte_vec_t pk { 4,39,245,245,84,249,208,168,30,46,29,94,102,111,116,174,73,239,93,222,192,123,113,119,26,160,48,214,168,171,153,0,155,160,230,95,163,205,254,173,192,177,238,69,98,24,163,252,55,133,60,182,102,104,52,86,170,36,81,228,200,170,29,46,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 240 ") {
    byte_vec_t msg { 30,131,66,67 };
    byte_vec_t sig { 181,49,37,99,126,103,150,76,248,86,125,124,195,2,144,199,50,163,158,18,226,105,238,116,155,230,180,243,213,232,250,14,30,210,200,191,74,188,43,119,66,7,181,150,146,107,221,207,51,34,172,243,125,70,170,165,126,29,141,187,163,112,67,73 };
    byte_vec_t pk { 4,243,127,144,30,68,66,107,126,163,85,11,101,14,124,185,165,20,176,211,9,92,62,115,186,4,39,7,8,249,147,122,109,185,185,223,27,241,102,217,30,13,123,80,169,64,158,29,252,56,246,4,87,44,26,205,228,89,129,130,46,233,208,82,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 240 ") {
    byte_vec_t msg { 188,151,75,248 };
    byte_vec_t sig { 108,62,130,53,19,6,140,248,62,116,157,243,125,6,205,77,180,2,137,86,78,183,57,225,179,49,16,115,110,231,2,153,16,229,71,221,9,172,63,204,134,217,183,155,79,199,229,241,43,226,241,216,246,202,233,212,121,166,75,44,91,162,89,78 };
    byte_vec_t pk { 4,57,36,224,187,111,62,107,137,194,76,254,9,120,67,246,220,224,44,240,147,221,101,212,213,61,146,83,60,45,46,23,209,141,247,143,191,14,140,38,186,174,28,26,114,193,81,192,75,130,227,93,153,183,225,222,76,116,151,24,39,158,153,228,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 241 ") {
    byte_vec_t msg { 245,246,252,211 };
    byte_vec_t sig { 175,227,61,246,144,132,66,68,225,5,104,83,186,95,112,100,22,236,205,188,167,62,179,105,144,153,163,44,34,246,1,199,217,146,129,132,93,190,27,225,201,172,90,163,62,145,59,41,147,160,46,173,101,251,227,46,49,57,120,227,228,93,114,214 };
    byte_vec_t pk { 4,37,235,225,191,178,50,202,232,127,113,21,48,203,83,113,62,211,168,150,217,5,185,43,19,241,136,203,212,21,215,6,9,157,196,164,48,28,126,35,233,48,228,108,236,148,197,255,234,21,94,92,218,104,61,204,29,124,5,16,36,186,229,64,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 241 ") {
    byte_vec_t msg { 192,132,243,204 };
    byte_vec_t sig { 112,221,133,127,227,143,65,234,76,190,211,4,42,142,163,41,44,190,156,38,92,213,95,188,134,32,9,33,215,107,226,144,206,51,165,255,2,140,147,109,149,197,169,161,60,12,175,93,109,133,219,178,79,226,84,183,206,96,79,170,42,73,253,198 };
    byte_vec_t pk { 4,18,102,35,66,251,192,120,83,136,137,11,33,96,129,46,147,16,50,18,229,129,28,23,183,252,51,255,69,203,182,187,64,251,56,149,119,183,89,94,90,172,207,221,58,198,149,238,221,41,185,136,42,12,148,181,247,197,164,220,192,105,67,173,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 242 ") {
    byte_vec_t msg { 101,132,86,194 };
    byte_vec_t sig { 54,77,160,43,207,138,127,149,252,15,89,149,152,102,31,49,25,190,90,58,155,237,35,101,90,142,53,238,189,63,44,140,7,179,240,234,20,211,142,136,227,119,202,113,165,128,16,41,75,61,21,132,159,51,240,141,203,164,240,174,114,196,1,233 };
    byte_vec_t pk { 4,158,73,68,120,44,116,127,174,18,206,31,249,254,50,186,191,6,250,66,111,68,102,157,86,20,239,29,185,71,140,139,59,245,142,229,57,117,150,172,216,48,145,185,162,63,184,12,134,151,108,145,242,23,199,218,83,74,104,135,203,140,136,149,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 242 ") {
    byte_vec_t msg { 22,221,156,79 };
    byte_vec_t sig { 140,7,50,179,30,39,245,96,123,37,127,25,207,117,238,180,73,51,177,135,237,55,135,222,202,46,166,51,54,131,211,40,87,201,94,19,104,251,4,187,125,0,139,74,204,170,110,105,198,156,117,144,89,81,52,78,225,34,232,117,83,76,127,127 };
    byte_vec_t pk { 4,80,155,36,103,88,88,215,102,177,236,198,135,107,107,81,112,152,93,11,248,26,127,123,98,102,248,236,56,166,80,55,12,125,252,37,172,178,13,202,33,196,56,203,33,15,219,144,145,81,232,47,132,159,1,160,144,134,120,148,194,36,139,85,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 243 ") {
    byte_vec_t msg { 171,95,232,192 };
    byte_vec_t sig { 107,42,174,136,132,134,238,235,13,212,104,235,235,144,215,192,95,197,86,64,239,230,11,209,32,67,9,69,26,254,185,3,97,157,27,148,166,13,157,157,193,53,170,102,115,238,113,219,85,25,57,94,154,243,231,101,202,54,238,195,133,223,134,125 };
    byte_vec_t pk { 4,217,95,53,153,189,113,12,104,242,153,76,121,156,78,109,86,214,31,139,214,0,67,7,221,69,122,202,88,99,38,234,253,210,197,135,172,67,242,88,55,175,232,19,179,231,97,93,171,168,1,125,205,1,202,26,36,55,81,39,122,70,100,95,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 243 ") {
    byte_vec_t msg { 111,109,127,174 };
    byte_vec_t sig { 62,154,21,79,233,15,63,156,111,124,28,47,232,132,247,45,27,165,9,177,229,252,185,119,70,213,243,32,137,105,87,128,128,169,119,219,254,200,71,237,40,83,199,32,89,208,21,56,72,188,48,186,123,237,117,194,74,112,222,241,4,248,37,58 };
    byte_vec_t pk { 4,239,108,138,108,18,148,33,123,89,116,125,41,56,179,24,98,159,82,148,158,217,120,154,116,120,105,216,65,84,167,21,222,160,253,76,224,88,100,63,161,117,230,30,76,14,7,137,115,24,234,27,126,162,159,59,77,133,68,3,22,45,67,148,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 244 ") {
    byte_vec_t msg { 250,2,13,141 };
    byte_vec_t sig { 146,74,105,195,188,205,92,186,28,32,234,123,108,108,102,98,217,15,80,81,98,211,112,211,226,227,111,27,117,0,222,62,12,236,109,22,59,80,18,202,189,69,179,239,179,199,255,54,43,147,61,220,160,254,130,37,13,220,109,124,211,65,137,79 };
    byte_vec_t pk { 4,54,132,152,143,167,195,55,8,37,219,210,201,207,233,229,36,168,254,195,64,24,28,192,25,73,187,149,170,108,140,166,164,161,29,50,76,108,215,241,99,77,199,76,238,203,172,202,172,30,70,250,25,139,212,168,103,146,213,138,183,144,113,104,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 244 ") {
    byte_vec_t msg { 164,86,10,71 };
    byte_vec_t sig { 221,78,202,175,255,188,206,2,177,120,184,206,241,177,52,132,116,155,136,53,51,155,236,34,22,240,184,27,11,5,49,93,150,1,5,96,190,172,250,101,144,101,97,163,142,37,194,107,232,99,52,45,224,221,134,169,3,150,8,100,217,186,28,114 };
    byte_vec_t pk { 4,162,153,88,51,80,71,243,60,215,100,15,73,210,146,41,72,107,109,207,44,195,147,110,100,223,142,11,75,216,95,223,250,43,38,188,176,161,14,213,22,34,217,80,213,74,80,78,22,140,95,252,32,113,123,244,119,140,129,219,131,152,166,123,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 245 ") {
    byte_vec_t msg { 203,206,56,39 };
    byte_vec_t sig { 197,154,144,117,88,162,110,201,224,170,249,247,101,45,137,238,53,227,114,199,160,43,117,162,182,35,129,89,161,147,158,228,104,45,59,138,31,130,65,225,185,224,71,137,150,110,160,154,251,187,56,142,17,17,223,227,193,27,137,190,176,199,89,96 };
    byte_vec_t pk { 4,8,86,206,78,101,72,166,141,153,19,114,56,207,190,248,155,65,250,82,228,59,120,130,149,114,110,137,80,166,19,198,28,234,14,100,225,170,103,205,182,148,120,34,41,28,163,204,154,75,236,68,208,99,222,192,250,6,248,248,215,199,117,227,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 245 ") {
    byte_vec_t msg { 10,90,15,53 };
    byte_vec_t sig { 17,228,69,165,64,169,243,153,220,117,174,182,58,181,70,171,105,243,224,180,28,237,229,52,189,172,145,43,67,134,189,86,163,133,206,161,10,240,192,33,180,29,158,105,157,187,14,13,11,1,136,80,148,157,228,73,220,53,235,174,184,105,51,153 };
    byte_vec_t pk { 4,96,82,152,21,110,87,38,234,82,253,177,220,60,0,179,152,245,162,13,188,144,116,156,22,79,47,109,241,91,76,216,179,127,245,239,57,168,57,180,10,58,195,86,242,203,120,190,222,122,12,71,90,105,115,35,75,222,219,247,201,227,206,179,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 246 ") {
    byte_vec_t msg { 72,249,77,201 };
    byte_vec_t sig { 155,195,30,80,12,166,109,144,231,99,185,191,37,153,51,103,42,117,102,216,63,218,66,15,219,82,241,157,59,207,107,175,225,103,175,196,205,121,252,12,39,192,206,116,189,118,101,76,104,24,169,177,168,200,165,244,106,124,136,180,246,155,180,154 };
    byte_vec_t pk { 4,34,70,208,158,211,86,35,181,43,210,188,167,125,251,225,255,189,202,186,77,48,74,44,200,55,216,95,45,108,33,70,31,169,109,8,145,98,3,57,107,189,195,45,43,89,142,36,40,18,91,23,211,21,108,76,149,59,192,114,60,132,231,153,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 246 ") {
    byte_vec_t msg { 79,60,24,32 };
    byte_vec_t sig { 52,62,223,138,80,143,69,33,226,92,239,239,247,102,185,193,53,179,152,161,253,64,206,90,49,33,6,151,79,115,124,237,186,177,184,205,126,91,2,180,211,131,107,148,154,197,87,38,23,109,159,138,165,21,42,95,84,87,104,177,16,52,191,35 };
    byte_vec_t pk { 4,164,134,179,164,229,24,253,240,253,59,247,13,52,217,217,185,193,79,230,1,208,12,207,133,185,151,186,52,38,28,107,58,152,8,112,166,32,144,235,6,56,204,167,188,247,85,250,243,178,246,54,215,94,175,183,214,231,187,79,95,127,75,51,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 247 ") {
    byte_vec_t msg { 178,58,201,166 };
    byte_vec_t sig { 67,89,167,100,76,206,174,251,159,8,181,122,161,27,38,49,240,115,172,118,158,170,217,134,31,211,99,3,91,175,15,117,91,51,176,93,19,118,168,1,182,150,32,190,39,48,28,7,175,90,25,144,207,48,241,192,24,237,211,220,59,244,27,101 };
    byte_vec_t pk { 4,175,3,37,149,165,206,38,213,215,18,242,62,236,154,156,94,32,211,186,191,75,188,78,1,163,96,181,166,118,209,203,139,147,189,95,152,194,132,210,143,1,8,5,109,128,138,194,4,31,153,232,255,45,63,29,162,52,212,253,4,141,233,82,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 247 ") {
    byte_vec_t msg { 104,106,81,49 };
    byte_vec_t sig { 70,232,209,28,40,113,83,103,162,236,134,87,52,45,72,180,253,65,67,47,29,142,181,57,160,30,185,208,28,100,191,78,196,107,201,206,109,227,18,137,4,200,204,97,131,214,227,168,88,16,222,218,149,7,224,12,63,108,87,172,219,95,219,103 };
    byte_vec_t pk { 4,22,3,2,51,65,13,138,37,68,67,97,36,122,210,159,211,118,221,139,182,234,131,81,68,71,46,231,57,69,241,92,157,182,40,31,149,178,249,134,61,108,251,161,111,1,2,94,17,46,206,138,231,97,1,215,240,146,187,51,239,75,44,53,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 248 ") {
    byte_vec_t msg { 101,184,58,251 };
    byte_vec_t sig { 10,109,243,150,12,46,34,169,153,19,79,229,109,104,58,131,60,51,208,77,254,212,93,93,8,81,16,10,92,128,104,171,189,7,221,175,180,193,14,107,72,30,168,211,69,200,191,208,48,197,158,244,47,230,150,97,150,87,132,32,100,98,86,67 };
    byte_vec_t pk { 4,160,121,43,47,91,14,213,90,43,106,156,32,138,115,139,135,138,91,92,219,39,240,207,22,223,6,15,64,232,233,123,159,226,204,148,242,159,6,131,156,53,164,209,188,38,104,108,113,134,228,188,161,65,221,122,65,9,44,145,185,240,13,215,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 248 ") {
    byte_vec_t msg { 231,19,111,45 };
    byte_vec_t sig { 46,144,202,227,82,198,117,45,70,154,142,96,202,27,198,249,12,28,33,201,224,72,160,203,181,177,148,60,167,159,57,133,41,189,255,87,113,216,198,249,23,190,119,139,240,109,202,75,196,241,183,23,50,183,124,74,144,250,178,22,13,119,184,199 };
    byte_vec_t pk { 4,172,235,235,253,133,130,81,112,192,10,70,188,172,130,96,96,253,183,195,112,220,11,146,69,63,32,193,248,18,85,188,67,32,45,138,59,53,40,158,41,49,243,237,233,30,172,252,81,73,187,82,205,212,189,215,85,30,252,214,143,21,252,248,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 249 ") {
    byte_vec_t msg { 42,242,64,105 };
    byte_vec_t sig { 225,160,134,37,70,66,123,246,213,11,242,77,17,249,103,47,15,190,215,96,155,10,219,230,33,234,0,190,186,232,190,97,11,237,153,9,107,2,128,142,192,26,116,122,110,10,230,180,105,211,19,145,212,46,204,180,246,86,214,185,159,195,219,139 };
    byte_vec_t pk { 4,195,135,68,33,188,68,82,22,204,104,136,31,20,31,242,16,52,107,152,203,63,73,253,127,177,23,164,200,94,148,238,219,121,161,122,125,37,38,21,237,188,30,41,224,31,220,213,8,152,26,182,164,81,107,207,225,26,67,72,44,13,49,28,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 249 ") {
    byte_vec_t msg { 179,162,59,111 };
    byte_vec_t sig { 121,65,165,114,42,14,18,108,203,248,255,150,142,21,252,161,19,189,141,240,65,147,160,157,75,16,217,251,226,170,21,15,1,153,142,82,142,224,93,176,16,17,143,158,254,223,184,157,152,110,212,243,189,18,206,205,250,25,81,208,45,22,86,220 };
    byte_vec_t pk { 4,216,20,209,37,113,140,152,174,104,54,201,155,42,27,129,144,90,84,62,128,57,99,86,71,75,28,51,195,188,144,51,225,56,106,53,33,134,158,36,52,238,131,122,167,30,48,139,52,44,107,47,183,66,234,57,223,167,60,223,111,219,5,247,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 250 ") {
    byte_vec_t msg { 90,193,42,162 };
    byte_vec_t sig { 40,201,120,166,51,100,115,225,155,24,40,117,47,183,86,96,126,73,156,124,80,180,188,149,159,228,51,29,108,133,5,112,242,230,207,17,151,10,251,85,22,59,96,33,198,238,25,252,141,232,190,196,231,234,240,12,226,174,0,25,76,229,111,23 };
    byte_vec_t pk { 4,95,28,13,147,217,182,55,244,78,110,38,21,230,148,209,202,167,45,27,190,189,253,119,170,54,4,90,208,143,130,16,75,4,197,62,244,224,160,220,205,28,151,9,59,54,111,122,26,161,48,93,151,216,204,68,227,241,142,104,112,107,139,177,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 250 ") {
    byte_vec_t msg { 241,251,176,183 };
    byte_vec_t sig { 70,203,61,154,60,6,132,164,30,170,110,115,149,115,194,92,91,176,160,10,70,142,16,209,216,208,192,175,72,100,7,58,9,162,189,247,46,114,192,139,84,72,83,97,248,238,48,90,127,226,153,75,223,136,65,99,255,121,16,238,65,173,87,135 };
    byte_vec_t pk { 4,240,126,57,71,138,37,146,228,18,95,34,89,217,32,32,98,92,161,31,146,217,113,40,53,178,112,11,17,102,32,241,242,141,169,235,62,92,56,136,135,232,224,158,207,244,56,3,45,137,192,155,134,51,197,148,168,165,190,113,100,141,159,127,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 251 ") {
    byte_vec_t msg { 35,207,139,142 };
    byte_vec_t sig { 117,39,43,229,100,230,237,9,124,185,245,40,85,226,21,33,27,116,44,211,212,136,193,243,32,157,126,196,196,116,215,150,48,33,147,17,160,121,197,105,134,27,117,11,172,58,22,87,119,222,144,95,210,142,174,29,218,149,173,238,0,83,105,151 };
    byte_vec_t pk { 4,123,4,44,225,71,125,21,79,113,141,69,103,208,89,210,108,30,59,186,145,138,239,99,57,228,200,6,46,21,206,56,12,188,210,126,233,247,194,206,74,172,70,248,57,105,244,236,144,4,144,184,194,236,196,207,168,33,37,197,231,131,195,90,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 251 ") {
    byte_vec_t msg { 0,186,161,217 };
    byte_vec_t sig { 78,171,32,236,74,137,30,128,39,241,5,119,136,69,247,179,237,30,22,233,64,246,178,224,154,226,142,213,244,36,155,33,171,39,18,63,188,126,17,36,128,8,188,208,71,202,232,115,184,27,103,103,97,233,29,170,59,218,15,87,185,22,215,185 };
    byte_vec_t pk { 4,150,95,220,81,207,84,138,92,232,192,4,239,211,171,213,29,103,69,207,126,59,65,194,239,86,237,141,240,179,82,158,7,85,55,80,14,245,84,222,76,192,7,204,122,82,148,26,85,204,160,27,115,11,234,108,0,8,84,18,152,4,104,117,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 252 ") {
    byte_vec_t msg { 54,201,185,136 };
    byte_vec_t sig { 22,162,154,132,150,54,37,222,246,4,21,171,41,232,192,224,208,51,135,100,99,39,240,154,99,253,68,142,163,244,237,107,50,51,252,200,124,7,54,160,130,22,3,14,207,108,160,133,58,92,195,34,237,246,42,168,47,208,237,63,24,254,61,204 };
    byte_vec_t pk { 4,130,57,130,62,151,14,29,98,171,66,13,137,34,209,155,119,97,95,91,33,233,195,53,34,42,248,203,66,242,68,170,232,23,12,53,232,4,6,119,41,63,46,250,3,170,105,72,51,111,83,33,19,128,15,247,68,44,178,154,14,76,173,69,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 252 ") {
    byte_vec_t msg { 170,207,122,26 };
    byte_vec_t sig { 86,221,69,188,23,115,45,70,153,151,210,48,111,13,176,241,182,97,89,91,53,173,110,36,155,219,5,136,233,209,102,149,254,23,139,17,57,222,83,107,182,22,112,214,143,230,38,71,153,31,42,164,155,204,252,53,211,46,31,238,211,176,99,162 };
    byte_vec_t pk { 4,103,47,212,129,188,193,32,249,124,51,132,96,161,169,163,198,185,121,116,164,2,95,66,237,130,183,116,96,240,4,7,101,2,167,116,115,15,199,137,205,30,234,211,174,173,238,117,164,252,148,210,146,227,77,231,57,72,140,209,230,193,52,156,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 253 ") {
    byte_vec_t msg { 108,22,253,231 };
    byte_vec_t sig { 40,178,74,130,70,17,19,60,42,9,142,185,244,33,109,15,209,36,129,154,14,248,150,182,89,131,177,187,145,46,127,148,83,7,12,73,44,155,73,203,225,118,2,143,240,128,193,106,213,79,88,246,166,250,71,19,132,58,117,122,163,62,12,30 };
    byte_vec_t pk { 4,50,186,142,112,19,60,158,40,21,209,169,227,172,25,199,219,93,184,84,132,121,104,13,6,205,57,216,152,158,4,209,104,207,24,126,84,214,203,92,105,62,55,216,61,231,206,174,235,85,152,195,121,5,181,152,200,106,248,84,170,250,125,74,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 253 ") {
    byte_vec_t msg { 146,132,20,115 };
    byte_vec_t sig { 96,239,37,26,20,124,186,50,135,135,81,35,209,171,138,6,244,187,92,47,156,21,140,99,1,15,81,185,1,197,252,4,1,117,171,98,3,221,96,227,154,176,216,111,100,25,58,70,36,208,76,143,219,167,97,44,107,230,102,241,239,94,184,242 };
    byte_vec_t pk { 4,89,170,132,223,190,179,157,132,144,157,226,33,133,16,180,21,121,245,185,134,95,168,67,144,180,102,249,206,248,185,177,116,68,24,241,7,86,169,149,53,182,142,163,107,114,217,106,217,23,199,203,44,200,19,150,88,194,147,32,162,246,199,11,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 254 ") {
    byte_vec_t msg { 97,238,196,31 };
    byte_vec_t sig { 45,3,201,63,40,35,38,160,216,35,153,115,175,250,114,254,142,183,109,215,66,194,81,153,2,150,38,143,97,18,139,166,157,148,78,252,28,46,95,4,145,213,144,230,54,15,156,100,72,205,235,4,84,227,112,51,158,195,90,71,77,102,31,50 };
    byte_vec_t pk { 4,219,255,52,24,134,127,9,106,109,163,122,238,87,87,213,56,142,249,123,91,46,11,181,224,169,198,147,174,108,103,211,238,254,192,157,207,49,144,233,106,9,169,185,217,22,159,33,67,75,163,44,22,123,186,110,34,203,73,97,10,188,170,120,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 254 ") {
    byte_vec_t msg { 89,52,89,148 };
    byte_vec_t sig { 132,250,251,90,1,49,130,232,18,43,41,80,158,113,160,147,162,100,78,178,228,27,230,53,162,223,221,72,193,106,61,163,72,202,123,32,246,187,91,238,150,39,115,231,137,187,12,187,26,232,107,207,77,139,101,70,124,27,166,173,151,36,123,19 };
    byte_vec_t pk { 4,244,172,176,45,144,72,112,106,73,217,94,41,50,62,232,0,222,1,190,243,12,9,235,45,60,177,23,23,108,85,176,41,216,4,200,202,230,4,84,38,4,205,53,75,10,8,209,88,211,85,13,82,64,175,241,6,41,115,251,61,52,231,208,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 255 ") {
    byte_vec_t msg { 244,104,122,63 };
    byte_vec_t sig { 217,54,226,107,245,43,176,251,50,6,243,18,232,129,31,218,61,171,143,11,93,86,65,255,54,5,202,25,163,99,211,215,66,250,104,48,198,135,20,139,124,236,209,2,149,172,253,225,135,107,244,113,183,9,159,228,152,80,225,246,194,211,224,40 };
    byte_vec_t pk { 4,108,145,24,52,237,38,30,227,176,206,72,19,237,243,233,40,83,58,94,190,120,231,68,66,18,155,135,105,80,195,113,3,85,149,156,206,91,11,162,108,197,17,222,27,134,207,248,194,120,0,179,10,127,164,252,189,81,27,86,241,56,227,95,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 255 ") {
    byte_vec_t msg { 237,209,165,193 };
    byte_vec_t sig { 104,34,147,37,7,137,209,115,183,124,173,78,161,134,12,219,254,0,119,8,181,231,204,237,229,89,136,45,206,231,144,247,176,93,206,145,33,214,54,12,179,191,17,175,1,70,110,114,194,8,196,247,182,201,53,28,162,89,25,205,228,124,218,84 };
    byte_vec_t pk { 4,136,86,244,179,200,103,157,198,130,85,168,37,253,158,212,80,106,100,52,97,140,159,143,7,42,5,95,25,191,134,201,112,54,166,108,66,153,207,200,21,232,233,114,192,182,130,198,18,223,58,93,200,169,159,79,177,203,149,235,117,221,115,55,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 256 ") {
    byte_vec_t msg { 126,202,204,13 };
    byte_vec_t sig { 32,162,70,227,6,13,22,111,10,148,76,148,82,0,73,240,160,125,111,71,166,145,20,170,63,90,104,174,89,100,47,176,206,200,144,181,181,81,179,68,141,8,158,235,242,112,53,160,251,201,243,246,173,171,150,239,113,113,203,255,222,22,238,202 };
    byte_vec_t pk { 4,224,158,10,140,155,105,37,129,150,192,252,25,235,100,236,38,68,0,177,26,167,65,21,102,203,201,213,214,195,181,234,71,123,87,244,249,212,28,5,3,83,46,138,196,91,145,225,149,39,41,176,143,174,247,96,91,113,88,38,183,21,68,138,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 256 ") {
    byte_vec_t msg { 78,132,188,196 };
    byte_vec_t sig { 120,201,227,18,190,127,1,168,47,244,152,0,92,95,217,154,86,78,95,111,197,27,237,77,143,242,161,205,66,65,96,246,214,214,158,131,219,60,228,78,88,19,176,31,26,69,112,69,212,107,246,244,74,231,161,226,166,31,42,179,1,1,35,11 };
    byte_vec_t pk { 4,81,233,148,184,201,239,254,17,136,245,31,38,229,224,147,0,124,122,211,162,241,46,83,22,185,59,224,83,8,142,181,168,57,142,212,31,75,189,5,213,135,133,56,232,16,53,91,10,54,222,239,126,0,23,117,4,229,121,191,207,106,236,158,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 257 ") {
    byte_vec_t msg { 251,165,106,23 };
    byte_vec_t sig { 213,131,11,172,17,163,253,38,84,74,229,249,38,101,118,246,251,223,102,183,29,204,33,166,101,99,179,85,181,183,182,24,9,149,123,17,77,82,49,206,242,188,130,20,119,103,134,70,164,13,233,41,100,143,78,152,182,44,144,85,138,240,237,11 };
    byte_vec_t pk { 4,59,94,175,108,45,216,17,5,212,201,135,221,233,95,171,153,42,33,130,143,223,204,94,187,165,46,139,232,147,116,15,204,175,254,2,203,188,189,35,214,183,129,20,20,144,229,102,2,95,246,81,241,119,147,244,110,104,134,78,79,174,35,144,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 257 ") {
    byte_vec_t msg { 215,12,39,44 };
    byte_vec_t sig { 68,50,155,230,0,245,119,104,244,86,53,226,195,161,40,26,220,188,81,16,165,190,254,220,210,89,142,241,187,84,40,91,145,166,45,75,211,58,230,192,58,181,219,2,39,119,128,237,21,127,41,88,127,102,109,247,101,162,147,60,26,37,165,188 };
    byte_vec_t pk { 4,176,140,121,202,39,206,242,0,39,30,140,19,6,199,154,27,247,165,88,102,19,211,79,107,58,201,188,169,158,92,63,179,122,27,137,197,206,39,163,14,21,9,195,135,17,156,191,206,186,236,18,202,44,240,237,83,29,88,11,206,33,224,122,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 258 ") {
    byte_vec_t msg { 34,173,240,6 };
    byte_vec_t sig { 253,102,156,61,220,96,147,201,98,150,91,155,75,34,88,216,84,150,184,30,193,164,97,220,138,231,98,62,60,224,19,80,29,67,126,15,87,47,214,18,104,101,192,2,132,41,27,144,131,93,121,165,60,91,154,125,166,139,95,28,70,89,99,71 };
    byte_vec_t pk { 4,25,95,6,147,245,236,32,164,201,231,86,21,48,24,221,6,39,161,156,10,207,223,83,71,136,127,175,141,55,30,181,122,135,125,221,181,122,211,3,202,214,32,110,184,89,13,181,73,84,212,162,139,210,12,61,254,156,87,202,9,36,89,195,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 258 ") {
    byte_vec_t msg { 131,94,165,119 };
    byte_vec_t sig { 117,226,100,211,245,154,87,230,81,166,190,55,31,37,159,22,60,173,64,108,202,140,66,50,40,255,238,48,214,124,201,211,199,0,15,162,137,116,117,81,93,197,27,169,127,174,34,88,132,103,233,47,5,69,175,106,127,20,25,101,165,67,47,93 };
    byte_vec_t pk { 4,32,108,60,76,130,76,152,183,80,159,71,233,162,248,205,53,6,141,13,237,43,68,27,112,126,46,203,194,225,68,246,186,30,234,123,227,254,253,176,210,132,7,102,163,137,32,81,110,224,187,98,26,76,209,189,83,116,129,244,58,25,50,14,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 259 ") {
    byte_vec_t msg { 237,127,81,188 };
    byte_vec_t sig { 155,84,103,113,185,40,72,82,59,4,188,196,238,18,98,100,240,52,213,106,85,109,236,220,49,63,164,70,202,255,196,148,57,13,141,135,127,122,97,171,185,177,55,11,18,65,137,188,207,132,252,193,147,161,52,51,104,133,45,88,170,240,164,84 };
    byte_vec_t pk { 4,140,33,111,245,101,139,9,34,187,243,3,57,62,48,144,46,183,198,153,47,235,223,252,131,203,234,218,171,87,195,235,203,44,162,82,53,92,204,186,1,20,62,74,187,203,158,12,93,134,10,99,42,237,185,70,147,16,71,189,36,224,75,61,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 259 ") {
    byte_vec_t msg { 11,190,46,96 };
    byte_vec_t sig { 23,66,104,208,177,216,96,160,174,2,177,220,40,251,6,31,32,21,45,78,79,216,151,125,13,254,24,225,226,179,146,233,103,102,250,146,231,87,126,95,122,50,135,228,166,149,44,185,227,224,255,92,82,35,168,116,55,220,123,95,168,26,40,182 };
    byte_vec_t pk { 4,39,59,182,233,244,69,89,146,130,186,104,99,69,203,176,58,201,87,69,9,192,111,7,38,185,213,50,170,43,229,220,167,238,14,194,129,167,23,184,239,14,31,138,87,243,128,125,124,190,28,216,207,48,190,223,75,157,117,61,9,176,176,168,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 260 ") {
    byte_vec_t msg { 140,253,19,46 };
    byte_vec_t sig { 97,177,121,42,249,243,4,65,69,187,244,96,18,176,81,235,159,239,225,179,52,219,33,200,111,177,218,45,44,229,158,28,82,222,24,207,54,113,125,121,234,198,223,94,202,9,205,13,169,50,119,254,172,41,50,188,22,16,193,63,60,141,15,106 };
    byte_vec_t pk { 4,245,129,1,212,45,104,59,54,187,147,45,117,240,68,208,159,65,3,139,2,208,79,250,227,55,136,201,160,12,206,99,1,15,251,222,175,79,244,237,123,222,104,194,180,125,1,65,54,101,181,91,160,51,0,74,173,198,25,147,143,178,99,175,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 260 ") {
    byte_vec_t msg { 104,217,15,134 };
    byte_vec_t sig { 23,245,195,44,77,56,62,32,151,46,15,177,6,196,205,135,113,127,70,104,115,191,63,236,111,50,210,17,27,63,240,168,197,148,192,210,67,152,212,175,97,28,181,76,221,83,144,129,211,160,84,191,97,38,225,48,53,161,82,14,100,204,11,28 };
    byte_vec_t pk { 4,100,207,221,80,182,86,115,126,222,101,119,57,62,18,125,164,118,2,41,212,94,64,249,37,240,120,187,1,158,64,252,173,151,218,102,77,137,39,88,159,58,20,197,179,111,145,221,225,171,209,73,124,167,26,19,42,75,54,254,21,137,126,121,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 261 ") {
    byte_vec_t msg { 187,37,249,233 };
    byte_vec_t sig { 100,1,191,20,207,70,60,56,231,178,222,75,15,130,100,70,25,250,23,201,26,83,89,211,165,250,101,129,57,3,253,132,78,211,100,112,138,186,154,121,156,151,164,123,178,196,158,132,240,191,16,17,114,115,168,235,16,29,166,252,195,98,70,213 };
    byte_vec_t pk { 4,201,17,189,225,223,47,6,162,214,25,98,202,24,61,178,93,218,165,153,175,252,183,177,120,28,137,157,122,46,13,149,116,47,234,199,30,133,116,131,46,27,182,86,158,207,34,109,239,149,97,236,183,254,139,50,121,14,10,24,103,250,83,97,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 261 ") {
    byte_vec_t msg { 23,2,77,115 };
    byte_vec_t sig { 56,206,52,130,241,148,220,238,135,89,255,71,134,15,142,1,244,230,137,99,205,82,109,56,171,13,99,35,48,85,61,5,186,254,117,21,249,165,101,158,152,18,70,47,24,181,208,67,75,94,41,125,159,221,152,243,2,17,245,99,180,227,125,20 };
    byte_vec_t pk { 4,245,112,128,134,44,226,69,65,66,29,31,164,105,100,202,38,64,91,218,169,56,246,227,40,146,172,54,16,42,94,122,132,18,140,201,138,59,9,53,229,183,78,86,34,109,76,249,182,235,195,200,18,153,1,45,45,57,198,137,134,89,64,192,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 262 ") {
    byte_vec_t msg { 64,220,152,45 };
    byte_vec_t sig { 202,156,167,4,137,255,83,154,64,124,45,2,0,28,246,172,133,228,125,137,142,193,164,65,175,158,249,210,188,204,209,8,10,116,171,122,64,14,128,171,142,134,163,72,246,201,251,197,138,186,40,184,145,63,101,105,237,229,186,196,98,94,219,82 };
    byte_vec_t pk { 4,251,15,96,204,205,32,80,64,252,191,179,79,184,100,170,203,96,153,127,17,176,133,248,97,231,73,201,24,49,237,238,165,45,26,70,216,93,206,67,254,53,162,150,148,130,115,111,208,106,98,149,245,246,200,166,186,83,86,14,33,131,210,193,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 262 ") {
    byte_vec_t msg { 90,241,37,153 };
    byte_vec_t sig { 158,44,169,70,21,42,233,62,176,21,28,156,35,78,85,206,141,25,231,44,151,184,19,154,147,137,103,23,228,4,23,129,221,39,252,197,37,170,6,238,90,128,36,184,198,14,39,184,51,183,242,27,55,66,246,203,44,150,217,40,77,14,30,140 };
    byte_vec_t pk { 4,224,152,141,201,208,160,3,184,212,13,15,196,246,17,112,31,30,81,75,178,21,211,155,127,91,220,77,77,180,54,175,148,114,186,69,120,64,11,239,128,157,132,117,41,79,200,64,16,153,187,25,8,137,240,234,76,252,136,178,31,223,140,212,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 263 ") {
    byte_vec_t msg { 45,122,56,54 };
    byte_vec_t sig { 208,38,110,250,96,170,150,106,226,2,212,178,82,221,231,222,232,19,175,149,194,79,55,36,123,12,139,113,144,148,115,157,167,56,94,109,26,229,96,228,22,41,244,202,170,217,28,155,38,12,5,205,195,235,71,67,211,65,97,62,37,169,23,242 };
    byte_vec_t pk { 4,39,99,112,5,45,209,26,139,124,245,205,34,203,97,168,153,141,16,115,101,133,85,38,252,78,159,192,172,116,157,245,22,79,195,1,75,73,186,146,188,142,37,128,171,19,187,142,188,194,48,72,205,93,130,132,131,7,183,183,249,214,186,235,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 263 ") {
    byte_vec_t msg { 19,158,77,199 };
    byte_vec_t sig { 151,107,98,48,188,67,5,166,1,65,168,66,186,184,158,138,95,179,47,178,0,63,191,182,40,238,94,75,97,145,8,62,209,34,184,78,191,74,91,31,159,57,5,252,185,16,81,203,57,214,148,43,55,34,159,42,76,180,159,11,224,107,16,159 };
    byte_vec_t pk { 4,125,110,88,228,38,117,211,170,205,145,41,125,88,33,35,88,58,9,49,96,128,190,200,185,4,177,20,247,130,237,202,11,36,246,251,110,71,6,224,180,181,74,118,70,70,40,195,79,235,245,101,30,201,210,181,160,112,126,163,6,135,125,20,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 264 ") {
    byte_vec_t msg { 25,176,49,84 };
    byte_vec_t sig { 169,56,247,233,231,222,28,154,221,148,120,99,120,105,117,34,74,85,181,126,127,223,201,186,142,6,29,147,77,159,209,231,162,83,100,208,87,26,238,162,127,211,182,119,233,203,148,179,234,184,219,169,70,246,8,178,247,43,229,195,45,221,143,156 };
    byte_vec_t pk { 4,114,127,79,116,30,165,62,59,132,141,116,153,149,6,75,115,151,12,22,98,11,185,82,187,247,183,226,243,52,191,115,211,162,23,174,186,31,194,218,94,154,64,165,229,77,47,50,8,34,140,229,130,3,27,151,201,165,16,53,101,128,204,50,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 264 ") {
    byte_vec_t msg { 195,81,99,148 };
    byte_vec_t sig { 25,114,98,210,220,99,201,109,27,24,137,227,26,134,101,106,53,33,87,151,227,120,55,66,7,110,99,88,179,140,43,119,80,48,208,97,25,197,106,125,165,62,82,175,71,4,23,237,23,16,147,158,63,22,80,150,191,3,104,214,104,168,249,33 };
    byte_vec_t pk { 4,29,86,164,190,24,54,139,234,0,19,67,195,89,182,214,30,57,141,57,135,241,222,176,184,222,166,55,209,6,149,99,16,177,145,62,33,80,171,128,136,106,165,97,176,140,60,133,218,13,53,233,151,39,144,152,203,54,54,187,140,248,89,234,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 265 ") {
    byte_vec_t msg { 124,125,194,179 };
    byte_vec_t sig { 34,32,113,93,94,44,42,116,192,107,3,102,236,234,212,98,24,48,239,99,205,242,164,41,174,253,48,203,183,229,59,160,66,214,237,171,93,210,32,66,144,249,13,208,115,248,168,179,54,122,230,116,12,70,171,136,115,157,226,73,239,209,147,56 };
    byte_vec_t pk { 4,177,90,33,108,156,157,209,201,251,241,3,69,252,207,96,56,162,223,114,97,132,100,214,186,151,128,242,141,138,145,192,130,197,176,22,145,157,236,135,56,253,127,205,245,232,95,36,228,26,163,232,160,177,23,88,103,184,192,233,249,177,95,202,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 265 ") {
    byte_vec_t msg { 244,150,52,241 };
    byte_vec_t sig { 32,142,17,141,0,94,51,14,87,179,252,86,22,25,65,194,38,147,68,218,207,15,244,98,16,76,232,115,0,224,99,153,110,94,47,16,190,46,146,44,59,185,82,233,40,54,191,183,112,100,87,157,202,72,124,95,244,163,197,8,176,140,97,186 };
    byte_vec_t pk { 4,228,5,228,215,161,112,99,228,76,179,73,220,16,85,244,132,4,210,133,199,108,67,156,215,243,226,38,119,212,108,20,172,61,190,77,251,101,149,25,176,208,159,181,89,155,255,8,73,87,102,83,28,250,138,115,159,207,30,122,41,35,43,145,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 266 ") {
    byte_vec_t msg { 158,45,48,83 };
    byte_vec_t sig { 5,187,30,138,244,255,127,88,78,103,24,78,216,106,52,37,168,110,238,200,241,213,128,121,128,205,105,21,13,89,131,1,7,175,234,32,88,152,66,248,94,159,173,202,211,6,91,23,183,13,149,157,237,131,57,240,139,154,25,28,102,120,120,169 };
    byte_vec_t pk { 4,148,16,227,91,78,134,147,173,206,109,110,139,33,144,13,47,151,140,155,241,69,248,136,43,46,12,101,21,48,190,102,88,64,175,221,237,109,210,230,177,184,132,250,125,39,11,37,1,129,161,220,247,97,224,61,228,211,178,16,133,163,60,196,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 266 ") {
    byte_vec_t msg { 54,87,153,135 };
    byte_vec_t sig { 51,74,65,127,208,84,125,117,128,9,94,209,204,236,207,31,86,100,103,151,117,85,167,42,65,90,122,243,140,99,78,78,25,228,136,44,105,137,10,11,101,237,218,87,178,102,115,173,173,24,251,193,13,71,248,249,204,172,214,16,149,138,4,179 };
    byte_vec_t pk { 4,65,196,177,215,91,141,104,234,243,156,167,109,163,216,81,47,254,94,222,97,161,133,233,11,218,205,32,188,107,183,207,108,95,255,41,168,132,169,83,249,10,53,98,170,130,31,19,29,97,69,23,71,179,105,111,146,65,36,162,136,42,195,40,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 267 ") {
    byte_vec_t msg { 232,17,72,224 };
    byte_vec_t sig { 46,55,54,146,177,67,189,48,166,30,170,40,161,75,164,193,140,232,242,224,154,177,24,35,130,121,252,29,96,246,83,25,205,53,40,245,223,135,109,80,143,171,60,141,234,79,53,4,88,122,71,167,58,110,253,108,201,46,89,32,68,7,181,18 };
    byte_vec_t pk { 4,63,50,15,140,87,30,160,164,109,114,143,110,209,77,238,94,174,168,125,205,242,40,65,177,237,47,139,125,186,40,110,183,203,206,25,201,149,64,198,101,173,51,183,151,144,121,33,34,218,79,15,23,124,249,176,39,96,129,78,26,9,227,129,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 267 ") {
    byte_vec_t msg { 5,154,160,35 };
    byte_vec_t sig { 9,153,135,168,211,65,160,114,135,166,168,19,192,18,21,234,225,20,211,167,8,112,68,192,250,67,230,139,171,39,19,140,56,142,156,10,143,101,69,147,207,152,177,154,81,13,245,209,206,16,3,170,253,182,248,69,178,73,134,245,239,67,149,20 };
    byte_vec_t pk { 4,26,174,117,204,28,75,227,141,135,84,164,143,25,176,96,97,15,142,226,122,99,153,36,228,185,2,157,64,120,207,222,240,126,255,17,191,49,142,148,249,116,99,7,250,31,95,137,162,6,157,128,77,240,209,136,28,159,180,219,206,242,68,199,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 268 ") {
    byte_vec_t msg { 53,68,149,242 };
    byte_vec_t sig { 140,165,128,205,175,116,225,235,104,106,85,57,146,247,78,117,95,179,215,50,199,98,58,206,202,91,145,0,207,47,201,219,218,198,244,228,11,124,247,248,36,202,10,34,98,94,128,121,86,38,252,10,124,137,126,40,133,119,37,144,78,72,130,0 };
    byte_vec_t pk { 4,71,176,116,215,255,185,181,101,226,173,8,49,220,205,17,111,52,252,98,212,193,53,18,36,125,211,99,12,136,244,90,53,33,85,77,17,219,61,197,186,176,73,115,49,247,185,16,111,231,133,132,223,32,255,162,103,41,54,68,173,191,80,122,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 268 ") {
    byte_vec_t msg { 230,77,129,67 };
    byte_vec_t sig { 120,22,63,161,219,112,10,19,175,15,135,20,195,223,172,65,118,33,110,149,128,36,129,12,240,97,37,79,232,172,187,86,82,185,36,190,85,170,121,4,162,67,118,95,209,154,104,64,18,194,73,14,107,225,206,155,195,45,201,83,75,99,16,94 };
    byte_vec_t pk { 4,115,182,37,13,248,206,141,101,161,108,119,209,90,206,55,94,223,168,74,68,22,189,146,133,15,199,120,10,119,114,204,182,61,197,85,131,18,108,209,155,52,50,50,59,190,26,11,195,98,159,175,82,192,235,162,10,232,157,43,111,41,34,242,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 269 ") {
    byte_vec_t msg { 191,29,227,203 };
    byte_vec_t sig { 169,192,230,200,5,161,101,184,14,8,9,111,130,224,171,187,133,139,148,37,139,199,131,108,24,80,115,24,239,162,67,68,213,175,215,21,208,112,193,114,255,30,0,198,43,3,13,100,45,208,44,208,215,212,1,3,81,167,0,136,238,135,83,58 };
    byte_vec_t pk { 4,63,107,154,233,137,8,76,184,1,168,152,16,232,5,109,245,27,149,102,101,183,107,230,70,45,48,218,112,238,18,235,110,160,32,214,168,0,79,224,2,137,96,21,145,101,153,152,123,232,10,179,110,23,120,53,223,216,49,155,169,195,183,140,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 269 ") {
    byte_vec_t msg { 144,175,214,223 };
    byte_vec_t sig { 203,17,48,252,72,29,168,68,222,187,211,200,193,1,107,35,60,10,132,179,56,110,218,200,66,143,140,100,72,191,215,30,227,207,111,40,12,202,45,43,83,211,147,203,94,213,243,130,131,193,110,121,23,126,207,250,11,251,75,92,99,170,45,88 };
    byte_vec_t pk { 4,135,80,34,106,117,82,190,229,222,181,36,69,92,40,89,248,173,57,173,156,95,156,251,6,91,182,111,10,248,164,3,180,244,162,152,109,152,61,43,14,42,171,59,65,103,166,167,79,114,226,28,140,8,27,52,66,28,123,220,129,140,159,175,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 270 ") {
    byte_vec_t msg { 162,175,226,96 };
    byte_vec_t sig { 219,129,10,164,12,168,128,30,204,253,235,108,114,75,30,129,44,7,129,175,219,27,244,81,89,250,16,241,157,7,104,142,26,125,240,91,75,233,102,112,31,141,247,209,3,16,237,202,187,220,31,15,115,91,219,137,47,196,201,103,148,52,33,202 };
    byte_vec_t pk { 4,223,161,25,46,84,192,223,32,140,115,21,72,58,60,198,60,4,62,234,62,217,170,210,133,241,124,129,16,4,111,127,137,80,179,133,96,230,95,119,254,187,169,210,88,42,189,234,164,119,204,15,228,169,75,227,157,244,94,136,183,222,33,31,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 270 ") {
    byte_vec_t msg { 5,141,102,128 };
    byte_vec_t sig { 230,253,223,163,204,51,186,162,35,60,46,38,22,136,42,31,59,244,65,13,141,108,87,227,223,110,198,208,102,52,100,79,255,110,46,75,144,54,118,143,172,171,206,228,59,111,196,117,97,157,169,19,199,98,185,37,154,102,155,174,176,124,18,131 };
    byte_vec_t pk { 4,165,44,9,188,173,249,13,141,242,113,201,43,59,35,127,102,45,223,210,93,176,101,11,108,226,22,226,62,171,44,103,190,28,47,92,139,66,248,71,212,6,145,231,122,172,167,81,55,156,246,209,219,47,152,173,160,42,52,62,86,34,206,184,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 271 ") {
    byte_vec_t msg { 72,252,96,56 };
    byte_vec_t sig { 18,121,242,98,93,178,144,28,141,152,172,11,71,254,33,217,105,74,246,143,149,88,89,216,231,99,115,170,187,95,0,227,95,250,147,216,9,84,146,125,26,215,151,106,233,40,15,233,117,170,123,117,14,194,216,137,50,10,239,5,187,120,72,163 };
    byte_vec_t pk { 4,206,123,102,158,192,252,53,183,157,37,128,201,47,108,183,111,97,165,156,36,121,243,47,247,24,206,59,112,177,32,15,240,254,76,167,219,38,117,26,108,134,151,57,63,108,199,227,154,103,132,150,42,49,52,100,28,93,97,171,158,207,169,60,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 271 ") {
    byte_vec_t msg { 201,132,188,28 };
    byte_vec_t sig { 149,89,118,35,43,101,89,86,9,18,75,48,212,198,80,12,170,255,241,45,235,50,35,184,63,60,29,187,102,69,47,162,155,137,83,169,181,3,158,68,225,112,29,60,105,39,231,110,71,225,103,170,240,189,154,66,25,255,139,223,175,202,208,18 };
    byte_vec_t pk { 4,171,123,172,204,84,157,136,225,219,99,238,55,19,43,225,218,12,208,255,89,150,49,223,120,85,245,185,202,141,3,20,109,92,251,23,156,64,92,190,158,61,254,92,44,216,207,89,57,73,74,184,229,19,188,115,67,221,148,171,25,194,172,189,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 272 ") {
    byte_vec_t msg { 85,27,197,34 };
    byte_vec_t sig { 127,244,4,18,205,250,15,151,36,40,29,185,70,58,113,156,7,243,240,186,116,220,44,76,98,6,224,142,95,158,74,226,128,183,59,80,225,4,235,51,129,94,186,232,89,8,218,241,221,181,183,76,204,70,57,197,38,243,148,21,158,28,20,35 };
    byte_vec_t pk { 4,40,85,50,32,172,143,220,8,125,209,36,92,149,3,169,54,97,222,25,37,162,204,75,100,249,151,171,18,171,52,119,83,40,144,79,59,128,23,10,125,231,84,109,85,217,252,141,183,29,95,229,24,58,69,117,69,197,239,164,93,154,103,64,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 272 ") {
    byte_vec_t msg { 236,183,41,19 };
    byte_vec_t sig { 203,6,42,148,34,107,59,49,171,210,105,225,20,123,225,16,39,49,31,8,229,33,78,69,41,10,242,118,9,200,167,228,68,166,93,198,151,163,67,9,188,23,32,36,186,202,240,213,35,28,17,102,249,47,108,134,75,120,6,187,178,217,129,77 };
    byte_vec_t pk { 4,110,163,23,185,164,222,218,85,121,151,131,223,17,177,132,166,86,30,132,220,250,242,144,41,206,195,92,3,24,23,35,88,84,139,95,55,125,179,221,210,154,230,38,29,70,140,97,87,113,107,189,212,195,50,196,170,95,151,189,59,66,246,106,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 273 ") {
    byte_vec_t msg { 64,35,187,227 };
    byte_vec_t sig { 88,176,15,98,95,180,202,81,55,234,48,71,23,70,55,134,112,30,125,169,50,18,233,213,74,149,178,124,244,139,227,32,215,89,112,98,0,131,241,197,114,103,137,95,247,148,132,164,147,89,67,147,87,230,4,195,238,8,100,148,133,13,61,124 };
    byte_vec_t pk { 4,233,189,21,184,131,19,9,180,250,231,114,73,184,124,181,85,219,220,8,137,94,113,182,251,6,43,193,194,35,188,2,74,56,27,245,121,60,149,77,172,77,236,168,117,143,70,202,89,242,185,59,5,198,138,208,219,142,77,167,155,12,228,18,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 273 ") {
    byte_vec_t msg { 220,37,169,22 };
    byte_vec_t sig { 118,237,144,194,146,226,62,115,182,204,108,39,66,99,132,135,150,50,63,55,215,161,120,179,255,177,222,229,195,50,126,203,58,125,191,198,214,52,246,229,9,0,72,190,126,16,155,140,36,154,4,92,191,159,227,189,139,42,137,150,194,205,117,186 };
    byte_vec_t pk { 4,157,69,55,121,231,66,29,248,140,229,10,98,0,12,105,29,55,166,29,104,101,115,66,255,64,191,227,7,255,122,191,155,212,155,234,217,209,30,58,170,165,165,98,121,71,33,201,4,241,5,164,127,144,180,18,234,58,41,8,32,81,81,139,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 274 ") {
    byte_vec_t msg { 120,100,230,193 };
    byte_vec_t sig { 77,1,205,215,105,48,57,39,37,116,212,81,128,156,150,7,98,250,207,161,33,152,170,16,222,236,245,142,36,212,185,183,216,205,9,24,132,128,84,37,201,155,101,87,239,58,218,34,55,148,232,215,84,211,231,116,151,191,174,194,232,241,12,94 };
    byte_vec_t pk { 4,191,248,104,89,197,246,2,63,18,173,31,238,226,58,209,142,51,198,163,144,62,81,189,235,253,17,39,226,7,8,53,68,220,27,243,246,213,21,89,224,39,5,7,238,238,218,183,239,97,37,239,254,255,37,127,3,108,184,42,71,180,228,255,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 274 ") {
    byte_vec_t msg { 151,225,252,237 };
    byte_vec_t sig { 225,224,224,4,134,17,42,67,171,234,226,247,135,122,42,2,29,33,142,68,214,166,75,210,203,197,23,191,131,60,81,78,126,42,228,57,219,248,254,101,150,205,150,62,182,53,184,30,180,221,25,221,12,71,232,65,6,84,160,94,114,165,151,50 };
    byte_vec_t pk { 4,142,108,33,12,204,160,8,150,22,221,74,214,98,2,232,117,57,35,110,69,128,49,105,105,149,3,133,96,82,4,182,12,116,129,24,186,159,89,181,210,184,194,89,214,234,158,234,66,219,163,109,127,47,153,59,181,53,186,169,54,140,158,246,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 275 ") {
    byte_vec_t msg { 1,209,238,154 };
    byte_vec_t sig { 237,11,219,78,64,2,158,109,236,246,57,244,60,207,83,141,67,112,102,220,165,151,97,34,45,64,129,205,147,158,90,161,189,12,75,112,253,65,21,132,211,23,48,37,246,90,135,88,103,80,143,157,205,188,43,157,133,77,133,253,41,81,159,105 };
    byte_vec_t pk { 4,136,43,163,107,104,79,213,72,86,215,13,84,160,99,173,236,163,64,14,129,2,17,191,99,60,145,172,68,153,97,37,134,250,132,116,226,122,83,125,246,244,136,135,229,159,199,39,223,173,2,241,79,240,24,75,90,181,144,90,86,206,164,162,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 275 ") {
    byte_vec_t msg { 10,179,40,141 };
    byte_vec_t sig { 16,34,231,17,73,99,138,226,0,116,191,206,153,158,12,49,142,37,210,138,168,166,6,145,127,58,18,149,81,206,15,159,236,34,75,34,160,66,186,117,208,120,129,235,203,170,110,91,234,63,142,75,175,184,215,80,244,23,190,72,187,197,103,217 };
    byte_vec_t pk { 4,70,237,90,46,40,224,64,20,4,156,157,184,130,78,206,218,222,82,18,184,51,96,112,54,190,121,88,59,11,152,5,53,165,208,24,103,145,255,73,115,253,163,136,229,101,138,92,77,68,89,19,196,163,61,170,73,114,106,67,20,86,74,199,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 276 ") {
    byte_vec_t msg { 198,167,184,39 };
    byte_vec_t sig { 214,246,229,146,63,174,88,208,96,143,45,130,78,42,240,95,5,43,210,106,172,131,43,244,30,5,183,143,170,7,172,1,97,198,202,218,153,96,15,166,216,94,77,113,118,68,243,236,105,51,71,101,31,106,98,41,90,27,76,127,88,95,228,159 };
    byte_vec_t pk { 4,100,233,166,242,21,236,122,99,185,204,109,175,101,153,224,59,185,199,207,199,207,13,207,215,227,145,243,60,157,227,36,209,54,227,252,205,166,106,77,134,58,216,12,81,177,223,251,191,86,241,148,151,135,5,204,110,211,212,117,44,127,156,38,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 276 ") {
    byte_vec_t msg { 134,82,17,195 };
    byte_vec_t sig { 86,104,234,225,193,38,141,230,5,80,64,138,222,181,108,83,52,145,115,129,224,208,22,187,135,143,79,223,47,137,151,10,221,115,196,39,188,1,40,51,29,109,244,125,163,200,8,49,15,51,248,178,153,40,114,255,234,113,14,1,160,22,83,29 };
    byte_vec_t pk { 4,210,222,162,17,54,169,56,116,222,179,39,56,21,130,248,118,10,48,61,16,35,149,57,41,228,38,170,84,201,244,42,129,170,190,43,56,203,134,250,238,212,140,196,78,81,239,110,45,139,118,183,1,156,49,102,145,70,71,254,47,192,183,145,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 277 ") {
    byte_vec_t msg { 2,245,252,225 };
    byte_vec_t sig { 28,238,210,198,218,99,222,92,26,212,250,33,254,209,74,186,101,11,150,240,43,224,76,246,196,193,42,130,38,20,89,178,248,96,122,184,142,14,180,200,8,73,9,58,79,113,195,77,185,173,56,175,249,82,19,186,113,171,104,34,62,26,239,34 };
    byte_vec_t pk { 4,166,156,75,143,240,135,173,126,86,80,142,130,139,252,57,19,113,50,134,15,83,242,103,211,254,130,182,23,62,117,37,174,159,147,243,177,89,189,231,136,197,239,30,147,190,114,106,115,129,3,140,210,129,116,66,252,10,99,232,11,56,205,57,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 277 ") {
    byte_vec_t msg { 14,10,255,248 };
    byte_vec_t sig { 64,100,181,66,127,110,205,83,33,9,230,179,242,78,95,111,248,118,179,253,159,63,248,200,71,118,105,94,78,188,228,227,62,251,196,137,227,73,28,188,230,154,61,250,130,250,233,2,97,123,255,204,215,129,227,153,66,21,251,128,167,55,130,191 };
    byte_vec_t pk { 4,34,255,207,28,156,86,73,193,0,252,146,124,247,229,109,28,89,106,122,95,223,211,211,150,217,187,155,84,100,127,115,212,121,2,159,69,243,67,255,152,18,241,190,36,181,137,11,142,91,249,94,10,102,236,134,8,209,64,163,122,112,136,130,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 278 ") {
    byte_vec_t msg { 234,49,38,86 };
    byte_vec_t sig { 79,160,99,96,117,89,31,164,199,169,93,196,115,217,249,9,223,115,155,3,126,57,217,92,126,106,137,153,255,37,219,215,89,241,242,10,124,203,120,32,80,104,124,7,219,146,5,82,156,50,181,3,161,11,154,169,230,126,208,10,34,28,5,236 };
    byte_vec_t pk { 4,43,237,78,169,32,49,191,83,206,174,198,47,237,43,182,127,25,105,172,97,81,138,227,208,158,187,185,120,83,150,1,178,230,13,230,35,99,51,222,203,51,235,184,124,233,120,39,176,140,216,7,196,22,211,126,61,238,66,61,248,33,125,129,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 278 ") {
    byte_vec_t msg { 5,200,28,121 };
    byte_vec_t sig { 83,42,178,220,175,48,22,51,81,52,234,158,161,126,218,106,155,225,79,166,143,161,183,119,254,63,193,113,25,215,128,46,155,237,122,218,79,223,250,105,67,170,97,152,183,206,55,234,253,19,40,147,74,49,69,202,169,222,99,29,240,13,13,98 };
    byte_vec_t pk { 4,197,99,207,63,32,160,228,23,60,255,56,190,48,39,72,138,149,101,218,255,71,75,211,181,50,31,151,250,124,63,21,12,163,89,131,50,206,178,124,236,47,101,200,249,125,249,113,91,53,214,178,67,68,8,54,162,128,195,58,44,168,213,209,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 279 ") {
    byte_vec_t msg { 225,216,61,172 };
    byte_vec_t sig { 6,234,194,107,61,46,32,218,237,189,162,2,28,20,85,197,82,97,210,169,133,19,134,237,80,212,73,32,223,58,188,2,240,203,73,28,84,136,109,87,214,94,221,143,231,167,60,29,46,255,92,96,218,187,11,252,255,1,67,151,40,222,112,126 };
    byte_vec_t pk { 4,45,200,59,160,83,55,168,215,213,139,130,228,20,226,197,184,239,146,195,45,198,138,204,72,31,71,243,247,193,40,90,208,182,42,99,240,248,118,31,212,254,121,248,163,206,204,71,234,248,187,76,210,44,249,149,11,21,61,59,22,71,218,48,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 279 ") {
    byte_vec_t msg { 147,85,218,76 };
    byte_vec_t sig { 218,148,51,144,132,212,233,93,38,15,115,251,120,231,138,250,133,133,119,6,204,16,189,169,26,183,102,7,137,240,209,249,49,248,59,255,62,88,249,108,62,179,23,198,139,9,209,6,45,2,230,2,61,69,54,20,186,184,33,96,1,229,224,245 };
    byte_vec_t pk { 4,145,116,56,187,156,66,129,255,31,169,129,222,181,93,209,40,55,220,255,98,21,136,213,155,137,1,204,242,116,195,10,160,145,38,63,194,87,236,206,162,90,148,192,204,106,250,16,14,15,197,135,113,36,45,19,133,95,29,114,68,92,186,227,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 280 ") {
    byte_vec_t msg { 203,219,234,24 };
    byte_vec_t sig { 165,247,145,103,234,46,230,251,151,236,236,19,157,155,89,253,1,185,233,199,236,29,191,202,234,37,70,233,216,125,80,118,217,237,233,64,111,96,31,64,215,84,82,166,90,24,42,234,21,26,126,248,184,58,126,224,20,125,201,64,0,142,8,54 };
    byte_vec_t pk { 4,15,159,214,169,103,16,74,173,22,112,201,172,48,30,44,97,201,243,238,87,208,40,20,115,104,37,75,223,217,206,86,42,197,184,45,64,9,41,136,160,204,8,3,129,216,223,152,255,96,183,238,88,80,164,81,222,3,235,180,44,169,238,173,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 280 ") {
    byte_vec_t msg { 211,169,102,83 };
    byte_vec_t sig { 100,148,68,125,41,75,22,6,250,16,105,208,40,59,170,87,90,164,103,136,73,199,77,34,47,165,146,121,107,128,0,212,140,75,226,246,157,213,3,109,253,5,74,18,230,59,18,80,224,19,51,251,165,166,99,125,165,112,65,5,198,43,34,167 };
    byte_vec_t pk { 4,94,253,193,219,77,134,113,40,208,154,69,185,204,218,243,116,147,145,201,142,8,232,13,250,54,250,191,101,48,175,125,184,43,0,40,167,187,71,89,21,214,102,38,122,241,108,33,91,173,70,122,238,139,251,170,118,76,252,131,253,214,22,30,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 281 ") {
    byte_vec_t msg { 63,151,35,226 };
    byte_vec_t sig { 5,12,69,57,167,130,68,17,193,171,44,80,175,226,225,164,47,124,111,221,16,120,166,219,230,249,186,178,237,141,247,233,62,193,229,204,225,167,77,159,25,191,123,184,33,180,80,73,105,232,251,189,50,50,91,212,173,217,194,161,54,194,143,88 };
    byte_vec_t pk { 4,166,115,216,95,51,207,61,9,27,103,172,11,39,45,118,116,119,29,189,250,91,206,234,223,153,51,160,172,71,252,18,68,135,16,159,101,124,192,124,14,247,147,93,121,220,35,90,122,154,17,94,114,69,17,111,76,138,81,240,191,170,217,54,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 281 ") {
    byte_vec_t msg { 159,191,80,247 };
    byte_vec_t sig { 170,158,250,81,43,83,210,61,139,128,45,90,200,56,20,93,253,233,209,242,119,159,19,3,34,255,17,172,75,249,17,91,186,218,93,24,95,58,246,189,156,70,43,101,211,165,114,57,5,33,142,114,192,59,107,69,27,65,206,31,213,168,79,192 };
    byte_vec_t pk { 4,27,249,47,22,153,157,119,130,209,240,0,176,170,64,17,252,238,2,17,111,99,95,121,87,128,220,100,147,167,196,112,159,213,203,254,48,93,217,71,30,241,168,108,13,76,99,164,132,115,146,195,102,147,92,56,8,63,116,37,79,75,204,132,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 282 ") {
    byte_vec_t msg { 121,55,81,151 };
    byte_vec_t sig { 38,23,149,235,217,102,243,187,127,175,205,14,255,189,106,114,187,71,66,182,10,168,59,39,41,54,56,245,193,195,47,131,58,65,125,90,121,112,60,119,180,101,119,22,115,227,10,182,249,69,48,168,92,34,130,206,158,37,102,214,34,65,63,123 };
    byte_vec_t pk { 4,219,13,237,51,161,124,48,166,152,181,183,151,113,4,184,105,133,152,159,55,164,127,241,15,229,221,94,73,190,237,111,230,153,47,83,184,81,48,204,24,198,236,117,201,233,161,74,76,136,227,166,191,11,189,10,105,57,182,171,213,203,102,161,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 282 ") {
    byte_vec_t msg { 149,183,85,200 };
    byte_vec_t sig { 227,193,82,251,93,232,124,74,19,111,149,43,225,84,66,36,226,241,51,145,100,181,4,232,177,91,234,97,174,31,4,81,195,132,234,118,239,37,148,42,7,44,123,69,175,198,153,22,88,248,81,173,228,103,232,29,212,194,219,27,160,113,158,22 };
    byte_vec_t pk { 4,124,55,95,44,166,158,243,167,11,220,225,36,62,240,94,150,113,38,47,108,53,176,31,82,204,167,180,209,163,186,6,49,252,245,227,243,18,9,191,169,142,88,36,231,247,107,109,246,119,130,7,202,90,186,60,163,82,88,235,244,116,121,115,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 283 ") {
    byte_vec_t msg { 138,84,28,182 };
    byte_vec_t sig { 181,179,227,112,135,237,152,3,66,139,72,67,187,70,133,195,158,222,159,106,237,108,151,54,166,172,248,68,33,36,229,243,221,125,224,238,166,202,198,60,194,165,128,240,85,47,96,160,105,138,217,228,57,19,115,116,110,50,70,128,160,104,194,105 };
    byte_vec_t pk { 4,234,96,127,184,99,66,60,225,176,145,7,10,189,167,124,199,134,7,232,80,71,115,200,118,235,6,16,149,208,83,195,129,63,164,240,206,93,88,177,16,29,0,173,119,141,180,252,248,126,166,199,25,214,208,143,194,43,187,42,199,240,196,177,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 283 ") {
    byte_vec_t msg { 223,152,88,0 };
    byte_vec_t sig { 159,249,28,66,66,201,77,55,124,160,35,125,47,19,187,89,251,139,150,141,14,18,88,79,241,224,78,209,51,163,215,20,91,104,13,71,145,108,101,61,34,100,194,177,81,145,71,28,151,81,229,189,247,142,98,67,135,71,238,16,252,63,162,206 };
    byte_vec_t pk { 4,12,197,214,13,135,135,73,191,0,166,242,223,60,217,11,30,213,130,101,211,51,182,218,89,17,91,86,87,79,47,169,164,12,253,10,28,208,179,182,62,136,17,200,6,252,243,0,241,27,9,39,168,155,89,143,90,125,205,51,155,220,183,146,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 284 ") {
    byte_vec_t msg { 132,8,84,227 };
    byte_vec_t sig { 161,171,100,241,248,149,69,134,45,123,203,251,86,34,176,68,147,33,189,41,254,40,140,74,132,120,2,190,127,40,138,28,90,28,60,14,154,112,11,93,156,131,41,174,210,139,54,217,24,214,19,151,29,40,57,48,217,34,62,2,150,92,215,181 };
    byte_vec_t pk { 4,171,209,135,224,121,62,124,62,222,26,156,0,139,21,158,162,154,221,48,95,191,19,64,183,160,150,102,73,138,206,145,173,184,13,196,114,109,98,220,145,230,114,31,195,185,201,214,136,239,33,162,100,20,229,176,53,248,74,171,34,217,126,178,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 284 ") {
    byte_vec_t msg { 126,151,105,180 };
    byte_vec_t sig { 249,201,183,17,125,245,151,141,236,104,181,161,234,54,89,184,39,192,234,113,233,213,90,143,150,249,154,158,225,178,30,201,144,252,16,19,92,2,214,227,49,100,179,109,110,145,140,87,174,128,217,208,1,245,177,29,148,214,49,57,174,206,84,91 };
    byte_vec_t pk { 4,101,20,29,204,64,240,88,69,187,61,194,103,144,113,147,164,22,58,155,100,60,37,155,70,37,243,179,47,173,15,111,132,156,94,149,20,49,37,169,114,201,177,205,218,139,62,98,250,221,162,178,65,80,45,214,137,193,127,111,241,57,39,9,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 285 ") {
    byte_vec_t msg { 85,191,150,19 };
    byte_vec_t sig { 86,153,95,253,161,115,73,30,41,220,249,156,25,140,198,200,33,10,22,131,41,55,79,228,173,162,82,210,21,36,63,103,103,47,219,103,177,194,166,143,115,131,77,103,121,106,107,142,105,30,196,197,64,222,97,248,230,101,181,207,54,224,211,155 };
    byte_vec_t pk { 4,103,205,164,65,134,6,35,156,49,253,84,142,28,153,198,178,80,109,130,82,132,170,224,195,2,104,90,66,19,114,178,201,199,221,160,248,162,197,11,156,165,207,126,44,240,232,52,140,184,18,24,98,8,117,207,22,120,69,10,25,37,197,198,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 285 ") {
    byte_vec_t msg { 204,65,133,11 };
    byte_vec_t sig { 36,219,89,149,200,242,62,102,240,2,133,155,8,72,218,155,224,78,100,203,51,242,29,23,54,151,114,82,183,241,17,112,203,7,77,115,174,59,38,17,21,188,217,29,53,168,114,77,156,137,162,218,115,134,229,127,27,151,193,192,55,130,251,150 };
    byte_vec_t pk { 4,131,96,228,251,165,145,143,170,61,216,165,188,206,212,72,203,108,126,73,198,253,21,175,82,122,16,0,71,207,221,105,195,129,39,41,29,173,162,223,195,36,164,62,50,41,129,186,128,65,143,208,37,198,139,117,196,79,39,64,129,15,225,146,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 286 ") {
    byte_vec_t msg { 15,128,141,198 };
    byte_vec_t sig { 122,44,10,114,130,2,75,231,253,28,185,32,222,209,169,165,231,228,29,142,152,220,247,96,241,148,173,84,234,208,158,17,20,163,147,185,115,194,156,82,97,202,125,115,17,129,239,218,227,8,227,116,230,27,191,132,147,145,186,89,243,102,53,144 };
    byte_vec_t pk { 4,215,245,9,126,109,205,60,249,40,226,121,213,49,244,243,49,101,15,245,51,37,233,20,153,7,246,175,205,102,231,246,26,7,2,20,246,95,157,187,191,128,14,75,127,125,0,133,233,224,189,254,224,91,125,177,173,138,174,66,130,77,4,228,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 286 ") {
    byte_vec_t msg { 198,19,174,246 };
    byte_vec_t sig { 114,84,60,70,251,67,221,83,0,251,89,204,254,99,34,108,249,52,197,173,142,89,14,255,253,138,59,76,86,248,98,140,186,42,124,45,241,10,50,134,71,98,48,166,152,159,64,103,162,191,225,238,215,96,12,147,127,161,48,51,43,43,179,232 };
    byte_vec_t pk { 4,161,54,255,112,43,68,119,81,230,235,64,99,147,117,54,221,166,243,103,152,233,220,128,179,209,203,74,169,27,83,47,249,138,223,103,171,193,199,111,69,110,182,15,13,182,95,123,186,10,66,10,193,246,134,196,166,101,245,96,136,146,115,45,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 287 ") {
    byte_vec_t msg { 138,180,98,124 };
    byte_vec_t sig { 105,3,50,20,177,162,210,134,53,186,134,192,184,142,20,188,180,18,242,209,39,161,139,196,242,240,170,207,227,13,98,58,10,255,123,132,128,173,186,208,61,104,143,231,178,14,153,189,118,181,8,132,168,171,62,1,238,96,224,199,161,200,105,20 };
    byte_vec_t pk { 4,80,33,231,229,8,59,227,198,150,168,211,236,84,162,178,71,94,125,30,227,202,91,150,220,185,217,210,150,236,161,184,14,0,24,250,222,106,13,47,251,233,175,250,207,90,107,102,113,111,98,136,98,94,121,35,150,14,241,193,85,70,221,88,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 287 ") {
    byte_vec_t msg { 244,212,99,116 };
    byte_vec_t sig { 136,198,242,91,127,82,201,159,104,206,31,102,14,164,14,206,162,108,251,249,225,189,208,75,153,12,145,218,244,124,172,240,57,186,153,148,127,240,87,7,107,31,229,163,5,152,162,248,137,45,248,5,88,181,147,224,159,109,211,191,241,215,213,74 };
    byte_vec_t pk { 4,148,238,96,226,18,148,92,185,42,93,250,6,122,10,52,152,100,29,230,33,174,141,106,248,26,97,207,191,139,50,200,11,94,173,69,126,228,248,54,36,192,232,202,153,115,121,224,216,204,84,26,40,178,213,39,1,253,154,135,144,219,51,52,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 288 ") {
    byte_vec_t msg { 130,47,74,186 };
    byte_vec_t sig { 245,252,129,181,104,80,175,73,116,142,209,7,87,162,37,147,181,73,245,79,151,182,140,132,147,180,219,217,154,126,32,21,106,248,231,144,53,31,186,224,133,178,217,47,35,113,199,122,236,25,255,232,37,34,68,37,215,51,15,212,232,254,250,125 };
    byte_vec_t pk { 4,13,41,32,211,87,54,15,139,71,140,189,71,242,254,8,149,67,194,151,100,38,188,4,111,236,157,186,250,134,158,178,40,189,171,233,25,121,56,78,131,191,245,130,30,190,57,60,2,51,228,132,18,217,189,196,34,192,24,89,204,107,37,179,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 288 ") {
    byte_vec_t msg { 140,27,100,154 };
    byte_vec_t sig { 204,41,111,127,20,32,243,245,91,236,254,40,115,142,111,246,117,212,26,103,168,217,62,110,81,228,146,170,244,71,182,130,201,5,99,46,123,86,247,147,63,35,140,104,42,21,92,232,112,147,31,243,245,137,189,252,227,180,187,171,50,8,94,114 };
    byte_vec_t pk { 4,107,52,84,197,39,6,195,60,55,157,223,254,6,8,35,116,184,107,169,166,156,199,106,206,152,151,175,223,41,4,212,118,123,196,197,127,162,115,126,215,22,119,40,95,9,71,139,140,227,75,137,139,68,237,9,150,125,13,124,37,208,150,248,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 289 ") {
    byte_vec_t msg { 7,209,64,177 };
    byte_vec_t sig { 149,187,118,236,172,171,81,27,137,22,177,185,129,241,3,142,172,13,194,80,41,178,69,147,5,160,51,109,52,16,0,43,231,179,151,253,87,138,42,136,36,75,143,204,179,143,37,59,144,163,190,32,187,5,76,13,131,219,142,206,16,161,144,166 };
    byte_vec_t pk { 4,164,43,106,217,99,131,56,53,248,173,133,114,9,198,195,207,54,3,110,223,115,195,232,181,97,98,165,168,194,244,143,15,115,48,61,29,168,117,234,149,68,95,182,251,155,17,202,134,146,44,134,43,77,103,69,215,151,199,219,217,70,123,16,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 289 ") {
    byte_vec_t msg { 182,201,149,96 };
    byte_vec_t sig { 11,40,41,195,174,241,204,22,118,17,124,63,165,31,115,144,42,125,56,251,137,182,29,156,81,142,250,190,224,176,91,12,9,24,146,28,70,14,36,122,92,247,39,126,242,102,87,154,129,96,27,12,135,255,140,203,98,82,43,161,79,185,243,66 };
    byte_vec_t pk { 4,98,163,192,69,146,189,237,217,217,151,246,146,48,176,38,94,82,142,92,36,102,30,123,20,202,152,42,30,225,59,137,88,233,180,201,200,176,129,181,1,94,205,152,57,139,164,195,92,221,1,248,57,147,34,195,221,236,23,17,173,243,106,108,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 290 ") {
    byte_vec_t msg { 238,20,47,68 };
    byte_vec_t sig { 28,69,29,170,213,204,17,155,172,225,231,226,200,76,166,229,25,174,82,160,164,15,7,31,193,89,196,146,226,225,75,216,38,117,141,201,149,195,188,38,68,231,176,11,153,127,172,37,124,120,48,228,199,8,226,1,96,197,246,240,221,23,148,188 };
    byte_vec_t pk { 4,109,93,216,188,115,173,75,164,171,22,149,250,94,214,47,79,8,66,173,176,17,75,88,92,233,253,220,151,201,111,169,206,113,43,101,60,177,38,229,132,40,221,193,55,170,89,47,242,15,85,45,250,116,189,194,43,219,103,150,86,250,18,254,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 290 ") {
    byte_vec_t msg { 103,59,24,39 };
    byte_vec_t sig { 178,64,35,152,3,133,156,115,117,62,249,162,146,95,145,214,163,131,14,159,162,55,11,100,37,10,179,215,249,109,17,201,75,21,56,111,185,94,226,226,18,139,169,220,120,1,241,2,105,167,202,224,228,233,58,23,225,27,154,94,11,179,219,138 };
    byte_vec_t pk { 4,16,142,167,161,29,114,191,20,54,156,229,27,152,247,15,7,179,216,81,151,118,155,192,255,38,220,26,214,3,230,221,205,67,239,190,47,54,216,224,190,21,229,201,217,87,228,119,155,2,78,72,117,172,245,224,184,11,120,157,103,132,175,213,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 291 ") {
    byte_vec_t msg { 99,48,65,99 };
    byte_vec_t sig { 242,205,212,226,44,240,149,25,106,252,138,147,87,69,153,26,228,80,255,42,189,24,234,106,154,221,37,19,183,209,204,60,75,244,206,189,249,225,86,52,175,161,190,117,188,35,161,32,153,53,147,175,192,216,252,124,142,25,160,41,142,234,49,146 };
    byte_vec_t pk { 4,64,104,161,162,181,190,27,104,97,96,109,39,226,61,98,248,252,206,111,43,237,105,180,249,239,21,88,116,26,202,76,61,254,138,199,112,156,111,113,38,58,119,97,68,142,82,133,231,150,7,184,93,119,26,60,25,52,173,89,83,55,166,84,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 291 ") {
    byte_vec_t msg { 193,140,211,158 };
    byte_vec_t sig { 131,43,99,108,60,151,31,220,148,158,225,69,20,54,46,28,233,233,240,23,74,195,95,52,194,133,145,18,246,241,185,128,30,91,161,13,120,210,116,73,72,33,33,193,56,0,57,32,83,137,28,19,154,103,16,229,232,144,124,45,0,117,11,238 };
    byte_vec_t pk { 4,129,66,231,175,141,106,181,15,93,13,63,56,84,56,175,242,75,91,20,166,231,197,246,11,10,24,113,243,213,55,183,39,47,29,135,239,107,221,49,138,103,19,151,115,7,74,220,115,124,28,237,188,46,12,102,152,149,124,206,45,159,221,81,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 292 ") {
    byte_vec_t msg { 185,226,125,199 };
    byte_vec_t sig { 208,179,63,136,110,63,74,236,120,74,106,139,236,63,217,168,136,236,33,31,226,75,243,118,133,100,65,102,114,131,79,91,220,25,246,114,71,165,230,87,236,233,133,255,112,81,109,211,168,96,71,13,156,43,35,101,45,169,134,56,228,71,66,244 };
    byte_vec_t pk { 4,195,96,158,185,222,141,191,152,170,163,131,50,18,123,33,124,8,165,172,251,205,20,158,86,0,223,137,4,226,45,154,129,36,53,134,56,175,85,175,12,223,144,5,117,64,33,147,211,205,106,217,163,142,93,253,51,223,250,57,254,194,121,77,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 292 ") {
    byte_vec_t msg { 227,134,139,82 };
    byte_vec_t sig { 188,44,67,255,32,254,55,122,123,128,52,244,87,233,45,23,253,191,191,103,63,233,106,13,113,75,196,244,172,58,233,18,123,223,193,161,141,247,54,210,47,196,132,63,150,112,107,175,161,124,82,69,46,220,97,70,53,7,63,119,18,9,214,11 };
    byte_vec_t pk { 4,252,149,252,171,63,68,198,133,159,79,90,17,162,26,101,116,27,26,254,75,30,128,181,38,137,155,6,54,22,87,253,135,58,173,213,230,173,8,164,234,66,17,4,242,121,150,142,49,175,21,106,217,43,101,243,10,49,153,84,41,63,95,122,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 293 ") {
    byte_vec_t msg { 225,150,217,208 };
    byte_vec_t sig { 103,184,39,190,136,206,195,232,11,4,141,81,47,39,146,43,146,66,115,27,121,120,155,121,236,156,6,93,230,110,10,249,77,55,137,95,47,51,238,24,253,175,214,15,211,240,197,166,27,146,254,7,135,84,64,43,114,194,9,249,161,151,6,118 };
    byte_vec_t pk { 4,102,193,83,226,40,131,152,214,106,219,111,98,239,174,24,108,58,28,16,186,53,232,216,156,221,200,215,226,155,159,113,132,201,166,61,131,118,206,1,142,68,40,89,60,120,130,177,218,82,98,253,8,34,1,94,157,140,188,152,72,50,52,165,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 293 ") {
    byte_vec_t msg { 203,54,152,199 };
    byte_vec_t sig { 177,60,109,198,90,204,225,176,103,101,40,141,238,223,147,11,3,246,86,197,92,73,111,19,59,196,220,102,23,50,65,41,30,67,209,110,78,172,210,140,182,75,155,112,240,17,240,90,35,119,242,132,60,184,224,71,123,41,75,156,67,253,113,122 };
    byte_vec_t pk { 4,79,193,13,127,191,22,59,21,33,40,93,126,71,178,24,190,202,191,133,108,143,122,105,191,148,51,133,117,172,226,65,220,115,109,210,136,194,155,25,215,10,93,181,199,135,65,67,238,77,194,161,55,90,169,73,218,33,51,191,126,63,15,146,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 294 ") {
    byte_vec_t msg { 53,206,68,25 };
    byte_vec_t sig { 142,28,147,149,207,162,100,144,234,216,240,135,194,67,194,198,142,41,255,173,246,63,143,91,35,161,7,50,111,155,148,157,158,9,248,12,161,52,21,250,175,12,16,123,87,169,63,113,144,221,78,108,13,68,174,25,22,160,227,187,175,17,149,221 };
    byte_vec_t pk { 4,156,2,160,251,191,2,222,58,87,81,121,69,237,28,171,185,213,161,244,251,162,162,52,41,22,173,22,116,22,227,15,171,12,20,216,234,165,244,141,182,120,20,169,12,185,198,150,97,247,163,231,155,154,69,26,121,113,86,192,173,217,76,66,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 294 ") {
    byte_vec_t msg { 90,228,119,95 };
    byte_vec_t sig { 163,187,225,50,148,61,183,170,176,135,101,30,161,69,248,111,235,211,104,173,211,55,240,209,225,9,112,207,104,90,115,3,35,192,2,40,245,202,51,37,205,240,154,140,76,37,87,215,127,191,0,6,145,109,255,122,123,2,120,7,110,0,96,53 };
    byte_vec_t pk { 4,173,123,24,116,250,100,171,82,112,169,202,214,98,146,190,248,217,110,209,216,33,187,161,22,6,24,183,132,206,32,20,21,71,77,20,46,238,193,211,99,150,141,191,83,65,246,150,57,109,13,102,33,158,227,109,95,32,125,65,22,82,181,37,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 295 ") {
    byte_vec_t msg { 170,252,205,231 };
    byte_vec_t sig { 80,197,138,198,9,253,46,209,89,12,79,84,109,135,197,2,154,122,44,181,181,114,114,192,36,161,114,71,161,149,14,56,173,122,47,124,76,189,33,35,112,241,158,176,19,10,11,58,46,214,52,101,59,173,168,239,86,31,175,120,216,102,188,124 };
    byte_vec_t pk { 4,160,166,153,16,226,246,29,187,221,238,162,53,160,203,212,175,166,38,157,64,149,209,73,33,249,84,248,60,28,99,211,218,224,124,71,189,165,171,175,182,177,26,59,197,1,50,238,184,88,209,45,120,148,115,57,198,239,235,149,137,154,203,34,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 295 ") {
    byte_vec_t msg { 184,39,173,219 };
    byte_vec_t sig { 240,115,163,125,34,31,127,121,36,75,76,104,218,54,0,203,17,194,237,28,232,40,10,126,206,148,54,8,53,153,235,116,233,55,208,180,168,157,103,247,177,228,109,13,60,165,153,47,252,90,10,198,253,245,246,238,20,187,201,39,51,118,15,147 };
    byte_vec_t pk { 4,131,116,187,117,82,44,158,61,149,91,154,123,9,125,249,124,221,187,108,47,193,67,17,42,114,21,109,157,55,45,251,62,224,84,194,52,44,78,50,175,244,214,210,88,248,191,41,245,132,95,35,217,5,128,235,209,190,172,252,144,202,230,244,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 296 ") {
    byte_vec_t msg { 171,231,115,106 };
    byte_vec_t sig { 5,189,227,156,158,25,185,79,224,149,156,91,3,84,16,54,151,135,239,137,188,154,22,6,210,8,159,152,40,157,99,106,205,37,205,91,17,69,175,209,111,165,245,199,213,235,123,64,42,129,105,20,146,50,237,180,101,178,183,18,236,196,65,89 };
    byte_vec_t pk { 4,251,241,225,168,180,208,59,202,232,128,112,65,9,4,38,9,143,21,213,98,175,227,48,248,166,44,124,41,203,250,230,95,14,236,86,231,216,142,35,180,82,50,79,237,141,226,26,126,228,199,211,66,16,35,7,144,186,5,167,17,45,227,160,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 296 ") {
    byte_vec_t msg { 201,52,169,67 };
    byte_vec_t sig { 110,142,219,82,27,57,95,2,0,241,222,98,210,96,239,133,24,209,64,87,53,15,16,47,148,23,191,170,185,123,188,169,38,29,59,65,87,112,194,13,162,82,232,216,169,124,150,0,223,17,29,170,204,128,137,8,240,98,17,115,232,29,81,167 };
    byte_vec_t pk { 4,106,138,140,58,41,135,23,39,41,67,96,124,152,209,227,220,106,108,116,90,86,188,151,219,83,102,137,142,83,149,200,126,76,152,160,145,204,29,67,251,29,135,31,92,222,148,106,163,177,20,78,100,104,83,203,65,140,38,67,189,246,192,210,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 297 ") {
    byte_vec_t msg { 179,155,153,114 };
    byte_vec_t sig { 216,225,71,164,178,14,187,132,102,137,125,85,137,23,3,207,203,244,97,166,216,100,35,43,154,13,91,77,63,195,41,54,75,214,25,35,166,156,51,99,170,136,132,51,207,92,236,109,125,12,58,234,203,163,235,251,113,232,99,96,78,110,174,40 };
    byte_vec_t pk { 4,141,52,250,254,175,156,19,111,64,229,139,248,138,121,126,169,55,145,118,24,138,244,215,103,95,218,31,81,145,119,187,201,20,134,55,151,168,63,230,191,68,75,233,143,229,223,128,41,56,76,8,175,49,9,187,15,87,137,76,51,33,113,146,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 297 ") {
    byte_vec_t msg { 51,103,97,88 };
    byte_vec_t sig { 213,178,15,141,139,244,43,238,196,99,48,124,148,148,157,225,230,191,35,182,208,216,120,57,243,123,175,50,100,74,27,58,172,155,7,173,112,100,122,105,156,99,212,96,171,122,71,73,135,59,250,233,211,197,77,135,242,164,110,11,2,164,96,37 };
    byte_vec_t pk { 4,197,1,177,196,177,124,102,203,127,252,17,84,180,179,233,14,231,111,167,199,98,196,17,190,122,175,43,226,66,68,254,78,79,168,141,252,102,220,87,111,57,44,133,234,164,31,1,237,221,97,93,148,131,90,17,37,61,160,38,205,245,135,164,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 298 ") {
    byte_vec_t msg { 183,200,248,130 };
    byte_vec_t sig { 176,28,3,196,87,3,137,17,118,44,68,3,235,133,8,200,156,25,246,101,178,233,246,46,53,130,146,61,40,147,88,33,128,254,107,58,255,207,225,62,190,5,102,67,182,192,212,36,125,232,57,243,230,198,36,216,180,8,47,213,60,93,41,197 };
    byte_vec_t pk { 4,122,43,164,189,47,92,96,233,109,59,222,37,42,231,132,41,242,180,253,190,158,205,157,140,88,132,202,175,121,253,61,111,152,196,127,123,60,60,25,169,107,33,212,129,186,88,167,86,48,146,129,118,5,58,58,118,2,135,204,92,74,87,4,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 298 ") {
    byte_vec_t msg { 134,162,125,191 };
    byte_vec_t sig { 29,59,54,34,111,2,187,102,227,138,80,243,36,229,191,138,252,207,252,135,119,87,23,129,249,67,234,185,134,200,109,37,188,101,232,29,26,74,207,4,83,43,7,145,53,234,105,217,111,228,96,54,42,215,212,66,9,25,68,104,111,253,79,44 };
    byte_vec_t pk { 4,171,23,175,233,84,50,74,0,151,91,191,220,95,197,186,3,151,150,78,183,148,197,37,7,23,197,169,114,110,18,243,228,205,128,128,179,150,72,142,19,141,181,221,166,177,185,29,199,204,102,78,27,64,144,93,136,33,239,25,73,123,174,175,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 299 ") {
    byte_vec_t msg { 253,230,59,6 };
    byte_vec_t sig { 93,205,208,145,255,203,87,12,233,240,119,48,94,57,118,42,113,65,85,49,203,51,59,217,172,107,133,122,198,95,54,143,221,89,9,17,254,193,138,33,247,44,36,80,3,62,45,119,164,239,24,160,135,38,172,95,30,243,157,78,142,166,184,203 };
    byte_vec_t pk { 4,4,115,178,175,9,245,55,59,218,229,232,254,48,194,88,78,203,86,183,181,116,162,16,236,243,19,39,109,43,188,84,14,15,241,72,21,133,95,102,68,18,13,220,108,107,126,49,197,91,195,153,81,162,48,68,218,108,227,31,114,166,250,44,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 299 ") {
    byte_vec_t msg { 69,115,205,198 };
    byte_vec_t sig { 14,85,9,144,77,42,100,132,224,46,172,107,63,153,156,61,182,30,230,95,51,89,21,83,2,102,65,47,201,153,234,125,15,72,243,42,134,59,130,166,80,21,162,43,56,34,220,145,126,86,174,232,244,45,149,94,154,248,220,125,84,4,0,155 };
    byte_vec_t pk { 4,240,43,131,74,107,63,167,188,93,86,146,199,129,204,219,158,137,220,133,150,149,105,179,217,203,159,46,50,204,41,169,100,121,183,138,44,191,47,104,215,114,0,217,126,189,133,55,229,55,212,165,233,7,250,91,4,135,220,88,89,0,161,9,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 300 ") {
    byte_vec_t msg { 133,36,115,215 };
    byte_vec_t sig { 195,82,116,118,119,186,247,209,158,254,23,33,151,104,134,236,91,181,57,86,32,177,118,150,170,41,207,213,148,217,203,78,19,33,88,100,205,19,77,166,131,5,143,7,228,184,125,143,90,44,98,253,67,139,108,36,141,39,44,118,41,173,174,179 };
    byte_vec_t pk { 4,232,114,147,169,159,127,202,195,102,102,155,122,254,23,150,22,161,188,146,144,65,133,50,142,211,226,143,87,232,220,118,30,23,219,19,161,5,220,214,171,56,234,125,4,131,91,101,94,55,70,77,36,140,192,167,109,66,69,233,84,13,188,32,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 300 ") {
    byte_vec_t msg { 85,217,82,12 };
    byte_vec_t sig { 218,105,23,60,243,139,211,135,12,89,42,70,171,251,168,141,23,219,244,106,165,119,8,121,17,10,239,56,199,139,105,193,114,1,254,163,173,190,137,149,123,52,210,117,56,84,248,151,62,80,17,143,233,169,141,131,125,102,177,111,16,52,138,53 };
    byte_vec_t pk { 4,22,14,150,219,92,102,136,198,146,88,157,223,179,215,66,12,78,145,113,35,119,160,236,32,184,89,193,13,191,42,106,237,51,200,24,123,201,253,181,213,32,139,57,128,201,75,98,128,132,216,216,2,187,67,177,50,45,196,195,99,134,93,127,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 301 ") {
    byte_vec_t msg { 209,248,153,106 };
    byte_vec_t sig { 194,132,3,199,150,37,235,60,96,98,2,54,103,21,153,95,99,16,61,179,127,113,165,156,66,3,141,190,249,226,67,192,112,8,45,12,70,30,157,93,35,141,5,13,69,2,1,249,167,200,116,40,45,9,209,25,23,135,102,207,45,44,186,210 };
    byte_vec_t pk { 4,255,251,63,246,26,58,71,171,115,145,202,28,48,89,233,194,171,116,168,28,209,91,210,98,35,184,20,231,242,192,207,141,4,171,157,115,28,218,246,250,240,23,120,117,25,10,183,15,147,121,74,96,227,203,170,126,238,121,70,154,182,233,71,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 301 ") {
    byte_vec_t msg { 9,3,25,225 };
    byte_vec_t sig { 128,96,147,130,86,26,150,21,66,95,150,244,16,61,134,207,68,168,76,60,156,46,4,17,76,51,181,204,21,190,125,26,142,108,241,242,231,112,202,51,169,5,78,160,243,184,185,139,22,36,26,88,254,15,214,131,231,28,6,35,86,7,46,225 };
    byte_vec_t pk { 4,235,94,98,236,182,3,60,140,90,120,112,132,213,211,216,16,5,134,52,116,50,96,27,96,89,83,104,200,179,197,1,91,93,221,252,121,64,153,172,34,151,210,32,181,222,31,166,150,16,129,231,115,100,43,206,190,155,180,129,116,3,84,48,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 302 ") {
    byte_vec_t msg { 194,174,90,121 };
    byte_vec_t sig { 194,0,120,179,118,92,233,76,95,190,67,79,94,217,189,158,237,201,29,11,247,93,141,131,210,48,199,90,144,240,51,9,7,170,2,33,199,204,141,190,131,93,224,174,82,114,195,99,173,141,72,252,61,145,48,143,63,197,0,246,215,84,108,135 };
    byte_vec_t pk { 4,153,185,79,221,181,112,8,27,251,132,119,33,180,189,89,27,13,119,82,102,13,186,239,68,188,151,255,226,201,211,109,79,123,197,151,170,132,53,136,218,196,29,117,246,1,167,193,74,232,42,20,141,87,144,220,124,45,56,226,63,111,239,121,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 302 ") {
    byte_vec_t msg { 226,124,48,173 };
    byte_vec_t sig { 150,97,113,126,95,26,101,98,198,212,208,62,21,60,15,252,75,54,113,207,221,173,155,209,132,65,75,11,199,23,236,237,136,125,34,132,156,72,230,15,211,191,136,192,227,81,82,14,196,115,20,62,96,28,111,209,49,201,82,41,166,89,14,30 };
    byte_vec_t pk { 4,117,122,3,223,213,131,235,76,150,217,254,222,33,111,156,60,217,141,12,162,121,45,112,231,223,229,108,53,123,23,164,130,206,208,88,206,24,12,30,11,10,185,192,141,230,81,44,4,99,136,194,208,108,29,0,41,233,224,159,88,165,208,254,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 303 ") {
    byte_vec_t msg { 12,1,3,238 };
    byte_vec_t sig { 117,241,176,116,52,128,133,210,212,135,66,206,134,246,27,32,56,99,195,39,217,123,33,248,184,148,228,196,248,154,38,209,218,216,195,225,170,154,173,65,141,192,168,245,124,25,35,233,245,158,59,81,153,163,106,199,175,165,56,32,254,232,9,122 };
    byte_vec_t pk { 4,220,64,131,91,87,128,176,250,63,212,9,95,27,26,98,67,132,233,51,76,94,84,235,94,139,125,67,46,167,252,221,31,192,253,25,14,237,63,35,230,32,220,150,3,18,169,239,206,141,202,209,112,9,160,125,127,71,18,193,217,251,132,238,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 303 ") {
    byte_vec_t msg { 253,183,249,62 };
    byte_vec_t sig { 142,84,157,134,53,132,86,234,99,243,148,231,244,11,119,214,12,231,213,125,89,161,145,97,240,85,46,198,246,67,173,68,126,169,27,216,225,91,203,11,56,96,110,210,88,140,251,24,215,190,35,239,88,30,253,222,59,247,255,128,129,241,168,229 };
    byte_vec_t pk { 4,84,83,192,229,158,168,210,171,113,155,201,219,43,20,208,22,197,131,172,147,95,34,189,192,163,104,156,141,71,49,142,68,120,163,21,128,242,60,69,241,100,221,229,57,129,206,130,100,7,8,222,251,109,112,201,182,104,208,241,38,182,161,96,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 304 ") {
    byte_vec_t msg { 58,107,128,154 };
    byte_vec_t sig { 20,131,33,214,250,8,192,129,81,47,85,142,191,165,193,150,71,124,224,113,87,184,65,87,155,93,43,175,188,105,84,141,227,55,113,130,111,31,10,102,59,33,96,238,20,34,122,140,132,64,234,254,170,163,119,86,143,227,179,47,113,252,119,190 };
    byte_vec_t pk { 4,28,50,81,235,151,181,177,232,169,64,188,79,101,132,197,208,142,224,219,228,225,203,151,115,88,6,157,230,10,70,78,75,66,92,54,128,222,66,226,101,220,91,243,70,241,189,248,45,105,189,106,160,221,167,126,70,5,64,136,251,152,178,17,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 304 ") {
    byte_vec_t msg { 125,73,246,196 };
    byte_vec_t sig { 73,167,93,210,129,40,20,222,240,125,30,56,160,206,116,207,157,177,50,213,252,75,147,51,47,79,150,38,3,74,94,111,21,251,243,52,146,76,118,64,34,107,158,181,246,80,203,68,155,89,239,114,181,12,233,90,244,187,49,15,46,82,123,111 };
    byte_vec_t pk { 4,235,32,33,77,154,4,120,5,224,43,81,5,234,206,220,82,144,128,72,208,76,17,103,213,122,78,57,206,158,225,51,178,24,56,171,55,232,24,165,6,143,206,219,193,143,140,123,198,166,183,199,0,210,26,227,229,232,19,184,49,158,203,102,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 305 ") {
    byte_vec_t msg { 123,17,237,30 };
    byte_vec_t sig { 71,116,20,1,112,201,151,107,26,72,69,95,183,124,73,226,155,102,160,35,181,190,75,196,78,196,96,54,175,118,222,125,186,1,195,70,99,53,97,37,48,210,43,190,117,151,50,11,10,73,57,149,191,117,64,103,72,14,100,105,65,238,240,210 };
    byte_vec_t pk { 4,229,157,37,138,8,50,221,207,11,68,209,239,196,117,232,14,213,199,64,101,195,192,208,182,44,107,87,225,145,183,72,131,226,160,3,54,176,150,40,67,40,88,253,252,184,132,58,30,101,57,160,41,179,162,23,212,20,8,204,57,40,237,237,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 305 ") {
    byte_vec_t msg { 219,251,221,37 };
    byte_vec_t sig { 51,254,86,207,115,153,8,51,137,118,67,176,210,140,75,207,23,115,66,19,150,237,63,109,9,178,74,211,32,100,128,152,172,147,169,194,86,1,42,5,163,71,185,198,250,173,161,100,0,249,157,167,5,193,10,213,54,110,81,0,27,43,75,247 };
    byte_vec_t pk { 4,117,170,200,79,130,90,175,97,124,68,212,174,10,171,205,37,164,212,206,57,79,57,182,233,68,233,197,238,169,193,63,78,74,160,243,133,0,95,123,153,44,204,145,58,49,243,159,192,48,21,247,80,71,95,134,23,124,132,118,166,184,127,247,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 306 ") {
    byte_vec_t msg { 45,171,109,96 };
    byte_vec_t sig { 27,97,80,186,12,208,198,110,205,251,92,221,123,255,75,163,113,105,60,185,147,227,192,175,95,245,27,183,244,112,19,99,242,108,77,136,49,125,123,237,64,22,164,175,232,226,172,95,215,196,145,130,164,170,11,54,47,79,197,254,173,170,14,240 };
    byte_vec_t pk { 4,137,31,214,52,198,112,7,235,10,116,214,155,102,22,170,134,162,162,177,173,15,246,42,227,246,161,97,58,249,122,116,105,233,87,66,96,75,3,129,21,129,142,25,224,252,23,249,242,194,221,204,198,249,172,57,219,243,20,7,242,186,217,209,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 306 ") {
    byte_vec_t msg { 59,225,32,122 };
    byte_vec_t sig { 73,13,151,96,186,50,71,43,36,26,174,190,226,157,112,93,157,192,115,142,194,47,108,239,145,139,100,145,227,114,183,21,196,22,170,8,213,85,53,4,237,30,172,7,234,216,237,22,208,50,57,194,179,202,122,244,230,229,31,132,44,111,42,159 };
    byte_vec_t pk { 4,133,52,119,109,78,203,105,13,135,117,162,38,79,55,160,113,20,169,66,96,137,103,148,85,24,160,102,146,92,237,23,126,53,42,216,92,86,147,78,245,37,64,59,116,203,250,122,71,216,112,124,218,254,15,29,160,163,122,197,120,145,44,200,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 307 ") {
    byte_vec_t msg { 155,47,2,137 };
    byte_vec_t sig { 147,248,112,243,246,199,80,88,31,165,83,121,252,20,105,175,11,213,73,191,192,211,86,242,124,173,129,183,42,4,51,233,144,157,101,58,147,242,85,248,194,172,223,156,15,239,114,108,93,86,255,186,64,146,115,155,241,216,150,9,118,99,41,114 };
    byte_vec_t pk { 4,215,7,85,13,249,45,157,0,165,167,215,82,185,163,57,55,183,23,54,175,175,225,200,64,193,49,225,54,54,209,94,140,32,209,101,1,211,86,244,207,163,174,116,201,201,239,57,109,66,8,187,207,238,187,183,117,50,30,178,7,40,189,30,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 307 ") {
    byte_vec_t msg { 175,114,72,166 };
    byte_vec_t sig { 159,43,126,78,33,31,157,197,181,249,144,107,81,98,79,163,155,253,25,130,246,188,106,195,130,221,44,169,147,37,64,197,85,99,223,110,152,95,149,119,28,147,138,36,174,195,238,224,150,204,66,70,224,114,171,68,59,166,222,187,156,117,103,113 };
    byte_vec_t pk { 4,95,201,54,92,116,209,210,149,239,199,247,22,42,61,226,103,142,135,48,253,106,12,0,192,228,60,119,28,217,167,38,42,108,201,45,60,100,125,230,138,228,72,173,64,27,100,165,34,186,154,172,16,163,50,81,32,32,30,102,161,221,72,37,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 308 ") {
    byte_vec_t msg { 209,138,98,100 };
    byte_vec_t sig { 179,81,44,60,204,127,102,104,153,167,254,48,173,158,81,219,116,54,29,86,232,71,212,117,84,116,222,106,159,226,124,38,121,87,217,177,43,186,248,199,149,193,31,37,136,4,166,153,163,176,124,158,157,227,0,232,3,109,117,94,117,233,112,33 };
    byte_vec_t pk { 4,26,3,99,77,179,133,90,76,13,31,229,255,139,10,190,7,64,103,240,5,95,139,15,12,173,76,1,95,202,95,160,215,225,165,192,202,182,91,242,108,157,52,215,192,164,177,107,191,239,55,70,13,62,16,76,112,204,199,133,45,128,130,157,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 308 ") {
    byte_vec_t msg { 202,191,221,217 };
    byte_vec_t sig { 33,124,147,39,134,245,150,102,50,19,35,114,161,196,239,37,105,9,243,12,85,19,22,170,134,28,34,140,208,57,110,18,45,91,1,87,126,197,187,113,125,80,241,143,253,156,195,61,14,114,93,150,245,123,203,249,19,196,88,166,24,232,44,237 };
    byte_vec_t pk { 4,83,201,230,17,105,38,12,195,255,2,214,234,169,67,214,42,104,51,170,237,151,32,10,250,215,183,249,172,173,79,1,245,122,205,37,59,59,46,64,84,0,6,139,171,193,254,106,43,33,98,48,185,249,88,22,74,37,202,207,93,48,213,202,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 309 ") {
    byte_vec_t msg { 83,253,217,196 };
    byte_vec_t sig { 148,232,252,181,182,213,96,79,227,230,20,76,79,144,209,54,69,229,214,159,42,222,33,169,29,193,195,16,131,230,70,167,64,61,241,246,188,176,227,98,77,166,33,99,226,233,179,34,227,41,27,82,75,232,220,10,22,194,139,103,58,45,209,150 };
    byte_vec_t pk { 4,11,2,143,164,163,88,100,47,227,91,154,109,14,35,234,227,2,181,249,121,101,207,0,95,153,59,127,169,187,107,188,72,107,30,73,122,168,164,66,16,170,231,16,191,102,146,229,46,198,99,95,233,40,88,217,37,79,79,195,71,224,236,73,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 309 ") {
    byte_vec_t msg { 149,98,247,39 };
    byte_vec_t sig { 245,44,195,138,106,253,241,165,110,249,147,82,122,147,219,128,111,186,164,46,208,214,27,173,95,189,165,96,127,167,187,24,166,62,75,246,135,55,7,219,75,22,109,220,170,116,153,211,53,16,122,243,180,148,73,187,104,103,204,23,245,207,118,162 };
    byte_vec_t pk { 4,77,45,131,169,35,235,240,216,229,193,57,27,183,171,251,21,114,174,8,198,134,225,174,59,155,19,196,28,110,137,103,126,12,178,185,95,61,98,129,231,207,163,69,41,211,37,53,100,155,127,42,139,182,127,169,80,52,232,187,106,205,185,124,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 310 ") {
    byte_vec_t msg { 58,164,107,172 };
    byte_vec_t sig { 196,94,124,70,154,55,176,198,5,86,161,162,156,148,89,70,136,80,34,237,15,136,153,84,113,255,104,168,195,188,149,93,206,168,192,115,71,234,140,235,142,112,63,163,179,205,166,180,52,91,41,126,18,249,67,216,119,249,116,88,129,235,52,85 };
    byte_vec_t pk { 4,239,103,72,94,40,146,103,205,150,144,90,64,113,73,124,105,183,205,202,88,21,95,35,112,28,185,28,132,44,230,94,57,14,9,230,191,225,61,140,130,98,236,26,30,171,16,104,119,25,85,11,47,53,74,17,241,89,213,61,100,210,42,86,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 310 ") {
    byte_vec_t msg { 77,162,118,170 };
    byte_vec_t sig { 42,39,13,109,178,85,144,196,167,213,80,57,146,147,25,52,19,107,60,210,106,200,119,172,113,142,18,122,9,14,218,13,72,242,165,72,173,0,4,69,83,117,197,153,173,171,2,155,109,156,14,233,177,189,212,19,60,118,147,24,177,232,176,219 };
    byte_vec_t pk { 4,211,13,85,4,88,118,249,46,45,146,159,234,203,93,148,95,239,233,102,76,220,187,209,105,65,168,72,52,189,153,117,37,54,118,91,184,88,69,67,244,88,66,26,22,170,10,111,102,205,196,199,209,52,224,48,6,116,170,251,33,87,64,191,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 311 ") {
    byte_vec_t msg { 124,202,6,207 };
    byte_vec_t sig { 52,244,196,218,121,226,95,27,233,187,75,69,65,109,116,24,211,94,236,184,150,141,80,186,165,168,242,77,201,3,162,93,76,140,194,195,23,209,207,106,10,132,238,67,209,106,145,12,177,190,194,129,48,61,253,68,141,146,234,14,170,22,97,223 };
    byte_vec_t pk { 4,152,25,102,86,251,217,196,64,127,24,43,31,55,62,134,127,254,202,25,53,156,225,190,95,231,237,155,125,156,73,86,80,122,165,85,241,157,222,99,37,9,98,204,73,42,42,98,79,206,191,75,120,44,166,230,114,2,74,123,67,152,252,192,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 311 ") {
    byte_vec_t msg { 158,216,153,162 };
    byte_vec_t sig { 31,6,166,125,226,94,159,93,34,69,190,11,234,165,104,62,30,221,40,233,36,149,163,210,89,131,149,141,6,56,168,76,18,197,172,123,145,24,173,182,82,28,116,24,45,36,127,211,100,112,124,251,178,123,177,158,238,38,255,70,243,40,7,25 };
    byte_vec_t pk { 4,70,10,167,8,2,106,18,203,213,158,153,217,102,197,62,197,175,171,205,45,217,245,31,64,119,96,77,57,31,151,46,22,119,248,127,240,8,72,227,130,80,186,147,31,165,173,154,204,185,143,84,191,187,44,163,194,149,252,59,61,197,101,112,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 312 ") {
    byte_vec_t msg { 156,35,168,175 };
    byte_vec_t sig { 109,16,127,15,84,233,113,147,134,180,12,99,106,234,228,220,80,238,102,143,181,250,128,60,98,225,126,215,151,209,128,160,190,106,152,36,129,101,245,14,40,221,186,217,18,238,175,21,39,246,147,3,51,217,173,0,3,191,46,166,137,123,142,89 };
    byte_vec_t pk { 4,106,113,241,181,168,221,152,143,109,87,17,243,170,101,119,60,136,98,19,224,229,118,82,244,34,198,3,135,161,217,104,18,177,223,177,187,171,85,45,46,14,126,205,80,209,167,142,170,230,21,159,147,228,131,21,46,148,229,39,147,43,250,104,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 312 ") {
    byte_vec_t msg { 205,233,204,44 };
    byte_vec_t sig { 158,249,139,242,91,104,122,49,95,81,97,187,134,83,207,51,235,92,192,48,98,198,193,43,163,95,202,88,246,147,178,45,2,70,72,21,20,159,53,39,61,20,50,173,226,121,58,94,153,231,151,134,12,179,184,117,109,139,226,148,78,27,64,205 };
    byte_vec_t pk { 4,186,182,55,24,242,225,8,42,104,113,94,154,37,35,113,234,249,252,23,172,222,113,60,67,104,75,202,67,223,239,161,23,176,150,192,58,152,120,33,131,200,120,163,245,250,52,156,234,152,17,209,113,76,216,190,186,42,149,213,59,150,69,196,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 313 ") {
    byte_vec_t msg { 65,55,220,118 };
    byte_vec_t sig { 234,251,123,136,140,79,222,79,97,149,41,110,17,181,58,124,92,61,1,129,2,243,48,87,214,39,145,143,25,113,118,193,150,107,42,155,229,224,185,122,169,133,33,240,81,219,137,16,102,205,129,53,227,207,74,175,39,27,166,77,25,62,216,172 };
    byte_vec_t pk { 4,254,205,20,107,94,195,18,61,220,255,55,84,164,16,18,217,21,124,107,213,125,47,46,173,105,228,135,207,197,252,2,231,161,134,189,51,147,116,112,135,20,232,107,239,234,246,49,139,192,94,40,17,64,48,184,196,55,98,141,81,51,208,202,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 313 ") {
    byte_vec_t msg { 214,139,48,87 };
    byte_vec_t sig { 122,35,53,191,219,107,230,194,248,121,151,60,6,134,102,57,88,93,39,169,218,242,163,76,155,83,199,76,83,219,49,160,208,14,245,14,168,19,97,204,179,170,137,222,6,186,28,36,103,162,137,111,106,191,109,36,144,15,191,247,141,30,52,73 };
    byte_vec_t pk { 4,209,87,246,141,149,230,87,240,45,82,148,115,23,77,176,198,93,224,13,160,113,139,154,150,175,143,130,89,53,101,28,137,55,245,206,102,142,168,210,35,125,24,8,75,104,44,130,195,108,69,145,111,111,103,92,63,139,5,91,236,174,238,38,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 314 ") {
    byte_vec_t msg { 59,167,202,27 };
    byte_vec_t sig { 202,215,232,162,95,253,225,93,28,60,65,150,240,133,1,114,174,146,140,247,187,12,161,15,252,96,154,61,203,233,42,73,95,54,28,148,136,181,187,204,8,190,136,173,178,60,60,57,187,60,133,248,14,129,105,74,167,186,206,139,162,247,220,24 };
    byte_vec_t pk { 4,107,233,58,251,214,216,126,3,227,95,188,160,28,50,9,174,119,20,244,197,248,151,109,7,176,238,71,255,119,70,237,90,182,182,132,8,30,202,255,153,149,136,16,199,112,255,168,246,0,243,137,109,92,173,183,202,226,193,18,19,148,230,153,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 314 ") {
    byte_vec_t msg { 14,182,30,130 };
    byte_vec_t sig { 51,184,58,102,236,185,126,122,85,17,178,36,67,64,17,41,10,151,253,201,129,240,164,2,106,68,200,35,137,32,43,113,70,153,9,71,88,231,42,14,42,124,79,81,219,16,73,73,255,119,218,39,121,157,0,140,30,230,108,84,23,226,93,192 };
    byte_vec_t pk { 4,41,145,114,58,170,177,93,183,64,224,23,86,49,225,247,225,142,3,139,75,218,115,211,159,105,2,32,221,254,94,227,53,167,57,93,37,5,173,215,21,200,198,180,43,2,60,132,100,53,113,100,55,112,150,170,250,255,201,142,192,91,14,204,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 315 ") {
    byte_vec_t msg { 37,118,94,129 };
    byte_vec_t sig { 47,138,163,95,108,19,175,2,159,247,224,221,93,14,172,194,62,253,242,119,133,67,104,47,178,112,22,165,98,248,169,25,172,196,8,125,159,88,199,155,56,204,63,200,174,134,15,207,176,89,111,157,198,49,221,38,161,255,11,234,115,106,54,229 };
    byte_vec_t pk { 4,147,239,107,113,253,65,197,215,66,38,188,156,32,46,234,133,186,28,110,95,1,207,229,26,31,101,177,139,254,131,44,96,207,220,189,6,36,217,250,172,146,195,72,109,212,204,160,126,244,55,172,136,206,49,160,208,233,207,114,134,90,159,64,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 315 ") {
    byte_vec_t msg { 132,15,243,121 };
    byte_vec_t sig { 150,175,144,186,160,16,252,160,186,118,213,154,83,204,206,255,27,123,187,169,107,207,200,16,113,178,128,242,226,185,221,147,24,173,219,92,168,124,234,253,41,99,69,135,174,217,49,213,171,55,227,75,82,47,55,221,52,224,203,30,168,145,237,72 };
    byte_vec_t pk { 4,150,36,189,131,39,219,36,38,226,76,219,2,10,69,13,35,111,49,196,102,181,193,8,116,136,217,158,70,15,194,168,34,141,140,222,130,59,45,55,254,181,255,173,1,242,24,239,53,53,56,139,150,212,91,62,38,132,124,39,192,225,6,236,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 316 ") {
    byte_vec_t msg { 6,219,21,69 };
    byte_vec_t sig { 142,146,54,140,79,71,179,53,251,72,37,130,190,67,24,207,175,12,7,21,136,57,222,241,53,19,86,181,75,4,176,231,28,99,100,240,142,210,215,211,26,127,152,16,169,112,214,130,203,74,28,125,3,20,26,203,146,105,46,247,165,67,34,16 };
    byte_vec_t pk { 4,164,244,118,6,29,187,104,242,78,48,19,68,25,126,209,232,248,85,46,246,39,2,13,16,24,158,9,55,154,185,241,12,201,157,163,190,129,124,95,16,142,97,171,53,251,96,174,128,255,209,10,247,210,197,45,30,122,205,204,196,68,140,119,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 316 ") {
    byte_vec_t msg { 252,227,132,156 };
    byte_vec_t sig { 144,74,228,25,231,99,84,34,192,104,110,30,226,236,228,161,23,114,36,26,136,226,57,86,91,67,150,43,18,93,43,168,183,242,183,217,204,64,26,242,128,199,209,133,68,26,238,70,202,228,81,183,229,248,23,62,154,185,242,106,127,161,95,173 };
    byte_vec_t pk { 4,160,90,69,49,44,75,27,5,45,220,199,90,3,29,151,101,150,55,143,238,36,83,176,68,41,39,104,191,157,36,118,50,48,118,111,119,241,196,11,46,88,229,211,104,231,102,207,147,226,213,250,109,124,206,85,250,59,44,61,155,65,104,188,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 317 ") {
    byte_vec_t msg { 161,222,80,232 };
    byte_vec_t sig { 254,62,3,210,151,81,4,137,221,116,255,120,8,24,27,215,205,212,134,62,139,102,250,186,137,172,130,53,164,23,227,227,44,78,226,137,255,215,53,15,221,21,213,62,50,240,208,17,157,249,197,185,179,231,197,80,135,227,165,23,159,233,168,51 };
    byte_vec_t pk { 4,148,218,2,66,55,88,203,204,40,99,144,144,50,175,218,162,213,112,158,112,95,229,241,238,156,249,135,250,229,150,117,7,7,146,64,89,174,189,89,59,135,137,143,219,127,184,230,248,178,93,95,63,54,148,74,58,123,197,189,121,198,194,238,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 317 ") {
    byte_vec_t msg { 145,183,189,49 };
    byte_vec_t sig { 188,5,31,230,202,34,110,129,125,234,212,110,181,196,63,202,250,199,69,16,110,240,255,41,169,158,140,110,115,229,53,21,110,71,225,221,31,64,179,78,148,254,101,22,218,128,159,14,237,6,166,40,105,168,160,56,209,170,16,28,85,249,70,111 };
    byte_vec_t pk { 4,157,129,191,63,210,234,6,249,111,147,1,165,109,94,29,120,239,108,216,31,255,205,119,62,109,144,16,108,160,227,235,12,139,96,63,55,8,171,98,185,205,37,100,31,76,172,146,80,138,20,169,18,201,13,39,223,84,60,54,244,25,72,106,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 318 ") {
    byte_vec_t msg { 140,103,0,57 };
    byte_vec_t sig { 231,80,137,55,177,203,106,81,141,10,85,115,8,170,16,11,134,81,145,97,67,143,110,37,191,155,55,221,211,205,22,53,57,138,175,177,157,82,139,76,131,233,40,157,54,112,227,81,87,44,32,167,254,150,111,252,84,57,136,200,163,36,196,184 };
    byte_vec_t pk { 4,16,196,12,1,166,135,183,10,123,237,160,226,253,227,155,11,214,108,50,183,235,133,83,145,44,94,171,35,152,121,54,216,79,25,15,230,201,208,50,78,214,213,82,9,230,67,202,83,167,161,218,9,243,124,255,25,21,175,143,196,237,187,136,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 318 ") {
    byte_vec_t msg { 177,26,95,144 };
    byte_vec_t sig { 131,12,107,166,194,2,59,144,202,113,239,72,138,50,152,226,101,49,86,164,140,157,14,18,60,84,217,95,203,43,176,95,8,68,70,207,159,29,60,92,101,82,233,22,72,223,90,98,172,90,83,146,26,55,141,167,152,128,234,74,209,8,100,45 };
    byte_vec_t pk { 4,139,165,217,59,109,205,5,156,10,15,229,9,239,69,101,193,118,77,106,45,194,232,227,43,148,110,82,244,228,197,18,86,15,60,227,208,27,46,215,35,120,133,169,111,0,6,148,134,44,99,151,168,165,240,145,16,20,171,66,205,139,124,31,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 319 ") {
    byte_vec_t msg { 163,60,243,126 };
    byte_vec_t sig { 145,8,93,135,228,143,108,225,21,10,101,227,118,92,219,107,142,248,78,162,206,202,131,107,61,252,76,238,240,251,110,183,76,174,96,147,48,50,28,217,101,130,208,159,136,238,15,202,36,72,25,88,121,96,62,37,51,96,123,18,118,5,159,138 };
    byte_vec_t pk { 4,65,108,77,218,90,104,255,171,174,175,155,30,103,108,69,81,79,57,211,10,16,202,181,238,158,157,207,176,15,56,67,169,33,165,38,215,166,131,175,58,22,250,101,121,228,25,226,249,58,40,133,237,237,175,163,215,76,219,38,106,222,121,28,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 319 ") {
    byte_vec_t msg { 38,49,199,116 };
    byte_vec_t sig { 28,157,65,215,162,22,29,211,27,239,239,148,238,214,16,35,185,24,245,116,44,119,72,26,241,210,92,252,20,230,132,255,85,105,139,207,35,134,191,95,73,241,214,166,145,83,70,188,205,203,179,226,199,2,214,144,243,90,221,148,5,24,162,91 };
    byte_vec_t pk { 4,178,123,164,126,146,70,153,92,235,239,30,202,16,21,205,236,150,165,164,181,31,173,94,30,4,88,186,150,175,188,154,22,34,45,115,156,113,240,207,217,242,194,70,166,217,63,102,173,91,57,66,45,138,218,215,14,26,209,62,91,92,66,77,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 320 ") {
    byte_vec_t msg { 194,25,89,110 };
    byte_vec_t sig { 209,249,37,72,78,0,204,244,216,142,236,226,250,185,27,154,139,141,155,139,175,183,121,110,67,121,189,244,67,240,124,227,4,22,129,1,253,91,135,91,236,27,252,48,207,89,211,63,157,14,78,82,136,111,107,106,65,10,187,22,54,67,61,74 };
    byte_vec_t pk { 4,49,85,105,140,211,32,37,99,146,6,12,112,236,248,66,100,154,173,40,208,147,164,208,150,83,117,99,28,173,88,229,208,34,122,30,98,157,216,174,230,114,94,124,149,188,52,141,153,162,1,238,38,20,72,207,162,53,178,61,115,51,171,162,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 320 ") {
    byte_vec_t msg { 128,99,5,98 };
    byte_vec_t sig { 236,133,30,80,105,119,197,211,158,182,209,194,36,228,67,152,26,216,24,109,182,19,30,220,19,105,174,63,243,22,242,174,27,213,46,171,80,1,248,176,38,11,19,139,55,162,202,4,100,67,49,1,196,134,248,37,154,251,96,12,244,89,146,81 };
    byte_vec_t pk { 4,202,210,5,6,237,81,189,126,15,91,227,157,72,26,208,102,5,59,160,255,248,226,24,224,75,194,226,79,119,80,115,207,237,21,111,108,106,197,198,66,185,117,168,21,199,204,15,122,172,73,199,35,146,100,75,31,154,182,203,8,71,137,158,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 321 ") {
    byte_vec_t msg { 135,81,249,206 };
    byte_vec_t sig { 45,71,67,241,144,39,161,22,171,233,198,15,245,156,15,166,61,14,26,92,68,52,224,255,48,251,59,137,128,161,189,221,98,243,200,201,172,234,77,218,173,206,101,163,207,173,108,245,232,131,29,156,38,211,104,70,168,173,220,23,201,6,60,101 };
    byte_vec_t pk { 4,113,187,100,58,73,118,217,10,71,75,162,141,69,218,229,224,130,92,0,185,72,73,48,203,248,53,227,184,100,203,240,226,151,2,41,135,206,76,103,70,124,173,253,186,143,153,138,219,94,89,24,59,158,193,146,71,153,96,211,104,127,124,193,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 321 ") {
    byte_vec_t msg { 240,211,119,133 };
    byte_vec_t sig { 37,58,239,15,101,63,201,113,163,238,60,146,52,53,212,207,97,17,3,163,81,224,123,38,55,38,165,54,165,241,212,243,237,196,75,71,130,214,129,105,212,82,181,168,209,204,195,14,239,186,141,105,113,207,77,253,135,193,80,32,67,187,240,155 };
    byte_vec_t pk { 4,220,184,128,213,150,231,52,192,135,96,87,179,235,232,12,34,19,122,19,114,225,62,166,117,205,95,34,177,90,250,148,169,136,254,115,163,9,103,150,75,10,150,56,75,140,22,43,242,106,187,231,237,66,32,210,117,124,108,146,12,240,112,50,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 322 ") {
    byte_vec_t msg { 184,52,47,239 };
    byte_vec_t sig { 36,187,68,63,112,139,240,215,0,8,87,176,61,120,202,18,55,197,120,229,65,150,154,196,129,187,115,134,104,232,232,183,74,70,83,94,155,177,253,222,5,79,172,178,74,206,237,39,47,22,16,183,30,63,33,153,242,233,116,105,169,167,125,45 };
    byte_vec_t pk { 4,215,188,200,130,58,72,210,242,134,127,239,201,99,191,102,149,16,2,51,120,234,218,35,250,255,187,232,136,138,13,190,70,83,96,153,61,197,175,86,96,211,7,154,39,3,157,17,166,156,151,219,143,232,179,177,212,71,60,140,128,130,254,167,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 322 ") {
    byte_vec_t msg { 151,248,125,213 };
    byte_vec_t sig { 171,78,194,166,89,105,77,152,83,7,207,123,154,156,198,207,177,34,133,164,58,192,89,196,191,123,125,243,248,173,28,100,188,5,99,204,201,212,149,59,245,165,229,242,34,171,142,142,43,46,14,198,107,38,140,157,109,85,146,198,120,224,251,137 };
    byte_vec_t pk { 4,141,185,205,33,140,242,200,123,122,198,65,93,137,249,247,131,106,147,81,110,248,129,200,147,3,39,120,89,109,82,165,29,17,152,204,71,224,140,162,254,22,65,199,131,131,161,43,178,36,135,69,210,94,209,193,226,5,35,29,118,163,202,88,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 323 ") {
    byte_vec_t msg { 197,1,153,153 };
    byte_vec_t sig { 72,225,172,121,142,176,162,205,180,155,175,119,179,19,93,184,88,70,42,166,115,124,174,164,209,49,102,49,153,179,160,172,91,241,42,134,71,237,27,191,28,25,142,176,41,246,163,132,17,41,204,211,170,113,197,216,43,9,245,254,195,227,111,77 };
    byte_vec_t pk { 4,58,129,216,94,109,247,239,220,143,44,100,67,99,97,249,241,159,19,160,25,109,95,16,195,199,35,1,81,39,174,43,134,91,186,177,215,113,233,129,255,220,219,168,220,149,29,164,211,63,194,107,92,248,170,81,143,113,176,49,120,207,25,164,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 323 ") {
    byte_vec_t msg { 2,47,16,21 };
    byte_vec_t sig { 57,179,119,74,253,195,66,143,246,130,75,58,246,30,220,6,32,72,144,159,253,103,194,68,155,154,239,178,93,214,139,236,242,127,77,26,40,180,127,217,65,8,97,157,248,89,80,20,219,36,163,94,169,89,216,196,60,18,66,80,138,119,32,26 };
    byte_vec_t pk { 4,169,23,22,17,120,93,186,59,241,171,245,63,55,236,218,127,83,178,249,2,209,155,249,118,192,207,83,115,208,117,165,66,171,169,31,30,126,211,11,45,48,140,166,111,220,201,124,60,32,253,176,247,177,236,84,56,252,218,195,217,200,6,10,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 324 ") {
    byte_vec_t msg { 97,158,83,202 };
    byte_vec_t sig { 6,254,100,38,56,173,112,70,220,240,135,199,119,97,146,113,74,8,174,39,97,152,250,170,177,61,113,75,41,184,231,119,147,126,154,170,103,3,19,177,114,183,182,61,112,239,15,58,229,53,52,76,11,16,89,173,63,244,242,8,131,82,53,73 };
    byte_vec_t pk { 4,149,79,30,102,147,141,46,117,243,130,182,132,8,70,29,102,174,223,12,95,167,227,222,159,85,150,46,123,123,94,211,118,21,122,191,224,45,199,159,204,137,116,246,181,207,22,26,5,109,248,172,163,149,30,100,130,221,176,158,194,208,228,11,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 324 ") {
    byte_vec_t msg { 164,115,59,143 };
    byte_vec_t sig { 62,0,59,201,183,191,248,233,22,255,253,244,236,9,99,26,10,188,59,251,54,160,99,163,241,192,213,225,94,142,83,46,5,153,216,93,158,151,203,31,224,52,231,20,22,85,196,9,94,206,41,226,147,141,52,58,77,106,180,98,230,229,247,83 };
    byte_vec_t pk { 4,221,2,65,12,159,152,147,147,0,58,236,133,17,101,78,44,245,127,34,64,169,122,42,187,193,64,47,236,150,45,123,212,191,102,166,59,83,120,226,35,197,104,85,247,255,23,173,199,238,238,234,43,185,187,201,216,38,80,113,243,242,79,151,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 325 ") {
    byte_vec_t msg { 93,156,169,235 };
    byte_vec_t sig { 91,89,71,114,235,151,231,122,33,65,136,142,203,104,80,194,192,5,98,105,140,58,203,215,25,142,19,248,61,180,192,250,174,52,75,159,118,91,179,222,68,132,162,237,46,152,82,55,141,244,83,109,73,65,47,156,109,26,93,224,170,247,239,152 };
    byte_vec_t pk { 4,158,118,219,66,106,126,8,111,103,113,75,49,243,64,133,150,8,30,165,50,141,251,237,83,150,77,148,131,86,21,134,194,38,156,29,137,80,194,90,28,4,123,198,91,91,48,173,103,8,172,120,26,144,101,249,218,197,98,134,247,138,74,219,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 325 ") {
    byte_vec_t msg { 35,152,41,213 };
    byte_vec_t sig { 205,215,157,108,187,229,234,147,243,255,164,31,151,31,72,49,201,173,185,195,156,80,83,96,46,107,205,113,65,239,196,14,206,240,147,1,11,255,15,37,164,100,53,226,48,102,235,161,42,148,99,53,148,53,42,136,161,139,74,220,226,124,83,4 };
    byte_vec_t pk { 4,245,89,207,41,12,108,101,77,212,41,162,8,14,49,183,200,202,218,19,255,120,213,35,168,32,5,211,81,40,17,42,100,213,214,100,62,164,131,143,44,84,100,124,233,166,254,114,208,204,101,195,131,201,124,138,33,82,23,153,95,100,216,219,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 326 ") {
    byte_vec_t msg { 116,66,74,39 };
    byte_vec_t sig { 160,22,174,36,2,113,246,22,234,3,54,169,12,200,30,144,186,64,180,167,92,86,203,60,231,124,1,191,227,28,75,172,186,66,62,89,246,131,165,244,224,181,223,229,87,190,70,206,191,46,251,13,146,240,10,165,199,17,23,21,198,54,101,6 };
    byte_vec_t pk { 4,159,86,238,171,101,176,209,105,78,194,135,115,21,83,51,158,52,116,65,186,122,145,115,123,235,116,186,96,95,18,138,151,42,255,88,95,221,220,23,198,47,196,121,230,49,122,231,160,156,164,131,83,0,171,216,62,30,72,116,24,220,203,147,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 326 ") {
    byte_vec_t msg { 29,102,8,68 };
    byte_vec_t sig { 241,1,214,252,93,28,182,248,154,238,169,1,161,71,203,225,153,197,82,238,6,7,165,50,155,175,105,136,162,24,153,249,176,56,165,206,80,219,4,244,162,36,77,91,3,94,62,47,48,239,227,25,240,158,93,32,31,71,64,254,185,225,162,26 };
    byte_vec_t pk { 4,55,78,226,69,164,23,72,201,29,148,232,58,85,162,44,89,109,98,224,101,230,241,184,140,103,87,228,203,42,77,54,119,164,166,84,8,89,79,193,245,194,69,142,132,66,154,183,210,50,92,5,58,234,19,121,163,6,16,187,42,117,58,248,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 327 ") {
    byte_vec_t msg { 142,192,0,240 };
    byte_vec_t sig { 174,204,234,51,33,251,69,4,237,244,208,153,85,109,75,168,146,246,74,87,11,98,21,187,48,88,116,120,38,165,40,91,40,10,42,104,91,237,156,225,167,34,28,214,158,109,66,196,219,109,220,135,186,95,17,201,43,245,166,145,119,128,183,32 };
    byte_vec_t pk { 4,37,166,242,234,120,71,36,194,164,230,43,46,67,251,103,62,102,25,153,254,84,88,33,68,228,42,135,157,228,137,76,190,34,244,42,55,233,151,24,152,19,180,195,172,5,100,207,205,122,244,226,160,171,62,56,248,129,119,10,188,125,222,76,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 327 ") {
    byte_vec_t msg { 138,201,7,100 };
    byte_vec_t sig { 8,100,208,143,50,220,184,7,151,128,137,44,15,227,147,233,181,149,66,196,113,64,172,196,207,245,240,77,188,122,185,185,36,115,146,73,154,147,216,57,97,41,40,201,10,139,185,143,91,126,88,100,162,11,197,231,181,198,202,6,212,123,238,108 };
    byte_vec_t pk { 4,250,134,6,63,74,148,44,82,86,133,76,249,84,188,134,218,192,62,13,110,113,183,111,71,147,154,27,212,35,113,201,89,106,22,240,105,108,87,5,221,14,93,41,126,186,50,140,203,25,44,27,8,79,151,62,201,12,30,70,25,213,93,12,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 328 ") {
    byte_vec_t msg { 96,149,126,28 };
    byte_vec_t sig { 12,21,54,163,213,109,206,74,69,124,127,114,164,8,60,50,178,248,103,49,77,188,252,236,207,215,58,156,193,179,208,210,192,51,228,90,97,141,122,107,177,165,34,92,35,203,120,52,29,129,76,162,95,240,64,66,196,23,118,188,6,211,232,197 };
    byte_vec_t pk { 4,244,228,154,107,195,54,74,123,135,93,28,234,178,204,225,89,39,194,207,43,214,135,249,101,197,144,122,74,98,104,172,163,249,225,63,149,162,255,143,198,181,248,122,203,93,73,162,33,50,59,155,84,73,48,191,65,186,241,47,73,32,142,71,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 328 ") {
    byte_vec_t msg { 67,90,145,128 };
    byte_vec_t sig { 4,66,243,63,248,64,199,37,121,92,87,121,252,58,91,167,112,216,248,108,8,61,7,236,242,227,248,183,158,53,233,254,2,110,62,89,204,5,128,191,202,191,208,157,116,212,196,6,157,96,255,219,194,156,16,182,200,113,51,180,42,69,38,164 };
    byte_vec_t pk { 4,141,66,114,210,239,53,229,46,52,149,182,119,17,0,16,114,255,64,195,14,19,247,98,157,131,138,133,134,26,196,96,22,185,148,238,36,241,133,67,144,118,201,77,4,192,254,105,132,149,115,224,238,10,77,29,145,1,21,43,227,248,56,88,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 329 ") {
    byte_vec_t msg { 212,73,135,69 };
    byte_vec_t sig { 212,172,4,89,102,136,95,70,199,120,82,166,117,127,142,32,32,95,153,177,68,17,13,171,245,205,222,26,62,247,254,173,253,195,251,103,57,158,150,116,67,220,126,222,186,47,160,142,155,166,240,142,185,160,52,155,241,64,126,195,214,13,176,204 };
    byte_vec_t pk { 4,150,59,243,73,173,27,111,240,173,157,126,176,3,169,39,118,54,196,210,86,139,184,43,77,35,141,144,66,123,103,48,74,55,169,75,166,247,208,104,72,84,238,94,254,250,97,136,78,55,15,105,114,187,28,27,74,97,100,2,120,37,90,161,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 329 ") {
    byte_vec_t msg { 33,10,167,145 };
    byte_vec_t sig { 143,181,144,170,38,63,82,169,33,59,198,74,106,42,241,208,181,239,72,47,38,4,88,176,40,84,247,147,89,25,181,32,135,156,202,207,225,108,180,60,28,127,204,252,32,91,59,79,156,222,130,136,8,168,180,105,45,237,236,140,25,89,146,16 };
    byte_vec_t pk { 4,237,216,22,253,180,205,11,174,136,197,195,0,244,46,119,134,64,214,221,56,113,254,118,24,236,73,164,238,144,138,24,45,146,41,217,238,24,224,134,66,129,113,162,113,240,229,239,189,66,86,62,67,235,151,245,103,197,42,133,181,124,146,163,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 330 ") {
    byte_vec_t msg { 198,125,16,71 };
    byte_vec_t sig { 90,167,148,198,116,197,50,255,45,23,65,87,1,61,123,35,114,86,189,242,17,121,205,39,156,48,145,160,154,47,151,142,154,65,21,240,192,50,19,113,156,94,166,254,4,173,183,234,119,75,143,52,62,61,229,61,221,12,196,118,147,29,36,244 };
    byte_vec_t pk { 4,190,66,221,150,104,10,243,6,68,75,199,13,12,44,124,177,140,118,70,239,158,179,217,218,28,145,113,228,142,111,102,42,10,35,30,127,120,209,195,219,218,196,152,231,49,115,139,175,37,2,23,10,199,189,26,247,56,115,157,208,220,244,131,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 330 ") {
    byte_vec_t msg { 104,77,3,168 };
    byte_vec_t sig { 9,84,67,93,91,192,11,142,29,141,65,135,219,176,88,56,55,20,120,17,154,186,57,88,188,186,108,251,76,254,249,176,229,105,141,164,167,236,114,88,137,79,245,240,141,224,84,85,68,160,192,241,193,214,224,188,18,28,92,132,87,123,147,10 };
    byte_vec_t pk { 4,89,110,235,96,219,253,55,187,163,82,224,131,181,211,172,87,4,156,241,241,167,209,18,139,180,253,234,200,224,83,191,142,62,88,201,78,58,208,224,112,228,40,241,240,208,211,251,132,157,225,122,120,16,123,79,202,9,188,111,20,228,78,233,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 331 ") {
    byte_vec_t msg { 101,201,54,115 };
    byte_vec_t sig { 93,232,119,109,203,232,110,31,163,184,121,177,69,110,78,19,88,27,128,133,162,229,250,28,75,48,43,119,10,239,64,25,15,165,60,150,167,227,193,169,42,54,175,209,0,172,84,16,211,14,141,45,127,188,182,183,102,89,182,180,217,251,68,118 };
    byte_vec_t pk { 4,31,164,152,114,177,159,30,144,106,166,62,16,254,112,53,113,217,177,126,177,168,142,80,63,85,67,245,56,233,52,231,64,179,99,118,41,237,159,61,107,16,39,47,39,175,188,38,16,15,102,68,134,239,59,0,130,220,213,111,212,245,30,23,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 331 ") {
    byte_vec_t msg { 59,121,48,13 };
    byte_vec_t sig { 85,81,11,230,250,98,200,157,17,245,150,94,67,141,231,67,168,24,198,19,125,84,9,13,12,37,197,39,102,221,67,17,227,153,214,43,76,246,115,87,210,198,100,59,239,100,61,97,132,64,51,231,242,129,110,56,193,57,219,78,67,61,132,205 };
    byte_vec_t pk { 4,112,34,188,47,140,111,67,227,86,215,154,87,210,191,57,140,83,136,35,237,242,205,89,223,228,188,162,60,238,246,32,25,44,62,237,190,177,34,82,50,20,122,233,105,22,77,110,36,226,175,44,111,209,108,31,157,185,132,49,196,106,105,208,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 332 ") {
    byte_vec_t msg { 22,57,142,229 };
    byte_vec_t sig { 232,227,118,74,180,168,203,216,124,31,237,5,56,122,4,219,250,210,10,190,147,165,148,71,244,43,223,228,63,251,111,106,140,140,231,96,227,204,137,37,189,230,201,88,100,210,18,204,61,205,96,229,235,158,16,155,253,12,252,225,84,71,214,59 };
    byte_vec_t pk { 4,53,189,173,57,8,204,6,10,90,181,230,160,42,189,33,46,161,163,186,126,14,52,75,215,16,252,241,210,204,242,176,76,244,186,4,121,90,140,109,95,19,99,83,186,143,227,229,233,81,230,64,196,75,156,151,18,220,49,89,114,188,195,49,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 332 ") {
    byte_vec_t msg { 175,191,202,5 };
    byte_vec_t sig { 129,38,254,165,48,239,31,110,21,129,118,234,54,146,241,159,102,168,161,242,238,191,89,236,112,230,33,139,115,94,4,89,88,234,251,0,215,102,26,121,104,242,83,127,84,60,110,133,193,46,123,207,152,176,101,146,146,153,225,37,64,213,14,127 };
    byte_vec_t pk { 4,246,38,230,164,251,96,154,9,180,33,39,207,229,62,149,134,138,110,165,117,94,119,80,186,126,127,212,189,141,230,113,188,116,70,46,119,60,183,232,203,9,58,247,252,175,196,69,232,222,244,250,135,83,192,230,190,138,53,46,155,136,200,196,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 333 ") {
    byte_vec_t msg { 61,59,44,192 };
    byte_vec_t sig { 26,251,29,12,244,19,234,199,251,241,234,118,195,189,177,193,154,83,145,95,131,129,176,182,249,232,142,229,39,155,120,252,204,27,188,101,168,224,107,199,207,184,41,175,226,255,138,217,106,141,244,198,102,80,203,8,83,44,134,173,157,230,0,175 };
    byte_vec_t pk { 4,182,49,177,65,14,83,225,122,196,237,7,53,42,16,116,27,159,214,245,228,127,66,140,49,140,44,1,144,76,218,44,80,173,193,31,202,28,132,244,177,136,250,133,27,79,175,172,254,40,169,144,99,170,186,39,187,34,141,118,202,53,199,156,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 333 ") {
    byte_vec_t msg { 147,42,36,8 };
    byte_vec_t sig { 54,204,58,60,24,175,138,95,141,254,29,141,17,118,200,16,173,206,224,139,190,110,195,96,143,111,127,120,85,81,206,190,108,223,238,152,253,95,37,13,251,159,35,61,110,165,99,183,17,26,136,19,133,170,177,71,252,216,151,171,135,193,178,244 };
    byte_vec_t pk { 4,17,179,235,198,188,61,215,122,226,204,38,68,121,102,9,70,133,151,64,237,24,226,7,19,97,168,200,19,252,13,208,252,248,251,169,219,225,202,150,65,250,170,207,74,165,248,220,94,32,205,59,74,41,82,187,244,201,113,61,189,106,221,120,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 334 ") {
    byte_vec_t msg { 151,194,245,119 };
    byte_vec_t sig { 29,243,201,202,213,81,108,178,236,211,10,237,225,49,192,121,194,139,35,99,192,35,76,41,178,217,85,188,247,107,142,197,242,177,117,67,31,128,200,58,239,195,237,125,15,69,108,147,250,199,143,139,17,128,2,1,114,194,8,158,240,210,112,113 };
    byte_vec_t pk { 4,7,94,108,151,178,152,140,62,74,3,118,98,246,218,80,77,120,14,190,131,180,223,113,224,86,17,29,175,148,23,68,211,139,107,177,168,103,176,204,78,222,16,7,86,241,198,29,119,200,76,200,16,191,98,193,250,54,41,100,16,164,200,154,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 334 ") {
    byte_vec_t msg { 21,126,105,228 };
    byte_vec_t sig { 209,83,100,87,55,56,12,244,96,217,11,110,183,248,213,240,132,166,1,204,41,62,232,153,4,137,33,143,227,111,167,224,248,106,254,205,254,135,11,214,222,88,18,205,105,199,146,35,72,184,255,194,15,180,125,40,254,181,146,130,248,51,120,116 };
    byte_vec_t pk { 4,42,85,184,96,227,109,153,179,142,132,87,159,89,44,83,145,14,33,185,224,156,156,228,52,234,0,101,146,53,100,225,188,137,215,228,172,78,162,87,24,27,67,220,174,11,216,239,125,166,67,149,137,125,23,224,26,194,34,184,156,68,243,224,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 335 ") {
    byte_vec_t msg { 112,245,2,215 };
    byte_vec_t sig { 135,228,244,240,221,229,129,99,226,81,53,45,155,200,134,95,123,31,225,98,4,133,46,101,179,101,192,101,8,35,153,144,86,117,225,80,209,23,206,86,86,233,152,84,86,57,228,175,29,113,108,146,176,92,74,45,118,139,94,160,213,241,158,26 };
    byte_vec_t pk { 4,188,167,32,55,54,93,69,36,183,80,133,105,209,67,214,156,59,163,181,224,155,127,72,187,222,8,222,157,29,246,115,133,19,163,182,139,119,120,56,98,172,59,134,187,174,83,7,166,241,141,219,16,96,149,78,172,123,9,198,96,62,61,61,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 335 ") {
    byte_vec_t msg { 37,248,209,100 };
    byte_vec_t sig { 222,64,16,161,235,98,171,81,127,52,178,244,185,249,2,30,134,56,75,161,141,227,53,84,34,9,227,69,127,40,38,213,156,105,44,94,29,72,88,158,37,56,16,114,63,35,182,27,56,230,217,172,210,248,219,26,230,255,138,69,205,1,75,16 };
    byte_vec_t pk { 4,13,248,156,142,64,149,94,105,193,145,16,32,62,192,86,249,86,104,177,88,54,46,79,28,163,233,189,190,103,43,148,33,53,204,213,238,168,41,146,43,34,12,127,194,38,214,240,230,214,141,249,122,242,54,140,25,57,206,158,137,72,33,238,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 336 ") {
    byte_vec_t msg { 100,129,41,168 };
    byte_vec_t sig { 134,28,129,194,26,58,4,197,7,180,253,99,188,167,109,151,161,117,241,228,207,139,5,176,148,109,84,207,125,136,60,231,43,233,108,165,191,104,209,183,129,37,178,44,246,9,241,80,23,90,99,4,2,248,16,9,37,78,65,63,204,157,217,147 };
    byte_vec_t pk { 4,92,193,94,79,158,34,53,198,243,108,72,187,164,29,250,153,175,240,88,218,72,7,130,237,37,11,157,119,163,162,242,101,178,213,41,14,219,167,107,214,61,81,107,148,21,10,241,171,94,86,208,188,109,255,203,207,39,160,240,233,3,69,237,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 336 ") {
    byte_vec_t msg { 50,30,167,219 };
    byte_vec_t sig { 214,187,104,164,14,128,180,35,114,138,157,110,179,235,24,183,59,211,10,24,37,249,227,62,147,25,67,14,247,164,219,3,184,223,220,27,143,12,146,187,189,161,132,177,184,230,27,143,182,78,15,92,61,71,133,191,30,172,102,131,170,186,221,12 };
    byte_vec_t pk { 4,105,158,219,71,250,251,144,91,150,226,183,219,108,195,70,77,83,123,70,237,242,182,123,113,125,140,170,125,223,126,56,110,88,107,146,171,151,240,67,19,114,75,171,33,87,15,81,31,237,218,46,151,96,45,6,215,60,124,207,3,161,19,240,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 337 ") {
    byte_vec_t msg { 232,98,133,9 };
    byte_vec_t sig { 20,209,163,182,35,212,54,32,242,124,54,189,130,135,151,181,204,162,118,199,138,0,19,27,152,83,5,149,141,176,186,43,208,12,10,31,59,143,241,161,112,61,9,113,74,157,194,238,28,155,246,49,26,51,231,80,141,187,133,223,249,220,171,43 };
    byte_vec_t pk { 4,186,82,225,60,144,48,126,61,114,90,175,142,88,243,186,146,17,67,145,66,174,244,65,147,33,180,92,210,98,117,240,17,25,121,127,71,44,110,211,173,132,211,137,45,169,114,95,162,25,183,56,140,138,34,207,186,31,211,191,89,116,50,99,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 337 ") {
    byte_vec_t msg { 19,34,80,127 };
    byte_vec_t sig { 52,78,152,50,223,178,242,41,203,158,248,3,111,250,61,233,67,189,98,64,9,145,247,137,132,76,4,93,116,81,6,97,101,226,2,28,228,190,73,240,220,249,152,123,188,234,128,244,18,31,121,145,237,181,10,187,102,144,58,127,213,174,234,50 };
    byte_vec_t pk { 4,32,133,238,66,191,213,61,79,196,168,209,31,248,158,33,122,144,175,191,147,193,95,59,233,0,153,226,96,121,12,221,29,249,95,102,182,205,96,190,92,115,211,243,84,164,224,226,249,60,1,202,147,247,26,149,159,243,247,148,91,169,248,211,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 338 ") {
    byte_vec_t msg { 39,23,154,66 };
    byte_vec_t sig { 64,15,120,118,133,133,231,148,79,211,1,5,49,164,245,135,166,7,62,92,175,209,82,160,132,137,162,221,129,255,157,245,233,65,209,138,135,47,105,103,71,81,22,255,28,89,118,119,141,178,232,96,188,0,182,227,170,34,57,128,224,245,99,206 };
    byte_vec_t pk { 4,175,137,119,37,0,4,7,193,167,241,70,156,17,142,23,80,100,36,179,205,120,199,97,80,43,123,17,19,88,240,134,160,75,221,50,46,192,57,0,129,145,17,241,93,43,56,155,152,157,61,55,169,30,45,26,144,210,193,121,232,89,119,73,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 338 ") {
    byte_vec_t msg { 223,29,72,105 };
    byte_vec_t sig { 220,251,3,52,190,58,13,32,215,21,67,107,24,174,236,159,33,23,69,100,27,81,215,96,99,146,172,16,99,242,38,252,50,255,255,168,108,174,72,218,172,100,9,204,157,25,247,228,125,75,100,247,234,95,168,106,34,137,148,244,39,149,243,110 };
    byte_vec_t pk { 4,254,74,123,240,14,65,175,179,155,152,85,176,169,173,11,60,109,240,223,40,7,29,77,37,43,104,214,171,177,102,30,164,10,212,57,5,183,169,146,101,208,239,121,73,43,37,145,151,243,204,71,230,237,206,211,173,143,114,32,160,49,243,137,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 339 ") {
    byte_vec_t msg { 202,77,18,123 };
    byte_vec_t sig { 175,172,192,139,81,145,243,175,109,173,59,146,169,255,135,78,96,236,4,42,202,142,204,88,115,184,74,186,132,197,119,139,200,191,70,120,128,247,36,70,194,65,16,229,233,41,81,247,67,145,150,198,186,45,67,195,195,187,151,134,46,70,7,1 };
    byte_vec_t pk { 4,0,58,254,80,148,24,194,171,202,113,124,201,195,163,186,153,98,204,190,21,19,28,218,39,50,134,154,55,145,216,114,218,129,124,229,142,47,42,38,92,76,5,230,13,230,44,194,253,70,240,143,20,27,109,111,92,65,161,193,56,10,145,227,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 339 ") {
    byte_vec_t msg { 15,191,21,205 };
    byte_vec_t sig { 68,175,64,66,130,25,115,225,139,165,151,179,208,129,93,238,150,213,111,181,191,39,102,247,89,190,243,225,232,60,53,148,29,97,81,102,1,201,87,137,242,250,194,145,25,55,150,166,167,224,44,232,168,231,24,20,95,229,150,0,48,15,200,106 };
    byte_vec_t pk { 4,129,38,223,35,183,188,184,214,232,217,239,63,255,174,249,42,193,254,86,209,236,132,123,181,153,177,248,186,55,223,239,115,60,252,145,40,213,5,212,77,79,140,229,152,193,24,23,103,10,163,160,224,190,42,170,236,91,62,176,122,157,151,109,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 340 ") {
    byte_vec_t msg { 141,31,253,87 };
    byte_vec_t sig { 45,76,254,208,59,108,130,224,0,32,56,163,138,77,204,231,183,193,52,178,220,36,166,148,107,12,79,29,87,131,49,56,49,116,51,46,53,198,203,177,66,66,188,195,208,11,158,207,27,210,206,88,252,125,94,64,166,252,203,56,151,175,18,208 };
    byte_vec_t pk { 4,51,131,240,31,51,181,140,138,235,66,217,44,254,148,239,176,249,126,239,127,60,46,227,84,71,58,16,109,4,176,15,213,115,99,212,119,20,29,130,28,106,161,11,156,43,150,66,212,194,107,173,253,78,79,50,202,154,164,183,210,2,204,124,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 340 ") {
    byte_vec_t msg { 160,79,97,222 };
    byte_vec_t sig { 254,67,132,158,163,167,161,181,78,188,128,81,248,115,94,113,162,243,146,247,96,210,248,136,100,207,29,254,15,10,217,63,125,252,161,62,251,118,43,215,224,58,94,254,117,73,16,29,55,1,193,198,195,228,152,19,138,203,169,63,155,58,204,84 };
    byte_vec_t pk { 4,6,143,178,87,98,104,202,49,97,18,109,17,148,63,159,207,82,36,148,107,132,251,140,218,250,45,248,124,163,199,247,122,143,184,197,59,60,96,144,191,45,126,211,101,216,61,114,231,143,97,224,141,246,107,142,236,95,238,239,135,78,183,10,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 341 ") {
    byte_vec_t msg { 96,187,220,133 };
    byte_vec_t sig { 39,244,230,250,59,239,247,177,14,69,34,188,76,10,137,26,70,60,205,11,122,31,148,101,45,197,112,64,165,178,134,164,144,231,229,19,238,64,89,34,83,255,19,78,101,252,38,69,111,121,223,42,192,37,174,198,12,3,161,88,230,49,70,4 };
    byte_vec_t pk { 4,162,168,2,6,82,122,246,181,43,224,38,44,138,141,217,199,6,220,35,29,241,96,245,90,109,112,114,101,119,162,149,113,141,168,1,139,7,94,125,98,10,114,175,91,118,31,134,169,66,110,228,69,183,67,209,41,35,226,86,188,233,43,57,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 341 ") {
    byte_vec_t msg { 220,199,217,124 };
    byte_vec_t sig { 67,68,126,137,245,180,22,132,59,13,118,73,188,90,21,244,108,77,157,48,124,68,34,173,76,49,107,177,196,209,38,205,196,249,184,157,106,195,212,28,57,174,247,166,251,53,145,176,252,99,86,108,217,104,114,48,242,182,214,202,39,4,250,169 };
    byte_vec_t pk { 4,242,26,200,24,11,18,188,117,112,148,18,74,39,213,104,42,131,112,137,194,99,41,240,113,255,228,7,195,229,123,98,223,145,68,111,190,189,50,49,254,33,117,90,111,118,53,51,228,59,138,159,144,33,135,45,164,224,138,140,185,227,86,167,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 342 ") {
    byte_vec_t msg { 214,118,138,233 };
    byte_vec_t sig { 29,198,230,26,240,49,116,121,206,57,42,254,243,27,57,34,8,3,78,206,148,190,101,75,51,242,8,145,154,125,189,80,171,134,146,227,69,199,172,78,60,133,102,223,251,137,34,213,82,195,49,255,87,171,112,88,239,170,166,70,32,206,120,49 };
    byte_vec_t pk { 4,129,202,11,131,149,196,82,252,76,40,95,170,124,100,252,223,172,85,151,90,25,37,8,146,244,9,111,249,223,78,188,228,1,31,117,88,61,9,212,115,65,26,145,250,82,92,49,224,111,166,194,208,247,119,21,40,192,169,116,202,201,227,44,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 342 ") {
    byte_vec_t msg { 192,68,244,4 };
    byte_vec_t sig { 82,42,114,86,223,21,188,40,155,120,188,225,175,57,251,199,187,159,109,141,86,101,247,32,186,121,99,76,15,11,79,102,129,77,141,251,83,225,91,18,18,235,63,134,92,214,24,115,119,213,241,189,128,84,242,107,208,224,12,210,158,103,60,56 };
    byte_vec_t pk { 4,88,86,34,168,233,162,34,104,120,253,11,23,57,131,107,126,53,248,50,95,132,142,77,72,5,240,148,63,149,120,76,251,108,235,24,226,211,94,219,51,199,170,57,87,6,140,73,27,17,142,225,131,99,122,214,93,64,202,51,204,175,188,165,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 343 ") {
    byte_vec_t msg { 180,71,96,155 };
    byte_vec_t sig { 162,200,57,71,93,59,254,126,140,93,75,236,146,30,109,182,38,195,112,9,245,94,131,34,185,231,176,134,183,250,228,33,94,104,210,70,29,105,23,165,49,183,28,181,19,93,33,35,22,34,61,79,183,106,124,33,181,255,179,109,60,187,232,63 };
    byte_vec_t pk { 4,250,248,32,195,6,251,126,131,239,114,175,10,146,87,6,23,154,238,175,218,34,80,205,104,181,205,230,244,247,125,17,24,225,82,125,109,234,99,111,248,137,18,199,255,55,70,162,0,40,81,181,122,6,229,140,16,89,60,60,88,49,54,232,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 343 ") {
    byte_vec_t msg { 64,95,132,164 };
    byte_vec_t sig { 1,66,130,226,47,45,164,48,187,52,74,138,108,27,250,180,44,123,98,243,135,127,5,220,110,181,29,48,157,40,57,93,192,123,202,115,37,32,122,225,218,21,40,114,36,100,179,168,21,57,35,86,74,183,120,100,77,11,94,67,108,45,197,15 };
    byte_vec_t pk { 4,122,145,254,61,5,190,156,217,57,188,56,90,223,16,151,135,233,128,220,131,18,205,19,79,132,137,253,158,85,130,63,242,34,139,80,224,173,4,19,7,76,196,123,148,163,246,12,231,16,107,165,86,174,48,227,211,242,111,94,0,198,144,228,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 344 ") {
    byte_vec_t msg { 211,33,66,124 };
    byte_vec_t sig { 46,91,61,152,241,84,77,209,218,9,68,61,241,222,114,161,230,15,82,164,166,220,114,198,166,190,14,87,35,112,39,210,51,217,23,143,231,102,69,105,213,114,81,180,163,117,14,96,75,207,171,195,56,164,168,212,14,3,133,181,51,253,55,64 };
    byte_vec_t pk { 4,107,199,134,214,103,140,237,149,201,38,73,105,137,143,24,191,55,115,245,85,51,184,233,67,98,36,10,224,230,114,254,137,141,122,48,42,66,204,74,64,27,14,151,16,148,212,26,252,42,75,209,225,178,189,118,172,16,59,1,240,124,75,51,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 344 ") {
    byte_vec_t msg { 181,82,30,129 };
    byte_vec_t sig { 245,174,188,17,14,90,250,121,174,229,69,14,159,187,221,131,118,121,27,106,145,170,90,45,217,179,123,76,85,171,140,87,240,26,113,17,159,80,197,122,53,223,181,157,11,14,212,208,253,208,94,199,219,112,65,143,222,88,220,136,128,222,154,166 };
    byte_vec_t pk { 4,211,233,233,64,111,78,3,143,178,69,236,205,188,215,28,38,65,107,60,72,3,228,7,36,31,51,61,202,27,55,90,201,95,94,41,193,109,59,13,230,0,251,225,54,254,170,29,178,176,76,225,231,108,173,246,136,116,168,162,254,167,133,169,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 345 ") {
    byte_vec_t msg { 211,21,183,192 };
    byte_vec_t sig { 52,190,160,148,32,198,158,109,38,4,38,198,131,206,140,67,68,5,248,148,163,68,61,185,1,125,64,47,26,232,141,63,212,56,6,67,227,77,174,122,123,159,204,87,191,247,244,209,157,82,82,243,66,111,49,202,153,232,157,169,187,58,74,90 };
    byte_vec_t pk { 4,118,103,54,189,24,235,35,214,109,238,253,33,22,73,127,242,55,146,129,39,12,8,58,173,82,90,6,164,105,131,75,64,96,223,205,144,91,60,242,192,41,52,133,81,77,157,139,163,255,109,73,21,70,157,249,196,101,15,241,38,89,136,251,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 345 ") {
    byte_vec_t msg { 171,216,88,246 };
    byte_vec_t sig { 113,195,43,5,119,158,219,13,118,105,114,68,194,29,110,120,170,171,67,25,180,55,165,222,10,128,25,143,96,103,5,235,154,105,195,85,135,147,200,125,128,113,143,221,193,149,226,66,101,96,67,188,94,229,227,111,115,86,213,43,181,226,152,6 };
    byte_vec_t pk { 4,97,211,169,45,193,171,46,155,67,64,184,106,15,195,51,7,190,188,0,93,154,185,209,30,97,15,114,98,24,37,109,208,241,36,164,172,92,195,122,173,13,47,89,35,67,31,223,100,188,213,69,178,164,138,141,255,87,134,20,53,85,232,228,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 346 ") {
    byte_vec_t msg { 115,225,53,145 };
    byte_vec_t sig { 230,98,42,210,100,165,2,33,38,60,222,94,193,84,229,39,221,160,155,120,59,247,233,24,122,1,233,118,45,109,144,83,186,117,253,101,79,11,94,123,139,165,63,227,217,253,80,106,28,98,189,193,59,83,123,218,187,103,112,229,43,223,24,216 };
    byte_vec_t pk { 4,139,32,111,187,247,14,97,142,253,75,203,119,125,32,70,253,45,199,246,117,30,10,0,88,200,57,241,189,97,109,32,85,113,211,192,31,195,31,76,9,52,102,57,0,238,185,134,106,134,169,103,255,190,160,52,76,70,20,172,247,251,33,89,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 346 ") {
    byte_vec_t msg { 86,100,10,83 };
    byte_vec_t sig { 93,175,38,238,62,32,24,92,254,212,240,74,186,49,161,195,25,46,114,133,224,98,125,54,223,6,56,199,192,252,214,59,98,43,41,241,24,97,70,200,35,241,157,174,160,32,136,153,88,83,5,168,157,169,172,117,41,127,128,213,101,70,233,254 };
    byte_vec_t pk { 4,180,185,85,136,166,171,107,175,2,101,99,55,250,199,66,174,55,82,64,116,88,226,28,150,124,154,43,71,95,76,61,88,223,2,82,13,201,210,20,78,33,166,29,202,27,234,255,107,8,102,65,251,100,105,209,35,87,10,17,111,64,111,253,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 347 ") {
    byte_vec_t msg { 12,75,64,219 };
    byte_vec_t sig { 95,222,109,124,124,155,87,40,172,198,153,37,165,44,1,69,190,229,52,221,196,105,16,75,66,5,120,157,41,218,51,219,68,51,150,180,109,80,119,43,253,13,124,205,123,63,199,173,143,238,101,123,179,3,126,147,94,119,244,221,91,51,137,186 };
    byte_vec_t pk { 4,47,12,150,84,34,203,207,46,139,159,178,74,32,142,77,246,99,160,101,6,43,247,113,212,177,69,218,107,62,141,201,70,214,52,90,124,24,65,139,143,236,86,245,235,212,130,38,86,177,130,151,240,80,115,1,24,115,76,74,12,96,206,100,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 347 ") {
    byte_vec_t msg { 168,93,19,247 };
    byte_vec_t sig { 7,164,161,210,228,4,223,34,169,144,23,132,140,86,74,213,199,180,83,71,201,142,104,167,10,82,243,44,223,74,37,76,175,118,158,76,180,207,145,214,192,138,179,52,99,143,216,143,48,36,109,246,156,201,82,223,16,248,67,148,118,147,11,15 };
    byte_vec_t pk { 4,172,65,187,48,227,70,240,6,112,155,232,228,120,102,219,9,204,207,119,231,197,95,50,85,232,128,157,70,4,196,219,147,230,149,21,111,118,228,119,4,187,143,112,90,24,184,171,54,158,180,197,251,240,109,62,209,109,37,110,176,223,169,46,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 348 ") {
    byte_vec_t msg { 131,214,18,128 };
    byte_vec_t sig { 13,234,178,174,23,39,150,181,139,29,192,21,158,170,98,50,254,238,92,71,29,55,49,136,77,31,67,56,229,24,17,196,120,152,170,111,250,30,153,142,227,188,101,138,215,218,18,66,5,251,208,232,94,255,175,193,230,30,109,252,102,250,160,86 };
    byte_vec_t pk { 4,235,164,0,126,156,201,130,171,232,172,146,28,54,7,252,105,198,79,241,120,33,181,23,15,45,81,224,109,28,152,22,76,125,178,6,225,174,74,88,121,67,3,46,252,132,87,210,208,98,49,123,139,45,194,147,33,213,20,141,13,112,239,32,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 348 ") {
    byte_vec_t msg { 185,177,110,49 };
    byte_vec_t sig { 183,95,174,111,169,33,37,56,22,189,228,216,211,143,50,220,114,116,151,191,103,11,100,178,217,217,180,80,134,71,14,239,7,255,255,145,160,180,2,211,221,201,61,178,189,185,77,48,35,205,150,145,192,138,147,201,7,170,74,237,44,9,43,22 };
    byte_vec_t pk { 4,47,216,166,184,45,79,184,200,170,232,166,57,144,1,204,236,135,246,132,153,76,38,43,104,66,53,203,11,53,121,54,19,233,141,18,138,37,170,254,154,23,32,130,6,204,51,51,112,68,109,112,233,67,193,26,3,62,194,145,28,121,248,238,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 349 ") {
    byte_vec_t msg { 39,208,156,15 };
    byte_vec_t sig { 38,128,35,174,153,105,235,88,234,50,36,46,169,24,193,70,100,75,236,23,137,75,237,18,84,227,92,53,236,199,89,140,20,146,238,33,165,238,47,137,212,237,170,29,121,236,137,219,138,22,10,213,179,246,172,94,137,84,112,160,163,102,32,187 };
    byte_vec_t pk { 4,34,9,91,94,44,213,124,208,143,112,110,26,94,69,64,245,255,240,61,19,189,17,181,224,115,92,149,173,243,147,21,23,173,9,125,129,243,27,232,99,10,187,157,47,189,213,196,52,11,4,187,153,124,79,106,68,222,13,245,177,160,84,171,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 349 ") {
    byte_vec_t msg { 195,211,40,70 };
    byte_vec_t sig { 26,237,136,95,1,46,136,134,251,41,213,135,109,120,148,48,240,154,138,105,90,238,194,239,48,224,231,120,54,119,116,145,10,236,69,218,225,96,201,122,37,205,132,175,166,48,154,210,95,201,196,94,117,146,58,129,27,230,147,181,171,114,1,183 };
    byte_vec_t pk { 4,190,190,152,135,113,199,41,30,254,160,37,156,149,251,74,104,37,210,11,35,141,140,112,105,92,123,69,138,125,229,236,255,250,35,69,3,3,99,205,21,212,209,116,226,146,61,248,194,120,233,128,146,185,184,215,18,91,3,118,88,247,110,64,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 350 ") {
    byte_vec_t msg { 112,226,86,39 };
    byte_vec_t sig { 173,14,181,168,166,36,246,101,79,30,139,139,108,162,251,225,80,11,86,244,127,249,117,167,93,167,93,23,111,77,210,117,252,238,186,5,33,180,40,23,65,139,219,216,104,233,123,14,89,178,171,166,229,162,146,172,64,130,181,190,221,54,57,193 };
    byte_vec_t pk { 4,7,133,223,182,224,27,107,247,102,143,31,217,123,165,159,227,77,44,159,99,94,209,43,68,24,0,255,131,247,180,179,165,116,146,128,40,17,94,170,116,41,245,79,35,242,30,140,176,195,143,52,112,116,26,167,76,230,65,177,128,33,173,166,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 350 ") {
    byte_vec_t msg { 170,8,11,159 };
    byte_vec_t sig { 43,194,59,54,60,50,191,50,175,151,205,207,230,64,96,151,209,113,77,137,122,21,127,168,231,36,154,60,72,40,226,166,2,151,103,102,94,182,175,129,210,4,231,180,25,251,7,61,55,207,88,200,13,200,115,64,82,227,184,247,122,244,175,56 };
    byte_vec_t pk { 4,13,198,163,67,75,147,208,221,131,238,73,159,246,178,85,119,223,38,106,24,53,59,81,10,8,49,78,201,110,176,145,252,123,229,83,194,102,227,143,59,122,106,156,25,197,180,179,64,182,206,84,221,110,59,206,187,96,211,212,99,62,15,152,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 351 ") {
    byte_vec_t msg { 242,21,43,89 };
    byte_vec_t sig { 222,228,198,240,15,58,98,44,3,38,133,79,174,108,20,164,171,18,249,223,227,248,137,4,1,235,123,165,251,58,223,203,196,124,89,188,161,254,150,50,137,199,103,164,37,179,210,115,167,158,180,216,65,183,88,90,217,115,43,245,249,237,118,130 };
    byte_vec_t pk { 4,238,23,83,94,19,247,244,78,58,42,128,68,89,254,235,2,66,196,201,254,240,21,107,79,5,79,38,139,161,243,14,198,243,83,236,99,64,223,5,112,246,83,165,243,210,63,102,26,195,215,57,122,39,193,76,192,223,86,104,118,45,122,10,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 351 ") {
    byte_vec_t msg { 139,158,152,120 };
    byte_vec_t sig { 99,37,31,25,134,99,76,6,29,161,37,251,167,220,229,16,51,28,154,63,143,51,157,235,194,201,113,172,107,72,86,176,108,142,34,116,141,255,252,172,196,161,175,164,243,133,108,177,103,158,145,180,146,48,248,188,203,246,145,97,13,59,155,136 };
    byte_vec_t pk { 4,28,239,186,23,62,29,113,246,198,10,152,93,208,204,13,42,131,84,108,212,207,107,244,165,100,135,243,222,9,124,84,198,140,53,194,47,232,250,178,225,198,43,77,130,221,198,145,174,125,178,94,186,74,210,39,63,91,121,43,215,77,241,225,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 352 ") {
    byte_vec_t msg { 81,9,177,173 };
    byte_vec_t sig { 159,227,2,173,113,200,193,203,98,111,225,25,144,134,130,10,240,192,138,199,231,127,204,181,243,8,33,1,244,216,86,223,29,231,244,63,244,39,112,31,157,97,0,24,177,21,83,150,228,127,120,126,74,114,187,176,40,200,54,208,84,195,127,136 };
    byte_vec_t pk { 4,117,227,76,35,29,183,150,248,40,119,28,148,18,61,94,50,152,7,57,49,245,229,92,171,139,209,177,84,103,242,123,75,41,41,138,248,249,208,18,136,16,120,227,243,21,23,63,196,61,152,73,232,83,73,193,252,255,102,24,162,169,9,172,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 352 ") {
    byte_vec_t msg { 1,146,65,244 };
    byte_vec_t sig { 80,197,152,33,194,129,21,164,107,251,32,192,201,87,188,233,223,167,236,73,58,33,121,11,142,153,9,32,181,17,206,200,76,88,186,237,236,0,195,191,72,245,39,43,157,219,219,18,35,167,168,185,12,20,186,96,86,19,171,121,203,148,54,41 };
    byte_vec_t pk { 4,44,143,247,36,181,59,98,119,226,129,161,81,123,76,67,222,134,150,165,209,58,121,232,164,110,183,85,71,42,57,181,168,243,77,84,226,71,51,34,164,102,233,125,234,190,164,145,45,24,200,82,128,116,202,252,193,150,188,249,212,117,46,68,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 353 ") {
    byte_vec_t msg { 130,22,241,139 };
    byte_vec_t sig { 192,131,161,61,23,225,98,25,48,72,47,25,133,99,150,227,47,247,230,141,28,212,144,156,249,37,83,33,171,142,42,221,50,177,237,195,210,36,215,106,97,137,44,159,25,126,86,237,250,63,121,60,184,228,217,46,85,200,230,103,37,217,115,239 };
    byte_vec_t pk { 4,238,22,30,90,205,219,14,65,143,135,192,124,79,65,103,229,42,209,54,81,147,97,205,218,50,3,43,44,205,81,11,7,252,123,226,91,63,199,232,117,17,252,26,56,23,230,44,115,88,143,46,182,196,158,207,60,122,24,204,105,93,4,156,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 353 ") {
    byte_vec_t msg { 21,193,166,29 };
    byte_vec_t sig { 84,192,173,38,77,45,35,57,12,90,27,216,116,37,158,131,155,237,151,63,7,26,17,247,94,200,31,75,157,153,166,173,52,193,16,135,252,60,106,60,147,222,200,92,2,218,237,41,180,179,18,69,73,213,232,109,245,226,0,210,185,59,226,45 };
    byte_vec_t pk { 4,191,79,134,234,187,144,253,207,134,42,0,232,72,97,10,2,172,6,68,81,134,99,239,164,239,113,118,18,30,243,190,253,158,104,108,114,73,248,80,178,239,64,130,248,254,249,29,59,1,38,1,62,124,29,125,229,223,48,120,89,12,254,207,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 354 ") {
    byte_vec_t msg { 93,115,33,32 };
    byte_vec_t sig { 108,125,154,250,74,80,207,58,6,221,216,85,233,209,198,216,164,251,132,191,125,182,202,141,201,220,27,178,173,64,252,213,68,7,199,196,51,38,5,255,18,250,210,61,163,148,31,103,226,99,47,181,204,69,223,243,100,193,38,169,200,125,215,40 };
    byte_vec_t pk { 4,14,201,136,234,202,23,114,120,249,134,92,186,213,61,136,98,112,12,133,208,193,10,48,185,213,245,121,3,98,62,111,128,81,81,116,119,24,99,212,246,138,229,248,190,46,70,251,67,38,232,81,13,140,28,142,135,233,73,176,167,115,19,161,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 354 ") {
    byte_vec_t msg { 120,136,113,41 };
    byte_vec_t sig { 198,3,195,210,205,100,183,46,96,108,231,57,63,177,188,60,84,199,196,48,72,83,249,207,160,60,223,45,203,152,176,133,210,141,214,10,218,136,83,97,137,194,113,50,20,75,128,240,98,15,99,201,173,159,223,4,42,117,181,218,247,102,154,68 };
    byte_vec_t pk { 4,145,30,121,79,196,83,239,123,214,88,181,28,235,93,75,144,174,228,109,202,8,124,57,104,53,173,205,108,226,138,142,163,60,72,179,0,245,118,189,199,100,114,15,87,169,130,205,222,84,236,95,3,246,10,18,75,76,109,72,146,140,90,81,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 355 ") {
    byte_vec_t msg { 25,30,205,105 };
    byte_vec_t sig { 211,211,231,217,66,7,7,74,187,6,135,41,100,91,215,150,153,201,189,9,60,29,194,79,251,148,18,255,228,84,83,50,12,129,120,106,236,94,9,211,134,68,124,246,105,168,62,87,104,185,196,84,232,4,124,107,181,157,217,140,41,245,194,122 };
    byte_vec_t pk { 4,13,236,204,43,158,37,197,241,129,200,21,216,167,53,237,213,227,21,225,135,149,164,45,90,87,21,120,150,204,222,214,130,23,48,250,224,11,52,146,178,124,69,238,12,233,125,160,251,65,53,191,226,216,187,77,168,125,247,54,162,97,62,165,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 355 ") {
    byte_vec_t msg { 195,246,250,130 };
    byte_vec_t sig { 224,93,249,252,24,138,199,230,136,111,122,173,221,255,157,224,252,111,46,219,39,4,205,235,158,7,82,47,122,0,118,111,218,190,29,180,73,183,149,100,94,255,168,29,50,118,151,198,226,253,20,55,80,156,147,3,0,226,15,181,32,95,145,9 };
    byte_vec_t pk { 4,15,22,201,255,127,161,214,255,178,122,42,92,146,82,250,200,215,22,32,84,58,191,200,217,145,225,113,99,26,1,131,226,106,229,111,234,245,13,166,196,16,95,71,62,163,210,108,20,242,212,115,31,127,100,162,239,109,202,36,132,201,38,101,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 356 ") {
    byte_vec_t msg { 32,9,33,4 };
    byte_vec_t sig { 214,51,62,196,115,131,241,232,26,98,171,129,138,119,245,86,85,206,236,148,4,220,124,238,65,6,192,161,74,174,174,215,150,201,240,176,97,105,54,160,171,0,44,118,61,71,241,135,5,65,116,154,89,215,155,79,98,183,254,189,33,223,203,74 };
    byte_vec_t pk { 4,13,102,5,166,101,154,7,198,89,24,119,219,119,191,207,98,112,57,181,206,162,46,211,189,235,27,250,218,215,233,77,244,19,150,70,98,103,85,35,123,253,82,96,105,44,54,79,160,136,223,35,152,127,99,81,238,153,5,110,181,195,20,191,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 356 ") {
    byte_vec_t msg { 52,250,3,10 };
    byte_vec_t sig { 29,67,83,221,223,200,73,226,118,90,133,110,52,253,102,54,83,64,188,24,149,69,58,130,212,243,96,173,205,32,210,76,132,106,1,126,188,173,216,110,242,152,61,119,166,57,180,0,205,220,62,188,142,209,34,2,171,54,223,57,59,113,186,132 };
    byte_vec_t pk { 4,40,247,211,227,61,125,62,148,42,233,60,190,87,94,31,236,17,253,12,64,8,4,62,109,209,251,91,231,245,149,157,27,224,30,98,236,215,59,39,147,201,196,38,166,34,16,163,205,220,132,95,220,166,33,81,128,100,58,147,146,187,232,160,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 357 ") {
    byte_vec_t msg { 118,243,174,78 };
    byte_vec_t sig { 79,83,222,98,38,199,200,27,230,57,1,139,119,196,227,17,232,130,98,205,66,18,152,125,59,160,99,75,173,131,23,60,80,83,248,210,182,127,198,169,29,4,91,57,131,170,78,251,56,12,108,197,107,218,154,46,74,209,93,31,102,162,253,227 };
    byte_vec_t pk { 4,1,5,206,182,163,52,11,249,245,196,92,85,115,16,133,39,196,161,130,174,183,201,180,65,36,255,133,42,40,146,42,113,87,241,97,217,33,243,168,212,190,123,15,40,213,22,231,212,19,59,213,214,25,163,78,4,15,81,198,159,44,91,92,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 357 ") {
    byte_vec_t msg { 78,165,141,51 };
    byte_vec_t sig { 148,77,6,239,66,230,222,50,207,194,151,18,193,19,109,4,43,190,114,57,152,178,82,225,166,55,119,61,209,22,2,97,165,182,189,176,98,161,159,174,232,178,247,86,36,89,24,92,106,120,195,136,148,230,35,46,101,133,137,164,246,241,127,46 };
    byte_vec_t pk { 4,177,105,157,114,0,197,1,29,203,88,250,85,208,245,158,76,106,254,65,247,235,44,55,113,239,161,252,53,65,13,214,28,80,123,176,236,12,214,158,81,195,119,97,231,43,38,161,36,47,136,0,4,36,48,67,108,20,16,53,27,244,233,136,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 358 ") {
    byte_vec_t msg { 1,199,142,105 };
    byte_vec_t sig { 239,61,34,215,122,62,135,224,157,138,94,153,184,148,90,168,206,110,150,47,230,93,251,152,206,133,24,203,112,12,162,253,24,118,140,226,251,134,177,92,241,163,113,143,151,127,78,185,193,132,31,7,57,93,163,7,61,99,41,59,214,6,18,132 };
    byte_vec_t pk { 4,115,150,162,195,75,202,155,171,114,176,83,184,63,158,211,46,40,137,93,209,92,85,117,73,26,248,127,124,51,97,30,108,117,113,60,122,75,6,215,121,248,18,218,111,172,109,220,217,34,143,56,220,203,163,127,222,74,153,155,203,89,177,150,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 358 ") {
    byte_vec_t msg { 130,177,159,218 };
    byte_vec_t sig { 247,50,88,250,153,218,10,140,230,52,136,248,245,188,226,251,61,85,241,26,16,9,74,63,16,20,163,224,57,108,113,156,79,232,15,39,209,93,16,47,176,124,192,190,169,234,143,212,39,244,229,254,65,36,252,235,134,237,17,28,78,211,75,129 };
    byte_vec_t pk { 4,53,193,91,90,204,233,116,241,74,7,234,6,18,186,1,161,120,122,177,115,131,248,211,142,39,103,33,54,52,34,138,226,8,10,37,191,70,173,67,177,180,51,199,153,134,253,187,14,113,149,184,130,45,88,63,1,195,197,196,87,153,49,159,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 359 ") {
    byte_vec_t msg { 41,165,104,242 };
    byte_vec_t sig { 4,15,225,36,177,43,42,101,142,93,8,237,159,36,176,100,102,163,89,98,47,216,161,214,200,190,51,23,100,32,180,78,90,211,63,16,127,95,64,134,92,199,28,24,25,25,239,68,217,158,141,60,215,164,230,155,191,106,19,53,242,143,92,78 };
    byte_vec_t pk { 4,123,211,162,197,244,206,57,247,115,67,134,243,105,29,187,17,125,52,205,225,62,107,98,58,220,213,201,112,145,99,41,111,176,248,25,144,25,155,125,250,1,235,255,79,91,74,252,194,70,73,138,126,85,149,80,85,149,136,150,148,162,186,127,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 359 ") {
    byte_vec_t msg { 85,104,54,95 };
    byte_vec_t sig { 10,159,186,79,89,60,216,191,181,221,146,6,141,113,135,109,164,187,185,186,114,212,187,164,23,111,175,50,48,199,3,105,105,70,69,40,133,61,16,10,41,18,164,59,250,128,128,215,75,224,57,49,80,189,145,92,22,198,139,39,219,157,51,4 };
    byte_vec_t pk { 4,90,46,150,79,189,137,62,216,220,58,212,126,251,243,142,96,223,193,157,76,130,70,40,81,211,219,95,146,79,60,50,11,47,46,119,166,115,65,187,105,131,251,182,193,206,115,81,59,241,176,181,167,103,118,224,47,225,28,26,220,205,173,127,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 360 ") {
    byte_vec_t msg { 55,73,238,196 };
    byte_vec_t sig { 236,53,201,29,189,36,24,54,73,185,248,115,251,164,13,77,78,11,97,144,246,229,204,137,56,186,3,75,163,131,26,215,217,139,236,126,13,54,79,202,130,239,206,221,146,231,24,163,212,120,142,172,152,202,55,194,55,232,65,252,241,75,192,175 };
    byte_vec_t pk { 4,48,249,139,173,85,203,135,224,181,44,217,144,219,160,4,74,244,253,237,226,85,243,231,150,24,87,99,123,238,78,185,35,101,174,233,168,133,50,59,196,215,111,165,100,237,86,55,84,5,142,32,69,24,101,143,200,53,145,135,216,212,111,100,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 360 ") {
    byte_vec_t msg { 170,27,24,188 };
    byte_vec_t sig { 208,118,90,89,59,113,2,252,32,56,231,175,254,169,41,21,231,223,17,225,101,168,206,22,38,142,212,252,96,154,151,245,171,75,235,95,253,200,135,243,100,202,140,204,112,249,100,134,242,13,197,15,211,22,28,185,80,164,91,159,224,216,65,250 };
    byte_vec_t pk { 4,180,176,8,193,246,32,182,65,168,156,160,110,42,139,219,182,37,108,144,154,222,144,217,75,80,226,147,23,60,38,113,213,181,180,10,188,195,248,16,216,191,246,82,207,143,204,11,26,146,234,243,184,178,193,111,117,244,239,177,162,98,131,230,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 361 ") {
    byte_vec_t msg { 155,185,117,79 };
    byte_vec_t sig { 60,122,46,125,74,140,113,195,138,54,128,246,23,20,44,199,67,43,249,181,170,95,204,44,89,218,162,56,88,236,203,178,58,241,141,102,229,91,38,214,125,17,162,54,22,105,150,203,159,235,224,87,106,112,33,68,20,216,151,25,152,96,123,183 };
    byte_vec_t pk { 4,108,255,52,1,248,241,96,101,106,157,46,137,88,139,180,247,112,175,192,160,208,247,96,82,146,125,219,174,18,226,2,27,101,40,62,217,204,12,244,125,186,141,115,108,135,129,178,30,15,121,208,173,218,21,215,181,36,173,124,200,172,137,99,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 361 ") {
    byte_vec_t msg { 160,108,239,251 };
    byte_vec_t sig { 73,109,67,181,177,136,250,75,140,114,36,53,114,219,137,102,194,5,246,144,190,186,110,162,166,194,235,104,0,56,45,1,153,43,184,55,167,110,146,84,218,81,116,176,162,44,37,97,193,29,235,181,186,68,43,125,207,194,125,67,199,216,171,241 };
    byte_vec_t pk { 4,100,94,228,223,77,113,183,78,184,111,192,110,196,122,177,72,181,95,208,31,49,153,56,69,188,45,247,168,76,139,176,4,117,250,54,94,214,13,198,235,167,148,148,129,209,253,193,131,99,183,158,107,107,208,51,210,133,225,66,69,86,161,11,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 362 ") {
    byte_vec_t msg { 203,209,85,153 };
    byte_vec_t sig { 218,201,8,181,171,184,177,38,76,232,118,197,192,249,31,153,162,183,236,172,241,245,219,235,122,160,193,160,202,95,212,144,113,105,193,133,135,32,28,109,179,208,89,219,213,185,84,39,14,228,213,165,123,149,161,232,212,255,209,166,109,60,16,191 };
    byte_vec_t pk { 4,23,204,235,204,32,137,53,44,121,161,203,176,42,241,237,40,97,57,193,132,155,114,184,65,200,193,116,31,106,228,210,175,64,56,250,249,214,106,56,47,183,150,63,79,199,23,211,78,114,178,139,239,121,225,12,120,209,9,87,49,148,187,171,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 362 ") {
    byte_vec_t msg { 19,221,115,127 };
    byte_vec_t sig { 2,215,124,186,9,182,248,168,145,120,230,165,220,126,70,213,218,164,31,120,242,29,76,14,196,233,165,96,73,153,188,85,160,187,58,23,24,221,153,66,188,190,59,183,118,73,244,137,154,141,149,9,233,11,188,217,209,36,96,241,163,56,176,240 };
    byte_vec_t pk { 4,140,198,100,173,150,195,30,84,203,40,171,125,113,126,91,238,255,47,24,214,192,198,36,248,74,39,253,196,63,143,198,162,206,235,197,3,218,238,21,129,113,238,211,178,182,155,200,155,218,209,117,141,169,205,209,202,5,182,192,23,6,233,66,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 363 ") {
    byte_vec_t msg { 188,25,42,21 };
    byte_vec_t sig { 204,218,85,78,100,51,79,62,87,246,49,9,65,36,83,65,166,192,39,14,112,248,232,62,186,217,235,54,125,215,39,254,15,159,46,89,248,54,171,209,104,228,110,249,74,141,3,173,46,174,171,212,209,52,13,169,70,239,65,67,207,141,97,194 };
    byte_vec_t pk { 4,236,14,192,239,123,139,255,134,120,36,202,232,197,253,138,31,152,238,95,76,58,64,121,153,226,25,169,101,42,112,132,242,4,144,6,155,61,120,23,75,122,44,235,101,20,186,2,15,201,83,128,81,97,130,83,86,54,184,239,87,0,143,157,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 363 ") {
    byte_vec_t msg { 58,229,150,157 };
    byte_vec_t sig { 126,37,131,232,102,149,70,192,10,139,75,173,226,57,63,249,105,69,154,20,210,91,82,210,213,131,145,124,195,155,176,215,220,191,86,83,43,171,45,2,158,106,44,58,91,64,194,30,182,136,67,28,103,181,102,156,59,37,240,168,153,198,233,97 };
    byte_vec_t pk { 4,70,27,4,145,72,188,179,209,173,26,77,189,19,163,246,29,228,160,189,150,104,132,44,89,252,123,69,25,16,134,221,122,243,79,88,181,229,6,191,4,75,86,225,107,79,124,220,135,106,40,18,13,135,129,197,0,168,108,39,75,15,31,186,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 364 ") {
    byte_vec_t msg { 102,114,113,198 };
    byte_vec_t sig { 87,161,98,139,49,243,12,42,33,54,100,185,83,164,0,144,242,88,189,175,89,131,43,1,97,4,161,130,167,134,181,19,120,253,74,124,145,204,212,77,155,170,59,113,233,85,170,86,71,0,216,219,10,103,198,124,254,204,84,218,88,48,138,138 };
    byte_vec_t pk { 4,235,22,17,119,50,7,228,47,204,238,84,205,224,119,201,244,35,16,93,117,123,245,57,167,56,17,87,221,22,145,6,229,6,60,22,220,231,178,46,1,248,248,196,127,212,222,113,214,214,140,74,130,135,71,152,61,15,195,184,207,204,220,133,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 364 ") {
    byte_vec_t msg { 229,163,96,60 };
    byte_vec_t sig { 136,33,13,199,134,111,168,142,143,13,24,180,181,10,172,107,250,200,46,3,124,250,149,95,59,252,142,122,105,178,219,95,117,121,62,32,90,212,137,64,2,131,92,162,27,172,239,68,133,228,151,219,252,228,200,130,110,174,81,223,182,66,131,254 };
    byte_vec_t pk { 4,24,108,172,19,74,123,149,187,27,222,21,176,108,148,233,128,208,66,27,249,40,234,135,30,37,7,1,196,2,175,176,42,201,140,46,23,183,51,120,169,41,244,34,194,117,35,0,68,110,88,107,40,31,146,83,155,22,134,185,220,143,108,254,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 365 ") {
    byte_vec_t msg { 73,169,35,9 };
    byte_vec_t sig { 50,172,254,21,13,179,254,230,183,205,107,245,151,32,204,208,38,240,119,45,124,135,239,133,187,100,94,13,68,112,179,36,218,88,131,177,166,66,235,54,81,96,26,231,224,54,191,43,63,162,215,98,66,152,182,189,5,235,168,117,154,24,68,64 };
    byte_vec_t pk { 4,48,143,248,188,210,237,90,117,5,60,169,157,64,49,180,114,192,86,221,9,164,50,80,161,77,136,148,165,196,92,101,152,39,60,1,179,23,77,113,230,146,145,122,76,188,68,235,132,231,71,225,168,198,5,163,204,118,52,217,248,224,180,163,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 365 ") {
    byte_vec_t msg { 75,171,200,76 };
    byte_vec_t sig { 85,50,43,86,184,94,197,42,210,139,178,147,148,250,122,84,30,252,235,24,117,59,134,7,167,113,152,104,159,240,218,188,123,91,87,127,158,159,0,154,69,19,125,202,205,45,78,133,142,37,70,70,195,20,60,21,38,131,170,160,176,199,97,45 };
    byte_vec_t pk { 4,204,160,56,252,36,191,69,59,186,241,76,164,228,85,50,88,30,73,215,150,208,115,250,189,36,230,50,161,128,100,76,68,69,135,128,218,149,132,181,226,84,252,75,241,202,204,23,240,49,120,226,220,102,52,245,237,151,219,136,141,53,173,172,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 366 ") {
    byte_vec_t msg { 109,102,157,146 };
    byte_vec_t sig { 62,121,41,233,210,32,77,59,158,218,41,189,218,68,176,221,212,66,0,142,251,180,249,137,99,189,196,159,68,202,84,71,205,240,52,72,76,83,172,179,155,7,64,186,160,9,49,123,139,166,243,144,114,210,160,236,175,131,57,20,60,54,68,178 };
    byte_vec_t pk { 4,63,97,178,209,233,149,203,133,13,164,76,234,220,15,15,63,126,88,61,154,27,16,237,24,235,167,149,122,82,63,28,46,190,213,85,144,147,220,224,118,49,46,218,61,163,251,171,230,215,68,221,222,134,193,233,209,138,166,31,86,24,52,82,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 366 ") {
    byte_vec_t msg { 236,28,150,150 };
    byte_vec_t sig { 235,227,58,219,158,127,233,147,83,160,41,26,202,24,193,104,124,113,19,201,210,211,175,42,98,98,92,41,251,213,166,152,240,139,255,218,145,20,21,84,82,35,188,66,223,75,176,192,84,27,252,177,61,184,120,215,200,141,151,235,41,40,57,200 };
    byte_vec_t pk { 4,197,37,151,98,160,206,191,239,33,230,39,103,70,244,126,7,166,149,9,243,143,11,185,147,172,180,174,237,132,41,1,64,238,133,237,173,161,209,77,130,34,30,213,125,79,15,229,208,7,203,50,189,64,123,144,185,55,32,233,116,217,38,3,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 367 ") {
    byte_vec_t msg { 147,106,155,195 };
    byte_vec_t sig { 148,90,222,145,178,54,161,159,153,192,245,106,236,209,175,155,56,122,51,209,88,45,134,228,143,232,143,228,51,178,255,68,104,74,67,79,126,36,15,101,175,81,165,83,237,179,76,52,134,131,240,173,72,191,116,125,204,177,205,65,249,123,213,66 };
    byte_vec_t pk { 4,178,154,232,102,140,184,119,81,57,130,62,16,157,162,68,5,56,165,197,155,235,243,108,134,104,158,117,241,86,20,11,203,93,180,60,139,29,101,180,163,245,107,88,44,28,177,86,172,121,34,31,201,40,101,37,67,68,62,9,177,131,132,145,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 367 ") {
    byte_vec_t msg { 249,160,247,26 };
    byte_vec_t sig { 237,182,57,220,177,7,24,123,92,8,14,228,181,52,130,101,18,126,156,78,10,51,98,122,178,163,193,107,22,205,208,147,229,248,177,191,71,231,141,62,72,37,162,44,223,223,249,16,63,205,69,29,36,248,132,216,52,48,45,16,164,14,168,93 };
    byte_vec_t pk { 4,11,122,241,78,104,247,205,189,211,111,40,61,60,0,174,153,135,251,147,156,14,25,67,51,45,50,59,114,184,144,224,133,23,156,234,56,69,63,218,157,173,245,167,38,193,206,142,127,228,165,151,162,99,45,110,36,86,164,223,222,110,46,67,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 368 ") {
    byte_vec_t msg { 184,22,134,8 };
    byte_vec_t sig { 207,146,223,191,40,0,100,250,38,136,11,173,143,94,220,57,248,126,197,134,77,164,164,134,118,28,18,46,178,72,167,29,245,21,28,243,72,42,159,6,124,186,94,213,120,162,129,191,133,109,199,191,31,193,60,107,205,87,87,121,183,163,6,232 };
    byte_vec_t pk { 4,69,39,69,69,159,39,4,71,22,247,82,182,173,232,140,43,78,199,101,125,46,64,55,117,111,86,223,197,26,90,118,12,88,182,92,159,120,17,159,174,0,135,248,76,55,44,47,101,152,12,105,182,29,159,144,4,42,218,225,197,129,47,246,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 368 ") {
    byte_vec_t msg { 109,98,148,184 };
    byte_vec_t sig { 225,109,116,205,34,118,30,109,24,68,210,112,177,18,28,68,172,182,28,185,58,101,12,238,138,97,164,191,84,229,121,116,66,152,20,13,156,255,9,24,80,250,122,171,191,125,35,126,246,253,232,137,65,67,97,121,115,107,128,4,69,74,183,227 };
    byte_vec_t pk { 4,13,1,18,106,208,35,151,82,65,243,90,180,223,238,57,8,159,52,181,248,70,106,141,59,205,26,23,208,117,240,37,93,44,94,73,132,138,64,222,62,38,39,65,123,87,177,109,53,88,156,103,161,179,123,67,57,114,59,217,113,49,24,155,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 369 ") {
    byte_vec_t msg { 129,156,92,72 };
    byte_vec_t sig { 38,246,105,38,89,237,101,170,131,222,189,220,150,89,134,178,114,190,44,9,31,244,190,37,164,14,140,249,235,91,215,98,173,216,172,125,116,80,0,63,186,249,155,20,177,65,222,171,53,25,146,100,14,89,39,160,162,203,208,115,75,188,87,1 };
    byte_vec_t pk { 4,197,111,4,185,226,8,240,185,10,95,139,8,17,35,169,41,122,214,197,245,34,147,79,9,42,48,255,198,198,50,185,189,155,178,75,156,59,228,140,198,145,42,148,6,236,190,113,98,217,171,153,219,156,53,56,87,21,101,157,105,171,6,233,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 369 ") {
    byte_vec_t msg { 79,116,135,138 };
    byte_vec_t sig { 222,120,194,199,167,198,200,192,29,216,143,138,20,93,173,182,223,179,76,31,112,227,130,148,122,80,11,90,25,116,52,1,94,80,86,133,34,154,34,160,17,9,114,101,204,42,243,181,133,83,209,200,64,78,237,46,35,4,204,171,45,44,52,33 };
    byte_vec_t pk { 4,218,10,15,205,89,76,80,116,192,122,20,29,35,14,77,238,54,238,187,39,20,3,0,0,223,26,205,230,101,255,214,231,169,190,217,74,118,198,127,44,21,53,21,185,98,55,119,53,60,77,130,90,14,1,223,245,191,20,34,2,230,138,31,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 370 ") {
    byte_vec_t msg { 64,204,71,106 };
    byte_vec_t sig { 249,109,246,49,219,147,133,79,244,1,163,214,242,28,72,202,137,235,105,150,37,123,156,27,143,185,161,222,17,198,6,95,97,245,59,75,95,31,216,93,101,127,146,50,195,74,206,141,219,191,240,53,82,158,3,115,226,105,18,145,237,0,84,41 };
    byte_vec_t pk { 4,159,254,61,243,80,196,19,129,209,134,29,114,45,0,206,19,48,147,217,114,139,242,234,157,217,1,42,255,70,197,231,197,36,30,83,223,24,213,98,172,57,61,78,162,241,56,20,188,68,2,25,255,67,167,118,251,50,216,110,130,184,212,76,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 370 ") {
    byte_vec_t msg { 172,223,19,131 };
    byte_vec_t sig { 20,211,95,136,196,16,5,92,146,66,237,111,233,221,158,57,224,214,228,47,18,215,91,69,114,122,115,154,145,151,64,19,172,42,77,81,105,12,135,247,104,134,119,48,50,82,207,117,125,241,167,98,102,202,105,102,251,34,81,65,91,219,169,99 };
    byte_vec_t pk { 4,192,135,171,243,97,209,254,51,65,254,9,79,64,253,62,151,113,240,251,52,62,79,203,232,161,70,33,182,42,101,165,38,17,207,114,231,101,193,196,94,188,171,3,114,130,59,142,194,207,77,228,159,44,50,39,63,94,226,3,27,72,5,139,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 371 ") {
    byte_vec_t msg { 84,206,210,202 };
    byte_vec_t sig { 176,109,190,88,151,187,168,234,148,188,48,64,148,18,125,119,120,87,175,141,32,162,61,132,85,122,95,38,34,116,94,113,64,99,247,95,142,35,236,106,230,47,89,160,238,85,138,23,141,182,126,181,246,213,112,225,74,175,106,26,244,179,242,132 };
    byte_vec_t pk { 4,49,219,242,69,11,95,212,31,252,119,161,189,130,55,118,81,101,60,69,2,107,249,170,88,9,200,135,156,62,146,22,252,250,73,51,12,221,230,174,66,113,16,246,177,197,48,195,221,17,126,75,33,246,82,150,172,24,38,110,112,66,27,86,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 371 ") {
    byte_vec_t msg { 128,79,81,60 };
    byte_vec_t sig { 8,193,249,179,54,247,86,50,196,191,103,173,107,46,149,125,156,146,62,186,36,199,80,99,123,199,143,185,41,12,41,126,134,123,24,24,77,209,120,6,42,62,241,208,244,94,162,8,87,249,74,113,112,200,171,248,105,169,81,230,108,97,120,78 };
    byte_vec_t pk { 4,227,110,139,46,230,230,76,51,24,15,88,208,253,176,112,225,128,214,236,54,173,228,12,205,136,180,155,188,240,222,112,250,11,241,214,254,89,235,137,150,34,44,128,29,188,142,248,42,51,178,48,135,7,195,144,72,126,136,105,216,205,99,144,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 372 ") {
    byte_vec_t msg { 252,144,220,232 };
    byte_vec_t sig { 87,240,55,104,235,30,210,73,207,217,234,79,222,247,142,46,138,215,209,3,34,116,14,76,165,108,154,47,98,18,48,224,239,126,67,186,69,118,25,224,75,130,78,158,229,252,241,52,53,110,164,57,163,164,100,218,157,105,131,111,226,130,52,64 };
    byte_vec_t pk { 4,66,118,21,186,190,229,75,124,209,59,60,100,199,140,12,152,53,200,221,230,205,59,66,226,251,228,215,127,177,52,254,5,50,231,28,169,127,1,53,191,213,52,20,237,180,87,177,231,52,47,69,6,14,128,237,60,87,83,107,126,245,173,159,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 372 ") {
    byte_vec_t msg { 176,18,72,138 };
    byte_vec_t sig { 235,4,168,117,18,91,40,156,60,117,55,205,208,161,55,88,87,210,230,252,221,142,189,121,121,81,10,41,125,32,138,81,51,204,107,228,213,105,39,135,205,87,126,197,211,221,250,6,155,152,91,21,167,199,125,221,180,28,38,86,225,220,66,107 };
    byte_vec_t pk { 4,4,7,213,111,57,194,121,60,183,242,17,118,84,193,10,78,158,111,143,42,136,115,245,170,137,149,197,30,207,205,204,148,59,93,164,64,26,224,212,67,129,156,63,4,53,214,242,8,151,207,220,101,126,178,91,165,39,62,27,16,236,151,165,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 373 ") {
    byte_vec_t msg { 124,89,213,48 };
    byte_vec_t sig { 14,173,143,202,140,60,201,112,155,219,214,212,74,195,8,50,175,236,26,201,198,114,112,93,141,171,68,186,206,168,165,88,127,53,31,70,121,12,184,249,134,204,201,169,163,252,194,104,49,195,75,100,203,242,225,203,195,190,170,66,176,145,99,170 };
    byte_vec_t pk { 4,109,175,239,202,13,27,209,241,93,4,240,166,195,56,183,18,180,74,234,45,129,36,3,170,170,125,137,12,157,137,250,75,32,190,221,139,254,249,156,34,109,229,152,57,227,117,31,64,185,140,126,75,48,97,158,205,60,182,204,117,140,240,81,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 373 ") {
    byte_vec_t msg { 35,193,30,143 };
    byte_vec_t sig { 154,164,67,238,248,148,177,241,155,93,209,150,62,181,121,239,201,98,234,244,122,197,204,30,86,179,69,64,111,12,7,2,206,150,204,137,191,166,78,64,248,188,158,113,121,206,179,4,77,121,191,18,210,200,215,164,83,248,131,87,57,62,171,198 };
    byte_vec_t pk { 4,26,196,33,147,62,48,176,15,84,108,77,191,174,167,29,208,95,236,149,120,131,13,170,221,122,55,61,69,23,141,108,210,193,251,147,75,224,15,67,6,202,62,40,46,13,81,98,146,63,190,214,18,100,36,159,111,246,164,219,130,189,56,193,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 374 ") {
    byte_vec_t msg { 106,103,226,239 };
    byte_vec_t sig { 29,149,44,93,123,215,51,218,248,176,201,99,168,137,185,187,144,74,206,28,102,184,41,14,249,61,220,138,134,192,199,66,76,218,229,234,166,144,70,22,254,245,115,67,179,28,184,2,40,81,180,88,91,48,140,170,156,181,238,164,188,43,72,179 };
    byte_vec_t pk { 4,85,190,87,226,82,205,145,35,178,148,49,71,54,173,137,74,102,254,156,148,5,212,142,197,237,125,223,88,27,18,188,3,211,137,95,2,79,161,69,223,32,117,161,13,226,243,16,223,60,171,164,231,90,184,90,15,23,118,93,161,75,232,16,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 374 ") {
    byte_vec_t msg { 105,83,13,39 };
    byte_vec_t sig { 235,209,72,183,85,77,141,115,90,3,209,146,106,138,83,22,206,167,195,197,141,158,195,231,197,135,53,137,66,187,2,200,211,205,212,142,7,124,5,147,109,170,171,226,140,52,245,228,190,30,155,235,236,196,227,203,92,90,88,227,229,220,165,7 };
    byte_vec_t pk { 4,37,62,200,69,150,128,225,247,177,92,21,169,139,217,49,210,140,10,0,47,151,106,177,79,146,244,150,99,107,9,20,128,240,122,10,3,225,76,31,118,79,230,168,68,203,4,211,80,247,144,112,94,62,192,100,22,107,196,114,241,64,162,96,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 375 ") {
    byte_vec_t msg { 243,20,84,147 };
    byte_vec_t sig { 178,145,179,126,221,128,153,13,200,96,231,247,212,192,18,22,172,45,62,42,195,240,42,129,47,161,226,118,231,2,252,148,12,207,26,206,215,2,21,203,71,228,137,176,248,171,17,47,53,36,65,199,93,77,10,119,49,198,115,210,144,72,193,164 };
    byte_vec_t pk { 4,107,175,17,157,193,64,189,243,163,200,124,93,139,242,25,235,142,230,242,93,175,234,228,102,93,80,25,61,116,206,234,211,7,161,29,127,153,119,88,80,171,133,76,209,39,163,76,242,180,75,31,241,14,30,195,68,7,10,238,67,78,194,157,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 375 ") {
    byte_vec_t msg { 28,110,184,87 };
    byte_vec_t sig { 232,13,247,106,235,117,185,150,64,197,43,245,93,51,201,5,87,205,239,168,125,170,142,139,116,237,208,176,124,31,51,17,36,67,100,241,169,161,145,96,193,53,37,123,210,192,233,106,69,25,163,145,24,205,133,157,150,17,187,56,55,170,179,116 };
    byte_vec_t pk { 4,9,246,25,76,197,45,27,29,170,251,17,67,151,207,22,195,76,196,172,251,198,25,5,141,118,67,228,241,83,218,184,253,160,81,30,222,32,97,128,40,71,129,187,17,243,4,199,167,6,214,182,23,231,166,92,73,122,152,111,157,194,101,250,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 376 ") {
    byte_vec_t msg { 199,107,182,181 };
    byte_vec_t sig { 42,96,93,19,90,66,25,220,61,215,169,202,191,44,65,157,93,22,151,190,164,56,127,191,232,82,146,26,145,44,43,236,183,127,145,228,84,25,228,134,108,9,22,192,63,219,21,83,193,54,232,92,219,195,206,194,20,175,35,164,104,203,70,178 };
    byte_vec_t pk { 4,16,102,44,5,133,251,157,152,170,80,201,20,1,198,100,177,35,51,23,217,5,157,183,171,70,154,73,29,76,94,117,130,143,30,249,156,144,25,169,79,146,134,189,229,67,227,241,241,29,28,238,128,145,115,161,58,218,252,164,195,144,216,138,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 376 ") {
    byte_vec_t msg { 10,176,176,140 };
    byte_vec_t sig { 60,235,58,248,49,143,149,126,180,61,144,54,84,13,242,73,241,227,51,198,72,189,55,85,105,66,220,58,196,115,121,56,239,139,153,96,217,91,84,77,211,166,157,93,96,67,82,227,215,211,231,250,241,186,72,255,36,181,126,90,98,231,54,11 };
    byte_vec_t pk { 4,220,78,123,33,54,155,120,97,191,189,135,168,167,102,205,239,87,7,251,187,39,185,146,183,228,229,186,254,17,173,128,14,126,246,28,86,222,27,72,145,246,234,171,18,117,117,247,221,213,97,166,91,4,150,153,61,38,220,124,143,152,214,251,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 377 ") {
    byte_vec_t msg { 111,5,53,62 };
    byte_vec_t sig { 244,16,62,143,146,104,2,189,139,78,86,208,78,59,98,71,25,40,234,177,212,31,216,232,80,105,24,35,11,37,173,90,40,45,103,209,225,128,181,73,90,231,191,90,246,160,42,148,69,106,141,230,55,99,145,198,1,37,177,201,32,72,3,209 };
    byte_vec_t pk { 4,138,106,46,97,213,185,51,136,95,223,232,84,70,4,206,110,111,165,150,173,112,168,34,184,238,255,136,14,21,229,244,35,210,213,206,56,171,97,17,51,99,238,207,3,117,142,60,123,184,30,16,198,110,217,159,57,248,84,171,80,53,143,200,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 377 ") {
    byte_vec_t msg { 108,26,104,153 };
    byte_vec_t sig { 146,80,235,146,184,122,176,109,253,133,161,51,55,237,122,126,61,247,109,122,82,226,188,115,110,136,175,156,250,110,205,167,24,98,102,165,157,165,244,158,137,160,142,126,188,82,240,130,215,188,86,56,188,247,209,132,115,73,190,102,120,217,64,131 };
    byte_vec_t pk { 4,173,78,134,249,172,34,116,102,29,181,38,221,145,248,228,64,42,166,102,187,27,136,201,250,234,167,194,202,43,23,220,20,81,246,210,158,142,116,24,240,151,176,10,111,207,115,198,17,43,218,127,45,44,253,218,11,236,152,217,30,36,241,35,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 378 ") {
    byte_vec_t msg { 4,116,52,69 };
    byte_vec_t sig { 183,60,132,154,147,97,64,61,193,61,216,51,51,63,160,154,141,161,166,11,91,92,168,15,11,130,143,96,205,149,180,185,178,197,0,199,221,226,253,161,109,158,219,245,5,215,45,120,167,249,185,73,160,222,232,164,75,232,129,164,30,104,104,33 };
    byte_vec_t pk { 4,211,30,205,100,172,187,12,163,29,133,35,200,139,201,14,190,217,101,71,59,83,204,121,57,71,18,233,249,235,251,209,252,242,209,245,214,96,94,56,182,213,234,33,154,79,21,174,3,81,171,100,70,16,99,251,57,46,221,19,98,21,11,216,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 378 ") {
    byte_vec_t msg { 208,3,47,223 };
    byte_vec_t sig { 129,91,82,173,165,197,84,19,158,0,151,246,170,183,34,8,90,66,155,75,150,112,36,97,2,193,81,96,96,139,225,240,240,47,20,91,128,235,212,177,41,52,230,75,0,117,76,10,18,180,56,93,192,91,85,221,182,114,37,131,169,118,56,159 };
    byte_vec_t pk { 4,70,67,195,6,16,131,201,122,72,231,104,17,205,156,137,185,67,71,198,159,63,67,119,36,129,126,195,188,227,181,143,52,222,212,221,15,29,153,41,38,211,98,208,190,252,252,244,192,107,153,188,24,17,202,35,196,112,248,29,134,113,230,93,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 379 ") {
    byte_vec_t msg { 8,171,103,106 };
    byte_vec_t sig { 28,63,168,131,82,73,129,96,158,64,12,217,167,28,113,70,100,178,211,193,236,187,203,35,216,88,164,201,58,89,237,84,208,81,102,5,47,235,106,220,34,101,166,249,198,27,58,107,39,20,154,167,92,156,138,51,229,228,95,157,230,26,8,0 };
    byte_vec_t pk { 4,15,73,253,130,169,47,155,236,171,67,45,108,144,144,39,71,113,127,57,174,118,214,56,203,38,31,65,170,149,255,85,42,240,95,208,48,174,19,174,142,250,175,61,150,126,236,144,195,177,145,72,58,78,144,26,110,12,113,66,128,44,89,73,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 379 ") {
    byte_vec_t msg { 109,221,207,46 };
    byte_vec_t sig { 216,144,141,12,143,247,165,239,138,189,28,73,139,17,216,219,209,122,14,182,204,161,84,191,31,221,67,153,5,210,45,89,25,51,226,126,213,137,7,133,43,214,213,187,184,16,144,231,197,132,145,171,30,153,227,14,132,0,250,191,81,205,65,74 };
    byte_vec_t pk { 4,161,53,129,199,161,30,141,192,15,67,118,180,23,157,45,211,146,202,38,199,224,140,7,54,11,168,92,186,160,107,186,219,213,177,192,205,86,84,225,83,78,207,159,179,118,233,242,5,31,132,143,16,24,214,181,103,245,249,123,198,215,169,242,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 380 ") {
    byte_vec_t msg { 204,73,7,11 };
    byte_vec_t sig { 171,42,14,207,154,179,154,78,113,126,202,25,178,79,210,62,186,80,123,171,41,28,242,218,138,14,180,45,195,179,87,73,191,40,77,182,109,158,179,50,193,144,241,136,237,230,29,76,112,9,209,145,119,145,16,189,174,19,228,177,34,83,3,184 };
    byte_vec_t pk { 4,23,4,92,15,42,181,75,25,28,98,224,99,209,90,165,199,108,89,39,57,39,91,141,131,169,101,24,30,251,89,7,145,147,33,165,98,17,191,122,76,232,82,226,73,70,217,212,228,0,248,8,255,16,194,146,52,213,122,199,235,60,235,131,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 380 ") {
    byte_vec_t msg { 218,152,123,72 };
    byte_vec_t sig { 53,159,47,105,5,123,193,23,195,108,33,183,249,21,127,4,137,179,47,60,21,164,132,207,106,225,94,212,111,53,187,28,182,185,197,187,53,151,94,57,139,94,43,201,138,246,194,223,169,210,28,247,138,247,43,95,180,242,110,184,18,204,75,245 };
    byte_vec_t pk { 4,242,188,48,242,98,99,100,105,175,72,161,92,98,227,42,205,235,2,178,29,183,58,226,178,188,221,98,7,153,97,57,95,235,62,27,246,215,184,23,100,29,1,200,34,68,185,137,217,228,113,200,180,27,221,235,11,203,214,174,75,215,167,76,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 381 ") {
    byte_vec_t msg { 52,213,142,185 };
    byte_vec_t sig { 210,96,145,146,77,252,90,149,127,186,221,156,86,176,145,174,195,223,255,0,223,8,251,221,91,63,79,60,46,94,20,33,114,164,41,223,45,95,84,76,170,202,163,43,213,253,8,196,248,55,181,52,57,14,88,129,121,213,5,23,143,27,41,217 };
    byte_vec_t pk { 4,223,232,216,194,101,176,231,31,39,186,220,222,217,80,69,139,61,141,15,126,25,151,25,242,26,81,109,223,220,15,68,15,46,137,240,69,197,194,48,123,151,11,87,247,132,56,250,238,154,190,246,15,151,140,51,232,101,241,131,86,81,82,98,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 381 ") {
    byte_vec_t msg { 252,204,76,70 };
    byte_vec_t sig { 226,132,167,219,180,19,77,79,46,234,106,39,237,18,22,253,154,56,53,205,235,225,15,4,81,50,23,174,147,63,104,33,45,61,86,28,253,236,123,203,12,219,212,201,47,220,226,12,19,73,43,125,35,114,235,15,11,169,100,49,105,32,168,48 };
    byte_vec_t pk { 4,3,229,250,194,80,60,249,95,91,133,175,184,129,81,187,210,8,173,244,10,252,178,50,196,236,38,30,241,39,211,66,85,141,20,162,22,217,218,30,218,153,168,248,28,20,179,129,221,191,39,147,193,31,112,49,154,40,158,21,117,98,122,108,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 382 ") {
    byte_vec_t msg { 163,141,242,14 };
    byte_vec_t sig { 109,157,21,247,31,100,205,229,193,175,222,40,20,145,200,148,88,5,54,186,247,145,66,60,35,217,28,52,68,226,63,74,2,81,150,237,193,171,248,31,198,155,101,235,199,32,212,185,129,209,71,158,167,220,102,30,36,36,194,107,82,100,146,89 };
    byte_vec_t pk { 4,70,252,90,253,242,174,35,95,164,220,108,8,86,3,76,2,128,255,110,138,183,132,8,186,31,83,25,147,200,216,156,104,189,124,151,214,64,253,74,188,14,199,13,8,28,22,5,180,234,128,97,170,125,31,228,191,226,42,200,175,207,68,220,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 382 ") {
    byte_vec_t msg { 145,153,226,147 };
    byte_vec_t sig { 179,40,244,106,39,221,132,47,45,124,252,56,74,104,252,28,217,155,8,181,75,129,20,3,178,107,6,235,226,225,52,171,72,139,139,220,170,250,248,135,66,240,143,200,44,235,115,232,248,34,81,150,197,65,161,166,123,107,83,221,155,125,33,64 };
    byte_vec_t pk { 4,82,61,52,200,228,9,1,33,31,83,92,123,14,167,195,15,105,17,234,232,149,88,126,234,238,46,189,164,113,183,238,25,158,179,231,117,250,131,215,185,162,95,229,86,193,159,229,70,77,112,110,64,208,229,91,29,230,5,206,80,232,245,16,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 383 ") {
    byte_vec_t msg { 40,243,163,161 };
    byte_vec_t sig { 7,191,202,5,213,133,79,166,171,134,233,138,24,85,72,165,50,83,240,186,68,37,62,101,87,92,36,34,28,40,244,191,82,82,195,130,58,70,71,119,227,94,10,70,181,77,196,179,86,6,170,82,11,253,227,66,21,235,203,128,79,140,40,198 };
    byte_vec_t pk { 4,34,164,157,185,15,135,64,170,218,12,40,93,116,168,113,210,246,150,90,17,202,189,230,1,143,7,42,166,66,177,73,110,137,227,175,121,177,62,12,32,244,222,118,56,253,6,222,107,134,99,131,75,86,227,199,135,67,128,30,170,10,85,52,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 383 ") {
    byte_vec_t msg { 243,236,160,14 };
    byte_vec_t sig { 134,109,120,132,155,184,147,190,251,55,196,188,249,75,8,242,31,166,172,12,29,37,54,30,190,187,41,216,241,186,95,67,219,112,37,58,209,99,7,184,127,152,146,192,244,108,131,135,78,66,177,224,182,203,38,242,207,189,226,218,60,228,184,165 };
    byte_vec_t pk { 4,94,218,139,35,103,130,194,150,16,2,70,86,93,219,236,87,139,252,114,200,237,59,179,26,114,190,131,233,66,36,243,140,49,164,218,226,149,109,5,177,2,95,180,193,107,251,59,229,101,13,51,125,154,212,95,44,111,219,252,132,135,161,204,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 384 ") {
    byte_vec_t msg { 237,168,245,106 };
    byte_vec_t sig { 254,68,156,211,252,132,224,71,254,58,244,222,17,151,19,254,23,65,143,18,213,22,186,93,34,137,239,215,211,45,206,142,160,1,136,164,246,240,244,137,108,77,116,180,198,242,187,13,79,228,22,168,66,118,120,157,152,186,231,147,6,63,33,223 };
    byte_vec_t pk { 4,247,58,161,14,253,192,254,218,177,195,183,46,246,237,96,253,219,183,182,86,236,139,111,217,46,204,138,201,51,110,180,216,188,177,124,0,153,9,100,115,99,0,18,118,134,131,175,95,120,158,227,45,205,58,229,165,28,58,82,131,130,236,250,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 384 ") {
    byte_vec_t msg { 127,115,171,102 };
    byte_vec_t sig { 182,50,10,128,33,149,29,71,229,161,182,201,23,103,82,178,238,193,41,6,64,123,92,220,205,211,21,141,111,169,136,24,184,21,49,198,236,132,204,230,92,179,178,173,49,95,154,65,199,42,91,182,123,47,156,0,104,48,220,30,203,156,110,195 };
    byte_vec_t pk { 4,153,125,65,93,137,196,145,137,93,65,255,93,162,246,118,196,105,123,200,210,12,70,73,235,53,179,181,230,144,69,139,15,222,48,29,225,241,141,240,110,236,244,191,21,107,195,148,103,26,163,145,201,218,135,172,67,148,73,186,45,203,243,228,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 385 ") {
    byte_vec_t msg { 130,230,235,40 };
    byte_vec_t sig { 36,230,13,240,70,157,228,166,39,27,0,52,10,234,121,36,53,66,107,200,136,63,32,159,175,150,157,164,96,218,144,226,7,78,104,254,37,112,245,126,214,18,48,248,140,202,177,219,136,225,112,152,30,43,172,154,186,177,45,106,73,24,225,151 };
    byte_vec_t pk { 4,146,100,154,30,16,186,100,70,107,28,126,168,102,220,150,53,26,240,32,187,245,63,100,80,36,249,212,40,91,143,39,5,86,84,6,130,13,101,139,166,90,183,147,32,223,226,75,2,39,239,239,60,29,225,147,206,219,27,172,113,218,236,98,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 385 ") {
    byte_vec_t msg { 77,230,27,111 };
    byte_vec_t sig { 69,204,221,77,113,22,155,179,249,88,189,212,141,252,164,67,213,172,7,230,155,78,1,152,254,117,182,65,123,67,56,4,139,141,103,50,69,175,233,254,32,24,63,123,218,108,254,188,143,230,87,217,122,79,20,142,89,38,252,235,63,231,161,161 };
    byte_vec_t pk { 4,48,253,156,124,179,79,84,188,160,74,53,187,139,80,30,14,58,88,82,25,164,83,121,162,205,160,188,248,9,229,111,223,243,159,195,142,230,229,90,121,205,82,245,176,105,227,116,119,208,122,106,145,30,26,90,254,202,126,41,177,153,170,228,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 386 ") {
    byte_vec_t msg { 77,218,166,173 };
    byte_vec_t sig { 211,71,188,143,165,102,158,170,38,236,159,176,147,215,203,160,248,39,80,119,29,247,165,252,210,137,102,10,143,236,119,216,209,82,77,163,70,193,115,197,253,22,147,47,63,55,4,201,153,12,156,213,180,11,108,142,242,206,94,115,202,87,142,114 };
    byte_vec_t pk { 4,18,51,74,30,51,75,16,192,217,54,251,219,213,207,150,244,105,171,115,100,155,167,83,96,119,187,27,160,198,129,137,86,22,64,26,134,3,71,181,51,22,214,117,131,113,43,58,250,85,80,23,231,228,136,249,68,166,28,215,156,106,198,132,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 386 ") {
    byte_vec_t msg { 188,246,13,165 };
    byte_vec_t sig { 65,149,47,124,121,137,145,48,79,178,99,28,143,231,27,235,62,198,79,117,234,40,73,181,36,202,100,85,93,51,58,151,134,48,77,123,75,254,17,145,212,195,241,38,195,145,148,65,138,123,152,115,252,169,254,150,28,225,107,140,71,200,161,107 };
    byte_vec_t pk { 4,203,15,9,229,56,100,146,246,111,130,186,233,44,232,27,15,147,237,170,7,84,104,129,108,59,171,216,21,227,242,27,172,15,161,79,185,167,200,29,81,184,13,70,65,202,125,251,181,60,54,181,182,30,13,131,223,71,82,124,227,102,43,204,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 387 ") {
    byte_vec_t msg { 4,110,155,168 };
    byte_vec_t sig { 78,215,188,11,239,84,198,243,34,50,194,25,249,180,63,147,1,75,213,246,43,69,67,188,153,9,196,244,133,129,181,27,40,234,110,242,118,119,14,224,18,173,84,152,73,128,223,5,203,188,255,86,45,50,15,215,160,180,182,182,11,43,247,207 };
    byte_vec_t pk { 4,179,233,46,139,68,26,55,42,204,70,237,90,201,63,142,41,244,50,200,108,180,242,96,231,224,78,162,135,219,81,72,89,10,27,193,102,59,224,254,132,150,165,16,54,120,38,157,212,98,226,182,64,220,220,131,36,206,107,49,244,253,212,245,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 387 ") {
    byte_vec_t msg { 190,101,103,71 };
    byte_vec_t sig { 62,214,47,53,25,143,189,83,47,99,110,26,210,105,157,216,76,162,175,198,6,221,231,61,144,186,147,122,174,167,35,160,115,176,102,102,77,138,220,179,113,175,67,228,183,61,58,182,235,90,51,172,105,154,121,142,182,227,249,216,188,79,242,26 };
    byte_vec_t pk { 4,95,27,183,76,228,154,151,58,38,79,183,41,124,178,145,170,48,22,154,139,120,14,214,1,178,105,212,165,173,225,123,144,34,180,186,237,136,18,12,10,55,56,181,85,143,201,24,160,163,59,143,46,121,23,184,106,95,229,201,210,109,116,60,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 388 ") {
    byte_vec_t msg { 176,103,63,187 };
    byte_vec_t sig { 96,124,19,126,21,53,221,67,121,161,245,180,224,226,233,48,49,99,198,222,178,120,54,195,207,183,28,201,60,213,215,98,27,249,206,125,165,141,142,41,19,36,185,150,133,87,242,33,222,5,157,195,119,182,189,21,2,244,115,171,62,170,220,18 };
    byte_vec_t pk { 4,112,106,252,193,34,130,170,204,137,179,228,157,33,114,28,112,241,86,253,249,204,199,180,202,59,196,83,210,106,173,55,32,135,54,122,211,208,64,125,176,17,56,103,90,138,4,146,85,89,13,208,177,92,87,40,251,24,250,28,115,34,17,121,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 388 ") {
    byte_vec_t msg { 32,75,55,208 };
    byte_vec_t sig { 136,170,89,187,210,177,242,236,190,111,252,228,73,178,158,14,108,26,253,77,102,164,68,182,162,17,33,59,147,163,194,6,63,233,24,253,219,186,69,155,141,176,232,95,74,221,241,210,51,228,117,15,62,165,176,166,28,170,182,122,161,9,141,129 };
    byte_vec_t pk { 4,171,108,52,65,9,204,113,173,136,166,238,185,128,226,231,202,13,255,133,154,208,208,7,132,71,41,7,198,114,233,143,147,172,176,76,84,102,199,170,53,124,38,135,198,114,62,25,221,179,160,63,15,243,112,201,212,249,128,226,60,245,100,194,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 389 ") {
    byte_vec_t msg { 129,219,86,87 };
    byte_vec_t sig { 149,72,255,246,216,249,153,141,114,46,192,80,55,73,181,184,23,2,135,48,58,245,121,5,181,214,49,83,41,44,59,112,74,153,142,112,156,159,86,24,111,71,220,156,207,218,174,188,182,131,118,36,215,205,164,167,79,81,14,175,97,66,251,108 };
    byte_vec_t pk { 4,217,225,28,7,97,143,77,134,202,10,24,107,8,216,99,18,144,152,128,25,17,58,228,24,168,141,140,156,37,161,230,166,237,52,173,241,23,150,60,128,184,32,3,197,231,190,233,221,83,115,233,244,17,174,177,183,1,136,216,53,241,154,39,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 389 ") {
    byte_vec_t msg { 51,233,251,207 };
    byte_vec_t sig { 165,211,135,181,124,73,2,80,77,159,125,20,243,22,179,178,87,47,32,101,78,144,238,230,151,130,65,120,38,106,12,3,88,159,129,177,97,55,35,236,236,25,170,78,32,89,202,224,168,220,228,122,226,179,49,41,21,63,223,22,121,123,51,227 };
    byte_vec_t pk { 4,96,135,51,247,54,44,145,184,153,7,246,133,235,130,139,10,183,198,172,77,171,28,81,152,37,31,62,220,114,39,22,96,41,47,228,211,155,126,65,189,33,181,44,98,166,144,4,199,165,26,169,13,139,68,14,46,85,97,7,118,192,231,35,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 390 ") {
    byte_vec_t msg { 171,108,16,170 };
    byte_vec_t sig { 155,137,108,51,29,59,95,73,1,110,6,212,140,1,92,200,214,244,59,40,189,198,126,9,106,231,247,27,112,107,127,201,147,78,93,71,48,214,68,200,118,75,11,99,217,170,227,70,124,246,182,251,26,119,251,197,189,52,252,193,63,34,40,31 };
    byte_vec_t pk { 4,188,168,156,53,202,97,168,67,239,135,232,79,44,234,15,74,177,63,10,104,145,190,140,78,119,18,79,147,20,233,8,231,80,158,208,18,7,225,245,156,236,226,77,73,68,134,70,73,154,89,221,245,146,73,137,76,119,158,209,217,167,86,187,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 390 ") {
    byte_vec_t msg { 148,21,209,98 };
    byte_vec_t sig { 192,79,188,123,169,196,102,19,108,93,227,190,187,229,76,90,40,230,115,45,119,21,22,181,203,215,138,244,71,195,101,54,190,107,62,86,166,2,116,75,223,33,250,246,174,13,131,111,104,222,70,94,117,77,36,243,167,54,117,92,186,5,200,74 };
    byte_vec_t pk { 4,66,254,241,223,215,207,48,63,161,17,213,38,109,78,151,163,163,127,86,18,189,44,102,115,186,67,67,235,135,88,26,117,246,237,222,177,46,220,235,47,212,231,98,182,141,170,54,128,225,67,226,185,10,97,26,1,239,184,167,133,231,92,192,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 391 ") {
    byte_vec_t msg { 254,247,189,188 };
    byte_vec_t sig { 184,223,29,52,219,239,250,139,247,75,156,214,81,52,149,79,182,73,72,34,206,179,10,58,47,210,143,68,213,82,75,30,74,88,163,157,236,157,185,166,124,61,21,183,251,50,106,105,229,19,180,175,140,202,0,196,155,89,205,169,144,209,121,191 };
    byte_vec_t pk { 4,209,111,122,219,102,52,219,93,72,250,221,101,219,11,98,67,244,114,55,143,53,175,201,137,67,216,22,183,97,4,221,96,33,197,42,62,174,19,77,74,103,154,230,32,149,135,83,210,44,164,82,160,106,79,234,139,109,59,206,73,83,88,180,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 391 ") {
    byte_vec_t msg { 93,128,107,81 };
    byte_vec_t sig { 247,109,113,218,65,237,213,101,20,121,171,40,47,88,113,191,126,5,101,21,243,106,179,93,138,40,180,167,115,141,8,59,154,146,137,89,193,200,120,190,109,111,105,252,2,238,145,146,215,122,253,36,152,47,114,43,203,86,128,253,18,232,31,40 };
    byte_vec_t pk { 4,2,99,65,160,232,171,96,68,172,66,0,215,199,67,215,244,126,198,74,110,35,212,109,21,41,90,117,31,178,156,142,94,35,211,33,108,66,217,142,222,137,87,151,29,248,205,241,145,26,50,251,131,124,188,136,136,15,208,220,213,4,231,87,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 392 ") {
    byte_vec_t msg { 140,126,118,158 };
    byte_vec_t sig { 77,238,57,52,169,205,191,15,160,102,192,44,66,163,150,202,186,99,223,43,23,213,147,140,206,157,174,184,12,172,234,50,144,25,153,218,210,77,182,208,86,24,50,36,21,19,197,46,210,204,9,70,190,222,162,15,197,130,225,26,180,1,28,158 };
    byte_vec_t pk { 4,58,101,202,76,62,187,9,73,158,248,188,227,141,146,85,236,56,145,193,15,64,3,227,159,145,225,52,49,52,253,153,43,151,157,83,207,79,198,176,10,47,67,64,222,125,144,180,194,6,31,112,247,23,203,20,59,135,90,112,101,173,111,217,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 392 ") {
    byte_vec_t msg { 205,139,113,196 };
    byte_vec_t sig { 19,16,169,64,15,185,25,90,84,167,177,185,4,248,141,128,155,121,38,117,48,177,59,65,210,158,84,93,236,47,84,170,119,10,205,198,174,166,31,181,59,216,255,194,112,246,188,46,80,24,136,232,23,159,30,157,182,116,237,180,96,131,243,235 };
    byte_vec_t pk { 4,171,85,166,246,7,32,84,249,127,66,230,171,28,134,173,110,47,200,211,175,147,88,209,131,201,222,34,104,192,159,130,87,1,119,62,54,233,235,107,6,254,152,234,86,235,7,138,109,133,5,202,46,192,210,13,129,15,57,198,4,216,105,15,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 393 ") {
    byte_vec_t msg { 46,178,87,124 };
    byte_vec_t sig { 37,184,195,182,125,53,76,110,193,39,12,54,121,166,27,40,189,162,191,29,226,190,160,138,212,152,168,165,123,135,44,129,110,135,123,241,228,248,55,124,209,77,255,230,2,117,52,227,168,222,167,175,210,57,154,218,235,237,108,166,159,55,8,1 };
    byte_vec_t pk { 4,20,1,143,168,65,18,240,65,80,108,85,39,113,8,126,2,18,50,207,221,62,178,39,71,243,169,201,161,197,132,202,231,7,113,247,14,132,99,220,61,98,97,185,111,55,176,129,52,100,72,173,89,52,159,14,131,83,47,33,137,73,20,121,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 393 ") {
    byte_vec_t msg { 201,141,164,197 };
    byte_vec_t sig { 118,77,35,117,11,120,56,239,62,77,34,183,236,66,154,42,200,7,142,231,229,43,77,152,203,160,197,129,22,47,143,79,184,85,132,96,164,108,67,28,242,96,134,38,111,15,191,130,4,69,99,94,91,45,173,30,151,25,9,47,177,177,224,103 };
    byte_vec_t pk { 4,134,88,140,50,108,124,14,90,32,8,224,76,18,97,228,216,214,180,234,215,201,81,60,91,218,175,165,89,171,173,250,105,168,96,197,221,36,83,120,103,59,234,17,18,199,13,178,165,24,204,25,11,139,49,213,14,95,101,203,68,159,69,190,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 394 ") {
    byte_vec_t msg { 241,204,246,203 };
    byte_vec_t sig { 229,82,112,244,238,232,166,171,113,162,67,233,73,181,129,247,149,131,225,241,177,20,116,71,146,150,180,200,103,7,76,8,74,46,190,73,12,192,44,59,94,19,157,255,46,59,249,68,23,27,30,40,61,221,57,233,3,40,130,118,138,35,69,143 };
    byte_vec_t pk { 4,195,154,198,99,74,198,197,224,15,185,183,86,228,0,44,247,112,43,114,67,69,189,201,149,98,67,76,107,207,158,44,252,182,247,145,184,241,196,111,37,28,108,155,129,9,104,158,245,87,0,140,146,169,24,25,139,59,194,247,241,80,11,195,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 394 ") {
    byte_vec_t msg { 164,135,252,206 };
    byte_vec_t sig { 233,121,53,247,120,153,160,159,16,194,193,230,147,26,143,244,35,103,21,79,71,145,157,200,101,242,231,241,63,89,205,232,146,46,210,60,140,94,110,129,208,96,206,244,79,48,41,93,156,215,124,245,89,247,167,62,41,57,34,192,70,215,39,100 };
    byte_vec_t pk { 4,129,91,158,94,156,23,67,179,187,249,80,191,228,157,106,29,24,14,38,69,96,24,132,115,135,132,178,56,221,37,196,176,143,46,13,35,149,33,205,185,67,114,35,88,73,172,161,166,106,229,4,97,149,59,168,182,188,123,205,25,157,246,229,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 395 ") {
    byte_vec_t msg { 42,230,44,36 };
    byte_vec_t sig { 226,212,15,137,110,234,220,118,111,89,80,230,68,211,169,155,49,246,17,30,126,99,252,155,147,36,205,185,250,230,250,37,146,80,144,210,161,185,140,59,8,143,204,242,227,222,143,250,16,115,124,243,167,163,210,16,160,146,62,94,33,103,223,22 };
    byte_vec_t pk { 4,61,156,0,164,28,255,186,156,244,9,111,27,248,48,244,188,70,72,234,182,81,37,24,55,244,44,36,142,58,20,205,134,189,79,143,241,185,66,25,186,55,181,118,190,111,172,110,58,6,100,193,19,121,222,245,76,246,9,77,158,174,251,233,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 395 ") {
    byte_vec_t msg { 57,254,47,207 };
    byte_vec_t sig { 62,218,28,187,104,128,4,181,226,141,221,132,224,35,125,44,9,180,112,9,30,152,239,46,97,118,58,17,255,16,124,25,23,43,89,248,81,162,33,77,155,36,25,104,160,91,174,211,177,77,255,67,34,16,167,51,142,6,223,65,152,156,199,59 };
    byte_vec_t pk { 4,115,97,44,49,238,176,26,96,60,213,36,127,211,172,187,44,97,147,104,247,89,99,50,33,249,20,8,218,210,222,199,184,147,142,57,140,145,184,95,14,23,166,59,3,36,61,123,185,89,43,175,35,53,69,233,181,221,198,235,3,79,168,195,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 396 ") {
    byte_vec_t msg { 16,73,118,5 };
    byte_vec_t sig { 39,25,253,1,25,75,72,25,63,140,179,245,228,182,206,219,142,194,255,117,21,236,226,72,151,134,123,237,86,84,235,51,9,40,190,5,75,167,161,197,70,177,246,158,27,216,26,68,202,119,107,200,216,113,119,26,230,16,126,215,122,254,105,58 };
    byte_vec_t pk { 4,48,117,85,133,71,160,122,249,20,120,41,200,128,113,181,248,29,129,227,140,10,106,111,84,152,146,178,8,175,235,57,152,109,152,210,22,47,250,59,154,232,97,226,192,247,242,222,143,193,78,82,201,18,153,134,248,107,104,222,220,34,199,124,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 396 ") {
    byte_vec_t msg { 193,85,130,234 };
    byte_vec_t sig { 125,34,250,95,253,45,110,65,172,11,25,205,238,220,112,56,129,232,23,1,85,181,94,112,135,227,78,0,74,81,203,145,144,119,123,84,159,249,125,60,29,149,72,1,208,34,230,139,40,181,175,96,97,183,106,107,15,73,119,126,74,189,212,200 };
    byte_vec_t pk { 4,139,118,146,163,20,214,194,41,29,151,60,25,63,245,173,5,164,50,93,103,55,235,52,197,1,75,111,50,129,187,192,200,80,215,184,51,131,9,96,10,221,161,19,108,94,14,169,158,167,57,163,217,145,113,223,228,176,11,71,141,161,108,98,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 397 ") {
    byte_vec_t msg { 86,197,27,138 };
    byte_vec_t sig { 215,177,88,253,199,76,234,203,146,111,235,220,14,203,143,177,30,226,75,53,97,128,219,115,55,71,59,170,220,118,93,117,178,16,175,218,171,16,190,111,141,191,210,83,122,215,159,13,45,232,135,183,239,159,97,148,85,136,39,71,234,113,147,110 };
    byte_vec_t pk { 4,4,71,219,236,59,9,215,74,122,167,187,153,31,7,247,27,239,193,123,58,15,241,163,224,116,216,47,71,196,134,129,145,85,54,216,213,236,25,13,63,168,17,27,144,55,168,161,192,251,233,179,61,240,195,39,40,8,129,72,199,41,118,220,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 397 ") {
    byte_vec_t msg { 146,76,239,164 };
    byte_vec_t sig { 234,203,91,144,1,112,152,171,240,103,95,126,247,7,139,42,163,165,112,160,198,0,172,98,150,199,88,62,164,187,120,59,232,31,27,44,109,181,39,128,221,45,164,228,147,23,38,100,122,59,17,194,117,161,248,20,70,241,126,227,151,103,76,131 };
    byte_vec_t pk { 4,116,31,83,79,194,98,49,94,80,146,226,123,82,111,192,182,113,202,222,135,225,214,220,239,231,220,76,164,15,251,81,94,147,125,53,119,155,84,137,202,208,172,63,190,196,1,115,103,131,8,208,51,60,79,86,6,230,32,85,26,221,153,180,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 398 ") {
    byte_vec_t msg { 118,242,183,68 };
    byte_vec_t sig { 67,58,42,225,121,36,192,163,178,237,132,245,21,248,172,88,43,65,137,64,69,230,69,22,235,109,247,48,248,106,180,29,158,186,58,5,67,211,11,33,127,133,72,124,152,140,20,87,212,48,43,16,65,248,120,130,8,161,94,36,177,207,39,189 };
    byte_vec_t pk { 4,95,147,159,254,111,198,187,222,88,229,156,229,48,188,68,94,95,80,207,2,64,199,201,36,66,243,234,70,40,174,16,93,111,187,20,9,119,254,188,3,162,213,142,218,111,11,9,52,163,242,231,176,5,73,88,20,154,246,102,188,141,225,11,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 398 ") {
    byte_vec_t msg { 205,236,65,252 };
    byte_vec_t sig { 19,230,100,97,165,142,181,23,223,43,129,206,153,205,204,198,104,68,61,115,125,33,142,212,214,94,229,148,234,239,254,7,95,31,127,15,67,27,3,231,140,114,12,68,81,42,185,123,62,203,218,169,217,70,106,101,99,157,171,158,159,231,97,154 };
    byte_vec_t pk { 4,125,81,81,4,250,98,68,57,144,233,60,136,243,21,175,135,57,80,4,232,3,81,154,228,193,234,57,228,193,54,79,214,157,88,40,220,48,31,111,213,109,173,77,225,182,67,18,199,80,96,42,92,44,127,156,157,199,37,208,154,204,98,44,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 399 ") {
    byte_vec_t msg { 45,200,241,221 };
    byte_vec_t sig { 155,120,77,241,14,174,92,240,61,64,110,143,210,138,53,235,60,203,90,242,78,70,191,18,190,4,151,64,103,149,78,26,98,85,71,49,154,101,42,83,238,98,140,61,80,176,30,129,33,16,166,215,123,172,72,77,133,248,92,144,141,181,111,116 };
    byte_vec_t pk { 4,39,188,69,18,252,5,240,52,114,226,170,134,204,52,136,62,104,79,194,151,72,157,117,7,111,41,173,232,151,7,253,90,170,171,0,18,27,108,208,131,171,8,165,187,93,53,89,88,9,156,131,97,33,30,46,198,119,221,20,198,175,204,220,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 399 ") {
    byte_vec_t msg { 160,50,241,177 };
    byte_vec_t sig { 177,167,28,71,105,255,253,12,19,62,115,52,175,225,41,250,16,179,184,155,239,239,125,10,161,197,224,77,49,137,147,208,169,194,96,184,9,14,155,145,6,120,229,60,124,94,222,77,74,3,36,102,193,146,85,19,134,192,217,133,154,27,184,99 };
    byte_vec_t pk { 4,1,76,20,162,253,244,3,129,254,255,57,16,164,70,109,164,144,131,243,99,146,64,200,115,3,163,255,177,151,10,230,103,160,169,180,18,88,42,163,2,192,148,216,194,246,200,253,146,47,8,225,195,61,93,174,6,22,217,103,0,14,52,234,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 400 ") {
    byte_vec_t msg { 233,136,219,102 };
    byte_vec_t sig { 122,232,224,131,135,152,58,102,52,19,70,53,171,100,112,47,236,23,160,242,224,134,146,132,38,84,38,0,218,124,37,215,231,135,244,255,221,237,143,16,42,214,52,10,119,108,69,15,180,80,97,143,57,132,0,34,39,224,174,90,140,125,101,70 };
    byte_vec_t pk { 4,110,234,185,239,132,194,224,65,118,241,136,212,83,9,236,85,214,29,34,215,139,28,203,94,202,48,202,0,229,73,140,144,204,121,47,189,201,162,172,197,251,100,47,12,127,214,109,87,79,2,34,123,229,45,176,84,47,252,101,223,232,107,170,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 400 ") {
    byte_vec_t msg { 19,250,187,81 };
    byte_vec_t sig { 167,203,190,7,176,132,210,12,201,164,63,134,98,30,100,67,197,6,25,68,183,78,149,71,18,23,164,85,137,58,250,231,137,175,84,82,73,49,141,75,222,153,37,20,184,96,128,156,33,159,14,34,157,138,58,128,38,233,238,118,198,52,127,28 };
    byte_vec_t pk { 4,120,156,206,64,51,145,167,113,213,24,164,180,142,255,25,115,220,185,146,6,181,169,213,42,221,74,226,45,176,112,207,39,190,201,53,248,200,241,147,187,132,89,46,188,53,189,217,159,63,25,205,199,92,94,77,34,174,137,64,83,58,120,0,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 401 ") {
    byte_vec_t msg { 77,38,41,151 };
    byte_vec_t sig { 75,70,20,163,198,75,238,87,213,73,46,79,30,99,7,206,249,247,118,71,181,194,208,30,119,162,45,57,19,84,217,98,44,154,20,100,100,25,204,26,139,203,25,79,244,241,142,167,197,106,183,202,11,150,206,48,137,40,223,204,119,202,235,154 };
    byte_vec_t pk { 4,1,144,80,114,74,201,63,91,183,181,242,235,46,42,47,19,53,54,225,221,255,72,8,193,47,130,75,10,15,40,242,186,120,85,160,110,93,13,184,37,43,24,126,51,117,176,131,154,38,74,21,180,16,151,12,243,109,136,107,21,249,255,196,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 401 ") {
    byte_vec_t msg { 26,83,176,4 };
    byte_vec_t sig { 64,12,201,152,69,171,13,53,21,159,219,51,152,165,124,127,113,210,197,166,64,173,101,116,28,55,48,7,105,192,3,220,126,203,159,79,123,105,142,30,213,24,16,83,120,83,178,162,199,94,173,255,179,189,33,143,136,43,186,46,72,174,26,232 };
    byte_vec_t pk { 4,68,91,236,128,168,15,66,194,212,221,1,91,68,167,41,97,201,124,41,139,249,135,181,228,98,85,77,172,205,62,204,40,97,89,48,47,223,234,69,62,8,141,223,29,177,165,252,115,105,72,12,211,13,176,207,75,217,194,103,147,29,212,219,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 402 ") {
    byte_vec_t msg { 1,186,155,84 };
    byte_vec_t sig { 232,74,155,245,67,164,214,78,158,20,66,41,42,124,130,198,255,35,27,168,122,107,209,30,219,218,163,167,243,249,202,174,210,246,193,43,180,96,89,76,47,19,127,12,50,136,134,218,40,81,220,230,121,148,143,235,102,1,243,195,54,53,179,207 };
    byte_vec_t pk { 4,132,89,40,28,136,55,50,29,15,2,149,49,162,199,118,194,253,26,144,169,201,36,73,147,30,64,11,120,53,226,27,91,101,159,92,123,129,126,130,175,10,247,199,52,215,197,151,142,78,140,37,147,70,37,101,5,172,177,233,66,7,250,229,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 402 ") {
    byte_vec_t msg { 85,69,66,219 };
    byte_vec_t sig { 110,235,47,11,65,205,217,112,247,73,112,127,103,243,79,241,145,80,106,231,204,170,113,0,119,168,1,71,182,234,42,91,138,187,210,57,199,89,172,170,8,98,255,199,200,240,146,214,28,124,68,149,150,62,170,242,215,239,99,86,93,29,7,98 };
    byte_vec_t pk { 4,29,170,116,247,140,23,71,130,217,91,63,157,8,151,177,76,227,50,170,220,5,99,235,241,50,6,182,242,24,35,24,165,18,83,75,177,63,6,118,93,119,105,206,220,219,196,116,163,74,27,193,54,95,178,163,174,98,231,52,98,109,0,221,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 403 ") {
    byte_vec_t msg { 245,247,63,69 };
    byte_vec_t sig { 27,215,173,70,171,19,172,233,123,72,94,16,137,210,216,85,185,148,195,178,197,96,51,178,143,105,140,152,240,233,247,251,119,89,190,221,36,193,220,34,181,109,16,233,110,178,121,68,181,137,50,61,223,2,16,198,69,190,107,24,6,103,245,202 };
    byte_vec_t pk { 4,168,7,45,109,194,148,216,204,103,134,227,100,81,64,110,40,199,173,46,27,147,100,67,143,162,186,208,43,17,168,150,201,109,243,82,46,202,74,117,231,51,7,122,80,145,97,90,1,73,38,244,168,231,156,12,153,154,101,67,57,77,115,130,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 403 ") {
    byte_vec_t msg { 156,110,6,214 };
    byte_vec_t sig { 231,76,151,64,144,28,203,177,177,215,33,30,88,85,255,195,35,157,27,200,241,94,73,93,79,52,206,15,140,183,23,251,56,181,239,247,30,127,247,87,22,27,180,105,224,70,138,185,58,103,114,86,94,31,73,222,192,163,187,237,18,162,247,157 };
    byte_vec_t pk { 4,190,82,223,120,205,248,245,179,170,90,106,124,20,131,189,221,81,216,41,58,168,3,234,209,37,123,71,37,219,253,197,193,157,143,62,254,112,120,183,26,67,14,220,173,53,99,240,115,203,28,69,99,19,20,112,169,193,175,192,83,210,19,161,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 404 ") {
    byte_vec_t msg { 31,189,122,54 };
    byte_vec_t sig { 85,105,200,48,206,217,240,208,42,127,247,93,125,53,125,224,49,136,226,184,177,185,209,77,163,137,175,168,230,88,231,109,223,59,78,115,233,222,141,142,234,14,107,163,39,60,124,169,24,221,171,91,188,136,249,6,20,248,224,114,254,208,62,13 };
    byte_vec_t pk { 4,85,244,144,3,77,32,184,47,103,169,216,119,6,150,74,79,241,34,53,65,229,197,167,197,218,214,63,137,110,245,136,149,81,110,186,17,154,67,208,120,58,242,83,140,13,210,189,90,42,207,195,162,223,100,145,114,211,116,4,113,101,66,100,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 404 ") {
    byte_vec_t msg { 179,67,173,145 };
    byte_vec_t sig { 119,232,225,120,54,4,106,8,92,242,154,83,223,33,216,134,168,46,14,46,52,59,101,210,237,175,44,67,90,80,200,12,202,154,213,239,129,143,73,167,10,88,173,162,115,72,138,199,114,187,131,161,69,142,187,180,14,8,231,167,135,15,122,137 };
    byte_vec_t pk { 4,245,147,159,218,226,29,26,199,157,95,191,102,173,30,20,86,94,69,245,49,200,68,13,242,90,179,221,243,170,135,64,243,170,190,102,167,129,198,239,214,3,246,35,218,203,9,34,102,163,121,215,25,161,17,166,199,64,29,178,250,113,255,106,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 405 ") {
    byte_vec_t msg { 239,201,102,155 };
    byte_vec_t sig { 4,98,123,19,6,105,99,14,162,201,109,71,129,136,70,248,91,93,23,174,135,105,206,146,77,244,180,178,132,140,27,127,50,36,138,120,67,81,186,160,41,208,93,140,176,161,126,3,140,196,187,38,138,145,148,135,115,20,4,5,204,240,160,148 };
    byte_vec_t pk { 4,133,225,118,74,47,246,87,12,39,90,217,128,229,205,225,219,102,188,123,89,211,29,195,48,173,36,15,108,136,159,136,105,133,94,19,150,12,110,12,242,88,212,219,118,139,253,251,137,159,190,153,56,35,244,246,125,251,29,105,141,75,45,44,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 405 ") {
    byte_vec_t msg { 0,21,17,154 };
    byte_vec_t sig { 189,227,56,60,175,18,221,50,105,176,224,33,100,77,111,138,62,100,228,58,238,4,112,86,148,159,63,151,6,143,207,65,243,224,175,223,147,149,252,2,215,124,250,179,174,253,62,62,4,75,68,147,150,241,26,39,14,88,124,71,164,111,90,115 };
    byte_vec_t pk { 4,49,183,39,74,38,157,118,31,157,2,96,102,200,236,230,32,18,242,66,254,119,194,41,132,2,211,52,86,198,196,107,73,157,220,225,167,122,246,176,0,51,52,55,69,52,3,115,164,29,76,55,241,70,235,232,111,88,169,169,201,127,166,12,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 406 ") {
    byte_vec_t msg { 72,69,193,231 };
    byte_vec_t sig { 142,41,232,19,2,41,177,160,105,185,160,64,130,100,183,149,165,35,29,174,60,103,18,156,83,106,54,94,119,62,127,251,35,127,227,56,77,128,195,234,184,94,240,123,27,199,112,90,127,30,27,15,167,19,144,243,176,67,246,195,120,188,156,116 };
    byte_vec_t pk { 4,123,145,37,98,1,139,178,74,180,191,115,103,28,159,73,186,187,247,222,203,182,107,127,123,54,61,153,199,224,230,203,13,238,70,10,153,108,255,167,99,39,71,186,4,63,220,39,43,236,168,184,61,122,88,233,25,237,2,190,61,214,51,53,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 406 ") {
    byte_vec_t msg { 63,118,172,124 };
    byte_vec_t sig { 161,236,137,225,65,241,65,34,34,201,177,168,143,194,134,166,191,89,64,68,246,91,208,181,188,106,35,101,255,208,153,108,106,238,240,4,95,230,238,47,134,254,96,96,176,26,109,15,14,243,219,122,190,130,217,184,240,94,20,12,30,192,240,74 };
    byte_vec_t pk { 4,92,255,153,97,8,39,166,31,71,50,227,213,45,169,82,151,218,239,176,137,7,18,93,21,93,252,167,77,212,79,30,72,177,103,42,241,125,176,201,88,206,188,194,126,182,113,127,32,126,98,61,103,0,191,190,136,158,232,87,109,202,17,140,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 407 ") {
    byte_vec_t msg { 246,158,104,116 };
    byte_vec_t sig { 137,251,252,79,72,109,47,79,158,58,94,3,192,111,120,73,124,149,26,98,203,89,96,10,216,68,160,31,164,226,212,29,168,197,108,81,122,174,65,29,149,204,131,142,16,6,61,254,54,51,127,6,201,154,68,11,93,50,82,12,236,111,139,46 };
    byte_vec_t pk { 4,237,118,177,6,166,13,250,163,168,20,11,187,64,91,139,21,191,128,2,162,26,141,165,152,204,125,115,158,94,105,203,66,115,207,151,207,1,238,68,132,233,22,46,179,245,43,123,220,134,119,202,215,2,142,4,225,129,120,27,95,108,236,156,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 407 ") {
    byte_vec_t msg { 246,1,156,254 };
    byte_vec_t sig { 56,172,163,67,198,84,41,49,33,196,23,149,253,99,183,194,91,51,103,122,167,102,156,164,86,149,193,248,237,126,100,62,20,197,224,131,241,129,16,30,157,174,205,155,124,61,95,24,53,178,197,222,39,148,231,163,4,108,229,145,67,69,130,102 };
    byte_vec_t pk { 4,149,33,248,134,23,140,113,10,241,12,59,198,36,107,226,219,41,171,8,48,53,87,75,159,179,1,169,193,31,99,168,161,49,74,33,228,72,212,63,31,141,154,141,116,111,125,54,61,104,103,196,189,5,134,21,220,2,74,123,212,228,167,183,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 408 ") {
    byte_vec_t msg { 129,54,31,73 };
    byte_vec_t sig { 82,180,76,220,78,74,232,129,255,68,42,232,39,62,208,229,1,102,115,203,85,109,175,130,125,246,175,2,68,230,135,234,192,29,49,250,191,159,159,215,78,195,181,164,108,73,226,194,55,142,21,91,236,20,21,126,213,197,183,75,6,168,187,129 };
    byte_vec_t pk { 4,227,235,42,3,210,247,82,70,50,116,214,127,185,249,141,213,87,2,236,244,180,201,23,100,116,141,48,142,64,253,92,32,239,169,231,116,155,245,74,230,10,186,167,113,245,183,182,205,201,240,138,66,238,1,146,53,72,173,143,42,152,79,22,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 408 ") {
    byte_vec_t msg { 10,232,87,94 };
    byte_vec_t sig { 129,90,206,230,136,93,29,40,158,48,18,224,215,145,197,124,44,14,80,154,26,175,61,139,236,59,0,111,105,113,229,139,231,14,152,203,119,31,181,197,184,19,68,18,221,1,249,173,131,130,3,55,60,187,80,123,65,175,99,50,66,114,75,21 };
    byte_vec_t pk { 4,216,75,167,246,130,187,244,160,165,213,222,49,237,95,31,240,20,9,124,194,102,18,50,95,255,94,206,98,157,78,179,21,15,48,252,248,19,105,61,113,223,112,118,154,52,125,225,92,48,164,217,5,139,184,139,155,246,21,50,179,27,212,41,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 409 ") {
    byte_vec_t msg { 70,210,121,231 };
    byte_vec_t sig { 83,170,52,245,169,172,112,58,85,81,249,147,66,240,120,18,227,3,30,30,0,6,179,104,220,164,111,24,217,128,30,50,32,36,76,230,166,250,211,56,89,109,227,70,53,185,160,5,149,164,45,21,135,252,75,255,95,34,254,181,90,243,99,121 };
    byte_vec_t pk { 4,57,220,160,175,222,189,6,50,49,203,150,191,125,47,147,144,50,84,173,184,63,111,103,18,45,180,66,210,175,206,178,186,64,182,192,82,254,36,16,4,239,219,50,182,247,58,253,93,73,64,172,192,254,115,74,221,67,39,92,77,0,123,162,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 409 ") {
    byte_vec_t msg { 200,9,28,118 };
    byte_vec_t sig { 240,56,179,66,186,122,163,221,27,140,64,86,149,15,13,98,182,200,199,195,51,241,212,200,152,63,215,140,221,143,150,112,233,118,252,92,195,50,13,145,236,130,0,33,132,80,22,203,206,44,246,175,36,72,159,110,230,104,124,8,108,250,176,176 };
    byte_vec_t pk { 4,179,154,243,215,88,7,190,2,211,123,246,207,177,79,6,24,17,51,168,79,15,221,31,165,185,33,26,146,225,234,21,233,177,109,220,110,52,173,208,151,13,161,240,246,149,45,169,57,255,232,207,3,145,159,85,42,37,60,157,10,85,58,86,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 410 ") {
    byte_vec_t msg { 100,174,198,221 };
    byte_vec_t sig { 95,236,89,132,134,118,220,5,190,220,189,42,141,57,185,156,152,17,237,236,16,209,117,202,19,97,176,187,175,37,116,192,78,91,14,90,179,236,132,115,76,24,46,33,64,154,229,19,11,115,44,95,172,86,2,189,109,36,32,116,127,83,118,203 };
    byte_vec_t pk { 4,184,132,21,124,5,156,192,226,84,131,196,57,148,170,193,231,28,230,160,8,145,219,93,42,229,44,117,97,116,193,193,222,210,136,77,134,84,204,83,78,109,52,134,124,254,30,148,155,151,156,34,196,83,160,244,214,230,239,230,213,204,191,107,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 410 ") {
    byte_vec_t msg { 113,165,98,37 };
    byte_vec_t sig { 81,5,174,37,121,31,60,13,211,34,89,154,86,90,85,2,163,202,248,137,228,240,64,184,10,248,111,149,135,89,236,237,178,138,156,133,161,74,159,126,31,206,70,174,157,203,244,184,210,159,57,47,34,166,12,172,255,52,209,100,233,78,48,145 };
    byte_vec_t pk { 4,18,21,243,119,151,62,181,161,207,23,88,109,13,67,95,241,100,87,31,220,164,121,171,127,156,216,99,215,5,137,108,167,61,102,161,56,234,142,70,241,26,114,3,28,126,129,157,233,18,230,8,192,148,21,36,92,70,207,192,55,17,98,188,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 411 ") {
    byte_vec_t msg { 208,194,94,65 };
    byte_vec_t sig { 156,53,176,252,104,203,130,137,218,214,242,12,163,60,168,48,104,84,14,170,155,196,181,106,37,27,11,236,20,186,107,48,217,156,99,236,103,157,243,110,102,169,80,70,208,247,2,238,114,149,133,168,33,115,36,29,179,230,163,177,178,197,114,41 };
    byte_vec_t pk { 4,230,87,106,35,42,241,47,50,110,85,50,54,163,3,243,142,125,166,5,2,124,80,232,165,231,50,174,20,182,55,215,218,221,163,134,75,66,79,205,128,220,82,206,59,168,241,191,179,40,142,57,235,83,63,71,143,85,77,227,42,75,99,74,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 411 ") {
    byte_vec_t msg { 238,45,193,235 };
    byte_vec_t sig { 114,75,32,240,2,125,7,161,86,8,51,249,240,153,91,133,15,238,165,12,84,183,57,137,62,12,35,173,183,143,229,196,184,235,231,222,18,77,33,90,178,222,135,109,146,124,191,144,241,176,142,34,233,158,145,212,196,213,91,224,30,222,48,17 };
    byte_vec_t pk { 4,253,32,179,238,134,136,139,196,52,77,61,62,111,0,196,144,37,219,177,208,127,123,194,236,216,140,53,242,65,219,41,250,47,238,75,177,222,92,134,6,148,162,229,253,9,156,238,64,146,87,229,73,25,148,16,17,44,62,92,186,20,149,26,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 412 ") {
    byte_vec_t msg { 234,181,82,248 };
    byte_vec_t sig { 156,49,235,23,90,212,180,240,216,208,109,200,82,127,247,198,25,117,143,219,210,68,204,239,12,165,46,8,98,86,68,171,203,130,20,233,217,81,175,163,227,8,128,60,109,30,4,180,190,211,80,92,173,154,42,200,18,136,163,125,207,113,130,122 };
    byte_vec_t pk { 4,246,135,34,20,239,232,127,2,147,136,185,168,172,215,37,250,216,202,177,242,240,3,47,217,29,220,42,226,161,31,10,91,115,8,175,143,46,64,150,124,143,94,66,24,46,220,179,103,155,66,39,253,214,136,177,206,61,78,90,85,134,15,40,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 412 ") {
    byte_vec_t msg { 171,100,204,106 };
    byte_vec_t sig { 77,129,208,105,86,118,223,38,136,55,137,211,245,225,129,159,101,221,120,219,86,1,41,127,239,200,149,23,117,80,174,240,225,115,217,59,208,11,233,138,104,140,207,218,67,104,135,153,63,226,140,40,79,246,221,48,76,130,224,207,228,230,121,180 };
    byte_vec_t pk { 4,146,141,235,144,22,237,207,214,141,189,93,247,207,192,51,198,113,249,174,76,31,150,214,139,47,152,231,98,216,145,175,122,129,10,137,126,207,67,15,11,123,108,35,44,242,229,209,72,122,118,9,195,223,201,223,36,203,27,237,153,219,239,35,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 413 ") {
    byte_vec_t msg { 249,254,166,208 };
    byte_vec_t sig { 61,88,88,239,159,64,254,159,195,225,90,160,131,4,172,23,219,202,102,111,225,103,26,139,85,192,26,69,160,71,22,11,195,153,72,120,40,116,105,132,139,196,5,222,134,198,71,207,189,77,218,196,93,228,37,80,154,224,196,3,240,29,49,94 };
    byte_vec_t pk { 4,170,138,172,10,23,213,131,128,64,66,202,68,128,223,56,89,104,216,192,9,113,121,82,113,134,130,93,179,193,214,67,177,19,63,224,215,229,163,113,137,159,21,253,103,55,57,155,241,21,253,208,81,41,111,249,70,143,60,210,45,166,36,144,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 413 ") {
    byte_vec_t msg { 72,4,1,167 };
    byte_vec_t sig { 208,150,240,219,244,159,125,244,107,59,53,93,216,224,147,231,179,59,249,1,11,120,45,47,89,109,197,196,128,34,160,206,194,162,122,129,172,116,199,11,215,209,236,141,3,143,191,137,188,209,253,56,235,156,120,174,106,191,183,197,229,158,112,213 };
    byte_vec_t pk { 4,150,21,228,28,167,71,135,214,165,185,101,69,8,90,98,187,50,55,166,48,251,69,192,125,133,135,182,14,73,192,185,87,139,28,19,173,7,232,222,133,163,243,16,247,130,136,26,44,4,98,47,8,48,158,13,85,153,165,119,38,167,97,131,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 414 ") {
    byte_vec_t msg { 11,236,29,97 };
    byte_vec_t sig { 55,7,58,60,71,0,63,143,95,133,159,251,97,36,206,1,69,33,33,94,80,31,193,53,123,58,71,72,168,240,249,145,79,75,200,12,83,89,16,183,222,37,201,164,81,176,36,222,82,10,195,217,162,254,134,0,210,87,171,206,173,74,195,63 };
    byte_vec_t pk { 4,213,181,249,212,204,81,242,87,53,172,74,217,222,130,60,238,110,68,216,46,16,127,236,56,103,238,204,110,101,94,107,127,45,143,118,154,119,193,104,18,121,59,200,77,252,129,153,137,62,128,14,107,51,171,202,132,72,164,172,224,104,190,162,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 414 ") {
    byte_vec_t msg { 42,92,69,117 };
    byte_vec_t sig { 133,13,31,193,76,139,74,55,255,6,181,52,204,85,196,150,78,74,236,139,60,43,213,163,254,12,11,194,188,109,63,188,55,186,130,23,235,120,55,94,182,114,124,180,53,4,149,139,194,154,163,55,251,181,247,121,31,93,216,249,4,20,53,44 };
    byte_vec_t pk { 4,94,247,135,16,12,137,124,116,163,109,24,228,154,43,163,132,77,121,125,176,53,0,22,138,176,175,222,22,223,139,129,144,167,169,226,204,239,216,51,231,163,49,169,211,145,169,235,10,63,46,235,152,34,85,16,192,138,131,156,90,211,228,100,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 415 ") {
    byte_vec_t msg { 21,184,38,50 };
    byte_vec_t sig { 55,197,84,86,195,88,218,245,54,180,188,190,113,84,224,17,129,97,88,52,85,168,8,205,139,224,195,34,115,6,117,217,126,45,180,47,222,124,191,116,162,206,42,134,172,18,238,41,146,75,200,214,184,151,251,53,5,75,39,147,3,31,59,64 };
    byte_vec_t pk { 4,102,210,57,98,12,145,109,143,140,148,178,159,212,26,174,40,17,17,137,241,129,242,14,119,188,96,101,44,199,175,75,119,221,12,30,14,145,218,2,23,110,175,238,244,164,17,150,74,87,98,46,40,193,101,0,96,202,246,204,31,62,99,243,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 415 ") {
    byte_vec_t msg { 175,23,155,29 };
    byte_vec_t sig { 146,236,117,245,16,34,70,57,144,192,68,76,216,36,6,114,203,236,254,160,241,0,11,225,174,197,220,0,16,137,0,79,236,196,150,30,2,161,248,41,14,34,181,117,17,93,10,62,24,142,150,60,123,253,220,37,209,161,24,28,21,241,141,88 };
    byte_vec_t pk { 4,255,6,20,64,191,201,214,131,26,161,67,35,15,150,220,82,169,45,192,40,233,165,163,120,2,20,102,7,219,142,119,190,127,37,248,206,229,58,11,136,59,242,124,52,131,213,161,60,236,31,83,1,118,211,25,189,186,170,8,91,93,112,190,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 416 ") {
    byte_vec_t msg { 86,14,166,84 };
    byte_vec_t sig { 31,231,106,106,199,104,111,149,64,184,131,202,162,111,36,228,97,169,13,233,252,19,50,157,66,51,185,185,59,117,238,244,136,139,11,145,89,170,113,240,136,18,216,160,74,221,18,17,116,166,73,244,73,29,242,83,175,81,49,1,104,70,100,231 };
    byte_vec_t pk { 4,156,229,209,104,166,211,158,131,65,226,33,95,64,215,206,173,50,248,95,88,200,20,45,101,115,168,27,108,10,99,87,198,82,44,16,69,249,240,64,110,57,94,144,28,187,236,177,226,1,122,92,58,83,28,196,191,88,54,21,132,131,213,13,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 416 ") {
    byte_vec_t msg { 206,241,63,146 };
    byte_vec_t sig { 102,245,190,123,195,114,135,67,202,58,181,78,126,64,223,59,188,216,189,130,26,59,208,13,63,164,96,214,120,172,108,229,34,50,60,236,170,183,116,134,186,205,163,183,29,201,225,221,187,251,77,68,85,37,26,152,43,144,112,254,195,86,149,35 };
    byte_vec_t pk { 4,37,125,243,87,111,183,41,91,196,88,144,188,206,38,50,204,99,33,249,14,118,230,93,17,144,160,82,121,34,79,204,54,67,166,112,83,194,100,146,21,52,207,122,244,235,18,68,143,189,85,109,191,90,10,104,26,91,244,96,91,229,60,185,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 417 ") {
    byte_vec_t msg { 196,220,189,233 };
    byte_vec_t sig { 43,99,38,145,29,16,82,165,163,181,240,241,110,190,190,114,21,122,174,83,17,158,84,132,12,121,159,186,197,162,151,86,191,120,202,153,141,49,239,236,219,110,42,250,20,90,114,154,24,205,163,213,139,27,190,68,119,92,83,186,213,90,88,45 };
    byte_vec_t pk { 4,159,232,134,172,90,82,181,244,105,224,141,90,13,217,116,155,242,255,110,18,210,170,207,84,12,234,73,177,183,82,172,155,85,209,208,163,156,44,227,23,27,118,129,82,202,233,63,103,187,151,47,125,24,179,190,162,233,167,73,25,142,84,35,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 417 ") {
    byte_vec_t msg { 75,6,122,214 };
    byte_vec_t sig { 196,148,149,186,254,153,174,73,83,201,242,54,123,25,162,191,91,68,161,179,140,82,139,8,254,49,212,84,174,51,204,84,243,166,33,0,178,91,247,227,231,54,131,127,195,142,237,84,203,49,220,52,114,101,129,218,250,147,9,24,36,251,47,66 };
    byte_vec_t pk { 4,110,164,88,115,28,205,186,230,172,217,131,139,45,39,188,69,35,92,233,12,225,203,91,77,211,93,88,229,181,200,177,2,156,15,247,40,5,239,20,91,60,182,246,90,199,128,13,206,61,89,94,49,165,118,75,14,67,186,219,35,81,196,197,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 418 ") {
    byte_vec_t msg { 125,35,126,31 };
    byte_vec_t sig { 143,165,24,242,28,43,78,187,129,58,245,90,100,213,112,14,195,235,105,42,158,146,193,38,18,74,55,231,96,196,177,80,173,154,78,0,188,31,54,8,175,115,11,25,221,58,58,179,154,65,27,50,189,140,159,66,175,233,18,191,207,92,89,36 };
    byte_vec_t pk { 4,32,252,8,134,49,191,122,164,159,212,56,172,66,174,211,14,99,252,242,63,93,165,59,217,117,144,253,239,20,81,44,79,10,140,27,214,130,85,110,110,217,239,4,110,108,224,137,118,106,45,191,111,153,191,47,170,99,124,154,248,27,183,87,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 418 ") {
    byte_vec_t msg { 209,224,251,148 };
    byte_vec_t sig { 186,193,136,108,10,34,30,159,196,207,97,205,203,57,120,68,32,251,200,208,174,24,198,164,17,104,165,136,213,212,71,248,179,187,50,105,176,0,66,90,234,204,187,80,216,74,175,210,137,137,12,112,244,152,8,202,36,22,152,240,216,223,35,163 };
    byte_vec_t pk { 4,51,43,196,32,89,115,218,233,32,23,82,237,172,82,160,170,16,164,149,242,36,10,7,147,178,252,227,117,171,55,220,56,106,100,104,178,53,210,35,147,234,111,57,251,71,243,252,157,162,219,225,155,252,68,199,169,131,119,51,71,205,61,189,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 419 ") {
    byte_vec_t msg { 245,153,213,142 };
    byte_vec_t sig { 79,218,119,255,201,235,87,106,253,99,185,225,79,41,230,244,171,51,157,169,113,166,11,202,156,210,183,249,76,216,222,228,168,102,233,191,55,204,65,179,145,144,176,222,37,156,64,52,168,113,74,246,252,135,160,239,230,95,225,0,24,47,191,247 };
    byte_vec_t pk { 4,36,54,5,11,170,77,77,173,6,89,251,28,210,207,36,182,83,157,26,218,140,157,60,112,172,62,149,155,86,79,198,148,205,239,41,158,123,190,211,198,130,98,190,108,200,80,232,255,114,58,121,151,134,25,192,59,77,206,149,182,223,214,180,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 419 ") {
    byte_vec_t msg { 140,110,37,220 };
    byte_vec_t sig { 145,109,109,2,6,30,24,93,17,27,11,45,209,216,117,164,57,66,36,34,133,31,40,14,14,127,174,134,219,2,154,166,44,96,199,247,23,130,15,251,119,35,90,27,127,199,253,241,106,65,245,175,154,126,217,227,19,111,176,91,220,187,46,102 };
    byte_vec_t pk { 4,32,133,169,132,39,161,232,226,146,148,152,23,205,197,208,189,31,210,29,119,68,139,161,152,141,213,56,124,66,168,249,182,135,226,218,15,208,225,45,32,173,160,221,224,200,125,119,174,225,214,163,212,207,252,104,133,76,199,17,48,143,30,78,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 420 ") {
    byte_vec_t msg { 121,172,201,109 };
    byte_vec_t sig { 227,169,27,248,44,246,117,208,44,201,160,94,172,190,113,216,235,58,175,137,128,127,155,63,184,46,199,114,227,91,18,78,80,27,22,0,229,120,147,29,125,14,83,251,61,124,104,132,61,66,155,241,231,141,140,92,87,240,139,44,184,32,230,39 };
    byte_vec_t pk { 4,177,19,241,86,55,219,255,45,94,249,104,178,15,212,175,142,71,186,11,61,111,173,137,204,157,54,187,210,221,239,90,35,28,104,74,88,78,7,26,83,72,52,104,61,227,209,40,113,54,205,168,229,107,53,84,143,108,249,233,18,156,63,27,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 420 ") {
    byte_vec_t msg { 9,182,132,115 };
    byte_vec_t sig { 193,101,118,216,244,120,127,32,36,152,109,20,186,72,251,171,81,176,54,235,8,120,240,65,246,135,108,186,224,4,121,237,178,149,149,174,196,56,166,239,23,14,189,94,20,144,181,173,153,206,87,171,159,29,142,127,101,250,204,53,208,99,72,215 };
    byte_vec_t pk { 4,36,161,247,147,43,160,86,23,57,16,104,175,21,16,104,185,184,176,84,203,93,51,217,157,7,24,210,152,15,247,139,191,223,214,85,92,3,220,73,33,9,16,117,203,90,187,22,91,255,178,170,226,64,96,17,69,117,130,251,103,174,17,32,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 421 ") {
    byte_vec_t msg { 208,205,74,154 };
    byte_vec_t sig { 78,230,216,44,120,222,169,106,3,244,23,128,111,9,31,14,61,243,201,117,6,104,182,99,77,9,99,154,103,78,120,74,44,100,72,131,109,141,39,14,8,236,237,185,80,11,148,16,227,88,234,130,166,3,96,234,19,95,102,101,236,62,134,231 };
    byte_vec_t pk { 4,37,143,105,129,88,147,223,216,226,212,37,82,155,180,113,240,140,128,51,124,76,215,196,238,241,74,85,249,219,90,195,39,228,40,209,26,211,25,3,140,52,205,47,112,229,71,81,147,230,241,104,93,210,235,140,52,31,48,177,158,177,210,44,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 421 ") {
    byte_vec_t msg { 197,191,30,183 };
    byte_vec_t sig { 221,149,155,214,214,172,225,5,112,208,136,100,234,189,227,173,132,188,230,212,20,111,229,12,169,107,175,241,94,25,52,220,153,68,254,207,102,223,46,36,237,180,212,107,137,159,227,1,254,162,113,161,182,204,161,228,59,38,178,63,224,195,171,173 };
    byte_vec_t pk { 4,191,175,115,38,105,61,255,224,122,208,3,55,7,178,34,159,44,229,150,204,61,33,229,177,127,132,57,1,211,228,134,156,40,126,136,156,25,45,108,254,78,178,193,138,159,51,59,12,199,95,203,245,171,117,226,68,60,107,123,105,206,240,181,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 422 ") {
    byte_vec_t msg { 56,53,242,165 };
    byte_vec_t sig { 83,29,94,87,37,126,211,11,211,77,149,127,165,101,219,153,54,120,238,162,238,51,189,104,11,45,96,24,254,117,0,214,237,251,45,137,97,98,93,57,232,2,125,64,91,154,150,84,25,54,21,227,102,127,136,210,160,8,222,9,124,223,133,243 };
    byte_vec_t pk { 4,11,183,147,48,50,65,35,71,77,142,118,221,216,215,146,19,69,35,114,19,222,38,207,20,240,128,146,128,134,66,175,80,33,227,149,67,120,90,58,28,232,70,92,111,116,173,123,14,120,96,168,251,181,204,185,243,179,97,55,232,31,23,0,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 422 ") {
    byte_vec_t msg { 193,106,238,252 };
    byte_vec_t sig { 85,99,173,241,32,83,71,210,12,14,15,11,93,63,204,207,93,95,100,107,103,116,134,39,69,204,249,13,96,245,83,44,224,140,124,133,38,225,145,5,245,35,166,190,106,74,219,75,135,155,120,246,239,88,217,88,236,127,103,182,90,188,232,60 };
    byte_vec_t pk { 4,235,119,13,231,173,121,138,170,255,235,29,218,52,128,28,203,97,192,68,31,124,117,147,38,90,235,118,236,158,198,44,147,17,217,44,8,143,40,236,184,129,166,143,225,158,190,245,210,92,15,117,247,46,243,254,186,123,210,127,40,37,70,213,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 423 ") {
    byte_vec_t msg { 181,126,223,158 };
    byte_vec_t sig { 238,36,89,104,146,87,97,117,61,19,63,227,77,238,93,128,134,50,143,66,184,76,6,120,29,194,69,101,93,124,207,79,59,55,148,224,103,204,232,45,188,61,79,231,138,253,96,177,220,175,56,144,248,186,111,137,186,172,255,86,67,10,231,240 };
    byte_vec_t pk { 4,213,95,20,177,40,16,12,222,164,118,36,8,0,130,206,247,87,143,32,152,219,160,122,235,92,73,134,219,239,102,168,65,8,123,161,178,175,93,119,123,223,35,85,172,158,185,151,155,41,187,119,209,196,50,236,190,142,183,32,165,155,253,78,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 423 ") {
    byte_vec_t msg { 136,115,221,32 };
    byte_vec_t sig { 154,108,152,168,43,69,248,31,120,242,116,41,21,239,187,78,252,10,102,41,86,211,150,192,65,217,83,178,125,119,59,63,152,35,195,89,91,150,158,241,66,239,209,148,33,41,131,148,213,184,60,200,58,213,54,87,252,59,9,214,67,228,185,103 };
    byte_vec_t pk { 4,145,241,223,11,107,181,116,122,118,90,254,113,3,162,127,219,4,119,224,177,105,54,254,169,1,209,38,134,231,176,89,19,62,10,186,155,41,62,23,171,9,141,90,200,160,153,103,89,51,184,165,151,37,46,24,188,236,174,230,179,115,31,242,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 424 ") {
    byte_vec_t msg { 232,103,202,228 };
    byte_vec_t sig { 35,44,147,37,155,82,75,123,68,136,109,59,173,87,50,208,67,195,136,55,178,99,139,76,167,13,229,160,254,111,172,164,6,170,124,33,11,23,239,78,73,161,143,23,33,65,202,107,85,7,145,135,200,41,118,215,181,51,2,107,240,32,84,22 };
    byte_vec_t pk { 4,217,45,151,153,68,170,216,5,100,106,157,91,123,61,189,104,45,57,58,74,112,221,106,146,160,223,46,79,214,66,239,31,151,253,62,192,12,57,9,202,250,217,38,254,76,220,137,56,122,133,90,179,2,28,120,42,255,236,211,62,199,225,181,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 424 ") {
    byte_vec_t msg { 4,67,158,193 };
    byte_vec_t sig { 81,228,17,158,175,177,254,233,26,236,146,211,31,181,167,104,221,231,227,130,17,153,234,11,68,184,248,1,223,68,206,48,50,24,157,149,227,131,193,118,65,236,172,174,252,187,53,197,230,59,12,25,22,124,155,75,239,221,117,228,108,87,19,12 };
    byte_vec_t pk { 4,8,25,198,170,31,133,76,171,11,141,187,57,1,140,49,189,120,53,38,162,5,50,174,211,7,204,217,235,66,38,64,173,154,78,118,111,229,180,255,58,160,180,126,251,37,156,79,29,80,98,96,199,65,175,37,93,4,62,225,152,208,19,226,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 425 ") {
    byte_vec_t msg { 172,5,127,24 };
    byte_vec_t sig { 231,119,97,22,110,122,122,129,143,162,196,3,93,15,91,102,145,66,238,190,158,27,242,72,29,74,30,117,13,118,65,200,201,36,193,121,125,224,10,128,72,113,223,120,161,147,35,156,110,141,214,80,208,237,242,90,5,27,68,24,95,156,30,196 };
    byte_vec_t pk { 4,41,136,90,255,21,85,238,140,105,97,163,167,112,42,39,158,10,212,165,12,211,90,89,94,221,207,93,166,27,63,209,240,244,159,168,56,140,151,30,215,73,68,84,28,201,26,200,155,112,92,121,8,234,202,119,25,222,53,129,147,149,178,203,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 425 ") {
    byte_vec_t msg { 133,185,93,140 };
    byte_vec_t sig { 130,74,205,57,191,203,188,179,85,99,106,228,90,225,154,7,123,65,138,216,190,33,2,179,175,217,68,156,168,250,255,95,252,157,56,242,16,113,123,67,122,137,92,149,16,234,201,153,179,6,5,222,47,24,211,148,245,161,57,240,247,205,165,134 };
    byte_vec_t pk { 4,74,200,194,28,133,152,68,238,253,90,157,195,249,122,51,18,110,99,250,64,177,203,202,176,251,204,170,137,104,129,225,99,114,220,6,36,94,4,6,136,172,221,21,157,74,205,100,114,81,229,131,167,117,229,97,218,131,16,48,239,96,235,121,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 426 ") {
    byte_vec_t msg { 107,103,68,54 };
    byte_vec_t sig { 117,198,216,250,50,240,4,134,156,87,136,87,76,50,232,212,161,133,253,38,113,238,21,41,132,32,79,12,134,192,87,119,3,130,73,125,191,29,128,143,115,192,193,87,148,114,42,244,87,220,127,100,140,150,17,141,222,152,166,86,164,172,38,210 };
    byte_vec_t pk { 4,175,56,150,13,114,47,217,121,190,204,92,46,239,126,203,116,43,173,222,159,124,58,78,220,36,159,92,131,249,170,45,187,47,86,21,196,88,221,213,106,239,45,54,132,222,45,85,63,149,91,225,93,118,170,85,235,211,250,149,128,13,183,82,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 426 ") {
    byte_vec_t msg { 21,124,41,8 };
    byte_vec_t sig { 37,152,141,91,195,156,205,65,178,91,199,2,28,33,215,93,135,179,139,188,54,248,57,87,152,198,155,223,143,236,245,50,222,41,9,242,121,142,123,225,246,222,207,79,253,61,11,141,233,67,207,237,152,50,204,66,251,220,81,7,79,152,137,177 };
    byte_vec_t pk { 4,205,181,3,47,124,171,239,55,0,56,163,164,0,215,166,21,36,20,245,40,138,29,49,209,206,239,234,63,167,164,202,219,19,14,239,174,235,100,104,29,255,200,128,14,49,227,254,181,171,44,103,239,162,135,165,205,202,179,159,145,79,220,227,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 427 ") {
    byte_vec_t msg { 69,91,183,48 };
    byte_vec_t sig { 232,198,43,243,93,3,183,98,244,75,65,98,254,245,170,112,197,251,152,27,119,174,150,166,226,172,237,246,68,198,255,52,255,72,88,161,89,157,199,192,182,181,113,147,156,19,122,44,19,129,179,106,233,128,104,251,187,230,59,234,252,4,136,50 };
    byte_vec_t pk { 4,176,241,73,147,247,82,180,20,40,70,9,63,66,14,169,163,127,192,144,33,138,102,225,236,181,222,160,171,63,255,203,101,231,102,197,52,123,8,196,219,231,164,167,20,15,195,212,185,103,208,222,146,48,77,180,238,205,131,45,22,162,190,11,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 427 ") {
    byte_vec_t msg { 130,98,110,144 };
    byte_vec_t sig { 60,16,33,193,1,221,215,121,198,244,120,110,117,13,208,98,166,174,28,207,93,198,13,63,104,232,107,164,16,225,153,64,112,17,164,101,33,238,105,0,68,9,133,64,25,25,65,171,79,195,216,126,118,42,4,158,176,253,96,138,164,3,55,82 };
    byte_vec_t pk { 4,253,96,90,98,247,54,97,64,116,243,129,29,52,2,110,59,121,53,230,108,244,244,12,24,159,184,249,77,127,79,139,103,212,160,87,184,161,78,110,101,70,205,82,219,15,36,91,225,154,149,30,117,83,238,113,78,235,195,52,77,126,115,5,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 428 ") {
    byte_vec_t msg { 208,3,189,185 };
    byte_vec_t sig { 226,108,199,109,45,194,175,34,45,49,14,53,33,131,29,58,93,67,161,140,188,206,95,184,231,109,66,79,174,95,129,187,124,132,33,49,162,33,202,231,105,43,135,165,31,234,24,219,247,226,235,116,54,182,130,60,236,217,46,102,88,77,96,187 };
    byte_vec_t pk { 4,81,126,222,132,234,46,26,250,27,197,27,234,159,219,232,147,5,64,17,140,232,59,242,29,59,184,211,144,196,180,151,181,160,178,139,243,130,133,213,99,254,147,96,94,94,202,49,68,178,215,37,74,224,109,226,36,98,134,13,255,55,73,8,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 428 ") {
    byte_vec_t msg { 83,15,168,232 };
    byte_vec_t sig { 227,124,121,157,20,150,107,163,26,246,176,70,39,156,195,2,149,66,136,126,61,228,182,87,82,122,245,181,116,22,218,87,222,229,166,215,142,211,53,50,157,136,112,50,88,3,100,236,147,8,181,249,151,46,172,232,103,153,126,73,252,62,95,59 };
    byte_vec_t pk { 4,103,148,40,75,41,136,39,163,249,228,87,124,230,226,160,96,169,107,92,158,100,209,30,171,247,11,67,155,138,161,126,145,32,201,56,58,30,24,91,35,73,187,77,28,144,147,114,209,192,61,74,11,180,20,10,210,4,194,60,181,117,83,153,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 429 ") {
    byte_vec_t msg { 11,47,21,187 };
    byte_vec_t sig { 142,200,13,0,36,57,33,175,61,253,59,55,198,255,92,22,33,48,142,195,197,8,98,195,163,166,27,52,173,14,232,200,57,107,43,124,144,170,42,75,89,135,129,158,1,103,93,204,124,237,10,38,9,182,193,233,141,222,182,136,238,138,220,171 };
    byte_vec_t pk { 4,212,245,113,230,76,165,64,231,197,239,59,227,138,35,190,239,182,213,9,157,111,129,9,102,162,64,85,188,166,165,200,172,114,109,177,163,69,67,60,156,208,174,53,120,245,212,34,151,139,106,92,27,55,84,56,172,179,151,12,102,80,221,128,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 429 ") {
    byte_vec_t msg { 104,85,19,72 };
    byte_vec_t sig { 232,35,10,240,121,32,10,124,162,237,181,198,159,134,221,206,60,169,127,243,169,121,227,213,166,250,198,219,101,156,37,217,80,226,197,165,218,171,110,209,3,246,216,127,117,101,242,254,162,51,6,91,103,175,163,193,183,162,145,16,153,165,195,151 };
    byte_vec_t pk { 4,84,206,83,31,240,30,82,19,216,54,60,149,27,5,103,29,168,111,217,123,132,152,235,189,209,135,251,94,120,120,97,40,194,105,204,32,89,35,170,235,38,17,180,184,133,30,154,58,227,215,196,70,153,119,51,200,80,120,131,148,139,74,161,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 430 ") {
    byte_vec_t msg { 214,25,211,228 };
    byte_vec_t sig { 153,240,21,51,88,143,161,251,253,180,91,112,130,118,191,106,177,4,20,127,167,214,127,118,29,52,117,66,3,70,221,173,199,15,178,249,104,183,218,245,171,180,230,185,169,64,90,65,130,25,82,233,146,131,89,128,206,90,212,241,167,255,21,201 };
    byte_vec_t pk { 4,224,245,186,62,84,143,248,130,230,207,203,200,125,25,144,109,31,153,138,97,219,98,157,228,9,231,113,247,233,42,5,224,253,160,32,31,55,73,59,112,114,37,120,63,41,30,65,148,212,150,204,174,46,17,111,227,72,11,59,142,132,152,118,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 430 ") {
    byte_vec_t msg { 221,247,208,105 };
    byte_vec_t sig { 76,34,202,34,204,196,165,246,254,68,196,42,15,190,228,166,5,18,136,49,180,164,243,217,8,136,233,148,17,48,64,202,125,180,99,72,37,93,137,103,195,241,58,121,83,238,129,77,207,173,77,67,91,160,110,104,193,9,8,239,71,49,206,78 };
    byte_vec_t pk { 4,123,38,206,175,192,197,171,144,219,72,94,156,20,19,235,225,105,106,72,126,205,147,124,13,128,17,62,130,92,25,221,81,48,237,116,119,192,1,255,86,33,118,185,162,157,234,192,36,147,74,192,239,230,206,105,212,1,12,176,204,119,15,207,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 431 ") {
    byte_vec_t msg { 170,100,182,117 };
    byte_vec_t sig { 31,97,235,54,47,195,77,24,170,208,20,218,187,64,120,190,160,52,120,229,48,208,118,197,84,41,48,232,107,188,173,28,237,21,241,65,66,65,75,242,160,214,116,218,180,122,229,232,16,99,61,81,254,16,202,173,184,250,104,96,115,251,229,109 };
    byte_vec_t pk { 4,57,247,123,5,226,176,7,252,25,189,167,92,69,81,39,39,14,129,25,46,94,76,239,135,167,163,110,212,118,39,100,165,130,50,122,247,180,114,81,141,28,168,153,31,241,164,29,39,16,65,254,40,80,145,122,175,122,73,57,161,5,24,35,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 431 ") {
    byte_vec_t msg { 25,216,38,83 };
    byte_vec_t sig { 54,91,79,83,112,38,203,16,12,229,137,33,32,29,58,110,4,82,80,126,19,172,24,94,56,70,210,251,97,156,121,10,144,190,22,22,160,2,170,74,214,248,199,234,182,255,181,123,99,172,54,139,11,73,175,100,250,20,71,112,119,32,52,21 };
    byte_vec_t pk { 4,106,98,122,7,106,251,208,178,168,8,89,129,54,71,130,200,177,207,30,118,253,39,227,167,148,162,158,64,145,114,87,51,161,33,2,59,118,137,12,231,238,219,250,67,22,119,180,61,182,176,109,100,20,232,124,184,10,153,5,10,130,94,198,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 432 ") {
    byte_vec_t msg { 254,26,252,178 };
    byte_vec_t sig { 250,251,179,177,76,49,8,124,211,193,74,212,13,190,124,69,158,194,239,131,168,29,206,118,153,25,137,240,27,242,140,127,102,1,62,170,89,235,9,40,219,112,24,77,77,132,2,175,52,74,230,111,222,77,228,232,182,176,198,252,32,211,43,72 };
    byte_vec_t pk { 4,117,206,30,227,55,21,117,216,96,208,134,241,64,59,196,13,17,248,65,127,92,5,86,167,9,143,148,17,38,115,165,254,35,226,143,34,152,185,141,162,230,20,75,7,151,213,42,152,56,172,129,91,39,56,19,84,125,186,255,246,117,214,169,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 432 ") {
    byte_vec_t msg { 32,240,141,166 };
    byte_vec_t sig { 226,86,99,206,129,137,156,154,200,168,248,3,39,236,179,79,233,68,114,195,11,39,156,235,236,62,55,220,37,96,142,114,5,240,158,126,180,196,94,8,83,202,196,44,162,83,107,86,29,34,54,83,84,52,75,169,171,53,31,240,222,20,43,210 };
    byte_vec_t pk { 4,2,173,138,91,75,93,118,204,115,219,215,72,96,30,6,153,28,137,216,0,41,23,71,28,23,224,252,143,151,242,134,122,113,116,112,126,162,16,56,23,10,138,228,56,232,57,89,101,82,181,99,50,63,104,29,50,116,57,192,84,28,221,160,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 433 ") {
    byte_vec_t msg { 184,76,242,106 };
    byte_vec_t sig { 94,51,218,143,91,17,188,181,224,147,133,236,229,112,48,125,102,23,18,19,139,3,141,239,178,122,66,231,130,233,239,122,53,129,144,253,99,56,60,45,6,143,177,68,233,141,243,190,209,185,7,186,253,114,147,179,160,63,58,10,19,20,117,191 };
    byte_vec_t pk { 4,241,245,155,34,232,180,64,145,135,190,67,224,142,97,74,243,55,232,42,177,171,108,200,99,34,173,134,6,139,2,231,134,221,183,246,50,228,86,187,29,170,71,179,88,249,251,41,243,20,2,76,55,138,85,18,184,204,162,67,19,60,190,82,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 433 ") {
    byte_vec_t msg { 170,68,103,246 };
    byte_vec_t sig { 251,237,160,157,122,67,111,66,101,208,22,53,4,120,154,246,26,8,250,186,221,98,23,128,112,108,184,244,108,206,49,57,41,218,127,176,174,73,186,176,56,176,41,8,160,155,77,55,196,154,102,116,178,30,191,53,208,194,193,102,144,217,18,144 };
    byte_vec_t pk { 4,29,160,215,193,130,46,82,193,93,208,36,106,243,73,141,32,153,92,226,208,202,170,157,68,132,76,99,206,133,181,9,73,48,74,61,181,227,215,169,194,69,227,66,42,59,130,36,58,128,242,100,114,242,238,33,197,82,70,233,50,90,83,235,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 434 ") {
    byte_vec_t msg { 11,92,213,80 };
    byte_vec_t sig { 59,53,76,196,114,151,47,80,168,133,185,68,60,246,227,45,187,210,154,107,79,57,179,111,137,115,45,34,29,167,139,158,242,77,233,163,245,74,170,213,34,43,238,214,70,43,185,95,111,230,30,173,143,176,32,176,157,201,158,175,30,184,73,40 };
    byte_vec_t pk { 4,79,42,113,222,2,22,216,188,198,124,220,24,85,107,107,140,55,183,33,158,231,93,4,122,46,207,169,147,79,173,21,149,169,11,138,250,128,234,79,206,101,116,17,141,186,155,0,53,168,139,74,252,116,203,137,255,221,173,28,185,242,108,66,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 434 ") {
    byte_vec_t msg { 102,140,80,171 };
    byte_vec_t sig { 49,65,51,34,12,255,218,58,59,102,115,188,20,207,91,229,155,245,13,23,113,249,210,176,29,218,165,26,57,52,70,128,6,157,33,210,176,235,18,76,196,2,177,219,84,98,222,165,42,242,128,46,212,138,150,159,138,87,74,14,216,65,239,225 };
    byte_vec_t pk { 4,177,237,253,121,227,162,186,28,19,169,134,114,35,22,141,3,206,54,150,218,72,149,106,125,201,42,131,131,77,224,66,42,169,163,120,118,91,85,202,76,161,87,114,111,209,44,204,89,172,91,178,28,9,114,136,76,168,231,112,85,212,79,219,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 435 ") {
    byte_vec_t msg { 54,175,188,204 };
    byte_vec_t sig { 245,90,38,236,45,102,9,121,251,54,124,200,234,244,115,1,198,154,239,204,170,227,78,20,251,33,39,250,18,40,235,229,185,195,253,66,87,7,116,44,219,184,73,170,32,105,56,70,38,206,28,159,160,21,184,174,33,210,211,29,218,96,131,112 };
    byte_vec_t pk { 4,26,0,149,186,221,32,179,60,229,28,244,8,46,224,6,52,151,28,124,56,216,205,168,199,195,62,110,139,104,31,184,109,147,205,246,12,22,168,49,38,16,243,250,250,18,225,47,228,136,235,190,53,32,151,88,112,68,237,251,90,73,140,184,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 435 ") {
    byte_vec_t msg { 134,203,68,131 };
    byte_vec_t sig { 158,41,74,13,132,188,12,127,14,78,112,227,97,29,235,240,156,113,245,98,155,46,156,97,78,31,208,65,80,115,72,180,116,81,62,128,88,74,253,33,208,200,209,100,86,159,106,111,168,196,97,238,20,144,217,218,231,187,20,137,221,87,90,209 };
    byte_vec_t pk { 4,84,0,35,33,238,223,166,214,193,49,85,85,144,229,210,219,4,199,119,141,0,56,12,208,149,44,176,215,87,22,100,35,53,164,79,234,34,234,110,98,197,110,9,123,18,93,169,72,109,249,15,227,240,160,24,32,113,228,47,167,236,216,53,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 436 ") {
    byte_vec_t msg { 166,142,149,64 };
    byte_vec_t sig { 117,240,62,229,221,50,237,13,108,6,222,71,80,234,181,168,188,141,40,143,80,10,89,245,55,52,230,36,220,147,223,208,34,190,35,180,169,217,137,2,156,121,61,128,235,126,42,192,224,48,76,76,151,34,39,6,121,166,163,16,183,56,220,103 };
    byte_vec_t pk { 4,165,35,174,137,186,153,222,250,251,54,22,125,234,36,97,63,126,156,68,227,59,68,120,109,87,7,26,158,29,85,202,59,94,170,155,174,190,57,24,48,86,201,154,92,173,174,232,205,163,44,245,6,205,47,44,240,87,216,190,156,247,83,192,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 436 ") {
    byte_vec_t msg { 197,202,99,16 };
    byte_vec_t sig { 193,19,244,2,240,108,233,95,159,56,70,37,143,236,85,74,252,15,117,254,203,91,82,223,43,239,18,178,112,200,253,83,234,231,114,28,198,70,86,107,122,41,119,51,170,176,149,118,223,33,188,97,54,241,137,241,96,12,131,240,82,119,66,92 };
    byte_vec_t pk { 4,246,131,213,36,116,71,55,216,199,89,73,160,15,37,21,52,3,246,201,240,219,124,56,60,234,189,82,17,246,37,251,213,210,220,221,131,94,85,246,184,171,63,112,200,91,5,66,155,233,137,104,227,41,60,13,231,116,126,28,19,89,191,236,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 437 ") {
    byte_vec_t msg { 230,244,122,240 };
    byte_vec_t sig { 69,89,61,248,57,97,183,23,171,230,223,54,139,240,46,180,78,171,94,190,164,201,191,189,88,199,61,42,175,155,70,217,24,37,35,41,206,98,44,69,133,63,194,161,99,4,97,120,179,135,86,166,89,218,123,201,109,38,184,92,166,131,83,1 };
    byte_vec_t pk { 4,83,218,37,212,49,12,67,31,126,208,162,229,54,248,83,8,170,231,222,138,206,218,145,251,174,193,76,64,197,99,172,217,189,179,4,143,183,116,233,206,241,167,208,1,227,146,12,165,99,173,80,15,96,107,82,214,25,83,114,75,166,20,149,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 437 ") {
    byte_vec_t msg { 135,23,221,247 };
    byte_vec_t sig { 166,106,131,8,199,227,151,159,142,55,251,181,89,219,138,65,150,97,202,32,246,155,118,25,49,91,152,231,53,111,154,44,250,53,136,223,123,7,16,114,225,111,165,217,11,222,169,98,71,116,48,28,81,176,225,236,164,240,195,49,174,82,242,212 };
    byte_vec_t pk { 4,164,32,27,146,83,241,67,178,36,247,122,187,146,182,243,236,208,82,196,195,163,233,203,72,135,67,33,9,86,168,91,221,29,104,31,29,51,236,82,188,12,59,69,123,15,5,207,223,91,136,239,202,126,108,84,60,43,76,96,247,254,55,236,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 438 ") {
    byte_vec_t msg { 4,122,2,136 };
    byte_vec_t sig { 156,98,18,174,126,186,236,159,132,116,164,75,246,175,165,152,100,212,43,184,238,244,130,43,169,82,220,150,226,246,27,3,23,67,246,59,143,6,33,121,237,60,219,22,218,218,223,162,9,12,97,150,35,35,0,225,197,226,73,100,189,205,149,249 };
    byte_vec_t pk { 4,190,95,17,12,232,162,211,111,191,155,90,163,255,8,38,48,175,209,254,105,102,177,39,215,248,48,197,232,8,37,242,171,108,206,177,191,40,144,121,3,12,108,25,236,172,251,250,232,238,208,66,204,50,108,203,8,14,99,68,36,200,150,76,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 438 ") {
    byte_vec_t msg { 61,24,141,31 };
    byte_vec_t sig { 155,31,150,64,30,18,125,195,80,108,245,235,63,156,65,171,213,168,84,62,55,138,36,7,157,173,203,190,124,137,237,116,146,28,18,213,209,75,130,234,181,240,32,70,67,57,62,111,251,3,77,193,189,5,48,113,122,134,46,136,60,237,18,225 };
    byte_vec_t pk { 4,161,143,62,216,17,201,135,236,114,48,80,224,164,17,48,37,15,226,97,64,209,15,29,58,232,215,218,198,81,200,94,103,59,174,102,107,110,123,106,73,249,255,158,196,124,253,80,240,146,232,255,207,161,230,199,20,73,193,38,221,127,247,169,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 439 ") {
    byte_vec_t msg { 141,224,16,243 };
    byte_vec_t sig { 168,166,1,67,235,217,223,122,207,86,53,6,47,65,82,204,42,44,212,215,198,42,183,253,185,113,182,51,12,156,84,55,131,110,242,63,181,60,184,165,54,180,105,197,102,105,210,75,182,9,205,86,236,25,99,28,186,103,234,189,165,96,232,175 };
    byte_vec_t pk { 4,50,144,84,160,121,18,157,183,58,66,24,83,130,246,210,19,8,209,75,183,39,156,61,141,118,186,77,44,93,28,219,24,42,109,122,31,217,188,167,224,119,26,20,240,133,208,51,89,154,162,225,73,197,55,118,120,205,220,27,139,225,253,4,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 439 ") {
    byte_vec_t msg { 202,214,172,77 };
    byte_vec_t sig { 101,255,162,78,246,26,168,11,79,249,234,226,221,106,38,178,33,124,82,60,59,126,14,102,175,230,66,178,49,197,43,98,176,76,17,80,165,181,162,135,128,139,213,28,105,167,74,53,135,142,149,252,239,155,89,233,94,103,13,144,111,133,222,240 };
    byte_vec_t pk { 4,1,242,72,117,29,102,98,3,57,99,42,181,51,128,4,183,40,61,27,134,11,97,131,107,201,142,242,57,173,228,184,62,92,247,246,133,32,212,12,61,245,182,146,250,175,253,155,231,40,193,144,180,212,186,220,122,124,108,66,85,240,10,7,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 440 ") {
    byte_vec_t msg { 58,222,131,155 };
    byte_vec_t sig { 72,156,224,155,188,118,89,190,221,39,20,72,94,208,254,29,142,128,60,7,168,75,120,82,37,97,67,118,112,218,19,205,27,150,89,190,18,227,248,150,204,61,27,183,22,172,109,6,8,1,152,239,28,133,215,222,22,210,134,139,49,17,121,158 };
    byte_vec_t pk { 4,175,64,81,164,164,58,0,211,9,139,15,220,179,84,52,94,183,143,119,255,84,86,208,152,32,190,9,68,1,253,235,226,72,88,66,26,22,212,61,71,10,136,123,121,214,96,146,130,225,112,187,205,149,180,57,10,0,245,121,252,148,215,247,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 440 ") {
    byte_vec_t msg { 102,218,101,110 };
    byte_vec_t sig { 234,12,67,197,127,22,189,63,122,133,5,148,133,102,102,59,177,245,120,4,148,137,191,184,137,103,199,64,54,246,127,70,171,52,180,121,101,32,101,73,201,47,54,77,28,216,250,41,77,128,211,76,25,4,219,206,177,87,203,138,141,177,48,92 };
    byte_vec_t pk { 4,200,181,98,73,173,64,132,169,228,201,111,199,255,175,105,128,117,57,81,74,48,65,35,219,153,55,67,95,51,215,6,159,82,53,200,177,129,229,69,27,234,206,243,198,165,54,172,163,177,140,140,14,228,185,178,136,146,116,59,37,85,174,123,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 441 ") {
    byte_vec_t msg { 79,121,125,75 };
    byte_vec_t sig { 88,123,20,22,70,187,113,106,221,129,80,28,231,2,227,243,66,152,62,23,232,104,191,30,103,43,166,202,81,111,143,88,142,62,34,231,210,126,109,191,145,38,43,95,59,239,161,28,103,196,5,143,59,80,41,106,2,73,78,182,247,17,92,225 };
    byte_vec_t pk { 4,245,49,26,147,136,6,34,62,97,158,70,175,184,41,77,205,179,81,255,26,179,213,201,16,194,82,112,15,51,12,68,170,229,191,99,170,99,178,79,255,84,145,136,186,99,118,148,122,166,78,30,106,170,109,14,194,164,130,48,3,16,214,196,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 441 ") {
    byte_vec_t msg { 246,101,154,5 };
    byte_vec_t sig { 254,193,81,212,88,171,149,157,156,79,43,210,202,215,140,162,236,39,79,211,212,208,140,108,127,144,87,156,240,68,88,136,98,186,158,88,33,96,98,144,180,74,192,231,153,169,234,72,113,170,135,153,128,252,5,64,34,117,53,68,152,187,89,158 };
    byte_vec_t pk { 4,175,187,100,255,205,101,140,76,59,66,177,32,64,84,206,53,125,98,145,112,248,82,255,71,216,166,135,169,179,181,7,48,133,141,251,98,153,249,8,130,36,140,91,210,221,121,255,13,61,202,201,136,129,231,26,251,255,91,185,81,214,220,47,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 442 ") {
    byte_vec_t msg { 15,134,131,216 };
    byte_vec_t sig { 98,154,241,14,41,150,18,169,8,122,205,242,244,56,216,186,212,214,211,214,51,105,255,83,95,65,244,49,33,238,154,162,192,216,9,230,149,129,102,183,160,123,135,245,62,54,221,212,237,0,16,250,55,102,226,112,181,19,176,5,190,229,54,167 };
    byte_vec_t pk { 4,146,237,213,125,125,64,94,202,248,94,155,62,86,166,154,185,112,250,53,115,16,59,151,111,210,44,146,149,201,102,158,188,32,0,196,21,81,207,212,238,127,53,144,187,43,126,238,86,219,147,183,198,205,69,180,33,74,242,198,49,34,247,255,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 442 ") {
    byte_vec_t msg { 35,175,112,168 };
    byte_vec_t sig { 145,51,177,62,252,158,113,81,216,83,172,23,166,12,105,190,239,61,136,126,86,220,69,138,182,245,1,40,106,35,255,37,238,197,208,54,14,217,43,126,253,140,111,248,97,194,1,233,52,3,201,26,253,112,167,57,153,132,91,252,81,68,99,27 };
    byte_vec_t pk { 4,69,254,66,161,43,170,186,185,90,153,246,118,14,86,236,219,40,47,217,82,160,190,67,228,241,207,254,196,198,75,134,208,34,40,175,184,53,219,200,167,73,35,9,62,113,211,112,226,153,60,246,241,95,154,216,61,87,211,9,20,5,170,152,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 443 ") {
    byte_vec_t msg { 141,58,45,76 };
    byte_vec_t sig { 54,57,55,22,203,203,49,1,203,4,216,41,119,34,2,248,20,183,185,110,26,6,182,152,107,2,191,142,29,13,19,77,222,161,168,32,9,130,152,88,20,173,114,244,102,64,255,94,139,145,47,87,61,244,73,104,73,82,172,110,83,176,122,100 };
    byte_vec_t pk { 4,95,181,41,27,232,253,22,83,92,195,44,112,156,209,162,243,174,161,161,50,131,24,61,40,103,217,244,188,130,143,213,64,119,166,220,41,85,187,116,174,201,52,219,197,190,236,241,54,211,245,8,84,112,176,201,230,71,84,149,12,31,192,101,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 443 ") {
    byte_vec_t msg { 192,110,43,252 };
    byte_vec_t sig { 157,106,61,226,205,161,55,66,64,85,193,55,191,116,96,227,13,171,186,233,58,125,150,252,189,20,192,150,221,187,164,68,88,85,23,151,162,177,208,130,212,136,141,137,196,178,236,106,154,124,62,74,207,11,172,64,238,134,167,21,32,69,247,167 };
    byte_vec_t pk { 4,240,200,252,227,172,134,251,27,247,38,16,211,38,196,110,11,232,193,237,90,124,113,64,86,253,191,74,241,193,78,252,146,223,229,214,239,177,106,141,168,147,40,251,148,188,197,9,144,52,141,244,45,138,11,77,203,62,41,4,15,241,182,100,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 444 ") {
    byte_vec_t msg { 156,7,61,239 };
    byte_vec_t sig { 116,254,1,229,97,243,66,46,211,172,195,43,110,176,124,225,159,15,44,179,166,23,44,132,33,37,235,0,62,15,177,114,124,232,209,190,230,4,91,234,114,202,21,236,108,197,52,4,184,216,64,228,101,232,33,47,43,95,14,61,231,168,1,189 };
    byte_vec_t pk { 4,40,43,216,15,168,235,200,141,78,140,40,17,159,102,68,168,83,65,20,27,184,204,10,69,109,69,189,235,155,73,100,47,241,85,27,53,129,208,30,0,14,152,72,146,16,64,120,165,23,120,56,54,77,61,42,176,163,237,139,28,241,15,151,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 444 ") {
    byte_vec_t msg { 102,116,43,145 };
    byte_vec_t sig { 205,211,48,20,146,33,107,41,52,245,171,43,55,210,226,86,39,91,133,41,19,81,129,101,132,73,130,18,210,70,38,52,108,12,133,87,85,114,241,8,211,61,75,237,57,113,227,167,154,234,140,36,207,144,155,245,158,215,72,227,151,235,151,202 };
    byte_vec_t pk { 4,13,209,114,176,50,247,190,69,99,60,253,232,187,243,172,27,1,27,221,206,115,194,62,81,80,196,35,5,247,144,220,18,204,167,104,147,148,228,142,60,123,243,11,229,159,1,21,17,134,227,12,61,141,173,143,98,240,159,37,93,254,242,2,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 445 ") {
    byte_vec_t msg { 44,92,205,89 };
    byte_vec_t sig { 180,79,232,220,17,120,137,52,174,43,91,222,195,237,140,62,95,184,215,237,146,18,207,236,139,183,40,27,159,59,73,157,108,168,171,88,35,245,114,210,98,208,158,166,204,10,135,97,6,32,185,165,162,66,49,224,162,186,54,103,118,81,168,52 };
    byte_vec_t pk { 4,217,19,68,65,206,175,247,146,0,144,233,23,90,132,216,31,244,10,175,166,24,249,164,21,80,195,216,136,153,2,176,196,110,23,241,211,113,161,184,164,173,212,156,38,119,144,26,163,248,62,223,162,26,105,76,222,172,240,91,206,146,125,63,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 445 ") {
    byte_vec_t msg { 221,65,244,51 };
    byte_vec_t sig { 138,76,103,6,13,3,18,240,34,213,210,252,247,38,160,213,22,205,138,153,195,115,96,247,58,182,209,123,137,2,175,118,252,173,106,184,66,194,115,3,105,89,22,45,12,159,72,91,209,251,56,32,109,134,66,113,41,24,1,80,244,189,2,194 };
    byte_vec_t pk { 4,240,117,125,37,43,239,37,69,134,176,175,186,103,102,91,118,152,228,35,86,173,89,127,36,63,88,147,143,160,181,144,205,232,41,19,187,13,18,5,146,61,15,227,82,54,63,19,71,54,46,13,239,84,26,145,46,164,226,75,253,43,34,97,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 446 ") {
    byte_vec_t msg { 57,101,24,140 };
    byte_vec_t sig { 81,50,208,84,101,129,195,183,143,189,120,116,10,182,187,239,250,66,158,118,194,230,59,110,100,48,140,69,240,229,60,136,232,162,63,74,156,0,166,113,171,246,171,188,208,35,141,53,241,235,188,45,126,249,218,199,254,153,21,10,237,173,8,139 };
    byte_vec_t pk { 4,181,243,165,173,184,7,7,187,149,131,115,20,109,226,45,158,36,214,243,114,62,68,12,58,18,139,32,230,226,77,77,78,114,184,191,49,36,117,37,22,64,38,147,106,13,231,74,68,131,100,164,199,131,37,129,220,91,137,34,24,251,230,61,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 446 ") {
    byte_vec_t msg { 224,134,249,159 };
    byte_vec_t sig { 153,215,11,128,245,12,45,163,245,89,229,62,42,215,155,140,154,170,15,253,152,58,124,187,168,8,208,134,77,17,71,144,212,226,200,123,89,33,44,210,109,187,81,126,155,148,201,238,21,139,241,42,47,194,31,10,161,178,104,9,35,179,47,16 };
    byte_vec_t pk { 4,62,232,61,152,105,13,130,157,188,70,200,211,127,228,229,7,253,216,55,179,55,139,113,66,249,30,39,97,133,129,89,89,27,36,69,70,219,75,62,54,119,232,18,82,200,48,151,185,100,100,248,251,83,104,172,191,211,203,41,127,231,172,124,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 447 ") {
    byte_vec_t msg { 209,57,236,87 };
    byte_vec_t sig { 146,42,181,197,140,243,217,93,237,54,191,96,17,49,169,115,163,13,55,126,51,216,77,252,171,112,239,157,109,2,60,1,152,166,27,81,47,171,241,99,97,183,240,155,134,125,244,212,3,172,20,44,90,241,147,224,188,122,250,53,209,150,96,110 };
    byte_vec_t pk { 4,119,101,56,119,216,190,253,151,171,134,146,213,187,87,197,42,25,62,27,31,45,168,178,115,230,0,39,166,79,40,121,107,241,88,47,30,197,208,38,76,217,31,193,1,138,142,203,200,58,25,51,201,195,145,254,104,186,166,151,7,163,89,67,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 447 ") {
    byte_vec_t msg { 189,155,159,190 };
    byte_vec_t sig { 6,176,255,64,161,157,150,38,70,12,8,121,141,60,130,232,184,21,117,107,85,58,187,15,10,218,229,254,19,223,73,140,4,85,43,204,7,113,83,59,182,96,34,134,219,99,24,116,191,88,255,104,208,45,174,68,223,34,27,19,19,97,240,192 };
    byte_vec_t pk { 4,128,31,253,214,163,89,78,205,83,237,61,250,79,220,211,155,254,75,142,60,70,18,127,140,102,168,68,130,206,159,249,117,74,92,37,46,54,2,245,240,100,0,17,49,216,45,190,30,213,93,28,85,93,137,245,248,146,80,127,25,186,14,242,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 448 ") {
    byte_vec_t msg { 141,58,120,182 };
    byte_vec_t sig { 157,103,65,59,88,61,82,122,203,48,191,49,235,113,34,190,120,160,193,74,18,90,94,63,216,189,77,128,241,83,78,51,126,117,30,70,7,144,195,84,21,7,45,29,187,113,52,55,239,14,156,131,116,253,79,129,114,176,142,81,182,194,3,250 };
    byte_vec_t pk { 4,193,107,130,76,61,120,249,189,117,56,244,74,204,131,68,208,144,184,137,50,95,164,235,165,122,183,53,242,50,55,201,149,85,10,109,217,168,134,243,217,169,81,205,74,225,76,230,41,109,98,64,144,16,62,106,10,218,246,234,183,103,70,61,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 448 ") {
    byte_vec_t msg { 38,148,168,31 };
    byte_vec_t sig { 36,235,76,199,155,251,133,162,250,160,151,59,153,241,222,53,226,169,60,46,238,143,133,32,30,70,45,183,226,228,103,138,142,207,148,135,107,10,102,126,191,78,65,158,29,200,161,88,30,40,73,156,214,149,195,159,84,92,248,31,33,240,248,67 };
    byte_vec_t pk { 4,145,244,204,86,116,26,112,151,245,62,136,246,71,190,37,117,226,190,58,182,239,239,6,151,136,115,244,173,61,118,45,37,11,246,134,15,180,74,6,160,179,57,27,135,171,92,29,211,208,85,115,159,168,37,161,181,19,21,19,197,114,93,149,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 449 ") {
    byte_vec_t msg { 17,51,167,60 };
    byte_vec_t sig { 112,22,227,94,24,31,52,0,118,195,213,125,62,157,181,32,18,225,144,164,68,17,179,254,155,14,172,201,216,193,26,243,164,206,194,234,168,48,42,160,230,33,247,187,203,203,131,111,25,194,221,156,226,145,83,119,146,241,175,199,73,206,73,241 };
    byte_vec_t pk { 4,38,113,84,58,251,27,143,167,17,108,39,245,106,224,216,237,105,62,14,97,35,245,84,151,114,241,165,139,120,97,25,219,204,80,99,118,52,36,248,185,148,34,172,49,64,95,205,134,33,150,38,158,128,2,149,131,222,53,206,81,188,62,59,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 449 ") {
    byte_vec_t msg { 22,85,192,150 };
    byte_vec_t sig { 89,58,136,247,79,115,128,128,132,6,130,45,51,26,124,236,129,60,200,84,46,133,38,64,203,19,147,102,175,218,220,235,243,197,182,149,8,105,218,120,6,242,28,46,175,156,246,32,144,19,118,162,223,120,204,156,5,48,163,167,158,163,16,141 };
    byte_vec_t pk { 4,43,242,173,152,167,197,168,38,55,198,96,235,224,198,5,222,107,53,34,160,248,185,191,230,25,95,210,100,153,177,89,23,153,29,74,73,135,116,216,184,160,104,215,216,185,18,199,180,195,163,22,96,139,7,73,252,30,68,153,1,169,199,136,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 450 ") {
    byte_vec_t msg { 69,220,142,180 };
    byte_vec_t sig { 21,137,123,139,199,2,203,134,137,39,200,148,118,34,33,136,56,188,86,64,93,239,208,54,241,191,111,29,58,55,38,50,60,88,194,236,212,59,154,44,25,122,224,29,251,252,163,38,126,201,59,59,23,155,108,129,165,128,78,56,117,15,240,70 };
    byte_vec_t pk { 4,243,53,80,246,190,124,204,126,95,118,143,147,3,54,143,49,241,118,86,35,94,14,20,247,182,34,101,81,169,121,23,91,242,42,181,129,200,12,164,200,99,35,189,53,51,93,59,66,105,73,24,62,236,133,99,44,77,253,213,65,31,159,52,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 450 ") {
    byte_vec_t msg { 220,75,71,150 };
    byte_vec_t sig { 33,216,85,27,12,51,177,80,253,91,96,6,38,101,33,168,131,244,36,249,214,239,160,207,99,44,123,188,161,182,212,122,222,255,51,222,26,105,195,21,29,137,49,93,136,125,213,100,54,217,65,93,160,104,238,52,249,195,78,223,23,123,118,66 };
    byte_vec_t pk { 4,207,105,174,129,226,178,67,127,175,132,171,37,177,22,168,147,145,159,136,90,80,102,5,222,71,233,122,43,113,36,204,244,46,201,28,117,188,74,209,5,95,181,158,28,31,151,227,100,20,122,220,158,27,169,21,3,175,80,73,130,217,53,8,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 451 ") {
    byte_vec_t msg { 240,250,25,139 };
    byte_vec_t sig { 99,40,40,102,10,17,219,50,216,207,89,134,221,43,19,25,95,78,132,23,187,51,191,198,170,121,248,161,240,26,144,56,51,138,142,211,23,12,151,28,65,205,235,85,78,196,248,157,94,171,209,111,31,234,146,124,133,75,120,215,58,223,205,241 };
    byte_vec_t pk { 4,166,100,254,142,124,131,242,149,195,202,104,81,50,103,250,178,161,129,3,72,203,171,150,171,212,128,157,13,241,35,109,116,68,5,146,84,230,252,105,202,88,184,123,23,163,118,183,154,117,20,22,231,174,46,179,146,208,205,96,55,231,59,150,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 451 ") {
    byte_vec_t msg { 2,62,204,252 };
    byte_vec_t sig { 148,133,63,41,36,216,188,14,185,178,115,108,151,117,62,89,98,175,72,211,161,3,157,194,111,11,125,202,179,146,224,187,231,86,104,52,40,135,34,7,198,216,19,133,98,76,150,6,223,37,0,205,243,160,57,32,151,188,115,230,117,148,121,51 };
    byte_vec_t pk { 4,29,128,173,123,134,9,156,17,21,251,103,107,7,249,219,123,163,119,186,62,234,124,14,114,155,159,70,99,2,207,210,223,135,132,116,227,252,190,184,80,42,185,114,58,191,110,68,62,7,72,86,77,49,26,40,26,198,170,136,159,196,32,193,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 452 ") {
    byte_vec_t msg { 251,69,192,91 };
    byte_vec_t sig { 142,15,207,90,53,14,50,70,224,209,103,114,9,223,150,67,148,251,210,98,154,158,89,246,62,43,33,156,94,147,196,2,122,56,118,114,6,179,249,125,127,88,146,144,47,188,87,245,61,15,22,214,61,68,232,6,8,172,55,37,17,134,144,114 };
    byte_vec_t pk { 4,89,192,44,13,238,85,235,68,148,172,33,119,73,193,222,210,120,38,243,166,165,185,218,89,178,248,33,9,217,146,37,41,5,13,139,240,105,45,187,218,89,137,54,208,143,147,64,170,194,35,69,223,17,169,74,33,10,112,16,184,65,136,221,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 452 ") {
    byte_vec_t msg { 132,153,228,152 };
    byte_vec_t sig { 218,167,130,229,202,202,244,36,138,52,121,135,253,134,59,133,68,89,231,48,178,93,191,52,166,105,94,12,22,136,40,16,25,60,143,180,225,66,173,180,103,158,75,55,143,42,83,182,237,121,82,170,112,2,218,50,177,87,168,162,210,100,173,130 };
    byte_vec_t pk { 4,144,207,190,251,151,27,231,149,130,53,160,24,195,130,249,16,4,150,42,84,66,211,162,173,82,146,232,129,12,128,98,211,115,145,191,232,195,198,198,47,70,111,40,227,96,89,16,174,166,206,112,3,138,227,222,230,123,118,100,149,224,191,253,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 453 ") {
    byte_vec_t msg { 68,125,239,6 };
    byte_vec_t sig { 53,59,115,175,88,95,210,87,159,103,45,189,166,216,163,122,87,22,225,20,60,205,17,241,9,171,191,70,234,179,70,48,68,47,42,129,50,162,237,249,92,184,136,159,100,47,244,118,48,99,2,122,209,110,68,57,226,116,79,32,40,62,222,101 };
    byte_vec_t pk { 4,63,239,95,234,72,105,73,54,242,115,255,49,122,240,75,233,168,215,92,145,236,189,44,30,28,231,191,66,42,102,167,254,50,221,233,213,202,71,43,119,1,221,30,91,230,66,119,97,177,8,167,173,146,161,56,108,215,145,27,155,192,236,33,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 453 ") {
    byte_vec_t msg { 97,195,245,38 };
    byte_vec_t sig { 204,199,179,12,188,58,41,123,93,229,56,52,74,224,160,13,145,97,47,164,55,234,201,58,111,171,0,56,248,160,161,142,228,255,203,116,142,144,222,19,108,56,75,235,149,162,254,96,99,141,31,168,11,41,42,163,104,28,23,69,12,128,40,171 };
    byte_vec_t pk { 4,95,127,46,47,248,85,196,110,11,182,10,197,17,77,147,215,209,15,189,120,48,65,40,252,98,84,63,243,183,112,150,93,93,169,35,0,192,4,132,230,144,57,48,203,219,188,66,140,30,61,190,91,1,191,55,11,9,180,30,161,209,176,225,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 454 ") {
    byte_vec_t msg { 247,242,121,21 };
    byte_vec_t sig { 241,141,84,245,57,113,68,214,206,8,50,124,99,227,201,163,191,210,219,116,87,98,117,58,181,246,1,108,17,244,113,158,218,174,143,81,143,83,245,244,221,58,80,116,108,161,1,218,247,51,242,226,72,236,49,80,136,246,64,104,74,75,222,186 };
    byte_vec_t pk { 4,179,85,36,107,0,242,81,235,21,89,181,159,20,8,5,177,248,30,222,50,73,175,146,228,183,239,249,229,161,206,209,7,228,7,51,235,50,227,35,210,254,123,241,63,232,32,149,120,95,72,27,37,3,159,57,14,202,69,223,193,40,23,3,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 454 ") {
    byte_vec_t msg { 222,252,131,16 };
    byte_vec_t sig { 104,28,53,109,51,191,120,152,6,185,242,72,226,180,195,45,217,37,147,44,163,238,98,196,22,59,68,202,30,178,191,200,153,140,193,156,87,91,134,19,48,65,239,195,75,96,113,145,244,243,167,61,1,113,196,82,226,255,48,124,34,244,197,131 };
    byte_vec_t pk { 4,137,118,198,143,21,249,241,96,64,59,179,182,230,23,15,147,67,99,160,72,125,224,246,170,207,105,184,218,24,174,153,49,212,118,95,192,70,199,196,189,115,30,101,141,31,125,236,254,217,59,176,147,149,100,213,204,36,104,194,35,45,221,59,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 455 ") {
    byte_vec_t msg { 4,48,237,57 };
    byte_vec_t sig { 125,84,136,67,198,117,82,161,236,211,113,47,14,78,224,254,177,62,55,242,96,141,24,39,240,180,150,229,92,178,230,180,2,162,248,252,110,95,55,176,24,14,0,84,205,234,56,88,209,125,123,191,36,240,34,1,28,108,168,10,3,37,27,66 };
    byte_vec_t pk { 4,38,34,211,15,252,51,164,47,90,45,222,9,122,5,242,49,200,71,187,133,238,6,68,36,174,65,215,27,227,151,147,254,134,102,238,234,235,213,201,75,142,217,156,24,154,53,183,254,167,150,146,176,182,115,92,250,22,61,239,204,73,144,30,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 455 ") {
    byte_vec_t msg { 249,109,231,11 };
    byte_vec_t sig { 136,99,1,120,45,240,82,79,156,151,36,233,84,222,57,148,164,124,230,212,228,67,118,51,64,212,112,194,130,80,196,226,144,9,59,73,243,253,1,67,180,184,97,243,89,65,175,134,195,169,171,216,116,97,148,238,215,6,141,222,213,197,202,62 };
    byte_vec_t pk { 4,252,98,165,0,143,150,231,96,141,112,56,214,171,59,37,20,21,141,187,227,4,111,206,192,232,165,149,254,1,214,41,2,46,2,67,227,192,56,170,190,95,91,113,215,221,228,197,89,189,129,141,53,21,164,235,80,150,90,195,123,178,69,30,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 456 ") {
    byte_vec_t msg { 208,22,0,15 };
    byte_vec_t sig { 102,175,109,56,100,25,211,82,209,41,221,92,170,115,146,183,252,97,112,250,75,137,189,45,110,101,53,49,188,255,239,50,205,156,56,203,56,230,190,61,247,3,23,242,27,185,153,144,235,129,54,192,59,148,97,250,244,57,215,241,81,23,83,92 };
    byte_vec_t pk { 4,165,230,79,218,68,83,132,114,151,198,93,51,148,215,4,46,34,252,102,113,130,195,193,28,207,255,37,31,172,202,75,48,162,133,52,177,81,225,177,204,164,147,235,244,224,179,118,113,181,65,198,114,20,77,15,110,100,57,144,42,148,20,5,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 456 ") {
    byte_vec_t msg { 225,117,80,132 };
    byte_vec_t sig { 163,25,186,121,192,68,33,129,68,26,107,214,10,202,120,214,97,30,156,15,123,86,174,13,233,157,172,8,23,230,132,150,164,35,27,81,205,154,80,68,227,254,205,185,145,71,79,105,1,195,161,200,65,29,207,244,177,72,233,113,107,207,147,121 };
    byte_vec_t pk { 4,25,110,6,191,194,10,217,197,171,29,228,152,244,61,245,188,5,170,143,5,100,216,112,230,61,68,188,162,157,12,27,56,90,22,239,81,16,114,19,164,77,177,185,217,42,129,165,111,6,12,70,145,4,244,250,251,238,236,143,45,176,206,58,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 457 ") {
    byte_vec_t msg { 105,159,113,72 };
    byte_vec_t sig { 6,251,239,83,76,50,21,250,116,86,44,64,50,233,67,123,116,93,138,208,211,15,242,222,151,63,47,101,134,139,226,249,63,153,234,102,154,213,131,122,127,157,253,221,25,141,224,230,114,18,174,83,168,179,157,200,121,39,34,59,157,232,92,2 };
    byte_vec_t pk { 4,92,198,227,173,199,112,226,226,89,94,122,170,230,123,14,203,242,97,111,163,32,105,110,36,215,219,153,136,77,192,66,0,184,237,148,142,216,23,222,199,190,222,16,42,248,38,20,105,169,246,196,48,118,203,115,198,179,38,207,12,46,40,163,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 457 ") {
    byte_vec_t msg { 195,54,3,210 };
    byte_vec_t sig { 186,138,225,52,228,254,54,190,236,131,2,206,28,234,104,252,6,238,109,201,7,92,85,225,182,22,202,162,91,121,236,10,47,216,241,84,4,81,117,235,42,13,73,186,173,238,27,157,140,177,31,24,118,75,14,186,28,84,26,54,248,20,198,227 };
    byte_vec_t pk { 4,60,81,23,18,116,70,252,148,49,155,178,129,179,230,96,208,14,132,116,131,4,227,138,204,95,31,229,38,212,150,127,121,19,74,180,127,83,37,153,143,167,117,97,13,143,96,231,141,19,173,175,191,125,197,94,8,239,105,82,143,5,70,184,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 458 ") {
    byte_vec_t msg { 56,47,89,175 };
    byte_vec_t sig { 74,90,108,191,210,135,188,209,38,65,196,31,50,132,8,70,240,81,181,0,33,170,173,252,210,193,26,201,18,206,255,219,158,35,82,29,63,67,115,151,62,66,166,171,80,59,82,209,111,166,229,136,187,12,73,162,254,14,77,74,25,145,9,114 };
    byte_vec_t pk { 4,79,255,108,56,89,135,187,194,118,118,159,17,73,218,75,151,203,65,180,125,208,94,30,45,211,202,57,173,74,149,54,137,128,149,53,47,229,35,22,47,17,157,187,191,103,60,198,173,223,215,172,105,198,57,54,11,22,137,28,138,77,36,111,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 458 ") {
    byte_vec_t msg { 58,146,73,141 };
    byte_vec_t sig { 170,43,110,62,74,65,25,79,161,136,50,78,40,22,95,123,222,228,99,84,110,55,118,233,139,9,191,52,168,94,219,17,62,150,110,216,175,7,84,173,230,233,209,109,218,202,48,247,12,138,176,98,135,54,13,219,109,220,172,108,102,59,44,215 };
    byte_vec_t pk { 4,139,56,63,74,14,98,204,185,209,25,216,59,111,17,181,132,122,252,43,5,172,124,148,50,95,63,14,22,82,73,128,100,49,188,164,239,196,173,98,44,190,154,159,189,8,187,183,198,201,108,108,194,168,187,103,50,107,120,160,231,49,240,67,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 459 ") {
    byte_vec_t msg { 203,109,184,4 };
    byte_vec_t sig { 25,60,179,242,82,113,31,21,98,220,71,58,167,246,189,101,134,33,229,210,143,90,46,255,149,3,194,197,243,148,69,218,63,128,65,173,71,19,23,202,91,136,37,92,214,36,4,212,4,131,115,33,167,62,86,64,217,115,128,5,102,17,145,127 };
    byte_vec_t pk { 4,180,137,140,132,196,165,240,37,41,30,163,102,187,181,159,185,176,20,53,66,21,195,22,32,222,0,69,88,154,33,127,76,66,89,153,20,115,216,205,194,158,203,53,167,250,224,95,90,48,131,193,26,128,164,150,97,220,251,205,45,148,239,2,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 459 ") {
    byte_vec_t msg { 99,54,244,236 };
    byte_vec_t sig { 20,128,36,27,7,213,165,53,190,58,183,191,50,186,207,226,228,1,158,42,78,210,220,183,182,94,99,202,17,242,133,83,150,80,74,90,63,216,181,255,139,118,117,181,142,83,251,186,237,34,47,129,94,162,159,152,130,101,216,176,202,191,175,110 };
    byte_vec_t pk { 4,153,17,160,93,206,62,70,223,227,0,30,229,233,167,65,42,16,89,239,254,193,200,174,197,175,154,132,89,121,36,153,255,92,241,73,134,213,61,163,210,47,189,242,24,79,64,117,147,85,97,216,229,138,151,244,161,36,59,152,185,74,0,44,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 460 ") {
    byte_vec_t msg { 170,166,234,101 };
    byte_vec_t sig { 161,0,10,43,70,103,141,41,123,128,57,167,7,77,190,12,131,7,212,132,188,39,154,81,144,178,12,102,17,112,234,231,234,167,156,147,68,203,82,177,110,125,156,48,165,134,62,21,39,81,132,9,125,173,168,98,222,202,237,66,131,251,75,238 };
    byte_vec_t pk { 4,70,243,209,231,146,23,114,246,107,57,73,132,212,18,158,190,72,206,230,209,202,65,36,68,50,169,205,132,90,165,55,159,82,222,42,195,162,88,220,37,35,57,175,3,82,213,235,41,165,7,20,4,0,132,108,172,31,156,207,70,189,25,95,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 460 ") {
    byte_vec_t msg { 152,3,7,90 };
    byte_vec_t sig { 34,88,51,183,222,157,221,158,147,225,152,246,5,42,110,52,131,92,117,128,235,7,239,124,228,158,151,232,251,39,228,69,155,199,156,106,181,13,155,214,1,10,134,60,246,160,239,173,139,24,77,155,165,182,24,246,115,117,253,206,79,165,120,107 };
    byte_vec_t pk { 4,191,247,75,209,42,84,189,238,156,76,58,42,88,74,82,183,71,16,222,13,236,132,43,141,119,83,34,168,61,23,108,248,253,6,254,177,39,52,170,154,255,148,56,26,14,21,233,72,186,147,116,57,208,106,23,216,48,48,240,217,142,119,120,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 461 ") {
    byte_vec_t msg { 16,113,106,143 };
    byte_vec_t sig { 23,184,187,222,248,152,226,78,216,76,35,79,56,217,89,10,45,222,92,139,181,80,141,192,111,244,197,210,105,148,201,152,173,248,228,120,205,109,162,169,149,53,7,159,142,88,44,127,21,100,117,226,180,44,174,147,27,49,153,153,32,227,167,213 };
    byte_vec_t pk { 4,109,118,43,73,68,40,35,255,79,14,240,139,253,170,173,229,98,236,237,174,121,221,220,238,225,208,208,155,78,72,179,140,14,226,84,107,193,48,139,210,141,32,187,113,191,183,206,170,48,142,203,78,1,103,247,180,40,70,125,63,127,90,25,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 461 ") {
    byte_vec_t msg { 105,123,2,178 };
    byte_vec_t sig { 242,67,248,76,57,140,242,26,135,177,186,21,87,212,58,144,216,86,62,142,93,201,252,200,114,233,52,74,19,251,95,94,68,4,121,125,248,75,196,157,109,10,120,46,121,95,230,181,250,159,169,79,36,33,175,12,165,18,245,170,214,76,18,65 };
    byte_vec_t pk { 4,50,22,144,136,138,143,115,12,211,224,223,41,119,163,20,237,75,122,207,109,72,238,49,211,206,59,43,67,219,18,5,210,156,212,196,142,138,197,50,216,217,15,179,66,176,160,116,230,133,213,230,170,237,132,182,235,159,78,243,94,235,168,140,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 462 ") {
    byte_vec_t msg { 183,19,239,2 };
    byte_vec_t sig { 104,215,28,16,198,111,138,172,104,138,215,22,51,146,207,226,67,47,159,103,184,250,205,171,186,76,241,114,216,239,157,74,41,11,1,56,11,126,34,100,41,12,47,224,88,77,173,76,56,36,142,148,19,171,37,120,145,204,57,227,166,242,169,105 };
    byte_vec_t pk { 4,70,122,140,71,89,134,68,90,113,16,209,7,221,2,122,56,238,15,244,151,168,138,45,203,71,94,119,161,128,101,105,61,205,6,247,17,71,40,127,17,192,141,185,207,229,19,179,193,241,198,8,9,140,160,213,222,251,43,13,25,43,14,32,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 462 ") {
    byte_vec_t msg { 42,22,131,191 };
    byte_vec_t sig { 71,23,68,140,195,8,112,205,144,213,208,165,158,92,105,102,225,103,214,171,24,215,72,115,56,231,168,77,151,194,206,41,76,115,156,30,156,173,222,94,206,201,220,169,124,238,52,250,147,45,93,118,65,218,179,250,37,20,157,246,88,247,67,208 };
    byte_vec_t pk { 4,51,47,25,9,65,217,48,190,58,116,30,187,248,22,0,35,43,142,215,64,140,150,146,151,112,209,54,168,171,22,198,233,211,105,33,217,193,22,28,201,196,111,103,140,24,155,80,154,42,29,234,108,184,10,117,168,55,118,82,155,192,118,122,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 463 ") {
    byte_vec_t msg { 85,121,235,160 };
    byte_vec_t sig { 190,72,8,99,214,115,161,246,183,3,198,148,200,10,56,244,224,100,130,187,85,139,120,37,92,148,21,198,72,166,172,106,156,198,70,238,28,210,230,217,39,17,19,235,72,163,144,239,101,86,144,98,251,146,238,135,64,103,78,209,109,247,251,190 };
    byte_vec_t pk { 4,44,134,153,204,15,210,109,219,161,189,138,43,58,236,192,98,181,231,3,175,52,42,109,251,112,137,144,106,206,206,166,61,108,172,82,38,198,30,246,204,248,233,12,165,215,72,72,15,192,179,17,76,115,34,177,12,7,250,42,158,132,20,83,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 463 ") {
    byte_vec_t msg { 223,47,103,5 };
    byte_vec_t sig { 68,208,119,146,248,55,237,243,108,255,44,90,119,117,180,196,97,179,174,136,164,71,10,82,18,96,121,62,33,7,8,159,6,75,88,251,95,197,214,225,236,72,231,194,252,250,59,147,38,228,196,150,15,241,45,56,59,170,112,118,123,69,234,202 };
    byte_vec_t pk { 4,236,249,30,177,122,0,215,104,65,212,16,248,143,76,99,16,179,50,253,111,119,130,49,244,250,184,9,197,206,135,92,72,82,66,28,28,40,89,159,1,218,184,30,248,20,27,186,18,110,98,106,251,102,18,88,11,118,192,136,43,84,12,182,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 464 ") {
    byte_vec_t msg { 43,169,43,55 };
    byte_vec_t sig { 63,234,178,26,250,216,65,203,5,111,127,102,126,246,237,137,179,41,223,252,54,229,87,137,111,143,218,222,244,206,62,178,59,32,207,156,164,71,165,167,82,181,185,100,81,25,43,198,233,144,188,248,192,50,40,78,225,10,193,92,147,136,48,64 };
    byte_vec_t pk { 4,141,37,254,233,116,60,121,224,72,122,147,73,253,170,54,227,124,84,165,136,167,180,85,207,105,157,39,136,25,12,58,54,60,207,19,179,15,225,92,153,167,41,4,205,225,85,196,16,120,72,47,248,182,185,32,161,119,155,197,35,184,141,214,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 464 ") {
    byte_vec_t msg { 173,163,199,148 };
    byte_vec_t sig { 99,221,95,22,197,153,155,79,18,120,65,233,112,212,57,1,90,229,254,229,159,72,18,9,16,26,45,152,4,52,78,163,120,173,177,101,106,109,169,169,45,246,115,119,52,246,125,108,203,42,85,122,129,96,76,36,223,246,191,36,155,252,233,64 };
    byte_vec_t pk { 4,45,181,182,185,134,183,109,86,102,43,200,193,59,95,157,57,46,74,88,85,57,53,1,81,252,3,103,163,74,53,100,39,207,134,230,19,146,240,206,42,134,177,202,155,170,106,22,118,19,214,38,6,15,33,25,88,164,8,122,239,196,161,166,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 465 ") {
    byte_vec_t msg { 133,215,140,29 };
    byte_vec_t sig { 101,135,45,134,9,252,211,60,35,104,253,226,23,195,209,249,157,3,34,184,177,163,218,98,142,182,170,78,109,186,14,3,150,189,85,24,168,213,163,76,170,144,57,130,198,32,7,180,30,185,95,152,231,175,78,157,219,59,46,21,94,161,180,140 };
    byte_vec_t pk { 4,92,141,128,15,127,94,13,154,80,244,202,116,144,18,103,92,220,161,48,162,247,130,189,23,110,163,254,194,168,241,85,228,198,182,92,4,234,143,109,9,8,49,147,143,204,17,227,175,176,181,167,179,35,107,11,102,69,251,123,199,83,214,221,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 465 ") {
    byte_vec_t msg { 194,56,231,102 };
    byte_vec_t sig { 2,68,116,51,183,242,134,86,124,226,152,115,113,66,115,164,114,104,21,157,144,145,253,106,159,181,119,194,191,138,96,88,138,83,61,24,24,66,128,225,109,128,5,26,49,47,236,10,12,27,177,25,189,21,206,58,0,191,117,213,132,17,42,134 };
    byte_vec_t pk { 4,105,232,154,37,130,42,59,70,49,92,159,164,215,218,194,132,88,113,198,202,131,255,175,45,29,94,64,149,30,86,107,108,14,58,125,112,41,72,55,253,188,0,153,159,57,9,213,114,52,129,134,222,200,239,27,22,167,44,254,48,69,155,69,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 466 ") {
    byte_vec_t msg { 77,15,142,34 };
    byte_vec_t sig { 214,99,209,81,145,49,238,44,14,10,69,189,213,136,156,160,49,51,166,247,47,191,193,209,179,64,161,206,225,210,5,182,216,89,162,107,24,241,179,98,157,239,214,69,153,222,124,134,244,225,29,142,198,198,137,236,242,198,101,194,195,44,43,168 };
    byte_vec_t pk { 4,169,68,134,87,193,66,223,37,107,106,72,46,56,97,71,204,116,198,208,75,205,173,67,161,251,46,220,200,202,89,196,106,90,33,116,97,74,253,17,156,28,20,39,147,206,208,84,184,229,61,117,188,136,194,66,198,193,189,164,8,226,9,208,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 466 ") {
    byte_vec_t msg { 8,5,128,146 };
    byte_vec_t sig { 237,174,167,21,232,226,252,244,162,56,94,186,220,0,45,47,153,168,174,64,181,21,135,234,120,203,21,223,43,22,239,148,53,116,162,3,200,24,61,65,72,137,96,249,96,38,138,45,38,81,92,114,188,186,82,138,202,37,168,254,109,8,87,141 };
    byte_vec_t pk { 4,80,32,231,12,208,17,71,241,248,85,94,32,102,190,219,88,185,77,201,64,218,140,15,97,234,35,132,16,154,202,84,147,0,32,196,17,169,182,12,39,184,106,4,79,92,199,122,215,48,190,186,110,252,198,151,206,190,165,248,54,146,106,249,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 467 ") {
    byte_vec_t msg { 32,229,248,129 };
    byte_vec_t sig { 167,254,84,165,126,45,237,19,82,232,115,96,1,95,22,56,122,57,195,22,255,136,3,186,169,248,125,153,73,240,48,33,33,217,176,147,194,145,7,149,40,97,187,222,235,183,134,100,254,222,157,194,120,192,254,238,129,98,18,32,22,92,29,200 };
    byte_vec_t pk { 4,142,16,243,17,241,64,129,84,70,190,7,156,198,5,64,6,0,1,129,64,157,82,157,165,236,238,49,101,0,14,169,60,132,246,5,124,231,120,73,58,102,52,5,4,227,67,168,125,229,124,144,132,137,135,70,183,172,209,145,221,248,3,22,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 467 ") {
    byte_vec_t msg { 101,236,49,121 };
    byte_vec_t sig { 165,160,191,81,251,73,51,255,24,1,34,224,200,158,128,7,73,24,88,158,226,39,114,249,43,59,142,175,37,91,228,92,34,248,88,127,95,143,228,79,108,218,162,161,193,82,202,157,158,254,4,78,65,74,111,162,235,107,8,71,245,81,41,18 };
    byte_vec_t pk { 4,95,151,75,155,193,111,159,96,117,98,126,33,108,82,101,182,43,70,47,98,85,107,233,144,227,186,129,200,125,144,70,254,121,82,243,137,171,78,182,52,21,240,159,24,27,219,208,215,57,105,0,89,12,10,234,151,1,190,63,8,119,157,44,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 468 ") {
    byte_vec_t msg { 45,225,108,123 };
    byte_vec_t sig { 250,188,232,29,26,229,250,224,108,240,236,3,139,23,249,253,110,125,206,45,47,165,147,140,154,170,96,138,213,174,166,3,176,214,60,252,193,67,181,105,5,103,253,205,24,18,252,247,33,49,135,15,173,64,111,254,230,113,153,172,203,203,103,226 };
    byte_vec_t pk { 4,11,182,7,49,110,14,151,151,130,140,253,34,255,109,8,125,204,248,17,104,242,98,9,162,189,214,38,54,176,7,95,107,231,219,157,43,126,7,132,50,25,101,177,222,200,142,174,26,191,66,152,164,232,132,100,71,156,221,75,144,133,252,126,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 468 ") {
    byte_vec_t msg { 216,61,178,207 };
    byte_vec_t sig { 145,233,181,64,41,161,139,78,17,96,255,126,123,119,8,180,128,56,255,135,3,60,136,87,194,255,222,212,39,158,47,33,52,35,8,147,211,8,15,154,221,77,26,147,68,100,198,54,50,138,193,18,249,38,190,245,6,220,89,54,165,185,68,38 };
    byte_vec_t pk { 4,130,174,49,6,54,170,49,38,170,62,160,39,146,107,196,5,93,1,82,188,152,239,53,20,173,110,196,54,55,70,142,222,89,88,113,167,5,58,108,26,62,142,241,148,5,45,224,227,95,181,88,22,33,161,245,253,203,120,43,201,128,135,181,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 469 ") {
    byte_vec_t msg { 209,190,173,55 };
    byte_vec_t sig { 230,239,53,144,15,226,85,254,167,96,94,99,232,220,54,253,80,237,164,26,133,37,129,178,89,224,82,26,81,66,123,139,197,36,17,73,116,58,196,195,231,52,61,1,185,72,225,39,251,189,2,58,90,118,96,118,142,69,190,73,1,135,138,246 };
    byte_vec_t pk { 4,168,69,198,117,184,254,96,171,157,34,86,228,104,218,170,52,248,12,202,129,42,147,248,34,164,240,176,198,179,104,35,69,213,136,193,109,169,161,62,21,190,169,119,193,97,103,245,107,188,35,12,212,194,200,210,40,57,33,116,10,190,242,245,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 469 ") {
    byte_vec_t msg { 226,165,238,140 };
    byte_vec_t sig { 245,97,24,128,179,35,16,174,192,223,186,31,73,149,83,184,51,183,134,140,187,154,42,157,16,247,90,65,208,149,171,58,4,253,93,29,65,192,120,12,64,35,15,86,157,86,221,152,200,76,157,157,143,216,51,91,128,147,43,41,117,66,76,77 };
    byte_vec_t pk { 4,211,161,87,168,201,185,37,156,137,11,175,29,42,126,115,225,211,25,129,62,72,244,245,18,202,150,173,233,127,87,7,183,153,254,174,72,152,16,43,42,73,110,188,159,26,241,25,250,175,10,179,172,95,236,77,130,26,48,173,137,49,110,13,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 470 ") {
    byte_vec_t msg { 250,110,205,38 };
    byte_vec_t sig { 119,7,24,99,20,194,244,196,248,124,219,86,8,169,4,127,121,9,71,199,127,72,52,117,141,150,128,86,16,19,138,134,167,108,217,242,167,217,34,192,32,79,251,135,172,224,60,50,64,201,102,161,188,114,142,220,55,251,132,253,78,132,89,100 };
    byte_vec_t pk { 4,110,73,58,77,230,204,242,123,147,154,156,53,174,27,255,233,43,34,21,3,29,74,172,212,16,248,119,174,238,238,118,146,198,23,77,164,55,11,201,45,161,201,70,108,227,169,232,126,18,117,1,12,21,27,22,22,229,230,124,174,168,28,43,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 470 ") {
    byte_vec_t msg { 25,247,111,15 };
    byte_vec_t sig { 37,33,42,244,154,7,71,156,143,190,129,183,86,86,45,151,133,73,155,85,27,148,195,239,197,65,233,185,22,5,181,122,38,235,177,78,232,98,35,86,110,126,198,83,214,211,60,109,46,248,115,255,244,58,166,139,253,19,26,12,108,41,58,173 };
    byte_vec_t pk { 4,1,113,199,127,189,101,15,44,178,33,188,160,130,90,125,211,70,61,167,175,101,152,184,139,142,86,30,151,41,159,71,105,216,156,22,8,134,255,218,251,23,117,15,23,206,22,75,57,195,1,184,81,34,55,99,58,200,104,65,69,145,145,90,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 471 ") {
    byte_vec_t msg { 92,29,23,220 };
    byte_vec_t sig { 4,212,180,122,253,79,95,23,16,116,24,184,191,234,69,83,59,142,195,203,184,199,9,172,156,43,225,23,26,170,27,174,175,137,5,139,106,91,223,240,12,211,224,109,135,63,47,77,222,170,64,216,247,214,149,221,203,2,71,18,31,47,204,102 };
    byte_vec_t pk { 4,141,118,135,101,74,142,182,65,169,48,255,232,3,169,198,155,75,94,199,0,129,45,0,193,81,189,185,207,240,151,155,25,148,138,107,3,109,202,166,117,20,110,214,247,249,100,74,139,97,231,211,89,157,80,133,97,139,32,241,216,118,45,45,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 471 ") {
    byte_vec_t msg { 214,104,54,182 };
    byte_vec_t sig { 179,193,16,41,29,11,73,174,54,249,88,193,212,149,170,236,102,89,95,113,80,71,180,164,175,188,232,38,206,107,20,220,120,177,221,186,249,190,251,246,53,252,53,247,160,122,192,136,64,91,182,66,96,125,223,18,162,178,147,190,248,24,73,40 };
    byte_vec_t pk { 4,146,79,109,74,104,34,115,207,10,242,75,22,81,45,44,0,71,190,73,87,228,27,229,3,249,19,222,141,198,98,85,45,120,64,86,166,200,45,166,179,104,136,140,121,243,184,55,229,91,116,182,53,226,176,196,163,75,118,3,117,15,26,212,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 472 ") {
    byte_vec_t msg { 177,215,147,31 };
    byte_vec_t sig { 160,49,86,51,29,221,207,104,162,101,254,59,102,227,0,151,101,221,179,22,69,2,75,146,255,142,23,80,13,99,56,150,73,61,62,11,251,74,247,71,114,120,249,5,162,53,251,28,178,8,191,159,208,21,148,129,251,194,149,13,217,246,195,139 };
    byte_vec_t pk { 4,249,175,11,17,183,249,77,252,0,118,204,98,157,26,121,4,83,58,55,125,28,87,86,195,21,156,172,4,137,5,98,119,65,236,242,209,59,59,13,115,8,93,161,89,1,175,80,168,109,76,148,207,84,5,171,228,238,77,176,16,242,252,2,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 472 ") {
    byte_vec_t msg { 66,130,217,137 };
    byte_vec_t sig { 174,253,175,37,9,201,32,203,25,59,213,5,54,26,250,102,230,173,165,119,122,198,246,201,101,16,148,43,86,191,180,41,19,193,57,190,127,65,75,207,139,234,114,175,82,17,85,248,4,141,192,45,253,88,113,167,0,61,245,52,32,180,168,84 };
    byte_vec_t pk { 4,65,161,249,138,192,70,93,139,213,141,160,124,193,204,213,223,136,91,17,212,231,49,7,59,190,207,57,141,99,181,55,166,221,61,1,170,45,28,101,143,164,67,216,69,156,171,52,3,252,90,253,102,60,72,190,77,127,83,229,238,11,10,102,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 473 ") {
    byte_vec_t msg { 208,202,200,227 };
    byte_vec_t sig { 115,90,4,166,117,164,57,231,82,50,253,83,8,145,4,181,204,114,208,199,70,94,141,243,57,0,217,62,249,28,236,178,126,156,62,223,146,185,94,224,35,0,234,163,27,34,55,118,56,226,11,7,56,75,170,171,75,224,151,100,92,220,27,207 };
    byte_vec_t pk { 4,188,244,131,136,206,166,40,43,193,197,84,36,152,69,128,227,55,233,212,79,119,228,155,55,126,87,193,6,84,6,148,227,249,134,180,70,204,245,57,127,252,180,31,74,81,240,11,190,21,233,126,85,101,190,144,231,80,45,187,101,113,210,206,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 473 ") {
    byte_vec_t msg { 55,228,187,22 };
    byte_vec_t sig { 162,230,10,117,13,128,235,68,254,15,147,99,1,216,214,143,0,72,58,155,53,167,138,28,93,110,194,235,99,201,60,227,37,188,12,254,156,28,105,198,244,32,217,33,232,99,61,68,200,150,176,48,35,74,236,251,197,216,241,125,72,173,5,227 };
    byte_vec_t pk { 4,37,217,80,122,99,108,33,163,143,125,40,141,118,178,205,52,218,42,117,140,152,147,210,110,87,199,33,154,50,235,152,185,177,52,65,247,41,149,232,2,104,56,105,103,151,17,178,13,216,122,33,23,109,200,7,122,72,134,206,248,66,148,56,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 474 ") {
    byte_vec_t msg { 191,71,160,133 };
    byte_vec_t sig { 195,50,230,192,152,30,177,158,88,179,49,33,8,220,78,60,121,246,115,168,198,81,97,63,133,13,161,173,218,71,89,41,173,143,233,80,16,125,78,33,31,75,175,152,186,0,122,75,5,209,244,216,105,43,194,53,79,17,107,96,46,68,118,148 };
    byte_vec_t pk { 4,209,60,158,41,255,117,181,131,250,27,36,43,15,90,220,219,218,181,202,187,193,146,67,92,203,159,66,201,183,203,123,115,115,161,121,181,78,70,28,187,177,234,179,89,224,191,35,169,250,36,153,67,144,110,113,129,132,103,237,68,230,62,103,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 474 ") {
    byte_vec_t msg { 212,217,103,85 };
    byte_vec_t sig { 111,172,64,73,7,159,72,31,69,103,81,119,103,72,97,158,78,201,169,68,213,243,27,6,160,10,29,249,148,162,23,208,149,27,169,136,10,43,133,93,45,190,196,94,179,15,181,127,15,32,119,147,216,4,77,110,42,42,66,45,8,55,140,56 };
    byte_vec_t pk { 4,165,27,211,5,11,47,1,110,85,61,87,162,141,59,74,69,190,180,133,113,80,205,118,199,149,0,90,220,8,60,131,221,81,78,245,159,175,78,111,60,232,89,226,89,108,57,11,76,152,98,82,190,243,45,68,185,207,112,127,49,3,126,137,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 475 ") {
    byte_vec_t msg { 101,98,255,127 };
    byte_vec_t sig { 62,109,52,216,186,236,85,160,88,26,107,188,117,2,55,92,186,56,115,219,168,226,233,99,246,165,194,100,234,167,81,82,94,214,43,221,134,44,110,124,239,0,45,57,200,199,29,255,185,254,165,148,21,150,178,53,90,98,138,222,117,254,89,251 };
    byte_vec_t pk { 4,91,211,29,133,62,168,214,236,119,73,244,27,74,0,161,241,88,242,148,42,161,43,124,201,125,39,71,192,65,24,116,7,40,228,166,156,105,101,239,176,32,0,2,56,205,229,16,211,129,153,127,37,134,80,101,66,245,2,99,0,82,47,181,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 475 ") {
    byte_vec_t msg { 175,195,100,45 };
    byte_vec_t sig { 129,211,163,124,134,98,102,221,208,141,87,155,180,89,44,82,132,121,6,93,222,131,246,2,13,169,159,243,121,117,98,107,2,247,237,39,222,201,82,10,196,221,206,63,228,51,135,246,226,176,211,13,123,58,179,22,122,189,248,54,77,247,29,43 };
    byte_vec_t pk { 4,153,246,202,112,25,142,203,100,213,96,123,30,21,88,136,41,218,108,4,194,1,34,173,82,124,155,252,162,163,46,242,244,91,164,65,47,241,30,169,96,149,47,167,212,142,41,83,118,198,213,120,49,104,209,17,119,249,228,29,142,84,190,81,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 476 ") {
    byte_vec_t msg { 19,252,59,22 };
    byte_vec_t sig { 86,77,157,242,224,39,115,9,228,165,68,193,24,254,4,187,187,140,32,25,54,0,116,121,9,248,92,172,76,187,8,209,58,40,158,197,218,12,30,139,161,53,254,159,39,164,142,176,49,36,28,33,220,36,125,250,238,3,253,148,42,131,66,166 };
    byte_vec_t pk { 4,194,100,224,150,157,237,39,5,210,0,119,215,21,135,253,9,226,79,57,48,93,109,174,68,82,63,34,76,237,63,193,155,87,64,139,213,122,84,38,64,163,249,114,67,80,110,253,174,243,31,172,147,182,104,179,109,229,222,159,211,189,172,40,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 476 ") {
    byte_vec_t msg { 253,238,253,83 };
    byte_vec_t sig { 123,145,111,99,45,199,246,19,89,166,6,73,170,141,227,8,5,152,127,244,204,2,228,190,168,165,152,186,177,193,117,52,58,21,132,3,107,111,104,231,22,129,67,45,23,178,11,15,237,70,44,169,20,66,157,190,158,239,189,144,106,60,227,25 };
    byte_vec_t pk { 4,86,59,93,246,8,149,48,29,14,208,217,93,242,51,111,145,182,85,240,238,12,153,219,16,91,103,224,168,94,114,19,111,96,145,5,185,202,68,163,124,255,228,92,132,100,169,181,163,235,246,112,230,111,195,168,114,22,50,65,167,81,5,174,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 477 ") {
    byte_vec_t msg { 112,95,89,194 };
    byte_vec_t sig { 154,29,243,229,150,201,236,249,60,124,119,80,60,32,226,113,124,23,101,69,131,205,66,17,177,234,37,154,254,255,191,172,52,98,124,53,97,133,47,80,212,209,29,244,223,189,145,121,43,237,36,196,150,231,211,234,182,38,197,40,28,228,109,92 };
    byte_vec_t pk { 4,49,184,87,15,216,116,25,11,168,54,172,129,83,57,64,90,12,82,174,90,222,191,204,95,167,99,224,223,199,137,127,189,136,187,222,197,199,139,48,180,254,66,248,56,106,91,8,76,157,101,211,165,29,80,114,239,21,8,244,127,50,91,4,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 477 ") {
    byte_vec_t msg { 185,168,51,76 };
    byte_vec_t sig { 40,162,47,192,124,149,53,174,178,56,175,47,183,150,150,68,63,19,127,150,66,224,140,241,133,11,19,176,130,228,16,243,155,156,95,90,30,164,246,132,45,70,84,250,100,116,76,34,198,205,24,6,87,182,186,110,73,123,80,152,241,224,174,59 };
    byte_vec_t pk { 4,157,28,204,188,31,197,224,225,7,207,200,213,145,45,150,102,0,65,161,249,189,244,189,244,3,139,52,55,211,173,56,106,220,15,172,115,170,105,134,234,63,248,11,193,211,15,63,137,25,168,229,218,12,101,7,199,222,74,225,156,163,110,30,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 478 ") {
    byte_vec_t msg { 204,120,206,77 };
    byte_vec_t sig { 213,137,239,32,176,64,199,237,100,133,25,120,80,19,214,233,13,48,137,102,61,44,34,67,160,12,199,45,85,88,104,140,214,220,191,14,207,166,10,73,83,22,235,64,88,226,73,197,9,181,5,78,105,217,130,102,77,15,134,190,11,52,28,72 };
    byte_vec_t pk { 4,142,231,23,204,79,56,106,244,218,28,235,219,128,110,65,236,98,255,106,220,138,37,139,49,87,131,22,51,82,227,127,135,235,4,57,13,106,194,45,20,176,53,122,191,149,254,32,2,46,168,81,218,192,65,158,237,250,185,246,115,55,96,233,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 478 ") {
    byte_vec_t msg { 219,99,70,138 };
    byte_vec_t sig { 214,243,10,43,130,218,113,143,17,19,35,120,134,38,127,48,232,44,160,39,118,166,228,27,0,10,195,254,75,181,116,144,181,55,81,235,95,1,220,93,156,160,138,226,213,9,0,208,38,174,152,166,95,40,251,84,14,102,255,176,173,45,163,37 };
    byte_vec_t pk { 4,104,250,217,135,33,194,29,135,125,214,173,170,224,78,51,202,27,43,104,56,105,216,113,41,68,44,158,84,127,2,122,78,110,198,211,163,238,52,77,138,179,170,36,243,179,29,113,97,68,42,42,58,242,106,17,100,198,82,63,69,28,58,209,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 479 ") {
    byte_vec_t msg { 45,251,198,113 };
    byte_vec_t sig { 193,173,167,8,232,148,126,235,35,120,174,27,217,51,223,76,68,195,77,85,78,202,232,236,158,85,201,50,229,252,197,183,33,118,171,40,77,184,31,116,205,217,45,199,255,203,190,173,88,17,75,5,90,228,75,135,66,28,4,125,131,80,69,39 };
    byte_vec_t pk { 4,151,224,10,152,38,252,47,116,145,237,37,100,77,195,30,129,179,27,160,93,42,125,117,237,114,107,195,173,237,231,123,198,165,133,218,66,254,245,164,63,244,4,150,134,150,97,152,116,173,143,74,72,243,46,186,181,149,235,232,222,171,247,30,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 479 ") {
    byte_vec_t msg { 5,177,66,42 };
    byte_vec_t sig { 87,81,216,53,14,171,90,112,73,17,108,250,105,240,215,216,61,74,55,71,93,109,84,252,73,53,21,210,198,211,13,212,6,48,157,27,247,200,20,46,103,141,39,179,67,1,191,2,200,244,98,118,179,161,191,139,148,83,208,215,36,154,168,175 };
    byte_vec_t pk { 4,126,60,162,168,194,145,103,162,53,79,76,100,109,109,80,147,199,171,136,110,51,239,97,142,241,152,38,78,85,250,168,181,174,128,22,181,243,101,99,35,180,132,61,61,174,44,139,62,166,175,101,228,146,42,50,224,243,221,61,249,85,159,43,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 480 ") {
    byte_vec_t msg { 201,139,29,230 };
    byte_vec_t sig { 251,207,43,181,199,115,99,18,49,5,84,29,65,119,14,16,158,75,185,250,70,160,241,38,10,147,98,215,45,68,40,202,40,181,174,103,42,199,29,154,131,228,6,47,165,24,37,83,36,113,195,95,243,248,106,107,146,181,251,156,122,166,213,134 };
    byte_vec_t pk { 4,37,45,117,253,217,138,120,129,55,236,250,160,144,143,209,211,12,18,229,88,64,217,236,76,224,28,92,11,102,58,172,147,217,242,131,6,148,226,177,158,161,15,186,75,153,70,106,60,175,17,165,247,251,179,222,109,49,208,133,107,114,1,59,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 480 ") {
    byte_vec_t msg { 20,181,187,47 };
    byte_vec_t sig { 71,64,147,253,172,199,203,105,229,203,85,111,5,79,223,249,88,51,109,67,236,244,200,226,9,35,63,62,22,234,108,43,197,153,95,101,23,247,215,249,123,244,0,211,43,114,201,182,181,161,172,93,125,76,55,72,138,150,186,2,51,106,205,234 };
    byte_vec_t pk { 4,184,118,95,179,147,185,107,68,210,127,203,13,151,80,86,33,63,18,182,41,17,41,218,203,148,196,117,229,110,33,180,134,251,15,168,156,46,17,228,184,118,60,168,241,50,42,150,28,235,24,124,85,116,157,148,142,29,7,59,222,227,8,57,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 481 ") {
    byte_vec_t msg { 200,226,241,144 };
    byte_vec_t sig { 158,241,131,217,123,237,239,83,48,227,25,236,227,207,96,178,248,35,176,211,125,249,97,127,64,108,199,110,81,185,171,17,16,44,125,232,158,52,87,47,48,4,161,107,64,80,128,65,122,195,108,43,125,13,214,191,61,221,179,205,137,46,65,22 };
    byte_vec_t pk { 4,2,208,241,160,67,242,99,130,30,64,202,205,117,70,147,110,121,174,10,74,17,203,230,62,85,9,155,75,194,244,223,85,38,96,101,168,156,37,235,43,117,104,219,202,169,2,178,22,25,72,102,175,117,204,59,77,163,39,145,237,108,102,39,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 481 ") {
    byte_vec_t msg { 231,239,234,121 };
    byte_vec_t sig { 246,196,173,78,20,143,146,0,235,191,14,132,103,206,221,27,128,0,193,51,117,135,70,35,156,230,128,55,185,165,191,84,242,65,81,94,152,169,99,3,11,39,91,233,216,61,14,119,77,206,41,152,86,235,106,164,102,88,246,73,51,76,211,40 };
    byte_vec_t pk { 4,57,133,103,179,148,144,85,87,235,136,220,33,94,28,60,58,101,38,174,194,111,102,54,242,199,9,53,16,249,204,201,225,172,165,146,62,86,194,157,37,171,93,103,104,131,248,82,253,211,9,212,64,152,210,32,181,89,127,58,0,39,211,74,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 482 ") {
    byte_vec_t msg { 231,29,57,43 };
    byte_vec_t sig { 109,112,210,185,249,212,13,21,154,241,158,104,246,101,51,86,170,14,168,189,133,101,208,97,31,22,26,238,127,213,224,195,0,213,16,69,70,93,53,47,83,139,173,233,13,69,171,231,5,73,176,161,169,28,225,124,18,103,216,146,172,233,82,79 };
    byte_vec_t pk { 4,108,32,174,126,169,75,180,31,215,150,141,104,209,91,42,161,28,86,14,50,250,10,174,165,109,126,145,169,195,9,163,227,144,24,72,172,126,7,118,209,241,88,135,203,152,122,57,171,249,225,40,8,53,232,191,101,171,73,6,70,20,78,50,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 482 ") {
    byte_vec_t msg { 163,41,213,57 };
    byte_vec_t sig { 6,207,47,82,152,242,61,57,151,110,214,94,136,201,61,29,243,54,91,85,142,10,141,206,148,217,38,129,247,179,207,144,218,16,39,42,187,15,51,235,62,140,124,24,169,159,46,225,114,89,237,42,208,56,41,190,93,189,220,8,77,23,195,207 };
    byte_vec_t pk { 4,153,123,110,198,5,133,92,137,70,242,14,194,32,157,168,106,23,50,152,62,102,218,71,246,122,232,223,101,246,206,138,243,175,167,22,254,202,158,238,2,77,169,97,69,129,219,200,190,32,175,131,174,103,119,207,148,148,120,127,138,109,16,136,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 483 ") {
    byte_vec_t msg { 147,82,186,226 };
    byte_vec_t sig { 195,157,42,126,189,1,14,90,16,84,215,35,80,101,164,39,186,184,145,70,242,113,124,46,249,157,73,39,236,166,232,100,106,137,113,134,229,193,208,165,47,247,98,127,8,240,112,220,211,52,149,108,183,135,10,124,37,228,131,206,46,144,117,160 };
    byte_vec_t pk { 4,130,219,117,154,21,207,89,50,228,131,205,177,58,96,23,49,136,39,70,118,28,239,55,64,14,102,33,20,192,32,104,127,53,37,84,233,59,251,40,203,214,246,93,68,53,185,9,12,138,94,126,247,81,240,49,141,23,168,250,44,246,37,112,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 483 ") {
    byte_vec_t msg { 227,123,37,211 };
    byte_vec_t sig { 52,2,27,163,3,75,158,55,80,239,125,66,133,73,238,2,27,211,102,15,225,164,27,50,84,186,242,64,184,35,62,213,30,194,76,122,214,109,213,87,86,94,246,31,118,4,240,26,96,7,193,71,185,165,228,15,214,169,97,163,179,27,240,249 };
    byte_vec_t pk { 4,104,153,202,120,141,135,128,91,171,11,195,86,222,195,35,125,224,84,236,91,23,123,194,109,251,145,138,14,90,90,32,43,144,44,58,164,190,127,30,207,63,211,127,144,213,206,117,161,67,239,133,11,242,12,161,140,219,223,180,197,218,72,0,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 484 ") {
    byte_vec_t msg { 205,70,236,222 };
    byte_vec_t sig { 197,197,31,94,174,52,21,1,78,48,213,237,224,219,27,90,140,180,162,154,121,44,254,8,224,115,220,71,16,135,47,203,116,251,87,126,208,177,188,131,193,124,253,102,36,1,163,25,91,182,11,78,76,185,1,248,39,186,225,190,236,195,173,157 };
    byte_vec_t pk { 4,197,96,74,15,42,7,33,76,73,161,50,118,255,168,224,76,187,232,98,146,67,30,89,17,83,231,162,142,29,168,1,96,221,154,255,177,61,80,136,217,241,255,92,87,80,152,96,116,38,136,249,242,121,178,153,0,170,119,196,254,242,171,102,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 484 ") {
    byte_vec_t msg { 93,42,181,117 };
    byte_vec_t sig { 107,19,28,99,114,136,132,193,130,214,42,83,223,207,37,218,30,205,241,98,37,140,216,235,89,7,114,78,230,169,56,169,64,52,142,213,27,12,232,60,15,28,177,230,14,190,82,114,203,240,219,205,86,87,99,64,81,23,152,224,183,171,67,200 };
    byte_vec_t pk { 4,103,235,66,80,29,251,232,245,194,34,96,109,179,54,224,120,220,120,153,236,71,43,238,204,191,78,157,13,176,120,210,111,248,241,169,89,189,127,3,248,171,119,44,189,178,27,75,206,126,107,216,16,154,209,136,172,39,241,28,223,57,248,73,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 485 ") {
    byte_vec_t msg { 67,32,13,60 };
    byte_vec_t sig { 122,193,179,11,208,41,143,209,186,58,175,208,73,106,205,24,220,211,47,71,16,131,76,117,11,231,223,11,91,210,176,35,253,244,78,74,15,198,204,157,126,20,173,130,206,127,114,27,72,19,204,215,20,39,33,69,59,189,19,208,155,46,33,176 };
    byte_vec_t pk { 4,132,144,247,228,198,25,106,156,209,66,189,20,87,210,157,250,110,101,97,219,108,166,84,54,127,201,165,222,240,187,191,22,59,71,40,155,39,37,178,127,39,97,88,208,87,254,114,53,246,19,236,175,100,194,61,100,39,214,228,122,101,42,193,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 485 ") {
    byte_vec_t msg { 255,218,233,118 };
    byte_vec_t sig { 239,164,171,27,22,86,135,78,254,145,50,82,118,129,153,163,245,231,249,149,219,161,236,49,177,57,199,45,19,65,92,25,136,104,63,198,116,55,219,216,58,205,223,143,62,148,63,116,225,122,160,221,28,151,39,84,39,237,151,178,146,39,60,115 };
    byte_vec_t pk { 4,73,236,25,233,181,1,199,46,231,217,5,16,214,247,79,223,136,79,91,246,81,71,21,167,194,99,230,88,67,126,190,158,248,231,203,76,142,243,203,37,64,47,5,91,215,123,224,218,16,251,93,80,163,62,143,244,53,112,89,64,85,44,77,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 486 ") {
    byte_vec_t msg { 84,146,228,198 };
    byte_vec_t sig { 78,181,125,94,228,239,38,56,157,86,91,147,25,31,10,21,26,110,110,50,154,204,33,190,208,60,78,91,114,244,226,208,166,124,14,33,122,224,242,229,44,62,46,204,15,217,221,111,243,124,206,138,174,16,164,122,145,108,27,132,36,218,63,149 };
    byte_vec_t pk { 4,22,19,122,75,188,59,227,162,114,24,38,231,25,203,34,203,211,154,221,90,191,80,129,245,160,163,21,206,176,113,205,209,153,143,157,24,235,236,104,58,171,247,233,50,130,89,20,138,155,45,22,217,127,196,23,109,251,196,177,56,34,168,46,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 486 ") {
    byte_vec_t msg { 52,162,68,202 };
    byte_vec_t sig { 205,218,94,165,13,80,1,58,73,98,23,50,17,45,42,80,64,168,37,17,187,36,147,122,43,115,118,226,157,33,12,191,137,158,105,219,140,109,100,159,198,157,161,240,239,182,225,139,238,48,89,158,170,94,178,120,186,63,183,153,33,126,159,237 };
    byte_vec_t pk { 4,58,79,98,249,195,19,10,161,72,76,76,194,129,252,154,123,118,228,6,93,20,194,69,111,77,203,255,13,171,231,3,193,111,134,182,207,151,224,50,102,196,122,41,221,26,44,249,157,184,93,0,122,164,158,187,181,239,210,69,45,168,177,20,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 487 ") {
    byte_vec_t msg { 29,249,201,174 };
    byte_vec_t sig { 187,196,97,209,94,105,254,140,199,207,118,81,19,21,32,95,180,250,56,62,101,152,75,82,106,22,19,164,17,104,170,255,233,69,203,215,38,13,240,235,181,217,94,127,204,63,225,200,187,66,156,155,226,164,166,162,136,210,102,152,242,90,55,126 };
    byte_vec_t pk { 4,115,237,95,11,234,109,5,219,108,62,17,255,229,99,239,47,55,239,66,161,127,76,243,113,13,216,204,81,245,126,31,205,137,112,69,169,131,175,18,173,53,120,12,102,197,95,102,201,66,206,70,200,251,18,212,131,232,154,96,84,0,251,38,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 487 ") {
    byte_vec_t msg { 16,117,105,117 };
    byte_vec_t sig { 197,227,6,24,8,44,153,115,82,147,243,252,34,44,221,72,194,71,141,85,42,136,122,43,114,29,162,71,233,200,231,23,58,54,189,31,73,15,191,97,202,187,199,2,93,107,40,75,124,174,247,119,168,113,58,8,11,250,108,81,198,165,248,57 };
    byte_vec_t pk { 4,107,165,72,110,213,116,176,146,6,95,225,29,28,118,66,234,79,0,6,207,14,18,21,162,250,2,223,154,153,40,218,223,118,197,36,77,240,46,192,52,108,222,47,178,193,230,76,190,94,33,69,142,197,48,73,194,107,196,163,195,231,155,124,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 488 ") {
    byte_vec_t msg { 162,62,45,197 };
    byte_vec_t sig { 145,33,219,118,81,245,244,23,217,5,222,212,20,187,187,71,110,83,125,209,230,139,180,30,88,132,78,97,100,154,182,129,189,172,233,236,232,96,97,80,59,209,75,112,138,176,213,109,27,205,26,207,93,161,36,81,104,246,188,55,228,50,20,194 };
    byte_vec_t pk { 4,12,146,245,180,21,194,31,75,215,195,245,213,38,229,61,231,34,195,151,104,164,197,109,178,221,94,169,72,239,211,193,238,119,136,39,91,40,208,46,58,209,180,45,179,255,132,43,72,127,209,236,153,128,217,50,246,97,218,40,169,73,147,142,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 488 ") {
    byte_vec_t msg { 228,142,103,12 };
    byte_vec_t sig { 100,150,62,209,101,164,132,230,53,236,214,144,54,214,206,75,11,134,193,14,82,110,171,157,228,193,190,84,130,111,152,103,192,241,108,136,65,173,180,58,167,123,189,49,157,9,128,232,205,71,200,78,26,28,73,23,118,18,221,127,72,241,182,208 };
    byte_vec_t pk { 4,41,218,0,110,187,139,102,142,196,28,251,77,92,245,240,110,86,57,93,204,64,194,90,114,126,78,202,55,218,41,216,196,208,98,212,18,156,91,164,56,250,59,33,14,125,182,82,226,138,50,164,90,170,80,254,252,15,233,201,211,0,76,237,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 489 ") {
    byte_vec_t msg { 216,88,135,146 };
    byte_vec_t sig { 13,19,188,198,93,109,23,61,73,127,92,234,62,96,155,129,14,138,12,205,215,168,40,83,85,171,217,20,93,97,251,85,22,134,177,95,212,173,21,45,115,211,234,239,85,192,101,92,247,112,197,65,31,174,182,169,209,92,199,52,255,125,221,136 };
    byte_vec_t pk { 4,106,143,158,39,232,232,208,88,253,153,246,194,125,175,41,234,192,141,235,15,217,143,22,104,163,154,172,24,8,174,195,155,224,33,249,0,92,15,213,57,151,4,19,132,121,50,238,13,49,213,240,102,154,193,119,115,177,37,153,253,121,157,70,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 489 ") {
    byte_vec_t msg { 224,167,236,167 };
    byte_vec_t sig { 197,217,94,47,67,170,137,121,131,230,156,132,233,146,205,224,212,248,26,51,230,223,211,137,117,186,106,232,250,240,58,52,55,160,214,200,109,242,197,85,192,148,52,253,15,176,62,64,122,181,176,234,181,55,190,244,26,75,133,169,246,155,231,33 };
    byte_vec_t pk { 4,13,73,64,157,161,212,157,88,54,233,112,201,89,179,130,18,9,255,187,10,29,145,151,228,236,213,43,182,206,163,55,70,13,107,246,34,252,215,162,86,24,65,22,34,37,67,44,96,0,93,40,202,99,132,75,90,16,45,159,202,158,114,54,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 490 ") {
    byte_vec_t msg { 1,218,188,140 };
    byte_vec_t sig { 128,98,18,39,233,247,10,243,61,5,13,13,62,11,43,139,21,117,109,104,101,21,201,72,84,79,82,223,23,148,247,57,221,54,237,13,117,125,76,193,168,46,140,210,160,145,46,131,20,66,245,151,61,145,58,152,75,119,112,30,160,46,228,212 };
    byte_vec_t pk { 4,205,19,106,84,189,87,96,90,91,88,223,249,140,68,226,37,50,175,131,251,34,219,33,148,42,85,2,208,163,157,120,244,255,224,113,49,30,11,36,161,233,149,43,150,233,220,111,74,129,214,22,38,203,247,57,221,136,50,16,207,59,184,72,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 490 ") {
    byte_vec_t msg { 4,169,27,190 };
    byte_vec_t sig { 167,79,97,165,99,63,196,228,120,130,161,247,125,125,87,141,218,234,25,157,21,249,67,137,220,129,87,205,138,89,54,237,27,56,226,186,192,112,90,106,96,135,143,55,45,243,148,217,160,57,248,90,104,95,112,19,34,89,122,1,201,39,75,59 };
    byte_vec_t pk { 4,245,116,248,233,4,36,83,189,177,58,11,125,179,81,115,37,18,140,131,26,228,164,195,16,65,232,107,165,226,211,67,215,37,158,36,154,82,207,229,228,146,41,153,88,161,58,206,164,3,182,178,192,178,145,162,192,28,51,134,5,17,186,193,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 491 ") {
    byte_vec_t msg { 129,17,102,234 };
    byte_vec_t sig { 147,175,28,95,207,36,125,71,157,79,243,213,92,226,157,35,247,202,69,148,9,74,109,99,155,127,107,170,235,204,142,170,18,243,82,61,70,97,99,96,102,76,102,58,163,114,53,17,111,94,190,239,72,180,230,225,253,166,241,182,234,209,67,147 };
    byte_vec_t pk { 4,71,23,174,11,202,223,142,177,217,203,29,198,65,14,47,225,152,208,12,148,169,51,17,140,105,184,34,189,32,126,104,242,178,165,218,50,167,11,188,178,48,15,230,45,128,84,72,186,89,100,155,216,137,232,191,95,136,251,146,234,190,67,16,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 491 ") {
    byte_vec_t msg { 132,247,66,24 };
    byte_vec_t sig { 238,130,113,239,60,16,131,99,162,106,94,203,201,154,35,4,27,163,179,15,192,236,191,253,141,198,61,179,2,40,247,182,6,54,205,16,1,150,37,136,10,79,212,98,23,101,202,71,64,238,143,12,198,151,162,178,104,13,57,143,235,128,232,10 };
    byte_vec_t pk { 4,161,117,241,27,82,73,2,225,18,1,34,190,75,248,63,116,53,217,36,130,217,73,41,247,176,237,74,66,176,103,210,150,107,93,230,5,13,209,7,176,208,13,115,183,250,203,45,94,47,43,63,90,67,248,60,221,205,154,115,46,110,56,169,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 492 ") {
    byte_vec_t msg { 249,42,248,247 };
    byte_vec_t sig { 241,40,197,37,169,141,63,39,122,24,217,113,147,189,179,135,19,194,199,25,120,84,13,99,26,72,74,36,224,53,186,84,176,181,186,99,227,4,51,88,141,176,213,56,97,4,250,95,64,135,196,193,171,38,105,101,141,93,93,224,176,44,99,162 };
    byte_vec_t pk { 4,9,212,138,114,196,91,60,85,46,183,48,17,177,163,208,63,220,188,202,203,45,180,53,242,17,8,84,123,80,243,144,130,221,111,253,241,78,72,243,126,226,116,64,69,223,158,117,207,235,50,126,192,111,239,152,156,133,63,139,150,26,24,198,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 492 ") {
    byte_vec_t msg { 133,50,195,182 };
    byte_vec_t sig { 165,58,35,128,62,116,90,105,207,23,209,104,157,141,112,180,93,41,167,33,171,244,100,85,185,160,198,18,77,202,171,140,72,220,155,39,100,25,239,13,61,25,192,1,128,240,18,159,51,237,128,60,58,92,100,26,234,65,203,10,52,40,58,120 };
    byte_vec_t pk { 4,92,113,229,50,97,138,115,230,77,139,80,243,27,48,239,64,108,17,235,126,254,229,101,13,46,236,200,186,37,214,133,39,122,206,239,81,163,83,195,42,254,61,132,161,25,140,18,233,206,57,177,224,171,127,7,212,142,60,161,175,207,172,137,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 493 ") {
    byte_vec_t msg { 228,120,175,195 };
    byte_vec_t sig { 248,136,152,182,249,172,227,133,201,175,150,70,92,1,184,65,194,164,46,208,60,55,235,109,93,95,25,71,233,112,157,151,44,201,94,248,104,12,11,152,106,119,146,192,159,75,19,11,75,225,199,213,163,87,200,178,133,238,138,179,93,245,111,228 };
    byte_vec_t pk { 4,119,18,134,3,167,178,26,116,234,185,209,68,20,149,157,7,133,38,62,117,127,79,209,143,234,93,58,242,142,55,28,127,122,77,53,78,63,200,45,191,161,228,219,212,147,9,63,14,33,17,253,230,222,176,187,90,251,95,113,26,71,69,119,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 493 ") {
    byte_vec_t msg { 5,151,26,23 };
    byte_vec_t sig { 242,61,75,235,109,222,114,46,242,223,125,247,247,87,208,31,251,216,231,6,248,252,157,104,169,12,119,199,17,115,30,59,87,169,128,238,187,236,209,227,121,179,64,212,146,222,196,174,236,243,148,120,128,221,40,19,68,80,136,6,76,50,94,100 };
    byte_vec_t pk { 4,125,185,247,192,185,67,2,98,55,18,247,238,157,118,30,74,88,116,138,143,85,10,93,85,74,69,20,152,163,225,33,98,231,206,169,105,39,153,145,74,42,128,47,233,17,245,65,172,85,63,165,205,176,7,49,108,24,179,194,159,97,125,30,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 494 ") {
    byte_vec_t msg { 8,106,20,224 };
    byte_vec_t sig { 252,229,165,92,76,168,105,150,182,73,24,185,227,222,156,129,80,48,116,5,196,188,5,157,156,253,95,26,136,197,71,174,100,103,240,128,86,68,168,21,147,75,107,250,253,212,86,212,94,64,184,38,226,3,37,68,111,225,206,22,204,11,217,196 };
    byte_vec_t pk { 4,110,11,166,24,32,208,77,126,73,38,76,237,6,241,66,228,173,219,101,144,0,111,127,250,64,96,222,136,129,253,27,85,58,179,100,39,197,113,160,231,125,102,239,119,34,60,202,162,31,178,80,19,115,199,30,200,225,113,60,200,215,21,8,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 494 ") {
    byte_vec_t msg { 95,52,174,73 };
    byte_vec_t sig { 59,130,9,91,251,247,74,166,172,170,47,198,200,126,61,52,137,248,51,171,8,6,105,98,228,202,81,127,60,52,238,178,183,93,248,141,68,34,67,15,81,152,253,58,116,57,38,208,113,82,107,142,203,9,170,11,77,36,5,117,103,117,153,156 };
    byte_vec_t pk { 4,113,122,0,43,234,219,36,4,106,169,155,44,142,91,220,166,35,171,151,71,181,44,176,215,181,182,187,7,99,40,227,87,247,248,72,194,145,58,125,182,9,183,38,51,244,193,91,30,136,219,136,128,23,216,201,124,172,167,192,6,59,124,139,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 495 ") {
    byte_vec_t msg { 252,176,16,31 };
    byte_vec_t sig { 10,67,67,129,113,146,3,232,50,194,172,133,172,255,204,141,89,15,205,2,185,175,210,246,86,168,247,148,42,41,39,116,124,158,218,185,97,77,129,225,176,59,89,93,52,144,64,216,180,166,188,19,15,55,108,145,109,118,214,195,251,21,164,84 };
    byte_vec_t pk { 4,195,4,5,116,122,83,17,202,243,26,56,112,200,85,184,202,216,28,183,221,202,184,239,31,24,79,190,111,151,232,121,58,112,214,89,89,3,189,117,85,7,214,139,196,185,78,160,82,4,166,241,163,2,231,136,217,183,191,204,66,154,185,72,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 495 ") {
    byte_vec_t msg { 204,154,2,166 };
    byte_vec_t sig { 193,204,171,213,21,4,222,235,63,115,71,103,72,137,207,237,111,217,104,205,250,246,250,96,25,220,196,243,97,146,16,208,95,201,4,149,67,63,70,2,38,62,234,163,169,182,231,224,205,28,55,247,185,106,238,220,222,99,25,71,124,85,41,39 };
    byte_vec_t pk { 4,107,119,37,167,11,96,168,145,102,253,80,17,136,194,88,200,120,249,120,206,100,83,114,251,56,240,158,103,242,155,49,250,248,138,136,171,65,31,18,156,221,52,221,46,248,150,1,253,87,246,57,214,154,247,164,193,104,165,151,160,54,225,37,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 496 ") {
    byte_vec_t msg { 146,194,242,48 };
    byte_vec_t sig { 115,78,173,233,144,41,176,4,103,33,233,72,25,214,176,10,10,218,92,164,23,164,252,233,130,12,115,173,135,239,111,213,48,149,54,144,230,40,211,160,56,221,74,112,200,186,202,237,109,100,143,189,124,116,109,54,40,244,99,21,235,82,152,121 };
    byte_vec_t pk { 4,253,51,53,209,144,206,87,81,185,173,79,200,59,188,175,235,59,133,10,193,198,7,56,188,181,198,187,99,46,167,91,241,117,80,108,176,186,51,103,218,187,42,144,71,94,115,166,213,236,107,94,54,241,176,209,184,10,230,249,229,127,94,52,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 496 ") {
    byte_vec_t msg { 83,81,29,15 };
    byte_vec_t sig { 235,156,43,210,29,106,166,221,238,184,30,133,135,40,74,19,94,92,11,223,180,173,156,231,167,66,62,116,239,231,208,223,50,60,199,209,34,97,180,93,179,120,15,49,47,48,202,250,79,119,38,150,180,124,49,204,143,214,126,219,159,245,254,29 };
    byte_vec_t pk { 4,80,82,157,92,154,123,182,86,67,75,41,8,211,233,67,185,58,119,180,19,204,39,27,152,99,154,7,85,16,124,31,79,158,209,106,167,82,170,12,170,101,48,91,131,244,10,113,161,189,37,234,247,221,128,169,239,79,205,167,214,95,175,195,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 497 ") {
    byte_vec_t msg { 51,56,46,114 };
    byte_vec_t sig { 225,32,100,216,206,227,176,14,31,225,101,252,9,160,246,175,65,182,157,164,185,131,50,67,186,109,121,66,40,154,120,8,48,199,11,214,149,22,252,153,202,236,192,144,194,173,60,173,43,54,184,164,108,7,58,21,122,97,18,172,163,172,62,117 };
    byte_vec_t pk { 4,252,173,153,226,205,220,135,173,225,32,196,129,14,136,247,233,210,18,4,207,104,128,255,130,89,141,182,45,205,51,146,96,252,9,236,191,150,226,102,73,130,218,20,25,138,181,198,215,32,6,203,61,80,215,98,247,166,120,62,255,116,221,38,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 497 ") {
    byte_vec_t msg { 219,181,122,25 };
    byte_vec_t sig { 56,218,235,158,148,30,249,152,98,255,220,68,78,113,6,195,172,13,164,247,40,195,144,250,25,172,204,164,182,38,63,112,237,138,30,174,7,218,212,160,59,152,240,96,87,153,191,23,248,108,224,118,22,60,44,20,144,94,63,215,224,114,38,68 };
    byte_vec_t pk { 4,125,136,254,185,228,229,124,50,94,8,168,162,161,71,1,73,187,119,97,100,227,12,250,94,130,145,28,199,36,1,55,235,158,20,122,170,84,75,95,56,169,70,1,175,153,185,155,174,208,227,255,189,55,196,246,11,109,181,208,107,100,95,86,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 498 ") {
    byte_vec_t msg { 33,83,137,248 };
    byte_vec_t sig { 120,65,85,159,153,176,219,124,22,235,241,247,43,136,180,16,69,194,245,231,183,48,75,153,138,31,73,0,41,76,176,94,244,8,227,255,123,224,113,125,164,197,50,141,3,68,188,158,76,124,176,113,37,44,114,223,174,116,79,100,108,68,124,200 };
    byte_vec_t pk { 4,238,230,82,242,84,200,216,48,77,222,125,39,166,245,251,62,210,77,104,166,237,35,166,216,178,35,87,74,64,67,190,149,221,50,13,191,66,249,144,31,43,29,133,110,143,209,36,106,159,156,56,91,238,45,4,45,215,176,61,167,217,46,168,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 498 ") {
    byte_vec_t msg { 165,57,31,113 };
    byte_vec_t sig { 110,86,64,190,151,52,239,54,239,136,188,54,194,90,171,174,249,69,117,184,61,123,99,153,224,159,22,4,202,150,81,33,82,97,124,203,13,218,125,170,163,238,107,173,113,144,69,126,114,248,103,118,186,150,173,240,32,32,61,73,85,46,68,48 };
    byte_vec_t pk { 4,205,2,217,92,133,171,47,160,62,208,135,77,11,102,107,233,18,146,255,190,156,181,169,12,251,229,152,165,52,62,132,189,4,69,250,240,102,232,146,16,242,89,53,227,189,14,211,94,142,187,24,226,132,112,88,200,208,14,130,145,67,134,180,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 499 ") {
    byte_vec_t msg { 21,129,71,232 };
    byte_vec_t sig { 176,204,232,136,202,91,242,107,88,82,208,96,129,128,142,110,165,215,82,153,93,253,56,215,13,190,105,200,197,114,228,85,233,22,150,188,61,214,10,181,172,57,129,19,234,105,74,81,30,68,123,211,251,200,40,173,38,18,231,47,140,134,142,175 };
    byte_vec_t pk { 4,88,94,41,37,227,130,93,186,221,209,78,121,182,56,57,67,81,192,96,21,240,232,251,130,207,217,177,125,185,68,25,6,135,162,110,88,42,69,45,55,147,132,103,118,204,227,197,177,127,87,180,29,136,62,212,45,169,21,123,11,238,93,88,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 499 ") {
    byte_vec_t msg { 58,140,51,62 };
    byte_vec_t sig { 108,203,28,223,15,108,253,146,188,37,123,137,202,40,98,101,194,249,50,167,67,104,65,35,197,168,230,209,80,218,70,10,101,121,183,208,67,237,119,193,15,171,103,41,234,71,117,133,210,69,52,77,204,78,148,49,236,221,49,193,57,239,130,8 };
    byte_vec_t pk { 4,105,170,161,77,176,182,185,21,211,111,6,171,34,96,115,192,117,247,157,65,40,174,6,81,185,191,155,222,5,154,198,66,10,92,94,205,80,115,179,141,174,231,198,33,112,200,79,202,12,79,70,70,222,125,103,116,6,141,167,82,126,80,78,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 500 ") {
    byte_vec_t msg { 29,81,4,54 };
    byte_vec_t sig { 124,118,253,245,126,213,112,183,38,31,150,248,190,67,44,121,107,178,10,102,23,179,183,71,112,192,35,32,198,183,161,169,228,146,94,215,242,58,164,94,0,58,238,31,138,158,9,217,233,59,184,244,166,124,239,254,78,61,145,49,254,9,177,50 };
    byte_vec_t pk { 4,56,62,224,154,206,143,192,232,74,178,57,52,7,253,21,12,130,116,126,199,203,6,216,158,208,29,191,148,77,108,228,32,56,0,230,61,123,240,217,198,223,229,251,90,205,194,123,143,210,150,205,137,45,103,139,14,0,4,198,52,103,207,248,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 500 ") {
    byte_vec_t msg { 212,87,213,156 };
    byte_vec_t sig { 74,170,164,98,204,18,25,216,118,208,15,169,20,14,14,76,248,159,230,37,21,4,2,111,184,108,184,115,220,8,152,181,223,162,231,155,51,104,180,70,108,16,166,141,191,185,53,65,240,170,134,88,117,194,210,138,45,250,103,193,120,127,225,70 };
    byte_vec_t pk { 4,147,126,231,190,3,206,33,228,160,249,234,138,171,254,9,199,154,16,225,39,233,214,148,91,23,223,128,63,238,91,204,177,125,181,246,116,191,227,33,198,74,87,2,192,14,253,85,95,237,162,42,143,32,239,46,136,76,14,98,118,36,84,243,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 501 ") {
    byte_vec_t msg { 107,121,180,210 };
    byte_vec_t sig { 13,100,148,104,20,58,140,73,31,177,59,141,186,243,232,14,216,68,55,113,235,87,227,204,189,117,169,144,152,17,131,165,148,220,231,176,196,154,43,42,115,142,157,148,123,222,109,222,225,116,236,132,15,224,202,224,38,34,212,113,31,73,212,69 };
    byte_vec_t pk { 4,187,25,16,138,32,142,141,76,61,251,210,58,171,59,150,21,47,127,136,34,97,212,94,222,68,95,75,142,118,117,85,172,2,118,188,216,24,53,102,75,34,137,129,26,102,173,201,192,33,253,21,50,47,61,101,60,172,86,33,182,113,52,212,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 501 ") {
    byte_vec_t msg { 116,142,24,233 };
    byte_vec_t sig { 243,122,101,83,186,223,49,227,159,207,176,35,88,17,39,25,125,235,100,189,86,6,64,89,248,205,141,24,213,5,220,66,85,75,89,100,64,166,68,195,132,49,121,166,67,166,98,204,35,98,115,171,100,165,8,58,83,23,188,32,2,251,184,126 };
    byte_vec_t pk { 4,123,161,244,51,79,121,212,133,43,190,232,227,207,234,22,244,8,120,44,129,164,251,126,129,89,195,146,234,30,240,3,79,85,250,149,22,26,86,32,199,231,83,177,226,181,145,179,67,195,28,133,43,189,23,250,214,93,34,124,206,191,113,177,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 502 ") {
    byte_vec_t msg { 70,87,119,175 };
    byte_vec_t sig { 22,165,147,133,222,44,148,243,147,225,158,134,253,214,220,234,161,140,229,121,247,41,126,123,2,25,64,182,209,108,17,49,13,244,239,216,23,24,23,154,129,27,56,80,39,152,133,37,189,220,195,6,220,240,150,128,148,178,155,180,10,189,171,197 };
    byte_vec_t pk { 4,83,131,31,186,114,109,224,34,183,253,84,36,76,199,189,39,6,3,187,23,41,230,34,26,67,159,209,219,233,115,195,230,57,180,10,18,222,156,147,174,68,119,167,189,10,29,245,228,86,135,183,103,103,154,152,104,126,104,125,44,42,169,84,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 502 ") {
    byte_vec_t msg { 253,156,181,162 };
    byte_vec_t sig { 75,74,43,186,30,9,232,113,206,82,79,178,90,86,81,112,95,55,132,184,59,81,253,160,232,236,88,210,226,2,216,39,109,27,7,39,225,23,141,45,5,210,210,252,58,82,229,255,173,209,64,26,214,106,115,142,186,240,198,116,204,254,197,148 };
    byte_vec_t pk { 4,177,57,131,44,91,116,197,54,212,7,79,149,7,6,36,111,83,51,237,2,139,125,47,149,57,235,199,139,80,10,60,161,248,6,254,123,163,69,58,152,230,243,230,34,182,102,101,27,162,250,193,251,220,179,232,170,18,130,255,122,10,169,179,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 503 ") {
    byte_vec_t msg { 219,94,189,156 };
    byte_vec_t sig { 252,222,117,101,168,85,39,229,235,40,239,143,173,165,23,225,41,113,17,79,151,221,230,212,116,171,187,199,87,235,228,77,182,71,62,123,113,82,169,185,106,7,243,169,245,130,174,62,119,116,178,121,240,68,253,146,33,224,234,68,184,133,152,215 };
    byte_vec_t pk { 4,136,89,71,187,240,45,214,96,33,137,106,125,167,140,131,80,164,250,105,12,72,174,72,241,237,71,22,179,83,89,139,202,238,98,70,66,171,67,89,138,54,118,94,167,198,84,8,4,122,160,159,11,198,19,39,81,68,95,189,24,82,173,185,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 503 ") {
    byte_vec_t msg { 149,30,108,183 };
    byte_vec_t sig { 248,198,245,12,5,96,119,21,234,240,20,56,79,56,254,88,4,27,160,200,198,44,138,43,45,100,109,133,143,79,179,136,119,117,8,189,49,136,111,67,105,128,60,31,164,181,144,230,2,68,56,187,196,54,1,224,228,151,124,123,172,147,208,121 };
    byte_vec_t pk { 4,154,29,210,29,165,141,107,244,95,97,35,243,73,117,109,60,199,28,152,240,46,191,64,58,91,193,182,165,129,251,51,147,32,210,201,207,214,251,28,5,104,207,233,204,219,89,236,253,19,113,193,246,188,144,125,235,2,146,183,16,27,84,54,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 504 ") {
    byte_vec_t msg { 60,235,162,39 };
    byte_vec_t sig { 133,115,46,124,9,215,154,195,216,147,202,194,160,128,134,109,15,138,226,151,107,166,218,103,149,63,140,213,145,10,165,219,120,174,84,108,235,225,76,46,112,176,187,61,160,201,106,142,104,225,26,49,221,242,52,25,148,53,34,39,233,197,224,182 };
    byte_vec_t pk { 4,130,72,97,17,56,70,244,26,229,202,113,109,189,180,153,142,236,147,90,27,63,156,148,91,41,1,57,194,129,20,107,92,188,150,218,4,86,91,114,176,67,161,218,121,109,155,135,227,2,58,75,88,85,179,131,161,125,213,121,228,217,228,182,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 504 ") {
    byte_vec_t msg { 153,149,142,184 };
    byte_vec_t sig { 235,218,108,141,226,204,12,238,32,46,3,144,123,51,178,64,65,134,183,34,250,101,23,148,178,156,138,222,72,70,74,13,106,79,212,238,91,82,20,163,204,178,108,148,232,56,129,126,211,9,65,26,228,158,28,109,162,180,198,44,143,218,149,206 };
    byte_vec_t pk { 4,16,228,59,47,161,252,23,66,194,2,66,63,28,166,146,98,164,34,226,237,32,154,148,137,106,100,56,40,158,159,11,215,41,177,94,184,140,33,207,127,36,248,156,216,156,135,30,3,36,147,232,69,34,98,252,84,160,169,229,33,144,101,201,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 505 ") {
    byte_vec_t msg { 96,167,101,75 };
    byte_vec_t sig { 9,171,206,159,148,201,208,238,117,154,253,51,142,39,12,240,103,254,2,4,147,228,5,143,230,13,126,134,112,162,20,162,18,151,24,80,52,241,107,163,60,20,228,55,50,219,87,46,156,81,97,129,74,251,17,29,80,229,170,180,251,165,69,140 };
    byte_vec_t pk { 4,143,88,173,25,48,43,128,247,179,6,150,67,190,212,104,35,114,115,155,116,63,195,43,38,128,47,97,38,68,207,232,78,207,8,98,11,34,199,138,187,217,121,47,253,23,92,109,35,39,34,224,37,9,254,102,142,129,136,58,176,254,8,115,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 505 ") {
    byte_vec_t msg { 104,0,115,135 };
    byte_vec_t sig { 24,102,77,49,85,142,1,18,140,145,104,11,204,230,139,220,63,171,42,40,89,100,84,1,178,45,201,230,49,146,8,186,17,70,251,116,34,137,168,87,149,83,16,241,241,237,220,16,176,0,134,28,22,245,211,172,5,210,88,220,236,7,109,65 };
    byte_vec_t pk { 4,186,202,3,2,253,134,161,85,176,45,94,228,35,188,37,20,237,222,89,170,109,29,205,117,7,220,242,227,72,131,216,0,219,26,44,154,246,230,2,97,223,139,125,150,118,30,214,225,181,93,75,29,186,223,102,244,118,120,92,127,204,168,48,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 506 ") {
    byte_vec_t msg { 217,18,37,187 };
    byte_vec_t sig { 185,43,78,89,209,164,43,164,137,94,105,104,174,143,138,252,106,15,113,178,232,11,52,79,65,13,207,62,233,45,9,13,180,7,167,11,48,145,210,110,147,221,241,95,28,94,239,76,245,29,106,41,162,94,119,86,211,52,124,34,153,126,174,7 };
    byte_vec_t pk { 4,53,53,151,6,30,92,29,143,74,181,193,61,87,59,141,252,122,149,48,229,126,234,29,145,226,16,103,81,54,172,126,228,2,98,201,44,49,63,107,127,1,6,46,209,36,207,99,19,42,66,89,139,89,197,100,169,71,108,12,194,119,144,213,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 506 ") {
    byte_vec_t msg { 237,199,200,1 };
    byte_vec_t sig { 16,150,1,138,55,82,203,132,15,89,231,137,131,215,25,146,150,176,157,104,157,244,153,188,72,236,106,243,22,196,35,142,55,197,183,158,202,82,172,148,63,57,24,2,217,220,34,87,223,127,88,21,167,81,121,211,179,36,2,56,206,105,192,40 };
    byte_vec_t pk { 4,31,219,6,211,230,70,133,101,34,33,91,138,63,162,120,249,189,212,98,130,170,31,52,104,8,240,90,254,203,67,48,158,212,192,233,39,12,56,69,166,58,6,132,192,118,12,124,188,145,161,27,135,134,98,17,42,3,254,29,143,49,28,193,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 507 ") {
    byte_vec_t msg { 126,144,45,87 };
    byte_vec_t sig { 182,221,33,219,150,233,121,32,193,182,241,62,176,72,178,44,236,188,18,72,118,232,241,220,205,195,230,221,93,178,217,61,77,10,166,200,222,113,81,17,190,119,169,36,169,248,153,63,113,49,58,74,151,108,50,128,64,71,51,157,139,34,188,129 };
    byte_vec_t pk { 4,148,181,220,32,106,180,15,190,147,101,233,191,198,76,213,213,30,27,170,227,237,67,187,3,76,64,141,176,250,93,249,45,178,198,31,180,178,117,106,255,239,255,73,64,45,111,235,2,197,86,26,149,195,25,181,149,0,39,149,179,215,240,184,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 507 ") {
    byte_vec_t msg { 42,228,38,116 };
    byte_vec_t sig { 148,4,35,169,91,158,199,171,115,201,100,106,129,156,197,175,41,210,233,134,128,203,56,18,254,191,131,115,99,168,24,243,209,176,72,232,212,59,69,246,39,12,144,86,187,170,100,168,171,191,130,11,248,151,247,179,74,29,227,87,42,222,84,123 };
    byte_vec_t pk { 4,124,108,102,96,64,3,48,8,240,76,37,17,240,248,146,72,63,254,86,111,16,160,177,62,181,2,142,241,75,111,148,184,26,110,183,170,195,241,55,234,67,229,68,10,155,130,213,9,241,226,64,117,224,31,2,194,99,88,37,192,139,98,125,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 508 ") {
    byte_vec_t msg { 158,195,20,242 };
    byte_vec_t sig { 77,52,59,84,249,142,136,192,213,127,189,247,50,36,147,35,122,156,100,125,96,71,173,120,144,231,19,221,136,45,109,21,119,141,212,42,202,209,230,240,251,129,191,114,125,134,179,234,136,75,233,170,40,151,61,2,60,74,110,7,83,13,4,49 };
    byte_vec_t pk { 4,76,176,245,127,179,173,174,228,55,18,67,121,10,120,65,241,19,183,91,193,151,141,226,63,233,124,213,60,121,61,202,234,71,194,246,159,156,36,29,23,143,180,197,81,114,83,222,93,174,210,54,84,203,73,9,126,93,31,34,188,208,45,180,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 508 ") {
    byte_vec_t msg { 112,214,141,92 };
    byte_vec_t sig { 13,214,214,194,104,78,174,206,104,200,86,37,125,93,76,7,203,209,254,156,210,242,76,10,56,161,69,248,32,76,174,10,112,8,24,89,248,14,35,152,229,26,174,241,93,179,28,186,58,84,8,85,240,180,52,104,112,110,64,173,252,183,250,8 };
    byte_vec_t pk { 4,204,72,182,229,160,91,9,159,102,136,219,34,95,69,157,107,182,197,213,30,154,98,73,205,236,79,129,164,82,225,202,142,221,71,164,213,6,241,178,14,235,142,220,197,231,234,138,59,173,32,128,204,59,49,184,99,45,151,162,239,67,148,41,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 509 ") {
    byte_vec_t msg { 49,68,38,57 };
    byte_vec_t sig { 20,166,59,81,128,204,213,154,234,171,187,161,253,82,49,37,4,48,238,154,115,84,132,223,204,184,175,43,207,86,197,195,232,146,42,40,239,229,59,97,3,61,48,210,7,56,19,82,214,170,222,146,59,100,98,168,21,68,245,38,103,99,0,13 };
    byte_vec_t pk { 4,157,229,39,181,129,160,97,200,201,5,56,46,92,218,214,2,44,21,31,96,159,132,68,3,221,152,193,224,116,109,72,63,127,251,33,254,42,99,54,170,218,45,20,215,176,56,188,245,158,54,39,81,86,138,90,218,223,149,220,105,222,231,2,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 509 ") {
    byte_vec_t msg { 69,65,116,87 };
    byte_vec_t sig { 136,153,44,102,69,19,130,190,134,100,242,116,41,139,53,46,109,160,215,180,197,202,52,73,251,203,219,137,138,108,59,0,84,132,188,86,113,89,138,96,0,133,83,219,61,74,138,154,73,57,177,132,211,28,47,186,255,26,47,213,137,116,245,66 };
    byte_vec_t pk { 4,237,0,99,191,185,14,117,66,238,163,88,69,143,250,235,184,51,212,52,12,209,122,182,73,247,171,217,209,91,67,10,224,126,70,225,153,50,11,159,8,12,155,162,45,66,1,112,1,98,99,8,76,38,58,34,156,0,254,37,135,73,53,190,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 510 ") {
    byte_vec_t msg { 54,177,79,212 };
    byte_vec_t sig { 67,210,26,33,152,158,184,96,101,251,71,20,127,138,224,198,92,174,158,135,169,33,253,173,40,237,8,146,71,252,156,189,142,230,108,247,71,221,227,167,11,126,109,64,204,56,125,27,43,66,6,29,192,173,178,127,87,40,209,179,21,244,60,132 };
    byte_vec_t pk { 4,227,114,251,27,109,167,185,113,68,214,144,111,9,17,148,183,48,84,219,72,31,72,208,44,234,162,43,154,49,27,159,41,222,56,92,63,19,131,134,177,189,112,157,166,135,120,25,76,6,173,149,126,100,210,46,60,196,230,60,115,123,169,74,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 510 ") {
    byte_vec_t msg { 51,181,206,97 };
    byte_vec_t sig { 122,41,21,117,244,132,185,152,140,175,167,22,110,58,222,228,56,101,81,13,56,46,105,72,53,64,105,36,200,72,176,28,55,167,31,28,42,105,197,114,46,137,2,119,109,149,103,24,141,125,144,154,210,7,73,67,101,243,141,77,82,122,87,96 };
    byte_vec_t pk { 4,7,104,112,208,5,33,110,234,22,217,125,217,215,81,27,142,219,128,207,227,107,59,61,239,48,231,28,52,192,168,241,167,125,243,222,214,235,235,11,162,127,199,4,157,26,222,204,134,186,148,212,253,229,6,166,168,182,31,235,88,191,133,161,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 511 ") {
    byte_vec_t msg { 39,58,223,129 };
    byte_vec_t sig { 38,228,102,198,115,101,102,43,16,252,78,127,84,156,206,41,248,53,236,116,70,235,8,165,50,19,112,99,50,16,226,218,87,0,109,248,5,122,3,198,160,204,173,94,179,23,211,150,105,41,152,73,100,175,166,59,146,130,181,123,238,151,150,181 };
    byte_vec_t pk { 4,48,165,197,139,106,137,53,36,133,246,31,234,98,158,207,13,100,18,195,122,83,124,157,14,246,99,159,8,54,188,175,230,23,84,252,12,64,153,243,110,66,74,235,186,85,41,52,242,16,247,22,0,78,28,143,139,101,147,24,98,1,142,23,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 511 ") {
    byte_vec_t msg { 227,221,23,82 };
    byte_vec_t sig { 130,79,89,49,187,118,104,123,116,32,75,182,90,124,142,127,96,23,22,214,213,111,147,60,30,39,238,60,27,182,232,209,209,105,203,11,201,196,205,127,64,244,123,107,121,157,212,97,242,2,183,21,239,63,210,193,14,56,137,200,121,251,55,145 };
    byte_vec_t pk { 4,31,20,106,4,182,210,202,223,253,220,24,0,28,225,164,98,187,87,235,44,202,159,49,180,117,109,87,121,185,212,84,165,130,253,26,203,91,212,235,242,196,8,118,114,214,134,197,24,213,33,216,108,92,156,163,253,158,100,171,4,97,9,188,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 512 ") {
    byte_vec_t msg { 8,22,202,248 };
    byte_vec_t sig { 216,52,67,95,248,246,203,111,247,162,21,33,73,64,193,177,64,199,33,178,204,101,77,208,76,240,109,10,205,181,137,108,213,168,16,86,210,72,200,171,108,222,245,0,250,90,0,110,36,26,6,227,152,66,24,162,77,173,162,62,129,77,224,193 };
    byte_vec_t pk { 4,108,183,172,245,240,37,123,194,54,223,62,112,219,163,210,177,216,162,175,4,65,174,99,225,31,221,250,39,28,72,120,54,49,235,8,42,55,200,153,241,6,181,10,216,87,111,249,225,132,103,213,230,131,229,224,151,194,193,132,117,97,98,60,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 512 ") {
    byte_vec_t msg { 158,211,83,171 };
    byte_vec_t sig { 73,150,253,207,221,61,223,199,30,98,192,246,137,219,160,131,187,83,67,199,176,79,191,90,238,159,72,217,241,40,192,77,91,122,99,22,204,151,101,198,45,23,77,241,164,245,94,41,155,3,205,27,47,28,30,80,26,8,0,201,236,46,171,169 };
    byte_vec_t pk { 4,248,63,203,39,224,229,241,40,185,29,43,152,254,188,75,208,241,195,71,13,159,244,215,17,158,112,95,222,227,161,178,79,243,215,39,196,151,84,236,101,128,34,58,72,126,19,99,183,185,3,177,210,226,108,87,115,167,219,4,15,169,203,216,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 513 ") {
    byte_vec_t msg { 155,193,152,155 };
    byte_vec_t sig { 128,230,90,254,119,157,143,226,105,204,65,142,205,24,113,14,184,160,182,68,253,18,197,191,95,197,70,20,217,112,193,25,65,69,4,149,226,13,178,104,83,241,176,247,131,56,121,219,16,251,94,173,94,190,61,68,76,150,129,126,248,170,17,11 };
    byte_vec_t pk { 4,200,124,138,229,1,217,63,168,201,153,29,214,229,3,224,28,58,219,217,51,51,72,238,158,64,180,46,247,211,251,185,12,234,26,13,86,71,126,223,55,227,44,86,92,255,162,110,78,88,72,145,87,37,117,141,176,83,95,178,133,131,159,124,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 513 ") {
    byte_vec_t msg { 250,186,106,56 };
    byte_vec_t sig { 139,253,70,187,170,83,244,245,51,66,173,81,54,146,181,58,11,222,3,102,62,198,188,217,152,246,110,245,99,48,12,29,0,206,107,133,131,255,184,203,178,63,158,184,126,148,133,51,203,166,126,234,21,212,199,231,159,96,71,58,150,36,62,199 };
    byte_vec_t pk { 4,205,13,33,23,199,24,19,107,34,94,235,249,23,47,5,243,171,33,222,145,89,199,110,105,195,96,162,130,81,187,154,1,231,9,180,34,173,37,70,106,100,148,84,101,167,94,150,85,130,250,76,37,164,101,121,136,76,107,170,44,168,82,23,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 514 ") {
    byte_vec_t msg { 5,179,87,101 };
    byte_vec_t sig { 9,49,237,209,104,203,123,68,45,75,136,4,133,34,194,174,179,235,252,251,240,119,183,249,84,79,181,248,57,91,227,34,133,184,186,40,142,73,122,174,238,170,93,248,127,66,115,1,246,194,250,77,22,2,55,233,5,152,213,164,244,61,136,107 };
    byte_vec_t pk { 4,130,219,160,7,31,196,27,240,216,25,92,79,247,172,29,184,29,33,211,24,74,196,60,37,184,175,129,67,42,157,163,7,106,237,9,209,184,48,123,6,1,225,95,42,160,230,164,122,128,80,49,210,143,29,140,114,252,64,245,145,49,24,113,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 514 ") {
    byte_vec_t msg { 33,42,11,36 };
    byte_vec_t sig { 165,185,193,133,166,45,32,26,56,198,204,39,130,118,217,196,210,176,25,72,165,253,54,177,39,11,167,129,53,226,92,248,172,60,3,8,147,152,128,214,199,106,149,210,68,89,3,21,211,159,46,98,245,172,201,191,40,113,96,241,43,175,43,226 };
    byte_vec_t pk { 4,40,33,140,218,103,3,7,212,188,111,232,1,36,217,205,204,116,183,228,180,149,124,35,94,238,242,239,193,170,25,208,165,236,136,112,22,129,109,38,57,196,160,249,77,179,77,19,236,44,183,141,228,56,6,31,219,198,26,5,134,98,190,108,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 515 ") {
    byte_vec_t msg { 87,163,212,70 };
    byte_vec_t sig { 227,214,138,173,88,77,254,0,41,140,254,71,234,118,176,253,50,87,176,62,119,152,140,51,240,175,37,116,199,180,75,5,50,226,175,72,144,249,82,124,238,33,36,91,23,152,139,10,129,12,163,130,144,254,38,127,237,143,191,236,9,45,200,33 };
    byte_vec_t pk { 4,124,206,213,141,185,163,244,22,255,133,60,241,177,55,189,67,253,228,255,60,249,246,141,136,81,229,236,161,140,184,5,158,61,227,74,216,161,219,36,229,46,132,75,94,16,79,177,139,170,136,145,76,242,80,208,14,110,61,240,6,165,154,103,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 515 ") {
    byte_vec_t msg { 238,174,227,150 };
    byte_vec_t sig { 114,95,145,20,137,207,130,230,254,52,254,46,236,72,120,27,0,4,92,161,255,120,241,241,52,32,217,246,13,159,53,67,165,132,250,118,65,51,241,12,51,46,42,110,26,199,192,173,247,240,131,99,90,129,183,85,246,57,1,78,116,86,65,111 };
    byte_vec_t pk { 4,61,224,84,246,151,249,192,137,64,242,212,68,99,156,24,161,95,113,254,190,156,16,209,251,43,185,42,220,16,190,114,63,197,237,43,1,162,168,78,141,22,125,88,62,181,81,126,1,97,64,53,62,67,109,52,61,70,88,162,28,225,140,125,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 516 ") {
    byte_vec_t msg { 18,240,142,145 };
    byte_vec_t sig { 103,210,66,91,73,33,43,183,151,89,120,225,16,217,37,0,199,112,186,244,216,53,79,149,79,51,28,83,193,108,92,13,162,55,180,94,16,59,31,189,78,199,216,85,246,43,203,187,137,112,189,125,35,31,161,231,190,60,187,255,36,64,43,230 };
    byte_vec_t pk { 4,75,43,88,217,160,98,95,187,88,209,166,190,72,144,214,210,175,75,157,181,109,188,223,87,121,31,245,11,160,65,249,127,198,46,26,1,181,31,63,132,204,28,127,48,199,101,147,207,65,66,18,81,225,194,108,157,65,247,150,38,209,59,148,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 516 ") {
    byte_vec_t msg { 36,192,94,220 };
    byte_vec_t sig { 50,230,247,152,12,245,233,57,39,140,60,62,199,96,25,23,13,203,9,1,19,170,156,0,132,122,85,6,11,166,184,207,20,223,97,151,149,133,234,73,191,16,138,107,142,136,207,51,157,91,171,181,76,11,165,9,50,169,176,227,93,64,123,178 };
    byte_vec_t pk { 4,141,188,94,193,114,12,70,112,151,188,117,211,182,129,150,176,200,104,238,67,15,109,35,17,118,117,59,38,151,32,222,203,26,85,182,223,43,18,104,80,115,68,234,165,118,227,124,120,204,229,250,15,99,13,84,204,232,252,221,232,195,22,77,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 517 ") {
    byte_vec_t msg { 177,43,71,197 };
    byte_vec_t sig { 88,61,249,78,125,78,62,175,27,153,190,215,184,107,197,81,86,138,217,187,220,172,23,171,98,101,174,107,82,135,162,209,68,23,113,242,218,64,200,141,8,12,160,53,145,235,101,186,159,193,65,185,116,14,193,132,159,7,25,79,181,124,122,127 };
    byte_vec_t pk { 4,211,119,222,73,35,3,172,204,36,207,201,79,252,84,225,41,88,59,142,229,13,226,226,192,4,253,235,160,94,148,19,103,227,188,239,237,180,241,70,130,13,168,29,59,200,16,106,15,238,193,102,249,208,133,87,195,37,213,158,155,46,129,217,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 517 ") {
    byte_vec_t msg { 251,10,165,251 };
    byte_vec_t sig { 168,95,186,7,35,172,139,182,72,76,15,166,208,71,88,189,69,0,158,43,150,239,15,86,50,48,112,233,68,252,10,210,200,89,22,165,198,4,220,233,156,162,8,175,241,64,60,116,19,190,217,243,127,226,117,109,226,106,90,7,208,88,190,9 };
    byte_vec_t pk { 4,198,168,127,62,121,168,245,164,110,239,217,99,144,165,126,143,211,208,237,144,141,61,184,71,229,136,219,218,43,243,75,116,122,47,80,131,153,249,7,107,70,184,43,207,68,250,153,215,128,37,242,169,223,127,32,200,3,139,165,176,243,34,111,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 518 ") {
    byte_vec_t msg { 63,230,46,117 };
    byte_vec_t sig { 210,83,177,164,119,212,180,234,184,140,241,168,167,24,132,76,11,141,33,78,194,243,83,39,52,129,197,62,186,37,46,127,147,56,92,118,234,181,37,243,29,88,103,80,24,194,197,151,232,182,52,178,175,211,166,56,44,63,106,95,157,36,130,89 };
    byte_vec_t pk { 4,162,180,131,207,97,47,87,148,247,255,184,223,148,210,155,59,140,120,70,27,59,105,187,21,67,48,216,23,57,99,0,120,241,20,29,3,159,207,78,81,246,83,242,228,197,61,3,214,21,146,106,5,213,210,207,146,83,25,172,204,141,87,248,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 518 ") {
    byte_vec_t msg { 58,135,58,1 };
    byte_vec_t sig { 154,45,108,11,241,139,35,123,11,63,42,182,73,44,72,32,53,142,42,5,186,58,63,195,91,249,44,201,38,94,125,235,187,245,4,150,248,124,8,127,154,103,81,179,205,194,179,138,64,148,65,129,206,199,111,205,41,96,122,77,54,110,76,27 };
    byte_vec_t pk { 4,176,193,21,117,57,232,88,158,36,116,41,196,45,112,36,240,117,45,194,74,235,22,152,173,200,220,98,20,94,189,159,47,75,123,196,169,225,157,156,154,7,89,236,96,30,169,71,6,122,121,130,255,44,93,251,29,24,206,155,50,28,192,164,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 519 ") {
    byte_vec_t msg { 7,26,251,167 };
    byte_vec_t sig { 242,56,163,183,39,221,118,144,192,227,70,82,254,223,201,145,86,150,16,208,168,177,103,59,88,117,50,245,196,252,10,162,168,117,121,242,80,13,216,17,194,112,40,125,107,25,149,22,75,94,51,179,98,145,19,56,4,73,131,60,121,35,205,92 };
    byte_vec_t pk { 4,77,181,118,75,105,6,121,137,75,26,152,79,41,25,120,244,27,184,131,157,211,134,6,78,47,74,50,160,178,173,20,47,148,60,34,70,91,254,231,188,142,167,37,139,216,102,82,2,112,133,180,58,56,150,47,9,220,220,238,218,237,86,114,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 519 ") {
    byte_vec_t msg { 143,238,89,176 };
    byte_vec_t sig { 18,180,244,179,84,145,141,245,111,24,19,230,104,31,222,207,209,84,45,107,82,149,107,6,206,162,74,205,49,101,151,216,184,63,200,62,181,24,54,69,102,34,237,77,61,72,245,94,133,68,106,183,71,190,56,239,59,22,84,194,131,162,65,71 };
    byte_vec_t pk { 4,115,107,173,211,246,44,67,43,120,115,195,49,66,11,12,195,90,224,247,110,36,251,136,95,127,50,14,197,83,218,115,161,0,193,97,65,120,202,247,122,23,178,152,74,174,21,128,15,215,84,238,131,134,10,147,207,163,1,100,108,37,131,198,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 520 ") {
    byte_vec_t msg { 190,30,44,230 };
    byte_vec_t sig { 55,172,238,25,155,81,19,197,251,88,100,56,154,156,18,118,214,248,44,93,93,17,119,116,92,31,254,133,41,175,44,162,55,101,92,114,228,96,111,209,53,2,242,210,6,89,136,4,156,173,106,15,185,113,77,83,240,126,231,46,113,251,220,157 };
    byte_vec_t pk { 4,87,92,8,1,86,33,190,28,245,83,76,171,215,244,80,225,135,180,133,142,67,2,9,76,144,230,172,230,252,193,107,107,167,122,4,217,189,68,184,243,189,76,210,109,205,49,187,55,94,61,44,249,121,207,136,65,124,207,154,1,125,123,34,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 520 ") {
    byte_vec_t msg { 121,250,11,164 };
    byte_vec_t sig { 35,183,108,139,51,132,207,27,153,68,135,124,44,245,5,245,232,69,65,18,73,40,91,85,148,236,109,214,199,103,162,3,168,13,106,58,202,103,20,60,160,94,213,223,7,137,43,194,0,244,89,114,234,87,124,115,255,250,115,86,199,183,39,115 };
    byte_vec_t pk { 4,170,117,108,211,234,132,9,94,53,90,238,23,16,100,211,253,129,242,180,190,159,134,143,234,30,112,175,22,127,80,116,91,157,170,2,5,34,53,230,34,244,30,0,128,71,214,247,193,208,36,243,16,62,133,143,41,105,191,188,55,247,39,48,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 521 ") {
    byte_vec_t msg { 145,105,15,107 };
    byte_vec_t sig { 30,85,233,63,245,146,242,250,7,130,146,20,205,105,255,115,15,193,254,45,113,252,64,184,118,72,98,138,143,49,231,15,139,82,234,161,161,169,249,12,206,73,126,218,78,99,89,227,113,188,176,140,59,141,202,104,94,161,165,202,51,191,112,163 };
    byte_vec_t pk { 4,61,187,75,146,20,175,28,20,242,66,59,200,185,87,99,37,119,201,189,100,236,109,25,239,87,174,217,196,238,217,231,172,198,196,102,98,209,251,54,33,248,46,173,110,222,146,37,238,213,219,122,157,61,207,179,189,191,234,138,116,28,164,88,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 521 ") {
    byte_vec_t msg { 3,20,15,158 };
    byte_vec_t sig { 121,137,215,156,101,87,185,174,105,210,22,99,33,34,39,149,99,164,249,233,47,220,98,130,181,55,164,6,155,106,179,204,165,80,158,65,170,116,126,71,124,22,62,110,27,161,169,171,134,245,183,69,229,38,22,2,123,99,213,193,126,144,241,75 };
    byte_vec_t pk { 4,116,114,139,170,195,147,141,16,44,142,13,152,116,33,53,53,90,126,202,91,150,137,231,28,164,210,140,189,190,81,199,50,30,108,80,104,250,211,209,133,135,159,12,38,145,78,229,139,137,149,186,255,83,94,127,7,72,40,63,169,97,146,143,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 522 ") {
    byte_vec_t msg { 42,142,138,205 };
    byte_vec_t sig { 197,61,4,97,162,50,160,62,50,131,166,33,148,91,181,2,39,192,162,198,195,120,42,54,102,162,41,237,42,112,132,151,129,20,233,17,153,131,243,161,225,201,235,110,129,87,214,214,12,188,226,110,191,222,5,80,172,238,67,99,162,134,158,121 };
    byte_vec_t pk { 4,124,148,35,136,247,178,40,222,180,198,247,94,88,101,163,184,114,228,131,67,201,82,140,86,249,161,185,67,57,23,130,176,82,165,187,249,237,37,77,40,167,233,81,189,117,226,35,73,212,153,212,31,182,141,35,244,123,194,119,1,152,83,146,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 522 ") {
    byte_vec_t msg { 224,144,185,99 };
    byte_vec_t sig { 100,32,187,210,167,15,11,145,101,6,202,220,143,150,224,219,127,33,185,57,208,10,33,10,72,243,8,5,149,81,138,201,202,229,177,180,78,109,204,96,89,15,216,113,87,201,103,56,228,15,106,83,61,86,5,175,166,94,18,237,47,58,76,76 };
    byte_vec_t pk { 4,251,237,220,53,190,104,76,34,244,78,93,93,177,63,63,233,22,175,167,157,232,211,182,190,133,181,232,218,87,58,140,170,238,232,204,82,185,130,159,20,103,236,116,234,98,19,24,78,19,233,6,199,134,48,25,251,227,126,239,19,124,164,83,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 523 ") {
    byte_vec_t msg { 217,238,189,69 };
    byte_vec_t sig { 106,165,230,67,80,27,56,91,78,198,160,115,74,68,164,61,196,53,5,228,40,50,54,39,156,135,196,2,208,107,220,16,122,34,1,165,152,201,49,77,115,171,244,213,155,132,38,129,209,78,251,68,95,110,92,148,215,219,186,17,102,129,81,245 };
    byte_vec_t pk { 4,232,51,106,254,185,231,115,182,13,5,177,68,217,42,193,114,213,223,66,39,117,122,119,93,102,253,250,251,228,228,136,91,203,16,141,98,162,185,2,94,23,92,43,202,157,230,52,55,67,186,231,192,100,145,102,235,109,35,45,31,101,189,3,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 523 ") {
    byte_vec_t msg { 154,6,247,254 };
    byte_vec_t sig { 90,226,69,103,23,249,214,239,225,213,86,184,97,141,167,186,187,12,133,79,84,241,168,122,169,135,149,62,193,102,168,22,87,13,247,237,243,186,86,233,184,30,188,39,183,192,208,129,81,16,76,108,22,248,186,67,74,133,226,205,105,228,200,106 };
    byte_vec_t pk { 4,95,194,183,37,46,43,203,30,65,232,240,89,224,210,115,62,169,245,89,25,41,102,89,175,182,199,139,178,121,67,135,79,181,250,225,164,211,23,158,181,222,71,141,180,45,73,235,161,6,71,43,246,165,1,48,137,226,253,40,120,78,113,212,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 524 ") {
    byte_vec_t msg { 181,210,242,56 };
    byte_vec_t sig { 150,127,3,207,222,190,28,168,182,133,112,117,56,119,250,201,158,84,200,133,31,179,247,19,168,98,23,216,4,15,2,198,78,26,33,13,243,38,98,21,56,211,131,70,117,41,124,235,228,75,123,39,65,221,255,238,205,233,128,186,61,125,187,181 };
    byte_vec_t pk { 4,54,20,15,183,198,165,11,199,95,161,46,24,65,46,28,214,54,148,7,237,27,109,150,115,27,230,62,252,68,114,155,234,124,21,161,188,76,19,102,42,214,147,202,104,180,169,152,26,240,69,104,134,216,152,173,52,48,165,55,132,146,22,100,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 524 ") {
    byte_vec_t msg { 189,218,28,198 };
    byte_vec_t sig { 135,170,174,129,192,40,160,144,134,76,36,179,242,197,120,136,167,5,233,34,135,248,85,65,107,112,124,246,70,205,192,174,123,53,215,228,168,105,250,98,165,247,106,226,110,79,245,178,153,56,38,14,69,66,171,241,133,231,54,182,123,232,90,57 };
    byte_vec_t pk { 4,184,88,215,63,248,193,221,63,26,200,40,153,3,30,104,43,49,111,80,188,42,155,38,43,11,110,17,152,43,9,20,217,208,88,230,156,141,161,161,32,94,157,80,219,35,49,199,7,2,147,137,240,208,134,0,158,62,200,192,112,132,124,217,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 525 ") {
    byte_vec_t msg { 237,245,26,106 };
    byte_vec_t sig { 134,245,97,244,88,30,76,56,37,185,84,249,240,179,243,4,56,189,234,57,252,176,240,190,237,226,40,135,41,111,206,215,140,141,54,141,181,135,147,63,241,163,188,219,119,113,48,248,238,27,144,14,150,101,158,212,89,138,197,167,75,50,185,76 };
    byte_vec_t pk { 4,193,20,87,150,207,200,147,128,212,247,222,23,102,173,38,83,131,144,194,206,252,49,152,23,166,91,102,102,18,232,102,201,46,224,200,107,133,176,62,248,245,128,42,193,191,63,191,50,236,53,151,190,24,190,41,72,188,215,110,194,205,46,141,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 525 ") {
    byte_vec_t msg { 111,111,213,159 };
    byte_vec_t sig { 61,87,251,227,91,59,81,233,115,197,199,181,250,70,124,181,90,247,123,246,126,23,236,86,252,226,28,60,252,18,148,238,120,158,229,198,189,63,246,63,215,63,227,206,16,155,255,13,143,3,179,25,75,233,17,2,250,227,97,83,36,50,123,191 };
    byte_vec_t pk { 4,4,34,155,135,51,0,194,80,229,13,217,94,116,157,42,141,107,225,154,12,123,152,219,167,34,56,85,208,149,149,232,202,39,180,186,74,28,145,207,166,25,35,203,149,91,73,62,83,202,134,70,88,142,80,255,182,144,156,166,6,241,22,234,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 526 ") {
    byte_vec_t msg { 240,6,82,166 };
    byte_vec_t sig { 84,95,12,37,83,51,113,121,208,212,189,188,101,221,63,111,254,6,139,231,218,122,114,238,19,123,3,218,5,10,126,207,214,111,53,89,153,27,104,198,58,77,204,133,13,57,167,194,243,222,217,151,40,211,255,31,61,65,122,182,155,91,33,0 };
    byte_vec_t pk { 4,100,49,55,220,84,186,20,218,147,50,111,160,205,238,230,226,115,16,78,190,72,70,219,61,99,152,249,73,19,229,90,214,240,187,55,79,119,142,83,175,141,239,165,219,69,196,215,70,44,6,148,127,37,251,124,104,180,162,113,174,6,126,74,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 526 ") {
    byte_vec_t msg { 182,239,180,194 };
    byte_vec_t sig { 8,238,251,31,171,200,173,16,40,132,58,220,218,44,43,72,36,129,215,46,168,76,54,9,115,124,173,40,179,100,220,3,57,96,68,192,6,204,143,71,122,179,119,168,139,132,152,202,65,81,237,107,14,126,185,10,216,207,22,65,240,197,251,37 };
    byte_vec_t pk { 4,39,225,251,198,51,43,17,113,144,187,107,162,56,89,33,174,146,49,147,155,71,84,248,216,40,134,234,171,139,8,225,106,62,229,90,209,184,217,154,107,110,230,241,152,208,141,63,201,10,41,228,106,240,79,80,76,191,22,197,193,141,231,71,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 527 ") {
    byte_vec_t msg { 144,168,40,53 };
    byte_vec_t sig { 83,187,170,202,85,18,90,212,200,143,28,212,61,40,126,108,80,64,238,15,203,236,52,27,222,135,162,103,225,211,141,11,246,118,130,206,198,113,2,69,207,125,229,100,193,137,127,3,127,242,31,206,197,244,184,24,137,246,155,171,251,17,156,105 };
    byte_vec_t pk { 4,126,127,151,134,29,219,31,219,25,166,83,200,189,40,173,188,64,145,40,186,62,143,255,38,166,23,121,221,236,86,27,80,138,163,66,117,68,245,141,79,97,179,226,228,162,123,112,215,104,255,223,241,150,156,202,59,182,54,252,91,192,90,15,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 527 ") {
    byte_vec_t msg { 134,19,70,49 };
    byte_vec_t sig { 75,253,139,235,18,59,31,16,5,115,209,167,85,143,9,97,120,60,10,44,166,148,159,102,208,236,13,240,154,47,109,156,82,179,125,125,70,162,98,136,145,153,152,142,213,41,178,115,222,62,83,230,224,178,47,217,134,113,142,132,6,29,53,154 };
    byte_vec_t pk { 4,158,13,205,55,124,38,177,127,143,12,122,11,119,242,221,8,51,236,236,133,219,136,124,33,212,41,142,78,86,120,240,235,99,242,71,23,181,186,164,97,171,31,6,166,79,242,68,61,163,153,109,200,15,95,139,152,233,95,70,148,2,244,46,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 528 ") {
    byte_vec_t msg { 161,42,139,148 };
    byte_vec_t sig { 115,187,229,190,130,50,66,98,3,99,243,104,88,137,113,88,178,164,174,77,82,183,3,218,77,96,127,251,79,47,40,0,104,122,247,150,53,8,2,8,248,222,215,168,19,203,220,104,201,85,212,238,227,228,172,251,154,57,198,250,184,217,116,198 };
    byte_vec_t pk { 4,244,100,218,237,186,182,115,57,140,145,108,144,196,163,11,171,22,70,34,109,196,71,139,37,81,128,144,38,184,24,58,157,197,235,115,143,22,166,216,223,176,188,84,172,195,35,252,117,38,198,93,66,150,149,132,10,76,210,248,225,215,150,253,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 528 ") {
    byte_vec_t msg { 100,21,216,166 };
    byte_vec_t sig { 169,165,48,101,8,65,61,39,102,56,47,228,222,197,4,157,183,31,0,98,69,243,37,247,149,106,84,183,57,107,59,72,50,24,127,244,5,66,74,64,208,116,187,242,232,58,4,57,62,3,95,154,213,92,29,6,23,69,44,169,28,2,21,122 };
    byte_vec_t pk { 4,242,13,252,116,246,156,0,231,106,248,112,110,52,224,51,186,0,73,168,5,248,88,120,141,97,23,59,186,92,136,10,146,23,172,128,196,43,203,81,107,204,105,29,225,95,111,217,208,42,138,67,56,133,208,54,243,204,133,72,239,229,75,85,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 529 ") {
    byte_vec_t msg { 234,42,15,233 };
    byte_vec_t sig { 160,64,122,122,61,214,122,219,227,183,158,115,139,241,201,234,248,141,107,149,84,108,204,49,34,24,49,129,224,158,122,122,229,42,173,54,240,127,154,7,53,226,100,231,109,137,215,155,137,208,87,250,127,139,143,6,137,75,49,185,250,177,156,41 };
    byte_vec_t pk { 4,252,87,167,105,57,178,75,236,137,125,23,216,183,177,131,100,208,63,103,214,108,87,236,175,182,214,225,81,36,179,152,38,176,82,156,230,40,55,154,241,226,245,52,159,45,29,57,161,200,10,52,188,178,151,43,17,72,27,46,91,114,39,68,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 529 ") {
    byte_vec_t msg { 175,67,108,107 };
    byte_vec_t sig { 127,64,140,180,107,251,25,84,255,70,135,121,163,15,128,225,2,153,250,57,114,249,84,92,161,79,70,251,33,164,204,158,240,19,210,62,16,174,242,78,138,129,158,242,189,19,65,177,159,245,40,157,5,193,16,242,106,228,113,138,211,66,126,36 };
    byte_vec_t pk { 4,9,150,188,27,36,90,84,217,35,55,7,1,154,246,176,61,47,143,217,38,149,135,84,114,8,240,28,155,14,163,146,249,233,47,242,237,149,97,36,243,58,237,141,184,3,15,2,175,163,240,255,89,104,30,162,191,106,79,216,36,75,223,210,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 530 ") {
    byte_vec_t msg { 102,35,219,117 };
    byte_vec_t sig { 58,94,211,223,193,224,57,0,18,21,132,31,190,165,214,155,182,117,248,156,47,93,108,227,135,203,144,196,179,134,65,190,166,139,166,6,158,150,112,140,148,109,103,222,95,159,254,71,75,145,92,40,50,141,194,53,185,198,174,129,251,238,251,118 };
    byte_vec_t pk { 4,72,85,72,12,116,224,86,192,206,152,17,191,43,51,197,27,213,90,251,123,156,222,234,157,85,107,85,171,250,142,231,29,204,203,153,44,111,242,76,21,9,43,116,145,59,108,91,244,226,15,130,96,22,189,73,95,220,42,83,75,34,136,190,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 530 ") {
    byte_vec_t msg { 119,12,71,235 };
    byte_vec_t sig { 199,180,107,58,49,77,168,220,91,2,240,169,69,96,29,186,187,141,202,179,4,199,154,92,216,240,170,103,253,164,157,28,63,63,20,155,198,222,51,0,45,115,2,253,215,104,145,189,34,244,236,172,220,164,234,115,144,244,233,67,13,153,62,249 };
    byte_vec_t pk { 4,45,87,163,128,18,214,95,21,221,184,47,100,13,11,59,248,164,200,132,101,175,24,252,159,175,66,168,89,139,114,181,150,63,225,129,133,39,87,161,107,97,136,230,154,7,7,163,229,93,246,164,97,36,58,29,151,195,225,171,79,138,197,127,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 531 ") {
    byte_vec_t msg { 83,133,165,97 };
    byte_vec_t sig { 134,227,95,250,75,208,197,169,146,235,133,147,15,108,129,133,112,158,221,23,130,190,124,31,144,153,54,164,216,27,131,69,136,168,237,32,43,238,36,106,112,111,131,195,181,189,8,240,201,255,165,211,182,28,25,71,130,119,202,100,72,68,224,156 };
    byte_vec_t pk { 4,42,133,250,2,102,167,114,53,26,249,60,254,162,71,6,0,164,89,237,96,38,95,214,182,46,170,21,235,35,135,38,206,221,101,26,119,244,97,13,101,229,13,220,205,23,129,56,6,92,100,84,116,185,197,99,33,240,45,189,183,25,40,146,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 531 ") {
    byte_vec_t msg { 130,55,12,250 };
    byte_vec_t sig { 58,102,121,160,168,47,147,143,24,52,138,23,180,206,6,76,190,166,82,178,92,130,170,142,186,17,98,69,170,48,127,61,50,193,210,81,105,62,138,49,60,248,251,105,42,167,215,245,122,67,14,199,46,214,120,36,176,237,169,157,45,161,65,143 };
    byte_vec_t pk { 4,156,157,241,213,52,65,79,48,232,219,223,14,38,225,22,167,169,44,12,184,173,220,65,87,128,191,96,20,218,77,74,177,13,56,175,223,142,162,218,2,117,181,253,75,145,241,131,176,129,194,253,21,4,235,113,166,220,13,61,5,115,132,4,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 532 ") {
    byte_vec_t msg { 34,201,47,108 };
    byte_vec_t sig { 172,127,254,216,46,94,135,61,42,237,154,5,27,104,87,123,26,94,23,99,196,160,198,221,83,93,85,85,96,57,57,83,96,15,102,51,163,93,211,194,221,206,164,36,9,109,51,168,48,229,224,67,30,235,214,222,83,125,56,151,67,230,104,245 };
    byte_vec_t pk { 4,176,187,187,11,0,207,121,114,7,147,100,49,246,104,221,51,155,61,153,237,77,132,197,121,132,210,222,130,74,46,172,59,9,203,99,105,181,147,0,12,63,93,151,52,219,119,0,94,141,10,49,14,69,184,63,86,24,249,243,179,83,188,147,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 532 ") {
    byte_vec_t msg { 183,53,129,109 };
    byte_vec_t sig { 206,181,201,18,86,253,61,247,254,160,151,176,46,53,104,252,161,86,222,110,142,81,199,238,10,46,43,208,200,9,205,96,249,120,107,44,223,86,254,255,207,7,213,69,162,63,232,203,197,203,243,246,220,141,106,22,67,51,208,32,59,117,46,148 };
    byte_vec_t pk { 4,239,250,197,188,8,229,250,200,112,75,41,153,206,61,182,103,98,79,134,218,118,114,249,202,87,176,116,31,64,94,37,254,216,160,205,72,44,117,145,199,148,205,208,220,119,107,229,230,6,62,243,224,105,2,190,97,197,48,17,40,137,143,160,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 533 ") {
    byte_vec_t msg { 180,22,194,178 };
    byte_vec_t sig { 80,117,188,93,193,9,139,3,39,131,1,203,35,117,64,44,9,59,10,37,109,171,119,214,160,173,49,224,141,22,218,77,181,167,201,247,248,187,210,181,171,201,239,35,152,138,192,184,195,43,160,176,170,152,212,69,173,182,227,200,71,116,131,39 };
    byte_vec_t pk { 4,23,152,233,180,234,94,216,34,106,40,60,218,53,158,86,102,166,104,242,132,206,77,10,181,18,79,184,90,111,42,22,59,39,72,144,27,49,110,190,90,91,136,240,98,254,145,103,69,245,82,166,248,136,197,206,15,217,27,46,14,33,234,68,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 533 ") {
    byte_vec_t msg { 13,5,236,253 };
    byte_vec_t sig { 243,54,151,8,100,128,250,176,51,66,107,8,65,210,225,50,235,142,142,206,47,116,98,48,238,161,50,197,160,14,83,35,141,241,96,200,115,65,132,223,237,130,202,126,99,98,129,27,141,219,131,21,52,248,130,125,183,47,240,131,89,66,187,246 };
    byte_vec_t pk { 4,22,85,165,125,194,37,7,74,161,114,165,77,196,140,154,113,18,242,130,35,219,112,71,223,100,101,96,83,97,172,233,245,216,137,50,179,212,16,179,128,11,78,241,57,130,222,100,190,216,181,0,233,40,185,156,140,108,190,37,239,65,185,50,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 534 ") {
    byte_vec_t msg { 160,182,68,20 };
    byte_vec_t sig { 246,109,173,201,117,20,116,33,58,146,204,86,161,255,249,211,0,154,167,22,239,37,194,251,241,189,2,107,194,23,153,147,23,223,161,70,239,104,228,243,131,213,71,85,31,7,154,204,125,6,80,165,102,146,246,182,203,19,125,200,162,11,254,105 };
    byte_vec_t pk { 4,1,122,151,189,220,100,13,119,112,41,226,132,96,241,7,87,217,129,146,12,225,190,190,88,204,131,106,100,239,135,134,112,225,194,227,46,114,175,8,143,23,28,82,241,93,116,148,233,97,148,68,190,252,120,179,187,20,124,13,135,255,137,52,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 534 ") {
    byte_vec_t msg { 132,46,167,171 };
    byte_vec_t sig { 185,102,167,230,213,138,104,82,60,122,94,213,96,239,97,87,226,96,28,171,238,191,227,157,31,53,96,118,58,218,161,85,163,190,103,103,208,156,145,103,251,86,189,21,248,192,61,163,132,240,77,181,154,168,143,135,236,213,192,66,200,236,153,140 };
    byte_vec_t pk { 4,63,119,168,144,44,159,72,44,144,160,216,246,147,41,114,22,232,89,241,151,160,175,216,87,24,103,26,215,153,100,193,120,223,33,164,247,61,114,166,86,170,19,26,125,249,126,39,137,61,144,244,247,248,156,196,115,46,189,191,190,179,90,128,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 535 ") {
    byte_vec_t msg { 166,183,82,133 };
    byte_vec_t sig { 251,140,4,48,158,216,199,28,212,128,215,117,99,168,173,169,118,239,79,84,253,135,161,246,156,219,12,96,33,7,155,33,67,243,204,194,223,91,24,192,142,115,55,158,203,64,25,74,245,86,190,148,224,115,43,115,179,85,4,46,73,48,33,119 };
    byte_vec_t pk { 4,6,110,134,108,96,9,89,118,111,160,122,45,181,23,207,241,69,56,4,32,27,69,211,45,237,192,236,222,201,128,194,90,119,77,63,125,186,93,22,160,232,2,33,36,160,145,28,167,106,8,74,102,197,123,25,251,34,99,127,196,225,8,207,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 535 ") {
    byte_vec_t msg { 67,146,154,18 };
    byte_vec_t sig { 255,246,101,80,129,12,227,222,33,49,253,58,95,226,231,201,121,107,225,202,158,132,72,232,249,126,140,152,150,203,8,233,62,159,56,31,233,161,49,125,166,135,194,189,246,171,46,247,204,214,165,107,135,112,209,17,244,212,178,107,201,80,248,243 };
    byte_vec_t pk { 4,199,90,52,16,42,245,81,63,62,19,49,174,210,21,65,170,36,18,52,254,1,177,153,192,190,10,240,124,215,70,192,229,18,89,98,243,219,217,49,202,32,6,230,0,29,195,218,170,170,223,28,187,229,245,231,3,220,42,241,20,140,214,120,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 536 ") {
    byte_vec_t msg { 5,49,197,45 };
    byte_vec_t sig { 26,39,241,2,138,29,205,188,145,16,209,175,220,107,19,191,239,127,186,218,86,185,52,141,175,223,6,170,17,95,105,246,79,149,152,18,4,115,90,194,195,73,105,116,87,212,206,33,245,144,99,22,5,7,224,96,7,10,34,53,98,23,211,252 };
    byte_vec_t pk { 4,29,248,213,167,10,201,92,129,171,9,95,84,132,169,219,73,255,96,190,54,183,2,171,177,234,248,32,168,71,52,57,175,228,80,125,81,111,6,132,40,88,93,116,189,122,153,9,134,215,63,93,13,86,100,123,233,78,255,76,94,173,200,44,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 536 ") {
    byte_vec_t msg { 21,171,139,34 };
    byte_vec_t sig { 245,108,244,174,87,11,151,70,121,138,73,42,229,97,236,146,148,2,41,153,7,96,218,114,97,173,234,127,100,110,247,137,201,225,115,68,133,66,198,101,183,245,176,235,1,123,123,52,169,81,159,33,110,152,38,131,86,100,30,128,166,65,83,153 };
    byte_vec_t pk { 4,123,94,102,17,207,19,105,136,90,225,108,73,64,90,123,193,84,57,135,57,78,158,9,153,193,171,209,56,237,13,9,157,73,253,140,21,4,92,220,150,188,150,217,111,72,134,111,151,173,90,45,211,26,123,194,27,122,154,82,8,141,52,184,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 537 ") {
    byte_vec_t msg { 149,134,74,15 };
    byte_vec_t sig { 135,54,254,156,64,43,117,111,184,201,161,16,163,95,71,177,96,49,126,59,208,100,122,172,66,94,55,143,142,213,227,150,201,188,237,127,47,212,138,161,51,83,65,134,50,198,122,0,68,195,218,99,129,12,217,158,0,8,8,200,166,220,126,57 };
    byte_vec_t pk { 4,193,23,255,172,117,175,255,130,187,164,98,168,235,39,160,34,157,194,166,110,145,113,87,197,201,232,196,110,116,43,81,244,106,19,47,180,183,157,54,170,37,99,233,156,54,65,157,175,145,188,247,219,248,26,73,14,126,114,166,164,216,148,5,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 537 ") {
    byte_vec_t msg { 143,9,74,115 };
    byte_vec_t sig { 71,219,63,204,228,236,111,17,150,79,147,192,8,129,2,109,220,171,118,129,30,219,183,113,83,194,196,208,167,238,92,229,125,89,231,183,139,72,164,98,166,254,132,217,51,17,58,194,94,48,196,4,99,122,163,45,37,107,113,60,94,143,25,68 };
    byte_vec_t pk { 4,152,87,238,100,97,155,60,253,158,4,62,174,182,115,124,207,147,107,126,130,157,23,242,70,134,26,156,22,150,214,65,137,155,10,251,41,48,4,187,39,15,48,100,247,168,225,203,90,46,185,155,193,96,95,5,244,168,161,83,90,145,104,51,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 538 ") {
    byte_vec_t msg { 158,107,117,190 };
    byte_vec_t sig { 211,209,210,119,206,124,242,65,29,138,109,178,182,67,194,5,87,233,237,214,19,64,18,163,102,236,103,66,161,198,157,165,21,105,95,149,157,63,120,64,55,15,78,51,167,63,70,181,186,46,9,33,200,154,50,203,155,24,73,202,211,68,168,101 };
    byte_vec_t pk { 4,217,106,85,105,254,114,69,44,22,62,174,5,99,137,95,170,90,144,200,196,126,243,85,232,106,38,77,87,135,253,94,26,245,155,117,14,48,249,60,40,79,16,241,93,140,188,159,222,223,247,194,6,147,14,34,91,100,218,88,44,140,94,109,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 538 ") {
    byte_vec_t msg { 97,165,204,20 };
    byte_vec_t sig { 74,176,160,50,199,2,252,64,144,115,155,225,237,118,223,124,190,45,7,161,77,19,122,54,73,23,15,149,254,146,92,209,6,186,213,68,72,130,48,139,183,36,66,223,7,144,13,193,184,209,49,142,43,14,68,133,199,200,144,19,130,171,42,33 };
    byte_vec_t pk { 4,162,122,63,40,158,148,192,206,131,28,42,240,255,190,66,149,169,15,126,155,106,5,222,131,92,13,149,163,169,1,84,166,78,75,177,231,27,177,193,198,236,91,147,223,102,6,210,85,43,38,159,5,178,37,145,140,236,54,30,162,80,245,119,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 539 ") {
    byte_vec_t msg { 142,146,5,72 };
    byte_vec_t sig { 231,129,118,170,99,247,111,247,82,3,210,20,238,124,246,214,205,208,167,53,150,234,255,36,32,141,63,168,74,121,90,171,181,145,207,59,58,11,148,237,103,164,176,134,94,92,248,14,34,48,224,191,0,178,27,179,195,120,149,173,87,98,253,0 };
    byte_vec_t pk { 4,137,227,186,48,1,158,246,234,73,118,255,60,31,136,48,108,250,97,112,169,28,121,227,6,17,247,110,112,160,246,200,222,103,212,96,99,74,225,11,230,243,207,199,45,28,181,141,15,238,188,185,69,5,177,230,237,140,122,11,123,202,154,33,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 539 ") {
    byte_vec_t msg { 232,147,125,192 };
    byte_vec_t sig { 83,189,179,175,230,90,206,45,112,148,16,251,24,27,45,209,175,117,11,9,48,156,212,196,138,214,136,94,4,45,103,20,241,197,59,135,94,25,158,34,100,87,114,74,227,171,102,225,58,53,159,229,199,202,82,11,212,8,38,248,29,58,14,114 };
    byte_vec_t pk { 4,254,146,237,170,40,46,82,21,123,227,191,228,44,192,255,253,174,183,80,129,4,57,85,208,244,143,174,235,248,152,139,11,27,81,208,33,27,200,200,107,160,45,236,65,64,151,140,79,176,126,178,240,113,93,7,16,77,32,253,74,34,46,69,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 540 ") {
    byte_vec_t msg { 77,186,133,135 };
    byte_vec_t sig { 195,166,205,7,45,48,179,45,214,59,119,237,220,159,182,191,154,171,159,181,113,63,20,237,204,251,197,128,204,4,10,31,188,120,241,255,102,176,220,79,213,218,33,174,69,196,73,190,154,187,153,88,9,199,67,44,89,50,10,58,213,214,66,11 };
    byte_vec_t pk { 4,157,35,62,108,51,131,192,137,35,221,80,51,50,17,254,188,198,140,64,212,11,52,1,74,31,170,83,90,233,164,185,73,172,119,125,6,103,39,59,84,206,230,77,146,106,132,150,234,174,34,154,146,149,9,69,128,76,36,29,196,136,51,242,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 540 ") {
    byte_vec_t msg { 28,6,83,37 };
    byte_vec_t sig { 117,175,61,139,71,198,187,159,59,4,62,73,7,172,163,64,245,59,157,109,168,105,72,202,195,207,157,209,233,143,243,15,44,30,108,238,214,218,188,64,37,48,32,203,226,232,210,191,118,136,153,4,210,224,194,90,49,163,17,194,146,132,81,108 };
    byte_vec_t pk { 4,173,180,69,179,152,146,218,153,140,133,0,11,46,79,58,145,48,204,111,118,197,124,135,111,223,203,109,118,17,11,17,112,199,125,225,80,72,194,234,127,189,162,98,202,4,27,162,153,43,161,226,171,32,60,189,91,85,131,59,217,135,70,17,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 541 ") {
    byte_vec_t msg { 44,50,37,95 };
    byte_vec_t sig { 140,47,185,180,222,23,158,68,175,89,76,209,116,228,124,9,232,13,100,217,8,209,99,160,159,107,132,91,154,37,62,168,147,28,20,177,223,135,86,174,173,34,224,112,217,196,83,159,188,172,49,151,204,170,77,233,148,18,37,238,205,69,204,56 };
    byte_vec_t pk { 4,198,99,84,5,178,166,229,229,88,130,243,28,127,220,233,25,108,69,138,177,153,70,111,194,185,251,175,77,116,2,214,232,183,222,63,15,95,248,161,26,217,244,0,177,37,163,139,30,230,67,190,74,191,175,247,156,102,146,47,16,246,162,210,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 541 ") {
    byte_vec_t msg { 155,175,69,204 };
    byte_vec_t sig { 114,37,191,89,15,237,20,37,25,17,10,91,83,16,129,249,211,176,52,27,96,210,227,71,97,18,56,37,250,190,233,153,45,136,222,213,28,33,110,163,102,181,182,54,225,161,122,191,121,32,153,16,226,38,233,43,157,188,158,232,200,138,31,74 };
    byte_vec_t pk { 4,179,110,226,25,8,50,82,190,37,126,133,219,241,227,205,82,238,164,181,54,19,45,127,54,156,223,45,69,17,43,215,99,42,22,34,142,107,176,168,114,161,234,235,104,55,37,26,167,34,100,162,76,198,105,78,84,31,28,216,134,47,11,197,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 542 ") {
    byte_vec_t msg { 79,25,76,18 };
    byte_vec_t sig { 0,49,182,220,75,197,196,225,49,47,192,182,254,108,129,118,88,182,7,90,94,105,121,37,40,2,201,21,41,220,25,24,234,230,130,111,252,82,36,92,219,254,204,239,155,61,215,21,160,251,145,42,245,8,234,246,2,248,85,73,126,49,183,76 };
    byte_vec_t pk { 4,17,158,133,53,137,68,178,103,102,45,176,11,37,100,84,10,86,147,16,53,225,164,85,210,127,245,53,105,167,167,122,128,230,99,198,217,6,190,199,74,35,1,169,34,211,216,86,158,87,50,160,91,121,105,249,93,147,7,24,38,13,7,250,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 542 ") {
    byte_vec_t msg { 97,173,155,144 };
    byte_vec_t sig { 229,120,152,230,10,24,34,184,11,42,250,219,114,112,82,84,124,3,164,146,112,174,254,192,120,169,69,11,26,26,29,0,76,105,77,36,151,190,111,109,3,186,31,99,95,143,86,252,180,115,215,11,81,115,8,107,218,29,224,134,218,203,167,14 };
    byte_vec_t pk { 4,212,233,79,35,232,149,147,23,185,208,244,67,90,174,93,110,50,92,47,202,231,17,61,79,33,108,25,21,1,201,215,205,32,29,125,8,132,170,238,251,130,31,243,235,173,32,116,64,61,187,9,154,37,177,75,237,229,202,167,166,25,207,135,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 543 ") {
    byte_vec_t msg { 174,237,92,101 };
    byte_vec_t sig { 182,236,89,100,182,174,20,96,44,221,91,218,219,72,172,25,178,217,209,61,64,243,36,89,229,96,26,4,173,18,51,93,84,65,12,36,145,0,185,158,237,215,182,12,221,22,236,41,129,119,230,152,2,198,55,228,143,243,179,139,47,163,230,242 };
    byte_vec_t pk { 4,119,8,52,197,135,54,75,104,50,174,127,45,108,117,125,84,21,168,119,175,143,101,169,9,113,30,62,189,67,239,128,78,193,255,146,135,208,197,198,233,149,157,3,147,201,154,243,109,107,168,252,202,157,9,159,161,52,148,6,198,242,167,180,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 543 ") {
    byte_vec_t msg { 143,56,69,28 };
    byte_vec_t sig { 199,115,113,178,12,121,238,98,18,185,156,27,70,162,43,40,241,98,106,194,3,101,197,110,103,236,42,152,92,219,163,241,3,192,100,94,39,181,184,240,46,117,119,241,41,153,80,221,243,156,56,28,93,135,93,39,137,252,114,15,187,150,44,157 };
    byte_vec_t pk { 4,238,177,226,200,68,16,178,129,104,115,128,236,222,190,123,164,115,111,117,66,102,209,121,200,26,16,148,8,49,183,30,150,177,16,132,162,97,18,56,123,191,189,97,221,167,17,210,196,40,30,118,57,51,134,25,207,35,252,81,41,1,69,61,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 544 ") {
    byte_vec_t msg { 179,183,0,107 };
    byte_vec_t sig { 68,34,192,112,124,212,134,148,29,12,85,223,133,42,248,1,16,101,21,180,183,109,140,213,123,102,133,234,5,210,242,193,142,70,39,33,248,173,49,46,187,6,65,240,27,146,125,237,70,254,77,158,246,174,106,7,170,232,90,125,229,228,98,242 };
    byte_vec_t pk { 4,168,74,188,176,180,247,152,207,220,182,88,206,157,139,223,148,90,48,58,1,156,165,215,33,205,141,233,240,37,210,251,164,62,173,154,150,253,221,39,233,155,99,38,192,227,183,4,160,39,246,98,119,240,230,19,118,48,230,56,66,37,242,102,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 544 ") {
    byte_vec_t msg { 92,33,168,124 };
    byte_vec_t sig { 84,27,73,129,70,88,127,115,171,46,126,149,177,83,156,222,80,109,196,219,200,196,36,33,67,251,150,113,74,5,42,217,75,225,45,21,206,120,140,132,238,240,45,81,153,69,194,91,177,218,96,21,175,40,171,255,59,49,169,32,56,138,251,129 };
    byte_vec_t pk { 4,84,85,159,183,234,58,77,220,168,52,222,29,63,14,50,124,73,165,58,106,59,24,75,43,254,26,220,140,190,31,188,231,196,141,218,70,93,147,190,187,18,218,239,88,120,254,232,144,224,83,213,180,178,85,208,91,190,171,211,183,107,199,235,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 545 ") {
    byte_vec_t msg { 48,28,86,200 };
    byte_vec_t sig { 112,162,68,17,36,165,153,153,210,233,149,210,19,69,198,77,121,31,139,228,54,180,136,18,78,73,205,223,93,110,47,252,158,21,32,82,89,164,152,56,116,137,114,59,48,4,34,49,71,37,216,222,2,105,95,215,167,149,38,230,56,130,195,252 };
    byte_vec_t pk { 4,65,191,31,151,146,148,237,30,131,199,1,209,105,209,13,111,103,94,37,221,224,230,73,18,44,160,218,152,149,60,14,168,220,71,93,43,133,65,93,216,98,177,171,12,251,55,61,56,194,174,156,13,46,223,7,112,69,202,92,159,116,225,197,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 545 ") {
    byte_vec_t msg { 153,239,1,89 };
    byte_vec_t sig { 22,110,79,149,128,236,106,28,13,205,35,109,64,16,107,200,26,147,61,199,226,154,129,153,225,198,36,46,90,222,211,40,116,0,107,153,31,138,243,175,79,184,203,41,192,222,150,32,43,198,77,34,179,78,77,148,140,50,71,149,173,73,117,29 };
    byte_vec_t pk { 4,128,34,136,121,113,234,58,245,31,32,80,5,186,43,179,11,156,82,250,51,174,238,105,181,146,237,209,181,1,0,124,189,235,132,207,46,77,103,208,179,80,64,19,212,221,253,148,41,172,27,6,34,26,39,85,152,250,213,3,91,195,235,52,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 546 ") {
    byte_vec_t msg { 39,81,28,227 };
    byte_vec_t sig { 16,185,51,106,124,161,41,87,160,137,27,23,31,142,0,248,84,8,11,101,63,241,213,106,249,156,77,234,11,234,255,152,176,221,204,49,177,67,207,69,112,49,141,156,192,75,67,78,110,160,115,249,243,126,59,24,150,120,108,61,61,38,231,240 };
    byte_vec_t pk { 4,21,170,73,101,227,174,35,199,169,154,166,194,9,228,62,81,101,34,117,199,147,156,193,235,250,24,160,146,235,27,191,143,188,87,103,34,106,72,220,116,209,104,18,67,31,79,129,237,13,74,27,14,88,185,226,228,157,76,96,103,170,84,150,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 546 ") {
    byte_vec_t msg { 250,222,138,217 };
    byte_vec_t sig { 103,139,30,242,27,97,8,38,132,91,51,85,24,65,255,255,144,116,193,219,152,6,195,145,97,71,128,188,26,125,39,132,185,52,52,113,20,105,249,17,67,4,69,188,20,124,42,85,90,157,131,74,192,166,227,126,43,143,113,32,64,60,194,2 };
    byte_vec_t pk { 4,8,37,222,219,133,65,125,167,40,129,251,107,151,218,26,19,196,55,156,245,108,115,84,250,77,175,67,196,247,53,183,116,9,38,99,82,121,16,28,232,14,250,108,61,61,54,86,205,4,203,95,118,63,124,99,222,63,169,40,110,44,252,244,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 547 ") {
    byte_vec_t msg { 119,88,95,185 };
    byte_vec_t sig { 14,180,244,161,243,93,105,96,64,147,210,4,61,172,250,236,86,68,250,91,156,3,207,81,58,190,119,143,3,215,153,10,255,121,2,201,85,167,6,209,184,131,8,232,179,165,78,152,1,110,112,214,37,190,127,109,209,0,249,72,115,155,200,120 };
    byte_vec_t pk { 4,125,217,151,188,31,152,251,1,123,146,98,101,34,164,212,127,112,103,85,80,72,246,41,179,192,37,251,22,50,140,21,91,24,30,188,135,229,141,108,76,2,52,1,125,188,146,176,247,108,110,148,221,64,207,228,148,173,107,55,237,150,200,119,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 547 ") {
    byte_vec_t msg { 102,102,209,156 };
    byte_vec_t sig { 174,228,76,64,149,148,230,21,42,247,247,133,127,183,251,58,17,114,42,43,34,186,236,120,216,92,228,48,130,103,245,162,33,156,66,89,57,150,32,128,45,127,96,140,75,30,160,160,154,164,220,78,1,106,87,6,31,117,143,101,113,48,150,235 };
    byte_vec_t pk { 4,18,206,81,7,239,188,180,204,30,162,54,224,72,134,201,16,114,112,227,144,243,31,33,160,76,225,101,44,146,108,61,69,55,64,94,174,56,182,45,61,76,214,124,46,207,105,86,20,98,73,225,163,60,247,92,35,62,222,111,94,66,175,145,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 548 ") {
    byte_vec_t msg { 130,88,189,223 };
    byte_vec_t sig { 165,124,138,223,216,91,28,52,137,241,12,132,8,223,69,197,202,210,49,187,86,238,235,202,131,68,85,10,110,75,130,68,39,130,40,185,151,40,36,235,88,23,168,109,245,240,122,131,74,169,34,221,182,139,125,26,214,128,240,204,83,202,180,21 };
    byte_vec_t pk { 4,171,147,99,33,121,239,109,236,43,122,162,15,78,146,208,233,225,56,93,10,208,152,48,10,50,138,78,249,117,195,29,168,229,209,121,213,199,222,175,25,255,22,148,109,246,40,213,165,61,130,206,202,254,204,208,223,122,86,158,46,168,204,40,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 548 ") {
    byte_vec_t msg { 41,137,18,97 };
    byte_vec_t sig { 229,55,158,115,228,227,124,31,29,71,108,203,237,131,193,145,18,124,26,88,111,26,46,34,94,78,174,195,204,83,169,119,191,72,178,137,79,116,34,39,212,128,178,95,198,197,175,173,9,170,213,129,176,42,11,247,123,255,116,192,79,138,51,62 };
    byte_vec_t pk { 4,244,1,67,72,28,209,218,190,251,229,159,35,8,190,126,140,118,22,141,78,240,66,167,66,241,77,114,193,65,153,187,248,64,30,110,237,240,218,26,141,55,211,48,98,40,89,37,177,22,156,161,37,95,25,177,170,48,75,101,28,196,68,12,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 549 ") {
    byte_vec_t msg { 177,43,22,77 };
    byte_vec_t sig { 190,131,220,16,31,43,172,25,224,74,82,135,212,158,146,133,0,207,254,136,139,152,35,218,172,19,168,43,192,27,229,64,216,87,109,119,97,80,212,190,52,186,175,102,65,121,140,113,89,231,143,65,129,36,149,143,28,22,149,211,177,152,133,227 };
    byte_vec_t pk { 4,223,34,38,51,31,51,150,89,120,229,159,56,246,175,167,50,157,55,59,197,214,247,248,224,25,206,211,210,78,197,48,52,213,215,104,210,173,209,19,222,27,111,192,47,227,119,29,32,155,174,138,116,27,31,69,122,37,99,76,19,176,110,228,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 549 ") {
    byte_vec_t msg { 211,250,248,19 };
    byte_vec_t sig { 114,37,185,148,219,126,66,167,99,174,50,198,225,80,12,99,135,109,103,117,79,80,174,107,153,11,241,164,89,144,69,253,109,84,235,243,100,169,34,168,132,162,112,187,255,27,72,111,202,188,15,144,98,204,131,217,40,226,71,66,83,81,100,102 };
    byte_vec_t pk { 4,18,109,111,14,134,47,95,182,115,39,168,38,177,191,152,174,25,32,151,156,252,178,240,4,153,69,170,139,135,93,97,22,126,130,166,191,154,42,223,60,108,255,236,51,167,44,235,157,169,203,178,174,88,36,28,87,50,142,155,117,226,133,177,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 550 ") {
    byte_vec_t msg { 60,249,70,25 };
    byte_vec_t sig { 235,239,127,235,27,133,229,184,3,138,43,211,104,26,243,23,244,141,17,199,118,4,248,8,239,80,105,223,127,244,245,27,116,163,6,84,99,162,57,32,233,62,84,63,29,114,7,17,172,240,153,86,105,1,10,231,215,20,202,93,34,159,107,4 };
    byte_vec_t pk { 4,0,186,131,91,100,112,231,170,250,87,151,201,167,67,153,242,167,9,40,62,146,230,48,122,128,77,230,153,100,57,96,59,183,193,89,134,216,127,204,226,19,248,25,6,1,55,146,190,152,189,101,84,69,171,153,220,112,192,102,133,253,171,10,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 550 ") {
    byte_vec_t msg { 49,204,129,92 };
    byte_vec_t sig { 60,95,133,221,115,79,171,206,72,78,16,23,170,128,173,231,114,197,108,4,80,146,69,63,239,79,226,168,179,119,3,17,2,88,77,100,222,201,247,163,94,224,29,199,186,135,202,242,179,201,213,148,1,180,222,198,140,11,179,229,229,237,147,136 };
    byte_vec_t pk { 4,235,56,201,190,177,224,127,15,87,3,64,21,216,249,222,140,72,152,118,30,23,111,180,27,4,123,124,166,140,1,65,99,18,102,73,246,248,179,46,110,128,87,246,120,210,133,223,102,211,135,87,112,170,29,109,120,146,238,135,104,41,9,109,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 551 ") {
    byte_vec_t msg { 243,80,5,175 };
    byte_vec_t sig { 60,254,71,128,39,254,141,156,186,24,88,179,17,170,50,56,4,55,177,165,29,239,26,75,4,177,175,28,29,64,236,40,221,121,109,190,246,220,44,220,239,163,101,20,204,122,194,115,195,161,34,238,28,214,59,6,100,168,53,21,177,172,63,105 };
    byte_vec_t pk { 4,101,89,55,195,221,234,5,77,67,70,73,196,166,4,10,221,119,151,182,36,194,182,204,44,178,87,202,244,187,74,76,41,232,245,228,181,234,141,210,81,120,147,186,56,117,218,96,109,57,148,238,34,164,213,216,15,175,40,254,48,62,176,211,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 551 ") {
    byte_vec_t msg { 15,177,237,153 };
    byte_vec_t sig { 124,200,60,192,53,175,226,99,245,182,27,27,72,119,175,141,232,38,59,194,250,38,98,38,184,95,84,88,207,110,211,162,146,78,228,180,173,122,207,90,47,162,10,248,140,140,154,23,37,34,43,151,61,4,223,4,109,157,10,126,65,154,150,230 };
    byte_vec_t pk { 4,140,128,172,96,40,84,11,189,67,160,223,172,43,74,33,119,227,50,177,68,24,108,143,95,224,231,127,235,166,233,25,190,219,27,90,200,55,185,65,22,81,214,147,151,72,245,123,180,15,111,119,175,41,85,35,186,144,85,249,135,240,46,22,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 552 ") {
    byte_vec_t msg { 68,39,216,123 };
    byte_vec_t sig { 81,156,112,17,160,46,3,5,0,249,40,88,15,12,74,22,106,254,110,36,5,242,241,251,32,216,151,31,198,79,124,124,42,173,248,69,41,36,123,170,191,81,169,202,118,236,183,142,11,19,101,67,3,1,177,106,250,15,25,78,121,112,69,181 };
    byte_vec_t pk { 4,40,240,150,83,20,12,255,110,22,218,20,181,217,129,167,100,56,163,61,179,79,11,96,34,249,82,6,125,128,212,96,42,25,206,195,244,99,179,118,6,15,207,56,65,214,76,148,54,62,56,225,147,149,16,19,90,12,201,158,182,230,132,71,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 552 ") {
    byte_vec_t msg { 235,6,179,118 };
    byte_vec_t sig { 26,247,173,188,185,174,47,85,131,79,228,166,100,78,159,252,0,194,117,80,84,3,142,204,138,62,153,100,36,31,101,223,143,224,244,38,119,133,230,126,144,74,4,225,192,160,138,23,122,23,107,120,103,197,124,181,100,207,35,49,12,231,200,71 };
    byte_vec_t pk { 4,197,32,80,38,24,37,78,252,249,34,24,239,11,9,145,29,146,100,93,54,176,28,220,108,148,18,80,54,241,242,14,158,198,160,115,235,139,62,4,215,78,1,132,221,5,70,116,106,133,248,194,50,217,185,96,12,145,221,25,210,231,183,186,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 553 ") {
    byte_vec_t msg { 173,28,134,212 };
    byte_vec_t sig { 120,18,242,227,16,199,97,16,226,73,245,204,170,108,208,85,135,81,171,108,49,92,197,228,94,169,147,250,143,164,53,55,229,54,55,171,192,186,86,181,74,134,49,175,25,224,63,17,15,103,92,181,8,139,254,0,84,99,37,193,179,104,74,121 };
    byte_vec_t pk { 4,218,238,24,226,63,212,21,2,141,48,223,3,133,126,113,188,150,193,2,114,117,185,41,198,211,147,141,155,13,178,20,150,31,200,74,255,16,50,50,174,242,209,172,197,95,135,229,74,251,126,88,248,84,176,123,238,233,86,129,225,53,15,169,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 553 ") {
    byte_vec_t msg { 200,179,93,100 };
    byte_vec_t sig { 34,114,17,148,119,46,83,198,224,124,44,101,186,128,118,220,113,223,237,162,50,54,125,167,34,51,253,230,90,96,192,196,252,190,152,133,130,105,41,247,61,133,110,253,218,9,75,90,47,233,136,158,126,13,119,31,11,182,80,240,184,10,178,164 };
    byte_vec_t pk { 4,255,122,117,69,150,203,250,56,112,178,221,100,211,204,34,58,76,205,181,13,191,108,97,214,173,182,115,73,242,200,252,81,198,44,79,202,42,130,61,26,162,15,231,2,100,127,99,109,217,183,119,237,89,216,179,80,254,11,124,99,47,18,215,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 554 ") {
    byte_vec_t msg { 238,129,18,81 };
    byte_vec_t sig { 152,110,115,157,19,206,19,210,49,217,179,20,66,208,144,220,171,1,66,101,171,187,34,8,196,189,19,89,117,31,24,61,13,195,198,118,216,86,129,74,113,12,153,188,121,6,93,20,73,253,162,74,2,42,219,127,117,98,36,76,161,130,95,222 };
    byte_vec_t pk { 4,61,159,92,85,210,188,8,65,75,161,195,116,181,96,64,79,4,252,109,1,127,9,50,59,147,67,183,30,119,231,77,243,77,4,41,198,143,209,11,155,127,180,129,14,142,159,254,229,43,99,117,96,21,206,175,58,66,23,7,171,169,178,22,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 554 ") {
    byte_vec_t msg { 67,128,251,198 };
    byte_vec_t sig { 49,87,136,186,22,1,151,199,196,189,115,42,156,164,151,42,217,98,233,219,41,119,59,159,71,74,173,63,174,185,221,147,71,99,213,232,254,200,128,161,131,227,106,126,114,162,237,250,169,177,220,6,80,206,45,23,178,195,33,157,34,210,152,10 };
    byte_vec_t pk { 4,220,35,254,226,18,75,129,252,156,135,223,216,152,77,75,62,216,164,15,200,60,172,159,243,239,39,193,12,237,76,169,22,51,1,195,100,140,20,217,213,10,217,79,22,174,230,196,174,108,99,226,115,216,77,73,23,211,198,179,84,86,235,129,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 555 ") {
    byte_vec_t msg { 56,99,11,236 };
    byte_vec_t sig { 64,195,142,208,180,184,162,246,53,240,203,75,243,20,143,104,183,135,109,53,193,92,113,182,162,85,116,100,207,174,173,103,155,162,58,23,74,70,35,149,28,199,133,77,98,202,98,89,58,110,237,105,214,106,19,214,173,254,91,6,90,29,42,237 };
    byte_vec_t pk { 4,127,166,29,255,114,99,222,148,67,85,235,180,116,2,143,221,212,145,134,82,235,44,197,68,138,54,198,217,8,75,0,131,165,96,147,122,86,98,132,147,56,150,232,80,196,243,57,131,186,200,163,51,83,110,137,111,33,41,221,154,206,163,14,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 555 ") {
    byte_vec_t msg { 178,25,136,156 };
    byte_vec_t sig { 237,19,151,14,155,76,71,130,230,250,186,184,228,251,32,17,199,66,186,131,198,166,65,147,145,98,242,221,28,86,116,223,251,105,83,222,205,211,168,216,108,169,48,186,195,6,201,180,22,167,189,57,11,34,173,190,157,20,159,73,197,86,169,249 };
    byte_vec_t pk { 4,149,27,176,10,205,108,196,216,72,198,41,198,63,182,225,46,105,45,152,38,247,203,101,179,98,220,255,181,19,179,34,255,73,244,4,2,98,75,118,135,61,13,105,179,18,133,21,66,251,63,45,162,221,44,104,184,25,122,170,158,201,22,106,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 556 ") {
    byte_vec_t msg { 134,203,49,230 };
    byte_vec_t sig { 171,52,103,9,55,176,145,39,224,204,104,81,106,119,118,255,177,104,170,9,162,110,107,128,163,35,31,93,153,18,56,80,57,75,50,213,7,6,172,108,196,201,162,85,226,28,87,112,233,139,218,210,12,18,185,61,162,57,23,230,245,93,26,229 };
    byte_vec_t pk { 4,102,24,244,198,13,13,133,66,97,103,131,223,130,127,74,106,227,98,2,31,90,56,176,25,158,165,65,121,235,201,232,213,166,162,218,229,213,168,3,11,187,214,254,211,244,62,252,180,100,151,254,69,186,51,120,195,238,241,67,106,53,182,32,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 556 ") {
    byte_vec_t msg { 76,117,188,218 };
    byte_vec_t sig { 121,98,83,156,84,134,20,205,33,224,121,113,23,164,220,226,3,21,224,146,213,95,188,237,232,80,13,28,179,27,38,178,151,134,32,200,225,72,67,36,193,174,95,202,89,197,75,228,154,34,87,55,214,118,212,245,146,56,155,159,236,225,173,239 };
    byte_vec_t pk { 4,190,15,106,90,137,197,39,183,242,246,247,101,213,199,2,31,129,167,3,176,220,192,222,238,94,208,186,49,94,154,248,144,160,4,87,169,101,1,91,98,1,112,69,180,211,12,255,41,137,41,123,144,75,198,215,217,40,145,170,96,69,69,36,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 557 ") {
    byte_vec_t msg { 194,203,209,59 };
    byte_vec_t sig { 42,117,182,144,29,134,24,155,129,9,100,47,147,219,170,227,251,133,252,197,67,44,181,1,56,155,228,20,222,142,77,197,34,18,244,123,76,196,27,160,78,247,89,109,168,107,15,162,208,107,255,78,205,204,188,160,3,75,111,110,141,90,231,7 };
    byte_vec_t pk { 4,112,157,13,53,222,182,214,164,139,157,239,56,120,213,63,230,184,238,210,68,50,221,35,185,19,41,133,17,18,123,170,54,173,69,237,6,195,218,175,9,197,107,220,73,40,221,179,82,150,147,145,79,83,98,41,70,227,156,227,191,191,218,12,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 557 ") {
    byte_vec_t msg { 136,73,179,172 };
    byte_vec_t sig { 49,25,75,7,64,96,13,196,127,59,192,61,80,205,13,78,221,49,190,83,182,81,242,146,175,73,55,94,54,62,57,153,194,209,51,122,71,71,213,33,139,42,133,74,225,86,156,193,187,240,43,127,82,1,63,247,224,108,210,216,19,253,243,219 };
    byte_vec_t pk { 4,27,213,242,50,157,33,33,198,55,2,115,123,153,32,168,213,229,185,84,86,143,219,184,210,123,58,98,54,20,237,99,29,249,63,145,242,154,24,8,185,18,66,91,183,140,142,131,247,231,165,156,227,20,31,186,44,25,245,204,53,97,45,133,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 558 ") {
    byte_vec_t msg { 227,61,185,252 };
    byte_vec_t sig { 239,128,179,160,179,59,179,28,255,152,4,64,138,204,174,50,66,46,185,83,104,146,146,110,93,1,125,55,48,122,77,250,10,210,204,239,97,27,29,33,217,104,185,233,150,11,135,9,223,104,238,49,217,175,39,116,47,234,136,159,101,148,120,4 };
    byte_vec_t pk { 4,251,151,36,207,114,223,87,62,150,125,74,152,3,141,20,161,98,27,184,126,9,187,34,249,28,248,24,133,25,81,164,51,54,199,163,240,237,113,61,196,169,41,181,224,213,168,9,153,32,114,170,81,36,113,187,49,186,255,220,32,77,78,57,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 558 ") {
    byte_vec_t msg { 158,209,252,235 };
    byte_vec_t sig { 101,26,82,9,229,104,250,0,47,27,163,196,97,40,124,138,83,41,248,153,239,42,254,44,173,248,22,34,245,10,58,166,192,236,53,161,88,123,81,202,87,248,231,64,137,162,248,26,44,14,116,203,6,251,32,227,80,58,230,35,233,92,83,114 };
    byte_vec_t pk { 4,102,56,109,14,33,55,36,171,197,100,88,248,154,190,17,94,247,56,8,247,57,106,49,212,107,154,21,183,141,96,244,241,146,248,169,40,191,118,1,144,248,123,245,55,48,143,14,87,88,49,42,243,149,19,29,144,89,92,145,21,119,7,118,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 559 ") {
    byte_vec_t msg { 123,114,135,79 };
    byte_vec_t sig { 248,122,190,173,126,158,72,184,129,216,86,61,172,253,154,245,149,6,33,178,251,163,15,75,205,107,183,28,184,91,52,236,231,151,255,37,161,98,149,127,30,12,192,70,58,40,59,151,30,231,52,191,171,50,100,183,238,58,0,39,102,128,165,215 };
    byte_vec_t pk { 4,102,64,52,126,109,82,46,231,12,98,25,134,84,127,173,87,28,24,214,141,86,81,150,32,199,117,38,220,117,119,206,228,222,54,204,181,207,168,15,213,86,218,127,75,156,163,54,36,146,55,182,242,215,126,99,62,221,66,163,58,101,240,41,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 559 ") {
    byte_vec_t msg { 9,69,240,89 };
    byte_vec_t sig { 30,163,137,152,233,223,168,239,248,138,28,180,220,34,221,156,215,111,59,73,84,76,46,56,210,229,214,169,192,106,102,38,84,196,59,153,118,150,112,123,229,232,192,191,98,46,241,181,176,102,108,174,155,200,99,32,243,168,203,113,207,129,79,223 };
    byte_vec_t pk { 4,72,201,151,153,109,228,18,243,129,119,17,208,78,207,237,146,18,63,24,54,56,100,136,221,132,138,226,191,33,165,24,24,89,252,197,75,252,121,178,109,91,43,40,21,51,149,182,158,72,48,241,77,144,167,4,68,188,201,106,189,249,211,67,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 560 ") {
    byte_vec_t msg { 209,46,118,224 };
    byte_vec_t sig { 138,231,234,244,92,60,208,242,110,214,195,251,158,20,138,164,55,5,217,38,119,48,182,194,111,117,47,114,85,201,125,97,219,111,214,141,6,208,230,106,190,100,115,110,160,6,49,9,24,191,160,58,218,235,82,222,248,190,242,58,108,150,167,209 };
    byte_vec_t pk { 4,42,61,106,169,105,160,69,158,148,41,153,123,188,170,252,181,29,157,133,76,30,165,128,72,176,3,96,17,51,152,21,212,23,227,88,214,126,73,92,198,115,249,171,76,238,173,93,194,235,119,81,101,223,226,239,130,227,35,252,166,209,50,37,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 560 ") {
    byte_vec_t msg { 60,250,166,204 };
    byte_vec_t sig { 142,114,120,212,0,114,22,17,78,41,249,196,63,76,37,253,172,201,158,128,113,106,151,96,162,48,116,170,145,104,68,25,15,250,97,242,190,86,71,66,129,73,16,119,242,175,102,218,68,246,45,151,118,82,24,102,47,28,226,85,179,216,245,174 };
    byte_vec_t pk { 4,34,183,101,100,208,185,253,60,9,232,169,206,20,234,240,88,187,129,71,2,95,160,191,88,189,239,159,173,176,227,127,6,196,105,176,174,3,3,251,28,208,28,149,122,246,141,189,84,158,1,161,249,254,63,9,211,217,228,57,192,247,103,44,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 561 ") {
    byte_vec_t msg { 237,181,98,15 };
    byte_vec_t sig { 68,21,144,216,242,12,145,210,132,143,41,195,15,104,146,97,101,253,36,80,42,183,122,103,20,167,175,238,12,111,65,132,204,158,170,210,178,140,128,149,112,252,179,71,108,96,250,201,167,118,148,56,50,144,49,59,242,47,217,57,130,139,101,120 };
    byte_vec_t pk { 4,230,13,212,58,20,223,129,140,213,32,166,20,198,9,63,125,86,109,134,186,167,147,47,175,18,24,70,26,120,194,191,30,29,163,19,250,136,165,128,105,217,118,4,138,128,184,172,76,235,114,203,1,21,53,203,134,14,93,193,81,37,182,114,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 561 ") {
    byte_vec_t msg { 235,124,240,202 };
    byte_vec_t sig { 107,44,85,31,177,135,160,116,131,69,52,215,141,240,196,14,254,128,33,120,169,155,37,6,247,78,0,247,19,166,10,41,172,233,200,22,206,54,230,39,75,35,163,76,96,116,210,158,230,224,145,33,39,245,67,137,134,249,67,147,117,58,247,81 };
    byte_vec_t pk { 4,141,113,30,85,156,163,237,238,143,191,105,250,138,26,174,166,135,228,40,148,186,162,171,134,241,92,220,77,127,87,225,236,24,39,142,249,250,139,7,47,19,138,120,135,83,202,160,80,211,38,33,33,32,186,56,182,74,185,153,43,131,71,253,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 562 ") {
    byte_vec_t msg { 113,37,238,181 };
    byte_vec_t sig { 43,161,250,69,106,183,163,158,74,245,220,44,40,26,12,85,208,108,84,210,105,34,44,154,46,171,53,54,91,249,229,205,11,28,74,180,216,124,68,95,233,158,81,28,12,107,208,112,33,34,138,114,24,115,72,20,223,79,64,140,96,43,44,237 };
    byte_vec_t pk { 4,124,118,61,97,105,70,61,181,200,125,11,74,88,14,33,244,107,48,96,213,252,94,100,196,189,54,205,178,4,133,81,192,219,185,65,105,65,64,145,4,109,242,223,88,83,136,155,21,74,11,54,192,105,92,237,126,135,139,33,163,151,170,66,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 562 ") {
    byte_vec_t msg { 88,198,2,154 };
    byte_vec_t sig { 230,69,180,66,10,94,60,9,202,56,62,1,90,25,192,190,181,28,152,128,10,205,251,82,103,90,39,35,59,253,45,137,122,19,179,40,236,255,178,76,7,148,113,94,67,217,88,4,228,169,121,173,20,67,37,61,69,154,4,180,54,152,176,11 };
    byte_vec_t pk { 4,205,117,121,198,159,1,9,236,23,55,66,220,125,169,35,234,160,50,108,171,217,52,118,227,187,94,49,102,190,240,5,160,182,73,16,79,110,252,16,117,175,36,245,81,187,78,86,86,97,243,33,254,62,240,12,191,8,82,171,1,182,35,91,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 563 ") {
    byte_vec_t msg { 127,41,69,24 };
    byte_vec_t sig { 244,243,78,136,118,52,117,105,247,27,10,31,246,43,19,123,221,216,4,159,197,37,190,132,19,97,107,143,198,182,226,102,158,111,142,26,21,222,172,97,134,237,163,128,73,229,136,59,118,198,176,22,47,198,12,68,101,219,193,58,204,209,222,162 };
    byte_vec_t pk { 4,141,80,192,20,68,253,30,151,170,188,199,49,220,115,78,36,126,202,123,143,65,87,245,204,59,211,114,97,153,220,89,23,232,202,131,45,16,58,196,91,25,144,34,234,125,153,74,139,102,148,16,196,201,216,137,114,70,178,32,224,182,212,207,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 563 ") {
    byte_vec_t msg { 105,29,186,177 };
    byte_vec_t sig { 149,164,138,196,60,253,75,48,251,195,72,169,84,189,81,238,204,180,7,197,48,214,218,28,222,71,167,67,79,156,215,225,64,131,106,216,186,234,199,130,45,199,255,163,232,68,32,234,11,149,15,123,223,231,86,202,55,104,214,208,46,203,3,122 };
    byte_vec_t pk { 4,241,165,53,123,129,164,233,170,109,145,78,134,60,192,8,72,163,72,50,114,234,14,66,102,126,223,59,59,75,81,152,10,42,172,4,122,239,144,136,49,8,118,137,82,55,177,64,183,55,27,153,182,99,244,96,75,38,42,96,205,165,57,179,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 564 ") {
    byte_vec_t msg { 55,1,201,18 };
    byte_vec_t sig { 87,143,121,100,35,142,243,123,52,218,219,115,5,98,104,108,168,55,155,100,20,79,115,137,111,17,249,58,97,22,171,211,180,23,121,177,67,13,141,218,166,200,207,34,253,63,35,195,88,165,19,153,72,110,63,132,241,184,133,127,69,19,22,82 };
    byte_vec_t pk { 4,175,3,216,84,245,17,159,127,205,134,150,24,36,205,122,5,90,235,4,61,216,76,66,214,119,236,228,184,112,17,49,124,181,0,192,89,187,98,33,100,199,63,237,101,93,176,20,63,165,206,27,229,87,117,50,99,240,141,160,94,211,135,163,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 564 ") {
    byte_vec_t msg { 246,221,153,194 };
    byte_vec_t sig { 180,228,118,50,175,206,155,6,132,168,240,242,37,8,184,86,97,80,118,4,197,250,66,247,25,28,57,151,239,26,60,69,137,171,57,53,110,119,253,243,145,171,213,13,95,198,204,90,222,193,37,151,150,12,122,252,59,86,62,172,34,18,46,29 };
    byte_vec_t pk { 4,129,132,145,161,134,190,129,24,179,131,10,52,149,140,135,50,227,128,214,109,92,151,159,91,22,130,94,97,50,30,196,218,36,145,105,184,99,224,245,157,14,251,15,185,15,185,255,93,173,175,165,136,98,54,52,130,62,49,207,141,24,60,198,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 565 ") {
    byte_vec_t msg { 107,81,249,71 };
    byte_vec_t sig { 204,29,151,251,8,145,254,57,3,181,225,157,49,3,100,159,111,241,56,196,201,44,36,202,241,175,34,83,2,254,251,185,90,43,180,134,129,224,200,1,220,198,100,26,171,141,19,197,111,199,110,61,38,207,166,186,210,99,88,86,133,26,102,196 };
    byte_vec_t pk { 4,235,153,190,240,178,198,254,2,148,20,15,85,200,178,222,188,88,199,54,229,7,124,109,6,213,85,148,121,127,219,221,195,25,214,4,23,9,118,198,4,230,15,129,30,13,219,56,218,54,136,68,179,38,216,59,26,158,187,53,96,108,239,214,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 565 ") {
    byte_vec_t msg { 46,206,213,33 };
    byte_vec_t sig { 24,126,64,25,90,75,96,130,243,19,114,230,42,101,206,174,137,176,41,124,35,178,10,96,181,91,85,122,138,175,47,53,49,53,182,118,64,11,182,73,110,143,40,32,212,35,69,111,29,55,47,50,246,105,126,65,154,118,104,75,142,48,211,172 };
    byte_vec_t pk { 4,145,100,129,82,134,100,69,249,119,192,152,33,104,1,226,62,113,249,51,79,91,190,121,57,178,134,46,62,147,154,166,195,102,244,247,110,223,127,235,45,28,200,51,92,59,18,164,242,229,213,237,208,79,101,97,233,117,67,172,93,249,214,99,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 566 ") {
    byte_vec_t msg { 87,207,103,87 };
    byte_vec_t sig { 40,241,115,92,183,234,193,195,58,177,15,46,17,188,254,204,229,91,197,222,221,13,175,36,181,211,243,238,182,73,86,176,148,158,223,216,52,169,202,202,125,186,6,44,119,117,134,61,70,65,210,80,207,12,161,0,137,157,175,131,52,50,152,42 };
    byte_vec_t pk { 4,125,243,115,230,157,73,185,41,208,135,48,191,47,83,148,68,106,230,91,166,179,188,32,246,231,180,251,76,235,158,104,239,129,4,86,156,124,181,67,255,194,203,22,132,218,70,3,166,23,21,148,54,13,56,77,175,36,245,215,189,134,130,140,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 566 ") {
    byte_vec_t msg { 65,9,153,86 };
    byte_vec_t sig { 187,237,176,187,16,140,225,203,31,26,32,115,32,146,78,227,210,158,55,247,128,196,76,156,179,103,210,93,246,72,145,252,103,51,126,32,15,223,134,211,122,13,135,77,157,134,10,123,154,6,71,84,55,172,157,253,197,236,187,4,128,26,237,126 };
    byte_vec_t pk { 4,203,148,141,12,51,47,217,238,160,137,229,150,208,168,51,220,172,122,206,57,207,23,218,203,51,28,54,162,150,200,12,130,173,171,209,161,177,124,39,102,187,4,216,188,209,5,78,99,248,88,77,0,248,254,8,32,223,25,130,206,117,45,1,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 567 ") {
    byte_vec_t msg { 160,91,139,244 };
    byte_vec_t sig { 31,22,161,172,147,113,90,198,61,89,137,248,17,151,4,104,5,157,34,166,93,157,113,73,124,103,222,103,223,101,76,208,24,73,64,232,206,139,169,47,232,182,110,39,132,255,36,30,9,3,138,158,56,132,13,96,89,202,9,138,21,22,125,108 };
    byte_vec_t pk { 4,2,65,193,79,150,23,114,76,168,137,173,150,95,100,88,56,24,127,107,197,92,105,65,227,74,66,147,13,184,239,102,250,53,129,93,78,168,12,103,75,232,62,162,83,94,68,137,21,127,74,59,2,208,98,95,236,86,194,99,82,136,162,242,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 567 ") {
    byte_vec_t msg { 51,52,59,70 };
    byte_vec_t sig { 137,134,239,23,201,13,41,17,143,124,236,116,15,14,216,84,81,129,161,190,27,252,74,17,92,199,178,127,144,127,89,62,199,181,103,242,111,149,63,44,236,2,146,57,136,138,154,95,237,16,164,16,143,205,159,24,14,121,186,65,189,21,14,195 };
    byte_vec_t pk { 4,0,112,47,165,108,96,44,252,122,154,75,115,175,230,221,54,255,51,19,69,144,19,214,140,255,38,200,71,100,238,34,134,238,205,61,71,178,89,60,0,38,17,222,149,101,41,75,32,201,4,206,132,192,179,41,193,219,153,44,239,89,167,173,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 568 ") {
    byte_vec_t msg { 225,168,41,155 };
    byte_vec_t sig { 58,208,147,81,6,125,192,72,182,93,100,128,96,54,105,62,195,255,63,57,79,167,113,174,68,3,178,92,190,184,3,197,114,119,255,245,206,165,185,115,82,245,173,84,195,207,247,152,5,61,104,109,16,81,92,6,45,178,158,144,201,85,123,92 };
    byte_vec_t pk { 4,210,187,36,178,185,4,166,138,168,223,214,109,100,18,224,187,253,61,1,157,93,198,239,28,45,178,156,132,200,171,68,2,115,173,9,27,149,164,115,59,54,25,100,180,15,41,40,225,29,114,96,137,0,43,58,15,14,148,202,35,173,202,76,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 568 ") {
    byte_vec_t msg { 176,200,245,86 };
    byte_vec_t sig { 237,25,138,4,151,114,94,162,134,32,29,102,99,92,236,164,147,49,78,27,209,27,160,21,57,164,17,26,133,192,113,228,103,247,61,170,226,164,197,215,203,67,4,221,79,254,150,205,164,213,6,15,113,38,140,51,39,8,20,179,31,26,16,93 };
    byte_vec_t pk { 4,102,62,82,73,255,64,196,134,209,153,144,40,38,201,142,2,48,226,31,29,30,196,122,88,71,173,109,9,208,224,138,41,221,198,16,137,215,141,79,75,185,210,7,162,246,193,28,144,16,231,63,177,145,147,39,151,68,100,51,49,97,88,201,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 569 ") {
    byte_vec_t msg { 76,173,169,65 };
    byte_vec_t sig { 83,37,143,47,224,251,225,65,116,49,196,249,144,73,159,129,24,161,108,250,137,227,23,24,174,57,174,91,53,246,168,250,204,140,77,69,144,186,5,65,144,229,217,57,37,44,219,203,97,229,17,72,42,20,223,211,175,94,237,224,196,93,34,98 };
    byte_vec_t pk { 4,157,242,98,67,29,132,123,142,22,178,97,219,177,149,163,153,29,76,23,23,213,183,166,10,74,189,136,130,95,77,29,239,216,27,3,123,77,169,186,224,64,1,70,148,242,35,160,240,0,147,28,180,38,105,165,113,241,150,47,172,228,72,134,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 569 ") {
    byte_vec_t msg { 201,53,175,201 };
    byte_vec_t sig { 92,192,241,22,158,188,60,153,188,191,251,133,72,183,207,181,160,189,10,108,77,122,35,114,195,197,226,247,121,188,5,207,208,116,184,215,101,95,76,187,148,219,93,246,6,103,240,217,19,54,153,243,236,23,245,133,102,222,177,17,62,69,201,127 };
    byte_vec_t pk { 4,92,218,47,66,248,71,244,115,234,48,137,55,43,105,203,166,138,7,57,236,186,243,134,89,169,64,215,172,82,108,74,52,133,147,158,84,72,10,4,180,148,195,202,62,39,167,112,12,160,252,84,195,118,70,159,180,202,147,97,215,82,122,144,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 570 ") {
    byte_vec_t msg { 9,238,173,23 };
    byte_vec_t sig { 177,6,102,64,2,38,46,148,190,150,233,91,241,21,172,231,128,177,91,12,206,192,217,3,168,33,235,169,91,255,100,38,37,203,236,49,83,241,107,212,45,42,100,101,110,5,85,74,193,38,181,116,191,93,126,179,7,174,48,41,215,233,228,255 };
    byte_vec_t pk { 4,245,129,65,150,63,131,38,89,89,119,112,230,68,145,191,45,41,7,71,175,47,136,167,5,179,248,106,61,69,129,149,80,91,90,241,46,145,169,113,155,13,183,166,138,75,229,12,232,86,91,119,205,95,200,36,31,200,28,108,131,160,66,112,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 570 ") {
    byte_vec_t msg { 109,173,222,197 };
    byte_vec_t sig { 45,4,34,177,32,17,212,179,211,114,100,202,224,30,242,181,253,10,170,204,49,58,239,222,77,111,132,37,251,140,140,26,174,214,182,32,212,13,194,158,103,107,119,222,137,87,10,82,2,65,135,226,196,200,181,95,185,124,103,151,166,23,54,175 };
    byte_vec_t pk { 4,99,142,78,111,5,150,174,1,50,11,200,255,214,145,241,170,250,167,236,5,115,228,112,76,153,167,78,159,226,141,84,138,83,221,121,128,214,34,215,189,192,223,249,67,167,78,191,250,192,94,161,138,238,44,221,238,215,49,116,102,210,90,106,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 571 ") {
    byte_vec_t msg { 5,54,103,160 };
    byte_vec_t sig { 208,171,17,95,167,230,120,32,82,127,128,55,226,192,129,126,212,88,107,3,193,122,122,248,5,8,64,185,119,228,119,224,110,164,123,186,191,101,120,252,155,191,26,95,78,95,157,132,216,197,8,155,216,136,123,28,163,227,62,56,49,239,124,219 };
    byte_vec_t pk { 4,3,188,191,254,106,101,144,48,70,6,223,2,199,98,181,23,45,110,254,102,141,107,62,69,4,148,51,227,81,174,17,203,165,200,240,89,167,207,99,124,120,50,40,43,136,10,194,155,6,249,66,161,78,93,124,9,45,14,92,147,169,34,106,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 571 ") {
    byte_vec_t msg { 194,13,160,175 };
    byte_vec_t sig { 53,87,129,142,213,20,91,33,166,181,68,27,96,188,156,225,210,124,137,200,108,186,236,162,91,244,62,13,115,49,235,207,27,6,11,50,252,6,32,93,109,88,129,39,156,252,32,30,84,48,172,50,195,56,247,127,10,146,108,123,3,5,208,210 };
    byte_vec_t pk { 4,199,8,40,43,4,64,245,104,235,182,107,196,131,59,6,20,186,218,184,128,113,206,5,14,67,168,190,27,205,92,185,143,84,140,31,223,221,120,4,92,159,52,58,51,44,217,106,26,169,11,68,55,82,136,216,173,12,127,102,24,109,49,112,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 572 ") {
    byte_vec_t msg { 184,172,168,90 };
    byte_vec_t sig { 10,133,201,140,60,254,153,85,18,251,45,8,10,203,77,195,151,224,43,103,143,251,175,235,72,0,103,134,58,66,112,22,35,237,78,135,233,199,107,197,244,249,180,52,93,67,58,49,72,175,208,245,20,186,44,47,70,123,156,19,52,161,132,133 };
    byte_vec_t pk { 4,117,209,162,170,96,5,112,136,123,95,153,41,79,192,139,87,173,79,150,214,195,229,14,52,250,28,90,168,19,91,196,212,253,214,0,240,26,61,115,142,244,176,89,158,202,136,201,87,102,33,212,117,72,159,16,59,81,38,189,192,239,175,104,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 572 ") {
    byte_vec_t msg { 83,194,121,49 };
    byte_vec_t sig { 132,64,111,6,246,68,177,147,254,157,31,247,202,88,215,236,24,17,28,115,216,254,78,35,227,150,50,235,69,1,252,159,253,57,241,228,205,155,27,132,146,38,77,52,149,114,180,227,228,106,5,27,14,188,225,234,140,228,147,89,88,244,151,215 };
    byte_vec_t pk { 4,82,220,222,81,99,104,63,247,180,151,217,219,238,173,23,251,133,225,113,4,35,162,134,153,207,124,181,145,39,237,168,197,39,229,234,42,110,172,16,22,66,206,146,55,185,149,174,32,19,22,160,120,146,207,27,36,251,65,61,213,41,142,42,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 573 ") {
    byte_vec_t msg { 185,34,3,231 };
    byte_vec_t sig { 45,123,196,61,204,230,60,58,86,182,55,37,226,12,106,228,3,221,140,204,72,107,82,167,103,228,218,215,251,92,59,215,254,219,252,108,149,174,175,190,14,75,228,151,216,203,93,122,125,57,149,181,159,57,193,208,246,147,16,25,76,57,218,207 };
    byte_vec_t pk { 4,140,49,70,61,237,227,227,102,32,84,113,139,231,139,87,181,33,159,208,145,18,184,201,190,197,60,253,122,199,2,137,159,32,49,251,194,142,212,139,167,184,252,135,201,21,81,214,202,156,131,220,10,178,138,92,176,77,142,141,163,47,155,15,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 573 ") {
    byte_vec_t msg { 199,130,92,236 };
    byte_vec_t sig { 115,39,8,199,223,88,38,74,5,54,239,200,69,83,241,125,200,169,131,103,169,55,102,64,115,155,125,62,114,247,96,25,7,208,33,4,26,163,253,210,145,25,166,245,89,74,49,175,41,146,17,172,169,124,26,255,59,180,169,97,168,49,181,205 };
    byte_vec_t pk { 4,227,148,101,21,49,178,250,246,174,49,174,47,23,129,66,192,116,0,201,142,28,98,178,209,36,30,149,12,109,189,230,163,205,207,134,183,255,73,232,65,169,207,101,52,45,60,163,151,85,3,119,162,94,70,11,77,80,237,147,43,66,17,10,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 574 ") {
    byte_vec_t msg { 115,93,202,49 };
    byte_vec_t sig { 74,148,191,166,132,96,205,105,138,84,173,137,22,97,167,129,241,169,214,26,143,245,37,101,80,241,30,128,47,120,154,45,162,208,49,68,58,153,84,14,250,167,96,193,212,33,191,76,77,84,157,180,238,137,143,98,100,4,11,164,83,212,148,137 };
    byte_vec_t pk { 4,158,58,1,219,180,116,105,204,34,201,67,47,38,145,72,44,207,4,139,27,234,238,90,145,47,8,64,210,177,29,113,58,252,237,233,238,226,60,44,251,200,50,244,221,148,250,220,152,139,127,86,237,8,71,42,28,205,124,112,92,99,4,36,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 574 ") {
    byte_vec_t msg { 115,200,148,236 };
    byte_vec_t sig { 126,241,67,123,95,218,193,39,170,55,146,113,93,206,7,241,139,185,157,178,64,193,25,235,102,89,130,40,140,107,30,78,255,7,168,210,7,162,16,60,252,143,167,141,241,252,144,112,213,54,38,23,28,4,43,214,214,6,174,215,244,46,147,187 };
    byte_vec_t pk { 4,140,240,176,160,50,138,28,235,86,199,134,61,175,15,137,123,167,209,191,200,81,52,240,76,86,208,2,202,243,137,95,111,131,17,41,33,154,75,193,83,80,18,122,44,116,86,47,147,220,254,192,243,205,199,4,88,188,51,126,149,197,202,113,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 575 ") {
    byte_vec_t msg { 62,207,74,18 };
    byte_vec_t sig { 241,23,154,29,74,216,137,60,46,248,222,162,223,41,92,2,218,72,221,17,210,204,147,146,130,212,20,30,200,101,32,50,23,119,100,5,32,18,63,16,107,228,99,134,207,146,176,234,214,158,16,103,117,141,90,241,48,123,29,61,254,189,85,173 };
    byte_vec_t pk { 4,5,81,60,216,176,12,156,174,105,237,10,141,120,176,23,208,158,204,97,138,84,230,251,5,235,19,7,64,125,169,176,229,5,17,209,120,138,7,214,148,135,86,171,150,35,13,182,3,181,162,67,128,92,41,155,157,125,165,96,173,243,234,58,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 575 ") {
    byte_vec_t msg { 139,115,113,6 };
    byte_vec_t sig { 238,182,199,120,111,175,161,34,94,244,253,52,250,36,31,51,194,76,12,59,99,213,148,70,230,80,163,190,77,126,13,232,154,66,218,53,51,5,141,36,94,216,246,72,41,75,227,132,60,242,148,92,65,165,230,61,254,83,247,163,103,166,4,114 };
    byte_vec_t pk { 4,77,226,240,182,118,138,94,168,37,177,106,16,41,184,206,176,215,45,197,196,192,162,72,174,146,161,149,133,111,187,37,241,212,231,200,170,222,144,245,100,100,253,24,121,52,200,150,208,47,120,223,188,48,220,110,143,14,207,122,128,75,120,155,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 576 ") {
    byte_vec_t msg { 39,84,171,15 };
    byte_vec_t sig { 20,56,29,136,29,181,46,230,90,70,121,134,171,219,221,215,149,2,193,246,241,203,18,68,83,126,144,124,145,205,61,30,68,121,205,116,230,65,166,69,222,164,194,44,29,25,220,36,8,135,175,121,219,219,92,179,153,219,77,148,157,170,155,196 };
    byte_vec_t pk { 4,232,230,237,80,234,29,116,128,84,207,147,245,200,214,180,75,226,85,7,58,149,249,253,171,58,126,235,50,71,139,89,229,247,137,138,1,59,110,133,226,84,242,28,236,214,144,166,29,245,134,64,234,0,53,54,127,219,89,96,32,111,136,231,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 576 ") {
    byte_vec_t msg { 232,146,191,139 };
    byte_vec_t sig { 112,118,42,77,114,177,225,121,201,145,192,222,114,237,190,161,122,127,239,158,174,36,189,213,41,42,80,159,64,48,174,89,94,211,235,3,214,180,170,92,54,169,124,122,197,180,179,17,115,34,11,117,122,100,208,7,192,159,91,137,189,40,189,77 };
    byte_vec_t pk { 4,107,116,132,115,128,139,102,72,121,108,195,36,71,28,238,234,110,213,150,174,169,119,44,95,189,58,88,165,42,172,213,91,115,200,123,230,48,154,180,124,192,96,7,180,219,111,1,227,82,224,119,46,145,33,194,224,123,58,38,78,14,245,59,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 577 ") {
    byte_vec_t msg { 8,224,155,17 };
    byte_vec_t sig { 80,74,171,240,97,102,30,172,216,191,66,86,73,78,59,154,239,90,130,81,128,73,62,161,113,31,163,103,226,232,49,22,23,60,203,222,237,164,55,221,103,32,186,35,242,5,80,186,3,111,139,233,70,63,53,120,243,109,199,180,245,43,165,103 };
    byte_vec_t pk { 4,151,69,2,141,79,20,139,151,107,80,95,19,10,207,55,105,158,194,195,96,217,25,146,41,44,194,78,20,151,99,212,221,243,207,192,14,51,109,169,180,169,160,32,30,15,196,91,40,58,135,20,9,145,78,196,3,3,115,255,24,41,77,43,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 577 ") {
    byte_vec_t msg { 114,0,45,53 };
    byte_vec_t sig { 179,50,45,169,93,135,199,129,162,92,58,53,29,165,31,48,192,111,131,253,156,235,73,245,126,27,203,42,245,198,127,59,44,193,113,5,183,193,72,8,234,150,90,76,54,75,192,153,33,251,174,116,138,37,92,189,29,135,201,220,241,225,51,163 };
    byte_vec_t pk { 4,84,53,42,8,91,59,67,149,249,104,144,145,75,114,85,239,75,18,220,77,220,219,222,94,125,67,23,81,83,200,9,52,127,118,129,63,45,214,131,165,99,37,213,73,213,132,90,33,171,251,191,222,96,60,200,81,234,236,71,47,244,119,193,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 578 ") {
    byte_vec_t msg { 87,35,168,44 };
    byte_vec_t sig { 14,105,131,189,138,22,204,3,168,81,52,241,87,49,234,95,13,63,235,98,30,141,127,104,160,69,66,169,6,154,49,192,100,103,28,102,30,120,238,106,89,20,238,125,93,197,218,3,136,163,82,55,168,143,189,127,56,148,216,214,244,82,83,240 };
    byte_vec_t pk { 4,174,199,159,247,232,233,21,211,218,250,18,245,222,172,249,202,170,81,197,176,40,14,136,71,121,13,55,130,215,210,141,222,191,248,239,201,224,100,85,38,122,196,201,212,214,239,151,164,207,144,204,224,43,195,157,83,159,223,112,185,37,81,129,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 578 ") {
    byte_vec_t msg { 208,221,48,125 };
    byte_vec_t sig { 131,209,41,54,254,164,212,117,92,56,128,50,89,187,81,132,230,234,181,216,68,75,255,204,152,35,254,119,36,126,228,189,128,165,208,214,85,170,220,105,8,123,160,82,108,76,76,166,166,2,184,172,8,90,39,189,118,129,130,168,188,251,198,104 };
    byte_vec_t pk { 4,75,238,27,172,49,95,186,92,223,70,38,169,181,103,75,114,40,209,6,147,255,93,84,127,230,48,205,192,205,175,82,24,40,112,204,8,10,98,2,208,169,43,109,153,197,234,131,195,255,214,205,143,9,51,65,59,123,189,217,199,170,90,12,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 579 ") {
    byte_vec_t msg { 13,97,135,172 };
    byte_vec_t sig { 137,59,196,69,172,59,179,98,141,32,86,204,145,133,168,234,132,193,178,226,217,87,48,192,60,83,103,42,74,32,115,24,140,97,113,150,172,67,236,92,134,187,61,128,73,119,98,132,238,245,165,176,23,56,22,202,116,34,44,161,72,91,54,131 };
    byte_vec_t pk { 4,106,177,163,19,139,27,255,178,236,76,115,205,8,92,83,101,58,212,150,85,144,139,60,85,131,68,60,2,7,36,252,204,208,87,127,173,0,230,200,133,10,121,151,192,181,34,255,92,111,47,219,245,128,90,233,254,164,65,6,40,50,112,242,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 579 ") {
    byte_vec_t msg { 10,38,73,209 };
    byte_vec_t sig { 231,109,163,62,156,46,122,64,44,135,174,107,3,225,97,47,182,231,150,119,6,171,227,137,60,131,121,36,160,70,93,63,179,61,93,32,216,105,15,144,61,145,86,167,167,182,253,244,144,157,38,144,154,174,204,36,241,138,176,40,145,146,207,139 };
    byte_vec_t pk { 4,106,2,81,38,202,250,195,243,48,195,222,151,186,128,91,243,121,214,43,220,5,38,2,159,47,10,61,144,244,211,152,153,245,221,187,172,119,62,204,107,118,211,2,100,117,177,54,236,20,98,191,105,216,74,107,100,147,149,14,60,175,4,78,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 580 ") {
    byte_vec_t msg { 194,87,29,162 };
    byte_vec_t sig { 145,58,22,248,10,23,151,42,23,109,177,201,176,204,61,178,146,12,240,143,19,32,68,80,132,187,38,180,221,166,43,72,103,107,71,153,8,193,96,126,125,182,88,152,112,210,5,148,52,161,225,18,198,240,212,119,211,22,49,123,97,188,140,41 };
    byte_vec_t pk { 4,210,134,166,179,196,202,232,99,53,75,91,153,55,250,233,95,247,5,95,43,60,195,64,243,57,160,52,226,230,4,236,166,81,234,105,136,207,154,50,9,104,23,129,227,171,59,237,17,48,120,122,60,101,93,93,116,67,164,168,201,80,252,190,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 580 ") {
    byte_vec_t msg { 21,133,201,74 };
    byte_vec_t sig { 230,241,158,57,41,106,241,123,67,39,170,156,166,219,136,129,181,188,255,38,173,162,82,126,234,196,52,197,203,213,48,232,33,194,149,31,27,14,154,74,131,88,75,66,165,170,180,8,178,243,15,7,205,14,251,43,177,58,158,167,133,49,132,195 };
    byte_vec_t pk { 4,39,124,24,14,71,162,57,153,114,15,211,154,30,171,10,15,175,108,254,27,39,220,59,111,0,211,93,230,168,144,150,114,251,175,252,138,208,247,168,61,31,248,60,223,81,181,136,119,80,27,213,87,148,143,148,93,93,165,149,69,221,40,109,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 581 ") {
    byte_vec_t msg { 148,112,227,56 };
    byte_vec_t sig { 147,70,223,141,227,180,30,202,157,46,70,81,231,225,242,245,141,242,241,220,14,70,166,48,10,239,134,10,13,22,203,146,107,126,253,160,81,233,122,31,25,47,53,211,14,253,178,42,141,48,21,15,29,177,50,9,207,63,153,60,86,62,202,249 };
    byte_vec_t pk { 4,105,185,112,238,153,139,119,123,199,164,220,253,132,43,46,84,79,227,74,147,20,169,102,183,152,66,146,19,68,151,243,173,190,100,60,4,252,232,83,149,252,83,118,10,132,242,202,234,82,58,39,47,58,230,232,184,90,225,86,4,107,250,105,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 581 ") {
    byte_vec_t msg { 202,77,191,143 };
    byte_vec_t sig { 233,75,106,192,214,236,28,169,61,138,175,27,222,179,4,28,14,212,255,66,200,139,246,23,108,7,19,234,44,93,161,217,173,40,21,29,241,63,247,108,233,116,23,131,82,32,211,236,77,237,118,252,96,49,222,172,46,53,187,255,48,0,248,49 };
    byte_vec_t pk { 4,66,179,86,131,31,179,49,185,212,66,117,25,57,252,117,235,147,218,242,246,176,36,77,69,97,133,114,132,138,108,211,205,43,114,223,147,189,252,49,130,215,27,107,91,254,1,191,103,197,60,87,19,24,75,201,205,181,180,60,230,51,221,247,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 582 ") {
    byte_vec_t msg { 120,237,57,65 };
    byte_vec_t sig { 72,108,91,237,29,216,150,167,108,226,169,180,197,47,106,202,225,165,25,175,15,174,251,246,30,222,202,96,202,48,71,188,206,73,19,102,236,200,210,176,50,247,71,205,144,210,42,148,173,81,187,179,212,206,70,19,59,40,157,133,136,163,207,185 };
    byte_vec_t pk { 4,245,138,2,152,61,148,44,102,20,82,217,198,234,178,143,53,3,25,118,198,166,132,222,21,35,154,22,205,151,3,203,31,218,150,46,49,145,241,66,184,7,71,169,177,233,104,254,202,137,211,5,191,11,91,111,238,64,71,162,232,97,58,102,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 582 ") {
    byte_vec_t msg { 145,37,98,82 };
    byte_vec_t sig { 254,198,98,23,5,217,8,198,25,249,91,96,249,36,15,241,103,237,2,113,92,65,138,81,34,70,177,39,8,0,114,93,30,24,239,7,26,234,80,129,97,120,176,182,252,59,88,169,14,212,121,177,43,103,14,3,208,118,159,224,199,136,89,232 };
    byte_vec_t pk { 4,156,138,133,179,226,169,141,38,89,151,199,102,9,34,147,187,151,60,241,228,41,104,32,217,33,14,172,205,220,34,251,98,157,190,14,0,169,61,133,61,149,37,44,30,178,181,115,240,164,55,49,247,149,28,22,149,110,45,191,216,97,7,65,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 583 ") {
    byte_vec_t msg { 75,145,90,115 };
    byte_vec_t sig { 190,239,80,89,124,84,67,233,95,111,99,145,10,127,211,33,154,185,78,200,158,98,226,38,212,244,65,0,36,149,184,182,134,229,253,200,224,169,7,71,180,51,180,30,156,227,133,246,191,241,209,155,63,145,101,133,83,172,240,47,224,122,229,37 };
    byte_vec_t pk { 4,237,47,59,61,81,186,125,127,242,24,79,11,226,195,196,108,64,141,81,35,234,25,191,182,168,141,137,106,195,153,30,237,217,206,56,248,112,50,7,94,202,91,59,165,38,75,18,250,0,250,48,98,172,0,123,173,190,89,7,70,73,92,47,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 583 ") {
    byte_vec_t msg { 51,76,209,215 };
    byte_vec_t sig { 32,105,122,211,141,222,31,9,13,60,255,156,8,114,188,148,135,113,23,200,241,50,130,164,13,149,90,193,23,6,88,206,161,95,159,135,31,240,200,4,174,27,232,88,89,29,104,146,248,165,109,159,97,99,203,110,22,115,58,106,46,117,172,57 };
    byte_vec_t pk { 4,250,214,254,236,65,252,157,29,72,178,156,242,170,5,48,140,185,190,34,153,78,172,171,174,21,180,165,159,43,247,95,157,153,37,186,128,112,143,83,83,233,104,186,184,90,250,144,91,114,92,42,19,244,149,195,149,14,5,24,97,11,95,104,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 584 ") {
    byte_vec_t msg { 77,207,197,253 };
    byte_vec_t sig { 146,79,9,81,171,208,253,125,79,9,53,7,163,107,141,15,214,157,254,102,221,20,162,184,241,140,128,31,172,97,32,234,110,197,3,48,45,213,214,212,141,135,120,88,54,33,158,174,165,44,58,184,152,133,4,89,199,57,70,164,56,8,47,115 };
    byte_vec_t pk { 4,174,255,242,209,219,74,26,138,41,37,243,41,176,123,49,9,114,214,140,83,162,100,125,161,8,217,252,146,10,79,199,85,47,87,120,59,196,154,249,174,153,236,160,223,55,31,197,200,35,55,76,255,132,105,122,10,148,207,105,181,90,234,132,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 584 ") {
    byte_vec_t msg { 45,221,219,41 };
    byte_vec_t sig { 107,204,109,4,175,87,108,76,129,213,87,75,15,213,181,59,59,167,46,253,217,242,100,21,211,144,151,212,240,215,155,4,125,114,132,120,127,119,40,189,212,233,91,86,221,103,117,29,43,173,51,159,81,84,159,63,31,82,177,4,224,56,20,175 };
    byte_vec_t pk { 4,134,102,236,176,104,37,123,171,9,56,174,112,147,160,19,82,225,93,5,23,238,185,232,14,60,20,64,183,189,131,38,233,16,81,49,230,141,71,188,230,6,14,241,56,148,51,34,137,91,252,70,173,145,161,172,70,120,60,238,226,5,183,48,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 585 ") {
    byte_vec_t msg { 4,161,53,143 };
    byte_vec_t sig { 123,206,83,190,210,146,76,12,187,76,35,49,113,166,28,163,44,178,242,56,53,3,128,250,90,150,214,54,87,112,15,240,15,251,42,101,94,97,255,221,142,30,48,145,83,18,100,53,72,51,61,44,98,105,8,129,166,107,16,8,108,23,97,57 };
    byte_vec_t pk { 4,248,157,24,20,201,65,48,164,32,173,31,235,44,207,82,106,182,203,237,0,56,51,123,181,249,15,172,88,46,170,133,226,169,178,120,150,153,226,76,65,212,18,207,222,61,117,143,176,190,88,41,116,30,254,26,133,98,54,236,158,103,147,37,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 585 ") {
    byte_vec_t msg { 205,251,81,28 };
    byte_vec_t sig { 170,245,34,136,30,203,138,165,52,236,55,219,193,217,0,107,244,253,223,151,141,66,78,217,58,23,173,52,251,175,126,94,43,51,234,206,249,41,222,20,37,138,49,23,118,209,250,240,124,160,165,88,117,158,116,231,68,216,247,148,242,84,4,26 };
    byte_vec_t pk { 4,196,230,129,116,233,100,107,30,163,193,13,126,0,50,197,32,21,195,184,10,239,109,177,45,22,243,14,100,185,182,53,174,174,40,136,133,154,219,10,24,135,151,4,32,248,185,9,95,209,75,170,197,57,155,144,165,41,193,134,156,69,10,237,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 586 ") {
    byte_vec_t msg { 132,35,204,85 };
    byte_vec_t sig { 28,61,210,71,180,181,164,207,25,214,110,18,71,129,25,228,45,21,231,127,147,107,136,253,159,176,173,246,156,200,172,225,52,153,26,129,128,144,172,150,243,129,199,182,94,194,248,132,253,174,54,227,87,253,80,214,78,143,150,210,8,116,57,209 };
    byte_vec_t pk { 4,242,33,120,81,9,178,44,35,244,173,53,229,126,149,244,65,6,90,230,139,186,41,184,13,75,4,128,230,26,252,108,32,121,216,154,109,101,106,124,192,191,92,15,181,59,139,180,179,116,223,167,40,210,43,123,211,52,73,222,86,30,82,168,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 586 ") {
    byte_vec_t msg { 78,2,91,240 };
    byte_vec_t sig { 190,48,50,172,86,216,216,12,127,37,137,180,179,238,42,94,230,250,174,39,156,190,233,178,213,134,113,58,253,170,40,93,110,21,132,117,255,219,7,4,43,220,14,185,69,251,79,28,101,34,71,42,206,188,21,222,214,102,23,111,116,247,239,111 };
    byte_vec_t pk { 4,0,52,233,98,180,54,65,64,28,204,229,18,158,128,203,39,44,28,83,179,46,250,120,93,134,205,149,202,2,35,76,39,39,122,244,116,170,196,42,175,164,7,247,211,135,22,103,165,90,114,248,53,246,159,37,0,47,21,177,106,83,11,32,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 587 ") {
    byte_vec_t msg { 136,7,102,142 };
    byte_vec_t sig { 3,165,255,61,189,248,116,137,66,189,138,124,103,208,133,38,236,246,230,208,209,249,221,210,28,23,42,126,154,60,130,237,79,61,117,84,195,68,7,123,101,227,118,169,112,129,250,179,2,79,28,198,182,133,118,173,27,78,249,76,100,133,228,151 };
    byte_vec_t pk { 4,112,47,60,232,162,9,43,0,198,79,154,35,90,143,100,117,102,156,151,96,67,243,28,200,184,131,193,119,43,19,53,61,61,85,52,195,107,48,49,159,114,70,48,249,32,78,34,87,148,119,69,244,91,16,176,60,234,43,204,97,248,127,182,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 587 ") {
    byte_vec_t msg { 54,179,103,254 };
    byte_vec_t sig { 30,215,128,128,73,242,23,146,203,4,108,43,150,96,10,245,60,170,46,138,79,12,198,234,234,70,192,27,198,125,50,21,132,103,147,158,128,143,89,13,62,107,99,186,143,64,82,232,44,107,247,200,163,221,16,19,180,179,67,250,125,236,35,134 };
    byte_vec_t pk { 4,52,15,250,86,75,142,174,76,51,100,220,116,163,31,98,173,82,124,89,178,213,49,119,4,207,75,60,127,255,186,13,243,172,210,90,44,99,230,212,18,27,133,206,139,169,69,225,64,10,42,235,242,125,212,44,189,43,178,49,81,145,243,212,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 588 ") {
    byte_vec_t msg { 79,37,63,57 };
    byte_vec_t sig { 249,206,209,152,160,18,192,97,20,129,234,103,155,122,48,128,172,80,187,186,202,188,145,170,110,46,231,65,160,196,218,216,239,191,63,49,229,245,83,146,16,201,181,21,52,152,141,138,195,203,204,224,32,95,79,250,113,106,140,153,33,233,163,76 };
    byte_vec_t pk { 4,223,208,52,158,206,248,9,46,144,202,245,114,107,98,144,213,214,205,52,231,68,237,10,97,1,152,55,203,175,183,100,12,91,245,37,155,81,10,127,125,252,107,211,9,121,120,219,172,45,108,245,125,117,7,148,139,116,27,16,217,125,10,35,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 588 ") {
    byte_vec_t msg { 3,33,99,120 };
    byte_vec_t sig { 95,229,24,10,91,50,115,1,247,79,168,34,77,186,39,12,116,214,98,179,187,137,180,160,46,74,5,218,96,114,5,118,205,7,13,155,72,162,236,128,36,69,143,227,173,70,190,93,131,124,193,132,143,91,217,255,212,156,98,77,52,169,199,112 };
    byte_vec_t pk { 4,125,138,120,180,193,244,28,144,92,25,241,185,206,53,219,148,215,35,182,28,134,95,200,178,80,12,199,43,10,34,228,56,222,45,33,112,26,143,77,40,35,59,116,156,236,119,0,162,194,124,160,90,16,144,180,29,133,134,244,80,247,79,155,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 589 ") {
    byte_vec_t msg { 5,206,56,172 };
    byte_vec_t sig { 202,229,82,30,81,107,193,177,92,128,206,98,37,36,228,193,192,58,57,71,169,81,209,196,117,220,246,65,66,110,248,102,2,17,189,106,88,81,148,251,184,61,197,223,186,245,78,85,209,43,83,185,226,46,97,31,160,58,25,225,215,183,178,239 };
    byte_vec_t pk { 4,57,27,152,102,29,39,64,18,110,242,128,217,188,219,67,142,163,49,184,22,26,35,146,225,223,161,55,66,94,192,8,60,201,235,143,47,108,194,72,24,81,91,166,105,71,47,24,165,57,20,104,209,167,214,220,122,240,141,156,129,173,242,67,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 589 ") {
    byte_vec_t msg { 22,68,76,13 };
    byte_vec_t sig { 57,4,131,202,172,158,36,146,211,100,66,147,101,22,81,27,9,154,242,187,7,78,42,45,96,84,24,39,51,132,127,4,182,88,51,89,63,241,44,240,14,125,157,213,66,205,172,122,148,249,231,49,34,250,211,252,170,223,161,71,28,100,124,157 };
    byte_vec_t pk { 4,131,79,102,185,235,186,38,190,72,117,13,73,184,189,30,79,186,163,54,117,212,154,232,94,122,226,112,15,184,101,25,250,72,140,242,169,221,132,254,195,203,212,207,5,170,63,94,90,5,251,184,225,194,205,78,238,145,2,55,194,24,91,49,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 590 ") {
    byte_vec_t msg { 20,65,115,114 };
    byte_vec_t sig { 44,8,30,105,247,215,192,221,38,142,182,88,111,55,77,170,145,64,211,42,111,182,251,21,174,71,161,62,164,43,193,7,69,80,223,185,56,119,179,118,190,202,63,185,68,157,103,78,99,0,188,143,65,9,184,74,91,225,237,181,239,103,41,215 };
    byte_vec_t pk { 4,193,40,24,17,86,112,16,5,56,11,111,176,2,219,33,42,199,125,35,15,162,98,18,235,244,53,182,34,125,70,240,53,233,73,27,3,1,238,39,91,215,51,153,51,139,195,70,29,149,19,103,130,47,187,3,128,253,25,43,178,59,253,115,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 590 ") {
    byte_vec_t msg { 143,12,79,251 };
    byte_vec_t sig { 148,242,237,249,128,103,44,143,202,139,50,239,133,56,223,22,194,247,1,80,57,167,152,133,74,87,129,74,23,59,70,201,42,200,132,88,92,217,116,238,194,73,255,95,53,130,39,25,103,10,231,212,136,227,123,162,134,82,135,96,222,54,106,28 };
    byte_vec_t pk { 4,55,144,80,151,65,180,182,76,159,177,194,98,3,229,104,53,35,197,248,224,125,111,213,92,240,131,252,188,199,220,131,81,66,138,0,204,21,65,247,34,59,38,251,110,221,209,208,59,51,83,228,122,177,175,158,32,116,132,247,237,13,5,73,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 591 ") {
    byte_vec_t msg { 99,42,217,234 };
    byte_vec_t sig { 188,54,0,140,40,94,103,28,232,82,55,129,92,102,135,126,181,143,233,61,110,100,14,8,125,78,239,186,128,19,248,180,77,109,44,20,85,172,31,174,20,44,17,113,253,235,28,191,220,163,216,247,103,216,98,13,33,100,225,213,119,135,20,15 };
    byte_vec_t pk { 4,214,151,38,59,102,176,155,112,235,139,79,17,61,179,225,141,62,244,250,10,78,234,21,239,122,83,225,165,8,83,128,94,57,145,124,172,254,128,122,109,44,133,199,149,189,98,66,253,55,125,88,167,13,111,149,246,246,175,189,164,105,206,60,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 591 ") {
    byte_vec_t msg { 140,185,234,244 };
    byte_vec_t sig { 68,15,147,23,111,230,185,8,17,229,1,104,42,254,83,201,216,170,176,150,219,149,66,234,189,250,208,38,186,159,195,19,247,163,88,191,214,15,149,108,117,225,9,37,47,39,53,128,153,41,152,189,181,134,195,196,26,91,187,166,139,41,236,175 };
    byte_vec_t pk { 4,106,26,215,123,137,247,41,64,22,173,241,24,130,167,142,18,226,252,199,105,24,189,78,86,129,197,29,195,223,90,247,97,231,39,163,134,52,167,229,192,23,33,11,189,59,50,186,189,191,147,223,13,183,186,55,191,137,247,201,62,110,66,58,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 592 ") {
    byte_vec_t msg { 69,186,27,89 };
    byte_vec_t sig { 98,28,169,170,30,168,224,176,122,93,52,187,103,177,0,92,238,147,124,234,6,138,66,35,45,12,117,37,37,252,226,141,24,4,245,241,11,201,209,102,24,89,213,23,21,62,80,104,68,80,101,184,106,114,164,155,210,254,233,41,55,11,16,73 };
    byte_vec_t pk { 4,171,213,247,97,123,19,228,41,147,175,134,201,200,35,92,65,127,210,194,186,68,231,95,44,241,121,158,83,78,122,14,113,205,15,53,170,11,124,163,187,140,67,197,211,178,216,9,7,175,245,208,201,209,109,116,141,123,192,57,52,158,189,252,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 592 ") {
    byte_vec_t msg { 48,87,207,80 };
    byte_vec_t sig { 119,219,7,123,206,37,167,183,69,115,11,236,44,187,243,221,112,24,111,64,108,246,95,127,52,160,199,152,176,234,159,197,92,216,73,197,145,249,174,195,164,157,83,30,174,185,42,188,160,148,31,227,70,71,75,154,5,83,11,199,39,152,57,13 };
    byte_vec_t pk { 4,128,63,52,195,142,101,120,186,38,226,212,94,56,100,0,223,88,235,224,145,81,113,97,143,9,174,248,164,35,199,39,251,131,215,27,156,12,170,239,196,200,210,103,91,191,68,229,138,94,54,47,35,0,109,95,141,179,252,181,150,176,216,95,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 593 ") {
    byte_vec_t msg { 218,122,16,147 };
    byte_vec_t sig { 115,209,136,28,4,118,48,239,246,200,158,233,12,179,22,154,246,83,187,119,89,114,27,231,248,100,205,150,132,156,150,14,55,67,142,52,147,122,116,142,10,160,87,165,124,196,231,41,104,62,61,119,182,158,216,151,11,223,46,147,48,140,216,33 };
    byte_vec_t pk { 4,1,157,92,43,51,35,1,67,148,161,21,47,83,22,161,201,141,18,214,125,57,0,245,168,142,122,51,44,230,38,78,65,42,225,172,0,54,224,169,169,165,231,153,217,177,35,210,144,201,125,143,115,72,204,138,161,53,152,150,228,37,158,145,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 593 ") {
    byte_vec_t msg { 225,83,123,55 };
    byte_vec_t sig { 235,74,121,155,146,211,226,102,90,181,247,221,42,41,42,156,44,75,65,219,95,70,250,58,31,92,173,155,120,160,68,253,145,176,48,244,42,78,122,225,234,115,174,105,44,246,179,17,250,157,47,12,57,100,208,177,235,57,52,175,249,182,204,213 };
    byte_vec_t pk { 4,104,250,99,150,15,170,220,17,12,214,2,201,77,142,26,252,107,254,53,122,101,35,255,22,74,50,4,106,153,166,218,45,140,2,76,150,13,137,188,95,58,51,52,88,183,206,214,118,195,252,67,103,83,8,19,16,96,51,65,93,11,34,75,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 594 ") {
    byte_vec_t msg { 61,51,132,34 };
    byte_vec_t sig { 67,145,230,221,96,125,101,56,108,70,138,179,6,11,100,20,203,166,28,36,150,90,56,181,147,21,37,113,42,109,191,160,189,58,121,110,133,80,245,185,83,179,55,159,82,204,29,226,252,87,183,24,250,198,182,235,116,249,137,188,137,41,218,58 };
    byte_vec_t pk { 4,6,6,69,109,192,50,42,168,223,46,96,42,33,232,127,69,190,209,246,95,252,44,170,253,15,142,153,15,29,129,208,169,140,210,122,164,204,56,84,15,203,80,77,111,143,34,164,244,54,248,144,254,238,59,210,14,155,207,235,184,26,48,111,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 594 ") {
    byte_vec_t msg { 80,134,39,124 };
    byte_vec_t sig { 249,57,34,8,29,238,47,56,23,71,228,156,80,251,76,41,141,247,1,229,27,199,69,35,106,68,33,70,254,202,230,239,129,38,96,165,252,205,43,99,159,179,106,26,36,50,33,223,147,40,162,43,168,92,35,21,203,62,250,250,24,0,57,147 };
    byte_vec_t pk { 4,116,86,181,40,249,232,183,209,148,243,249,54,99,16,206,85,81,226,214,234,230,219,61,174,70,14,252,70,96,22,4,198,102,111,84,186,54,62,160,77,255,40,41,208,100,195,165,2,22,88,240,129,183,30,157,86,187,112,254,163,219,217,107,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 595 ") {
    byte_vec_t msg { 148,249,247,27 };
    byte_vec_t sig { 208,228,26,21,163,209,71,240,182,183,27,64,38,233,97,91,141,106,19,146,162,242,150,205,79,135,180,118,190,17,184,8,201,133,115,30,57,122,144,81,28,19,112,99,129,150,207,213,42,116,30,202,46,0,209,199,143,160,146,22,18,254,114,198 };
    byte_vec_t pk { 4,67,230,201,23,172,16,176,156,141,184,20,23,237,108,19,188,3,40,131,57,250,172,221,178,1,213,219,123,148,166,55,100,156,197,175,94,239,104,179,232,139,208,14,6,206,63,181,124,190,129,86,134,67,173,138,82,165,169,5,242,58,44,39,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 595 ") {
    byte_vec_t msg { 48,103,145,25 };
    byte_vec_t sig { 120,100,134,239,24,33,62,35,128,64,201,97,246,137,96,77,123,224,21,6,61,43,246,177,19,95,118,15,72,95,84,227,70,112,95,123,67,234,220,96,239,218,150,105,22,27,170,46,175,95,164,148,228,165,181,243,228,108,175,100,185,200,0,36 };
    byte_vec_t pk { 4,136,96,16,181,244,116,253,166,226,244,111,160,128,19,210,191,140,211,87,11,166,231,52,18,12,201,35,115,211,147,68,156,187,122,222,232,105,181,25,159,40,154,105,49,212,62,70,177,131,83,113,254,210,220,189,102,155,47,3,234,120,51,177,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 596 ") {
    byte_vec_t msg { 214,145,0,51 };
    byte_vec_t sig { 207,83,239,194,146,255,92,107,95,254,108,61,187,212,40,236,150,171,74,202,131,229,30,19,49,41,171,147,225,158,184,147,211,106,67,213,78,198,201,71,230,68,203,148,61,0,239,225,71,169,48,139,91,21,116,47,100,14,222,213,67,220,123,126 };
    byte_vec_t pk { 4,210,210,62,15,18,59,36,60,88,39,106,146,207,158,145,153,17,75,198,70,132,249,99,119,194,174,198,18,15,222,97,167,188,238,244,3,47,180,211,224,165,91,143,101,14,237,23,10,165,179,2,196,74,144,16,243,249,98,106,173,181,122,211,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 596 ") {
    byte_vec_t msg { 166,179,21,62 };
    byte_vec_t sig { 114,255,73,119,219,17,148,75,208,69,6,214,214,211,197,17,176,181,90,12,203,212,87,25,162,226,205,224,249,225,47,234,54,173,40,143,24,195,166,149,225,248,130,243,2,140,234,240,57,84,49,2,143,235,207,181,196,134,66,144,51,128,235,169 };
    byte_vec_t pk { 4,1,177,36,148,35,28,210,164,243,114,216,141,47,84,9,197,84,61,109,149,122,134,0,147,102,67,228,43,81,37,6,26,127,88,137,77,57,196,218,173,41,59,132,166,8,63,50,64,190,219,162,176,105,203,129,36,163,209,232,91,250,173,123,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 597 ") {
    byte_vec_t msg { 29,27,243,81 };
    byte_vec_t sig { 73,1,37,208,180,117,20,180,15,102,101,7,143,170,123,229,80,37,103,178,180,121,61,36,250,155,88,170,192,140,225,133,193,101,78,28,44,29,225,6,140,78,243,128,29,83,81,136,254,201,70,31,159,3,35,4,119,205,219,134,191,120,79,120 };
    byte_vec_t pk { 4,139,53,24,222,74,86,5,171,5,10,140,250,224,136,174,206,169,155,109,144,199,216,120,156,127,174,29,171,132,39,247,195,178,11,226,243,39,56,113,194,80,233,85,168,225,2,155,238,34,26,201,247,123,189,247,169,196,159,141,64,91,243,162,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 597 ") {
    byte_vec_t msg { 182,145,131,57 };
    byte_vec_t sig { 153,225,85,2,161,2,216,62,25,156,152,145,254,10,88,121,53,136,158,245,215,104,251,196,56,38,135,55,129,23,102,49,60,81,58,48,169,76,147,84,240,99,225,17,127,70,77,93,245,82,103,56,127,84,107,10,179,160,103,19,95,209,201,244 };
    byte_vec_t pk { 4,131,82,39,173,201,132,22,146,183,137,237,251,236,81,207,68,54,125,196,192,180,243,20,232,242,206,173,172,185,72,52,17,77,145,76,58,156,20,63,3,132,113,159,193,59,148,164,8,182,160,177,35,125,149,88,38,92,60,81,152,246,68,91,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 598 ") {
    byte_vec_t msg { 79,160,114,51 };
    byte_vec_t sig { 217,124,237,45,237,66,147,180,137,123,35,15,151,36,217,116,155,243,191,18,200,163,139,25,230,12,68,192,0,30,170,71,19,217,40,102,189,161,59,34,46,174,65,231,230,7,222,171,170,108,235,40,147,25,255,101,87,226,42,150,226,66,103,88 };
    byte_vec_t pk { 4,218,93,194,165,215,84,166,204,223,241,193,42,37,112,1,237,166,190,150,186,161,106,168,26,243,130,180,130,89,40,152,122,135,239,218,23,93,188,72,18,203,169,8,160,163,54,134,56,98,72,145,61,42,225,224,54,13,152,106,78,191,191,1,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 598 ") {
    byte_vec_t msg { 52,149,249,11 };
    byte_vec_t sig { 189,7,83,19,250,106,60,199,122,180,219,218,172,98,136,242,225,127,26,196,209,210,148,87,137,102,206,243,165,218,182,85,119,107,111,8,5,143,116,202,190,118,99,223,76,138,80,249,180,177,222,201,255,58,151,121,143,83,15,133,69,104,210,168 };
    byte_vec_t pk { 4,192,54,101,72,22,250,208,98,1,82,139,122,37,104,200,125,198,95,209,242,245,233,100,84,21,171,202,61,178,82,109,109,150,153,206,10,135,241,14,41,171,231,125,150,125,93,153,154,162,68,176,34,201,203,203,53,210,66,230,125,34,191,112,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 599 ") {
    byte_vec_t msg { 143,165,120,246 };
    byte_vec_t sig { 111,94,166,110,224,127,203,190,32,222,225,75,219,3,158,216,249,8,17,129,194,216,136,224,91,250,192,221,215,2,103,30,33,98,213,19,83,251,74,16,117,184,125,116,240,195,243,84,20,225,147,35,190,18,4,65,59,139,28,153,128,210,252,38 };
    byte_vec_t pk { 4,51,124,81,17,131,19,228,150,153,196,129,177,149,151,251,162,126,32,137,8,233,249,68,111,255,194,199,225,54,162,5,86,210,10,8,226,218,30,212,162,215,226,184,243,101,29,174,84,50,1,160,154,84,145,24,175,187,203,170,203,251,111,24,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 599 ") {
    byte_vec_t msg { 19,178,21,12 };
    byte_vec_t sig { 185,17,70,184,108,213,39,201,70,142,38,245,160,219,223,48,26,39,128,144,208,211,221,223,228,246,79,31,138,163,105,14,75,146,143,67,240,202,178,140,54,159,31,76,183,182,33,0,190,104,70,106,163,174,94,226,126,23,127,26,1,50,250,33 };
    byte_vec_t pk { 4,83,31,241,58,143,124,44,216,192,105,32,188,183,186,243,121,25,34,215,187,145,51,134,179,163,209,28,194,86,201,233,117,74,94,87,100,116,184,68,219,180,224,99,38,30,106,227,80,33,250,185,143,112,114,1,99,115,74,102,91,148,213,104,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 600 ") {
    byte_vec_t msg { 138,196,186,18 };
    byte_vec_t sig { 242,202,207,180,128,30,154,248,94,16,71,141,55,5,95,162,218,28,73,121,116,2,144,182,220,251,66,190,224,201,143,77,175,238,89,104,157,101,96,120,252,199,160,244,128,193,136,85,225,144,208,192,132,228,1,214,155,37,48,145,50,162,184,187 };
    byte_vec_t pk { 4,219,192,70,87,153,76,168,91,195,93,74,34,179,132,74,103,59,121,79,124,50,80,14,1,2,143,33,217,35,0,73,152,24,80,9,190,133,227,89,23,94,236,197,28,208,209,66,181,127,236,196,128,222,75,71,18,156,144,43,97,22,72,42,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 600 ") {
    byte_vec_t msg { 22,85,100,108 };
    byte_vec_t sig { 11,236,158,127,93,144,157,226,243,249,185,107,248,229,47,175,160,82,162,86,16,193,66,150,44,165,102,220,152,190,184,17,114,51,157,42,102,154,159,88,65,144,194,155,228,152,20,16,227,242,248,70,69,72,55,74,158,19,119,15,84,95,168,97 };
    byte_vec_t pk { 4,45,110,223,217,9,237,229,83,76,226,236,72,115,253,87,120,245,74,228,131,230,52,195,106,243,184,222,50,207,200,8,64,89,155,215,155,78,203,113,174,133,132,106,77,255,26,2,188,154,59,150,197,203,238,254,13,80,108,69,43,57,134,186,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 601 ") {
    byte_vec_t msg { 198,224,156,14 };
    byte_vec_t sig { 8,142,223,26,89,253,99,140,49,43,10,118,72,143,39,118,228,147,21,6,220,179,179,105,183,18,55,173,109,210,97,110,119,81,6,13,206,255,255,56,39,112,225,208,192,95,214,147,238,125,207,27,122,124,17,101,65,53,38,97,43,76,124,5 };
    byte_vec_t pk { 4,62,231,255,160,6,118,183,123,220,55,2,201,49,39,46,211,219,38,69,98,34,62,218,81,87,226,180,182,232,60,14,186,9,160,146,211,99,30,226,9,38,64,248,171,114,247,45,191,80,2,75,96,71,196,233,243,108,56,194,200,57,130,101,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 601 ") {
    byte_vec_t msg { 194,184,169,143 };
    byte_vec_t sig { 213,197,199,147,171,15,180,121,122,93,179,172,10,165,207,61,50,205,143,202,246,131,164,78,163,154,48,198,248,7,157,150,62,146,9,121,169,249,163,142,7,9,127,151,118,140,69,37,87,166,222,27,50,107,209,52,27,60,162,204,29,86,78,109 };
    byte_vec_t pk { 4,33,140,216,52,234,204,59,191,112,20,103,201,201,91,155,98,11,228,210,160,160,201,193,171,37,235,115,50,43,176,34,246,79,236,245,191,60,115,34,202,70,57,139,78,51,95,85,229,193,86,33,4,50,10,60,53,81,156,192,112,32,50,81,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 602 ") {
    byte_vec_t msg { 155,10,201,47 };
    byte_vec_t sig { 87,138,12,81,89,107,77,222,33,113,173,26,119,59,207,52,212,242,98,188,209,122,70,120,3,6,39,229,128,140,149,52,152,121,95,186,133,33,255,214,26,164,31,236,143,40,84,163,197,151,112,94,131,174,14,157,129,5,116,10,248,29,75,65 };
    byte_vec_t pk { 4,27,226,44,126,69,135,120,227,35,90,119,95,207,92,183,87,72,108,113,254,158,207,163,208,144,195,86,110,205,212,253,39,12,69,30,43,34,228,163,78,204,191,126,182,108,185,60,118,186,201,112,217,160,103,194,67,201,123,136,154,8,162,188,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 602 ") {
    byte_vec_t msg { 244,82,212,26 };
    byte_vec_t sig { 145,55,229,59,230,221,245,221,3,197,255,164,234,207,206,207,212,210,233,0,102,57,219,169,237,94,118,213,74,225,208,131,191,209,135,171,151,214,68,10,83,176,204,6,219,22,140,120,213,53,135,155,13,74,1,247,114,182,181,87,164,218,199,162 };
    byte_vec_t pk { 4,71,15,133,75,236,121,182,149,101,218,164,97,173,30,215,32,246,115,246,114,180,30,149,46,111,228,75,185,240,255,109,208,78,43,110,3,201,78,72,101,233,249,170,99,196,44,254,108,158,176,142,145,194,94,189,29,110,58,74,35,142,187,87,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 603 ") {
    byte_vec_t msg { 199,176,14,7 };
    byte_vec_t sig { 55,141,250,69,216,133,50,1,158,207,138,167,232,223,8,42,193,224,166,18,189,95,75,129,82,173,188,189,165,12,9,218,162,144,72,245,107,41,59,226,207,189,28,201,192,223,62,65,191,144,178,25,54,171,14,40,32,156,64,70,212,192,185,83 };
    byte_vec_t pk { 4,23,136,213,184,216,242,138,114,194,250,226,83,171,75,26,206,36,247,198,174,12,246,191,167,47,240,39,220,212,210,186,128,210,132,61,83,114,110,86,125,140,222,81,93,125,70,29,223,244,69,236,171,227,79,134,237,207,16,14,69,140,31,193,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 603 ") {
    byte_vec_t msg { 13,173,101,245 };
    byte_vec_t sig { 180,127,220,98,171,154,0,185,20,50,205,95,48,51,254,70,47,153,252,73,5,155,75,125,132,239,116,246,229,249,255,136,165,43,32,37,65,34,246,76,221,54,131,95,12,9,94,193,169,54,172,126,38,246,149,24,244,10,26,139,230,78,185,59 };
    byte_vec_t pk { 4,103,249,1,188,197,237,119,35,40,98,168,38,174,190,209,190,2,50,85,42,247,25,19,179,230,22,207,116,126,53,160,62,143,48,97,213,162,212,4,147,31,168,147,74,243,115,176,87,114,25,61,132,249,212,250,225,110,217,96,227,167,103,119,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 604 ") {
    byte_vec_t msg { 133,167,81,214 };
    byte_vec_t sig { 61,29,218,51,162,148,246,25,228,153,182,18,5,243,200,230,76,42,12,218,254,24,205,5,24,165,117,122,94,141,76,230,31,112,221,166,133,200,78,43,197,3,21,234,222,20,207,90,112,228,3,4,192,74,72,248,108,188,117,68,186,138,75,16 };
    byte_vec_t pk { 4,123,111,103,93,19,243,56,51,239,209,222,20,240,163,142,158,160,133,62,124,80,228,31,237,131,95,138,212,144,32,116,58,34,85,38,176,147,216,26,217,227,198,55,45,79,102,91,222,169,241,98,128,118,132,11,146,58,179,23,233,36,151,76,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 604 ") {
    byte_vec_t msg { 168,56,183,34 };
    byte_vec_t sig { 95,190,126,67,67,101,13,75,139,17,157,110,27,76,32,208,158,7,40,193,62,241,253,63,221,116,32,93,135,245,189,20,76,117,210,249,137,112,43,99,167,245,82,34,136,1,202,248,158,223,212,189,249,253,65,198,104,103,43,155,109,6,87,184 };
    byte_vec_t pk { 4,21,183,22,172,64,240,183,106,84,147,115,192,248,136,97,179,119,76,149,135,249,75,32,64,66,46,241,83,24,144,9,167,146,32,57,238,24,198,164,113,59,232,14,146,253,58,198,84,62,51,242,150,75,175,47,119,230,21,69,32,95,185,189,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 605 ") {
    byte_vec_t msg { 120,76,248,41 };
    byte_vec_t sig { 183,98,3,168,108,255,50,60,223,84,225,134,104,126,99,76,137,217,68,14,18,154,40,137,240,87,246,34,188,182,54,138,148,23,17,143,89,101,156,94,221,150,157,183,35,14,205,221,22,133,21,236,69,168,160,245,187,57,123,22,244,181,10,120 };
    byte_vec_t pk { 4,75,8,198,211,183,233,155,42,210,211,73,81,136,162,246,155,88,20,160,68,58,144,233,227,250,153,180,216,60,69,84,113,195,183,109,34,207,0,240,206,163,107,75,132,72,35,208,190,211,204,40,84,46,95,206,232,118,1,250,163,205,158,0,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 605 ") {
    byte_vec_t msg { 22,119,148,229 };
    byte_vec_t sig { 89,172,19,180,14,103,88,84,166,77,153,102,125,39,55,159,0,5,186,162,252,1,116,31,17,201,31,202,58,22,231,11,240,215,141,89,72,90,47,150,32,167,182,178,232,178,154,8,211,196,141,11,177,127,216,140,127,253,171,100,243,177,104,87 };
    byte_vec_t pk { 4,234,82,126,189,179,202,133,67,218,88,23,128,212,203,196,22,63,203,100,155,33,105,246,15,132,228,85,73,248,174,161,196,20,139,195,133,201,95,24,34,88,212,27,104,82,139,150,134,114,124,65,165,136,151,238,11,210,235,183,19,1,236,163,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 606 ") {
    byte_vec_t msg { 20,239,217,97 };
    byte_vec_t sig { 158,142,17,41,49,17,157,136,252,62,241,39,182,245,249,185,146,201,105,43,188,164,211,219,164,210,101,6,225,148,128,165,62,190,233,80,95,14,43,206,204,19,81,203,87,255,241,106,168,152,254,0,92,43,36,138,62,224,176,48,29,152,55,199 };
    byte_vec_t pk { 4,139,180,200,174,140,130,66,103,39,154,13,21,12,156,63,11,201,22,198,147,227,173,115,230,201,9,225,40,146,107,32,200,232,113,144,77,231,22,23,195,238,183,96,170,71,72,189,47,181,104,131,103,40,208,215,163,93,160,178,103,94,143,140,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 606 ") {
    byte_vec_t msg { 94,173,189,228 };
    byte_vec_t sig { 35,72,184,47,202,206,18,24,27,33,122,76,145,203,108,119,11,211,131,243,25,0,252,145,79,95,35,111,8,178,220,72,128,245,205,162,120,95,182,232,12,108,96,82,15,30,107,58,17,225,103,130,121,196,172,182,40,119,22,190,6,31,209,171 };
    byte_vec_t pk { 4,220,31,160,29,81,253,252,55,38,88,77,213,229,48,9,145,13,178,210,137,194,28,97,0,247,240,89,66,213,62,6,183,120,55,57,40,94,174,243,244,86,18,190,36,163,27,202,168,163,59,171,17,216,94,249,137,133,108,66,211,173,122,167,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 607 ") {
    byte_vec_t msg { 234,165,18,84 };
    byte_vec_t sig { 87,152,217,89,140,252,36,42,96,249,199,73,53,239,192,2,19,157,82,0,73,55,117,247,218,57,204,179,159,188,24,161,129,47,249,250,135,116,70,88,178,137,81,7,143,13,152,9,144,64,214,198,171,247,106,100,65,129,119,232,28,225,87,214 };
    byte_vec_t pk { 4,187,123,255,17,218,182,225,141,153,39,70,0,72,82,95,170,83,212,156,253,104,181,30,32,13,109,70,59,8,55,104,125,38,38,20,163,170,165,249,160,228,245,63,57,106,115,202,144,76,178,246,136,166,180,45,77,92,195,96,1,111,115,201,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 607 ") {
    byte_vec_t msg { 134,163,5,17 };
    byte_vec_t sig { 142,92,151,40,175,66,159,43,222,201,57,8,154,237,206,150,228,250,196,1,192,208,40,254,144,222,219,222,109,177,244,0,245,135,129,126,6,166,60,174,68,40,141,50,11,238,66,233,147,127,228,15,197,25,201,199,221,238,140,119,141,75,49,151 };
    byte_vec_t pk { 4,208,255,225,1,99,199,218,227,189,195,208,228,13,249,207,21,79,252,117,252,222,169,15,57,243,38,232,183,22,224,32,190,206,71,254,202,5,89,192,128,144,254,163,230,252,251,171,214,254,213,109,182,105,56,142,16,147,236,116,13,79,240,89,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 608 ") {
    byte_vec_t msg { 36,167,47,145 };
    byte_vec_t sig { 58,28,117,152,52,56,75,32,167,133,169,215,37,76,187,70,30,80,85,254,40,162,11,97,191,202,135,111,56,63,52,244,21,118,235,4,241,46,73,4,200,55,143,186,114,35,25,129,34,21,113,89,24,164,51,182,115,43,144,207,14,52,80,78 };
    byte_vec_t pk { 4,170,154,0,148,63,206,42,7,174,237,141,71,153,35,163,206,180,182,247,234,250,124,93,164,253,142,119,128,86,66,206,171,11,163,120,67,7,124,79,12,157,96,61,108,235,89,110,31,187,245,187,95,14,55,94,89,118,80,245,194,115,204,59,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 608 ") {
    byte_vec_t msg { 69,234,148,98 };
    byte_vec_t sig { 188,112,155,212,94,20,237,193,200,147,200,173,171,166,218,79,139,74,3,82,75,47,151,40,241,42,225,92,54,47,36,59,202,31,246,36,27,63,173,195,211,39,183,183,5,88,76,128,28,225,240,114,225,33,92,182,85,165,255,66,23,55,74,189 };
    byte_vec_t pk { 4,27,39,166,86,212,177,10,138,58,35,245,168,243,130,11,241,18,163,223,196,55,194,254,14,53,58,11,227,147,164,95,14,54,23,91,44,60,235,219,90,84,234,229,193,56,20,96,78,239,52,37,135,121,81,166,198,15,13,245,183,239,184,67,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 609 ") {
    byte_vec_t msg { 52,74,41,162 };
    byte_vec_t sig { 12,97,19,205,203,69,188,100,95,88,45,65,225,248,242,84,169,13,196,19,74,122,34,34,241,129,56,147,111,101,55,181,114,5,129,145,169,198,224,42,62,155,74,129,238,134,78,176,167,66,216,172,192,250,47,237,71,199,252,170,250,131,243,35 };
    byte_vec_t pk { 4,174,246,167,211,34,51,143,222,80,218,250,1,70,26,230,145,203,223,180,64,158,7,190,206,162,12,231,55,141,9,118,152,67,252,39,163,26,243,95,81,65,147,188,184,47,172,120,235,181,23,176,220,114,162,50,133,49,54,216,240,195,4,192,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 609 ") {
    byte_vec_t msg { 36,143,81,223 };
    byte_vec_t sig { 78,205,78,224,31,80,246,106,202,148,152,48,229,103,69,163,54,185,85,53,181,58,101,107,22,202,22,176,228,167,87,95,192,173,90,107,171,22,137,38,24,227,232,100,79,95,34,119,45,191,16,2,212,45,22,110,221,52,156,240,46,11,159,103 };
    byte_vec_t pk { 4,237,217,84,171,39,239,227,141,116,178,157,83,36,76,247,129,104,56,166,218,167,171,20,8,96,219,147,161,5,234,100,162,247,238,94,43,246,147,104,35,4,60,14,194,40,100,234,181,66,11,53,169,105,220,95,7,51,185,33,121,254,191,5,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 610 ") {
    byte_vec_t msg { 245,142,163,52 };
    byte_vec_t sig { 101,163,152,227,140,129,134,212,75,223,252,139,187,46,209,17,80,142,28,118,133,171,102,84,1,244,57,4,175,152,115,222,76,124,129,151,184,228,73,103,6,20,56,209,80,22,203,51,240,167,72,8,34,215,28,121,23,145,127,138,194,248,119,183 };
    byte_vec_t pk { 4,54,12,248,17,148,107,157,123,11,46,220,39,43,32,238,80,247,82,158,116,179,148,210,174,240,164,99,125,20,91,103,92,158,101,180,57,102,95,160,92,191,188,139,167,232,34,234,181,162,45,35,59,103,246,112,121,189,236,1,201,63,111,37,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 610 ") {
    byte_vec_t msg { 106,124,189,84 };
    byte_vec_t sig { 86,87,177,159,67,9,193,107,69,221,102,44,120,137,121,12,70,140,181,170,89,82,0,175,143,208,81,203,61,238,199,170,8,218,150,37,105,59,93,91,242,69,201,94,79,243,209,211,171,230,7,190,240,183,91,106,56,126,171,111,144,2,110,17 };
    byte_vec_t pk { 4,4,114,96,176,31,130,163,120,226,100,175,61,60,118,133,236,110,8,187,167,247,21,237,98,187,167,137,78,7,244,147,150,17,182,225,125,34,33,100,134,209,123,143,250,59,161,116,226,67,116,109,94,112,82,181,150,227,223,146,231,97,27,94,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 611 ") {
    byte_vec_t msg { 97,28,239,86 };
    byte_vec_t sig { 21,8,106,151,128,97,50,218,35,36,7,227,8,76,225,59,6,141,131,37,147,140,188,226,160,24,230,202,189,92,174,20,135,242,99,153,118,76,201,187,168,154,19,221,106,143,73,24,132,227,188,96,173,18,75,126,246,203,63,14,53,170,61,50 };
    byte_vec_t pk { 4,214,253,58,99,82,180,221,219,183,243,192,3,87,28,225,10,168,137,170,247,107,138,26,167,70,162,100,146,3,230,80,241,35,8,131,43,250,142,87,231,146,89,81,34,140,146,108,178,111,193,138,72,115,196,32,231,219,234,30,0,239,145,140,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 611 ") {
    byte_vec_t msg { 47,119,86,103 };
    byte_vec_t sig { 246,50,190,212,165,190,40,158,252,211,105,187,104,50,76,64,18,122,160,29,88,103,74,152,8,199,124,11,203,155,172,112,242,23,246,183,21,109,183,68,137,96,162,121,57,48,81,171,96,52,254,215,223,118,223,12,49,168,107,170,142,214,10,71 };
    byte_vec_t pk { 4,97,103,56,0,158,211,46,112,129,1,54,99,43,233,207,81,118,74,98,87,175,239,222,107,226,97,104,144,87,16,223,183,186,141,142,136,118,109,7,192,67,254,199,119,253,227,64,78,143,129,43,134,228,23,1,202,64,199,154,84,48,112,59,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 612 ") {
    byte_vec_t msg { 162,20,77,1 };
    byte_vec_t sig { 13,245,221,110,95,203,135,96,175,53,142,146,84,107,140,27,156,41,14,118,24,55,232,9,183,178,135,193,237,75,188,209,226,28,245,26,193,172,107,107,219,122,130,228,57,197,3,179,195,152,138,150,177,18,161,56,40,126,115,194,242,31,92,12 };
    byte_vec_t pk { 4,206,76,134,24,12,192,6,196,14,237,206,236,140,143,212,13,248,198,99,135,213,47,19,83,172,156,110,99,23,135,178,178,13,123,252,39,45,216,151,108,129,51,91,234,72,203,110,74,16,27,195,120,58,221,170,226,106,22,92,184,26,57,76,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 612 ") {
    byte_vec_t msg { 184,226,205,189 };
    byte_vec_t sig { 65,190,154,15,74,124,63,106,30,51,238,36,18,50,127,117,98,161,162,175,100,103,9,251,247,162,32,167,182,232,213,137,191,215,33,229,33,2,92,237,72,250,35,134,140,192,243,103,182,201,133,94,202,15,73,149,50,126,54,60,239,122,26,94 };
    byte_vec_t pk { 4,92,195,174,167,145,165,31,169,160,13,68,28,70,98,27,14,149,57,248,146,96,222,94,139,149,238,200,49,176,96,0,82,93,5,251,203,58,14,44,245,71,33,246,66,163,120,173,180,96,183,100,50,145,192,201,32,108,146,77,58,43,68,80,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 613 ") {
    byte_vec_t msg { 202,230,59,144 };
    byte_vec_t sig { 243,1,36,198,8,182,167,243,136,98,219,164,219,101,83,110,179,236,81,141,174,92,229,156,146,232,220,92,218,36,205,203,146,51,200,130,143,98,213,187,84,89,125,163,185,9,140,54,79,144,209,212,136,217,144,33,76,65,122,7,1,184,88,41 };
    byte_vec_t pk { 4,183,146,43,217,140,73,101,42,64,170,175,132,134,105,173,22,253,117,128,19,194,18,140,245,20,38,68,207,129,80,72,15,48,177,83,136,134,118,238,218,54,144,66,155,98,228,217,154,102,101,181,120,113,18,51,144,193,188,124,56,137,15,48,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 613 ") {
    byte_vec_t msg { 32,86,216,239 };
    byte_vec_t sig { 10,229,2,9,105,85,209,159,235,75,40,224,99,211,105,247,92,251,237,34,105,118,81,50,157,14,145,233,152,210,121,105,154,171,200,23,42,246,35,53,132,253,208,149,247,215,182,160,247,179,188,167,144,176,114,126,97,140,8,194,216,65,168,3 };
    byte_vec_t pk { 4,43,82,251,9,45,105,46,72,240,141,101,113,145,137,154,16,177,91,59,229,132,255,47,195,220,101,156,110,6,174,46,190,66,60,199,77,123,177,128,119,182,122,165,212,46,29,44,98,70,59,89,190,152,184,27,235,79,143,29,25,110,180,240,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 614 ") {
    byte_vec_t msg { 48,225,19,148 };
    byte_vec_t sig { 109,130,223,49,8,251,14,22,197,11,103,124,74,221,89,17,230,228,59,212,218,182,117,205,209,15,218,2,13,250,250,65,193,95,186,44,201,60,116,176,202,50,126,8,122,95,80,145,245,60,74,232,166,129,73,193,101,190,55,205,131,93,102,198 };
    byte_vec_t pk { 4,193,93,136,189,178,26,77,111,163,246,164,241,77,4,187,69,219,180,11,26,35,243,219,19,150,28,167,252,193,2,42,179,186,212,196,181,1,55,71,189,79,211,177,133,26,212,184,39,53,129,126,245,40,149,148,163,8,213,22,123,87,137,144,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 614 ") {
    byte_vec_t msg { 151,1,174,65 };
    byte_vec_t sig { 133,156,78,110,124,34,96,247,42,87,100,113,244,225,170,178,102,38,90,176,230,17,211,217,226,34,154,208,194,27,127,97,24,8,254,192,166,184,247,137,84,213,158,57,233,3,240,193,27,58,158,248,183,56,201,99,183,99,218,165,219,244,5,8 };
    byte_vec_t pk { 4,73,169,55,202,195,206,227,103,192,162,13,30,41,7,124,126,14,66,101,106,211,9,70,36,146,163,30,134,186,137,66,220,183,92,174,194,79,194,145,232,83,8,4,225,179,223,48,118,103,0,164,64,22,68,235,184,90,95,128,201,144,225,53,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 615 ") {
    byte_vec_t msg { 84,104,164,141 };
    byte_vec_t sig { 209,114,1,96,79,17,82,115,175,79,157,146,71,171,38,164,21,31,208,35,226,243,226,63,190,156,10,141,45,4,19,254,81,42,122,72,129,56,68,94,151,244,28,51,168,18,81,110,149,60,151,226,109,93,9,161,134,220,45,28,124,46,254,47 };
    byte_vec_t pk { 4,230,12,184,164,124,164,126,17,13,190,4,59,172,149,155,122,142,65,66,91,179,69,105,123,46,144,193,209,92,6,192,70,114,57,83,68,87,90,202,23,138,131,15,24,23,51,239,43,165,247,169,54,91,2,232,177,63,69,57,22,149,52,170,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 615 ") {
    byte_vec_t msg { 211,33,1,127 };
    byte_vec_t sig { 104,77,226,164,86,29,20,121,168,109,196,54,72,205,116,247,60,95,62,223,140,153,35,81,15,177,21,208,16,232,143,84,19,246,209,161,121,84,113,108,9,130,9,170,68,135,58,235,240,10,134,45,174,249,75,116,49,40,240,238,213,242,157,30 };
    byte_vec_t pk { 4,155,154,171,31,32,112,62,25,155,47,255,109,47,172,24,41,204,30,57,49,237,38,144,12,108,152,248,12,151,76,221,113,115,156,225,226,223,24,120,200,143,218,246,205,127,104,138,108,249,163,142,116,126,249,38,237,192,32,131,96,4,205,173,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 616 ") {
    byte_vec_t msg { 55,215,67,127 };
    byte_vec_t sig { 253,207,248,65,194,121,90,38,246,185,240,151,36,167,54,182,183,240,216,39,31,219,70,180,127,138,252,60,129,93,144,211,77,94,5,15,187,163,124,134,196,55,195,94,64,10,227,79,164,169,7,109,149,127,237,192,5,90,85,139,138,212,53,125 };
    byte_vec_t pk { 4,201,207,221,54,182,189,74,22,187,120,128,47,241,142,147,78,7,114,89,5,217,221,104,80,163,146,144,173,230,131,181,106,225,233,232,245,249,166,45,168,14,145,162,195,125,166,47,61,67,197,162,1,107,220,162,122,39,147,94,10,253,127,14,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 616 ") {
    byte_vec_t msg { 34,126,97,21 };
    byte_vec_t sig { 134,100,127,152,112,210,68,43,253,57,213,29,131,212,232,114,95,206,43,244,109,41,125,24,65,32,10,84,104,213,255,206,121,120,214,6,77,175,191,143,148,24,9,35,84,72,177,191,56,236,238,96,30,100,138,202,176,46,254,254,218,39,119,111 };
    byte_vec_t pk { 4,191,47,206,117,23,153,156,43,64,162,80,231,230,100,109,148,209,82,183,180,229,175,223,48,108,35,23,211,42,171,125,13,132,144,4,251,198,213,192,254,156,182,226,121,242,90,161,49,206,29,186,29,7,62,247,251,87,84,57,64,220,190,233,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 617 ") {
    byte_vec_t msg { 31,211,78,41 };
    byte_vec_t sig { 20,176,5,39,163,132,173,241,165,126,247,155,198,238,90,71,90,14,224,199,158,94,93,100,135,170,129,65,101,168,140,243,225,119,74,59,238,19,76,211,63,250,192,230,144,164,231,242,10,106,74,170,60,132,228,80,237,137,172,164,91,251,22,193 };
    byte_vec_t pk { 4,21,101,36,137,24,98,98,109,0,143,44,176,116,117,195,167,83,198,204,137,254,201,250,64,40,127,201,246,72,166,49,225,100,233,176,133,87,82,208,207,117,177,148,6,113,68,143,244,67,82,49,225,83,48,176,204,61,241,185,195,11,129,43,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 617 ") {
    byte_vec_t msg { 33,175,163,156 };
    byte_vec_t sig { 204,239,100,143,113,126,22,239,114,70,10,33,154,101,178,35,41,42,96,223,58,137,39,9,198,158,1,71,15,160,138,204,95,23,176,200,69,207,136,30,10,30,253,31,110,158,87,131,5,80,183,215,199,10,113,134,43,82,145,23,73,176,36,106 };
    byte_vec_t pk { 4,148,61,222,198,218,74,240,221,255,152,8,77,158,111,143,75,150,80,49,34,165,95,50,221,25,237,142,240,70,170,224,96,18,16,9,182,133,177,83,145,252,120,188,14,85,23,90,53,232,216,120,60,181,212,32,115,29,13,249,68,148,237,71,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 618 ") {
    byte_vec_t msg { 200,151,98,49 };
    byte_vec_t sig { 31,215,105,72,240,212,62,161,223,19,48,32,101,165,57,102,34,96,137,131,43,241,43,186,27,213,152,112,139,171,251,24,108,82,121,68,20,238,75,43,88,44,79,136,31,24,117,198,31,149,162,192,59,212,222,30,48,144,62,236,89,250,26,58 };
    byte_vec_t pk { 4,244,47,69,178,12,204,13,89,140,193,194,36,155,73,200,54,118,248,149,42,218,74,63,221,248,206,253,64,233,88,159,84,133,57,212,99,195,81,159,87,87,136,154,27,226,150,84,87,10,19,94,166,193,222,55,10,242,214,237,231,229,179,54,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 618 ") {
    byte_vec_t msg { 211,153,152,223 };
    byte_vec_t sig { 66,209,67,236,84,116,167,60,162,113,65,17,160,13,209,114,141,121,119,139,244,74,182,14,163,98,121,61,54,244,91,144,165,98,250,4,247,204,186,114,157,199,58,252,141,67,137,30,250,236,180,142,182,173,180,209,208,64,251,174,137,249,2,244 };
    byte_vec_t pk { 4,114,233,169,250,114,49,164,182,142,150,165,128,253,207,119,197,239,96,180,173,228,128,195,8,236,82,134,48,85,97,182,95,203,26,250,113,55,159,119,52,206,159,148,249,206,238,101,248,158,56,244,0,222,142,4,3,116,128,231,245,240,101,57,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 619 ") {
    byte_vec_t msg { 215,30,75,11 };
    byte_vec_t sig { 74,195,240,83,90,92,7,8,138,157,253,64,199,173,66,145,157,99,193,68,132,67,137,57,146,36,53,125,201,147,87,148,124,126,89,86,34,209,160,73,255,255,112,4,237,182,242,228,252,108,137,76,221,92,35,143,111,154,64,21,32,243,122,146 };
    byte_vec_t pk { 4,51,120,100,90,90,66,55,31,24,127,134,42,69,102,234,64,67,30,35,201,126,187,104,126,215,113,232,151,126,61,206,213,217,248,6,170,70,121,37,51,61,79,135,197,131,243,195,82,93,34,197,83,76,81,131,198,138,140,59,81,162,69,228,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 619 ") {
    byte_vec_t msg { 89,117,177,126 };
    byte_vec_t sig { 217,25,86,72,129,54,167,81,240,206,211,67,228,191,112,6,99,89,250,204,120,193,87,63,48,223,80,81,174,207,120,51,131,16,226,54,30,158,209,50,59,248,228,152,200,76,67,169,154,28,19,74,108,187,117,194,146,207,121,121,135,76,3,147 };
    byte_vec_t pk { 4,233,34,79,133,13,205,56,68,108,52,39,103,215,165,5,166,157,18,84,204,93,113,54,219,108,55,122,199,85,113,122,239,129,215,243,214,142,134,61,138,117,169,119,33,152,25,129,232,38,166,99,102,182,97,139,133,61,208,109,184,211,209,131,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 620 ") {
    byte_vec_t msg { 122,83,181,89 };
    byte_vec_t sig { 187,20,134,23,242,159,235,147,193,95,39,233,88,69,222,9,35,10,170,46,104,219,139,49,58,59,235,128,132,43,73,59,30,160,75,246,135,58,44,78,6,34,20,55,40,70,110,212,171,214,30,78,116,0,174,220,157,238,31,10,45,25,136,111 };
    byte_vec_t pk { 4,209,193,165,14,244,51,233,146,84,4,113,61,16,226,169,33,139,34,101,11,6,103,20,169,39,35,124,31,127,132,156,221,170,117,176,155,182,143,57,121,112,133,240,12,135,114,140,47,243,33,161,198,214,238,187,99,58,44,29,233,25,47,210,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 620 ") {
    byte_vec_t msg { 97,158,50,88 };
    byte_vec_t sig { 77,110,66,6,251,18,32,71,26,30,145,216,89,55,187,188,172,35,251,91,120,30,219,75,176,232,4,152,160,33,26,72,154,10,119,63,141,133,180,104,201,253,119,124,102,252,251,0,125,45,244,19,33,128,178,40,175,58,238,120,178,237,229,53 };
    byte_vec_t pk { 4,188,11,220,66,24,99,44,15,110,231,84,149,23,12,219,90,245,138,16,177,83,11,118,240,113,210,148,135,94,76,224,152,155,181,40,93,174,78,110,163,222,67,138,70,19,56,79,229,146,115,144,165,159,17,222,4,168,175,119,30,222,144,92,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 621 ") {
    byte_vec_t msg { 247,14,43,247 };
    byte_vec_t sig { 72,170,177,162,129,74,81,85,53,215,205,115,171,99,201,24,42,122,224,150,110,134,120,207,230,251,24,101,80,99,84,192,178,246,49,193,26,237,68,92,179,81,52,63,38,164,151,91,122,120,199,255,85,1,97,252,157,65,40,38,85,83,191,4 };
    byte_vec_t pk { 4,178,157,232,72,72,195,97,222,137,42,239,248,202,230,67,231,165,72,219,248,27,48,211,147,160,244,175,161,116,183,116,92,170,244,9,90,61,118,3,202,37,10,238,40,14,226,177,109,174,39,231,93,2,208,166,52,22,212,38,5,12,240,149,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 621 ") {
    byte_vec_t msg { 153,114,71,27 };
    byte_vec_t sig { 162,212,76,96,130,195,121,245,200,128,50,144,181,93,44,85,12,68,18,54,171,157,62,120,195,232,90,141,87,179,48,56,152,174,248,136,137,149,168,8,106,253,135,246,255,36,56,85,151,142,220,223,242,65,6,228,210,173,159,144,113,233,143,155 };
    byte_vec_t pk { 4,236,229,165,3,6,131,68,178,205,157,80,109,145,218,161,38,102,140,240,253,147,10,39,92,201,54,19,170,97,243,167,102,0,176,57,204,123,213,82,76,85,0,185,197,48,81,128,29,120,74,154,56,230,196,230,116,208,253,171,93,39,51,203,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 622 ") {
    byte_vec_t msg { 141,94,67,120 };
    byte_vec_t sig { 160,114,20,148,11,17,35,91,25,177,74,76,205,228,82,166,28,122,180,191,139,243,179,178,99,63,209,150,75,131,186,246,235,195,55,28,166,112,120,87,138,71,13,147,76,123,38,33,31,144,113,222,8,175,62,137,251,171,160,16,244,197,148,143 };
    byte_vec_t pk { 4,187,165,76,203,254,66,228,149,133,143,96,50,139,23,192,227,125,91,173,185,79,210,126,160,103,90,190,192,38,117,31,72,157,101,154,65,67,48,105,48,201,213,245,147,13,98,217,167,150,77,92,163,76,131,229,148,209,75,113,57,155,6,176,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 622 ") {
    byte_vec_t msg { 0,112,217,48 };
    byte_vec_t sig { 229,59,192,201,79,76,133,149,233,234,172,111,148,221,236,179,108,235,211,224,120,149,6,6,158,203,223,20,193,242,14,214,157,26,136,81,197,15,141,203,146,155,153,35,242,112,246,87,22,27,151,207,253,203,120,229,94,3,182,40,148,114,122,77 };
    byte_vec_t pk { 4,146,121,161,247,220,212,178,244,196,198,115,158,189,130,215,15,74,93,133,191,156,198,62,115,46,208,147,137,52,3,217,114,187,241,70,100,240,97,43,158,165,58,55,161,130,224,252,7,31,40,101,47,104,124,140,111,0,8,74,130,9,192,72,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 623 ") {
    byte_vec_t msg { 194,91,67,237 };
    byte_vec_t sig { 21,111,71,239,58,114,50,232,124,8,176,42,136,135,2,148,103,152,218,216,174,25,30,136,104,33,229,108,85,169,243,94,122,100,189,2,219,94,0,5,111,173,95,253,151,254,252,150,130,230,225,74,176,41,250,154,153,56,64,6,223,137,253,216 };
    byte_vec_t pk { 4,21,220,148,26,55,39,239,121,137,72,212,117,208,236,168,105,164,136,79,167,7,180,194,12,15,118,73,67,17,191,228,12,126,153,233,85,19,170,176,26,83,48,135,155,221,243,191,249,92,234,241,45,249,226,12,131,204,29,123,32,10,127,191,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 623 ") {
    byte_vec_t msg { 32,63,149,149 };
    byte_vec_t sig { 190,95,115,138,79,10,147,162,207,74,13,47,246,128,184,78,116,251,149,205,40,179,244,210,37,130,228,39,13,143,5,77,236,108,83,212,232,194,27,227,195,0,91,98,160,86,94,193,123,212,224,171,145,32,133,137,47,234,198,161,254,28,22,11 };
    byte_vec_t pk { 4,72,117,59,127,42,218,108,107,147,3,91,4,79,88,135,117,141,204,15,242,114,167,21,138,139,24,125,75,224,154,238,42,52,157,177,55,235,142,219,227,135,137,180,77,15,166,224,172,81,146,191,155,164,136,177,139,118,74,236,21,78,68,156,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 624 ") {
    byte_vec_t msg { 126,227,137,10 };
    byte_vec_t sig { 245,234,9,29,28,254,80,191,81,121,219,128,23,115,248,213,179,31,184,48,230,62,78,233,62,160,47,23,209,31,64,190,53,109,33,220,128,60,152,13,169,135,141,134,15,93,158,31,90,225,114,240,14,33,177,97,34,85,157,73,247,140,191,183 };
    byte_vec_t pk { 4,8,199,115,9,145,194,206,109,157,235,101,91,145,34,169,171,50,184,116,0,59,117,67,127,194,15,126,115,127,179,150,190,229,233,225,223,201,100,30,120,95,170,4,153,178,208,61,1,70,48,80,150,128,76,59,58,104,151,99,152,200,203,255,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 624 ") {
    byte_vec_t msg { 82,234,163,228 };
    byte_vec_t sig { 236,124,200,193,62,1,123,33,120,162,67,125,8,15,221,229,134,160,51,23,84,65,94,77,17,201,166,116,118,130,168,155,242,165,120,238,244,155,77,55,27,128,134,248,153,80,142,83,157,129,110,47,38,209,157,253,151,114,9,194,184,58,4,139 };
    byte_vec_t pk { 4,10,245,163,121,2,223,225,179,112,95,184,74,242,54,158,200,40,11,56,79,125,72,189,196,18,54,237,120,184,106,58,28,176,236,226,125,205,152,22,58,226,195,207,119,62,217,47,242,39,25,137,6,248,16,110,204,188,112,62,41,190,144,56,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 625 ") {
    byte_vec_t msg { 173,75,91,104 };
    byte_vec_t sig { 76,28,147,133,124,193,244,186,186,235,91,59,25,176,112,110,152,145,110,46,51,222,99,194,163,241,150,170,221,215,131,52,211,127,212,95,70,212,151,131,148,5,92,176,151,54,255,127,17,213,157,83,176,43,72,31,168,242,124,75,253,11,204,86 };
    byte_vec_t pk { 4,49,245,27,208,241,184,188,144,103,209,249,151,79,253,70,77,36,83,233,135,59,183,60,9,18,38,69,36,82,189,249,142,61,15,127,30,252,131,138,147,107,78,22,14,236,97,173,108,221,75,174,71,176,41,41,145,155,181,193,0,228,97,187,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 625 ") {
    byte_vec_t msg { 45,44,177,115 };
    byte_vec_t sig { 247,186,177,217,198,159,74,74,218,237,126,67,78,201,221,207,183,76,111,212,203,216,42,126,101,158,27,186,108,165,48,187,251,251,121,188,58,138,45,36,44,104,63,204,90,117,157,75,214,245,30,78,244,155,199,53,163,91,163,210,231,239,112,23 };
    byte_vec_t pk { 4,220,24,155,156,36,4,48,47,233,157,190,45,30,102,2,20,70,184,141,219,18,229,34,220,176,233,168,233,150,140,6,78,127,47,215,116,19,212,63,98,215,171,232,234,2,231,213,254,135,23,48,68,63,71,105,222,115,75,76,132,238,235,46,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 626 ") {
    byte_vec_t msg { 19,156,48,28 };
    byte_vec_t sig { 56,244,96,220,175,226,81,10,236,82,73,3,176,107,91,202,23,29,215,5,128,110,99,5,220,151,106,130,108,87,120,147,221,186,132,251,246,30,30,107,47,215,212,49,165,181,89,128,47,158,255,168,36,59,174,70,72,166,154,14,89,89,154,55 };
    byte_vec_t pk { 4,143,227,30,100,136,119,166,240,45,65,75,131,167,239,13,14,166,51,219,188,225,34,110,47,182,29,177,227,4,53,131,239,167,214,242,134,133,144,75,253,221,166,228,129,232,32,100,168,16,224,230,189,253,165,138,36,51,97,44,89,182,125,174,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 626 ") {
    byte_vec_t msg { 164,102,159,216 };
    byte_vec_t sig { 158,252,245,159,244,185,200,23,83,28,9,130,250,45,255,214,218,12,53,204,202,168,217,4,231,91,70,84,77,75,100,33,223,129,169,20,119,15,100,56,21,113,85,127,79,57,233,30,151,181,72,91,115,66,204,181,85,103,161,161,86,134,8,135 };
    byte_vec_t pk { 4,75,248,100,60,78,3,147,171,168,134,41,217,183,59,136,13,16,142,14,49,53,238,160,88,131,197,127,218,195,184,153,61,18,249,24,43,26,48,166,218,144,107,246,72,89,197,48,34,253,156,61,14,47,26,228,169,250,208,20,158,111,18,124,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 627 ") {
    byte_vec_t msg { 5,159,116,136 };
    byte_vec_t sig { 78,71,95,254,63,207,86,103,2,159,168,63,45,14,31,15,33,78,4,149,52,200,58,36,8,178,194,221,170,1,126,5,152,48,176,48,73,142,232,148,79,239,180,182,60,155,76,246,100,211,63,203,252,173,109,217,212,198,218,121,203,123,14,89 };
    byte_vec_t pk { 4,195,2,133,131,156,33,55,245,47,243,146,213,224,221,82,152,111,129,214,94,230,175,254,203,171,179,29,79,90,57,202,159,71,240,92,149,198,243,54,80,167,183,148,30,223,50,144,123,60,145,203,121,30,180,163,147,153,244,62,126,1,88,78,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 627 ") {
    byte_vec_t msg { 49,30,79,217 };
    byte_vec_t sig { 21,230,105,222,172,87,92,164,38,20,124,165,57,224,238,25,150,134,51,138,17,63,27,14,63,149,239,220,230,150,85,200,182,126,238,86,185,242,133,194,106,59,151,197,73,117,138,136,103,192,92,215,174,24,35,5,79,106,60,0,76,180,222,107 };
    byte_vec_t pk { 4,48,3,210,191,107,107,28,185,225,153,215,145,89,248,207,12,57,211,63,122,251,214,24,96,128,196,48,83,38,3,10,57,250,2,245,50,8,5,36,8,10,38,107,51,245,25,188,191,150,95,181,233,192,90,202,174,149,5,142,218,34,59,253,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 628 ") {
    byte_vec_t msg { 13,131,102,99 };
    byte_vec_t sig { 82,246,179,79,141,106,249,168,221,113,246,249,24,155,251,186,3,207,1,94,92,80,1,170,34,197,19,147,72,120,215,73,188,232,240,10,13,140,231,181,202,134,115,155,126,64,106,174,78,213,132,3,115,79,36,137,27,159,129,71,175,0,115,171 };
    byte_vec_t pk { 4,52,127,184,83,17,155,162,97,211,202,245,206,45,128,195,148,65,151,252,90,211,7,76,39,122,39,128,77,98,165,106,65,219,18,49,27,61,49,24,162,94,188,212,65,63,167,38,194,43,44,211,10,49,81,87,38,216,123,220,69,127,144,81,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 628 ") {
    byte_vec_t msg { 157,230,16,59 };
    byte_vec_t sig { 237,127,117,238,186,57,186,13,82,138,182,63,18,242,255,39,29,171,179,241,111,41,91,50,214,141,4,106,184,132,120,172,14,47,45,157,44,24,178,116,23,19,185,8,13,84,183,125,252,103,252,77,91,170,66,177,243,30,139,161,61,116,170,78 };
    byte_vec_t pk { 4,0,64,140,184,236,176,177,9,182,238,129,77,129,112,247,248,99,102,63,82,230,114,69,152,168,243,122,191,176,67,244,169,87,41,93,11,216,241,223,255,133,51,119,98,75,232,30,185,151,32,236,176,190,112,54,71,15,162,196,230,78,253,242,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 629 ") {
    byte_vec_t msg { 201,172,57,6 };
    byte_vec_t sig { 18,48,245,158,128,127,157,162,53,52,110,189,5,216,174,219,226,82,97,217,43,182,49,135,222,16,240,102,230,231,48,107,220,134,241,185,13,215,95,139,219,205,19,164,44,114,40,219,150,132,35,84,192,246,193,226,108,144,222,68,207,68,44,171 };
    byte_vec_t pk { 4,168,243,117,218,225,34,177,125,252,22,141,123,194,26,119,148,170,82,31,79,23,163,132,41,104,71,197,67,16,22,108,240,174,151,193,40,170,237,115,231,52,108,9,44,47,61,210,242,29,3,30,132,185,73,47,166,60,197,216,108,125,0,121,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 629 ") {
    byte_vec_t msg { 217,171,144,247 };
    byte_vec_t sig { 96,39,105,51,120,131,146,176,52,56,196,171,237,184,90,181,82,243,43,186,120,216,19,79,214,141,182,97,131,254,165,171,98,195,252,209,174,102,242,74,218,109,79,121,231,229,140,109,176,154,99,79,156,236,230,60,96,4,85,232,105,23,179,44 };
    byte_vec_t pk { 4,229,112,222,62,239,83,28,135,20,67,135,120,136,81,112,171,149,55,182,224,35,50,190,56,178,63,100,152,229,72,254,212,66,116,24,14,36,213,37,194,146,205,226,147,168,61,245,109,11,155,90,123,76,49,101,236,89,23,129,118,25,205,85,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 630 ") {
    byte_vec_t msg { 244,161,90,31 };
    byte_vec_t sig { 128,29,157,196,146,66,192,162,53,9,231,55,72,55,153,255,247,98,166,99,48,91,158,67,154,168,130,44,63,129,232,246,177,176,77,90,183,233,71,93,159,247,200,147,12,73,37,214,156,125,200,248,34,104,130,22,147,84,13,211,57,116,100,119 };
    byte_vec_t pk { 4,77,172,96,168,185,130,95,1,60,197,65,255,105,74,117,142,209,104,238,96,242,78,245,167,124,174,5,204,77,71,209,67,158,167,81,199,119,204,49,119,14,59,248,157,97,133,68,78,160,233,138,203,93,107,102,171,156,37,91,230,17,209,147,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 630 ") {
    byte_vec_t msg { 137,29,98,89 };
    byte_vec_t sig { 136,186,100,110,240,97,76,254,155,193,52,145,219,32,214,42,144,61,104,56,209,229,124,79,221,165,235,2,113,255,196,241,86,109,118,165,14,79,41,83,104,192,197,193,228,53,208,199,231,179,199,246,137,189,114,18,91,41,156,139,64,108,192,96 };
    byte_vec_t pk { 4,24,95,72,92,134,240,22,206,11,182,65,165,8,187,160,208,102,57,9,44,190,108,114,179,237,117,214,58,112,251,91,198,33,0,149,121,17,162,143,206,71,162,210,179,106,118,133,195,25,253,48,79,245,245,5,11,133,13,31,193,236,88,33,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 631 ") {
    byte_vec_t msg { 153,207,88,254 };
    byte_vec_t sig { 45,110,133,108,239,171,79,31,252,163,18,196,211,144,125,189,72,113,66,204,174,137,16,188,209,128,124,14,178,58,193,102,48,241,57,225,79,230,190,159,250,211,123,198,135,86,156,85,2,226,23,139,141,230,119,135,206,17,163,169,8,210,38,2 };
    byte_vec_t pk { 4,3,54,226,21,147,155,180,29,120,200,190,153,2,32,222,128,185,21,97,207,232,164,23,0,208,62,83,5,147,114,221,20,114,165,168,132,156,107,252,6,110,71,68,32,140,1,34,111,116,130,32,228,116,77,142,164,99,249,138,232,69,170,237,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 631 ") {
    byte_vec_t msg { 52,199,111,82 };
    byte_vec_t sig { 5,158,85,148,1,135,128,227,85,81,54,76,56,229,188,17,28,215,238,133,89,89,2,210,10,25,35,128,63,49,152,85,83,200,180,25,238,202,12,194,182,241,62,53,80,75,135,88,87,171,131,9,178,79,54,233,97,189,210,205,206,193,6,49 };
    byte_vec_t pk { 4,36,38,82,106,154,235,165,68,107,104,136,35,5,217,26,172,116,93,160,189,28,126,236,180,181,237,19,187,221,100,10,63,26,180,212,49,76,166,250,192,183,128,154,145,173,234,93,122,116,17,17,130,131,203,198,62,111,107,49,141,26,175,193,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 632 ") {
    byte_vec_t msg { 149,93,142,3 };
    byte_vec_t sig { 181,76,6,44,91,226,188,211,144,109,209,193,184,157,151,234,185,32,232,95,44,95,71,192,160,89,173,137,196,89,194,55,53,130,46,61,225,77,208,199,173,249,21,80,113,55,26,213,37,62,93,45,167,121,243,140,125,214,187,7,16,248,126,204 };
    byte_vec_t pk { 4,103,244,33,182,166,121,63,172,150,69,37,254,160,24,186,100,175,52,58,141,161,151,96,41,132,158,50,133,37,167,175,80,118,87,209,31,90,147,167,212,253,46,175,70,204,154,127,7,210,193,27,107,81,16,168,129,228,149,171,249,164,122,158,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 632 ") {
    byte_vec_t msg { 188,35,248,124 };
    byte_vec_t sig { 166,112,70,43,89,119,35,234,79,201,206,43,62,82,208,28,202,207,188,103,179,83,63,187,190,109,106,173,107,77,144,40,55,236,59,178,42,127,33,15,131,210,236,176,43,251,129,243,51,107,28,131,23,236,217,131,103,86,211,254,42,89,73,35 };
    byte_vec_t pk { 4,82,97,173,244,81,104,236,175,0,187,195,164,74,207,76,232,97,40,84,66,168,5,2,100,118,173,174,79,172,97,35,62,93,240,139,236,249,200,215,84,245,98,159,200,45,88,39,62,130,192,128,65,223,115,80,15,69,137,26,129,239,182,186,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 633 ") {
    byte_vec_t msg { 110,220,52,150 };
    byte_vec_t sig { 149,146,75,231,207,82,137,161,220,122,6,43,169,87,99,156,158,36,74,111,85,208,135,184,45,66,60,5,77,12,132,178,165,240,90,48,221,250,0,230,180,30,30,199,45,210,37,223,88,227,35,45,148,162,128,243,86,5,24,2,33,96,35,38 };
    byte_vec_t pk { 4,137,154,99,23,177,111,213,201,75,123,101,76,205,159,245,56,157,22,239,88,195,85,145,242,232,142,201,20,153,69,53,227,18,19,218,153,80,78,149,182,220,100,97,210,161,136,204,149,212,248,177,173,21,167,228,90,244,115,65,91,114,158,213,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 633 ") {
    byte_vec_t msg { 164,162,61,80 };
    byte_vec_t sig { 181,175,221,37,102,67,216,144,87,1,235,145,205,49,146,131,13,202,182,204,139,30,118,69,226,85,250,161,70,181,220,151,146,182,202,168,18,125,123,13,131,44,46,158,148,106,181,125,1,226,124,184,229,119,158,170,36,210,143,138,215,150,104,87 };
    byte_vec_t pk { 4,211,71,51,135,56,199,246,145,52,198,187,14,172,102,149,74,34,166,78,142,33,11,14,172,194,244,14,250,1,115,209,56,213,238,157,190,48,26,163,133,75,180,112,149,74,94,30,96,191,96,232,191,54,109,225,72,80,217,143,190,181,94,118,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 634 ") {
    byte_vec_t msg { 10,220,26,141 };
    byte_vec_t sig { 71,12,0,20,77,78,53,57,184,213,170,144,9,82,160,32,54,170,238,176,89,180,161,245,210,63,162,193,243,139,26,8,243,36,97,214,76,106,131,70,220,116,240,233,173,86,115,28,150,12,237,232,71,55,185,139,219,64,151,87,249,53,188,166 };
    byte_vec_t pk { 4,135,16,5,75,85,144,183,158,191,31,111,138,157,171,125,130,54,56,99,188,141,245,104,105,82,38,134,169,195,34,69,125,108,137,216,238,98,109,103,241,222,47,166,198,79,64,227,149,29,47,138,145,35,246,90,140,136,240,214,140,29,68,146,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 634 ") {
    byte_vec_t msg { 116,18,248,21 };
    byte_vec_t sig { 55,221,141,206,62,208,162,169,16,231,80,170,225,159,17,153,46,189,31,29,191,212,64,35,39,125,152,244,14,249,218,102,135,82,28,16,21,254,47,210,98,95,249,87,173,59,218,94,124,194,149,201,145,227,69,52,122,38,184,31,237,80,141,63 };
    byte_vec_t pk { 4,109,4,227,151,92,79,118,148,212,242,89,8,64,122,196,178,188,197,124,156,97,100,65,4,246,125,3,93,60,217,40,110,245,64,204,245,70,84,13,3,98,201,228,32,70,54,55,166,234,175,66,34,184,193,182,136,128,191,214,154,55,87,29,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 635 ") {
    byte_vec_t msg { 109,190,186,138 };
    byte_vec_t sig { 2,180,57,232,8,69,197,237,177,103,106,239,67,168,101,76,239,244,84,95,35,28,193,51,101,114,82,83,62,236,101,70,196,235,38,110,1,127,105,132,1,8,80,167,18,219,52,42,62,200,183,68,119,114,164,72,78,12,158,172,153,248,96,126 };
    byte_vec_t pk { 4,68,219,93,80,22,236,91,168,78,120,219,236,251,134,232,222,154,131,160,223,142,11,200,135,139,65,4,139,161,155,240,175,34,165,198,212,151,6,254,178,137,7,30,183,221,190,62,186,218,157,34,96,84,37,209,210,133,129,114,147,196,58,147,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 635 ") {
    byte_vec_t msg { 4,172,147,165 };
    byte_vec_t sig { 178,132,78,1,73,237,241,73,110,13,239,5,56,143,252,89,153,120,75,37,33,173,197,47,169,76,16,49,29,240,126,219,16,96,3,81,206,248,105,90,5,12,219,71,164,227,2,198,64,223,17,104,194,92,89,209,132,51,14,12,149,204,108,57 };
    byte_vec_t pk { 4,191,144,88,227,159,211,18,39,19,32,194,156,94,133,188,155,63,185,244,148,160,166,81,181,251,2,191,96,213,130,233,41,122,156,227,85,166,181,221,83,72,139,124,151,122,234,190,16,178,252,110,153,44,153,27,231,244,74,208,56,169,43,60,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 636 ") {
    byte_vec_t msg { 33,243,57,69 };
    byte_vec_t sig { 30,94,82,1,181,219,224,147,110,242,179,180,94,140,195,229,17,170,205,109,184,188,77,113,231,20,156,14,13,191,102,207,138,188,213,172,86,16,193,34,150,145,55,207,87,210,186,48,124,47,242,93,117,65,28,115,100,192,214,167,141,122,59,175 };
    byte_vec_t pk { 4,173,166,170,197,63,73,120,87,85,32,45,244,135,53,77,87,25,203,120,87,111,174,101,122,204,121,246,5,120,201,250,156,20,214,16,192,37,243,156,40,149,115,20,130,174,115,243,251,64,112,45,96,10,16,32,17,234,173,130,118,101,138,225,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 636 ") {
    byte_vec_t msg { 241,154,38,144 };
    byte_vec_t sig { 124,211,92,191,173,95,21,112,107,197,138,145,131,194,24,72,56,56,157,24,23,68,179,71,62,207,108,9,189,84,175,5,229,241,207,103,138,33,76,20,177,236,32,167,119,85,155,64,141,251,150,60,227,8,241,85,221,194,2,19,246,192,107,97 };
    byte_vec_t pk { 4,243,8,157,250,22,43,173,46,190,55,70,163,94,57,2,31,147,199,187,126,82,207,45,207,98,77,183,201,160,111,174,144,228,19,212,58,124,180,123,102,145,118,99,209,182,110,20,94,109,209,201,234,117,92,236,123,223,184,163,172,234,93,166,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 637 ") {
    byte_vec_t msg { 174,97,151,202 };
    byte_vec_t sig { 62,80,109,44,131,116,32,108,230,246,54,97,183,88,158,130,139,249,255,6,229,228,56,213,65,180,128,74,219,0,222,33,51,229,76,231,232,145,200,43,198,171,127,14,77,18,181,253,177,70,185,105,34,234,60,179,232,204,198,196,50,67,139,165 };
    byte_vec_t pk { 4,59,116,222,95,35,190,251,102,125,237,190,162,24,45,81,158,198,157,145,40,209,209,97,228,164,196,182,230,251,211,76,166,114,212,82,92,144,233,94,1,64,33,153,130,19,190,199,116,25,48,104,127,19,130,187,63,150,50,216,251,113,152,117,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 637 ") {
    byte_vec_t msg { 74,160,70,98 };
    byte_vec_t sig { 111,57,24,131,103,235,110,219,98,202,74,17,236,86,29,169,104,77,129,177,162,74,58,57,255,130,206,163,43,186,211,217,250,217,225,211,1,26,242,113,124,233,77,66,36,70,233,18,69,197,247,37,206,112,78,42,132,108,221,251,155,255,62,73 };
    byte_vec_t pk { 4,128,205,140,107,14,125,187,130,82,217,36,187,92,91,25,163,21,161,221,10,213,84,69,227,248,221,191,64,52,82,230,125,109,182,226,26,221,239,50,105,193,26,2,96,31,91,53,206,50,23,98,74,6,153,147,29,89,187,198,186,124,99,183,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 638 ") {
    byte_vec_t msg { 109,251,56,91 };
    byte_vec_t sig { 144,102,83,240,89,206,173,241,22,183,4,32,154,119,151,151,53,69,43,135,174,211,169,13,216,237,3,81,112,218,93,203,131,29,23,4,104,54,214,255,10,179,120,8,232,214,68,195,60,146,56,86,196,126,30,152,121,15,123,100,155,138,197,60 };
    byte_vec_t pk { 4,145,223,169,73,95,22,70,145,255,239,12,41,134,211,59,201,224,155,193,183,212,91,130,118,123,120,66,129,195,239,178,27,237,1,247,245,175,104,208,138,46,135,107,22,57,52,48,94,218,216,89,197,246,206,24,14,34,235,145,247,235,145,134,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 638 ") {
    byte_vec_t msg { 169,152,209,15 };
    byte_vec_t sig { 197,229,237,208,19,53,131,241,234,249,206,154,166,82,37,27,191,130,87,224,171,134,8,103,74,204,199,168,45,90,60,108,74,37,232,195,94,103,42,158,41,15,72,123,235,224,53,154,31,134,118,144,216,15,100,110,10,119,40,129,126,1,132,95 };
    byte_vec_t pk { 4,166,239,64,154,246,101,221,236,75,36,183,166,92,97,215,4,147,37,0,214,157,107,209,96,59,63,202,66,150,65,197,175,136,86,106,215,175,12,73,63,253,112,165,46,128,186,240,103,48,140,9,236,67,75,34,226,206,19,14,160,204,34,164,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 639 ") {
    byte_vec_t msg { 194,67,41,250 };
    byte_vec_t sig { 219,19,186,159,48,168,133,67,232,99,146,244,88,56,229,98,44,82,90,129,138,205,124,25,94,152,241,247,161,244,241,118,221,205,146,251,238,54,236,50,238,249,189,153,98,85,208,104,14,170,48,63,70,189,44,155,120,17,182,27,242,11,53,180 };
    byte_vec_t pk { 4,136,238,76,173,164,65,252,117,209,254,101,77,127,39,148,2,246,108,112,186,117,58,75,181,211,180,221,147,211,171,178,184,244,197,112,170,241,191,163,178,232,137,96,184,112,235,27,217,83,120,27,51,157,190,37,247,85,121,54,190,42,198,5,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 639 ") {
    byte_vec_t msg { 5,30,9,161 };
    byte_vec_t sig { 93,174,184,67,181,8,247,174,44,210,249,131,109,19,7,21,219,195,194,208,205,47,105,242,108,153,37,59,230,210,41,109,163,235,139,94,41,243,136,110,40,47,18,31,7,165,212,118,24,197,17,193,37,15,211,161,254,39,94,135,96,33,252,198 };
    byte_vec_t pk { 4,209,132,90,23,37,55,103,122,49,139,75,20,192,103,62,10,55,81,245,181,203,136,66,104,237,204,28,135,123,244,185,114,183,24,190,125,155,122,92,201,116,244,85,94,9,174,4,217,178,29,243,1,125,224,171,85,151,42,240,79,224,182,94,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 640 ") {
    byte_vec_t msg { 12,60,194,135 };
    byte_vec_t sig { 174,228,160,180,203,192,136,92,254,185,13,160,31,40,144,194,29,156,148,50,248,76,233,100,3,97,21,119,51,161,174,47,196,243,8,203,142,55,172,144,188,133,128,228,165,81,93,115,105,156,44,190,35,74,198,220,250,122,234,118,250,69,216,23 };
    byte_vec_t pk { 4,6,254,138,135,43,134,147,10,109,86,210,110,37,229,151,113,242,37,152,205,72,224,218,169,247,228,186,227,188,58,118,24,246,122,39,94,113,15,81,42,140,132,255,126,90,77,182,126,174,1,172,80,168,242,11,147,156,146,241,223,55,183,109,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 640 ") {
    byte_vec_t msg { 86,250,116,95 };
    byte_vec_t sig { 33,119,171,12,190,22,165,64,75,137,41,68,113,211,158,156,184,10,235,227,241,69,208,221,8,103,198,231,37,1,30,83,205,144,201,187,186,134,128,192,58,178,57,91,208,13,138,238,143,75,49,242,252,101,119,121,155,185,138,31,147,21,114,186 };
    byte_vec_t pk { 4,14,185,164,172,96,170,213,103,179,91,191,118,135,44,184,146,19,173,77,34,165,250,223,47,86,153,185,126,21,106,148,218,75,154,102,188,50,47,91,21,112,240,126,2,161,72,201,83,193,5,41,176,50,178,221,222,243,91,34,33,89,151,230,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 641 ") {
    byte_vec_t msg { 213,118,120,203 };
    byte_vec_t sig { 78,209,199,176,205,26,198,175,252,253,241,201,255,59,247,244,12,89,196,207,14,151,159,25,190,34,1,188,134,236,228,236,251,84,216,160,200,127,190,98,236,165,79,200,54,50,195,181,58,82,23,207,173,142,53,123,91,177,238,181,111,38,223,80 };
    byte_vec_t pk { 4,107,94,178,111,164,160,120,101,65,53,245,104,200,83,124,160,106,226,37,242,44,225,233,201,169,158,230,154,224,215,226,244,215,68,69,81,50,199,166,190,47,45,4,231,22,10,29,79,147,199,198,238,181,2,160,0,254,245,238,241,102,71,235,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 641 ") {
    byte_vec_t msg { 218,106,36,195 };
    byte_vec_t sig { 244,90,15,246,15,35,176,248,81,156,176,170,3,92,230,230,142,18,237,128,102,31,238,164,231,51,224,52,10,119,160,198,34,165,200,140,115,62,116,115,57,148,17,190,176,92,244,116,233,31,154,1,186,146,255,85,83,113,42,86,142,236,208,119 };
    byte_vec_t pk { 4,59,232,131,234,155,170,13,196,144,77,9,246,163,170,214,166,144,64,201,158,53,134,253,30,118,157,67,54,56,62,58,196,56,89,116,106,0,94,232,31,148,23,221,140,21,142,140,19,204,72,178,183,61,192,173,189,209,183,126,191,186,24,222,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 642 ") {
    byte_vec_t msg { 101,24,230,38 };
    byte_vec_t sig { 109,14,137,255,13,224,241,138,2,126,159,243,179,214,140,61,53,145,166,16,148,23,145,171,154,71,193,141,202,47,131,229,219,62,167,139,92,237,244,251,53,54,12,49,73,127,82,23,122,67,193,28,255,232,108,212,93,40,209,216,199,15,66,27 };
    byte_vec_t pk { 4,211,186,107,199,167,222,145,153,214,13,90,225,124,0,203,148,75,174,238,162,136,183,188,169,196,172,222,142,93,10,149,235,223,140,178,116,170,192,43,149,204,243,105,105,154,80,217,226,246,186,106,219,170,59,132,71,246,7,176,65,51,139,138,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 642 ") {
    byte_vec_t msg { 212,35,13,52 };
    byte_vec_t sig { 136,122,117,74,59,5,47,10,105,112,75,79,198,99,109,220,217,197,143,182,45,143,54,64,102,158,54,81,8,21,154,81,108,253,15,62,249,221,154,96,137,7,196,77,2,214,44,43,143,113,243,182,162,242,48,55,188,129,78,120,158,71,232,246 };
    byte_vec_t pk { 4,178,165,149,168,123,23,62,77,84,208,41,100,106,34,244,46,83,209,122,199,69,212,227,46,121,217,25,226,60,101,132,250,8,116,89,190,83,203,0,252,89,3,25,41,254,234,98,26,165,0,83,244,33,197,141,53,215,242,57,221,69,199,57,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 643 ") {
    byte_vec_t msg { 117,37,241,229 };
    byte_vec_t sig { 92,22,247,28,75,131,13,121,146,241,68,234,106,145,254,26,186,251,152,17,112,98,115,55,166,17,187,87,113,77,110,129,117,135,153,247,243,239,154,180,187,21,107,173,61,218,40,241,65,147,142,189,175,18,121,21,188,247,90,253,239,67,37,254 };
    byte_vec_t pk { 4,76,25,220,80,37,46,3,135,43,230,176,243,193,26,166,85,159,133,51,198,2,13,136,229,36,112,189,34,49,235,181,249,89,158,14,122,8,75,16,184,66,206,190,12,96,183,33,35,115,213,75,137,67,25,126,207,135,129,168,170,20,46,193,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 643 ") {
    byte_vec_t msg { 77,195,231,0 };
    byte_vec_t sig { 232,230,253,35,210,251,125,72,6,234,172,221,75,252,7,164,185,120,89,208,117,176,113,70,67,74,20,94,32,229,90,55,255,26,72,58,188,227,238,75,87,98,54,40,100,89,20,208,44,201,157,181,86,40,202,194,73,35,107,93,95,91,223,17 };
    byte_vec_t pk { 4,200,78,66,21,12,24,227,37,207,13,61,118,15,96,8,21,42,232,110,105,168,195,143,29,179,125,181,202,138,105,117,202,43,150,192,164,244,248,225,236,167,84,68,7,4,49,227,161,42,47,135,114,51,12,142,129,21,55,110,207,50,224,5,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 644 ") {
    byte_vec_t msg { 115,55,142,244 };
    byte_vec_t sig { 55,94,94,174,116,25,54,188,142,243,113,6,214,143,249,227,53,96,38,169,31,234,112,149,176,242,147,117,197,149,80,210,81,73,218,101,210,57,180,73,6,214,142,93,90,77,92,53,164,194,116,59,219,167,9,229,237,55,47,29,91,207,114,200 };
    byte_vec_t pk { 4,230,150,51,7,188,113,70,48,83,172,122,177,254,125,157,253,82,201,94,132,19,157,197,121,253,229,116,16,106,210,213,115,65,250,34,80,241,140,125,32,58,197,36,185,161,16,87,122,175,0,92,254,237,64,73,172,124,24,156,221,151,197,119,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 644 ") {
    byte_vec_t msg { 232,152,205,128 };
    byte_vec_t sig { 94,15,205,247,223,74,252,167,232,208,133,179,1,27,44,67,63,227,222,81,12,145,88,26,211,3,89,198,117,177,253,198,249,218,73,214,141,139,59,84,234,159,79,199,96,130,149,157,107,131,121,16,253,7,104,41,85,114,252,29,47,6,93,0 };
    byte_vec_t pk { 4,46,70,114,207,112,228,132,170,82,83,122,216,214,154,31,188,202,155,138,22,12,8,21,143,70,217,142,3,189,189,176,208,149,13,19,43,242,31,175,87,101,120,124,9,75,6,126,196,153,71,195,166,119,166,230,237,107,73,119,70,167,53,181,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 645 ") {
    byte_vec_t msg { 110,93,251,123 };
    byte_vec_t sig { 162,15,151,27,163,93,86,56,165,183,100,35,89,189,19,179,242,186,124,99,162,178,133,201,59,163,218,210,238,190,228,243,98,0,94,190,189,211,204,87,14,46,245,97,35,50,27,140,184,234,157,153,31,65,241,201,42,150,143,54,13,195,105,187 };
    byte_vec_t pk { 4,166,62,63,211,160,105,231,104,191,91,24,154,78,216,236,121,236,71,58,210,117,137,17,221,214,189,150,178,181,135,148,225,117,17,3,68,77,240,102,140,187,182,174,214,74,172,214,112,102,37,48,136,77,125,13,227,77,148,91,161,170,19,25,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 645 ") {
    byte_vec_t msg { 146,139,214,20 };
    byte_vec_t sig { 38,208,226,141,191,198,15,223,202,26,190,211,51,155,42,85,166,232,234,7,9,37,53,11,96,33,196,32,101,233,2,16,199,186,73,157,75,123,101,11,107,53,129,225,170,80,68,152,161,54,20,130,168,72,106,242,53,152,38,135,126,196,171,35 };
    byte_vec_t pk { 4,150,76,150,158,120,139,235,255,208,224,79,22,216,240,91,138,138,99,98,84,24,0,77,164,246,48,208,201,183,249,208,238,133,40,37,137,69,226,18,246,84,221,66,2,6,215,0,85,21,208,203,113,249,230,3,233,8,194,106,110,23,36,64,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 646 ") {
    byte_vec_t msg { 133,67,175,229 };
    byte_vec_t sig { 64,97,95,46,84,156,125,137,198,136,69,13,48,66,11,209,171,40,150,71,25,248,191,183,204,199,66,106,122,239,101,196,1,227,111,168,161,173,46,155,79,12,168,27,52,32,197,221,210,203,116,122,175,163,223,60,221,49,239,184,4,157,42,60 };
    byte_vec_t pk { 4,93,23,85,248,93,122,76,118,85,149,139,26,112,184,227,124,90,58,46,128,134,110,209,205,241,141,85,37,88,40,142,153,171,242,0,112,61,109,93,151,196,225,52,250,213,110,93,137,29,53,116,171,237,188,54,66,31,174,33,70,118,13,134,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 646 ") {
    byte_vec_t msg { 95,10,135,110 };
    byte_vec_t sig { 11,63,188,255,125,204,77,70,234,37,134,47,104,75,231,67,193,220,32,65,61,122,140,223,207,210,102,201,125,5,176,44,152,250,89,50,190,185,118,170,217,224,111,43,2,183,254,177,103,171,217,4,66,34,8,217,197,171,115,47,69,206,2,230 };
    byte_vec_t pk { 4,170,212,228,175,145,49,12,207,78,167,18,182,61,215,219,156,69,53,58,156,182,69,50,215,133,100,151,192,82,35,125,20,42,238,12,141,98,76,75,49,155,80,27,34,25,63,134,246,190,56,226,224,38,179,133,221,131,74,85,203,140,54,63,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 647 ") {
    byte_vec_t msg { 68,234,44,206 };
    byte_vec_t sig { 233,111,210,250,110,179,127,161,135,40,90,194,148,189,62,200,224,50,189,172,74,62,189,245,37,87,110,31,235,255,147,96,171,200,194,118,51,220,39,171,251,3,13,93,203,36,115,184,208,212,61,3,141,147,102,241,213,135,200,250,173,97,106,107 };
    byte_vec_t pk { 4,140,173,239,159,99,78,234,238,223,40,235,44,32,75,154,216,18,128,103,107,14,121,224,204,42,27,31,106,227,122,95,142,29,153,210,79,63,51,80,114,4,57,103,163,168,204,197,206,187,106,213,35,245,118,87,197,106,64,5,209,108,67,149,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 647 ") {
    byte_vec_t msg { 216,230,119,6 };
    byte_vec_t sig { 210,155,123,160,45,141,105,216,223,124,119,158,245,234,1,86,163,116,176,148,255,227,89,127,124,192,199,148,158,144,136,63,186,81,32,166,184,168,48,31,243,104,188,32,89,125,83,199,224,90,86,163,211,154,226,97,254,174,76,211,104,14,210,20 };
    byte_vec_t pk { 4,72,22,70,211,173,184,119,29,102,174,246,80,49,76,171,199,38,38,90,139,33,229,127,235,212,55,126,15,186,45,124,48,201,184,169,71,28,144,183,44,226,71,142,50,87,43,55,113,237,190,91,241,108,160,5,81,17,186,53,32,154,189,107,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 648 ") {
    byte_vec_t msg { 227,82,47,32 };
    byte_vec_t sig { 215,206,71,175,162,76,114,221,78,15,110,110,78,153,234,139,74,97,13,95,199,141,34,107,11,254,48,255,182,89,247,172,64,40,182,242,45,195,108,154,129,146,189,103,59,54,124,127,58,119,98,248,224,159,152,229,80,98,180,199,131,193,4,66 };
    byte_vec_t pk { 4,22,115,232,53,192,237,218,57,130,83,185,86,124,5,169,235,169,90,73,145,240,93,222,206,170,254,114,93,173,160,215,29,242,233,255,221,41,223,190,130,223,100,94,10,254,204,58,71,90,75,166,146,205,115,151,171,252,63,104,243,81,195,100,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 648 ") {
    byte_vec_t msg { 58,109,11,170 };
    byte_vec_t sig { 236,153,244,160,195,202,105,136,204,28,173,62,140,141,141,12,255,139,104,250,89,15,222,41,205,169,80,124,204,140,154,217,118,191,196,220,187,245,70,155,97,210,229,37,236,41,127,50,174,174,68,222,120,239,5,55,12,155,81,99,117,237,93,28 };
    byte_vec_t pk { 4,208,95,51,178,30,193,35,183,159,148,64,133,164,23,79,166,138,193,79,27,109,104,37,36,50,132,134,108,110,217,192,119,169,9,128,209,125,206,23,230,75,130,131,85,121,169,77,226,247,58,67,62,39,54,211,231,188,82,64,225,83,130,1,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 649 ") {
    byte_vec_t msg { 72,191,249,54 };
    byte_vec_t sig { 210,247,64,202,194,44,142,4,215,236,11,0,191,74,178,52,178,61,75,34,67,35,237,95,254,240,35,151,202,172,229,145,169,174,107,106,97,185,108,234,215,189,179,53,140,110,253,69,147,174,221,250,87,67,233,236,36,223,79,99,223,51,252,201 };
    byte_vec_t pk { 4,211,17,239,70,149,53,157,255,122,152,232,145,0,6,186,218,6,40,111,99,254,204,189,162,78,38,116,51,30,123,68,6,219,226,64,164,27,90,205,29,244,5,21,18,211,25,155,65,60,176,206,195,171,109,47,246,196,28,162,212,153,146,165,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 649 ") {
    byte_vec_t msg { 60,137,132,99 };
    byte_vec_t sig { 5,227,213,201,31,51,31,2,167,217,135,198,154,53,47,199,106,57,106,9,39,155,153,242,38,139,175,249,28,93,114,251,52,250,64,183,97,48,179,245,203,246,45,152,240,95,150,103,184,218,221,110,217,8,134,123,42,42,198,216,47,162,11,50 };
    byte_vec_t pk { 4,17,136,98,203,152,149,249,157,9,206,198,220,152,180,36,92,221,244,50,151,50,13,103,236,170,213,253,100,7,138,91,86,114,184,62,26,79,148,21,119,147,159,242,101,193,20,13,163,187,41,45,9,106,32,48,41,45,57,245,206,30,161,212,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 650 ") {
    byte_vec_t msg { 37,137,17,225 };
    byte_vec_t sig { 246,237,97,172,4,8,80,16,239,176,165,30,190,244,163,107,91,64,123,94,233,222,94,48,56,252,235,189,134,230,166,233,249,113,199,22,63,165,188,168,60,161,206,146,236,152,9,90,217,36,8,226,50,122,106,166,138,26,43,75,38,200,123,190 };
    byte_vec_t pk { 4,102,191,160,43,156,145,150,138,101,169,246,239,13,213,21,190,50,254,175,79,138,95,232,41,76,175,161,154,42,239,69,184,193,45,128,1,5,89,162,21,79,110,136,43,4,56,17,221,54,74,88,146,156,128,130,4,165,58,19,37,193,74,144,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 650 ") {
    byte_vec_t msg { 78,249,128,27 };
    byte_vec_t sig { 146,182,235,209,62,223,102,5,118,254,10,121,8,11,233,16,168,9,168,106,125,19,99,126,135,92,5,134,2,37,58,20,168,166,93,254,63,179,230,19,163,118,63,16,77,147,210,100,189,124,59,160,164,234,98,126,215,162,108,136,151,213,164,11 };
    byte_vec_t pk { 4,148,78,69,129,200,254,150,206,164,150,178,69,227,65,224,211,158,5,189,19,254,99,83,88,157,202,5,17,104,178,189,13,246,92,132,78,123,74,163,255,119,160,45,123,82,56,74,29,71,225,216,142,113,156,193,234,241,18,63,87,61,203,32,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 651 ") {
    byte_vec_t msg { 70,180,208,94 };
    byte_vec_t sig { 250,198,179,177,13,8,51,244,78,216,48,54,63,155,149,44,207,112,212,52,195,10,227,118,235,195,19,71,130,30,6,43,45,184,218,48,3,193,131,68,248,154,114,108,55,23,222,249,9,226,222,33,33,4,251,248,9,177,212,15,98,150,226,30 };
    byte_vec_t pk { 4,159,228,35,242,17,42,137,128,246,177,182,174,89,224,173,30,242,217,89,234,167,228,121,25,24,107,176,223,216,19,108,90,196,185,138,184,52,155,221,230,254,146,232,174,160,71,180,188,31,78,70,25,62,239,8,235,175,176,194,31,66,196,55,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 651 ") {
    byte_vec_t msg { 187,116,241,21 };
    byte_vec_t sig { 67,145,231,68,30,101,206,58,190,203,219,128,49,245,71,218,221,105,132,219,51,28,167,54,31,229,105,105,128,68,232,81,208,138,180,44,194,174,33,83,213,170,16,178,30,250,179,151,11,28,222,227,18,26,112,25,146,221,49,4,80,132,240,79 };
    byte_vec_t pk { 4,86,150,201,190,44,38,112,171,79,31,10,176,99,199,88,108,85,53,116,109,79,118,47,254,162,130,224,54,183,78,27,46,116,210,209,117,168,49,94,255,22,217,39,105,212,224,113,126,47,96,2,40,248,187,38,225,84,47,8,203,253,67,2,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 652 ") {
    byte_vec_t msg { 202,43,47,225 };
    byte_vec_t sig { 242,139,132,151,177,5,93,120,2,244,69,55,71,84,26,220,54,232,186,126,252,170,193,219,147,227,73,200,174,90,6,116,225,249,188,168,226,215,200,227,249,206,3,71,234,162,150,247,166,90,97,45,61,238,101,173,151,90,175,222,96,13,225,20 };
    byte_vec_t pk { 4,252,189,166,9,16,3,10,92,244,209,63,81,115,187,69,122,144,46,196,119,64,255,99,91,216,170,163,130,211,218,221,58,248,227,105,215,54,51,25,220,121,152,60,81,76,127,179,43,5,236,148,39,94,32,12,2,29,251,216,53,144,4,170,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 652 ") {
    byte_vec_t msg { 42,109,26,248 };
    byte_vec_t sig { 249,187,230,168,36,110,12,254,38,47,203,88,2,192,239,204,94,220,6,39,6,48,211,252,42,92,68,105,167,53,162,206,57,222,136,138,110,245,6,99,195,91,76,209,20,15,95,120,116,124,11,14,23,161,54,89,44,197,90,109,10,107,198,140 };
    byte_vec_t pk { 4,171,250,109,204,92,203,16,99,65,184,30,129,134,5,107,117,255,175,229,44,19,78,231,114,202,219,139,143,43,28,139,131,60,223,160,196,143,197,222,46,13,175,32,167,245,105,54,47,214,74,209,106,235,195,244,116,159,17,98,157,36,69,179,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 653 ") {
    byte_vec_t msg { 103,239,214,137 };
    byte_vec_t sig { 54,36,252,125,230,121,183,177,227,104,237,229,76,164,55,50,205,48,102,73,148,98,253,150,184,219,59,173,43,75,120,208,92,186,152,226,225,149,99,133,17,27,143,90,236,14,114,57,77,142,7,126,24,229,177,165,38,55,16,39,155,253,181,180 };
    byte_vec_t pk { 4,32,80,137,237,248,58,170,117,222,24,101,252,54,144,164,49,198,130,241,22,155,217,148,223,175,200,10,167,254,208,219,140,106,69,223,143,184,94,114,102,121,10,127,67,249,23,89,91,207,129,114,228,31,162,220,8,29,241,60,41,27,107,70,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 653 ") {
    byte_vec_t msg { 24,86,138,27 };
    byte_vec_t sig { 87,69,3,54,141,28,85,204,14,209,230,234,81,4,229,112,143,150,121,236,178,8,214,38,224,27,209,17,119,175,109,127,245,179,15,73,108,66,226,133,128,13,227,107,209,139,144,178,119,254,134,99,108,42,1,96,25,255,100,166,164,225,97,67 };
    byte_vec_t pk { 4,106,34,27,211,101,202,52,240,155,191,179,56,221,209,171,81,92,197,128,135,249,122,98,98,206,238,197,108,251,101,218,241,83,242,87,128,79,222,10,140,53,206,155,219,205,90,187,32,193,222,157,146,29,223,195,93,248,186,93,169,95,64,223,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 654 ") {
    byte_vec_t msg { 212,243,140,136 };
    byte_vec_t sig { 97,16,71,210,31,12,253,112,192,23,206,77,170,30,123,78,23,229,87,86,207,229,175,53,140,48,73,33,187,158,73,72,73,177,228,21,65,28,155,99,71,53,146,57,28,135,199,81,76,107,187,216,125,206,86,6,242,103,46,40,97,210,237,165 };
    byte_vec_t pk { 4,14,78,156,22,112,201,135,124,127,217,255,151,107,162,184,172,13,84,62,110,136,126,178,184,84,158,117,233,84,24,68,218,159,205,199,72,179,155,203,12,225,205,183,230,254,44,251,4,231,71,154,221,26,234,137,168,231,116,229,175,34,35,182,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 654 ") {
    byte_vec_t msg { 255,39,252,42 };
    byte_vec_t sig { 174,70,26,102,192,154,82,220,227,239,209,119,161,62,7,38,232,181,18,226,94,255,126,199,234,5,47,173,139,21,19,24,106,123,121,57,161,44,29,100,88,159,150,86,97,249,144,175,73,221,201,67,115,80,2,223,107,111,184,91,73,239,21,7 };
    byte_vec_t pk { 4,25,139,196,26,24,113,187,51,130,54,210,202,210,24,53,212,177,144,44,78,126,26,48,231,111,223,223,25,247,152,252,53,247,118,74,253,33,10,0,114,80,232,16,72,108,197,255,234,27,162,242,250,49,180,97,128,151,137,35,84,213,88,182,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 655 ") {
    byte_vec_t msg { 133,236,115,176 };
    byte_vec_t sig { 100,71,133,199,103,170,222,147,156,252,32,28,170,180,203,64,94,206,110,6,68,207,35,48,123,45,162,198,83,51,251,16,27,142,69,6,206,56,128,214,217,113,120,54,5,246,37,232,115,67,16,118,245,156,94,65,133,83,7,210,145,76,215,64 };
    byte_vec_t pk { 4,122,120,61,34,73,72,79,182,7,15,163,131,168,153,113,239,94,161,46,135,41,180,217,162,76,171,148,51,235,19,181,219,171,250,145,196,26,103,56,4,19,97,130,29,196,243,167,83,99,8,170,233,113,82,231,179,70,113,250,116,143,94,52,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 655 ") {
    byte_vec_t msg { 42,231,240,239 };
    byte_vec_t sig { 226,11,121,136,16,172,47,236,231,117,249,157,185,32,57,49,18,232,109,190,159,165,146,134,223,62,205,129,41,87,7,166,91,59,112,13,183,237,182,162,41,28,1,158,221,235,60,81,186,255,163,199,75,96,119,47,118,204,113,181,4,20,73,58 };
    byte_vec_t pk { 4,249,128,29,200,26,225,15,159,111,77,26,200,71,50,225,219,60,234,154,11,1,205,52,215,122,242,102,234,154,48,233,209,125,200,36,188,144,134,217,114,226,235,144,80,248,215,13,140,165,208,169,129,140,71,190,202,98,148,229,223,228,100,237,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 656 ") {
    byte_vec_t msg { 201,58,64,147 };
    byte_vec_t sig { 72,67,28,62,126,34,194,98,90,52,131,3,43,44,49,83,247,9,147,74,144,29,134,150,110,73,42,165,199,255,207,204,112,129,198,47,127,161,220,6,91,147,214,137,2,108,20,107,14,2,136,54,70,247,151,208,57,108,234,27,38,221,240,20 };
    byte_vec_t pk { 4,51,241,46,120,180,17,75,35,138,60,225,51,76,5,230,105,201,239,193,75,86,222,196,99,44,21,248,141,35,184,55,15,73,12,170,21,218,26,49,48,244,189,148,75,47,254,224,190,119,22,221,172,38,235,243,11,15,38,101,111,193,51,157,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 656 ") {
    byte_vec_t msg { 108,191,22,218 };
    byte_vec_t sig { 156,225,37,1,48,55,167,188,246,6,162,142,165,28,211,103,177,157,159,174,122,16,19,251,161,85,103,47,31,52,194,167,113,178,55,155,123,156,132,12,111,47,56,109,1,150,197,210,6,240,72,88,102,194,129,90,228,182,149,153,193,145,225,249 };
    byte_vec_t pk { 4,245,171,206,204,137,175,142,194,193,165,231,88,28,182,204,45,30,235,163,51,109,111,121,246,149,102,24,176,157,178,12,151,172,230,59,20,231,243,206,134,84,76,133,31,17,24,12,210,204,205,123,115,191,85,171,193,214,4,196,95,232,29,253,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 657 ") {
    byte_vec_t msg { 214,239,27,167 };
    byte_vec_t sig { 3,19,37,142,8,118,118,80,18,104,62,169,163,189,142,247,193,184,67,183,145,132,43,155,49,217,138,66,108,109,232,161,207,114,200,12,131,111,66,3,65,235,253,235,251,21,122,17,251,28,14,30,234,121,100,137,123,249,195,191,108,237,132,162 };
    byte_vec_t pk { 4,206,157,35,34,65,91,185,200,187,72,58,110,60,54,240,45,150,59,234,28,48,142,57,148,167,58,209,103,186,199,30,65,9,144,32,58,67,133,87,7,109,137,21,254,229,93,107,111,92,187,94,105,163,14,48,203,115,211,157,131,227,100,19,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 657 ") {
    byte_vec_t msg { 3,207,178,114 };
    byte_vec_t sig { 164,39,98,93,235,13,14,148,235,203,174,174,185,164,55,242,149,125,142,27,138,179,140,111,113,216,50,69,174,171,230,86,195,12,191,203,168,26,45,129,185,23,85,42,231,231,34,201,116,104,135,44,174,198,124,150,169,248,6,69,137,21,67,56 };
    byte_vec_t pk { 4,105,191,194,241,105,38,38,38,172,67,184,222,53,156,96,52,68,46,1,255,40,146,30,232,32,99,116,157,134,2,15,234,226,126,64,113,87,159,203,112,46,45,214,142,144,36,231,224,12,50,32,194,124,91,87,225,86,236,1,219,140,98,174,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 658 ") {
    byte_vec_t msg { 236,187,131,210 };
    byte_vec_t sig { 151,177,83,230,203,165,247,93,36,182,233,167,28,197,179,98,84,30,72,202,88,139,58,162,68,101,73,88,245,61,26,127,182,201,65,98,163,8,158,202,171,111,165,240,75,39,46,52,229,59,46,251,31,15,57,146,183,166,131,213,160,113,212,249 };
    byte_vec_t pk { 4,140,239,210,162,219,87,15,166,80,199,232,170,72,32,52,79,37,210,35,46,143,238,109,217,113,114,182,138,138,113,236,136,183,247,98,118,61,99,125,65,209,100,230,108,46,238,183,30,68,154,161,179,207,103,164,30,85,25,198,159,60,114,128,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 658 ") {
    byte_vec_t msg { 168,36,152,56 };
    byte_vec_t sig { 155,159,149,176,59,61,118,121,105,204,155,4,205,26,209,107,100,150,196,213,168,153,15,213,170,61,75,67,86,52,236,110,124,69,244,80,124,121,104,168,81,24,13,111,49,252,194,156,117,51,23,40,185,104,230,237,222,4,9,158,242,38,101,65 };
    byte_vec_t pk { 4,205,120,232,87,85,123,105,38,46,48,247,23,90,21,34,231,205,181,215,20,51,207,159,34,153,225,66,124,85,143,246,7,11,16,162,103,31,20,164,219,217,154,209,218,236,235,93,15,153,18,219,57,191,158,250,157,83,206,37,112,194,14,45,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 659 ") {
    byte_vec_t msg { 1,44,50,5 };
    byte_vec_t sig { 87,164,39,13,84,90,152,191,99,173,57,151,45,222,130,242,201,27,157,94,190,159,190,107,218,180,42,42,38,45,166,191,116,1,21,47,151,121,146,82,192,82,227,159,16,94,132,89,119,30,213,162,143,116,213,221,152,28,28,116,173,85,25,113 };
    byte_vec_t pk { 4,48,118,87,137,253,47,103,134,119,58,248,177,33,46,78,212,234,18,77,206,249,237,169,20,186,88,176,204,47,24,105,2,14,151,177,73,245,159,59,170,155,60,231,238,191,159,139,114,39,71,10,181,196,143,168,65,205,167,47,141,107,107,191,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 659 ") {
    byte_vec_t msg { 35,3,80,210 };
    byte_vec_t sig { 117,162,229,95,212,94,185,9,129,109,170,53,126,21,169,248,110,229,237,164,71,97,45,220,34,109,142,33,115,197,206,19,75,34,20,63,238,19,150,181,227,51,11,186,213,218,103,192,237,82,253,252,147,212,161,210,239,209,74,231,231,126,197,32 };
    byte_vec_t pk { 4,219,235,5,193,124,96,152,251,124,112,134,49,16,89,61,42,75,34,163,14,165,226,29,174,126,99,31,86,107,118,101,77,88,77,225,240,66,196,242,254,187,183,6,73,34,142,210,34,144,147,182,134,235,16,185,164,93,101,13,100,140,170,231,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 660 ") {
    byte_vec_t msg { 225,123,90,173 };
    byte_vec_t sig { 234,172,199,8,5,19,90,92,136,53,204,188,240,76,197,95,202,96,175,66,217,58,212,65,67,111,191,205,211,155,153,43,58,243,112,145,185,154,178,27,29,60,154,23,184,150,157,239,127,109,89,172,11,131,88,233,159,56,188,221,230,17,145,95 };
    byte_vec_t pk { 4,5,203,189,76,249,117,27,201,59,151,4,247,139,97,80,230,165,88,161,244,100,133,161,33,201,15,63,172,192,147,216,240,49,84,212,137,98,8,134,107,11,122,34,121,140,68,253,56,137,116,230,205,212,94,150,74,181,131,251,72,55,170,133,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 660 ") {
    byte_vec_t msg { 65,177,77,199 };
    byte_vec_t sig { 234,36,162,17,244,153,146,55,220,78,110,213,124,132,203,222,171,212,225,252,106,170,92,249,193,21,7,17,166,20,91,184,164,18,51,157,33,105,211,142,248,123,109,20,144,199,199,185,244,24,38,19,48,243,172,129,31,126,111,229,228,99,250,218 };
    byte_vec_t pk { 4,75,142,124,22,154,72,164,143,201,2,183,82,29,224,76,107,96,58,53,59,88,42,60,93,60,72,157,101,223,147,82,112,208,201,138,84,115,255,229,157,51,88,192,130,235,57,172,29,137,58,40,90,61,166,161,128,110,47,58,199,55,228,103,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 661 ") {
    byte_vec_t msg { 20,233,103,62 };
    byte_vec_t sig { 25,3,29,202,186,138,11,171,16,117,105,98,233,56,157,219,165,171,21,90,59,92,219,73,38,64,221,122,164,197,31,82,117,165,44,115,105,199,109,239,222,18,60,112,39,9,231,88,11,98,184,173,215,36,5,92,34,251,239,26,76,251,13,154 };
    byte_vec_t pk { 4,174,159,153,134,116,136,211,142,233,92,14,85,197,248,159,217,224,126,90,249,178,88,221,247,243,196,201,167,28,175,104,128,178,129,39,44,202,14,209,253,87,188,5,145,248,80,102,18,214,232,101,218,56,93,97,254,111,229,150,99,182,213,182,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 661 ") {
    byte_vec_t msg { 82,193,22,16 };
    byte_vec_t sig { 159,3,116,173,60,0,255,108,50,218,216,70,89,24,23,210,8,35,147,76,4,162,61,22,170,165,55,66,200,25,45,5,7,228,26,63,37,125,225,0,59,167,43,193,21,7,74,161,150,200,61,28,94,227,45,144,241,23,65,193,189,69,248,198 };
    byte_vec_t pk { 4,96,32,2,178,103,193,154,208,135,130,11,86,217,56,159,234,175,101,203,145,126,199,254,222,192,194,195,159,166,73,24,17,134,161,218,173,98,157,79,213,197,38,236,19,105,215,195,126,193,23,184,229,24,69,244,191,221,50,237,10,51,80,67,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 662 ") {
    byte_vec_t msg { 201,49,161,238 };
    byte_vec_t sig { 150,212,8,23,165,138,33,224,189,117,177,8,249,88,127,48,60,203,223,197,114,63,139,29,38,36,141,75,24,236,43,77,124,141,12,21,223,20,171,8,77,65,77,101,1,168,170,36,36,65,193,239,221,25,139,64,71,159,206,55,108,137,31,84 };
    byte_vec_t pk { 4,189,214,194,181,172,196,2,216,96,237,137,228,193,161,241,38,232,38,219,121,174,102,5,187,227,80,27,236,221,29,245,109,59,143,185,11,180,3,151,81,128,7,207,243,110,215,129,36,249,1,18,201,149,43,122,169,58,162,202,38,229,151,132,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 662 ") {
    byte_vec_t msg { 125,180,3,112 };
    byte_vec_t sig { 211,13,68,189,127,254,178,173,33,124,72,23,209,83,210,92,37,77,235,87,17,133,25,193,92,211,229,156,186,246,245,69,204,208,106,85,60,131,176,250,125,186,136,197,230,76,100,223,143,66,189,58,231,166,198,254,164,254,91,132,244,170,183,48 };
    byte_vec_t pk { 4,138,45,102,172,72,240,249,67,85,158,83,16,228,221,186,175,47,107,84,83,81,114,208,175,25,57,44,82,169,51,215,106,63,26,99,100,173,187,173,247,80,154,116,54,203,69,138,23,214,47,66,89,53,208,80,105,81,219,159,32,82,152,78,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 663 ") {
    byte_vec_t msg { 94,172,115,230 };
    byte_vec_t sig { 109,233,139,226,253,247,140,3,147,137,129,5,213,171,48,218,42,181,144,253,250,40,96,23,233,115,228,68,171,232,40,26,246,90,94,165,94,71,140,216,172,143,130,159,185,82,163,151,163,0,94,113,154,116,105,128,46,138,19,18,100,223,192,47 };
    byte_vec_t pk { 4,31,52,124,174,48,189,128,123,162,10,134,211,102,200,10,151,241,221,151,223,214,107,199,224,199,254,64,60,203,80,51,54,49,27,53,83,239,46,17,39,196,34,107,141,143,67,172,175,106,105,63,183,7,104,136,16,19,86,226,24,182,131,45,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 663 ") {
    byte_vec_t msg { 147,219,48,68 };
    byte_vec_t sig { 194,21,94,13,217,178,128,154,139,215,220,157,245,135,185,40,193,177,54,8,239,197,80,71,222,2,88,54,199,220,187,22,246,145,231,68,222,31,107,17,78,237,148,168,167,127,140,165,218,218,8,158,70,75,143,144,0,192,80,102,198,24,112,157 };
    byte_vec_t pk { 4,47,15,155,237,71,224,29,141,169,43,217,194,240,87,10,70,42,174,104,97,162,85,190,23,213,91,22,212,143,181,50,239,33,130,179,28,189,243,198,169,220,45,213,4,63,15,190,1,60,252,248,90,192,136,108,235,121,214,6,37,18,207,254,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 664 ") {
    byte_vec_t msg { 86,61,113,19 };
    byte_vec_t sig { 181,252,2,247,207,234,199,79,167,62,115,106,13,143,124,65,11,102,52,5,163,181,193,11,254,44,154,198,148,5,197,215,9,73,14,223,25,113,111,104,132,204,24,93,86,11,155,200,214,108,236,178,37,77,148,241,119,172,15,90,172,171,243,33 };
    byte_vec_t pk { 4,108,129,71,151,140,49,173,230,210,54,93,131,52,201,160,64,168,211,152,119,101,31,189,5,116,164,174,235,124,121,77,200,254,42,23,145,127,229,7,71,17,243,80,153,129,4,112,89,129,248,78,166,242,190,98,105,82,229,28,116,42,120,148,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 664 ") {
    byte_vec_t msg { 45,197,237,176 };
    byte_vec_t sig { 99,22,73,85,52,210,65,239,100,30,6,202,216,34,94,210,233,91,167,65,112,54,135,246,82,87,189,95,224,58,190,240,191,30,197,200,154,106,241,8,136,175,128,201,155,176,102,143,216,54,126,212,126,67,22,202,197,241,198,220,166,157,108,225 };
    byte_vec_t pk { 4,94,250,140,118,215,119,60,180,64,125,178,194,96,109,86,148,229,137,215,152,64,224,76,127,228,144,122,112,76,2,31,164,180,108,206,2,201,49,201,143,75,134,83,179,22,203,64,110,95,223,209,181,159,100,116,93,77,1,82,80,75,162,241,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 665 ") {
    byte_vec_t msg { 199,106,255,151 };
    byte_vec_t sig { 182,203,163,42,21,111,48,33,239,227,118,87,230,204,70,156,156,194,167,16,40,227,147,80,87,16,48,15,6,131,167,34,126,40,123,10,194,229,138,238,216,137,59,96,115,235,215,49,34,237,45,178,244,191,153,42,78,107,11,139,23,166,187,38 };
    byte_vec_t pk { 4,10,82,226,31,71,3,158,90,80,168,193,15,103,133,17,23,188,9,203,165,116,73,217,88,75,210,182,122,133,1,19,51,103,57,154,37,227,184,106,118,94,136,109,34,225,90,87,1,162,42,150,177,10,110,213,246,45,80,139,44,115,43,73,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 665 ") {
    byte_vec_t msg { 109,215,23,250 };
    byte_vec_t sig { 18,181,106,62,231,238,92,170,8,177,174,33,154,101,183,115,203,194,220,199,131,152,23,222,30,214,75,3,230,71,198,63,64,195,96,185,206,236,184,253,93,170,179,246,255,80,45,85,135,192,158,176,77,133,9,35,74,130,13,208,250,72,34,60 };
    byte_vec_t pk { 4,97,171,19,245,124,99,43,159,190,206,123,52,157,55,4,17,99,184,82,30,157,98,136,185,216,167,176,48,190,194,227,42,60,97,196,52,190,6,58,75,65,120,231,54,41,93,188,185,216,23,61,102,24,166,180,172,138,173,105,144,218,19,252,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 666 ") {
    byte_vec_t msg { 163,76,37,233 };
    byte_vec_t sig { 128,53,141,228,254,125,192,9,115,216,106,38,158,162,37,116,60,182,216,110,208,104,136,156,10,143,232,49,19,143,4,54,100,126,175,117,214,174,192,250,5,66,86,120,204,162,23,108,44,44,82,93,213,65,108,131,31,157,122,108,246,97,32,162 };
    byte_vec_t pk { 4,2,171,160,185,65,177,160,212,118,175,148,211,46,5,16,206,219,165,134,146,57,50,138,237,67,49,97,213,78,186,39,76,109,199,160,223,27,80,44,30,137,120,183,151,217,164,167,204,21,250,56,69,82,122,29,119,40,66,133,84,26,81,153,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 666 ") {
    byte_vec_t msg { 170,251,151,34 };
    byte_vec_t sig { 161,244,152,243,114,127,116,96,247,229,174,71,6,169,196,1,136,226,186,5,50,51,131,237,156,178,221,235,252,218,157,51,109,42,147,54,132,45,92,233,165,48,7,187,94,70,192,196,148,215,106,12,15,43,128,65,25,90,60,249,250,183,62,130 };
    byte_vec_t pk { 4,46,234,159,186,71,122,25,95,221,130,147,177,39,164,190,199,139,173,34,87,140,250,85,99,159,208,247,139,114,232,150,55,12,100,117,25,154,198,0,250,63,95,204,209,248,163,132,37,207,177,44,3,92,154,191,12,78,39,132,230,75,126,141,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 667 ") {
    byte_vec_t msg { 112,90,209,232 };
    byte_vec_t sig { 201,154,50,14,212,221,179,185,11,250,203,190,237,224,207,190,177,146,113,87,167,120,175,190,221,134,167,238,158,125,215,212,202,47,65,225,178,76,168,6,57,15,25,248,1,232,159,91,106,255,39,40,131,118,85,159,5,146,82,2,89,242,71,31 };
    byte_vec_t pk { 4,222,57,154,155,149,214,235,206,163,215,145,116,152,76,40,218,98,167,86,27,13,84,157,235,239,244,6,235,195,23,3,39,239,254,80,5,103,50,123,176,194,60,70,237,42,3,241,100,230,162,154,18,11,146,243,78,138,158,2,163,225,248,93,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 667 ") {
    byte_vec_t msg { 46,79,141,216 };
    byte_vec_t sig { 52,86,10,243,205,136,165,18,95,83,16,183,17,76,147,249,119,66,243,55,118,170,138,180,106,187,74,139,76,38,231,147,235,178,21,153,40,231,227,95,105,136,29,128,39,99,172,7,81,105,92,136,159,67,91,58,125,79,18,234,61,106,160,127 };
    byte_vec_t pk { 4,124,158,197,105,71,175,158,212,147,175,59,121,125,23,104,160,140,76,204,17,239,89,205,221,63,98,252,127,217,47,61,159,58,70,117,88,33,208,217,216,79,23,176,132,47,220,133,251,213,30,4,82,52,221,196,89,136,123,161,210,20,236,24,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 668 ") {
    byte_vec_t msg { 81,226,11,105 };
    byte_vec_t sig { 177,124,110,67,206,10,187,225,187,156,164,122,20,34,249,114,25,72,179,62,227,162,86,147,32,44,232,135,1,118,7,16,125,114,71,253,19,46,36,117,159,181,44,141,93,202,172,181,138,137,139,191,228,210,196,196,254,67,18,93,186,3,236,3 };
    byte_vec_t pk { 4,49,178,55,73,164,43,29,233,224,141,155,6,246,22,122,251,239,125,5,177,192,215,216,201,198,80,227,31,209,48,82,241,50,108,79,79,58,251,96,204,204,247,11,210,63,132,242,47,13,170,134,210,48,252,26,99,132,134,236,130,202,65,112,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 668 ") {
    byte_vec_t msg { 32,210,47,6 };
    byte_vec_t sig { 98,94,106,2,18,221,180,20,23,175,158,112,217,122,157,48,78,174,79,91,186,62,237,96,212,250,150,19,65,114,59,91,131,9,146,163,25,38,104,19,16,25,101,88,4,58,167,53,175,89,36,113,186,53,116,28,203,118,17,8,191,232,157,166 };
    byte_vec_t pk { 4,252,162,251,225,132,209,130,114,114,31,68,171,31,179,40,77,104,213,162,192,71,112,173,177,194,247,186,74,70,81,62,75,22,214,3,121,73,139,0,126,174,161,87,208,190,160,18,55,195,30,142,207,246,225,95,59,48,218,255,204,121,140,62,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 669 ") {
    byte_vec_t msg { 24,175,132,201 };
    byte_vec_t sig { 196,254,175,156,73,109,6,167,169,55,251,37,138,64,86,120,186,8,114,160,180,39,11,242,94,145,135,0,241,54,226,26,100,59,103,106,52,17,65,112,212,61,99,42,213,124,172,228,129,153,9,124,218,155,65,99,64,15,109,76,173,44,175,52 };
    byte_vec_t pk { 4,7,77,0,22,163,239,100,33,101,170,9,188,120,222,92,217,220,240,175,91,154,180,158,6,115,114,117,175,169,87,166,118,96,161,52,251,106,206,10,43,115,244,128,59,201,120,238,255,239,91,106,180,76,86,236,67,90,27,197,242,68,2,172,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 669 ") {
    byte_vec_t msg { 90,166,205,221 };
    byte_vec_t sig { 96,20,2,223,200,67,40,72,133,149,60,223,35,186,62,93,94,213,123,114,85,2,27,219,38,204,76,210,16,181,87,180,236,158,208,46,137,122,17,134,30,37,72,205,19,204,17,230,25,89,127,207,9,207,8,199,92,247,88,115,147,249,115,211 };
    byte_vec_t pk { 4,138,28,116,145,115,125,4,120,250,177,151,173,154,193,113,251,168,235,147,69,222,23,179,200,61,193,101,30,43,61,104,45,77,164,28,149,168,87,91,137,165,115,102,143,189,102,67,152,89,238,116,215,97,23,194,61,189,209,204,179,203,27,145,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 670 ") {
    byte_vec_t msg { 69,77,188,151 };
    byte_vec_t sig { 12,140,44,24,39,161,102,85,92,18,105,32,98,35,231,68,197,43,3,226,253,160,133,139,15,140,132,187,212,53,49,132,4,116,239,175,144,191,132,202,113,153,144,50,89,69,161,64,249,117,156,179,145,129,202,49,31,123,217,53,253,205,31,179 };
    byte_vec_t pk { 4,77,219,160,176,31,135,57,221,220,32,87,129,55,24,114,181,72,28,135,185,247,219,13,242,166,236,220,254,91,48,15,213,41,1,133,159,93,91,167,83,56,30,33,54,148,231,241,200,85,50,62,114,224,109,44,180,87,20,210,45,202,255,68,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 670 ") {
    byte_vec_t msg { 119,101,105,243 };
    byte_vec_t sig { 201,101,94,72,26,140,212,30,211,29,114,1,16,147,45,206,85,66,62,35,95,217,92,117,143,12,27,1,74,42,87,140,235,178,161,65,174,191,178,181,152,27,226,238,169,136,73,113,8,94,180,125,220,63,93,56,116,50,75,1,9,143,240,62 };
    byte_vec_t pk { 4,121,193,138,119,15,174,27,110,243,236,2,125,162,104,236,31,114,146,35,46,88,234,131,81,32,209,164,216,98,219,22,73,243,57,132,142,117,197,227,159,193,128,60,118,160,162,131,156,184,207,246,212,123,71,111,168,149,11,37,31,69,98,58,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 671 ") {
    byte_vec_t msg { 6,97,91,140 };
    byte_vec_t sig { 180,70,189,121,112,183,43,107,15,42,3,246,24,220,198,226,193,10,125,79,12,83,213,70,249,225,177,157,239,243,241,49,162,46,217,89,243,149,188,122,39,4,50,218,111,86,26,177,125,124,82,236,33,172,163,81,213,244,151,35,227,249,238,153 };
    byte_vec_t pk { 4,254,157,246,35,206,125,245,220,181,21,42,139,203,68,238,215,253,36,134,81,78,192,15,80,247,251,47,7,137,100,137,44,79,150,94,21,78,181,43,57,245,55,1,13,38,208,193,224,100,182,89,64,233,195,18,98,228,185,249,123,26,220,171,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 671 ") {
    byte_vec_t msg { 22,69,112,116 };
    byte_vec_t sig { 135,33,127,51,127,246,108,79,235,40,49,22,50,59,86,6,136,135,165,190,136,217,74,242,235,199,113,18,158,107,246,110,242,92,51,6,150,39,132,145,8,180,113,30,148,49,215,237,130,204,114,207,96,199,203,250,225,107,115,207,175,155,238,24 };
    byte_vec_t pk { 4,98,112,16,141,167,50,38,192,129,39,207,112,74,56,246,24,120,109,227,59,5,112,76,0,252,95,46,181,147,225,100,115,148,9,94,134,46,184,100,62,144,235,139,160,38,20,64,126,74,175,64,252,207,175,78,65,92,64,36,19,155,30,66,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 672 ") {
    byte_vec_t msg { 21,121,153,172 };
    byte_vec_t sig { 210,46,221,191,181,83,164,166,139,148,85,165,249,80,183,219,154,241,63,228,66,147,197,224,132,227,13,0,53,170,146,242,187,84,252,64,62,6,209,199,55,204,21,39,212,75,244,15,210,50,108,175,63,160,225,122,206,141,76,14,124,171,110,133 };
    byte_vec_t pk { 4,253,209,64,36,78,69,30,59,181,241,21,144,93,112,17,72,41,255,136,68,161,250,4,145,25,192,171,130,161,124,63,114,20,237,53,198,52,126,227,34,83,24,121,216,61,216,4,46,8,151,85,253,36,209,115,242,12,126,132,79,244,57,53,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 672 ") {
    byte_vec_t msg { 107,207,67,140 };
    byte_vec_t sig { 71,96,39,95,198,108,122,36,229,196,79,66,106,82,123,85,4,104,122,36,53,45,215,178,58,69,4,104,60,207,86,103,67,254,52,27,189,252,179,180,78,178,219,206,160,110,51,253,7,43,8,150,146,188,136,129,208,28,184,131,168,167,184,36 };
    byte_vec_t pk { 4,140,89,207,1,155,86,139,200,76,113,63,73,196,22,152,249,151,169,222,230,210,4,147,211,193,115,220,10,207,21,98,198,163,111,248,123,248,31,134,223,80,143,172,101,180,158,58,94,157,44,53,108,96,154,17,205,218,204,202,189,35,162,17,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 673 ") {
    byte_vec_t msg { 6,127,40,145 };
    byte_vec_t sig { 50,54,177,217,139,43,71,67,34,60,88,238,133,29,225,118,71,153,31,169,126,0,45,55,28,98,135,163,152,108,106,23,56,1,18,127,237,69,169,113,21,14,52,114,186,27,190,186,182,221,145,247,83,213,143,252,29,114,246,112,145,82,86,211 };
    byte_vec_t pk { 4,240,18,23,164,106,121,100,200,11,229,25,96,12,222,91,34,161,204,17,21,29,177,43,124,218,42,82,174,130,105,209,197,201,202,236,76,3,27,29,94,225,162,226,47,141,206,54,189,25,49,91,187,139,176,169,222,94,25,48,52,42,183,109,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 673 ") {
    byte_vec_t msg { 230,123,42,146 };
    byte_vec_t sig { 131,142,106,185,163,136,63,74,176,234,186,9,23,37,129,138,91,16,40,56,17,60,130,172,97,117,97,118,50,183,32,116,87,100,108,111,24,229,77,126,75,114,222,71,75,75,152,66,39,214,163,205,127,124,180,115,90,203,129,8,173,244,239,73 };
    byte_vec_t pk { 4,167,6,174,78,195,214,71,58,137,19,211,97,139,81,216,224,76,142,159,137,63,105,246,16,198,64,208,241,154,246,158,225,61,230,237,249,161,111,235,249,173,136,20,19,97,114,56,241,193,182,62,106,37,37,26,81,106,162,143,21,222,142,201,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 674 ") {
    byte_vec_t msg { 252,157,103,57 };
    byte_vec_t sig { 177,68,194,34,36,49,155,213,176,103,55,203,158,168,215,158,43,50,17,241,4,227,13,47,176,39,69,109,217,130,74,191,118,252,160,186,8,51,249,222,180,180,238,250,40,147,244,50,2,29,10,38,121,184,108,96,95,102,39,202,242,252,220,198 };
    byte_vec_t pk { 4,194,141,4,38,248,166,44,209,174,18,16,37,126,23,245,155,32,220,107,131,75,214,10,2,77,7,208,212,27,114,209,20,247,95,112,220,127,217,135,76,125,156,252,6,76,76,141,216,196,3,143,176,220,229,168,241,137,226,159,235,231,147,115,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 674 ") {
    byte_vec_t msg { 45,148,67,141 };
    byte_vec_t sig { 82,161,171,240,115,46,133,181,240,231,197,50,62,56,170,8,116,236,88,76,87,98,140,246,46,214,153,172,177,57,69,4,132,228,4,173,189,107,168,61,162,100,28,222,192,206,150,201,218,87,158,109,21,110,235,183,246,201,83,9,50,203,172,66 };
    byte_vec_t pk { 4,174,135,126,228,233,191,231,217,46,197,30,49,20,229,96,202,201,242,38,125,8,36,3,207,85,66,155,2,201,205,33,58,194,233,105,247,178,175,18,108,135,83,77,224,10,195,137,194,67,205,214,0,252,169,49,98,145,185,192,83,233,193,241,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 675 ") {
    byte_vec_t msg { 100,88,246,108 };
    byte_vec_t sig { 72,198,216,125,20,71,197,104,190,140,207,76,139,161,106,239,123,35,97,14,158,71,57,208,21,242,98,21,199,186,220,219,203,199,175,40,32,222,197,65,44,111,113,255,80,90,185,33,45,52,84,21,107,87,78,22,221,132,89,45,76,95,223,202 };
    byte_vec_t pk { 4,28,94,62,145,250,198,180,80,207,214,162,214,211,212,39,140,18,237,231,82,146,48,215,174,165,238,136,147,124,121,63,243,143,210,186,71,52,167,71,30,218,186,156,178,183,179,237,34,188,166,62,219,173,207,201,117,184,225,43,69,8,44,78,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 675 ") {
    byte_vec_t msg { 149,50,6,88 };
    byte_vec_t sig { 181,232,115,68,185,179,231,23,128,44,194,250,245,17,93,120,177,19,84,151,157,2,149,244,176,9,22,240,44,129,6,92,3,5,151,146,217,202,225,70,188,75,141,103,167,25,233,140,234,25,51,205,136,19,245,81,4,246,137,88,61,164,156,216 };
    byte_vec_t pk { 4,82,144,91,48,139,36,229,70,68,231,90,179,28,81,184,129,200,102,161,144,15,125,84,69,1,255,7,111,80,239,209,253,29,189,76,144,181,243,86,251,130,55,17,172,228,3,193,235,212,247,50,76,226,201,236,216,80,24,250,221,21,140,63,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 676 ") {
    byte_vec_t msg { 40,33,118,254 };
    byte_vec_t sig { 119,64,245,225,11,31,252,11,163,109,53,51,141,191,217,148,114,252,27,9,169,129,123,237,142,39,211,171,252,181,82,16,200,98,107,168,72,168,87,38,161,144,128,27,199,238,175,204,233,7,141,12,165,38,132,35,16,7,70,59,99,82,9,35 };
    byte_vec_t pk { 4,60,91,90,64,153,82,22,231,70,221,216,115,13,5,64,6,127,154,13,44,21,127,130,109,163,201,7,128,12,164,42,207,172,151,88,184,199,31,101,157,116,23,78,232,14,31,72,192,84,55,164,93,106,248,139,79,171,110,88,133,134,247,46,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 676 ") {
    byte_vec_t msg { 65,243,128,26 };
    byte_vec_t sig { 131,210,48,219,8,193,187,151,140,71,249,219,53,77,56,101,121,248,11,199,163,203,3,254,236,27,207,163,41,30,64,3,21,145,59,115,208,120,161,130,72,169,183,131,28,126,46,62,107,219,215,155,202,236,34,83,252,86,33,205,31,31,216,139 };
    byte_vec_t pk { 4,223,105,239,238,65,184,16,177,72,255,47,212,93,51,49,189,26,73,97,114,193,57,146,20,23,205,13,101,113,27,27,60,234,60,185,55,185,93,162,111,111,88,176,81,192,135,186,140,223,9,156,130,203,134,233,192,93,203,142,50,71,163,215,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 677 ") {
    byte_vec_t msg { 80,84,243,44 };
    byte_vec_t sig { 234,40,242,172,250,230,235,115,56,229,22,43,126,242,226,44,110,194,238,81,123,56,149,42,158,147,237,180,84,138,13,174,219,216,216,128,249,21,106,73,2,253,81,229,145,30,64,144,214,220,100,3,7,50,205,60,43,125,165,170,209,124,186,127 };
    byte_vec_t pk { 4,207,26,77,177,14,204,111,181,16,32,61,31,245,9,58,72,245,71,245,109,4,23,85,58,129,67,91,145,232,167,51,2,112,227,90,11,122,65,129,158,190,118,78,49,84,254,139,214,99,248,184,141,82,103,155,169,151,115,109,21,47,98,97,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 677 ") {
    byte_vec_t msg { 98,29,101,82 };
    byte_vec_t sig { 252,168,93,87,188,193,208,185,5,84,133,224,221,22,225,61,242,243,75,70,219,133,104,104,140,52,241,100,78,169,109,137,244,215,30,234,79,129,255,226,111,246,66,95,58,179,45,124,240,81,13,192,9,31,149,212,0,220,54,76,108,165,91,134 };
    byte_vec_t pk { 4,226,91,23,108,104,30,132,104,168,118,243,159,64,24,48,126,164,109,201,34,217,247,105,115,64,76,207,77,116,18,185,249,17,227,180,185,85,143,164,101,208,193,241,213,249,45,221,24,134,11,165,105,92,252,64,66,147,64,212,149,80,87,92,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 678 ") {
    byte_vec_t msg { 172,136,68,29 };
    byte_vec_t sig { 199,187,13,48,151,116,66,174,172,161,172,184,172,161,203,72,15,138,153,222,10,93,169,172,144,173,132,134,44,97,179,134,169,169,71,73,248,192,209,223,243,16,192,115,164,162,117,6,209,209,212,183,99,17,190,149,163,52,75,56,121,0,87,154 };
    byte_vec_t pk { 4,45,26,133,199,126,208,15,184,199,109,183,20,197,203,216,210,158,39,62,163,56,64,131,87,153,212,230,36,108,129,83,48,97,144,14,172,92,141,103,105,71,16,230,255,21,197,233,223,198,26,96,48,40,114,184,96,97,7,196,24,43,228,103,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 678 ") {
    byte_vec_t msg { 230,125,141,90 };
    byte_vec_t sig { 117,166,131,50,181,198,109,227,50,11,68,173,14,211,84,88,115,225,242,184,253,0,83,193,46,38,172,205,250,92,131,199,113,43,35,84,241,2,132,139,253,5,208,79,220,33,10,61,174,147,104,117,80,25,249,214,248,217,69,170,135,43,122,217 };
    byte_vec_t pk { 4,79,48,90,63,218,73,195,180,54,186,111,107,156,56,217,62,69,20,246,42,200,60,147,235,192,100,182,241,234,243,180,102,158,185,141,176,81,41,112,203,44,8,123,94,3,125,31,197,85,106,53,122,18,89,181,193,78,124,198,235,51,14,253,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 679 ") {
    byte_vec_t msg { 136,132,4,67 };
    byte_vec_t sig { 88,34,123,30,229,192,2,192,123,119,25,117,253,249,158,149,99,88,240,0,32,251,33,232,195,157,113,138,219,174,106,202,108,118,211,68,2,49,136,253,197,78,192,2,29,73,159,65,230,22,203,134,17,241,63,48,19,216,63,37,23,38,39,198 };
    byte_vec_t pk { 4,166,198,125,91,101,0,207,192,88,207,21,83,99,219,23,76,2,174,140,206,43,187,113,248,144,226,15,206,119,218,73,53,201,239,106,207,3,178,208,151,97,164,250,48,195,152,148,67,101,154,84,213,160,22,98,81,178,28,53,111,244,209,244,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 679 ") {
    byte_vec_t msg { 71,66,159,210 };
    byte_vec_t sig { 10,97,5,106,53,157,173,81,249,241,254,148,188,15,117,229,52,103,184,53,34,183,170,214,215,53,85,105,139,148,21,75,38,194,191,191,60,73,236,189,73,18,5,58,8,217,219,84,131,12,11,214,164,73,134,200,91,134,107,163,209,95,55,244 };
    byte_vec_t pk { 4,249,211,150,54,206,2,18,243,2,57,152,38,56,24,242,73,208,99,176,71,11,109,139,186,115,114,106,172,154,155,165,105,250,186,179,117,58,101,182,145,131,17,76,42,2,54,48,219,67,113,94,182,135,23,189,207,152,67,23,79,15,52,181,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 680 ") {
    byte_vec_t msg { 17,45,134,157 };
    byte_vec_t sig { 71,102,233,188,68,247,98,70,87,25,255,201,201,233,38,150,210,135,213,25,57,190,226,180,64,200,77,3,81,151,19,221,20,83,231,219,113,241,163,28,17,113,154,144,81,155,168,6,149,9,175,102,78,99,164,114,84,171,136,137,70,195,63,149 };
    byte_vec_t pk { 4,124,214,224,56,42,237,190,194,27,191,14,97,176,140,151,138,141,88,238,78,171,138,29,111,53,81,248,71,232,224,58,117,196,252,33,104,178,14,46,19,191,145,14,167,134,82,235,4,11,134,198,211,15,29,42,55,79,81,120,253,196,194,169,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 680 ") {
    byte_vec_t msg { 43,202,167,213 };
    byte_vec_t sig { 202,157,104,126,106,34,104,45,70,62,227,133,197,20,55,88,68,208,44,97,75,164,152,56,114,231,43,251,70,146,52,58,55,139,188,23,211,65,224,248,85,163,181,66,199,182,85,252,136,208,54,43,63,34,142,216,192,229,252,177,122,125,16,105 };
    byte_vec_t pk { 4,210,65,33,44,238,170,230,207,45,64,207,88,0,54,169,188,112,255,255,254,81,194,8,255,149,145,119,157,187,51,88,2,49,125,199,233,86,197,231,80,81,237,66,184,153,194,18,171,43,50,108,6,23,44,196,31,96,83,213,244,19,7,243,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 681 ") {
    byte_vec_t msg { 167,50,230,221 };
    byte_vec_t sig { 24,180,37,153,1,238,171,119,229,162,249,227,14,131,35,119,219,246,162,150,184,104,173,103,212,244,34,32,162,109,33,149,129,211,222,247,18,86,220,8,0,246,7,194,93,139,134,66,24,17,184,243,146,110,67,46,95,140,138,4,175,218,90,2 };
    byte_vec_t pk { 4,119,250,37,46,211,34,67,204,114,233,220,209,107,141,61,200,70,222,20,92,171,61,117,86,26,226,150,63,56,233,11,160,185,135,87,149,142,23,169,214,22,194,216,106,120,234,100,63,36,107,221,234,223,244,140,199,157,242,250,180,222,101,23,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 681 ") {
    byte_vec_t msg { 113,195,5,30 };
    byte_vec_t sig { 12,85,103,17,53,30,90,89,62,17,241,151,66,26,10,71,2,69,18,216,162,244,59,77,177,93,41,212,108,187,145,248,8,137,137,217,183,223,62,75,110,122,27,86,12,21,103,81,174,216,162,129,5,28,165,199,134,92,161,63,137,51,215,152 };
    byte_vec_t pk { 4,178,218,11,180,135,250,100,42,1,114,232,231,181,255,173,70,213,119,112,195,241,57,70,210,70,216,104,120,166,11,26,198,83,23,247,175,111,31,124,102,18,105,30,195,239,42,208,194,88,35,85,175,43,255,98,187,157,125,123,46,82,62,123,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 682 ") {
    byte_vec_t msg { 144,170,67,179 };
    byte_vec_t sig { 23,238,108,117,242,77,252,153,253,175,19,190,110,218,5,24,26,145,102,67,8,77,249,86,175,54,253,82,94,7,90,210,92,201,129,95,55,118,82,187,11,57,26,194,3,216,204,84,223,208,71,63,146,109,143,65,74,28,135,65,90,94,43,150 };
    byte_vec_t pk { 4,212,182,63,157,133,99,61,235,68,163,135,111,79,1,125,86,59,84,210,109,173,151,202,203,38,124,121,73,201,83,170,3,118,107,117,107,220,169,159,141,238,121,2,9,119,196,136,252,181,120,112,169,157,89,141,10,5,174,46,228,19,93,181,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 682 ") {
    byte_vec_t msg { 64,157,101,138 };
    byte_vec_t sig { 216,69,113,119,159,199,225,221,12,64,51,9,33,146,226,105,134,10,210,118,33,147,30,193,192,79,168,178,14,58,160,242,142,223,158,140,70,26,145,167,71,224,45,103,101,83,44,87,233,133,36,1,216,153,152,242,238,24,192,184,8,199,163,190 };
    byte_vec_t pk { 4,87,21,104,240,10,208,224,120,175,151,108,254,154,222,72,38,45,6,183,122,225,219,21,56,104,81,252,1,52,184,157,61,218,166,69,199,168,23,166,133,230,81,114,133,138,235,54,6,222,8,238,114,62,186,111,95,244,125,30,204,234,144,133,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 683 ") {
    byte_vec_t msg { 122,255,36,186 };
    byte_vec_t sig { 230,122,174,114,137,243,73,11,221,8,110,223,222,44,253,122,111,229,80,116,6,50,80,151,192,168,149,103,21,159,39,202,157,109,162,246,71,199,90,172,189,4,73,113,255,246,149,213,87,81,162,19,35,134,2,183,210,117,135,23,36,207,49,64 };
    byte_vec_t pk { 4,169,25,212,242,232,34,142,49,139,13,121,204,73,107,236,98,10,211,37,180,20,1,15,135,161,19,9,115,69,99,23,11,90,140,5,196,59,134,179,95,74,133,133,206,98,185,145,188,202,35,229,137,243,242,17,49,205,37,66,201,243,3,177,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 683 ") {
    byte_vec_t msg { 4,239,188,10 };
    byte_vec_t sig { 186,117,192,3,167,191,183,2,99,189,210,93,172,213,177,118,129,22,117,80,142,79,214,184,101,51,252,23,248,47,59,87,229,25,221,97,171,174,68,156,53,6,6,151,73,91,122,125,73,29,171,53,4,56,186,56,55,178,25,35,223,147,67,150 };
    byte_vec_t pk { 4,198,243,166,207,159,157,22,232,153,179,137,5,218,54,2,121,174,163,32,63,193,202,255,212,148,146,11,8,71,238,185,68,57,91,197,36,95,37,174,199,12,204,41,138,26,13,5,11,23,133,95,188,93,148,244,74,35,178,81,236,130,89,80,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 684 ") {
    byte_vec_t msg { 233,31,72,203 };
    byte_vec_t sig { 131,121,172,37,218,126,179,130,118,99,164,202,54,198,63,21,177,107,189,250,212,71,234,88,69,68,36,16,82,231,111,27,45,47,45,182,245,224,247,69,50,61,194,177,246,171,131,10,92,26,131,133,215,159,178,192,3,113,175,238,58,77,128,229 };
    byte_vec_t pk { 4,136,253,138,46,200,22,225,145,19,125,148,16,58,164,204,105,10,233,22,103,92,48,112,137,160,62,241,180,68,79,45,35,133,155,209,223,211,148,255,188,218,207,241,56,123,126,93,158,24,45,23,75,63,133,77,111,153,76,83,217,66,151,80,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 684 ") {
    byte_vec_t msg { 77,27,154,127 };
    byte_vec_t sig { 116,106,118,3,61,170,31,166,35,136,186,139,100,214,126,197,10,171,110,244,239,25,198,32,103,122,10,107,203,12,212,24,222,229,233,183,205,121,21,243,157,219,43,57,156,208,232,14,4,253,208,111,126,108,115,38,93,130,232,118,107,73,46,250 };
    byte_vec_t pk { 4,86,211,60,238,166,207,237,209,133,229,224,223,118,125,79,50,254,208,80,63,195,53,50,230,161,247,164,227,157,211,202,18,175,214,94,91,119,156,206,209,155,212,161,247,148,226,181,245,166,120,206,158,232,94,234,90,141,8,198,239,246,97,254,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 685 ") {
    byte_vec_t msg { 45,51,3,30 };
    byte_vec_t sig { 46,7,96,249,19,14,91,25,54,101,189,61,139,158,227,123,170,88,229,86,21,56,66,255,13,0,16,95,24,7,191,31,146,193,87,249,105,107,117,80,69,193,105,12,42,1,120,44,81,177,229,21,100,115,22,60,253,43,5,107,106,42,102,63 };
    byte_vec_t pk { 4,195,123,42,123,149,78,140,95,155,83,22,132,49,195,56,150,219,237,255,143,27,114,88,125,240,94,42,206,228,237,8,162,37,75,28,138,71,153,247,152,21,129,95,43,180,66,139,183,234,84,0,36,99,33,211,190,204,41,51,131,85,98,144,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 685 ") {
    byte_vec_t msg { 255,142,1,59 };
    byte_vec_t sig { 61,193,194,61,162,204,229,146,131,77,67,152,110,16,148,150,237,42,185,128,100,98,137,126,148,119,151,184,51,108,54,151,232,220,51,29,122,159,19,111,214,151,221,110,161,158,232,187,73,16,182,52,25,14,40,119,84,52,68,111,97,2,82,154 };
    byte_vec_t pk { 4,104,185,151,0,37,60,176,194,125,84,159,127,68,215,29,245,103,180,160,69,132,71,98,174,179,30,230,175,200,83,225,99,1,213,18,221,149,215,37,254,35,220,186,105,76,244,207,183,11,147,87,159,15,35,40,232,166,32,126,134,38,40,224,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 686 ") {
    byte_vec_t msg { 160,229,82,211 };
    byte_vec_t sig { 43,184,79,192,109,138,32,224,218,82,222,158,54,132,36,216,206,6,245,198,183,211,4,190,168,67,71,91,171,223,21,100,120,83,224,24,214,133,175,248,64,207,241,96,29,203,85,198,241,219,95,188,59,192,139,130,44,248,106,191,78,151,199,4 };
    byte_vec_t pk { 4,232,230,77,218,108,19,53,45,229,199,24,48,57,128,12,129,216,209,128,119,197,92,5,39,68,120,226,59,200,136,2,208,67,177,159,48,124,71,101,167,112,173,101,102,156,20,32,141,129,66,0,124,172,242,162,132,74,110,111,106,85,187,92,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 686 ") {
    byte_vec_t msg { 190,31,185,67 };
    byte_vec_t sig { 188,117,15,33,246,111,225,176,153,106,100,2,31,177,125,68,167,56,2,199,200,245,213,131,10,102,98,92,105,103,139,169,246,199,92,103,96,230,234,41,17,6,104,98,103,251,130,129,141,88,229,59,242,7,72,121,237,216,212,166,218,32,212,10 };
    byte_vec_t pk { 4,196,95,121,201,233,172,202,167,224,126,49,19,163,235,136,98,218,135,142,238,49,101,95,61,11,109,227,112,37,214,197,247,90,150,176,98,1,47,192,230,63,120,66,89,193,226,109,130,198,233,39,9,104,221,37,156,221,52,17,251,155,211,39,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 687 ") {
    byte_vec_t msg { 50,96,242,200 };
    byte_vec_t sig { 221,16,29,55,206,10,228,26,38,39,155,251,76,66,138,42,127,225,216,222,31,122,23,207,78,123,94,90,247,16,116,6,141,60,212,218,211,248,181,177,182,42,247,154,110,207,197,47,131,79,32,196,68,65,152,37,187,156,98,136,157,148,44,220 };
    byte_vec_t pk { 4,54,188,140,18,169,43,48,220,34,248,242,48,8,127,106,21,166,244,239,221,90,75,232,50,138,74,43,197,0,239,12,7,10,184,46,212,252,72,70,39,168,113,72,135,128,23,248,162,147,169,46,223,5,150,120,102,126,128,231,185,191,105,181,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 687 ") {
    byte_vec_t msg { 63,75,227,254 };
    byte_vec_t sig { 129,28,70,96,196,84,184,155,129,228,122,67,136,41,59,127,43,168,58,174,231,235,16,191,105,36,141,66,74,73,187,73,54,52,11,94,52,115,19,173,84,139,137,227,224,196,142,252,61,62,146,225,209,68,56,82,188,157,96,10,30,207,37,78 };
    byte_vec_t pk { 4,72,96,136,20,109,43,44,42,88,180,74,53,119,128,240,52,233,33,7,34,72,222,172,84,128,68,94,246,169,53,54,69,162,231,242,187,221,214,136,240,165,91,84,132,62,70,103,180,103,192,248,253,53,194,0,82,27,163,28,21,79,155,143,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 688 ") {
    byte_vec_t msg { 167,62,82,92 };
    byte_vec_t sig { 129,99,163,82,187,253,113,118,177,191,228,238,65,190,201,113,56,186,114,21,2,76,178,37,252,144,119,135,0,182,43,190,122,44,125,64,149,197,230,4,187,225,233,56,117,175,185,219,89,153,159,84,47,116,53,92,86,39,46,197,49,103,198,29 };
    byte_vec_t pk { 4,255,85,46,216,208,10,111,108,72,225,32,230,190,220,28,79,15,165,184,195,53,45,195,87,19,99,197,240,11,57,33,24,100,95,23,224,40,63,55,143,126,248,106,125,142,251,209,77,58,163,191,115,36,199,141,24,117,3,18,207,23,117,140,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 688 ") {
    byte_vec_t msg { 237,31,175,118 };
    byte_vec_t sig { 254,99,235,222,196,138,16,121,120,47,147,197,86,159,6,245,180,89,228,81,171,193,215,211,19,194,65,168,228,234,184,136,235,40,109,210,26,232,28,153,50,165,7,114,132,102,239,148,84,103,34,133,2,180,91,236,254,132,14,180,28,68,99,215 };
    byte_vec_t pk { 4,7,236,53,224,108,206,186,87,7,61,151,15,207,19,215,65,13,117,72,226,9,43,115,60,101,45,114,23,104,136,216,159,181,83,2,157,22,236,240,162,116,0,212,136,74,239,192,128,38,217,222,88,170,211,158,201,12,162,209,63,235,5,201,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 689 ") {
    byte_vec_t msg { 161,141,240,48 };
    byte_vec_t sig { 131,68,174,193,19,124,158,5,42,113,95,164,241,203,215,95,230,206,202,95,224,60,185,189,255,44,233,44,127,254,224,160,161,101,250,135,206,11,9,31,138,93,86,139,189,45,37,127,66,56,148,20,44,163,30,177,29,32,24,217,99,64,251,108 };
    byte_vec_t pk { 4,242,210,112,219,208,223,165,150,105,102,83,154,145,168,157,166,152,50,132,117,126,213,14,243,159,83,62,165,94,200,253,227,161,99,131,249,196,169,209,246,115,94,15,63,185,146,218,6,203,241,79,184,114,152,241,235,203,152,192,108,0,74,251,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 689 ") {
    byte_vec_t msg { 58,245,127,255 };
    byte_vec_t sig { 111,249,255,214,171,35,45,236,164,243,126,84,89,148,254,52,36,241,49,39,172,41,138,166,114,72,44,59,182,117,198,60,244,2,79,89,111,225,142,106,73,17,173,189,182,56,24,107,155,242,131,236,40,62,48,137,28,187,76,206,119,125,134,71 };
    byte_vec_t pk { 4,196,95,239,162,65,231,116,68,242,254,101,134,151,7,227,124,20,196,130,74,72,12,227,2,168,244,54,16,67,76,101,156,77,55,13,79,200,73,218,104,158,137,249,59,76,97,119,131,97,229,113,27,46,103,93,119,216,85,196,27,62,99,210,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 690 ") {
    byte_vec_t msg { 102,29,115,117 };
    byte_vec_t sig { 45,88,130,126,73,8,41,62,244,219,114,137,224,16,184,172,224,59,82,232,173,46,132,134,25,9,16,167,208,116,11,255,6,141,4,47,180,118,11,61,180,183,249,172,138,142,93,142,127,149,102,74,215,57,177,180,124,136,175,230,121,107,185,58 };
    byte_vec_t pk { 4,112,134,234,121,51,87,34,154,255,165,134,111,202,7,154,192,201,91,178,91,210,69,213,254,133,2,182,165,195,61,237,189,1,223,174,55,236,114,171,13,120,193,54,103,15,136,181,61,158,103,53,255,59,59,124,32,170,62,25,219,172,66,226,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 690 ") {
    byte_vec_t msg { 45,25,26,40 };
    byte_vec_t sig { 34,147,221,181,238,11,210,65,42,169,235,98,121,226,2,249,132,162,83,244,125,195,17,109,144,144,14,163,183,232,42,216,245,66,209,254,162,124,195,39,50,242,1,187,26,10,81,163,141,214,164,4,99,148,125,240,22,177,70,33,191,73,102,163 };
    byte_vec_t pk { 4,117,87,255,198,121,184,27,65,68,182,167,130,115,252,83,171,73,251,186,191,191,26,150,166,158,48,237,253,231,1,64,190,108,19,196,89,115,122,208,58,4,135,221,254,245,173,188,19,219,133,207,84,188,48,84,32,208,76,224,148,71,141,179,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 691 ") {
    byte_vec_t msg { 121,75,84,55 };
    byte_vec_t sig { 237,106,215,52,146,199,62,139,78,102,221,33,218,203,38,235,234,109,175,89,198,154,125,38,132,94,134,200,213,159,181,163,76,18,56,224,104,60,227,116,90,67,69,198,144,190,148,72,132,64,196,14,9,201,216,40,235,137,86,238,139,211,80,4 };
    byte_vec_t pk { 4,182,2,161,69,28,18,252,152,72,188,6,146,239,202,138,197,29,158,219,103,146,250,8,248,141,51,235,173,78,203,23,196,157,38,15,28,36,208,154,10,0,57,80,55,199,123,68,75,170,210,107,168,35,173,40,26,36,173,177,66,38,151,149,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 691 ") {
    byte_vec_t msg { 180,152,175,47 };
    byte_vec_t sig { 87,41,143,23,40,144,217,10,169,143,135,3,81,79,190,188,31,209,191,127,12,171,172,99,191,120,255,232,67,201,165,14,0,223,226,4,132,185,65,30,47,124,179,31,5,69,37,144,18,78,52,145,201,134,227,15,205,211,128,30,57,141,3,167 };
    byte_vec_t pk { 4,116,236,141,79,224,97,171,159,119,31,11,106,241,220,165,157,67,113,190,38,65,2,28,45,43,245,139,237,91,138,120,44,21,195,178,192,31,185,53,179,53,38,53,90,28,157,32,243,148,106,9,42,215,222,5,145,123,202,200,235,222,66,204,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 692 ") {
    byte_vec_t msg { 229,60,199,90 };
    byte_vec_t sig { 162,38,180,190,168,88,65,87,137,22,101,112,20,35,215,89,8,204,163,151,203,7,210,67,13,138,42,137,246,224,166,127,252,218,213,191,63,179,19,146,189,244,225,7,30,232,185,203,162,206,62,15,114,28,112,60,116,200,43,8,194,207,208,244 };
    byte_vec_t pk { 4,254,58,222,50,66,125,210,147,74,70,68,199,202,197,42,115,169,143,192,159,54,60,27,155,232,211,254,250,217,186,141,221,13,64,167,59,33,170,75,117,113,121,23,201,194,239,22,149,51,222,10,175,246,37,136,121,21,48,224,135,135,79,93,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 692 ") {
    byte_vec_t msg { 143,197,147,76 };
    byte_vec_t sig { 86,213,65,53,229,190,115,12,55,104,173,240,41,165,242,113,137,154,218,131,99,253,96,194,54,42,135,155,24,127,189,61,13,135,14,250,216,91,245,228,3,48,5,86,121,18,183,91,249,88,209,221,192,157,150,228,186,144,44,242,68,100,231,105 };
    byte_vec_t pk { 4,133,99,136,5,95,165,16,235,150,150,55,159,90,4,239,146,53,50,74,17,239,175,165,250,94,42,168,198,61,222,236,178,2,74,29,84,238,192,181,84,28,119,39,232,100,154,190,42,205,240,6,40,22,39,212,196,198,190,132,69,104,23,4,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 693 ") {
    byte_vec_t msg { 79,17,48,168 };
    byte_vec_t sig { 30,255,59,151,248,117,12,175,40,225,17,111,245,10,99,245,165,12,156,61,86,63,193,208,82,119,234,50,215,73,91,113,98,248,22,18,42,202,85,43,156,140,117,199,152,103,166,106,22,78,150,28,97,248,131,7,130,114,210,4,242,4,134,29 };
    byte_vec_t pk { 4,167,44,76,139,246,189,40,115,236,35,229,195,15,51,206,134,79,189,233,103,231,75,75,71,175,89,238,53,191,203,194,30,91,31,153,251,229,17,0,28,21,74,116,252,32,2,207,85,208,21,249,33,47,224,227,223,95,13,198,146,162,20,230,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 693 ") {
    byte_vec_t msg { 238,157,251,122 };
    byte_vec_t sig { 7,184,155,44,75,44,41,35,81,33,153,109,50,243,131,5,12,94,38,233,35,48,150,7,243,190,99,204,216,8,192,234,135,115,229,175,231,235,218,255,216,166,27,155,220,11,111,210,174,216,56,95,148,32,134,85,105,32,117,229,185,111,57,170 };
    byte_vec_t pk { 4,239,182,209,181,141,116,56,200,56,220,80,10,242,48,178,15,131,174,185,66,29,50,182,109,52,173,246,118,230,93,8,12,88,105,40,207,97,244,253,228,15,58,26,122,194,141,249,124,198,199,157,224,16,91,219,12,29,3,101,8,240,194,1,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 694 ") {
    byte_vec_t msg { 19,134,188,41 };
    byte_vec_t sig { 157,145,122,151,224,188,10,35,10,119,170,211,16,42,193,17,152,85,43,142,218,61,185,99,93,84,52,211,77,156,45,70,136,20,161,42,160,170,28,84,87,33,61,59,83,42,225,173,148,45,194,61,122,6,91,172,5,123,46,123,237,231,97,192 };
    byte_vec_t pk { 4,147,174,116,196,2,198,227,182,126,9,29,142,233,214,48,194,176,23,123,100,46,191,59,40,80,75,133,102,175,51,129,241,196,176,152,186,185,41,151,210,49,236,107,158,155,111,167,13,216,195,36,44,184,70,232,237,15,126,106,171,161,75,255,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 694 ") {
    byte_vec_t msg { 84,81,238,205 };
    byte_vec_t sig { 185,222,173,177,21,228,69,100,79,8,114,182,237,90,141,54,45,147,170,43,39,159,17,56,30,186,149,183,63,135,17,105,197,172,66,252,40,168,197,204,205,244,166,153,220,112,153,111,221,212,164,239,93,9,201,244,86,194,130,98,128,189,154,190 };
    byte_vec_t pk { 4,170,141,27,200,23,57,120,45,96,225,234,3,116,149,227,39,47,178,68,84,238,215,156,25,17,164,3,196,178,123,251,82,82,26,90,234,147,222,124,248,152,171,18,8,182,162,82,237,24,73,107,169,108,171,26,122,145,149,43,145,175,113,0,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 695 ") {
    byte_vec_t msg { 189,88,236,125 };
    byte_vec_t sig { 200,28,214,189,196,49,105,107,249,252,70,120,126,191,177,145,154,81,12,80,134,76,228,20,161,235,225,251,110,92,134,244,105,138,20,135,8,111,56,28,207,238,125,0,119,13,205,54,172,4,134,176,235,189,95,19,201,115,23,229,217,118,83,156 };
    byte_vec_t pk { 4,88,202,253,82,46,6,142,1,165,147,190,76,196,82,123,2,201,198,241,5,52,18,216,201,7,11,27,6,59,169,43,236,108,179,216,2,133,114,41,149,141,15,77,168,145,245,255,183,7,5,128,66,71,49,1,55,33,219,79,188,54,239,76,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 695 ") {
    byte_vec_t msg { 2,196,162,140 };
    byte_vec_t sig { 87,248,125,50,91,206,181,162,131,111,208,217,240,30,146,186,42,143,187,115,162,36,20,231,251,22,59,51,68,16,248,23,4,178,254,197,106,191,102,198,27,33,153,105,127,80,154,165,142,119,227,27,147,47,169,242,13,28,211,177,107,186,75,44 };
    byte_vec_t pk { 4,66,140,207,107,80,2,105,255,50,150,196,142,182,111,61,222,217,126,8,141,225,116,185,173,14,45,195,187,163,61,117,62,212,187,253,67,174,85,6,184,56,67,114,93,38,106,40,60,219,20,124,155,101,179,45,5,97,92,228,30,31,252,79,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 696 ") {
    byte_vec_t msg { 121,52,142,232 };
    byte_vec_t sig { 92,156,26,140,6,203,102,159,202,220,209,157,1,82,9,19,147,221,186,226,253,33,78,174,166,92,107,39,204,82,143,107,48,142,162,178,220,181,112,193,238,153,122,153,139,4,40,148,123,251,147,41,111,44,80,75,63,87,80,155,222,50,203,87 };
    byte_vec_t pk { 4,19,202,128,168,248,137,5,225,118,29,82,209,96,80,23,193,84,9,157,128,32,247,122,18,61,49,204,194,243,181,140,28,8,255,197,41,216,72,60,1,173,32,12,105,151,114,45,82,10,64,59,187,168,46,123,187,122,96,167,183,170,10,200,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 696 ") {
    byte_vec_t msg { 72,138,103,17 };
    byte_vec_t sig { 135,163,218,222,145,65,42,161,143,102,233,111,15,92,53,127,110,168,184,59,187,66,139,115,13,210,21,124,157,43,50,191,242,220,109,10,6,115,6,17,150,216,254,250,243,98,31,6,132,126,77,115,62,197,131,47,60,187,187,121,11,21,225,183 };
    byte_vec_t pk { 4,107,74,60,238,12,219,38,156,94,251,55,41,52,230,195,46,49,49,96,220,182,41,92,255,111,105,16,57,223,39,116,56,137,96,150,158,166,106,164,48,225,80,187,95,87,175,124,151,28,103,71,114,254,90,22,172,154,97,249,177,116,196,4,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 697 ") {
    byte_vec_t msg { 84,244,23,144 };
    byte_vec_t sig { 187,142,56,228,50,168,231,159,181,236,249,176,116,110,217,185,62,217,4,249,254,234,15,188,196,106,56,70,238,66,149,163,182,61,48,33,9,150,235,92,87,114,186,215,81,107,204,220,97,151,63,73,38,216,209,59,49,181,193,197,13,200,47,205 };
    byte_vec_t pk { 4,61,39,0,255,50,60,208,222,196,80,140,122,241,236,24,92,58,189,74,47,186,254,236,101,232,234,113,51,164,250,165,253,24,200,244,115,217,194,36,61,70,91,61,166,173,176,232,99,90,152,66,79,20,23,19,164,151,81,113,206,30,40,107,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 697 ") {
    byte_vec_t msg { 130,243,130,74 };
    byte_vec_t sig { 80,180,120,238,243,218,47,154,11,124,130,112,188,86,184,67,46,124,175,205,228,43,34,57,1,17,91,161,232,25,85,86,45,10,161,55,78,6,196,140,176,171,33,15,35,192,121,43,21,134,228,59,160,222,47,37,35,105,151,211,0,110,249,7 };
    byte_vec_t pk { 4,54,74,161,55,116,151,131,161,18,59,105,6,32,171,250,13,121,111,207,111,88,169,194,10,203,154,43,152,165,15,68,139,163,152,120,44,78,67,44,116,67,104,175,153,60,188,42,167,61,104,102,246,33,190,31,122,112,28,13,176,178,100,63,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 698 ") {
    byte_vec_t msg { 158,175,223,9 };
    byte_vec_t sig { 97,42,95,169,238,150,156,187,93,138,98,15,153,250,181,241,129,15,211,247,175,122,250,145,160,254,4,124,254,242,42,223,165,200,247,22,30,141,188,7,100,169,41,202,226,119,19,78,230,165,192,226,114,179,131,112,54,12,57,128,214,134,120,175 };
    byte_vec_t pk { 4,38,200,36,81,178,29,0,120,54,243,17,53,129,105,108,162,225,186,140,161,130,116,167,184,153,67,35,137,13,80,164,21,169,45,251,167,245,160,251,218,198,72,0,210,83,49,64,4,135,30,204,217,157,189,58,122,254,230,98,67,44,44,252,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 698 ") {
    byte_vec_t msg { 100,120,192,141 };
    byte_vec_t sig { 158,136,158,39,151,150,44,41,161,141,49,5,237,229,77,18,124,112,246,174,219,115,24,26,178,117,129,143,133,155,123,12,192,142,40,124,178,240,114,182,115,214,195,42,241,11,232,128,94,140,14,76,73,133,180,203,211,58,131,139,116,199,253,57 };
    byte_vec_t pk { 4,224,250,229,35,166,147,183,73,42,133,187,224,149,26,115,226,122,30,199,188,79,247,96,109,121,179,90,242,51,25,214,130,86,19,211,169,216,153,29,233,129,91,2,127,188,207,37,78,209,94,61,12,186,51,52,27,225,176,80,129,13,197,181,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 699 ") {
    byte_vec_t msg { 53,100,38,184 };
    byte_vec_t sig { 76,176,109,91,189,186,60,174,63,147,162,100,225,4,231,5,202,42,30,252,12,103,234,106,121,84,201,21,238,44,249,220,177,173,252,39,180,56,73,45,172,219,183,76,185,20,120,173,99,86,239,217,199,246,212,62,79,178,229,67,229,8,89,109 };
    byte_vec_t pk { 4,215,251,121,207,171,47,202,84,110,113,141,175,181,94,70,113,44,195,162,245,169,224,5,4,49,23,226,191,38,36,191,46,101,204,81,3,102,134,247,55,39,140,40,122,95,173,161,32,1,61,156,133,16,89,161,185,161,73,136,30,152,222,61,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 699 ") {
    byte_vec_t msg { 140,81,101,50 };
    byte_vec_t sig { 128,19,187,96,28,233,131,82,142,57,245,101,246,123,139,197,118,7,164,249,80,214,100,202,246,125,120,36,38,48,208,28,79,148,121,31,98,70,24,135,107,152,180,119,11,222,9,192,154,14,188,150,173,17,77,68,109,201,209,110,42,185,157,156 };
    byte_vec_t pk { 4,30,178,145,15,5,178,84,87,116,151,242,168,5,45,56,105,240,132,183,252,84,211,29,46,106,38,182,210,9,26,194,202,128,105,191,164,230,84,63,224,128,34,41,63,171,124,92,163,255,26,87,79,251,150,11,228,187,82,246,223,196,158,153,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 700 ") {
    byte_vec_t msg { 247,123,146,236 };
    byte_vec_t sig { 204,140,239,68,231,17,84,130,149,128,127,2,38,245,250,196,188,114,187,23,8,183,117,38,119,15,222,165,193,209,8,147,103,220,41,2,49,243,76,64,86,150,152,183,78,215,107,118,163,110,193,244,18,193,131,70,4,147,209,27,111,13,77,169 };
    byte_vec_t pk { 4,135,43,65,176,29,133,24,168,247,105,31,225,57,61,56,229,64,142,68,153,106,192,102,116,63,139,75,159,172,47,114,196,69,229,241,129,227,148,105,83,48,31,16,47,236,123,154,113,51,22,124,180,238,97,188,202,147,15,224,162,151,198,69,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 700 ") {
    byte_vec_t msg { 209,220,200,11 };
    byte_vec_t sig { 234,165,224,102,174,213,102,112,218,71,45,122,30,218,108,81,219,26,191,193,162,128,214,69,150,192,42,98,197,98,185,234,62,100,134,63,183,220,129,151,23,15,206,213,150,20,107,94,154,141,212,143,223,238,160,212,76,254,150,18,86,177,159,168 };
    byte_vec_t pk { 4,12,46,40,163,105,154,49,68,62,240,68,51,219,58,31,0,244,80,230,239,11,244,162,92,19,88,61,7,242,233,136,35,163,155,24,115,130,243,169,228,108,45,165,231,182,178,10,137,14,102,23,56,3,129,116,54,237,196,58,160,111,48,209,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 701 ") {
    byte_vec_t msg { 26,159,3,104 };
    byte_vec_t sig { 16,167,72,61,136,172,106,84,60,52,211,22,175,64,241,255,71,233,142,24,46,47,130,175,210,191,204,22,230,55,22,89,167,193,79,53,63,20,182,232,144,76,108,123,105,192,147,23,176,179,208,206,39,180,86,252,19,52,190,74,126,164,147,241 };
    byte_vec_t pk { 4,155,156,158,176,11,76,196,9,125,121,109,112,48,244,15,219,28,141,129,116,140,20,82,132,143,205,211,67,213,57,39,163,183,217,94,21,20,156,203,142,118,28,208,114,132,137,112,230,170,147,213,51,251,233,105,237,230,246,66,27,187,190,98,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 701 ") {
    byte_vec_t msg { 235,0,204,172 };
    byte_vec_t sig { 247,99,241,58,128,170,10,187,20,182,179,16,98,83,204,213,219,21,178,207,77,235,2,19,63,178,80,21,106,16,180,94,193,31,207,77,76,248,183,196,173,252,79,121,221,80,170,41,237,194,19,130,179,130,24,147,173,239,4,216,57,168,181,159 };
    byte_vec_t pk { 4,100,17,164,149,195,180,73,38,247,44,203,211,29,193,101,192,232,143,158,252,111,50,150,38,9,42,197,97,14,169,217,30,191,227,215,177,119,3,231,239,116,132,157,162,175,50,177,189,22,18,44,91,45,196,89,23,74,61,129,186,179,139,201,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 702 ") {
    byte_vec_t msg { 213,218,171,68 };
    byte_vec_t sig { 173,18,160,27,212,33,248,149,171,46,234,158,250,1,91,154,6,46,6,109,44,209,20,7,183,133,148,110,29,92,132,214,80,167,210,152,6,85,132,225,103,113,250,118,18,203,228,85,37,231,65,145,209,196,198,35,170,155,216,195,252,187,175,24 };
    byte_vec_t pk { 4,50,244,2,241,96,15,45,77,170,138,108,140,185,151,78,91,102,252,42,44,170,155,9,162,209,31,67,249,0,23,123,0,2,220,169,219,182,144,77,151,180,152,154,58,30,213,197,150,138,125,147,130,93,50,203,163,128,150,241,150,84,219,54,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 702 ") {
    byte_vec_t msg { 246,234,248,58 };
    byte_vec_t sig { 99,98,134,97,83,122,247,220,139,42,135,147,190,38,247,202,79,137,100,228,160,159,194,70,173,178,8,240,69,243,160,241,168,11,48,96,198,225,232,34,227,48,208,15,209,7,107,117,4,168,174,79,130,13,89,39,2,86,184,46,52,120,233,235 };
    byte_vec_t pk { 4,152,37,240,236,198,135,189,79,32,125,243,65,39,79,32,192,101,86,136,236,252,21,139,215,154,25,43,245,216,20,234,150,241,38,234,247,81,112,69,160,59,51,23,52,1,41,40,80,146,26,179,137,76,226,238,199,126,198,88,69,226,44,88,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 703 ") {
    byte_vec_t msg { 56,87,223,128 };
    byte_vec_t sig { 101,164,167,20,27,11,229,82,225,232,46,156,250,197,237,168,209,77,88,158,31,36,87,65,226,133,17,63,110,228,130,212,11,191,187,26,211,51,25,170,63,249,163,35,198,60,33,47,4,159,1,151,22,132,84,77,20,184,49,145,221,57,226,8 };
    byte_vec_t pk { 4,93,12,153,156,43,231,52,68,116,187,241,218,60,198,121,32,136,110,107,49,119,62,250,235,52,70,12,147,62,122,228,242,221,133,31,91,12,13,128,134,163,28,40,204,203,84,246,190,201,9,3,42,245,157,82,232,79,29,203,161,109,95,96,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 703 ") {
    byte_vec_t msg { 213,76,216,182 };
    byte_vec_t sig { 10,175,117,55,42,89,116,212,134,31,207,150,164,149,115,119,95,156,40,194,162,170,26,28,252,39,202,19,249,122,60,113,229,253,28,138,52,82,7,193,212,37,197,196,106,68,138,118,101,205,176,97,38,115,120,219,45,178,79,179,89,12,106,48 };
    byte_vec_t pk { 4,73,160,62,158,245,156,187,228,56,192,183,24,212,236,50,250,243,100,134,21,91,98,243,131,67,172,151,184,160,7,227,22,143,172,74,230,69,85,20,98,190,102,217,21,158,59,80,236,5,13,209,243,156,141,122,255,28,134,199,26,215,143,12,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 704 ") {
    byte_vec_t msg { 38,247,123,133 };
    byte_vec_t sig { 17,97,222,240,39,105,246,156,163,90,191,157,149,232,8,211,104,81,187,87,120,63,98,98,217,140,9,128,65,101,36,228,83,4,3,102,162,221,123,100,113,100,136,77,146,192,106,145,42,184,25,26,36,218,21,109,141,112,50,57,255,105,77,167 };
    byte_vec_t pk { 4,105,247,219,115,171,39,186,170,40,146,148,112,191,1,91,162,149,144,86,183,108,197,39,162,154,62,192,73,200,120,121,237,5,230,42,113,41,130,155,18,127,87,157,111,80,223,74,236,206,64,95,194,21,8,207,72,244,14,5,223,203,204,188,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 704 ") {
    byte_vec_t msg { 89,201,101,177 };
    byte_vec_t sig { 58,102,136,82,134,237,56,49,237,102,65,191,111,238,5,17,51,176,192,211,98,63,57,153,51,61,167,147,93,153,107,82,171,75,69,184,115,43,125,230,188,136,131,19,119,130,149,106,209,129,46,17,179,150,206,247,203,203,176,19,133,110,148,196 };
    byte_vec_t pk { 4,143,191,28,38,239,48,62,132,133,0,245,208,17,176,175,29,192,80,164,192,108,35,152,194,32,8,109,22,145,91,121,126,2,195,142,250,53,247,176,8,94,238,39,240,86,80,30,6,160,255,126,140,132,137,56,244,84,250,254,242,76,230,55,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 705 ") {
    byte_vec_t msg { 91,119,138,86 };
    byte_vec_t sig { 29,34,202,98,157,233,157,254,221,57,5,108,108,13,15,24,174,14,20,130,36,25,232,253,53,252,118,46,168,151,28,229,209,157,231,247,86,38,58,123,16,166,227,112,142,143,184,17,242,49,194,154,186,38,53,11,152,18,163,53,142,132,155,69 };
    byte_vec_t pk { 4,51,234,240,102,252,240,29,216,176,17,13,77,186,111,137,16,199,118,104,105,116,102,229,179,152,77,220,40,206,135,36,12,176,215,23,195,59,43,146,175,73,249,216,235,178,63,169,128,96,217,82,158,149,210,90,179,56,186,221,91,134,110,151,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 705 ") {
    byte_vec_t msg { 31,86,122,144 };
    byte_vec_t sig { 120,138,111,90,120,244,160,188,143,252,133,88,137,251,242,88,99,176,78,244,240,4,30,96,134,40,36,74,173,165,145,68,171,61,89,101,230,221,248,75,171,174,125,82,201,86,139,186,175,66,202,241,217,151,43,233,186,88,101,88,108,147,210,73 };
    byte_vec_t pk { 4,2,4,28,217,230,194,68,148,104,200,90,208,21,63,195,80,218,68,186,48,68,41,102,52,19,60,145,252,14,28,186,172,8,107,4,4,49,180,6,133,70,40,195,177,105,112,201,31,112,254,27,73,190,86,239,64,60,248,42,247,118,188,211,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 706 ") {
    byte_vec_t msg { 189,28,153,65 };
    byte_vec_t sig { 98,200,114,69,71,104,182,194,25,82,44,134,88,218,28,198,112,101,237,95,13,97,21,89,225,252,159,4,99,51,121,210,74,212,86,174,143,144,33,188,178,130,201,196,132,89,238,36,39,100,82,140,215,57,122,41,39,19,119,234,190,232,235,174 };
    byte_vec_t pk { 4,86,77,152,19,254,6,156,77,166,189,171,221,126,119,79,122,12,215,85,243,245,89,255,216,4,132,154,70,88,223,5,182,182,105,171,240,148,58,171,166,128,138,238,129,113,190,57,207,14,157,32,115,29,202,234,147,233,66,205,64,72,249,23,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 706 ") {
    byte_vec_t msg { 10,219,85,231 };
    byte_vec_t sig { 224,123,68,166,35,107,131,131,215,109,211,178,19,123,206,74,160,233,120,234,112,13,55,224,154,125,0,59,235,1,195,57,108,62,32,40,178,164,168,231,6,73,103,229,157,196,88,200,38,136,225,226,136,125,25,62,165,226,252,95,130,47,133,93 };
    byte_vec_t pk { 4,144,175,103,113,248,180,27,198,218,147,21,215,80,106,67,90,102,58,184,244,255,114,154,12,31,109,44,31,207,95,66,132,226,156,197,175,195,49,73,35,44,133,83,6,125,107,17,85,155,19,198,253,237,37,176,182,84,248,9,4,55,136,234,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 707 ") {
    byte_vec_t msg { 187,228,214,104 };
    byte_vec_t sig { 8,128,48,230,90,87,156,107,73,66,238,93,232,240,90,111,219,158,21,123,225,104,9,111,104,219,26,96,100,238,40,183,207,66,24,29,74,212,212,176,218,19,255,78,127,133,190,5,91,20,171,65,183,4,5,107,246,205,140,45,29,9,196,69 };
    byte_vec_t pk { 4,34,69,123,253,86,76,196,180,118,144,88,117,10,144,7,208,137,191,5,3,22,103,175,34,142,64,173,25,181,209,227,3,240,158,7,199,192,162,144,25,88,23,114,189,182,169,76,20,67,64,244,209,182,192,45,138,153,66,134,161,107,177,154,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 707 ") {
    byte_vec_t msg { 102,152,129,5 };
    byte_vec_t sig { 62,219,168,142,204,24,193,39,241,109,108,36,1,151,163,150,145,221,108,243,156,28,62,169,200,92,174,50,215,236,154,237,109,166,89,60,6,133,211,17,227,220,128,233,120,165,54,85,204,170,133,125,122,108,15,236,24,196,128,64,26,12,241,228 };
    byte_vec_t pk { 4,205,101,133,13,180,189,78,27,186,76,126,35,181,91,114,19,245,233,218,211,74,60,45,149,73,180,70,25,205,117,14,4,97,102,71,140,178,242,103,239,199,91,142,125,204,64,61,151,96,183,19,36,82,242,3,143,238,59,64,20,26,28,43,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 708 ") {
    byte_vec_t msg { 185,134,25,90 };
    byte_vec_t sig { 161,94,20,111,230,57,211,69,171,5,193,36,2,76,167,135,125,40,42,131,198,216,196,158,156,217,201,166,237,239,252,212,253,193,230,36,8,164,24,29,127,255,26,86,65,171,33,45,27,207,156,52,126,120,144,206,99,177,26,232,161,70,52,130 };
    byte_vec_t pk { 4,77,35,47,172,173,209,137,184,45,207,167,34,16,215,174,218,105,128,88,60,218,151,71,196,231,49,17,96,25,34,146,112,239,3,158,45,213,137,41,125,80,96,61,23,73,172,84,252,220,228,176,154,195,177,200,168,72,54,28,32,227,60,113,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 708 ") {
    byte_vec_t msg { 100,60,253,209 };
    byte_vec_t sig { 63,35,25,205,157,26,59,74,181,153,3,89,74,26,52,145,72,39,173,213,238,120,132,90,29,16,56,57,188,44,7,151,61,118,213,47,101,244,16,170,162,235,115,98,178,237,247,159,24,92,73,32,201,123,56,87,93,151,30,212,3,203,180,39 };
    byte_vec_t pk { 4,220,43,156,98,155,24,142,175,130,21,51,206,226,201,5,231,58,187,93,224,196,50,55,103,129,169,151,121,5,207,112,55,139,194,129,122,212,173,167,181,113,49,174,23,73,223,198,132,40,6,35,76,8,233,232,17,106,80,53,231,194,39,70,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 709 ") {
    byte_vec_t msg { 116,147,199,130 };
    byte_vec_t sig { 246,173,86,49,97,126,151,172,195,173,13,80,42,138,164,31,44,174,41,192,150,224,109,111,107,142,42,171,104,194,116,18,34,40,91,120,122,103,91,250,77,236,249,189,88,4,10,13,178,216,151,9,80,238,228,35,55,225,100,163,249,150,93,18 };
    byte_vec_t pk { 4,61,147,3,45,106,76,83,196,146,22,52,162,139,80,146,204,79,166,10,102,126,69,96,92,245,234,167,86,123,81,74,0,59,36,127,85,78,163,107,204,63,80,49,224,115,35,249,183,60,114,210,249,86,20,67,4,197,127,228,168,98,6,237,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 709 ") {
    byte_vec_t msg { 198,10,4,6 };
    byte_vec_t sig { 206,251,238,187,63,58,91,133,49,158,69,166,235,194,132,187,130,39,148,205,3,80,128,149,48,225,99,169,74,250,53,223,208,196,180,71,151,5,81,57,188,32,37,34,247,122,154,140,83,195,194,47,39,9,116,209,236,155,166,169,45,26,75,240 };
    byte_vec_t pk { 4,85,232,36,96,17,183,110,25,169,68,234,10,238,133,141,242,228,235,215,226,82,114,184,1,8,23,254,69,146,190,181,7,216,7,4,254,13,213,192,53,100,206,31,123,168,156,43,49,47,253,131,185,180,236,183,168,148,250,13,7,47,204,148,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 710 ") {
    byte_vec_t msg { 86,74,233,79 };
    byte_vec_t sig { 5,166,197,125,240,13,236,5,83,122,204,208,204,247,103,205,246,24,99,108,118,176,153,168,17,185,112,11,48,30,5,129,70,220,32,162,182,17,29,47,133,211,225,94,38,113,1,219,32,5,49,106,184,254,76,184,19,144,7,137,179,125,90,240 };
    byte_vec_t pk { 4,119,203,6,183,184,63,50,55,170,9,165,45,175,15,37,110,173,218,239,8,141,124,45,234,238,172,134,38,109,197,136,114,111,129,194,33,85,138,94,153,155,209,74,101,235,200,172,139,104,111,77,197,110,26,211,205,33,131,33,222,186,78,74,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 710 ") {
    byte_vec_t msg { 168,175,146,32 };
    byte_vec_t sig { 159,48,207,94,148,217,95,148,140,145,83,51,245,133,15,222,227,79,242,130,169,151,195,142,74,43,159,238,7,200,226,123,219,206,224,208,229,90,98,99,65,157,249,188,111,230,224,85,91,235,227,31,36,209,115,152,205,14,200,40,87,182,152,134 };
    byte_vec_t pk { 4,184,183,19,199,172,114,48,185,176,80,47,239,173,187,209,0,131,142,194,50,142,28,136,196,20,10,197,135,45,81,195,211,74,188,102,148,204,181,97,84,38,166,31,226,40,105,217,151,98,100,231,145,216,103,246,2,199,217,176,114,83,193,114,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 711 ") {
    byte_vec_t msg { 73,130,235,20 };
    byte_vec_t sig { 108,190,50,87,65,12,186,76,133,83,27,85,61,141,36,158,71,47,121,152,226,116,128,121,146,88,218,255,147,154,154,110,253,136,106,126,183,50,215,33,214,102,75,226,183,41,240,151,115,147,239,176,100,144,21,43,253,191,184,200,230,28,97,160 };
    byte_vec_t pk { 4,99,85,122,37,102,114,250,201,214,213,243,151,180,33,246,45,223,201,68,48,197,56,132,59,94,152,36,244,148,170,33,172,99,104,41,236,132,63,232,24,2,54,76,21,51,41,186,6,134,105,214,38,134,99,62,193,148,51,65,168,251,9,125,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 711 ") {
    byte_vec_t msg { 175,199,227,219 };
    byte_vec_t sig { 79,126,5,128,191,79,47,191,62,203,92,252,136,255,221,115,175,249,13,100,44,25,29,119,135,21,211,201,254,155,157,194,27,39,124,49,175,116,106,17,165,226,2,186,189,53,238,104,159,49,121,22,11,154,152,16,30,103,100,101,190,133,173,50 };
    byte_vec_t pk { 4,207,158,5,119,42,173,192,59,94,50,251,199,54,233,231,211,234,201,183,37,153,187,98,235,17,47,247,44,168,60,24,229,7,91,130,9,80,177,59,49,240,174,146,171,254,27,172,149,48,143,226,141,66,68,83,106,235,61,14,120,27,152,81,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 712 ") {
    byte_vec_t msg { 57,150,80,166 };
    byte_vec_t sig { 182,255,157,91,203,243,186,15,128,108,161,188,45,103,142,131,46,67,248,88,55,251,239,254,195,24,2,181,26,248,161,246,192,248,199,86,180,165,139,37,135,183,164,230,134,130,141,89,46,149,162,11,194,54,58,45,227,72,243,233,5,230,254,132 };
    byte_vec_t pk { 4,121,190,214,48,188,114,77,221,234,193,62,231,121,246,49,44,251,6,125,247,91,20,142,18,55,199,198,22,194,179,182,14,216,232,100,234,58,2,147,32,138,155,155,124,88,51,173,110,183,47,16,1,212,180,30,198,75,28,229,75,51,127,144,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 712 ") {
    byte_vec_t msg { 130,113,34,74 };
    byte_vec_t sig { 213,25,213,13,254,41,210,188,79,36,239,57,147,7,64,193,241,85,233,46,161,20,165,142,72,13,102,67,71,233,163,103,50,213,191,74,189,8,225,112,77,117,165,137,208,217,17,240,138,145,37,91,92,248,80,254,185,44,153,181,203,56,39,213 };
    byte_vec_t pk { 4,71,153,126,17,30,135,229,42,243,237,71,83,74,136,74,88,113,176,88,67,143,235,131,99,69,123,30,72,15,205,84,118,183,7,186,193,166,140,222,99,62,222,78,158,94,243,254,84,108,208,150,190,229,49,179,45,25,90,110,64,59,62,116,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 713 ") {
    byte_vec_t msg { 222,103,92,207 };
    byte_vec_t sig { 152,197,110,95,254,1,27,166,142,68,228,187,43,82,212,142,53,239,101,234,79,199,9,95,232,206,232,236,23,56,189,1,46,225,53,67,2,13,167,113,224,99,186,124,164,157,179,128,196,149,157,222,155,78,123,32,52,76,52,55,85,241,107,222 };
    byte_vec_t pk { 4,110,102,189,60,243,254,66,235,173,2,208,221,7,73,162,141,96,236,151,35,132,114,244,44,141,13,249,194,99,73,128,177,190,98,124,175,92,42,207,212,34,214,115,121,6,42,194,249,240,156,214,191,242,218,58,112,210,99,226,118,89,188,68,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 713 ") {
    byte_vec_t msg { 18,254,69,107 };
    byte_vec_t sig { 4,187,25,76,215,212,109,204,235,83,103,214,70,160,66,173,32,215,55,255,193,249,28,224,162,133,234,138,240,109,70,162,163,98,14,82,56,23,166,80,151,147,159,178,149,131,143,3,161,56,233,193,73,73,53,41,103,241,154,109,118,11,44,231 };
    byte_vec_t pk { 4,108,179,201,27,78,39,192,9,155,191,1,123,150,102,189,37,97,57,71,102,153,227,6,81,239,212,157,8,53,226,78,118,172,88,60,196,102,2,80,149,40,212,94,234,15,140,63,79,245,13,167,228,66,150,216,247,91,168,204,1,24,153,154,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 714 ") {
    byte_vec_t msg { 23,74,93,113 };
    byte_vec_t sig { 146,203,54,153,50,51,13,36,144,242,181,167,190,220,250,176,157,110,154,93,30,195,7,123,201,76,32,216,62,60,97,125,148,6,170,82,37,134,166,177,212,247,9,220,86,130,5,101,147,44,87,111,245,230,237,73,167,63,171,237,111,197,106,58 };
    byte_vec_t pk { 4,139,248,149,199,7,2,38,0,84,116,53,248,252,92,50,114,147,7,174,132,245,39,198,54,174,33,117,189,0,55,92,160,232,180,148,18,167,151,129,101,61,112,157,177,105,6,96,222,241,155,5,33,192,239,157,215,249,85,146,76,45,185,122,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 714 ") {
    byte_vec_t msg { 176,206,55,167 };
    byte_vec_t sig { 76,246,25,135,208,212,66,61,142,137,219,108,165,18,221,162,248,103,45,70,199,208,91,237,224,133,97,221,214,173,143,143,59,78,192,93,46,4,242,127,153,160,20,160,29,82,51,102,101,189,132,10,240,255,198,132,142,136,214,25,53,53,11,58 };
    byte_vec_t pk { 4,105,13,56,59,161,137,187,3,130,116,79,216,229,166,88,101,205,7,101,197,180,157,66,76,156,17,185,33,167,22,151,250,54,121,199,130,4,237,167,168,249,40,145,211,225,221,32,132,173,226,24,52,222,21,54,97,162,255,253,111,177,22,199,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 715 ") {
    byte_vec_t msg { 31,113,96,251 };
    byte_vec_t sig { 184,166,34,93,86,147,239,26,219,21,174,217,0,113,64,252,162,198,199,54,123,203,138,113,136,119,132,180,0,16,154,221,30,142,248,226,191,160,155,25,205,182,57,254,178,4,89,250,59,213,65,146,106,103,72,230,15,178,224,36,122,98,241,149 };
    byte_vec_t pk { 4,203,170,73,123,7,20,244,145,250,32,11,134,231,91,138,252,202,115,14,88,120,227,84,118,8,92,203,253,56,186,154,229,188,147,170,157,201,253,56,237,152,154,230,152,194,60,222,114,219,116,3,203,157,142,247,12,152,58,97,248,208,207,250,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 715 ") {
    byte_vec_t msg { 154,244,51,238 };
    byte_vec_t sig { 133,53,134,167,100,193,79,163,72,167,196,83,63,94,23,53,112,3,26,71,70,58,112,172,120,114,222,204,237,148,52,91,45,93,220,205,225,127,175,109,215,249,45,218,25,176,119,186,64,92,205,78,27,12,58,29,36,123,5,133,141,128,109,148 };
    byte_vec_t pk { 4,195,96,123,71,179,100,161,235,51,223,253,83,34,248,174,3,174,58,163,77,248,114,189,118,60,228,108,163,252,201,135,189,65,97,34,0,54,28,159,122,103,79,163,179,47,200,188,138,77,89,58,12,115,155,174,58,59,52,132,24,188,238,38,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 716 ") {
    byte_vec_t msg { 55,226,173,246 };
    byte_vec_t sig { 218,86,232,129,27,139,83,37,48,135,99,101,28,155,158,228,158,146,225,15,64,80,138,173,204,231,78,36,2,179,231,214,69,54,241,231,231,218,156,144,215,222,180,239,111,124,123,234,50,73,75,10,5,220,211,126,31,52,142,248,119,44,71,78 };
    byte_vec_t pk { 4,133,79,61,169,98,83,14,110,10,248,130,2,120,225,1,92,158,131,38,32,21,94,113,29,108,22,215,115,172,190,152,42,234,149,166,35,14,178,245,0,148,80,242,14,145,91,101,62,252,52,132,17,192,167,231,160,17,159,131,191,253,69,196,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 716 ") {
    byte_vec_t msg { 29,2,106,6 };
    byte_vec_t sig { 233,233,99,239,57,140,135,30,190,1,139,212,96,39,110,220,215,210,227,191,116,215,7,46,143,79,211,160,106,119,14,5,119,101,92,181,45,143,76,147,5,216,45,226,101,54,233,162,73,2,114,184,228,92,72,188,34,179,54,10,68,82,76,123 };
    byte_vec_t pk { 4,17,243,170,38,83,198,154,0,134,153,8,161,240,239,54,165,196,98,33,195,57,115,28,244,138,200,0,62,76,180,179,51,187,231,52,254,91,210,198,246,212,224,82,163,242,7,11,13,47,24,24,56,139,142,90,74,209,77,150,167,0,145,16,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 717 ") {
    byte_vec_t msg { 2,141,10,188 };
    byte_vec_t sig { 197,117,230,177,211,231,101,126,165,134,37,119,164,207,183,155,253,5,30,31,118,237,226,229,219,135,172,227,42,146,56,24,128,193,206,228,159,50,206,142,221,146,129,25,53,106,34,241,80,114,155,166,180,118,236,253,45,136,40,17,101,122,59,219 };
    byte_vec_t pk { 4,40,81,127,135,186,240,96,182,36,149,107,181,200,94,134,29,155,204,250,69,230,63,247,99,214,39,67,43,157,214,126,57,102,31,126,184,30,7,139,65,54,205,161,57,207,248,77,252,45,95,239,127,183,63,18,235,45,106,107,135,197,136,78,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 717 ") {
    byte_vec_t msg { 12,180,229,238 };
    byte_vec_t sig { 35,153,128,199,145,52,217,212,51,192,51,39,224,242,113,54,43,192,120,95,73,250,57,70,155,250,238,37,203,9,61,129,210,115,208,121,208,213,23,141,161,172,240,180,140,192,25,39,48,90,251,55,176,221,16,101,204,209,187,104,250,22,154,99 };
    byte_vec_t pk { 4,4,81,45,90,43,45,128,124,86,172,92,50,204,103,176,5,165,124,165,73,68,218,163,255,127,173,199,116,83,96,208,19,128,113,230,153,65,191,63,152,253,91,56,22,44,76,59,128,247,238,2,144,153,80,24,135,44,174,75,138,231,85,33,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 718 ") {
    byte_vec_t msg { 119,0,123,35 };
    byte_vec_t sig { 89,228,72,255,96,218,4,87,92,32,3,159,218,138,222,200,75,91,192,111,227,99,181,137,71,213,99,87,78,171,6,83,51,224,202,197,169,211,93,133,220,251,101,65,245,131,194,117,182,20,91,200,216,32,51,190,201,198,150,221,186,41,1,161 };
    byte_vec_t pk { 4,150,178,143,76,234,223,228,198,32,38,159,174,0,193,211,143,161,218,67,159,129,133,42,252,180,12,11,246,163,112,55,180,110,181,0,17,164,79,216,159,46,39,151,161,239,146,67,192,94,142,53,73,52,250,118,182,220,193,74,69,237,15,207,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 718 ") {
    byte_vec_t msg { 187,18,226,133 };
    byte_vec_t sig { 135,5,4,20,42,169,3,59,86,79,27,78,166,242,46,30,6,113,112,12,177,70,51,163,153,81,49,205,112,46,95,103,125,208,52,144,241,179,239,234,50,165,28,10,251,16,52,110,17,50,32,164,25,69,68,125,35,198,56,207,174,115,75,83 };
    byte_vec_t pk { 4,228,165,62,55,183,84,189,204,178,24,163,250,68,38,186,130,104,38,36,94,25,249,75,141,131,116,130,161,11,67,24,166,139,7,157,250,166,235,134,13,64,237,197,78,22,40,69,39,210,145,253,137,53,104,16,66,89,68,14,54,26,166,3,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 719 ") {
    byte_vec_t msg { 144,45,110,236 };
    byte_vec_t sig { 121,203,153,119,153,241,145,158,201,251,232,18,101,224,222,28,50,65,154,109,44,202,141,220,219,19,71,5,156,3,47,133,227,220,183,34,182,92,103,221,59,18,141,155,175,225,11,83,227,246,50,131,39,4,28,0,223,254,137,81,239,129,197,173 };
    byte_vec_t pk { 4,251,69,108,7,187,113,157,39,239,134,50,100,3,115,99,30,193,156,241,204,3,26,75,179,115,255,187,90,127,254,205,140,146,190,233,78,164,220,51,212,222,38,103,132,225,107,245,190,14,214,5,161,161,177,181,209,217,42,191,219,75,214,250,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 719 ") {
    byte_vec_t msg { 135,134,54,89 };
    byte_vec_t sig { 235,189,124,140,27,175,46,19,153,166,60,50,2,173,40,22,2,31,86,170,71,60,234,200,118,106,114,220,217,134,177,247,152,220,74,20,13,90,135,149,63,32,138,128,148,148,232,205,74,210,192,16,13,8,108,168,197,93,186,253,102,122,219,49 };
    byte_vec_t pk { 4,89,65,53,47,169,249,140,230,194,220,56,237,175,104,237,21,138,65,229,209,204,243,6,11,128,19,215,99,228,24,186,31,107,87,26,89,240,73,28,206,191,226,136,192,83,51,145,154,9,39,247,226,204,197,190,229,101,36,171,71,98,176,160,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 720 ") {
    byte_vec_t msg { 71,30,248,168 };
    byte_vec_t sig { 163,41,15,45,54,70,0,4,211,170,213,59,245,210,135,247,107,26,50,128,21,84,245,123,5,198,241,239,217,157,232,220,251,48,146,207,213,207,210,252,158,248,186,121,225,179,207,37,240,179,150,16,20,190,209,205,66,225,35,102,119,207,112,172 };
    byte_vec_t pk { 4,61,111,199,19,6,57,247,205,46,106,143,112,250,127,79,43,42,120,25,101,138,5,103,105,54,130,16,94,119,248,168,44,10,99,240,132,238,194,166,56,131,89,250,9,111,146,23,89,155,209,44,179,124,142,50,26,73,108,64,40,190,104,203,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 720 ") {
    byte_vec_t msg { 50,168,44,86 };
    byte_vec_t sig { 220,189,227,180,209,31,140,253,90,1,137,162,191,212,26,73,108,222,159,122,253,38,101,185,141,68,188,204,228,71,99,1,228,19,52,134,151,149,251,156,84,10,248,201,113,231,215,74,131,23,243,39,85,231,3,41,226,72,79,27,248,140,47,239 };
    byte_vec_t pk { 4,3,102,254,7,245,166,128,43,151,85,156,1,92,230,61,198,109,127,172,228,38,199,20,146,87,192,6,18,181,212,57,32,20,104,128,247,162,23,179,102,216,254,11,71,8,221,26,97,175,206,216,138,16,108,119,63,253,28,202,2,66,123,206,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 721 ") {
    byte_vec_t msg { 225,177,36,219 };
    byte_vec_t sig { 187,222,42,226,242,89,16,139,131,231,101,211,69,103,122,143,57,203,106,47,82,144,12,117,77,86,123,198,187,222,169,60,107,32,239,155,177,17,66,130,201,214,36,165,34,217,54,255,8,236,69,117,179,160,157,93,77,225,241,163,161,242,6,28 };
    byte_vec_t pk { 4,41,115,193,103,244,205,178,41,116,85,188,7,14,182,71,203,30,136,102,95,245,143,98,112,246,25,94,179,177,96,207,118,4,128,117,83,97,207,153,173,25,71,223,71,156,152,145,20,37,136,12,12,128,73,156,172,217,165,248,234,239,147,186,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 721 ") {
    byte_vec_t msg { 10,115,236,39 };
    byte_vec_t sig { 159,138,229,85,65,249,43,148,250,73,67,72,246,118,51,22,246,28,14,208,109,76,60,115,109,36,65,143,157,98,2,132,19,70,21,13,202,164,31,174,42,12,153,165,77,244,144,133,175,93,231,56,97,139,184,213,78,134,178,4,156,205,247,105 };
    byte_vec_t pk { 4,130,89,98,9,99,211,17,158,146,70,214,168,185,27,61,239,96,255,29,118,228,196,85,198,169,208,52,170,168,18,203,218,1,213,82,247,178,104,103,134,210,87,251,14,81,240,118,248,223,143,67,95,3,55,55,11,242,22,210,86,65,91,117,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 722 ") {
    byte_vec_t msg { 96,96,147,117 };
    byte_vec_t sig { 233,80,197,37,166,110,225,85,255,193,237,202,41,253,141,32,124,13,195,175,234,122,237,184,235,183,57,201,104,66,171,226,130,175,10,193,152,166,107,209,189,209,155,254,245,102,253,92,10,63,43,240,174,89,31,199,181,219,72,52,217,120,29,2 };
    byte_vec_t pk { 4,33,63,21,155,124,44,190,26,100,69,149,183,136,241,254,208,55,90,209,253,180,86,175,58,252,82,152,218,196,9,166,135,38,35,194,114,3,224,208,143,49,189,83,147,118,99,95,98,145,107,160,158,175,112,144,190,121,62,36,26,22,111,249,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 722 ") {
    byte_vec_t msg { 82,198,222,185 };
    byte_vec_t sig { 191,157,173,93,234,196,224,201,69,202,96,78,205,76,19,71,152,12,204,216,27,78,55,232,46,144,68,209,52,66,26,45,44,195,170,122,108,216,105,134,250,241,188,230,21,68,73,217,38,114,240,95,55,54,198,32,116,234,23,165,122,221,49,63 };
    byte_vec_t pk { 4,94,0,97,33,192,57,55,116,73,217,11,41,59,19,225,113,198,112,163,241,141,38,15,32,67,208,87,133,245,194,187,196,192,148,6,205,218,12,144,122,37,200,191,192,124,71,73,67,6,100,23,67,181,186,149,104,29,121,82,53,100,90,78,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 723 ") {
    byte_vec_t msg { 224,78,239,249 };
    byte_vec_t sig { 64,118,251,130,146,35,255,97,84,248,142,78,156,201,205,239,179,86,222,84,34,130,240,189,203,98,30,25,79,11,45,112,204,239,240,251,27,158,98,117,228,1,101,107,170,188,234,71,245,146,122,150,206,48,39,102,206,96,58,148,56,216,39,31 };
    byte_vec_t pk { 4,218,240,67,170,154,71,69,221,106,119,187,178,121,77,19,171,76,185,173,105,91,151,130,174,57,101,170,80,86,65,203,187,223,245,38,74,37,74,209,252,214,47,49,76,106,94,198,236,130,129,52,216,154,0,235,12,116,209,62,125,203,131,5,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 723 ") {
    byte_vec_t msg { 231,1,240,82 };
    byte_vec_t sig { 13,146,125,225,44,23,10,230,154,102,154,109,184,151,80,64,14,63,228,224,111,221,94,156,75,149,125,84,64,187,240,176,5,39,97,211,153,127,149,87,190,95,180,236,144,241,201,139,53,96,217,157,69,159,139,29,62,102,129,22,213,179,111,58 };
    byte_vec_t pk { 4,81,237,10,22,31,214,18,27,40,82,204,63,49,38,229,167,39,45,88,115,212,63,31,0,35,28,166,84,193,237,72,141,72,225,221,66,72,30,158,229,243,231,154,118,143,184,60,192,253,122,32,43,213,64,77,127,125,39,191,246,185,3,179,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 724 ") {
    byte_vec_t msg { 51,80,90,38 };
    byte_vec_t sig { 11,222,254,101,53,22,108,168,128,200,122,105,161,150,127,185,219,131,35,233,101,126,205,10,64,169,149,139,204,16,118,23,52,110,170,27,178,5,104,165,201,66,191,98,208,109,208,251,12,151,106,11,101,152,77,215,3,143,235,247,99,86,193,242 };
    byte_vec_t pk { 4,179,158,89,156,170,224,51,249,95,15,88,88,177,171,75,210,67,197,85,64,27,189,101,140,92,192,41,82,122,27,108,34,245,189,19,50,111,177,113,94,255,241,98,224,60,173,195,176,29,90,117,126,177,166,12,47,88,124,121,122,99,3,112,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 724 ") {
    byte_vec_t msg { 138,61,17,95 };
    byte_vec_t sig { 244,158,253,231,206,124,184,120,251,54,7,64,171,204,24,55,57,72,17,71,208,139,206,188,192,101,79,252,130,42,25,236,170,230,157,93,230,147,129,55,117,0,165,41,18,2,143,165,150,147,240,230,157,4,1,228,152,181,66,201,174,149,252,24 };
    byte_vec_t pk { 4,1,68,81,107,78,70,130,99,216,22,23,13,104,171,239,90,54,109,46,103,30,205,185,58,9,214,25,94,121,172,133,120,192,173,32,61,180,141,222,119,141,135,214,158,120,134,200,123,146,131,4,135,107,177,84,250,40,2,30,90,234,183,154,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 725 ") {
    byte_vec_t msg { 96,127,128,207 };
    byte_vec_t sig { 160,200,207,27,117,28,141,225,121,56,135,221,172,30,164,84,191,189,20,68,92,39,157,184,116,225,127,9,30,0,17,126,1,196,163,131,173,77,64,210,51,35,118,71,226,159,38,6,119,166,198,189,166,88,164,249,51,27,14,240,80,47,35,246 };
    byte_vec_t pk { 4,62,168,127,60,163,64,134,216,208,122,5,180,42,16,146,233,254,207,27,107,17,134,205,214,5,68,155,74,241,136,22,240,109,229,113,92,6,159,65,173,112,252,92,50,16,141,80,47,183,147,14,99,128,144,250,221,176,163,194,30,27,12,148,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 725 ") {
    byte_vec_t msg { 36,126,149,50 };
    byte_vec_t sig { 237,220,136,42,186,155,61,126,83,247,250,100,54,111,90,61,238,69,149,30,237,144,211,118,119,252,98,116,230,223,185,247,167,9,142,5,163,121,3,25,252,47,183,21,152,169,79,96,181,241,210,174,137,53,250,170,9,173,77,204,34,221,54,245 };
    byte_vec_t pk { 4,152,90,219,132,42,132,225,246,114,80,239,130,94,25,137,206,242,120,207,192,21,83,219,105,214,37,203,40,186,210,253,14,18,197,8,224,226,141,225,165,230,32,131,235,84,210,146,116,1,150,193,222,161,83,52,240,134,19,235,251,248,179,4,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 726 ") {
    byte_vec_t msg { 247,178,5,216 };
    byte_vec_t sig { 140,73,154,179,181,102,252,1,118,218,212,158,92,126,32,200,133,181,23,95,19,147,233,143,180,31,252,86,125,130,171,213,206,32,37,169,116,32,90,90,103,140,107,190,146,220,218,53,22,167,36,60,198,100,212,44,249,4,215,8,47,157,22,93 };
    byte_vec_t pk { 4,25,37,246,5,0,135,123,13,245,242,201,122,51,57,54,175,133,130,222,173,194,128,20,98,198,218,111,50,82,106,13,17,202,142,242,201,34,24,105,46,157,143,56,101,82,251,78,22,241,121,193,6,90,168,151,39,213,19,190,154,31,58,31,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 726 ") {
    byte_vec_t msg { 9,132,120,199 };
    byte_vec_t sig { 128,98,157,19,101,23,168,44,60,124,143,104,141,88,200,255,202,2,69,63,6,152,233,43,199,79,89,88,55,194,115,37,96,113,83,40,225,161,57,92,91,253,140,2,82,226,138,12,129,152,243,229,58,101,199,100,195,48,50,13,144,106,96,3 };
    byte_vec_t pk { 4,131,230,244,25,211,91,159,242,200,95,39,9,53,129,54,77,77,97,153,76,169,156,39,196,45,237,68,117,122,76,195,20,253,229,209,195,236,89,73,109,31,128,203,19,157,103,139,150,48,107,200,24,220,152,199,51,175,117,162,51,209,175,251,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 727 ") {
    byte_vec_t msg { 3,70,152,151 };
    byte_vec_t sig { 20,33,57,5,160,201,176,112,188,247,68,248,12,63,224,162,183,42,241,139,188,164,118,110,222,102,248,136,143,200,163,104,1,5,253,61,40,93,202,209,151,173,75,29,11,13,195,199,143,153,106,60,14,228,72,126,113,207,139,164,103,219,163,81 };
    byte_vec_t pk { 4,39,154,203,39,108,177,235,160,128,173,92,223,212,34,19,52,230,151,37,78,203,87,71,130,56,220,173,94,111,212,51,207,194,100,230,173,58,113,140,237,20,138,90,130,60,245,109,59,251,152,180,35,206,155,11,166,155,113,65,128,64,104,4,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 727 ") {
    byte_vec_t msg { 103,181,176,182 };
    byte_vec_t sig { 218,29,122,249,221,25,182,14,255,224,246,125,110,165,210,52,222,30,146,57,230,167,27,57,0,12,139,81,12,110,78,177,15,241,149,16,107,55,118,192,48,12,86,115,175,36,20,166,180,88,131,24,143,120,14,219,15,207,240,4,99,154,161,56 };
    byte_vec_t pk { 4,207,87,191,158,51,184,114,111,140,157,44,211,105,108,248,85,84,40,55,204,245,244,121,112,244,236,43,103,72,40,10,177,156,178,240,141,120,52,47,112,156,252,199,99,75,96,51,224,168,58,155,164,146,254,86,202,25,77,120,55,131,91,126,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 728 ") {
    byte_vec_t msg { 237,146,39,40 };
    byte_vec_t sig { 244,139,224,180,204,203,7,5,243,46,51,144,36,29,227,11,163,109,154,209,245,218,164,201,175,70,169,28,61,29,140,176,175,16,204,255,21,49,195,241,123,182,189,145,85,164,255,206,132,9,0,168,34,223,58,9,219,108,205,80,129,43,89,56 };
    byte_vec_t pk { 4,221,187,142,90,33,193,127,35,91,179,229,60,63,217,120,43,151,59,168,255,225,159,73,112,237,229,92,1,217,245,70,103,179,56,188,9,114,16,58,170,196,164,177,248,18,244,86,119,228,113,204,185,195,132,157,9,39,183,71,108,197,132,96,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 728 ") {
    byte_vec_t msg { 59,128,0,128 };
    byte_vec_t sig { 84,11,135,233,203,47,3,220,9,249,94,65,85,61,167,118,134,128,66,70,67,14,220,105,80,72,36,72,250,77,145,8,187,112,254,83,252,85,244,178,171,142,125,18,222,113,199,208,61,189,7,6,211,40,143,189,131,67,166,170,235,188,128,221 };
    byte_vec_t pk { 4,104,28,7,102,238,23,237,43,99,237,104,38,118,162,191,61,234,168,171,44,164,180,72,0,212,151,95,136,224,240,83,7,226,154,232,251,19,124,203,156,36,46,192,101,41,117,140,129,172,10,148,232,102,136,146,127,22,222,121,65,183,164,149,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 729 ") {
    byte_vec_t msg { 239,198,92,69 };
    byte_vec_t sig { 173,139,160,193,88,212,225,103,110,103,113,237,214,228,84,146,151,11,197,118,48,218,219,215,93,155,89,95,153,172,178,75,21,228,57,244,219,12,8,213,146,130,178,211,115,170,157,103,99,70,238,145,221,163,23,230,91,134,168,207,165,216,30,58 };
    byte_vec_t pk { 4,200,73,232,5,242,15,152,55,246,160,150,219,91,64,239,30,149,117,157,196,116,208,201,25,196,50,155,77,241,131,45,160,217,185,14,244,58,22,70,240,98,80,152,211,63,15,51,6,150,175,71,147,133,31,16,187,75,75,121,39,114,83,160,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 729 ") {
    byte_vec_t msg { 167,239,158,249 };
    byte_vec_t sig { 34,53,162,221,27,209,182,91,231,127,64,251,54,125,48,179,209,137,103,82,242,51,252,16,89,238,253,155,227,167,247,90,32,34,246,113,49,135,210,124,136,181,130,61,250,243,26,149,53,23,216,124,88,72,14,155,30,98,218,17,103,251,55,142 };
    byte_vec_t pk { 4,8,59,115,226,195,27,191,43,26,149,121,188,93,39,151,198,89,120,93,98,32,193,208,129,202,186,249,148,191,181,55,223,230,69,246,216,118,131,161,0,49,90,13,110,255,156,142,67,96,227,51,0,238,229,103,111,152,103,153,216,63,173,142,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 730 ") {
    byte_vec_t msg { 223,116,101,172 };
    byte_vec_t sig { 126,32,239,241,99,12,40,87,249,170,138,91,77,81,31,153,95,167,82,116,222,70,186,95,138,210,193,196,65,109,54,219,255,86,125,126,195,62,170,30,8,107,97,84,245,94,70,211,27,186,38,246,217,139,131,51,207,32,100,226,196,5,77,194 };
    byte_vec_t pk { 4,244,152,174,177,89,107,139,176,16,252,113,160,68,5,185,166,146,131,87,101,224,208,244,185,172,51,197,136,171,199,24,68,157,205,27,18,227,2,72,97,13,101,31,139,228,245,78,30,64,31,156,117,182,84,79,155,224,32,50,185,77,95,100,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 730 ") {
    byte_vec_t msg { 221,254,243,241 };
    byte_vec_t sig { 136,233,15,122,235,20,169,155,143,14,25,16,134,224,0,196,202,83,243,139,250,102,253,81,40,102,216,56,139,64,175,80,59,236,7,11,55,255,56,150,47,110,235,17,13,212,77,136,101,99,54,92,175,99,28,33,50,234,51,152,88,163,140,107 };
    byte_vec_t pk { 4,200,236,77,222,48,127,99,167,26,105,224,206,108,169,232,78,168,143,84,31,14,54,237,114,186,188,34,31,185,114,182,229,223,183,28,203,60,120,248,88,177,18,42,55,236,131,103,21,33,81,94,55,226,252,34,29,76,65,203,150,190,136,206,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 731 ") {
    byte_vec_t msg { 211,78,249,231 };
    byte_vec_t sig { 97,22,255,196,20,59,34,148,213,202,211,61,90,25,19,5,106,135,143,8,79,243,184,59,150,36,11,90,30,75,19,229,167,183,54,194,203,187,34,23,180,173,7,65,69,90,250,162,57,78,112,52,228,130,107,244,173,167,22,50,121,219,85,253 };
    byte_vec_t pk { 4,119,232,242,120,174,76,89,4,28,37,231,243,207,128,124,6,181,99,148,146,95,252,191,35,61,190,154,68,185,46,142,220,42,131,100,86,21,164,185,152,24,45,20,163,22,15,176,121,164,42,203,102,152,85,43,23,117,117,16,185,187,27,238,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 731 ") {
    byte_vec_t msg { 56,148,94,162 };
    byte_vec_t sig { 223,120,49,9,161,61,179,174,127,190,214,141,113,161,126,5,213,32,105,174,16,242,201,31,166,3,167,90,234,231,230,246,23,7,179,51,49,140,175,86,125,187,170,211,35,123,130,7,195,123,43,63,223,160,147,97,247,28,243,46,64,39,133,106 };
    byte_vec_t pk { 4,55,135,72,13,124,131,152,225,117,227,31,236,70,34,200,14,39,188,31,49,149,111,90,215,134,0,31,51,21,85,133,246,149,40,64,30,63,168,234,176,183,66,63,178,177,22,34,83,60,153,75,15,182,208,103,5,176,0,30,95,65,221,184,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 732 ") {
    byte_vec_t msg { 203,98,148,84 };
    byte_vec_t sig { 245,110,245,78,43,79,161,31,213,170,36,133,36,3,143,168,68,166,97,58,183,250,226,73,231,183,50,96,49,53,90,148,7,155,88,169,54,212,93,176,152,184,103,235,253,82,118,76,128,82,176,122,97,141,142,107,129,84,172,171,36,47,235,71 };
    byte_vec_t pk { 4,221,4,140,251,119,229,28,28,25,221,57,166,239,37,218,6,198,42,135,219,129,152,246,90,50,169,169,70,126,52,232,16,154,241,170,155,249,180,86,86,148,245,194,178,54,175,0,106,92,109,212,3,240,159,3,7,115,24,113,232,196,151,244,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 732 ") {
    byte_vec_t msg { 193,206,236,47 };
    byte_vec_t sig { 58,23,162,56,5,84,162,148,245,60,188,111,237,250,190,33,155,82,94,54,107,59,69,21,252,254,244,112,181,125,185,186,6,139,115,61,105,155,143,85,32,217,250,217,125,150,50,166,237,40,188,139,207,237,56,9,115,70,89,126,102,44,27,231 };
    byte_vec_t pk { 4,102,137,234,109,5,162,138,35,144,140,28,81,218,141,110,84,120,146,35,55,7,88,239,240,72,123,231,64,131,94,230,250,67,91,168,196,205,228,29,173,6,64,20,212,214,128,249,248,74,231,153,187,119,47,254,195,23,0,31,111,213,3,153,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 733 ") {
    byte_vec_t msg { 179,14,75,184 };
    byte_vec_t sig { 172,179,235,83,46,165,207,174,183,47,56,37,65,153,233,161,152,6,185,13,201,207,182,232,148,206,104,14,250,99,94,197,145,192,214,213,91,97,123,34,221,233,32,118,138,124,6,55,255,48,171,72,237,21,96,182,4,88,205,26,212,119,29,241 };
    byte_vec_t pk { 4,221,165,4,244,235,0,170,32,29,79,230,218,209,128,59,193,187,236,140,61,18,129,81,214,1,146,66,83,57,49,218,172,251,146,254,125,209,252,223,191,145,156,150,231,9,89,189,191,202,179,45,26,3,235,228,8,198,144,51,190,39,52,158,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 733 ") {
    byte_vec_t msg { 88,100,82,243 };
    byte_vec_t sig { 13,208,221,65,188,74,13,83,147,145,89,109,248,123,108,203,184,88,229,238,176,166,177,103,60,78,145,215,242,61,110,6,147,71,107,147,105,121,130,15,102,45,170,220,176,130,101,197,206,115,236,209,213,223,131,88,124,245,58,153,71,236,117,131 };
    byte_vec_t pk { 4,187,127,7,99,155,144,102,251,97,143,40,240,210,192,224,24,109,46,85,13,76,164,51,141,40,89,135,214,236,240,86,219,51,253,27,207,37,250,69,193,172,19,106,201,114,113,237,237,101,21,49,179,185,145,147,243,250,209,83,144,34,177,231,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 734 ") {
    byte_vec_t msg { 107,7,244,67 };
    byte_vec_t sig { 25,219,194,56,50,99,182,202,28,88,233,39,30,96,180,40,48,219,167,32,47,12,254,223,166,48,37,129,61,235,95,235,37,3,30,212,140,207,0,233,141,43,245,198,37,161,93,188,5,193,158,50,210,66,146,225,48,188,197,194,211,45,122,18 };
    byte_vec_t pk { 4,37,153,143,22,144,10,190,171,105,50,200,167,203,17,190,205,37,254,168,123,25,137,184,147,193,231,76,217,32,28,103,179,233,13,237,253,106,16,55,201,29,64,102,182,211,211,138,115,93,59,182,193,43,199,73,63,42,23,71,215,214,62,28,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 734 ") {
    byte_vec_t msg { 219,221,235,27 };
    byte_vec_t sig { 117,30,129,124,253,38,168,137,43,5,71,27,27,160,153,163,165,181,136,224,241,189,91,103,147,95,220,105,230,233,115,160,117,55,61,121,104,118,232,129,241,172,21,224,54,48,101,209,122,149,175,16,241,39,103,248,33,124,209,227,135,190,213,1 };
    byte_vec_t pk { 4,216,138,11,7,56,219,165,154,210,52,1,53,23,204,76,75,132,5,142,52,174,71,90,90,26,58,137,122,81,113,136,124,59,219,78,192,37,93,84,230,148,120,188,118,225,150,102,98,113,68,141,115,117,145,133,137,227,131,17,5,214,202,233,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 735 ") {
    byte_vec_t msg { 92,108,134,228 };
    byte_vec_t sig { 235,159,12,146,197,5,34,229,65,247,161,224,14,147,211,128,227,195,127,118,142,154,139,242,146,21,38,130,145,90,56,12,177,200,86,81,65,41,185,189,158,182,52,160,106,105,80,101,67,85,156,85,147,21,28,137,213,71,104,94,221,124,139,74 };
    byte_vec_t pk { 4,120,25,18,22,247,113,228,81,120,124,17,34,34,163,160,231,41,147,19,63,15,41,190,26,67,91,39,100,21,163,105,238,232,200,105,103,165,218,30,5,158,172,51,215,213,118,212,76,179,124,91,185,192,82,140,238,174,78,126,234,44,138,177,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 735 ") {
    byte_vec_t msg { 104,76,24,127 };
    byte_vec_t sig { 93,245,45,251,142,142,106,88,171,80,140,240,48,96,102,49,224,198,234,99,230,130,192,233,60,61,82,196,237,62,115,218,146,125,6,243,190,141,129,50,64,252,13,86,64,169,46,150,190,108,76,29,3,250,121,75,209,136,92,71,124,44,170,50 };
    byte_vec_t pk { 4,132,91,75,191,133,254,168,89,178,209,13,37,104,116,92,11,255,194,68,75,197,137,91,253,56,75,237,6,19,106,58,231,82,204,41,183,87,58,217,64,189,138,199,230,49,212,151,42,50,38,190,80,175,72,143,239,104,183,91,140,98,64,161,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 736 ") {
    byte_vec_t msg { 133,48,107,98 };
    byte_vec_t sig { 185,73,113,178,250,60,97,136,206,30,126,65,188,197,38,90,146,104,203,21,78,80,48,180,86,16,173,15,3,152,96,206,220,143,251,1,191,152,215,102,202,224,175,20,190,86,99,0,189,40,205,167,214,171,221,5,2,208,249,86,158,79,119,218 };
    byte_vec_t pk { 4,21,240,233,93,230,105,220,64,6,159,62,6,195,245,29,201,72,33,88,43,86,188,68,27,89,127,1,136,72,223,121,21,205,13,69,250,201,244,253,237,211,164,191,6,46,86,133,255,60,30,222,50,28,242,202,13,119,220,37,253,117,119,241,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 736 ") {
    byte_vec_t msg { 129,61,123,1 };
    byte_vec_t sig { 109,103,151,151,66,193,187,68,100,34,62,202,64,92,55,47,156,115,48,249,86,31,218,94,109,197,187,88,129,254,141,65,10,60,10,115,16,163,22,190,47,218,171,251,232,135,120,61,177,165,157,177,198,53,155,2,41,227,194,36,111,101,66,244 };
    byte_vec_t pk { 4,79,1,160,253,116,17,39,104,241,184,206,222,127,77,99,65,59,2,197,213,241,56,202,246,172,65,27,70,141,242,90,12,61,141,147,128,167,200,92,3,117,138,113,211,35,102,255,203,177,215,84,60,1,228,111,217,218,144,220,60,135,118,172,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 737 ") {
    byte_vec_t msg { 47,89,138,178 };
    byte_vec_t sig { 247,227,104,219,125,174,134,224,95,28,167,160,36,172,233,226,40,150,28,243,87,43,3,3,192,71,86,193,209,29,218,121,159,54,35,179,22,108,129,245,74,50,235,157,96,71,92,242,212,52,9,43,204,135,147,106,68,4,226,180,98,250,227,140 };
    byte_vec_t pk { 4,11,136,246,238,113,44,160,67,218,33,166,46,183,117,157,238,105,12,150,78,254,220,167,252,253,195,37,87,76,42,175,92,246,18,192,144,90,24,102,178,72,70,35,117,208,127,90,217,200,105,122,191,160,211,186,54,88,113,174,100,145,46,227,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 737 ") {
    byte_vec_t msg { 68,250,243,158 };
    byte_vec_t sig { 122,59,208,141,1,201,43,3,16,16,165,35,75,191,186,133,28,26,185,78,227,158,159,203,224,2,231,135,242,241,98,2,44,206,16,192,11,58,93,97,179,124,197,148,45,11,60,246,33,182,120,214,185,230,84,23,101,113,88,158,122,210,61,138 };
    byte_vec_t pk { 4,236,82,178,226,67,215,128,113,75,136,82,210,3,227,197,106,190,150,52,163,58,107,192,64,79,4,117,55,12,218,235,128,127,102,139,8,210,25,189,103,252,215,77,81,200,255,99,77,145,148,39,170,204,148,181,171,184,99,120,53,255,237,222,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 738 ") {
    byte_vec_t msg { 17,27,136,231 };
    byte_vec_t sig { 164,162,112,1,156,240,12,195,36,205,246,206,90,9,206,211,12,143,135,46,3,166,75,42,28,27,17,121,13,83,106,170,150,37,133,171,156,147,214,219,67,213,204,255,35,50,228,32,111,65,78,214,213,229,9,188,115,45,102,152,49,214,124,121 };
    byte_vec_t pk { 4,230,25,131,77,168,26,122,15,229,18,86,55,229,180,156,228,145,36,56,202,112,31,25,58,82,24,238,29,118,233,63,228,167,47,25,175,126,72,59,177,22,6,251,160,137,1,203,48,223,197,202,119,164,228,63,0,253,103,149,94,222,100,157,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 738 ") {
    byte_vec_t msg { 82,53,212,224 };
    byte_vec_t sig { 3,216,19,103,215,20,4,42,241,222,157,0,228,39,12,191,114,14,222,118,211,126,150,5,144,102,136,145,190,172,71,214,157,231,135,50,187,132,51,180,48,69,22,222,246,65,80,123,93,183,243,153,147,202,249,168,178,230,150,80,213,241,65,40 };
    byte_vec_t pk { 4,199,138,27,158,161,188,222,101,9,242,210,130,11,5,45,181,120,251,210,226,41,255,103,61,103,11,200,226,172,48,183,24,8,4,220,131,218,87,67,25,172,178,217,80,158,27,42,240,102,198,14,160,103,136,152,130,94,106,71,150,3,134,149,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 739 ") {
    byte_vec_t msg { 131,17,170,90 };
    byte_vec_t sig { 71,38,238,197,137,107,14,48,133,2,140,254,171,32,106,26,190,198,7,71,46,73,195,69,55,215,219,116,197,173,12,176,72,123,49,181,17,0,123,183,255,60,152,64,192,230,224,217,45,82,191,118,35,10,163,54,254,244,97,194,216,93,166,183 };
    byte_vec_t pk { 4,207,41,250,220,21,197,173,94,61,142,112,21,78,34,101,18,231,239,211,249,117,205,179,222,239,156,238,133,212,91,36,43,204,83,47,195,39,224,65,226,125,93,69,189,114,179,82,173,237,106,157,243,172,188,19,84,20,127,137,250,194,99,89,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 739 ") {
    byte_vec_t msg { 67,133,5,14 };
    byte_vec_t sig { 95,250,230,221,48,222,106,115,83,151,214,140,163,145,119,59,7,21,75,254,170,121,137,64,194,47,27,27,35,221,37,133,79,184,171,148,165,249,167,238,134,96,87,136,30,214,190,72,3,136,48,108,94,20,157,207,253,192,75,251,77,137,203,239 };
    byte_vec_t pk { 4,207,147,32,143,87,153,81,5,32,45,224,28,198,149,103,120,48,224,165,249,189,119,76,143,59,75,37,132,114,18,239,34,203,88,6,105,227,55,162,84,85,240,133,88,5,42,25,81,57,181,19,13,54,83,139,223,78,167,3,9,191,218,255,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 740 ") {
    byte_vec_t msg { 101,182,76,231 };
    byte_vec_t sig { 52,159,61,41,75,14,146,106,206,237,170,34,253,162,119,199,44,225,234,38,192,85,75,109,193,120,171,158,100,138,145,11,4,13,172,22,208,221,40,145,209,93,147,78,116,5,162,144,215,248,221,131,135,112,193,162,116,35,159,138,210,162,219,224 };
    byte_vec_t pk { 4,88,233,16,35,135,108,116,105,87,218,83,68,223,111,242,81,105,89,168,33,7,206,234,34,190,244,156,210,251,195,169,41,10,20,157,105,243,53,40,215,139,241,64,182,14,174,145,151,150,7,243,217,81,188,243,101,150,122,51,244,5,101,10,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 740 ") {
    byte_vec_t msg { 242,145,76,25 };
    byte_vec_t sig { 247,217,149,41,253,87,235,161,155,151,208,180,217,162,204,212,203,224,30,41,117,73,105,239,31,209,89,202,30,47,18,59,83,29,4,148,173,93,195,11,111,40,98,87,201,180,245,26,32,36,113,240,76,113,71,173,17,61,60,18,13,225,199,203 };
    byte_vec_t pk { 4,206,229,189,44,107,1,193,76,42,107,182,219,162,79,187,31,56,91,202,48,177,122,133,81,12,109,54,41,102,175,218,31,176,155,116,240,7,182,254,253,236,205,5,76,55,106,89,162,45,35,254,234,244,162,16,143,135,196,96,237,250,11,132,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 741 ") {
    byte_vec_t msg { 149,108,175,115 };
    byte_vec_t sig { 118,73,16,131,166,208,8,248,251,47,92,182,200,254,43,160,154,26,94,18,51,102,79,50,244,177,175,129,29,98,185,5,150,125,203,7,11,170,46,84,192,36,220,212,146,19,33,1,57,192,153,52,99,225,156,166,220,180,99,201,29,11,62,227 };
    byte_vec_t pk { 4,126,178,255,6,140,88,103,67,8,138,2,188,138,227,139,196,17,3,143,52,182,127,250,2,194,87,102,74,39,15,166,235,37,139,249,64,245,173,117,65,86,192,37,185,244,210,59,104,62,27,144,131,87,200,146,9,98,116,99,122,154,195,33,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 741 ") {
    byte_vec_t msg { 94,58,85,250 };
    byte_vec_t sig { 189,130,231,229,96,167,72,217,199,204,15,75,217,127,4,104,149,225,110,182,119,98,27,81,205,40,75,45,155,145,139,67,8,136,222,65,82,79,216,157,205,206,46,95,32,161,248,168,119,76,205,229,157,85,218,96,56,104,149,204,104,103,86,146 };
    byte_vec_t pk { 4,153,251,146,90,38,254,252,106,196,43,79,182,163,74,9,110,201,50,203,183,238,70,150,9,5,76,11,131,37,149,6,24,248,196,89,23,253,46,168,21,87,62,98,134,20,11,255,137,124,73,247,132,253,85,159,76,168,59,97,170,55,178,51,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 742 ") {
    byte_vec_t msg { 192,42,99,232 };
    byte_vec_t sig { 44,247,190,251,107,51,123,9,31,234,17,162,220,36,111,221,252,79,199,196,132,255,69,114,80,74,250,130,43,235,24,40,195,214,103,189,146,77,189,204,59,252,42,238,33,64,218,253,15,96,236,26,109,134,171,96,122,151,216,153,181,247,248,44 };
    byte_vec_t pk { 4,28,1,62,90,86,20,193,195,160,24,228,31,82,244,68,133,94,42,23,120,161,220,108,195,52,60,137,194,254,212,144,111,211,97,253,50,79,200,34,214,58,161,197,51,211,164,159,76,109,67,199,74,220,46,44,205,2,164,57,226,116,154,185,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 742 ") {
    byte_vec_t msg { 246,189,118,174 };
    byte_vec_t sig { 35,46,106,48,130,211,126,62,226,93,33,188,56,180,76,120,80,100,159,121,70,40,104,161,83,62,63,121,177,158,147,217,187,50,137,104,89,130,247,175,138,119,27,244,116,116,39,16,212,133,178,56,174,137,206,253,15,20,90,107,12,198,21,214 };
    byte_vec_t pk { 4,210,215,6,41,72,175,52,230,23,175,183,151,219,146,0,215,211,239,211,90,30,200,101,111,115,218,42,180,220,22,97,205,88,210,108,76,117,111,87,29,58,255,122,249,247,206,178,117,129,112,161,120,251,222,12,180,136,187,227,10,185,65,170,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 743 ") {
    byte_vec_t msg { 131,63,245,107 };
    byte_vec_t sig { 255,89,195,202,6,73,154,147,1,254,95,99,5,189,170,244,169,89,122,89,33,226,36,86,217,136,53,100,83,222,180,12,21,165,72,202,112,36,70,151,203,75,6,55,241,203,26,177,76,35,183,142,76,63,170,112,60,139,167,183,145,90,241,64 };
    byte_vec_t pk { 4,145,60,191,250,108,51,51,166,132,162,244,162,5,74,240,54,4,74,159,235,203,243,63,62,131,28,62,2,42,189,126,114,216,92,108,220,221,79,96,4,69,64,43,235,83,226,113,83,184,209,56,107,180,164,13,44,157,225,165,155,194,53,158,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 743 ") {
    byte_vec_t msg { 52,0,34,200 };
    byte_vec_t sig { 157,223,66,44,222,255,143,56,59,147,77,239,203,194,92,57,159,103,130,121,72,187,134,179,178,86,254,54,50,213,187,60,126,77,244,199,148,48,222,177,30,253,14,233,103,34,254,172,181,206,41,192,217,234,7,193,49,130,174,39,46,155,201,136 };
    byte_vec_t pk { 4,89,68,228,112,45,72,10,30,24,201,137,63,6,95,85,216,63,197,236,28,13,160,69,27,44,241,166,11,140,178,200,32,194,137,152,169,201,171,18,4,67,46,3,133,96,20,225,205,186,81,192,5,193,122,187,176,84,182,209,13,216,200,117,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 744 ") {
    byte_vec_t msg { 116,204,224,97 };
    byte_vec_t sig { 148,215,118,27,69,208,196,106,174,45,178,133,197,239,171,7,153,216,196,62,57,139,117,247,65,241,99,249,63,223,137,184,106,103,33,183,175,55,238,61,114,247,37,176,208,49,216,234,164,11,203,125,85,98,51,158,209,93,241,87,124,24,97,124 };
    byte_vec_t pk { 4,244,40,19,188,142,254,32,167,133,21,119,182,83,11,195,182,254,14,98,76,204,242,138,91,83,208,110,64,176,249,44,171,237,186,248,42,73,214,33,195,182,98,143,192,19,39,98,66,237,55,161,181,80,187,209,175,37,154,242,184,226,180,146,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 744 ") {
    byte_vec_t msg { 58,132,4,135 };
    byte_vec_t sig { 193,139,114,147,93,51,46,61,223,240,57,21,90,39,77,107,236,234,134,175,236,112,149,119,134,1,151,131,61,20,225,238,64,18,40,134,160,60,83,211,79,78,36,249,218,55,81,193,103,93,133,240,221,253,207,158,69,176,197,10,239,186,136,150 };
    byte_vec_t pk { 4,143,75,166,130,12,98,201,63,90,241,4,96,48,110,245,172,33,18,95,52,244,252,63,163,137,147,170,17,13,5,199,143,245,99,118,248,194,135,185,204,136,199,155,68,38,184,205,251,252,6,20,39,162,153,137,114,244,31,115,244,51,60,133,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 745 ") {
    byte_vec_t msg { 46,145,141,13 };
    byte_vec_t sig { 254,19,219,7,161,203,134,5,100,199,178,104,99,144,207,174,33,170,127,207,9,103,210,225,182,92,93,20,35,9,218,230,193,246,124,187,53,224,134,154,48,63,180,77,0,250,188,35,132,60,92,53,252,87,128,210,152,10,198,240,35,170,71,216 };
    byte_vec_t pk { 4,188,87,2,211,26,166,216,203,232,73,126,241,176,141,104,147,123,54,173,68,123,128,156,1,154,3,178,51,75,13,231,200,155,208,68,34,139,74,165,15,51,203,198,19,226,133,208,177,64,149,7,131,84,91,71,214,211,17,40,240,22,114,102,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 745 ") {
    byte_vec_t msg { 16,2,125,140 };
    byte_vec_t sig { 121,115,159,59,149,197,65,34,122,205,48,173,248,254,200,10,178,154,182,206,51,191,147,39,218,185,58,130,15,176,190,112,26,79,12,183,38,139,248,144,109,139,96,168,36,229,64,153,14,185,52,19,201,35,154,17,202,249,196,76,131,179,99,245 };
    byte_vec_t pk { 4,255,124,120,105,103,63,118,237,41,39,167,178,61,217,224,234,69,53,11,49,210,198,149,51,22,102,72,42,83,88,171,244,118,158,220,48,166,5,153,76,76,78,47,48,124,215,188,196,195,61,143,90,172,211,180,228,192,143,97,211,3,51,67,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 746 ") {
    byte_vec_t msg { 205,51,230,104 };
    byte_vec_t sig { 184,226,45,51,227,92,27,190,133,174,190,72,168,112,194,125,210,40,164,131,171,157,162,46,197,22,117,255,34,134,254,223,243,198,236,29,69,246,135,251,134,145,48,90,18,220,205,70,247,174,192,109,216,85,107,113,51,47,156,34,6,161,105,235 };
    byte_vec_t pk { 4,229,178,107,142,22,204,169,215,236,110,154,3,158,43,65,218,202,89,91,225,107,12,71,240,135,149,249,157,239,39,28,215,209,186,182,211,40,0,53,187,226,87,90,201,33,176,44,149,136,68,193,139,178,84,235,198,38,101,49,161,73,16,203,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 746 ") {
    byte_vec_t msg { 139,109,12,196 };
    byte_vec_t sig { 63,21,238,20,2,36,65,105,218,187,206,233,206,74,86,53,4,0,236,19,184,20,151,183,7,77,226,176,28,134,128,90,32,103,84,119,233,55,46,199,197,50,138,220,101,231,0,217,26,51,235,150,145,24,99,128,157,137,93,247,66,95,15,187 };
    byte_vec_t pk { 4,233,171,154,151,108,245,96,35,64,47,228,133,119,25,71,246,43,219,232,222,232,66,0,243,114,98,5,76,213,148,61,177,120,207,236,81,190,86,196,73,87,52,238,83,160,159,107,236,103,22,148,218,68,37,186,170,134,83,13,127,91,199,7,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 747 ") {
    byte_vec_t msg { 211,217,251,95 };
    byte_vec_t sig { 208,0,2,43,230,208,25,188,221,172,225,81,146,198,219,89,123,1,41,149,1,153,83,176,33,141,76,134,74,28,43,97,167,134,179,123,20,88,53,21,82,64,244,186,2,219,248,164,197,174,111,117,110,124,97,87,119,48,249,48,146,83,53,135 };
    byte_vec_t pk { 4,22,67,71,81,73,223,48,18,65,97,252,137,76,104,57,144,177,26,249,159,37,154,114,91,243,182,68,93,127,61,170,123,148,45,66,2,193,107,118,59,77,88,20,90,29,139,187,126,9,147,88,43,151,124,136,16,162,159,90,7,192,124,142,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 747 ") {
    byte_vec_t msg { 157,248,90,99 };
    byte_vec_t sig { 40,83,60,168,109,66,158,132,250,145,155,179,18,251,10,252,87,214,237,131,61,218,207,46,255,29,3,89,158,202,2,28,186,68,36,196,60,128,134,227,203,79,3,132,22,123,97,230,13,227,230,37,168,81,172,15,30,219,99,90,89,4,135,43 };
    byte_vec_t pk { 4,146,246,221,112,98,101,116,62,91,205,45,217,226,116,124,162,41,244,168,104,179,92,56,220,80,14,110,230,190,146,2,7,122,219,51,205,116,173,249,238,49,183,217,244,139,168,74,32,213,73,127,216,46,93,181,237,255,219,81,151,42,33,37,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 748 ") {
    byte_vec_t msg { 124,28,190,100 };
    byte_vec_t sig { 97,76,245,85,172,204,63,154,191,86,219,60,85,204,146,56,43,188,203,3,182,4,200,133,80,30,76,65,136,176,13,16,164,35,192,226,210,56,154,201,26,152,173,60,19,144,178,127,148,11,98,102,145,78,214,42,63,126,6,241,53,222,52,153 };
    byte_vec_t pk { 4,179,46,23,46,32,65,200,6,8,104,132,41,247,136,110,20,72,220,197,178,210,135,86,64,186,216,219,20,188,255,85,206,78,216,18,83,95,110,51,160,59,136,17,169,85,166,173,163,163,145,131,83,213,136,140,130,45,181,226,47,132,119,128,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 748 ") {
    byte_vec_t msg { 41,154,108,116 };
    byte_vec_t sig { 165,253,91,156,173,226,0,49,98,126,95,255,94,154,74,111,204,209,246,227,223,183,190,249,166,197,40,194,136,110,212,65,123,134,225,41,103,123,133,39,253,26,240,30,91,90,3,108,250,11,96,181,186,217,181,93,109,1,136,137,95,73,10,23 };
    byte_vec_t pk { 4,217,119,36,177,60,142,74,211,29,81,218,255,128,12,162,29,135,221,200,243,139,144,210,146,222,165,96,106,177,20,4,95,97,144,80,81,147,26,172,190,241,178,136,41,201,247,176,163,237,224,199,192,6,14,47,216,182,126,150,46,196,204,58,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 749 ") {
    byte_vec_t msg { 228,161,214,211 };
    byte_vec_t sig { 187,243,10,108,50,25,52,225,86,178,248,55,183,100,4,63,236,19,252,88,67,79,124,144,240,78,41,36,39,6,250,49,245,117,54,111,194,186,97,231,63,171,59,0,201,44,53,140,233,231,242,239,137,25,233,55,31,100,116,61,110,24,119,133 };
    byte_vec_t pk { 4,164,57,80,21,246,221,153,159,38,229,89,9,241,104,178,230,169,158,162,87,98,4,249,152,201,89,206,169,104,139,247,52,214,66,102,94,171,45,212,123,198,225,248,239,79,246,49,121,82,113,170,32,109,209,50,216,167,101,231,70,163,215,113,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 749 ") {
    byte_vec_t msg { 247,243,141,89 };
    byte_vec_t sig { 188,149,142,78,159,114,148,158,152,186,83,132,165,245,188,114,179,111,233,113,171,216,26,135,160,21,28,137,112,24,211,103,242,7,25,160,130,12,135,111,133,124,212,83,236,11,225,19,49,62,125,122,249,211,1,166,24,161,67,194,107,151,127,214 };
    byte_vec_t pk { 4,24,237,103,205,51,59,155,74,44,88,148,5,204,255,167,217,115,106,132,128,44,18,103,155,207,237,106,141,11,113,225,60,197,230,177,126,180,163,170,47,118,8,40,73,127,96,78,211,151,145,245,119,215,201,1,48,233,234,152,39,66,214,139,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 750 ") {
    byte_vec_t msg { 150,213,242,69 };
    byte_vec_t sig { 188,156,151,137,157,155,3,171,207,186,60,93,76,105,203,17,186,163,156,76,179,119,117,98,12,242,159,230,195,197,154,144,60,229,125,198,150,149,78,81,81,55,177,223,148,72,247,48,105,32,65,16,91,18,96,109,82,127,235,134,10,87,150,136 };
    byte_vec_t pk { 4,138,54,66,8,8,92,90,182,234,57,102,30,16,207,229,171,188,135,211,244,172,220,189,192,44,128,233,151,43,222,207,109,220,136,51,164,234,92,41,22,117,37,242,141,134,214,113,124,25,120,112,231,36,141,87,152,133,16,100,254,123,189,101,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 750 ") {
    byte_vec_t msg { 195,135,233,16 };
    byte_vec_t sig { 181,6,241,19,179,230,171,226,8,52,207,206,41,35,215,105,101,223,217,250,216,8,164,200,135,82,44,72,206,124,205,124,154,115,22,117,120,9,100,74,119,194,162,203,156,198,64,212,171,227,229,49,239,169,183,230,149,28,21,147,114,101,218,139 };
    byte_vec_t pk { 4,119,21,83,229,111,199,239,97,231,92,73,7,242,134,49,169,41,164,65,70,248,241,126,97,79,31,62,72,187,36,41,36,143,20,159,199,125,179,7,98,135,88,44,216,130,144,208,207,195,244,168,186,36,148,44,242,95,185,6,20,183,192,118,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 751 ") {
    byte_vec_t msg { 178,71,233,242 };
    byte_vec_t sig { 104,230,32,37,203,224,38,55,96,163,165,11,130,244,48,92,80,171,25,102,197,24,28,231,3,192,13,6,247,47,171,133,140,238,117,124,230,189,36,172,240,219,28,222,190,180,68,219,144,240,124,157,82,24,77,126,156,57,225,124,103,10,151,91 };
    byte_vec_t pk { 4,124,66,147,47,55,131,209,74,125,248,96,88,97,248,140,244,53,216,102,237,6,12,214,146,212,54,138,139,189,53,241,197,188,45,200,154,247,144,35,45,123,32,87,242,51,25,21,121,249,120,22,33,18,104,140,185,167,47,153,65,137,122,194,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 751 ") {
    byte_vec_t msg { 48,115,100,100 };
    byte_vec_t sig { 15,255,182,226,245,168,51,53,10,254,236,180,157,89,66,206,185,183,63,7,126,111,191,4,107,118,67,41,191,167,110,59,51,100,132,166,247,58,105,126,196,99,59,173,242,46,49,74,109,97,55,68,230,222,1,133,200,140,233,202,189,20,190,165 };
    byte_vec_t pk { 4,188,17,206,254,41,117,50,222,43,125,109,19,113,214,158,246,251,204,244,120,251,255,71,160,252,187,241,143,78,164,207,219,53,26,191,148,195,122,154,253,95,141,68,204,39,22,46,73,28,232,222,215,156,239,142,227,36,246,23,229,48,243,28,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 752 ") {
    byte_vec_t msg { 249,134,36,22 };
    byte_vec_t sig { 187,76,10,143,248,164,196,65,155,55,180,179,238,253,116,44,99,80,6,253,120,184,0,181,103,65,177,222,163,221,215,90,192,57,234,37,246,41,178,107,106,217,88,173,15,202,82,136,29,91,243,20,250,219,1,181,84,218,3,50,213,150,233,68 };
    byte_vec_t pk { 4,19,27,187,203,231,124,91,209,42,39,164,77,64,117,181,181,216,37,105,177,246,11,253,221,55,160,22,146,156,125,194,216,244,123,29,226,47,230,4,59,127,46,19,17,4,177,167,237,42,209,238,57,135,127,254,223,244,134,128,253,91,1,145,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 752 ") {
    byte_vec_t msg { 53,184,40,209 };
    byte_vec_t sig { 108,246,129,221,134,191,21,77,232,32,220,218,175,93,107,166,75,21,113,58,102,152,223,103,101,125,248,132,136,20,252,35,243,83,247,113,77,201,122,229,71,198,250,132,100,95,251,38,31,49,109,98,5,102,201,103,201,201,67,199,143,0,35,7 };
    byte_vec_t pk { 4,198,36,144,87,67,41,221,55,168,224,70,77,27,126,117,82,55,79,18,139,53,0,19,217,42,152,208,114,159,51,71,223,150,169,80,6,14,60,5,216,185,150,31,9,47,145,6,233,177,255,126,128,173,168,183,16,37,96,200,224,197,88,235,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 753 ") {
    byte_vec_t msg { 107,135,107,19 };
    byte_vec_t sig { 40,89,19,8,163,165,242,163,39,146,181,47,158,197,23,187,73,115,33,129,167,76,209,151,20,211,216,85,85,40,23,10,215,125,255,41,147,103,155,191,21,55,1,155,23,215,208,71,156,161,22,28,44,171,146,235,68,220,212,43,180,132,171,27 };
    byte_vec_t pk { 4,25,246,159,244,105,196,33,78,156,43,39,216,8,0,7,39,150,117,60,108,173,119,154,57,37,255,114,156,161,79,229,124,247,97,119,54,28,32,227,158,230,178,154,67,51,44,35,90,7,171,253,99,41,79,16,64,115,37,255,136,90,202,237,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 753 ") {
    byte_vec_t msg { 112,235,131,135 };
    byte_vec_t sig { 139,49,62,7,210,223,120,158,36,196,234,33,193,219,230,90,134,245,143,249,8,193,5,160,149,55,120,25,172,221,196,236,41,139,55,166,241,26,232,112,251,217,116,150,137,72,130,79,185,140,26,33,54,187,152,79,148,58,140,94,120,209,47,35 };
    byte_vec_t pk { 4,119,200,186,204,149,162,80,0,63,78,223,182,224,248,122,100,64,122,37,163,33,98,118,200,193,117,160,124,105,160,97,151,84,50,95,33,12,101,113,43,195,71,255,221,41,50,124,2,156,72,169,60,176,107,90,254,43,225,166,88,148,216,173,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 754 ") {
    byte_vec_t msg { 120,72,141,184 };
    byte_vec_t sig { 208,73,8,111,59,98,86,160,55,122,116,229,248,129,136,66,11,185,6,92,131,12,35,212,13,60,111,235,189,115,6,107,32,70,99,172,11,197,108,94,113,224,88,94,65,148,46,241,255,78,168,81,6,79,208,45,155,190,54,254,45,217,129,13 };
    byte_vec_t pk { 4,188,146,245,31,131,232,78,151,200,219,54,143,67,215,105,12,171,198,183,44,219,2,162,139,206,105,228,208,225,87,44,200,250,33,194,80,72,237,254,81,245,74,21,185,11,0,188,228,37,124,100,99,79,234,232,211,80,29,12,107,1,251,126,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 754 ") {
    byte_vec_t msg { 45,68,232,189 };
    byte_vec_t sig { 179,109,115,222,53,43,70,86,129,86,71,115,190,91,195,9,75,49,140,51,97,227,84,37,151,214,9,17,216,125,43,217,46,10,255,226,144,140,120,75,200,92,140,241,75,196,190,144,253,195,203,157,71,234,95,251,134,61,170,190,46,146,160,246 };
    byte_vec_t pk { 4,93,181,222,241,87,9,231,213,143,245,212,86,53,159,108,193,253,10,233,200,191,175,136,79,151,107,255,156,212,117,31,192,164,93,161,11,40,9,255,74,53,177,86,57,113,46,240,192,82,215,103,140,109,120,210,17,243,88,199,79,36,137,93,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 755 ") {
    byte_vec_t msg { 73,3,229,33 };
    byte_vec_t sig { 189,154,64,66,92,230,196,114,42,106,188,232,40,75,132,59,178,45,232,111,36,54,164,214,157,79,63,12,181,87,54,144,246,155,5,133,185,226,54,112,95,44,11,169,247,50,154,167,183,172,98,119,116,151,17,160,119,103,194,122,200,55,150,22 };
    byte_vec_t pk { 4,194,56,185,226,117,39,188,194,156,24,125,86,41,170,9,247,180,230,232,95,0,211,54,110,171,143,236,209,223,88,53,191,114,153,211,150,101,176,25,128,217,116,54,95,125,243,44,147,190,207,21,226,96,57,51,83,135,53,199,179,157,88,131,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 755 ") {
    byte_vec_t msg { 249,111,82,137 };
    byte_vec_t sig { 58,91,195,227,5,13,17,178,87,182,153,102,160,52,214,109,208,242,122,243,162,231,131,236,218,42,35,184,116,91,4,53,202,177,157,46,58,65,201,234,253,113,195,139,121,98,42,98,213,37,31,74,13,23,97,231,148,115,27,50,77,38,19,209 };
    byte_vec_t pk { 4,243,62,75,28,151,235,156,143,253,108,116,94,156,195,125,194,85,55,10,68,218,122,189,130,51,157,157,205,94,128,134,166,137,223,52,79,120,104,219,88,212,245,20,122,157,96,102,165,1,122,21,238,234,199,105,183,198,234,187,234,4,228,177,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 756 ") {
    byte_vec_t msg { 184,164,210,209 };
    byte_vec_t sig { 229,22,8,135,169,232,190,16,83,53,237,78,7,214,118,231,246,180,230,60,140,179,73,231,237,27,2,127,137,171,176,99,232,210,201,148,26,207,88,181,193,102,118,126,188,170,12,162,44,135,154,135,107,83,9,119,245,49,209,47,208,28,114,188 };
    byte_vec_t pk { 4,252,141,86,197,88,181,45,68,220,74,109,252,96,208,109,118,159,222,127,93,206,93,40,150,247,48,81,95,48,225,184,70,119,164,195,142,169,100,66,134,65,150,89,61,203,84,51,64,254,152,194,160,226,205,162,96,147,93,181,234,18,14,39,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 756 ") {
    byte_vec_t msg { 65,187,5,125 };
    byte_vec_t sig { 8,236,94,92,169,156,223,191,42,82,22,119,24,185,203,108,55,46,16,240,203,213,224,47,209,132,183,181,54,94,164,230,50,153,111,140,78,95,28,114,190,55,24,191,180,59,59,33,18,155,199,117,119,199,87,185,205,198,128,104,34,246,99,77 };
    byte_vec_t pk { 4,236,94,137,99,78,147,234,220,254,66,83,182,31,65,75,5,52,206,12,109,126,185,154,99,96,214,255,125,65,83,212,120,35,224,218,17,151,177,189,249,184,248,196,99,254,40,67,119,4,254,32,250,118,190,108,37,203,181,129,241,106,252,135,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 757 ") {
    byte_vec_t msg { 14,240,252,50 };
    byte_vec_t sig { 102,36,86,227,4,15,255,167,206,54,196,136,199,251,233,186,144,93,225,120,182,42,43,34,73,28,245,56,236,200,162,26,217,117,78,80,192,255,210,208,217,52,68,194,143,141,201,94,239,4,247,234,96,145,25,103,145,236,176,190,72,125,116,112 };
    byte_vec_t pk { 4,175,185,154,216,150,138,137,135,202,218,208,31,193,170,54,208,234,27,38,234,205,116,28,73,199,189,45,204,27,224,137,191,87,155,56,13,12,244,135,47,255,44,38,141,22,100,203,205,111,171,142,100,128,84,189,39,39,20,49,72,230,245,203,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 757 ") {
    byte_vec_t msg { 55,95,27,160 };
    byte_vec_t sig { 85,150,198,149,206,150,181,211,84,239,224,90,248,235,231,150,182,226,98,249,75,244,50,51,248,214,244,66,149,42,9,130,96,141,207,138,22,157,98,171,163,21,71,112,98,81,105,31,254,132,178,189,239,118,97,133,110,26,92,242,254,36,5,6 };
    byte_vec_t pk { 4,29,244,129,137,124,172,60,114,84,179,225,44,13,122,124,38,165,254,221,169,180,88,120,79,92,186,217,72,238,96,244,123,39,132,69,164,72,122,130,31,217,138,236,217,187,73,121,253,220,233,56,41,34,112,231,156,154,36,26,184,211,194,226,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 758 ") {
    byte_vec_t msg { 65,169,91,187 };
    byte_vec_t sig { 16,108,73,121,202,237,159,149,210,41,24,63,28,96,62,43,23,173,181,107,230,20,154,51,194,31,181,196,148,209,99,162,155,157,22,143,63,173,99,72,86,78,151,105,210,107,73,56,36,114,30,74,130,151,250,44,33,238,215,19,215,228,48,171 };
    byte_vec_t pk { 4,142,204,103,144,207,92,203,107,87,3,98,13,196,167,216,30,157,197,158,158,228,82,57,138,36,6,127,39,240,215,183,183,192,115,71,169,141,116,219,118,141,214,124,97,203,230,142,240,43,86,31,55,140,197,53,20,53,38,249,15,225,78,123,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 758 ") {
    byte_vec_t msg { 10,129,119,213 };
    byte_vec_t sig { 221,211,89,57,40,97,34,177,125,45,88,157,87,0,220,122,181,159,195,106,134,2,254,73,30,223,226,198,175,143,157,133,149,112,112,26,181,2,234,170,212,141,58,7,195,166,231,54,86,167,124,143,224,52,52,1,210,227,129,120,183,164,59,135 };
    byte_vec_t pk { 4,182,17,108,122,40,72,208,255,12,47,123,128,219,169,134,254,56,67,36,79,35,198,192,199,16,157,76,50,163,229,8,199,192,93,128,57,212,27,194,24,70,24,7,86,26,239,221,199,210,232,175,98,230,159,220,155,176,38,166,106,207,76,32,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 759 ") {
    byte_vec_t msg { 20,233,111,115 };
    byte_vec_t sig { 207,253,79,215,156,243,254,164,42,101,179,253,26,58,57,20,153,219,169,201,32,212,180,198,66,114,215,137,26,161,79,51,91,96,254,71,34,161,211,116,189,145,219,220,220,205,85,252,158,205,77,250,115,217,204,234,53,53,54,116,166,80,38,41 };
    byte_vec_t pk { 4,157,146,161,0,221,43,154,46,191,35,45,215,206,89,53,126,100,53,53,122,19,103,186,62,214,32,104,214,68,255,132,127,216,210,203,27,95,95,40,198,98,161,81,194,72,146,240,242,122,210,97,73,154,4,184,161,83,162,4,9,47,121,75,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 759 ") {
    byte_vec_t msg { 208,253,175,96 };
    byte_vec_t sig { 173,212,78,242,97,110,106,28,78,235,67,139,217,122,170,180,109,226,138,229,128,38,117,103,251,223,176,135,4,236,109,81,235,8,151,0,128,110,221,76,186,57,25,101,126,114,253,19,246,20,0,70,207,111,172,61,203,51,168,145,208,233,115,126 };
    byte_vec_t pk { 4,217,151,11,26,243,31,121,94,204,175,190,155,164,39,146,61,153,31,179,136,48,211,214,218,111,147,20,30,11,168,136,201,115,166,236,76,184,7,175,237,34,52,50,51,83,84,70,122,76,0,107,3,86,87,85,100,188,165,57,148,85,112,17,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 760 ") {
    byte_vec_t msg { 62,11,220,251 };
    byte_vec_t sig { 78,161,197,250,184,51,188,7,249,87,79,91,176,202,196,251,193,104,85,174,205,195,245,145,192,90,66,123,113,235,136,243,199,44,116,214,224,147,24,96,14,120,81,1,13,127,175,164,177,45,35,119,238,124,47,22,87,36,32,80,69,216,60,160 };
    byte_vec_t pk { 4,228,164,212,89,217,124,90,254,164,152,191,52,71,176,142,229,211,224,200,86,78,42,241,212,30,113,70,40,34,200,252,54,83,129,193,5,99,192,255,10,168,183,108,24,130,234,211,245,87,52,213,186,112,158,30,54,165,224,240,100,89,103,236,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 760 ") {
    byte_vec_t msg { 140,93,187,168 };
    byte_vec_t sig { 209,155,81,80,240,14,170,113,130,10,184,126,12,231,118,166,214,14,54,143,7,192,182,182,177,177,239,98,177,79,227,209,210,30,239,46,53,213,217,217,235,59,58,89,194,219,81,74,237,36,60,183,191,25,24,230,2,58,90,189,26,78,237,210 };
    byte_vec_t pk { 4,145,241,139,119,119,120,159,60,191,116,166,112,208,11,105,179,177,181,213,163,52,21,202,221,117,76,139,168,179,224,178,219,29,71,92,118,22,211,132,91,223,171,215,254,134,140,45,168,234,254,10,34,35,220,165,144,8,25,146,24,10,40,63,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 761 ") {
    byte_vec_t msg { 131,240,31,134 };
    byte_vec_t sig { 100,227,219,147,58,78,17,50,233,81,222,62,130,212,8,194,68,246,83,208,138,233,197,92,171,10,146,81,186,55,177,206,110,23,209,5,22,72,138,117,146,194,11,245,191,59,55,156,146,0,183,96,223,159,38,180,202,49,123,146,33,200,131,194 };
    byte_vec_t pk { 4,188,48,236,62,69,204,153,92,21,196,218,138,85,37,140,61,27,91,20,126,208,76,68,176,174,49,42,91,75,66,150,8,244,167,112,249,218,164,145,157,80,255,152,7,71,23,180,97,131,230,69,213,244,80,138,30,40,49,53,122,56,28,57,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 761 ") {
    byte_vec_t msg { 69,196,116,231 };
    byte_vec_t sig { 233,6,146,94,131,49,244,50,89,221,226,176,21,89,178,243,222,150,152,190,76,137,168,73,126,236,147,25,28,136,173,184,229,215,178,245,199,96,53,16,232,160,105,32,131,183,8,214,231,36,141,204,95,205,244,103,93,229,132,17,240,14,95,83 };
    byte_vec_t pk { 4,11,5,54,36,138,66,247,179,10,7,30,96,100,37,161,75,95,148,32,7,3,43,223,198,200,103,84,156,159,13,219,112,111,85,255,114,167,36,124,252,217,252,143,252,133,172,83,75,255,12,6,23,203,70,0,87,99,219,15,67,243,9,97,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 762 ") {
    byte_vec_t msg { 218,92,63,91 };
    byte_vec_t sig { 181,171,148,230,150,36,247,212,224,128,185,141,240,223,71,154,222,250,61,148,172,66,11,187,234,62,206,215,37,224,190,148,254,9,175,224,159,33,247,176,179,216,18,114,124,110,72,12,224,202,44,136,239,36,38,117,61,21,2,20,176,205,235,66 };
    byte_vec_t pk { 4,170,254,238,107,125,199,159,80,193,176,18,15,144,68,254,123,223,14,191,192,10,244,140,112,171,23,56,208,10,122,213,203,135,164,74,247,96,66,208,232,218,124,205,167,232,122,89,167,161,12,143,82,209,200,216,131,195,157,3,108,21,89,171,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 762 ") {
    byte_vec_t msg { 1,26,154,216 };
    byte_vec_t sig { 152,71,199,14,193,185,167,241,246,75,60,25,62,28,97,137,70,224,88,40,77,232,229,60,20,101,60,170,253,178,81,87,128,121,38,86,59,169,90,22,180,12,199,217,47,205,143,167,49,133,27,211,203,125,159,230,97,86,67,142,22,54,136,157 };
    byte_vec_t pk { 4,214,114,95,238,161,48,5,157,39,197,20,15,177,228,111,100,21,154,113,95,141,132,186,9,68,49,92,49,69,137,102,129,30,100,82,13,156,92,211,18,150,118,79,228,103,166,166,70,82,178,152,152,179,118,169,162,224,19,218,91,127,118,176,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 763 ") {
    byte_vec_t msg { 170,114,68,116 };
    byte_vec_t sig { 181,79,154,28,18,61,201,95,182,150,176,58,25,222,37,187,122,37,70,16,119,200,211,82,106,202,137,191,114,60,34,188,207,189,35,177,152,229,190,140,29,149,92,91,73,130,6,92,5,242,229,11,116,80,146,67,3,187,223,157,43,196,139,238 };
    byte_vec_t pk { 4,171,50,207,250,58,140,45,78,38,231,53,163,65,131,81,239,217,158,160,89,21,7,250,96,108,252,92,197,208,201,197,114,73,119,252,78,109,116,219,146,180,98,70,69,198,239,190,21,177,30,43,123,240,63,139,9,14,236,209,73,80,247,226,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 763 ") {
    byte_vec_t msg { 85,90,237,25 };
    byte_vec_t sig { 209,132,184,156,179,170,130,65,10,212,76,227,2,139,115,179,201,126,155,142,19,37,86,101,107,247,29,120,97,60,255,241,68,34,10,182,91,27,23,71,20,106,103,253,14,148,178,37,163,205,66,247,26,46,137,4,132,200,208,149,19,239,215,6 };
    byte_vec_t pk { 4,225,251,10,79,168,56,75,10,133,243,117,109,244,119,110,229,39,254,34,63,105,103,104,145,214,75,216,241,2,198,87,235,86,143,76,94,87,199,72,212,103,178,153,240,167,45,127,208,192,14,189,8,60,127,194,248,90,140,111,65,245,233,51,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 764 ") {
    byte_vec_t msg { 103,149,104,149 };
    byte_vec_t sig { 110,5,226,91,105,187,49,175,252,87,139,231,122,131,183,145,154,135,218,119,15,210,76,29,120,127,222,218,194,3,10,243,220,90,28,176,95,174,69,203,69,187,23,246,195,2,133,142,81,242,69,114,140,224,19,77,129,59,123,149,238,145,187,158 };
    byte_vec_t pk { 4,9,209,162,116,44,171,230,209,214,103,46,73,114,187,21,103,54,210,129,33,205,56,121,66,179,243,29,108,125,117,116,98,124,122,14,26,115,76,73,137,57,195,131,99,167,131,207,77,137,134,103,154,235,196,57,21,25,85,170,17,99,22,172,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 764 ") {
    byte_vec_t msg { 190,225,136,180 };
    byte_vec_t sig { 218,238,234,166,6,158,57,129,90,200,245,78,5,49,205,29,249,109,40,55,110,81,182,252,95,255,240,12,35,255,109,147,156,117,190,178,235,118,137,37,67,61,165,230,99,120,171,65,197,118,182,210,254,255,74,124,5,9,248,151,109,209,177,195 };
    byte_vec_t pk { 4,6,37,13,214,157,148,222,134,47,144,161,14,165,30,131,128,43,171,217,245,153,74,209,63,173,127,88,108,154,142,181,197,218,141,114,17,245,215,211,112,69,82,161,224,62,177,103,203,101,150,124,227,54,85,183,127,196,90,93,99,161,57,251,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 765 ") {
    byte_vec_t msg { 122,90,224,86 };
    byte_vec_t sig { 181,42,43,111,115,160,144,109,197,30,19,145,246,145,46,78,100,148,179,116,233,233,17,18,91,72,96,234,194,9,121,122,88,230,118,118,147,236,79,164,49,207,40,68,120,50,3,126,188,255,209,218,49,198,95,180,227,172,2,217,55,107,253,43 };
    byte_vec_t pk { 4,55,85,234,60,35,89,222,32,97,40,45,246,210,197,76,187,3,229,152,98,207,165,166,0,171,84,236,155,168,151,129,20,91,108,93,6,86,128,90,25,145,223,227,79,207,147,161,119,216,47,35,249,104,228,223,134,123,96,43,230,48,57,188,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 765 ") {
    byte_vec_t msg { 184,95,202,33 };
    byte_vec_t sig { 83,76,36,84,64,176,130,136,50,57,182,98,170,4,131,91,120,73,64,194,213,192,60,173,227,115,69,217,242,33,132,159,64,218,111,78,100,206,219,209,203,101,63,47,36,75,32,240,218,86,176,250,27,17,198,31,108,72,60,236,140,251,203,191 };
    byte_vec_t pk { 4,79,104,121,237,197,226,29,13,109,194,152,99,37,186,188,127,99,44,206,63,46,153,153,125,107,165,157,144,139,22,123,157,196,51,251,47,204,154,85,127,53,118,234,220,1,158,178,54,149,239,15,197,35,174,116,53,65,94,154,102,116,114,132,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 766 ") {
    byte_vec_t msg { 182,91,223,131 };
    byte_vec_t sig { 228,90,7,196,113,202,60,110,220,147,216,22,57,35,141,18,83,180,41,6,231,239,214,239,36,48,35,1,26,115,113,91,90,48,193,186,238,113,152,48,161,47,84,119,41,7,189,225,155,0,221,75,83,208,11,149,243,129,47,40,183,102,207,151 };
    byte_vec_t pk { 4,163,198,28,205,228,12,107,182,119,178,254,117,46,82,42,231,50,50,97,49,225,66,68,123,45,253,209,218,47,235,176,117,220,113,77,11,38,72,138,32,186,246,174,92,34,207,81,217,60,85,116,111,121,24,15,254,230,126,215,166,119,150,54,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 766 ") {
    byte_vec_t msg { 131,105,216,195 };
    byte_vec_t sig { 91,186,108,114,37,128,11,110,75,1,131,64,25,190,128,129,23,219,19,170,28,83,78,171,23,152,183,118,101,203,208,155,221,190,98,220,152,43,80,172,34,55,26,120,95,114,72,131,33,220,141,115,147,244,21,235,13,95,224,134,144,186,15,203 };
    byte_vec_t pk { 4,14,0,72,143,32,170,182,222,121,175,186,201,96,170,125,248,153,195,37,26,185,132,177,135,167,29,238,45,113,233,63,223,207,113,240,229,48,93,100,247,66,98,1,7,1,76,117,118,175,180,96,135,19,163,175,2,231,221,2,197,18,48,226,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 767 ") {
    byte_vec_t msg { 95,96,178,126 };
    byte_vec_t sig { 190,204,118,101,70,167,96,199,177,113,166,243,223,252,159,225,10,201,109,86,93,39,143,60,95,67,252,5,83,225,93,131,231,199,102,175,123,8,201,208,187,248,132,160,141,116,132,193,177,36,204,230,75,139,159,52,32,224,60,143,105,149,97,214 };
    byte_vec_t pk { 4,155,138,60,147,160,191,123,64,54,250,203,135,85,129,27,195,142,195,163,216,94,11,179,183,244,32,57,194,240,196,130,137,79,124,70,177,17,10,41,170,90,253,3,17,157,34,109,190,177,220,58,92,40,32,222,205,101,19,225,100,210,230,168,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 767 ") {
    byte_vec_t msg { 80,172,14,98 };
    byte_vec_t sig { 156,251,88,196,201,80,254,244,234,245,48,14,134,118,16,58,222,84,209,39,75,204,49,155,187,37,210,206,168,114,221,142,157,206,171,217,74,189,179,60,12,162,167,95,40,48,79,137,86,26,116,201,171,96,145,127,117,242,137,239,220,52,239,166 };
    byte_vec_t pk { 4,31,44,139,60,165,225,166,109,174,186,228,33,219,9,144,79,73,74,206,58,47,55,251,189,42,5,229,231,125,83,246,30,246,64,24,197,117,37,116,4,56,223,223,54,63,235,166,9,227,252,139,32,3,248,103,90,199,33,31,205,238,85,9,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 768 ") {
    byte_vec_t msg { 231,233,250,192 };
    byte_vec_t sig { 19,162,207,87,32,234,228,137,135,39,156,86,164,135,173,165,41,94,145,31,118,247,138,162,214,103,92,145,86,153,223,13,199,196,27,75,99,85,121,95,30,201,203,116,174,240,98,242,30,24,23,61,42,210,234,231,194,219,237,245,111,219,196,140 };
    byte_vec_t pk { 4,145,91,111,64,65,162,117,241,225,51,60,158,218,100,177,206,200,51,141,226,37,178,122,102,90,52,194,79,220,169,98,195,119,46,149,14,111,223,85,72,27,2,210,118,110,225,244,188,78,48,92,108,188,142,127,115,157,162,69,242,108,175,214,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 768 ") {
    byte_vec_t msg { 252,104,75,12 };
    byte_vec_t sig { 11,189,250,56,10,118,96,172,18,175,196,107,72,227,219,213,70,183,192,49,176,183,137,36,231,113,120,169,104,177,222,99,254,215,16,98,188,18,185,206,8,243,227,102,47,82,25,3,154,80,110,89,128,173,97,67,58,219,197,142,196,27,5,170 };
    byte_vec_t pk { 4,252,142,58,148,34,110,61,76,152,59,173,140,131,147,242,9,165,172,154,63,100,166,44,24,28,170,254,188,145,96,206,7,107,195,186,223,139,154,212,255,82,19,81,105,174,231,243,33,198,93,228,193,54,178,37,110,156,119,254,147,170,104,146,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 769 ") {
    byte_vec_t msg { 164,134,69,238 };
    byte_vec_t sig { 30,139,237,176,78,204,206,173,161,194,50,75,9,149,184,3,178,72,221,132,214,239,55,217,5,201,43,18,19,170,23,116,200,186,130,83,195,216,83,32,216,182,115,163,153,57,232,142,239,161,159,4,103,48,186,119,227,85,166,62,82,208,215,51 };
    byte_vec_t pk { 4,146,106,149,224,122,221,19,133,1,239,241,237,40,243,29,31,178,233,205,172,178,216,90,196,41,62,196,127,149,16,37,232,80,87,245,130,13,45,189,183,152,106,167,68,139,104,31,123,13,242,133,245,209,123,252,234,176,131,236,56,18,63,152,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 769 ") {
    byte_vec_t msg { 9,235,204,69 };
    byte_vec_t sig { 103,140,226,232,2,244,68,108,170,180,165,9,104,60,22,158,1,5,186,91,202,71,226,14,120,98,224,135,173,173,203,27,175,85,132,122,230,133,111,56,23,117,115,181,208,169,67,197,63,103,173,185,40,2,76,115,57,190,117,188,165,17,217,69 };
    byte_vec_t pk { 4,17,171,180,18,72,119,195,42,25,169,97,164,222,244,20,215,22,141,80,158,225,169,143,217,187,27,235,39,23,62,225,112,60,148,182,2,197,91,171,5,224,229,166,52,247,80,250,18,214,200,196,228,38,141,178,43,16,125,202,100,243,111,2,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 770 ") {
    byte_vec_t msg { 51,19,213,253 };
    byte_vec_t sig { 109,39,196,70,102,125,66,100,15,192,139,253,183,47,195,242,217,90,221,120,238,208,170,176,237,199,126,227,109,230,59,243,130,146,118,214,55,186,199,237,30,187,233,14,140,132,98,6,100,124,30,221,53,7,136,160,97,12,18,50,7,94,214,140 };
    byte_vec_t pk { 4,157,42,179,46,241,155,138,203,183,143,245,99,156,183,161,227,26,52,230,171,227,86,202,78,168,208,75,5,85,225,29,196,94,2,88,28,128,60,108,201,65,81,214,178,129,242,154,87,233,59,189,109,150,207,194,224,209,54,200,115,7,218,92,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 770 ") {
    byte_vec_t msg { 23,162,238,150 };
    byte_vec_t sig { 205,223,225,89,12,243,96,79,154,80,72,222,71,144,194,224,245,175,222,160,61,194,254,250,83,95,1,190,12,9,25,149,209,24,189,102,29,47,16,253,218,38,245,235,91,64,113,124,81,22,88,13,14,212,182,161,11,235,165,200,255,36,159,83 };
    byte_vec_t pk { 4,168,19,110,15,6,25,130,181,119,146,86,9,84,123,163,137,240,115,2,144,115,79,125,90,203,223,107,41,122,207,15,231,102,38,67,134,95,176,248,43,232,40,169,230,121,194,210,143,120,132,239,211,212,139,24,134,177,182,25,9,16,224,108,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 771 ") {
    byte_vec_t msg { 153,126,214,144 };
    byte_vec_t sig { 46,243,233,109,179,205,35,185,167,166,7,213,58,174,233,81,151,131,6,61,233,129,31,197,36,200,53,95,160,168,146,245,119,228,149,227,241,50,62,204,85,68,154,139,122,197,53,52,77,92,180,81,120,235,131,103,155,178,1,49,169,141,145,21 };
    byte_vec_t pk { 4,224,123,78,132,246,46,49,108,144,124,12,60,190,51,135,150,141,103,75,114,53,218,148,227,133,91,115,180,90,146,250,148,112,16,105,59,152,150,72,231,184,252,231,125,70,232,11,243,233,202,30,99,49,19,191,74,178,233,226,95,41,188,174,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 771 ") {
    byte_vec_t msg { 193,66,48,78 };
    byte_vec_t sig { 88,169,140,28,140,222,176,151,154,123,139,37,226,96,61,56,92,127,105,199,26,129,101,77,170,197,198,54,43,13,159,132,12,5,199,125,181,139,188,176,34,145,60,126,20,190,241,13,73,91,24,200,45,197,142,250,194,82,123,143,65,189,38,89 };
    byte_vec_t pk { 4,196,184,157,95,39,144,70,107,147,182,24,199,239,224,101,155,180,61,156,25,240,132,20,74,105,138,36,217,94,173,232,71,207,68,23,218,214,193,207,184,87,120,250,246,56,148,24,124,69,85,255,55,211,195,214,227,104,6,43,102,188,188,61,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 772 ") {
    byte_vec_t msg { 107,211,195,72 };
    byte_vec_t sig { 63,8,177,77,206,194,151,86,161,26,29,25,121,183,108,170,223,53,228,72,162,57,79,50,213,173,203,145,67,90,255,150,62,138,45,13,119,177,12,159,137,24,239,136,7,110,209,188,27,93,206,168,225,251,77,40,24,104,96,86,33,84,74,192 };
    byte_vec_t pk { 4,97,138,111,100,142,85,253,181,192,54,225,58,66,23,99,25,122,45,253,77,233,32,182,187,197,12,97,126,222,174,199,140,236,198,126,89,25,196,31,85,76,197,37,42,205,187,94,205,254,11,22,131,32,173,52,61,5,247,149,64,59,204,12,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 772 ") {
    byte_vec_t msg { 49,236,15,203 };
    byte_vec_t sig { 198,44,211,255,143,61,242,6,223,111,222,11,75,135,88,86,54,25,45,205,210,75,150,98,115,44,162,159,208,62,154,198,155,19,238,93,104,11,254,101,144,138,84,188,252,85,71,145,1,141,218,215,120,182,70,223,116,207,162,122,70,30,78,230 };
    byte_vec_t pk { 4,56,136,34,187,186,241,236,64,160,196,24,170,248,57,123,61,163,154,62,244,142,252,67,25,218,155,234,83,18,40,247,253,166,247,208,210,54,178,126,172,207,15,209,74,173,107,202,84,111,144,3,106,79,41,20,50,118,135,136,81,1,26,126,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 773 ") {
    byte_vec_t msg { 18,18,242,30 };
    byte_vec_t sig { 194,108,252,167,140,132,228,234,7,113,123,124,234,51,119,17,96,113,200,8,242,59,47,248,44,59,248,233,144,94,34,43,56,0,152,224,82,243,145,78,221,196,126,5,111,228,133,98,26,7,49,6,119,194,248,237,181,114,67,147,248,91,224,87 };
    byte_vec_t pk { 4,152,136,36,46,126,181,31,78,141,21,103,80,210,184,41,30,83,156,225,68,108,0,152,211,168,206,70,184,173,85,230,142,168,182,240,199,241,229,146,72,145,247,238,198,2,26,197,54,165,186,135,82,37,35,145,131,196,184,105,25,67,111,123,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 773 ") {
    byte_vec_t msg { 197,146,203,35 };
    byte_vec_t sig { 171,71,252,252,43,250,115,85,214,173,45,232,97,248,143,134,170,206,235,210,157,60,120,167,103,38,79,90,192,111,117,223,226,134,35,179,211,86,107,110,9,33,98,135,57,125,155,168,254,37,214,250,23,44,238,185,81,29,226,112,106,127,63,196 };
    byte_vec_t pk { 4,70,142,112,31,235,165,234,224,247,93,253,190,239,214,136,59,167,105,2,88,81,37,176,215,109,66,25,221,20,141,76,199,72,15,165,86,110,2,106,68,79,53,214,66,230,204,202,215,192,57,170,133,234,101,10,229,44,221,94,69,36,142,69,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 774 ") {
    byte_vec_t msg { 26,99,96,22 };
    byte_vec_t sig { 92,149,10,157,231,175,99,217,122,2,220,58,236,197,198,64,239,253,126,247,52,181,133,14,139,138,153,106,27,109,23,108,46,125,44,168,29,232,131,250,87,121,247,139,57,20,25,61,239,64,88,113,149,226,65,10,186,215,75,135,203,18,220,249 };
    byte_vec_t pk { 4,106,112,240,44,62,134,124,141,69,207,151,79,240,94,109,144,34,232,12,108,124,70,149,111,68,195,176,122,97,9,162,81,100,17,145,211,186,234,247,132,100,54,213,23,193,54,46,152,131,74,135,222,81,5,133,67,25,180,8,51,254,80,193,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 774 ") {
    byte_vec_t msg { 247,29,10,69 };
    byte_vec_t sig { 247,54,54,182,231,250,204,104,127,86,100,15,104,69,75,41,135,86,77,165,48,210,195,141,129,129,57,128,214,226,183,178,71,6,64,64,163,195,138,25,42,62,66,197,199,21,216,126,147,229,127,12,83,153,76,232,129,245,37,95,44,177,75,197 };
    byte_vec_t pk { 4,169,161,170,221,36,68,53,30,61,231,67,214,69,212,222,42,231,255,190,62,172,111,177,55,81,36,227,135,238,26,148,105,177,132,197,234,105,101,167,142,166,141,173,141,60,152,138,155,147,120,204,70,28,121,115,34,204,173,191,94,65,1,173,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 775 ") {
    byte_vec_t msg { 12,22,107,174 };
    byte_vec_t sig { 170,190,178,206,63,82,71,1,49,241,65,0,107,135,173,167,86,109,35,12,69,204,163,138,84,53,38,141,110,125,187,207,246,56,213,109,192,78,217,67,200,13,34,80,74,133,229,52,104,226,24,6,74,104,43,238,13,47,139,177,171,60,59,148 };
    byte_vec_t pk { 4,165,83,121,100,128,89,206,120,129,134,144,173,194,222,16,227,111,27,241,7,15,123,17,78,166,95,120,137,4,40,52,114,218,101,237,251,156,23,12,142,166,38,37,14,154,236,17,144,143,176,10,3,72,54,199,124,251,80,154,140,24,210,224,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 775 ") {
    byte_vec_t msg { 30,121,102,77 };
    byte_vec_t sig { 91,151,34,190,18,47,100,147,154,39,209,133,179,7,227,115,63,99,48,177,129,188,46,157,178,40,222,174,1,112,148,205,165,32,184,235,226,13,202,114,155,135,143,74,212,183,61,80,49,221,196,240,179,54,39,53,197,30,126,183,36,137,194,203 };
    byte_vec_t pk { 4,109,95,52,244,113,121,33,3,63,47,35,210,207,98,178,30,128,219,20,240,57,189,135,90,142,63,144,108,221,248,103,210,56,16,203,125,247,101,45,23,190,15,172,65,217,171,210,58,18,168,214,230,27,58,234,99,22,127,51,106,215,247,151,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 776 ") {
    byte_vec_t msg { 68,189,214,172 };
    byte_vec_t sig { 44,114,221,48,121,42,250,82,221,154,213,15,132,196,136,158,71,142,242,9,190,184,54,222,137,237,95,203,27,7,142,188,39,215,67,244,9,82,77,21,121,157,81,140,164,206,10,161,128,158,198,36,158,55,244,8,53,130,177,81,145,15,120,10 };
    byte_vec_t pk { 4,211,237,130,162,185,157,47,68,178,214,43,4,54,35,142,6,246,77,225,1,11,133,36,210,155,14,86,5,1,4,73,238,78,216,253,201,141,34,88,48,87,195,155,215,124,224,130,235,188,146,202,86,185,141,29,191,110,115,14,70,63,150,197,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 776 ") {
    byte_vec_t msg { 50,233,45,129 };
    byte_vec_t sig { 6,39,245,171,212,4,18,208,169,195,31,94,25,108,172,209,35,104,45,118,93,112,29,157,108,54,10,28,75,171,165,30,97,0,179,80,17,250,131,48,227,23,138,131,82,59,171,56,21,100,128,194,47,213,204,92,166,229,194,182,72,223,248,89 };
    byte_vec_t pk { 4,102,1,141,195,126,156,237,250,72,130,221,57,22,209,60,135,183,245,207,94,129,117,138,58,88,51,253,125,183,76,158,211,5,208,145,104,243,217,171,212,214,162,223,149,172,82,174,30,92,137,188,167,218,5,160,146,197,9,29,137,78,102,174,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 777 ") {
    byte_vec_t msg { 84,125,105,96 };
    byte_vec_t sig { 242,227,188,22,253,117,158,138,109,224,182,24,120,19,116,229,188,197,172,233,34,234,30,37,167,19,245,224,54,222,20,96,51,182,40,87,148,57,96,142,225,182,134,93,168,146,58,77,178,72,144,192,174,204,27,158,18,182,4,193,79,65,187,49 };
    byte_vec_t pk { 4,91,229,247,254,195,161,149,150,47,152,235,70,116,138,115,238,16,68,62,180,108,244,12,202,82,238,49,120,34,209,244,214,146,125,104,196,232,43,249,45,247,29,127,123,132,18,210,61,24,66,208,89,237,167,57,67,191,51,48,125,9,132,213,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 777 ") {
    byte_vec_t msg { 109,97,115,143 };
    byte_vec_t sig { 79,79,221,248,63,104,209,136,235,70,224,37,62,204,134,33,105,73,214,174,196,126,116,138,107,112,162,183,139,187,201,21,214,37,47,52,24,207,221,164,176,198,110,211,21,185,60,236,40,151,139,159,40,60,177,4,61,90,251,199,227,9,117,125 };
    byte_vec_t pk { 4,219,218,216,98,169,179,187,77,170,195,250,114,53,188,128,169,166,143,147,220,156,79,27,150,59,73,32,148,8,142,217,193,147,10,242,57,49,104,133,219,154,216,4,232,134,123,153,33,142,41,125,226,206,30,45,154,215,175,183,16,2,75,153,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 778 ") {
    byte_vec_t msg { 1,222,191,87 };
    byte_vec_t sig { 226,138,39,255,201,25,182,200,118,216,212,123,136,132,58,21,80,253,95,244,9,171,254,153,53,25,244,5,173,57,113,7,57,131,35,33,143,70,59,240,78,17,241,246,38,20,109,12,158,145,32,16,210,239,182,234,65,238,81,209,38,122,123,16 };
    byte_vec_t pk { 4,156,38,3,164,183,129,22,187,113,241,46,225,11,65,164,217,54,8,250,22,140,207,246,212,204,77,216,214,237,51,188,50,126,79,27,191,4,219,230,153,132,179,140,115,114,90,96,43,72,173,38,14,81,59,221,69,2,205,101,126,244,169,12,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 778 ") {
    byte_vec_t msg { 26,60,100,16 };
    byte_vec_t sig { 9,29,140,162,130,0,25,147,77,255,114,208,173,140,247,113,254,189,33,60,254,199,39,233,17,171,14,192,160,74,40,112,164,24,123,162,246,140,167,213,202,51,166,86,173,194,62,85,141,207,166,197,218,1,11,86,102,63,100,86,131,138,200,167 };
    byte_vec_t pk { 4,26,87,176,50,117,233,137,87,65,185,79,58,46,240,48,11,136,219,248,148,238,10,160,141,164,173,135,82,161,77,209,157,28,101,39,147,186,41,80,67,170,183,26,172,143,119,25,110,2,155,82,117,252,66,25,42,227,1,70,226,149,25,254,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 779 ") {
    byte_vec_t msg { 41,29,224,154 };
    byte_vec_t sig { 12,72,91,38,172,77,253,255,151,112,143,13,99,87,26,21,255,45,161,220,15,74,209,122,187,199,230,13,121,231,55,122,126,135,89,66,138,101,163,74,124,255,201,42,206,152,137,129,252,75,12,169,110,158,156,237,39,142,240,0,117,193,106,61 };
    byte_vec_t pk { 4,151,223,56,242,168,242,198,171,48,31,7,59,196,138,128,2,210,23,220,181,54,216,107,44,84,181,1,198,254,227,73,214,110,241,186,137,113,132,186,195,124,99,201,48,156,193,19,184,77,31,30,222,219,252,190,28,93,107,121,173,82,14,23,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 779 ") {
    byte_vec_t msg { 26,216,171,175 };
    byte_vec_t sig { 41,178,110,227,246,45,19,125,71,122,113,218,152,177,100,225,34,16,134,120,198,32,145,88,136,96,58,243,5,156,158,117,198,184,172,77,110,210,110,6,151,196,51,143,82,12,167,214,246,203,186,232,176,106,226,177,159,142,51,46,229,193,222,177 };
    byte_vec_t pk { 4,172,178,97,39,227,19,255,217,126,227,197,173,181,181,68,177,158,255,71,185,206,48,233,247,68,242,221,129,34,116,178,56,99,210,204,251,156,232,7,66,10,204,24,156,173,181,27,234,241,223,142,90,18,89,202,151,223,79,221,16,184,175,88,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 780 ") {
    byte_vec_t msg { 228,175,12,78 };
    byte_vec_t sig { 91,203,188,26,197,148,167,76,5,162,108,104,223,3,144,106,181,134,45,212,210,191,153,114,101,70,20,55,75,239,128,50,41,191,153,243,49,205,24,186,190,102,186,240,82,170,147,136,14,210,154,236,249,142,41,222,132,83,121,145,215,62,115,75 };
    byte_vec_t pk { 4,113,44,229,230,100,64,133,22,86,90,159,207,155,221,124,7,32,61,242,200,244,175,151,159,140,167,234,217,19,113,128,87,203,26,96,85,50,238,162,120,210,253,149,178,167,9,156,241,115,135,168,95,112,3,254,140,71,72,97,29,127,239,121,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 780 ") {
    byte_vec_t msg { 29,19,75,24 };
    byte_vec_t sig { 92,85,232,206,102,126,107,233,201,126,75,217,150,125,145,246,8,56,34,49,182,252,159,157,42,148,15,67,137,127,67,246,135,209,52,50,242,224,153,221,139,182,26,159,111,111,17,3,89,54,36,27,134,106,123,33,150,9,10,213,149,57,26,239 };
    byte_vec_t pk { 4,2,74,112,21,214,109,240,159,210,19,55,255,238,222,80,123,133,205,108,189,130,15,187,71,155,29,248,172,134,60,32,114,44,241,103,121,21,111,231,31,75,0,106,161,57,194,57,235,105,146,100,163,225,139,126,226,244,59,44,86,100,215,34,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 781 ") {
    byte_vec_t msg { 27,140,34,6 };
    byte_vec_t sig { 61,208,63,215,119,251,106,161,97,192,49,96,154,86,221,175,202,6,75,107,49,132,11,28,174,150,32,110,54,22,114,140,104,20,141,213,250,182,184,167,111,255,205,95,204,228,224,135,173,210,114,233,220,83,141,77,34,89,212,64,230,239,255,178 };
    byte_vec_t pk { 4,206,123,134,8,169,51,191,28,239,213,103,217,198,22,236,143,3,52,59,32,24,43,213,196,162,113,93,176,52,136,127,183,126,10,168,108,83,116,216,232,171,41,216,231,250,205,188,3,14,152,207,172,182,116,254,222,226,58,240,111,115,49,139,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 781 ") {
    byte_vec_t msg { 109,52,132,148 };
    byte_vec_t sig { 49,61,6,146,160,148,227,197,20,87,254,35,220,182,97,97,131,251,20,249,165,219,33,83,241,122,195,156,196,197,155,110,233,1,18,122,115,189,19,248,53,96,182,6,77,151,126,91,167,130,41,105,184,94,102,245,166,5,62,227,128,250,63,28 };
    byte_vec_t pk { 4,154,25,242,57,182,84,244,71,174,40,235,180,161,109,51,242,53,55,251,133,111,202,175,152,157,190,189,156,40,206,126,150,97,250,124,130,162,133,246,244,53,118,201,60,39,68,191,144,191,78,56,155,153,151,5,232,2,81,69,63,174,137,198,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 782 ") {
    byte_vec_t msg { 136,99,177,94 };
    byte_vec_t sig { 3,27,145,73,233,75,77,29,22,78,125,31,63,113,14,217,146,242,134,29,116,96,244,173,181,15,137,119,19,99,202,185,71,15,240,167,62,170,190,177,77,167,112,123,3,240,128,63,126,181,168,2,16,43,68,222,164,213,95,160,125,252,64,69 };
    byte_vec_t pk { 4,38,65,147,201,140,42,190,115,17,175,78,223,62,134,193,70,148,159,55,86,175,134,39,75,20,242,58,212,68,89,68,122,231,54,238,93,168,202,35,2,169,106,102,122,21,221,252,175,123,175,2,9,185,33,131,191,34,66,63,186,153,158,34,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 782 ") {
    byte_vec_t msg { 131,255,131,252 };
    byte_vec_t sig { 152,199,184,152,192,213,255,173,54,220,110,174,216,111,84,86,219,43,209,79,157,220,126,99,43,241,139,245,28,4,21,213,104,55,9,72,27,134,231,139,235,57,248,195,68,166,34,51,206,215,236,58,226,220,111,20,79,65,120,36,135,208,212,234 };
    byte_vec_t pk { 4,245,77,132,195,74,101,209,41,153,193,178,66,192,140,180,219,25,101,200,7,129,64,170,56,118,84,192,1,219,21,213,181,61,17,81,177,20,139,117,137,140,38,224,181,70,239,69,28,206,158,117,192,133,7,119,249,24,53,253,185,82,215,42,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 783 ") {
    byte_vec_t msg { 78,139,234,22 };
    byte_vec_t sig { 179,104,230,210,104,24,53,160,234,173,156,89,152,109,243,69,123,202,37,230,28,214,213,47,116,22,87,183,209,221,245,251,12,193,154,223,38,168,182,89,226,15,154,15,185,228,167,158,150,174,234,8,89,144,249,243,94,242,238,107,91,6,148,33 };
    byte_vec_t pk { 4,196,21,75,221,155,11,220,39,88,245,23,247,174,11,57,190,113,143,60,125,176,212,15,37,52,31,206,83,235,252,213,17,41,204,28,163,35,213,76,239,44,88,44,36,1,235,221,86,21,234,140,241,24,82,94,116,134,179,248,75,234,126,120,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 783 ") {
    byte_vec_t msg { 219,106,50,199 };
    byte_vec_t sig { 1,128,180,12,138,149,203,181,52,43,15,96,202,139,115,252,215,51,61,223,145,12,0,209,62,46,169,103,199,197,170,24,42,254,251,217,118,164,103,137,71,38,31,80,193,82,35,71,60,28,107,5,94,94,108,217,209,190,244,161,188,19,171,188 };
    byte_vec_t pk { 4,97,177,248,124,71,59,44,193,211,169,104,0,5,144,94,128,179,121,245,69,245,56,87,235,174,117,127,8,89,26,52,178,236,103,24,182,90,103,252,94,70,10,174,73,181,249,140,215,32,194,214,146,75,189,151,136,107,221,161,63,135,136,218,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 784 ") {
    byte_vec_t msg { 229,85,155,245 };
    byte_vec_t sig { 104,31,41,37,95,76,212,196,216,123,162,251,104,78,176,224,163,129,91,151,221,177,64,127,207,130,41,42,125,136,230,165,141,86,170,16,202,245,117,75,121,204,38,151,140,147,216,157,50,205,185,234,122,149,47,85,183,194,223,202,69,36,129,102 };
    byte_vec_t pk { 4,199,185,139,15,18,186,68,153,32,56,84,133,136,24,138,249,231,54,73,81,33,106,1,55,134,201,210,137,17,21,171,47,107,31,211,219,151,111,253,221,197,210,59,166,97,19,127,72,110,79,35,59,130,193,34,121,227,233,160,53,145,103,84,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 784 ") {
    byte_vec_t msg { 6,214,191,5 };
    byte_vec_t sig { 179,152,224,190,100,134,183,28,1,194,188,23,115,250,139,203,215,155,248,21,51,55,122,107,246,186,131,160,243,57,3,48,195,206,109,119,211,86,81,94,177,131,117,90,4,96,96,28,94,64,58,144,200,138,220,35,13,125,98,238,116,125,235,125 };
    byte_vec_t pk { 4,61,1,200,206,228,62,137,145,189,189,119,55,246,143,23,123,145,253,194,167,208,143,59,170,96,98,220,10,250,226,63,206,224,244,184,159,181,30,240,30,168,32,189,213,28,34,244,187,235,126,156,20,163,160,167,0,217,56,213,69,175,230,5,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 785 ") {
    byte_vec_t msg { 224,228,98,252 };
    byte_vec_t sig { 163,58,58,91,232,168,75,218,112,52,34,94,135,117,198,36,154,10,82,75,115,8,155,99,173,222,58,61,159,147,128,145,35,83,177,61,238,217,231,105,138,208,235,211,16,210,239,47,210,116,171,22,40,96,150,215,91,1,0,49,70,15,211,247 };
    byte_vec_t pk { 4,115,41,105,0,21,104,208,105,161,229,13,129,218,24,20,48,103,46,180,224,160,246,191,1,236,205,87,198,128,98,35,66,228,77,219,120,9,3,95,135,35,138,61,8,2,43,24,44,68,26,59,103,244,90,1,31,177,147,233,140,208,86,196,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 785 ") {
    byte_vec_t msg { 49,172,108,106 };
    byte_vec_t sig { 36,73,217,190,63,169,20,56,220,68,56,95,169,252,132,187,104,202,1,76,28,196,183,250,237,216,53,5,95,240,97,44,234,202,203,30,182,107,141,145,49,241,0,199,229,82,86,193,119,178,162,124,200,244,243,69,203,120,78,221,96,15,132,149 };
    byte_vec_t pk { 4,206,10,120,18,7,46,175,158,250,29,199,212,79,78,10,246,42,159,251,223,60,40,10,243,211,38,20,252,87,143,5,77,106,162,117,25,1,150,68,220,31,227,84,46,187,137,197,88,63,114,35,178,190,64,119,187,145,31,139,190,127,236,75,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 786 ") {
    byte_vec_t msg { 194,217,199,117 };
    byte_vec_t sig { 60,153,68,58,138,23,103,43,22,97,17,209,23,193,75,48,27,95,7,145,55,223,195,140,28,234,83,215,239,122,242,224,156,177,96,27,92,238,172,226,94,87,167,166,112,33,81,148,242,48,162,224,9,212,13,194,194,32,206,27,83,107,90,28 };
    byte_vec_t pk { 4,38,176,46,240,15,72,10,91,64,66,225,235,223,21,58,80,201,233,167,252,90,70,9,191,15,117,169,158,154,140,241,41,244,13,179,255,243,168,16,80,238,72,99,157,11,161,110,162,170,128,25,50,95,137,50,84,95,101,167,227,241,230,15,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 786 ") {
    byte_vec_t msg { 8,163,131,253 };
    byte_vec_t sig { 74,5,165,152,241,106,207,198,16,7,54,0,49,59,240,150,242,211,19,180,211,140,23,119,106,48,72,181,161,15,149,173,85,91,224,93,86,241,108,213,140,78,148,204,192,148,149,105,197,62,148,55,169,239,139,248,144,184,114,25,81,47,104,137 };
    byte_vec_t pk { 4,109,148,70,169,64,97,244,5,188,54,180,30,184,48,245,136,174,78,91,169,146,255,52,43,65,80,136,102,178,4,105,163,226,44,16,230,23,17,117,201,16,242,16,3,58,23,41,247,65,217,160,47,215,47,39,86,9,211,158,201,108,118,63,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 787 ") {
    byte_vec_t msg { 219,20,191,206 };
    byte_vec_t sig { 203,237,201,58,58,180,42,229,148,108,49,130,72,32,63,128,12,205,198,207,1,218,109,179,194,137,27,245,90,61,220,127,31,71,42,184,38,145,61,100,23,169,252,26,109,140,2,227,133,232,170,27,245,116,142,220,9,133,147,250,248,13,179,177 };
    byte_vec_t pk { 4,60,99,186,172,163,130,46,169,135,76,223,223,210,131,203,157,56,49,168,204,65,194,78,203,36,228,192,185,218,36,54,67,68,33,55,108,27,208,163,147,224,82,108,252,107,130,30,58,144,75,131,31,95,124,113,97,150,193,190,25,240,90,9,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 787 ") {
    byte_vec_t msg { 86,10,14,97 };
    byte_vec_t sig { 151,177,211,81,110,54,203,0,168,166,148,197,120,67,114,156,224,120,200,188,66,233,181,120,169,103,211,146,134,76,130,141,93,158,207,245,179,124,235,37,13,245,40,249,207,234,122,115,87,179,95,43,165,86,41,230,105,21,177,219,247,12,7,4 };
    byte_vec_t pk { 4,179,13,194,248,28,176,208,138,98,231,169,39,90,189,98,50,4,53,72,180,78,104,45,214,238,119,194,150,199,117,216,193,97,111,143,35,158,63,234,114,7,50,4,80,86,102,250,162,16,145,19,124,234,120,211,180,88,191,70,154,122,68,6,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 788 ") {
    byte_vec_t msg { 24,214,236,91 };
    byte_vec_t sig { 18,6,86,165,228,79,179,76,10,217,197,42,52,120,159,150,57,68,93,117,38,3,143,153,154,17,1,51,78,230,31,47,166,18,105,225,182,60,16,192,211,120,84,108,36,150,214,113,31,125,189,164,98,22,139,90,140,91,74,50,210,126,148,121 };
    byte_vec_t pk { 4,154,50,218,231,170,205,221,32,137,147,27,32,214,50,167,25,200,89,0,182,27,93,232,193,29,211,1,1,202,164,231,85,195,208,66,187,57,134,82,114,241,50,39,16,172,126,238,153,107,71,240,53,66,254,169,255,240,193,152,62,87,38,185,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 788 ") {
    byte_vec_t msg { 23,24,210,105 };
    byte_vec_t sig { 85,34,40,19,54,214,163,235,184,162,213,42,196,116,187,50,112,31,173,193,14,110,19,73,133,129,178,60,38,158,202,60,10,186,231,188,95,86,76,168,150,87,22,158,119,212,63,252,107,53,158,202,56,143,175,131,38,59,92,251,227,92,100,34 };
    byte_vec_t pk { 4,126,44,214,236,159,169,38,140,126,104,20,86,184,167,21,101,194,92,246,25,116,53,44,205,168,109,27,136,75,225,246,218,202,173,232,159,95,206,166,54,16,136,40,238,111,210,97,78,28,240,15,67,19,203,72,19,235,214,220,82,178,117,67,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 789 ") {
    byte_vec_t msg { 217,191,22,25 };
    byte_vec_t sig { 188,77,188,163,254,84,28,83,64,172,63,45,57,0,45,166,4,14,18,20,127,94,164,35,156,179,211,148,197,84,94,59,13,96,20,198,40,89,25,210,81,1,236,147,4,55,216,226,50,255,38,56,31,182,228,8,138,23,242,227,188,176,26,35 };
    byte_vec_t pk { 4,206,151,54,254,27,20,81,143,194,88,2,18,29,13,58,192,162,209,156,22,3,202,189,250,10,159,220,237,151,149,191,73,255,172,190,71,236,255,191,110,87,131,109,154,85,99,19,5,20,226,77,227,137,104,248,93,153,116,46,31,81,254,70,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 789 ") {
    byte_vec_t msg { 127,184,64,120 };
    byte_vec_t sig { 152,197,24,32,7,134,169,242,131,163,202,226,13,29,128,113,46,105,136,124,37,78,115,49,44,124,123,100,78,166,120,0,70,112,109,46,184,122,242,223,22,253,103,8,164,217,86,184,109,199,250,123,160,168,101,63,26,187,242,12,86,173,216,141 };
    byte_vec_t pk { 4,245,214,73,181,137,232,144,211,122,168,45,124,122,253,203,151,36,35,71,109,54,251,1,115,171,30,50,136,147,62,245,44,133,204,43,1,201,3,2,66,144,66,63,229,123,141,61,26,217,54,182,97,76,234,141,190,196,77,3,194,172,188,31,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 790 ") {
    byte_vec_t msg { 223,39,33,178 };
    byte_vec_t sig { 222,254,66,134,226,169,192,131,136,230,218,181,178,104,190,1,71,27,58,89,37,19,241,9,130,76,31,132,169,183,205,108,29,105,252,254,196,170,251,162,238,240,22,105,245,156,60,78,20,201,178,74,125,80,196,100,30,134,254,21,100,83,100,245 };
    byte_vec_t pk { 4,168,4,98,17,134,162,6,183,72,163,218,36,49,162,114,107,83,0,4,185,116,238,156,189,175,223,120,77,162,78,174,12,196,193,97,123,157,254,245,189,134,207,185,21,224,24,247,29,3,102,25,234,228,142,239,149,39,200,57,77,243,239,63,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 790 ") {
    byte_vec_t msg { 117,64,145,203 };
    byte_vec_t sig { 203,168,66,82,253,8,17,229,37,152,141,160,57,38,217,3,175,137,31,108,25,207,98,148,46,184,222,14,156,93,176,192,170,157,35,228,116,183,182,239,207,157,203,88,176,44,86,132,181,205,137,16,30,167,245,229,38,75,110,25,123,213,113,43 };
    byte_vec_t pk { 4,75,67,91,254,204,82,3,162,34,175,132,109,231,219,165,180,52,200,107,236,145,237,135,67,7,91,69,191,109,3,255,212,144,90,150,187,195,225,4,52,194,223,15,34,125,234,2,130,18,0,189,106,37,254,236,124,205,101,59,26,224,254,196,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 791 ") {
    byte_vec_t msg { 38,132,0,106 };
    byte_vec_t sig { 5,252,78,89,229,250,215,87,89,143,93,237,33,159,166,120,20,224,155,118,121,76,109,215,20,206,85,230,29,83,125,255,120,254,208,163,218,211,217,196,83,92,4,68,28,98,249,24,53,212,67,53,161,210,11,106,124,242,80,228,181,49,133,44 };
    byte_vec_t pk { 4,155,1,10,191,77,196,50,12,254,32,126,28,152,83,91,182,51,194,163,91,38,231,180,5,38,254,128,150,132,12,230,113,25,187,57,189,116,213,237,164,142,155,30,98,44,148,202,220,188,187,108,195,113,237,40,115,3,123,190,177,76,243,253,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 791 ") {
    byte_vec_t msg { 117,54,205,197 };
    byte_vec_t sig { 139,130,73,194,242,90,186,1,62,49,227,209,157,128,49,68,222,86,156,53,144,126,97,46,81,10,159,73,44,109,170,101,52,122,238,160,166,25,40,78,134,58,106,40,50,54,214,195,125,214,95,166,25,129,201,153,125,56,27,177,89,20,54,33 };
    byte_vec_t pk { 4,233,229,238,57,193,76,8,45,45,81,159,189,241,74,85,63,114,108,151,43,150,247,121,135,27,129,97,138,98,183,203,196,245,124,252,27,110,199,24,29,166,194,252,70,9,48,55,86,200,139,116,42,14,255,205,44,168,209,157,222,165,63,204,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 792 ") {
    byte_vec_t msg { 79,6,42,232 };
    byte_vec_t sig { 61,54,229,253,156,163,55,252,214,133,0,112,220,122,167,80,208,190,226,219,17,248,95,105,189,165,180,173,20,186,66,239,5,182,57,14,184,249,225,204,172,120,49,38,108,126,196,33,31,96,215,143,130,219,201,114,81,231,255,2,243,154,64,25 };
    byte_vec_t pk { 4,174,169,3,231,103,134,29,187,170,91,199,130,85,234,139,112,148,141,214,226,36,247,25,175,142,178,205,214,28,51,156,44,222,65,244,152,128,197,48,171,102,7,174,70,61,211,136,175,169,81,71,133,78,215,216,96,194,111,153,43,151,219,192,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 792 ") {
    byte_vec_t msg { 229,248,104,49 };
    byte_vec_t sig { 192,110,63,238,165,12,145,62,252,0,59,100,115,99,252,237,178,192,12,179,237,8,29,219,219,13,26,133,22,43,126,51,248,11,186,242,155,206,61,95,66,139,9,249,101,188,7,111,0,220,109,134,229,123,227,224,110,93,181,203,42,144,229,97 };
    byte_vec_t pk { 4,75,248,125,174,118,67,114,88,137,141,176,154,150,59,234,225,138,20,129,217,160,118,68,32,235,37,175,96,82,127,78,218,168,149,172,101,219,113,218,170,235,45,133,101,71,242,78,229,29,198,69,232,45,140,78,191,229,239,4,155,181,94,137,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 793 ") {
    byte_vec_t msg { 161,130,5,255 };
    byte_vec_t sig { 27,46,8,13,15,195,224,224,217,68,56,27,41,37,1,231,159,241,128,86,131,21,216,224,205,201,27,111,255,131,78,23,5,79,209,178,1,94,3,40,168,193,67,127,227,1,51,207,165,93,119,167,73,171,201,85,107,160,13,230,255,146,48,245 };
    byte_vec_t pk { 4,83,106,193,14,171,103,114,138,117,154,77,92,95,101,69,116,124,243,192,29,205,198,44,152,192,175,216,243,102,224,67,130,138,21,45,0,44,175,165,253,20,57,130,31,194,163,158,131,230,32,158,143,153,84,227,247,31,159,217,218,175,85,9,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 793 ") {
    byte_vec_t msg { 118,82,0,96 };
    byte_vec_t sig { 221,148,95,40,167,153,78,81,236,56,151,245,128,145,133,155,89,202,45,134,63,210,5,246,191,110,201,70,196,119,65,9,221,104,249,42,230,250,18,229,136,34,81,151,49,26,162,239,185,49,30,44,193,115,5,56,143,80,128,171,27,9,68,242 };
    byte_vec_t pk { 4,50,139,67,254,219,233,249,173,114,241,223,138,184,208,32,104,49,21,7,110,223,235,69,242,34,11,86,236,109,116,248,18,215,67,209,91,211,131,135,105,88,109,178,15,94,99,147,44,119,43,141,245,187,27,123,171,145,8,172,71,250,255,118,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 794 ") {
    byte_vec_t msg { 83,6,234,109 };
    byte_vec_t sig { 153,76,132,198,0,47,189,52,105,72,28,205,192,154,57,83,67,68,192,63,113,209,128,65,254,133,155,136,70,88,165,22,67,239,97,47,119,106,168,242,38,39,177,97,188,196,162,12,87,188,230,136,2,42,69,47,37,91,159,91,222,158,15,162 };
    byte_vec_t pk { 4,247,30,157,23,124,143,171,116,203,37,104,29,46,185,253,245,132,38,58,105,48,83,70,120,216,148,145,226,95,104,247,190,24,66,221,39,132,57,236,88,51,215,44,211,178,222,159,34,194,230,197,63,91,160,78,168,93,128,79,77,171,170,224,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 794 ") {
    byte_vec_t msg { 100,87,238,157 };
    byte_vec_t sig { 100,92,180,52,29,225,174,243,142,124,195,215,157,46,228,150,119,65,117,90,53,225,166,89,240,30,169,66,85,123,196,177,103,230,1,173,90,208,44,14,225,169,29,6,242,171,225,238,226,0,8,116,160,61,68,226,217,128,242,77,121,26,129,208 };
    byte_vec_t pk { 4,123,23,97,72,132,99,110,99,77,61,230,84,151,47,68,236,156,234,204,255,99,192,4,71,186,20,11,235,230,46,116,73,41,199,90,34,206,237,70,36,184,92,175,64,212,24,6,39,214,163,233,68,248,194,104,1,241,47,181,133,28,27,171,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 795 ") {
    byte_vec_t msg { 187,118,5,240 };
    byte_vec_t sig { 87,239,74,145,132,48,70,190,21,100,108,84,165,4,165,238,103,20,185,38,84,163,7,143,208,170,31,70,199,92,171,57,15,250,176,158,43,161,120,158,208,224,214,202,63,209,79,233,204,102,220,211,100,77,124,126,138,245,202,158,95,134,196,173 };
    byte_vec_t pk { 4,197,36,174,135,128,158,202,204,110,196,90,251,188,54,161,106,38,220,62,202,106,100,212,218,64,241,75,122,10,236,1,197,129,210,220,193,253,182,210,243,110,21,232,227,143,250,35,0,99,53,145,4,16,147,12,109,74,103,92,167,183,155,26,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 795 ") {
    byte_vec_t msg { 242,103,255,224 };
    byte_vec_t sig { 95,86,198,121,64,81,183,41,251,34,98,187,175,136,220,56,149,191,107,120,206,122,49,124,3,158,213,5,136,249,186,23,119,238,118,116,242,106,76,18,124,40,126,43,154,179,89,249,70,178,57,152,154,215,200,120,247,95,232,61,141,65,64,19 };
    byte_vec_t pk { 4,219,135,151,255,206,241,65,175,230,201,87,88,153,194,192,130,183,65,183,255,180,97,250,78,118,181,5,164,87,89,1,83,76,25,10,185,48,238,178,185,37,231,245,247,203,193,55,154,140,215,143,81,209,126,54,58,171,125,91,247,113,135,245,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 796 ") {
    byte_vec_t msg { 115,119,99,143 };
    byte_vec_t sig { 20,6,12,37,132,203,250,115,147,144,42,107,143,255,42,72,169,197,78,51,231,164,8,35,159,121,82,248,224,57,163,8,68,142,144,142,51,31,232,236,197,215,81,92,134,165,232,169,205,212,71,49,140,112,189,244,225,98,135,159,39,74,64,45 };
    byte_vec_t pk { 4,171,123,25,126,219,14,181,37,174,211,171,146,168,89,217,172,104,54,116,123,28,75,27,94,18,106,214,87,237,41,72,109,143,108,79,17,106,45,17,55,159,229,209,39,172,116,119,250,8,185,84,247,242,89,82,11,45,244,37,132,123,104,210,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 796 ") {
    byte_vec_t msg { 23,15,26,132 };
    byte_vec_t sig { 37,242,98,85,201,76,90,150,197,110,189,2,167,251,192,46,87,177,254,169,117,210,148,75,80,16,10,203,144,129,139,112,86,112,37,112,35,203,100,118,68,141,163,47,250,234,105,108,234,131,116,128,73,84,56,85,73,111,123,170,110,135,59,238 };
    byte_vec_t pk { 4,175,64,154,242,214,94,247,227,157,83,39,84,67,206,37,47,136,155,249,223,106,95,21,51,218,10,92,169,58,65,35,187,249,77,226,41,182,147,254,246,173,38,199,55,155,92,243,15,168,59,154,126,151,161,96,244,8,45,59,91,25,215,38,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 797 ") {
    byte_vec_t msg { 133,148,144,42 };
    byte_vec_t sig { 13,218,95,229,226,19,10,168,209,130,18,89,60,105,84,159,10,229,50,12,139,22,252,227,187,94,135,14,209,56,109,228,204,76,210,165,85,52,247,87,139,119,230,125,205,7,53,105,86,14,207,229,67,182,220,101,166,233,163,243,0,52,126,146 };
    byte_vec_t pk { 4,130,91,92,221,55,217,141,16,170,68,26,202,123,45,96,32,120,175,213,200,218,185,153,139,63,194,10,149,209,115,250,154,252,39,131,206,158,161,16,218,15,108,85,183,64,113,159,125,38,144,245,7,225,109,19,66,6,60,53,121,119,127,84,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 797 ") {
    byte_vec_t msg { 45,194,109,44 };
    byte_vec_t sig { 168,197,13,42,22,44,147,226,53,34,188,173,114,170,51,179,221,238,170,176,175,250,48,33,131,187,160,88,150,87,25,100,150,166,38,238,107,141,112,6,176,253,94,105,92,58,86,177,199,97,86,112,191,59,61,155,253,123,200,54,143,26,23,147 };
    byte_vec_t pk { 4,148,127,190,8,29,99,98,146,76,224,235,53,234,0,160,176,242,25,213,247,121,69,192,121,5,147,217,171,86,109,32,20,245,108,163,168,230,150,19,247,98,194,4,133,129,89,147,235,222,141,108,28,27,85,3,27,174,51,251,88,41,33,144,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 798 ") {
    byte_vec_t msg { 154,125,185,35 };
    byte_vec_t sig { 103,98,165,118,171,241,120,89,0,196,34,245,107,108,117,83,156,213,28,255,187,6,163,75,83,161,145,45,171,161,6,109,204,199,23,13,191,150,60,230,50,238,80,197,232,191,0,237,211,20,70,59,87,109,9,252,125,71,79,196,12,119,37,208 };
    byte_vec_t pk { 4,63,169,55,156,63,145,111,196,182,5,104,89,79,121,3,41,225,191,205,53,175,43,128,135,196,120,227,88,102,214,81,136,210,214,79,211,175,31,170,81,138,113,160,141,94,18,46,141,28,159,91,91,4,110,233,52,54,244,64,176,166,170,111,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 798 ") {
    byte_vec_t msg { 178,221,66,242 };
    byte_vec_t sig { 34,233,149,68,138,59,2,34,34,11,2,108,169,85,197,113,151,89,48,108,27,170,80,29,18,1,48,199,160,209,7,123,152,24,67,137,212,34,251,252,104,153,112,51,40,231,135,21,114,198,166,33,46,77,183,178,167,5,212,119,23,75,228,59 };
    byte_vec_t pk { 4,108,54,7,65,113,124,29,197,105,211,131,210,98,11,46,103,40,229,12,231,182,177,40,208,30,5,141,169,197,33,229,9,252,133,233,20,10,40,233,24,210,42,23,79,200,204,234,31,95,205,23,90,199,191,68,9,5,157,117,179,250,200,153,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 799 ") {
    byte_vec_t msg { 223,92,149,137 };
    byte_vec_t sig { 6,52,22,165,178,74,215,117,32,100,36,38,122,60,97,76,171,66,180,62,217,30,61,154,64,131,79,177,164,217,5,25,59,136,111,99,251,46,251,70,26,24,137,8,48,193,97,56,240,132,46,6,0,2,81,124,149,36,108,149,206,47,120,74 };
    byte_vec_t pk { 4,190,160,6,58,202,128,236,206,157,221,37,33,19,152,60,183,4,222,156,56,129,187,142,144,240,149,72,18,61,156,27,172,238,92,43,207,106,69,10,104,5,55,86,60,47,167,96,182,6,251,71,214,55,131,217,25,25,251,242,145,229,244,255,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 799 ") {
    byte_vec_t msg { 104,58,179,225 };
    byte_vec_t sig { 11,191,212,116,124,70,47,223,119,243,182,92,202,39,213,219,23,35,17,182,240,52,215,180,65,61,63,227,74,177,188,19,214,164,147,118,210,12,59,9,108,243,119,31,187,251,189,232,212,160,205,180,51,95,165,132,247,92,67,39,87,79,11,185 };
    byte_vec_t pk { 4,88,189,152,20,161,13,236,26,236,117,165,251,78,211,169,150,109,100,82,52,202,83,236,113,168,135,141,37,239,41,157,152,105,169,231,74,184,20,114,57,69,20,200,18,132,229,75,181,173,70,205,88,233,98,41,59,24,73,73,42,195,234,85,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 800 ") {
    byte_vec_t msg { 84,234,185,248 };
    byte_vec_t sig { 148,135,254,16,153,133,185,243,203,253,205,255,78,168,55,173,132,211,173,107,71,190,84,252,24,118,30,66,218,31,112,225,114,20,249,243,105,159,205,181,29,252,43,186,210,80,164,165,26,153,120,51,228,88,229,139,70,1,99,137,77,170,27,28 };
    byte_vec_t pk { 4,204,228,66,141,129,68,120,139,119,190,233,246,173,170,179,110,19,182,68,214,143,159,180,67,37,235,8,30,78,157,36,253,159,35,245,151,31,157,67,96,63,229,237,34,94,114,104,69,117,148,17,24,6,172,173,196,221,73,21,231,35,135,153,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 800 ") {
    byte_vec_t msg { 245,119,161,251 };
    byte_vec_t sig { 180,174,219,132,165,129,115,245,112,6,153,115,177,44,123,8,182,56,104,252,202,195,220,245,166,176,184,46,55,34,150,143,104,50,102,190,70,209,236,156,174,45,157,58,226,150,106,2,193,36,90,208,230,178,221,21,74,2,184,71,32,23,32,206 };
    byte_vec_t pk { 4,82,148,55,204,204,89,178,119,254,117,63,104,120,227,167,252,245,249,131,131,202,191,161,55,113,253,18,87,218,220,209,98,236,247,18,255,188,38,233,205,79,75,198,73,58,236,80,75,13,203,15,10,127,48,131,185,238,0,55,209,144,150,159,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 801 ") {
    byte_vec_t msg { 251,147,189,148 };
    byte_vec_t sig { 176,198,85,225,135,75,157,58,199,165,63,110,210,241,94,86,136,150,164,67,147,221,178,64,136,243,84,1,162,203,13,1,232,63,222,147,186,165,208,227,181,38,115,233,219,33,38,49,230,133,88,173,237,191,110,204,202,154,31,154,73,71,33,91 };
    byte_vec_t pk { 4,98,146,68,41,42,228,129,147,150,2,166,182,230,121,132,29,220,55,47,19,208,178,24,79,54,181,8,48,74,116,43,253,10,65,150,145,69,250,68,70,21,240,131,229,124,192,80,199,7,136,28,251,88,27,97,114,227,150,216,161,167,102,54,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 801 ") {
    byte_vec_t msg { 35,197,57,247 };
    byte_vec_t sig { 98,49,44,40,92,10,230,60,220,24,65,182,123,150,29,83,35,205,150,77,154,133,234,49,182,196,158,96,74,31,119,190,162,178,183,156,227,26,131,185,171,62,109,8,157,245,179,249,86,180,120,55,41,243,205,62,25,57,151,141,34,109,116,24 };
    byte_vec_t pk { 4,113,191,211,227,124,98,215,52,40,223,106,183,33,68,207,241,182,129,39,8,141,118,104,216,16,215,100,219,41,107,144,95,225,252,171,84,155,42,243,168,198,138,168,198,128,251,160,59,131,199,135,179,78,69,58,232,75,60,17,50,156,211,118,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 802 ") {
    byte_vec_t msg { 162,242,83,3 };
    byte_vec_t sig { 45,41,89,148,237,11,242,4,13,53,64,140,215,247,174,36,138,205,4,136,99,238,162,51,131,85,93,228,176,19,80,44,150,228,244,121,123,150,198,202,140,159,81,114,171,66,41,242,225,18,111,79,196,194,163,237,47,114,79,198,165,24,201,23 };
    byte_vec_t pk { 4,15,98,181,44,110,166,135,234,234,67,79,82,179,191,0,202,222,149,132,146,82,61,122,189,188,29,237,244,209,27,124,138,206,70,98,146,199,225,27,8,47,186,106,21,106,24,0,165,13,208,118,62,85,66,210,76,16,97,83,181,231,232,59,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 802 ") {
    byte_vec_t msg { 66,214,126,172 };
    byte_vec_t sig { 90,235,254,113,15,86,19,241,180,25,205,0,89,196,156,175,159,5,68,68,192,205,17,170,184,63,186,34,136,112,186,181,22,34,234,5,226,97,248,233,29,47,134,5,187,43,206,201,225,243,10,22,66,206,171,192,57,9,56,70,135,145,114,184 };
    byte_vec_t pk { 4,129,123,188,115,58,77,87,60,233,93,223,129,51,120,53,222,3,28,103,89,86,24,219,87,244,238,9,2,92,164,243,79,55,203,180,46,140,252,239,223,88,28,161,125,11,20,222,14,212,198,77,242,17,204,189,153,167,33,130,172,179,53,31,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 803 ") {
    byte_vec_t msg { 84,21,4,220 };
    byte_vec_t sig { 212,190,251,136,28,80,171,161,192,149,153,185,121,15,191,118,128,47,183,188,227,54,141,247,76,110,205,108,149,232,42,172,9,10,50,97,188,0,200,72,114,150,100,148,84,95,93,207,163,184,175,119,82,109,201,144,11,138,22,141,197,62,146,139 };
    byte_vec_t pk { 4,64,160,194,230,30,186,104,132,115,127,135,177,226,251,163,8,207,227,253,76,164,188,150,32,188,199,11,62,159,22,116,37,193,200,25,126,105,78,253,129,238,122,6,48,250,137,180,32,143,223,56,104,239,63,83,186,71,15,62,214,185,140,163,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 803 ") {
    byte_vec_t msg { 125,136,215,102 };
    byte_vec_t sig { 233,13,121,40,112,141,9,242,131,10,130,236,200,244,226,235,153,145,255,251,149,117,4,20,185,125,87,16,7,204,181,112,144,13,157,108,165,231,156,64,163,87,90,73,218,11,151,113,196,15,192,17,181,219,43,132,140,65,255,78,221,228,40,233 };
    byte_vec_t pk { 4,149,153,45,87,2,50,193,1,193,213,102,163,81,166,192,97,241,153,132,244,56,16,218,61,253,201,117,243,213,252,230,8,155,158,34,70,100,31,184,74,159,238,84,65,25,67,11,188,143,49,169,173,135,118,155,27,16,171,160,40,54,86,115,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 804 ") {
    byte_vec_t msg { 133,189,108,210 };
    byte_vec_t sig { 229,86,152,179,159,121,196,16,175,200,44,127,48,113,206,123,1,48,12,197,190,178,167,66,51,229,196,176,223,52,107,11,61,37,223,245,240,227,240,113,210,107,60,81,193,5,99,158,209,24,232,139,75,151,78,2,177,180,96,37,100,15,27,155 };
    byte_vec_t pk { 4,151,224,192,167,130,198,196,45,127,117,42,223,230,182,29,150,80,14,254,250,229,85,69,170,183,243,31,125,160,40,118,99,198,240,131,59,70,181,10,165,182,248,48,203,127,154,114,150,180,6,14,173,105,76,184,229,140,94,184,159,197,91,128,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 804 ") {
    byte_vec_t msg { 159,7,42,139 };
    byte_vec_t sig { 187,214,30,151,171,27,59,103,4,248,182,68,123,24,242,145,220,144,132,216,191,42,214,144,250,172,108,65,159,51,87,34,132,105,120,92,175,190,246,130,129,102,198,2,141,80,146,131,71,192,71,244,16,20,195,180,33,20,161,225,145,159,26,226 };
    byte_vec_t pk { 4,63,84,100,148,52,14,145,240,64,145,206,124,200,124,5,204,22,154,202,165,191,42,142,240,85,78,105,103,228,160,124,176,60,82,45,158,1,227,111,119,75,227,133,151,125,131,83,53,175,138,112,164,32,62,143,104,68,46,34,232,250,106,173,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 805 ") {
    byte_vec_t msg { 162,163,127,39 };
    byte_vec_t sig { 212,62,255,223,188,141,166,71,191,16,107,148,153,133,148,206,130,53,230,58,192,213,67,242,52,131,123,0,203,12,55,17,10,150,254,206,52,142,5,97,226,165,51,113,84,201,1,7,233,238,99,158,189,227,133,124,184,78,203,68,151,14,199,208 };
    byte_vec_t pk { 4,119,34,36,233,59,28,179,7,52,219,66,233,168,66,45,12,229,232,108,252,169,65,42,115,229,206,153,223,253,237,90,97,160,203,166,86,248,79,97,80,124,105,88,44,90,32,245,154,177,73,201,100,214,125,48,34,201,124,32,69,225,43,233,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 805 ") {
    byte_vec_t msg { 64,108,228,153 };
    byte_vec_t sig { 93,100,116,68,155,31,155,104,19,231,111,211,8,153,232,95,104,93,169,174,223,164,155,91,20,194,245,196,221,108,251,52,175,188,130,172,179,121,104,22,131,255,231,255,228,18,191,198,190,164,146,97,138,72,246,156,20,60,46,32,179,78,227,114 };
    byte_vec_t pk { 4,80,138,231,7,222,107,178,217,56,90,223,104,45,209,143,25,4,50,138,251,221,76,39,240,41,172,10,187,23,26,13,198,235,72,215,152,86,133,214,223,226,166,5,242,202,9,219,146,7,68,186,166,140,92,246,13,235,98,46,123,49,249,254,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 806 ") {
    byte_vec_t msg { 141,129,59,140 };
    byte_vec_t sig { 12,121,89,144,111,172,171,112,216,121,61,64,73,206,3,59,171,213,253,29,134,155,219,153,49,129,188,85,210,105,149,67,245,116,178,101,95,87,131,5,120,13,174,105,217,125,230,208,255,98,119,10,55,149,221,35,176,13,26,152,120,246,79,4 };
    byte_vec_t pk { 4,211,181,78,213,217,217,222,35,38,229,56,105,141,208,37,45,75,16,32,46,157,200,114,79,114,232,165,159,146,10,206,249,28,217,95,13,201,114,80,78,231,102,245,120,25,35,50,74,219,199,19,255,59,157,105,228,82,123,87,244,131,82,251,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 806 ") {
    byte_vec_t msg { 28,229,61,92 };
    byte_vec_t sig { 5,167,75,157,56,97,241,42,45,118,243,191,226,230,50,107,163,164,12,170,48,122,132,88,73,77,148,159,115,237,87,116,189,109,212,34,209,174,243,199,58,249,72,130,159,235,209,48,96,17,97,44,143,231,252,206,149,177,70,127,237,41,76,138 };
    byte_vec_t pk { 4,226,229,45,253,226,3,18,89,234,29,74,119,136,154,195,246,98,165,121,242,196,244,219,107,91,158,232,65,83,21,43,32,78,92,47,122,78,12,184,209,103,2,96,103,188,50,23,156,175,239,87,89,251,133,28,186,109,149,75,224,125,196,161,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 807 ") {
    byte_vec_t msg { 247,83,178,79 };
    byte_vec_t sig { 43,189,117,241,126,117,167,222,149,16,38,174,248,96,192,251,192,19,63,45,102,9,7,95,172,67,201,40,95,30,154,119,67,113,137,101,236,56,129,72,71,56,74,14,171,194,67,251,46,5,53,52,124,103,3,214,21,30,245,76,70,237,247,90 };
    byte_vec_t pk { 4,146,99,208,185,14,11,130,131,245,41,60,13,166,53,100,19,149,134,136,236,79,242,183,203,216,234,239,195,144,161,124,22,220,240,203,12,247,100,140,145,230,111,149,35,89,8,207,72,96,62,255,76,41,191,5,87,29,244,226,242,90,2,116,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 807 ") {
    byte_vec_t msg { 41,155,201,94 };
    byte_vec_t sig { 240,252,17,45,5,136,17,2,183,204,197,210,78,132,97,56,137,128,178,217,54,171,252,231,246,117,92,103,164,213,60,12,63,49,23,218,10,136,204,136,34,191,175,169,101,230,194,217,96,146,161,235,118,83,115,227,100,203,62,24,59,242,147,171 };
    byte_vec_t pk { 4,49,57,9,235,142,129,115,171,250,149,226,16,111,255,223,73,63,16,245,192,248,155,6,166,241,33,162,89,138,215,53,145,185,39,74,118,20,38,224,12,32,62,174,112,72,201,2,20,102,146,173,137,6,175,104,66,153,166,93,152,133,106,214,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 808 ") {
    byte_vec_t msg { 116,209,63,59 };
    byte_vec_t sig { 125,174,196,41,154,107,45,89,209,135,226,67,133,91,242,167,212,213,12,79,59,226,149,177,199,223,67,52,205,13,198,90,202,170,244,3,106,153,222,220,178,65,85,37,112,156,105,152,122,137,228,5,38,71,18,251,209,53,73,150,200,240,158,213 };
    byte_vec_t pk { 4,48,117,136,201,93,172,136,251,212,136,227,19,56,108,0,138,104,10,32,211,138,100,245,171,71,47,254,100,180,187,43,222,15,97,82,82,115,199,223,85,249,162,39,108,101,25,145,176,134,207,198,247,155,147,179,114,166,146,193,173,29,45,15,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 808 ") {
    byte_vec_t msg { 167,220,189,185 };
    byte_vec_t sig { 163,195,74,219,121,94,47,92,114,174,96,79,134,206,215,138,205,236,202,94,133,105,15,126,221,149,224,235,69,62,184,237,14,37,82,244,95,138,131,99,100,2,4,6,251,128,178,124,119,179,115,100,24,105,47,178,213,217,104,195,240,162,180,24 };
    byte_vec_t pk { 4,251,183,26,99,13,232,173,167,227,82,68,127,158,37,249,216,7,32,130,11,0,82,255,40,15,203,202,249,39,48,219,94,145,34,9,248,159,216,88,52,60,116,109,113,90,5,241,164,82,106,221,40,6,191,75,216,50,203,250,249,223,220,177,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 809 ") {
    byte_vec_t msg { 111,59,188,60 };
    byte_vec_t sig { 14,177,251,253,44,228,92,208,41,246,137,234,199,86,215,20,251,81,109,166,233,255,45,15,109,116,222,239,65,66,247,202,251,134,65,126,105,169,217,38,130,211,120,90,27,53,227,115,57,237,35,95,246,98,59,69,82,37,77,201,55,246,47,31 };
    byte_vec_t pk { 4,8,210,26,168,47,43,32,218,162,150,178,117,179,94,51,44,61,77,76,130,169,92,89,221,72,160,45,70,227,109,97,3,144,21,125,155,92,214,38,249,230,142,167,101,180,74,208,223,59,103,14,59,171,2,11,42,117,38,26,248,173,105,86,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 809 ") {
    byte_vec_t msg { 194,64,209,130 };
    byte_vec_t sig { 129,76,146,59,130,18,145,58,123,140,100,56,14,203,8,160,157,211,89,3,5,183,217,218,46,229,130,124,116,55,203,65,231,183,221,231,114,253,198,210,250,237,115,65,192,80,185,20,139,66,160,186,193,51,155,226,157,83,122,216,131,99,83,105 };
    byte_vec_t pk { 4,231,8,33,36,120,90,80,196,116,202,70,223,103,67,126,238,91,187,153,209,79,93,254,118,125,141,103,185,210,19,182,29,97,160,204,8,40,164,152,187,237,60,95,122,26,52,99,79,172,14,190,15,109,52,209,170,65,9,94,126,171,44,91,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 810 ") {
    byte_vec_t msg { 150,206,201,240 };
    byte_vec_t sig { 95,13,212,47,13,102,33,67,231,202,88,245,223,248,231,111,170,138,12,48,237,173,63,16,3,35,111,135,78,13,179,19,215,253,156,87,88,125,173,246,61,71,195,58,51,228,202,171,253,180,88,121,167,4,72,187,242,167,32,94,124,138,7,236 };
    byte_vec_t pk { 4,67,241,210,215,241,40,24,157,24,179,31,197,118,47,25,115,222,208,138,154,157,248,172,160,93,32,112,2,85,71,163,10,148,245,77,175,222,73,222,90,159,41,34,55,229,164,84,105,107,196,69,63,219,162,199,177,123,126,134,250,210,87,22,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 810 ") {
    byte_vec_t msg { 226,96,143,97 };
    byte_vec_t sig { 177,251,215,11,206,84,26,226,252,123,246,123,40,132,119,20,25,79,107,96,41,126,71,69,150,124,163,196,177,13,120,237,32,2,99,241,236,183,136,110,177,119,96,207,33,191,52,29,111,108,125,44,41,212,226,248,190,28,24,43,14,140,153,254 };
    byte_vec_t pk { 4,72,75,31,185,53,192,4,9,253,0,104,19,143,244,13,74,60,137,69,88,8,246,163,149,112,216,187,151,13,25,214,95,11,98,249,10,150,42,33,169,176,204,125,204,87,129,240,171,225,51,35,155,32,132,205,105,247,209,131,87,37,225,47,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 811 ") {
    byte_vec_t msg { 170,210,39,203 };
    byte_vec_t sig { 40,154,79,225,93,216,234,113,108,222,54,128,146,4,13,160,195,26,62,200,199,110,192,192,214,200,116,213,115,164,185,120,69,173,252,213,43,70,173,229,120,122,197,19,245,55,185,24,117,168,105,226,8,63,95,96,150,172,124,253,58,223,188,252 };
    byte_vec_t pk { 4,62,150,49,126,131,76,61,219,178,14,197,244,251,205,116,127,12,78,94,15,6,105,45,230,141,17,198,24,126,139,34,170,89,24,115,73,149,38,253,130,188,255,78,134,7,64,228,54,175,142,203,197,139,218,91,160,93,181,135,192,118,255,252,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 811 ") {
    byte_vec_t msg { 19,42,47,232 };
    byte_vec_t sig { 142,0,161,197,128,238,33,173,202,115,234,236,108,158,3,205,80,139,47,5,2,158,121,2,229,96,113,250,214,2,138,94,172,163,167,50,52,143,104,13,153,180,148,4,116,212,182,60,85,129,142,108,135,137,163,193,236,199,4,97,28,67,102,161 };
    byte_vec_t pk { 4,169,158,85,106,86,138,9,206,115,213,45,152,199,79,27,111,199,29,228,16,102,56,94,98,92,121,243,151,65,241,71,19,72,20,241,178,32,123,195,207,75,40,66,45,71,32,58,218,111,31,61,21,157,175,246,88,247,250,37,110,8,109,20,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 812 ") {
    byte_vec_t msg { 122,140,198,149 };
    byte_vec_t sig { 161,100,157,254,92,5,127,243,254,16,214,16,3,179,219,2,24,252,206,0,204,184,236,234,39,39,162,96,227,118,138,165,236,33,71,137,202,155,181,27,139,31,88,232,54,244,143,99,159,132,196,214,219,69,211,30,131,228,144,132,8,78,123,231 };
    byte_vec_t pk { 4,97,73,179,20,224,235,29,51,124,112,28,245,219,53,113,58,244,132,13,22,128,221,11,245,45,139,191,109,210,161,237,144,225,135,103,83,157,187,76,30,11,34,185,147,2,75,105,30,5,109,137,212,229,41,232,92,66,241,9,37,239,29,51,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 812 ") {
    byte_vec_t msg { 109,216,102,37 };
    byte_vec_t sig { 239,247,169,80,3,4,153,215,2,95,209,9,223,87,235,170,10,81,154,166,172,185,50,66,12,99,235,31,32,172,15,176,231,224,216,33,189,90,214,51,56,142,46,21,79,105,50,175,241,164,177,49,54,186,19,106,123,135,162,38,64,99,46,33 };
    byte_vec_t pk { 4,72,227,164,27,125,204,96,241,84,188,69,66,82,79,41,93,140,8,61,15,41,103,189,69,28,110,85,223,152,224,113,129,255,62,159,171,74,106,65,119,49,12,182,15,96,23,101,94,86,193,207,80,131,118,186,8,17,184,44,156,181,168,116,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 813 ") {
    byte_vec_t msg { 16,136,167,193 };
    byte_vec_t sig { 235,5,30,123,44,234,102,84,43,29,1,157,64,175,52,254,183,130,238,93,80,154,205,191,186,249,160,229,57,158,133,131,151,33,239,67,135,97,224,193,94,56,132,70,57,52,114,71,153,115,245,60,245,37,195,55,220,140,206,7,95,99,151,61 };
    byte_vec_t pk { 4,137,85,135,228,16,105,46,157,210,143,106,215,33,67,89,12,196,245,156,180,216,156,160,188,230,94,28,186,225,96,167,229,214,251,11,35,82,4,57,197,1,160,15,117,147,85,167,196,90,17,202,226,28,45,117,176,18,182,226,144,236,183,195,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 813 ") {
    byte_vec_t msg { 225,135,39,227 };
    byte_vec_t sig { 138,70,1,140,17,190,155,192,215,88,20,123,44,253,81,100,36,78,76,130,37,70,95,239,8,136,100,17,134,39,20,42,128,53,168,39,106,111,127,95,179,49,23,177,80,71,61,86,33,32,165,109,78,55,216,117,46,49,6,78,5,25,148,12 };
    byte_vec_t pk { 4,234,161,171,181,246,243,185,96,98,136,50,209,231,199,18,4,170,180,249,68,118,49,231,123,228,209,209,95,116,39,20,161,110,182,37,122,77,150,116,182,225,184,177,9,40,126,140,65,103,70,154,172,45,130,20,55,37,132,57,144,129,134,166,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 814 ") {
    byte_vec_t msg { 239,189,111,197 };
    byte_vec_t sig { 244,123,114,14,213,57,84,220,208,12,54,119,115,71,147,245,116,189,186,112,231,66,232,42,159,148,54,26,175,6,178,147,132,154,101,246,31,151,99,94,80,88,105,48,89,57,125,115,76,14,41,62,37,182,228,6,180,174,123,189,232,248,208,148 };
    byte_vec_t pk { 4,223,82,106,180,78,145,89,55,249,192,141,14,193,44,251,58,248,13,183,66,74,11,53,51,142,66,115,61,148,212,114,185,253,243,95,41,199,189,235,209,202,135,27,38,184,85,166,144,253,24,46,232,132,157,246,145,188,124,90,159,115,220,112,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 814 ") {
    byte_vec_t msg { 31,147,246,108 };
    byte_vec_t sig { 162,226,6,234,26,94,221,31,114,49,225,135,195,108,84,113,4,181,103,84,9,79,176,74,183,186,36,85,207,71,54,136,203,240,31,65,114,118,152,28,103,205,223,90,6,32,217,233,236,25,28,171,162,255,92,200,250,28,41,253,1,172,28,42 };
    byte_vec_t pk { 4,153,134,194,179,230,145,54,249,118,163,21,139,221,98,147,108,116,155,35,243,234,231,171,192,150,51,143,189,119,35,156,172,73,147,200,154,30,118,95,202,124,172,154,169,48,36,70,142,174,245,7,40,5,205,155,214,89,77,32,255,97,150,42,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 815 ") {
    byte_vec_t msg { 87,248,131,192 };
    byte_vec_t sig { 73,201,126,238,52,244,69,254,66,198,25,133,5,160,85,242,173,223,54,2,96,206,54,62,242,243,52,143,72,214,47,28,188,170,199,157,132,92,57,251,205,238,113,254,125,229,25,65,146,79,242,125,159,241,193,33,219,58,171,125,130,6,120,151 };
    byte_vec_t pk { 4,230,147,228,75,198,120,164,80,153,104,69,58,164,108,68,247,153,25,245,188,44,126,12,150,169,128,208,181,203,241,82,23,15,203,76,201,148,235,162,30,46,80,33,27,24,130,122,1,178,200,220,119,77,207,227,224,34,108,52,40,157,92,13,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 815 ") {
    byte_vec_t msg { 74,61,221,10 };
    byte_vec_t sig { 129,124,152,87,127,174,17,63,225,163,58,218,66,167,8,252,66,231,169,185,16,1,253,91,214,43,40,47,135,88,232,145,81,122,28,97,166,215,224,143,25,218,221,212,17,106,3,163,8,98,210,6,4,56,71,94,72,79,210,196,104,19,21,219 };
    byte_vec_t pk { 4,212,74,151,220,151,118,240,215,250,191,106,208,25,246,150,61,109,162,39,79,236,55,229,145,211,83,112,28,226,239,120,218,170,29,74,226,161,255,29,106,223,73,121,246,12,209,43,205,116,26,237,167,115,51,201,88,71,4,108,221,32,27,209,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 816 ") {
    byte_vec_t msg { 9,130,117,119 };
    byte_vec_t sig { 131,91,201,157,113,142,87,226,37,156,97,55,143,132,129,18,60,109,147,43,214,177,35,86,245,74,11,29,24,243,40,7,67,249,209,172,128,210,35,52,190,80,150,9,97,6,90,98,181,244,50,190,225,144,56,4,26,25,243,76,76,13,47,251 };
    byte_vec_t pk { 4,180,73,151,28,90,150,85,162,251,193,33,248,48,232,22,158,67,254,226,204,53,232,140,175,225,247,52,92,175,193,118,199,93,169,33,200,1,161,76,43,114,31,200,37,145,34,15,11,41,102,177,25,52,102,48,85,56,206,175,232,111,32,194,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 816 ") {
    byte_vec_t msg { 185,84,144,253 };
    byte_vec_t sig { 134,15,12,188,26,168,50,26,239,13,49,89,147,90,123,139,21,223,28,244,164,118,193,39,86,252,64,99,210,79,141,52,42,37,68,87,64,172,74,203,221,61,218,132,138,89,159,244,234,41,216,109,8,23,9,185,114,76,219,41,202,9,237,187 };
    byte_vec_t pk { 4,218,219,205,244,149,80,8,86,99,104,240,51,191,3,255,183,33,252,205,248,29,76,13,115,75,107,119,11,138,254,90,187,179,50,206,16,65,218,215,44,67,31,73,17,104,111,215,80,173,224,51,54,34,103,51,107,132,32,92,52,65,75,122,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 817 ") {
    byte_vec_t msg { 206,244,214,206 };
    byte_vec_t sig { 141,84,37,128,79,137,84,112,141,72,20,53,72,197,168,119,238,177,172,221,78,222,25,146,158,44,241,216,77,39,205,229,89,39,4,180,4,173,137,211,236,203,115,183,172,80,109,191,21,46,13,251,56,105,104,244,233,253,217,197,151,4,40,10 };
    byte_vec_t pk { 4,133,42,221,129,108,175,179,31,60,41,206,211,86,0,207,93,231,223,154,144,125,221,227,222,238,82,117,76,0,252,79,179,183,55,122,30,173,146,12,9,107,56,99,104,129,56,124,255,238,39,152,33,113,194,239,191,252,159,114,146,140,249,29,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 817 ") {
    byte_vec_t msg { 88,236,97,247 };
    byte_vec_t sig { 14,134,167,48,123,103,32,236,189,37,29,174,141,218,101,14,167,127,56,253,43,40,2,196,64,119,31,214,40,43,49,206,226,170,167,53,216,34,190,195,196,232,93,62,145,193,169,117,219,169,161,57,227,79,53,15,55,33,38,255,193,174,14,252 };
    byte_vec_t pk { 4,33,173,249,253,154,80,78,82,40,1,134,169,54,125,104,184,207,242,71,180,189,164,45,157,138,49,28,237,48,72,170,200,60,254,75,104,177,191,134,62,160,178,41,228,177,205,108,172,5,48,180,187,30,12,2,76,227,165,23,221,47,69,198,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 818 ") {
    byte_vec_t msg { 193,114,185,72 };
    byte_vec_t sig { 244,137,233,28,211,251,3,169,241,133,19,160,76,196,131,209,118,204,218,193,204,217,194,147,210,155,225,21,185,56,188,15,59,181,169,21,107,123,156,227,53,102,27,135,4,227,127,66,249,45,65,103,208,191,157,47,135,165,221,33,133,60,38,156 };
    byte_vec_t pk { 4,83,173,239,253,37,192,201,230,246,219,229,80,90,241,160,202,232,248,134,176,157,12,213,190,80,231,202,1,200,134,178,172,103,225,73,81,163,75,63,173,87,112,250,154,206,170,203,247,184,180,46,211,203,252,124,80,0,168,151,94,152,194,94,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 818 ") {
    byte_vec_t msg { 104,84,239,105 };
    byte_vec_t sig { 180,90,181,250,236,173,208,177,129,37,15,99,136,182,133,92,111,189,48,22,187,5,228,248,184,234,186,180,249,111,0,143,123,90,252,98,156,234,65,22,154,116,6,41,6,205,61,161,48,110,2,89,73,217,149,154,188,0,200,254,156,112,189,137 };
    byte_vec_t pk { 4,255,131,240,167,191,127,99,102,60,106,46,73,223,150,35,213,37,111,46,19,195,158,158,64,228,157,175,121,71,74,196,100,109,183,89,224,84,143,225,40,102,203,147,4,147,81,188,30,108,45,96,39,175,18,210,236,141,31,203,247,51,236,4,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 819 ") {
    byte_vec_t msg { 248,197,173,57 };
    byte_vec_t sig { 191,88,222,76,202,249,190,14,172,176,204,43,231,132,127,166,147,143,67,113,89,29,45,186,107,68,194,19,217,174,135,14,81,86,7,123,165,101,198,158,48,45,207,47,4,165,136,176,45,82,194,22,248,153,7,0,198,232,104,133,145,223,39,136 };
    byte_vec_t pk { 4,247,185,54,70,15,223,21,85,52,71,250,30,196,8,14,239,96,185,196,135,30,247,90,150,176,84,183,177,224,67,156,28,127,238,73,212,61,116,123,150,219,185,6,44,58,56,79,14,170,141,215,27,57,94,227,103,107,253,177,84,118,197,30,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 819 ") {
    byte_vec_t msg { 85,12,194,242 };
    byte_vec_t sig { 29,34,45,248,75,136,67,93,158,42,225,130,119,240,206,165,80,147,246,123,60,41,111,33,228,18,17,53,67,236,69,168,17,103,190,217,19,227,62,200,156,224,155,27,77,150,158,43,104,25,3,23,236,75,109,219,241,207,129,172,156,75,126,169 };
    byte_vec_t pk { 4,130,110,190,57,164,199,25,254,167,126,89,176,174,125,24,143,81,252,73,40,76,48,231,96,241,180,238,153,86,209,83,114,127,162,169,40,64,71,188,36,48,168,115,99,102,120,243,92,211,201,45,64,251,67,28,90,106,221,11,176,255,208,227,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 820 ") {
    byte_vec_t msg { 238,17,109,39 };
    byte_vec_t sig { 231,149,202,85,178,233,129,142,102,78,232,24,6,237,68,143,250,198,35,179,221,23,168,11,1,100,248,77,97,91,126,241,195,13,174,131,159,134,71,175,181,92,131,233,209,82,160,196,221,64,77,132,105,115,37,149,135,203,185,179,254,156,151,216 };
    byte_vec_t pk { 4,148,137,35,164,25,144,173,243,168,156,224,126,72,65,173,180,106,36,122,22,252,174,145,123,31,214,226,20,91,8,169,241,8,1,34,193,42,250,234,104,36,163,89,224,60,241,222,246,59,27,174,77,194,221,224,74,86,55,108,96,75,200,201,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 820 ") {
    byte_vec_t msg { 244,125,159,222 };
    byte_vec_t sig { 90,71,31,121,150,29,15,76,216,75,204,222,24,226,174,63,177,174,11,251,108,29,68,174,42,176,110,207,152,115,119,138,97,103,151,186,16,166,133,143,228,78,204,206,47,166,179,108,201,15,186,203,40,202,252,64,54,29,130,200,185,101,242,155 };
    byte_vec_t pk { 4,2,51,185,140,236,96,170,167,246,128,119,91,213,64,174,169,70,100,167,46,117,101,232,216,165,24,53,176,99,37,250,206,189,118,35,78,16,167,151,248,101,40,60,186,51,229,50,96,31,56,90,226,192,105,136,38,53,250,153,99,62,245,225,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 821 ") {
    byte_vec_t msg { 50,5,236,139 };
    byte_vec_t sig { 173,46,138,43,123,183,14,115,248,252,58,26,23,221,176,110,119,18,4,158,188,133,214,210,82,143,213,132,243,75,46,85,144,102,158,167,124,108,182,177,161,85,42,88,247,89,132,170,86,163,72,199,37,6,24,57,154,126,207,124,203,170,11,15 };
    byte_vec_t pk { 4,16,170,63,183,67,241,91,1,154,32,239,20,142,143,147,189,45,29,0,81,235,106,111,231,245,71,36,93,221,165,108,18,116,143,210,233,240,94,16,24,223,180,209,113,20,215,97,225,177,160,155,173,9,202,3,50,156,209,199,133,234,186,98,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 821 ") {
    byte_vec_t msg { 202,252,30,128 };
    byte_vec_t sig { 93,152,126,186,39,236,160,121,149,116,190,179,28,70,101,117,235,142,63,224,137,25,226,206,100,11,11,62,102,118,144,46,196,45,18,2,43,12,33,9,4,195,118,211,112,46,40,145,75,182,247,214,189,119,110,30,46,92,113,53,153,245,209,190 };
    byte_vec_t pk { 4,197,167,113,58,203,52,110,66,244,23,242,223,50,74,244,84,33,117,150,19,217,223,218,63,71,186,164,30,242,238,53,144,201,214,182,77,55,151,131,90,202,172,161,212,197,98,102,202,184,16,245,163,216,161,35,193,14,61,56,170,230,78,93,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 822 ") {
    byte_vec_t msg { 90,214,9,78 };
    byte_vec_t sig { 117,219,72,28,221,209,194,192,141,163,10,150,225,38,36,4,241,98,255,145,238,151,38,72,179,132,249,139,160,138,11,200,170,58,166,190,176,235,158,60,143,194,234,12,244,225,112,26,146,163,98,71,117,153,156,180,233,138,237,188,80,37,62,189 };
    byte_vec_t pk { 4,254,176,157,228,66,100,56,59,65,227,192,171,70,190,145,79,178,221,246,229,189,211,122,223,180,82,185,90,41,247,203,18,222,160,135,47,229,115,147,242,6,24,80,238,26,136,206,86,191,211,141,27,96,116,216,10,164,175,128,180,230,170,58,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 822 ") {
    byte_vec_t msg { 204,85,57,192 };
    byte_vec_t sig { 73,4,252,183,4,138,109,233,28,244,33,36,38,124,95,166,252,198,19,196,243,231,111,146,162,18,252,23,51,61,125,105,2,50,222,98,235,76,23,101,222,90,30,217,28,58,49,7,161,113,148,94,252,80,51,101,166,194,145,228,204,32,98,23 };
    byte_vec_t pk { 4,104,211,102,89,60,156,168,200,188,111,217,17,63,40,226,55,106,164,176,219,131,39,37,101,189,230,157,248,153,163,178,10,167,186,124,147,101,175,190,207,46,183,41,189,143,104,221,246,117,172,221,6,251,195,217,177,38,126,180,19,199,218,176,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 823 ") {
    byte_vec_t msg { 40,136,61,84 };
    byte_vec_t sig { 119,155,157,241,70,209,17,117,205,203,46,59,185,25,142,154,205,51,204,75,231,115,25,136,191,129,113,212,139,211,24,69,104,174,20,238,51,247,248,157,36,8,40,81,164,119,131,198,106,121,86,79,50,202,108,144,68,177,77,183,91,193,121,123 };
    byte_vec_t pk { 4,107,65,114,253,196,87,126,88,113,31,80,166,224,48,36,83,132,73,244,63,69,162,178,85,243,255,250,255,248,207,150,147,17,180,65,48,52,50,246,154,236,222,125,19,85,7,242,50,65,239,209,248,91,219,8,95,228,121,170,198,159,71,95,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 823 ") {
    byte_vec_t msg { 148,213,148,220 };
    byte_vec_t sig { 106,93,72,208,83,255,94,65,246,154,164,18,71,80,91,105,138,201,173,34,174,210,80,234,238,135,238,210,29,245,128,21,242,143,0,157,84,89,208,93,157,54,120,0,184,182,215,93,231,225,94,173,147,137,248,234,91,59,9,2,78,225,151,231 };
    byte_vec_t pk { 4,155,184,72,149,76,94,217,117,31,208,117,187,121,246,156,18,8,194,196,25,53,89,137,78,56,19,84,216,179,218,171,124,101,129,4,236,162,192,33,75,0,9,112,104,231,1,242,116,47,189,48,195,223,242,15,216,154,188,235,233,59,136,198,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 824 ") {
    byte_vec_t msg { 70,215,223,188 };
    byte_vec_t sig { 228,90,169,66,150,55,181,168,83,200,176,40,112,105,247,186,174,131,162,102,247,174,179,248,179,29,197,170,53,155,173,176,181,177,105,87,130,21,146,174,28,146,136,221,59,116,160,27,46,173,95,91,68,58,15,143,127,107,189,34,70,113,78,27 };
    byte_vec_t pk { 4,50,233,192,14,151,185,47,98,16,232,67,204,96,227,106,19,166,146,72,87,253,93,77,171,66,243,202,12,132,117,182,119,55,137,115,15,46,158,11,67,13,26,172,170,51,228,197,194,167,143,13,228,69,215,177,153,127,9,15,46,189,208,93,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 824 ") {
    byte_vec_t msg { 3,144,147,28 };
    byte_vec_t sig { 12,202,0,193,233,81,239,38,0,86,255,9,155,118,96,242,18,155,161,23,207,72,72,145,70,84,183,171,134,59,8,34,48,17,249,135,153,109,76,135,155,190,240,134,91,214,253,209,29,244,45,22,127,211,248,89,174,165,118,249,67,137,254,58 };
    byte_vec_t pk { 4,20,228,7,230,195,128,244,166,73,207,8,110,49,208,248,85,48,187,185,179,114,201,234,119,27,40,124,58,210,202,216,110,147,22,191,232,69,226,42,174,54,96,72,23,10,59,53,228,171,250,73,41,107,179,193,93,224,182,35,67,70,230,5,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 825 ") {
    byte_vec_t msg { 44,4,146,214 };
    byte_vec_t sig { 241,43,46,193,159,16,251,144,173,178,32,69,33,11,175,230,84,202,56,167,207,102,58,176,105,46,41,18,162,139,85,98,129,89,202,80,92,196,248,132,215,85,225,206,166,156,206,135,186,193,254,54,163,7,101,15,29,227,174,173,183,95,150,230 };
    byte_vec_t pk { 4,239,148,184,57,72,138,142,91,173,49,136,183,102,247,109,160,148,62,77,71,50,116,116,110,22,72,78,221,134,150,37,249,43,72,251,65,29,196,123,191,202,35,212,40,96,56,139,220,116,22,251,124,219,177,7,67,39,124,21,251,129,106,107,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 825 ") {
    byte_vec_t msg { 213,239,178,57 };
    byte_vec_t sig { 64,122,52,134,22,185,183,16,94,59,140,104,173,50,222,109,33,5,119,15,89,39,158,23,226,80,147,178,117,226,123,63,247,91,181,125,234,158,54,88,148,26,233,216,93,0,98,141,29,253,41,63,129,141,107,118,192,65,58,185,247,79,112,82 };
    byte_vec_t pk { 4,49,33,8,33,215,141,50,228,103,232,178,74,77,247,86,248,70,41,104,250,40,250,167,149,32,115,43,120,62,195,74,208,5,188,49,71,205,209,129,77,190,113,24,43,45,24,128,110,141,175,202,46,142,145,211,162,215,81,189,212,52,7,169,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 826 ") {
    byte_vec_t msg { 244,236,119,117 };
    byte_vec_t sig { 246,190,174,158,175,185,203,194,202,181,252,175,112,97,104,212,96,1,164,252,101,20,212,220,106,143,133,67,28,213,214,96,108,133,223,230,203,72,161,78,255,143,212,251,207,12,62,203,112,104,91,208,136,94,139,175,118,228,77,220,103,62,246,189 };
    byte_vec_t pk { 4,146,5,114,235,214,165,138,176,49,32,156,89,59,145,50,123,123,142,240,176,152,162,41,165,243,175,7,97,26,76,166,136,42,86,5,173,174,254,148,242,177,161,206,33,103,216,171,58,69,208,31,8,113,48,133,107,32,194,4,162,49,164,150,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 826 ") {
    byte_vec_t msg { 9,10,187,183 };
    byte_vec_t sig { 159,207,29,210,17,218,103,249,28,131,50,155,188,49,32,190,72,116,249,43,130,93,132,158,176,181,4,180,241,163,84,203,193,192,8,142,98,185,137,108,152,139,71,215,236,230,31,53,167,50,225,230,203,143,28,102,207,255,54,102,107,209,178,147 };
    byte_vec_t pk { 4,154,64,5,219,51,155,187,132,5,181,80,93,35,224,238,86,176,43,155,160,35,50,152,23,166,104,169,34,113,194,197,93,79,239,54,28,124,232,247,114,18,95,35,205,52,211,88,92,198,113,115,253,120,180,12,205,242,70,51,183,141,86,128,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 827 ") {
    byte_vec_t msg { 221,156,135,142 };
    byte_vec_t sig { 59,126,111,32,45,160,184,142,208,249,91,160,151,196,117,194,43,72,233,3,123,219,126,199,161,17,102,104,11,144,238,98,182,170,37,210,49,10,204,236,47,11,106,202,129,230,83,49,185,50,122,44,255,68,186,212,179,151,182,3,38,184,107,37 };
    byte_vec_t pk { 4,247,80,43,181,166,167,242,164,86,243,190,89,103,173,126,94,118,37,217,218,227,241,224,145,95,37,254,70,37,0,104,93,149,242,115,122,49,170,51,80,34,134,130,212,212,130,247,63,227,66,114,131,115,68,97,46,175,3,74,200,196,124,91,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 827 ") {
    byte_vec_t msg { 225,1,89,108 };
    byte_vec_t sig { 82,135,26,110,227,134,194,1,252,11,79,115,169,15,214,103,217,33,46,139,220,13,176,60,237,4,61,188,2,6,57,128,51,19,171,160,2,47,56,105,67,130,150,219,48,183,31,192,58,171,69,151,146,208,194,216,169,19,135,96,214,212,251,184 };
    byte_vec_t pk { 4,113,206,150,203,72,213,135,93,59,73,171,53,37,61,79,208,180,3,149,207,2,1,86,111,58,184,38,189,17,53,76,101,117,247,224,38,228,241,45,4,193,229,74,106,194,119,53,138,225,28,198,204,220,96,235,0,115,244,65,21,199,165,107,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 828 ") {
    byte_vec_t msg { 201,250,196,194 };
    byte_vec_t sig { 2,142,72,27,37,94,177,35,67,173,36,253,113,233,208,153,44,141,234,70,153,166,7,115,213,150,171,189,245,55,90,14,167,131,11,106,252,195,245,196,0,98,131,185,113,29,160,232,202,8,42,25,95,54,201,149,84,181,65,81,61,113,103,229 };
    byte_vec_t pk { 4,84,155,224,95,198,0,188,247,11,4,141,123,67,206,84,167,239,183,220,223,160,143,205,233,243,179,86,86,97,199,52,86,106,150,41,146,90,243,202,51,152,128,18,153,150,84,71,72,169,209,122,125,88,75,52,117,83,144,88,210,4,131,254,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 828 ") {
    byte_vec_t msg { 197,123,135,40 };
    byte_vec_t sig { 168,251,191,127,153,15,132,201,213,182,218,198,77,239,84,27,103,118,40,35,136,104,250,198,160,106,180,179,208,105,245,216,218,1,37,242,59,246,241,136,170,237,28,249,253,59,58,184,16,233,167,129,122,76,50,243,40,230,223,79,114,247,194,46 };
    byte_vec_t pk { 4,72,75,173,138,132,10,151,227,166,228,114,173,197,172,214,184,192,24,176,234,37,2,235,238,50,83,54,37,1,90,104,28,68,32,48,76,116,247,172,71,29,215,55,131,98,214,230,120,74,221,124,85,65,218,179,193,97,190,2,0,68,214,197,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 829 ") {
    byte_vec_t msg { 44,89,117,17 };
    byte_vec_t sig { 21,7,18,251,59,88,127,136,218,97,197,240,221,89,153,134,124,101,123,20,145,115,145,204,135,159,77,9,171,100,73,134,41,114,93,174,1,212,64,213,175,99,165,72,48,80,65,123,186,206,37,238,42,88,80,113,178,55,177,204,76,239,86,184 };
    byte_vec_t pk { 4,197,137,232,23,130,93,30,173,66,239,29,186,226,5,39,202,238,107,210,227,23,180,189,64,212,122,158,125,181,255,244,136,232,201,43,251,25,251,57,148,78,210,31,67,117,209,66,77,146,207,43,120,213,168,72,119,197,3,28,50,153,190,231,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 829 ") {
    byte_vec_t msg { 255,157,28,42 };
    byte_vec_t sig { 15,66,59,231,86,106,232,117,135,74,60,57,86,43,236,0,60,99,52,233,37,171,68,134,142,118,35,153,222,34,47,190,177,244,93,127,217,77,146,71,36,11,149,70,209,20,77,126,230,57,233,194,142,13,86,39,6,242,182,66,119,194,128,226 };
    byte_vec_t pk { 4,91,203,67,83,184,128,92,240,237,62,48,239,189,19,190,13,188,172,103,133,52,66,234,38,184,62,74,129,20,189,187,210,51,129,201,23,228,241,65,146,156,22,140,177,248,189,17,117,112,21,199,34,1,238,102,218,103,127,251,218,148,20,221,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 830 ") {
    byte_vec_t msg { 24,220,51,152 };
    byte_vec_t sig { 28,35,24,43,112,163,229,75,110,235,195,50,171,187,54,18,143,220,247,180,60,144,100,62,39,9,2,240,155,142,142,34,215,144,48,197,38,60,102,201,149,224,159,145,163,34,125,7,132,164,0,202,0,118,248,182,156,2,51,31,87,166,249,10 };
    byte_vec_t pk { 4,227,244,43,77,206,34,40,244,105,101,91,40,74,156,248,26,90,12,58,132,180,89,220,249,90,216,223,244,244,164,226,50,250,181,132,141,151,170,202,228,0,222,35,65,8,42,223,171,39,28,210,56,105,17,14,146,209,106,152,49,146,166,241,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 830 ") {
    byte_vec_t msg { 28,169,114,228 };
    byte_vec_t sig { 255,203,227,136,46,234,55,117,194,147,213,110,128,75,79,169,226,189,36,173,176,36,58,88,69,241,161,180,79,87,104,158,30,108,49,179,2,179,213,18,230,146,246,122,26,140,2,78,139,157,36,81,126,12,105,28,83,145,169,21,131,130,56,52 };
    byte_vec_t pk { 4,35,188,232,247,25,223,6,180,240,199,54,230,63,119,177,28,252,158,193,202,254,132,100,24,109,172,102,254,49,249,10,167,147,144,178,40,88,131,77,45,237,133,0,168,255,9,236,194,110,237,136,221,94,49,84,100,101,42,156,198,74,206,121,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 831 ") {
    byte_vec_t msg { 20,253,252,158 };
    byte_vec_t sig { 203,28,174,216,151,125,252,105,90,169,166,254,11,130,69,254,160,3,59,74,14,161,17,183,253,169,105,217,186,165,77,244,115,244,80,139,8,160,67,79,108,241,249,133,26,170,205,224,85,49,83,115,224,98,210,141,120,137,203,46,144,112,73,73 };
    byte_vec_t pk { 4,104,151,211,210,201,7,235,201,245,13,129,231,51,107,162,116,6,230,11,227,86,128,69,42,106,138,88,9,145,234,98,1,253,11,254,129,81,129,93,75,230,160,22,242,92,176,174,119,71,160,189,34,241,53,140,52,85,108,121,254,163,171,223,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 831 ") {
    byte_vec_t msg { 122,81,174,80 };
    byte_vec_t sig { 40,204,243,181,254,227,152,94,78,82,57,59,150,251,130,188,104,31,68,218,20,226,39,135,5,119,78,192,9,103,174,42,49,160,147,142,153,28,10,188,216,94,102,233,119,193,205,36,136,197,88,91,100,206,36,13,241,41,207,215,106,249,115,21 };
    byte_vec_t pk { 4,172,157,93,175,136,63,249,175,102,183,19,70,102,119,20,214,99,97,124,218,136,110,47,89,157,24,87,117,151,31,69,241,216,244,104,92,245,93,36,62,241,145,10,141,198,187,100,41,142,208,6,143,209,36,7,42,135,101,102,83,170,111,54,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 832 ") {
    byte_vec_t msg { 31,253,97,242 };
    byte_vec_t sig { 223,144,203,177,70,57,6,143,197,98,99,220,211,241,211,48,188,193,29,143,111,42,59,28,71,231,43,159,79,68,133,23,101,36,100,208,5,83,34,99,140,111,108,142,27,5,114,141,74,8,3,198,253,125,34,81,141,132,134,202,194,244,168,247 };
    byte_vec_t pk { 4,205,180,39,112,188,65,229,236,225,74,244,69,77,86,140,148,57,248,234,43,110,164,245,198,242,157,54,227,74,247,64,41,93,13,255,123,229,146,205,36,161,84,64,154,146,134,83,54,249,118,69,192,233,2,22,127,56,205,163,53,144,145,98,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 832 ") {
    byte_vec_t msg { 235,221,29,140 };
    byte_vec_t sig { 102,189,255,114,58,219,111,32,78,95,164,74,201,89,76,242,56,63,140,159,239,76,157,104,237,225,188,141,231,45,126,173,69,14,78,145,108,133,13,106,255,206,83,7,220,70,244,122,146,72,62,85,207,218,127,36,121,136,180,169,109,174,148,215 };
    byte_vec_t pk { 4,22,217,244,84,2,231,62,153,180,221,218,39,41,237,169,52,15,143,14,45,129,128,30,120,196,123,255,105,220,1,244,24,66,153,228,215,153,164,214,93,144,143,235,12,24,2,132,216,159,174,241,249,158,6,12,228,174,252,181,155,109,235,57,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 833 ") {
    byte_vec_t msg { 192,0,150,152 };
    byte_vec_t sig { 94,125,192,21,128,154,36,103,33,158,95,43,157,219,105,94,179,39,168,147,79,242,249,246,25,20,36,108,41,47,135,34,155,70,61,224,69,46,211,61,163,91,178,148,133,158,233,171,41,157,229,225,174,21,140,91,173,218,234,233,239,22,123,139 };
    byte_vec_t pk { 4,152,233,23,42,33,212,0,165,53,126,52,236,78,65,213,55,115,61,112,232,253,56,250,159,77,241,35,206,210,4,173,2,62,218,75,110,206,30,242,110,205,78,93,42,255,113,56,253,48,216,159,42,173,170,168,50,12,70,59,229,38,65,144,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 833 ") {
    byte_vec_t msg { 121,202,4,237 };
    byte_vec_t sig { 240,101,76,229,230,165,213,168,131,6,253,81,175,16,198,187,124,252,190,6,126,197,186,187,206,13,238,255,12,237,121,226,137,119,177,127,179,74,96,253,71,89,109,131,128,25,251,176,198,144,202,181,84,55,55,132,185,234,84,194,19,46,195,26 };
    byte_vec_t pk { 4,60,176,203,65,231,49,255,85,202,43,92,64,216,67,116,222,155,162,204,167,3,118,29,195,61,46,119,22,249,121,126,131,51,81,39,6,25,104,195,177,182,48,237,195,37,138,251,55,220,152,50,93,76,84,2,133,254,207,113,213,146,228,151,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 834 ") {
    byte_vec_t msg { 3,108,100,152 };
    byte_vec_t sig { 130,58,33,102,111,189,203,228,177,207,111,137,247,224,214,174,118,142,56,167,96,205,168,35,99,92,61,111,131,41,212,35,49,19,175,57,185,166,36,192,226,101,111,12,216,110,64,107,14,249,184,205,118,199,215,235,82,183,117,159,99,172,81,75 };
    byte_vec_t pk { 4,126,65,242,206,66,35,47,212,223,140,244,109,222,159,223,4,42,128,168,168,172,214,141,47,97,210,9,220,137,224,90,200,115,83,165,25,64,9,179,165,33,128,144,11,1,183,223,139,36,44,63,155,174,168,221,32,154,151,124,195,180,162,230,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 834 ") {
    byte_vec_t msg { 49,186,164,20 };
    byte_vec_t sig { 143,145,215,19,242,75,246,69,157,178,224,187,2,203,43,30,83,10,232,210,168,210,231,23,172,218,27,154,87,153,76,154,210,236,65,100,16,102,141,52,155,184,94,48,227,255,55,81,3,14,234,26,95,148,154,88,15,228,66,179,5,141,81,23 };
    byte_vec_t pk { 4,130,109,56,205,113,172,69,74,189,236,57,1,50,126,205,72,252,8,207,198,65,83,223,81,68,83,197,243,150,205,167,242,36,171,95,109,183,175,116,56,77,73,127,191,188,24,196,68,97,151,52,204,220,63,105,134,62,238,251,29,78,86,137,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 835 ") {
    byte_vec_t msg { 136,35,227,164 };
    byte_vec_t sig { 209,113,235,6,128,108,214,27,96,240,200,191,116,104,159,138,102,125,114,163,195,124,51,233,60,153,53,190,38,190,229,146,118,105,172,227,72,222,51,221,85,60,143,36,62,41,148,4,41,100,9,76,20,22,161,226,181,170,95,74,225,1,183,163 };
    byte_vec_t pk { 4,11,92,25,169,10,151,98,159,183,190,202,56,202,151,187,54,25,75,142,244,188,137,204,244,11,190,63,112,249,160,131,175,4,238,61,19,247,243,23,234,8,98,145,209,199,244,180,71,212,57,236,124,105,133,38,23,240,251,61,164,25,63,195,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 835 ") {
    byte_vec_t msg { 154,124,199,66 };
    byte_vec_t sig { 249,183,55,116,53,189,253,42,60,185,39,12,51,218,21,127,38,85,27,38,142,184,49,199,158,113,28,5,151,56,148,102,26,92,27,225,69,253,120,53,194,120,73,72,40,225,165,240,90,100,132,14,202,149,205,95,95,89,144,16,46,1,254,159 };
    byte_vec_t pk { 4,77,195,246,56,195,134,65,254,154,220,231,176,72,171,20,18,191,46,229,62,229,70,85,8,65,31,255,234,36,28,74,84,20,164,213,205,102,234,204,99,186,133,180,32,32,196,39,14,121,0,48,71,160,249,21,101,14,31,37,46,40,213,238,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 836 ") {
    byte_vec_t msg { 228,200,68,138 };
    byte_vec_t sig { 68,96,8,84,70,207,176,2,186,130,122,109,240,147,40,188,181,125,224,190,16,122,203,78,235,219,132,3,168,51,20,123,104,85,13,7,14,93,120,248,191,196,134,76,170,181,75,239,135,205,166,56,213,54,50,162,185,10,171,228,204,66,193,217 };
    byte_vec_t pk { 4,74,168,205,31,166,49,211,227,242,197,206,136,28,61,223,43,198,254,190,220,238,42,174,30,119,197,220,115,245,202,57,58,98,201,1,170,32,63,215,68,156,44,56,55,64,170,125,232,237,143,103,179,236,30,162,137,137,174,151,149,38,118,144,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 836 ") {
    byte_vec_t msg { 252,4,188,204 };
    byte_vec_t sig { 57,122,191,149,209,40,13,146,217,43,196,194,251,14,186,109,225,107,235,253,247,248,255,102,27,152,8,144,177,32,244,226,71,75,163,189,75,105,83,7,15,185,18,92,253,198,158,239,84,108,254,121,217,68,135,100,133,69,139,3,194,217,133,158 };
    byte_vec_t pk { 4,52,84,71,49,10,122,152,183,223,187,23,171,192,3,82,35,110,122,214,67,3,222,241,16,13,46,143,59,231,145,199,198,13,145,232,139,234,47,200,60,104,87,205,116,180,110,27,212,78,28,242,21,229,205,134,100,60,195,46,185,239,227,14,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 837 ") {
    byte_vec_t msg { 160,111,147,86 };
    byte_vec_t sig { 1,33,18,73,178,126,228,168,160,9,208,45,124,248,72,212,187,253,213,155,170,101,211,4,194,69,132,51,182,150,133,212,128,112,143,202,226,251,80,249,226,200,9,26,149,125,51,149,128,224,154,209,15,175,151,61,92,149,11,123,194,164,245,118 };
    byte_vec_t pk { 4,235,183,236,47,246,11,46,176,19,156,122,218,170,178,155,169,147,95,198,119,153,166,136,86,157,123,203,128,200,76,95,175,192,90,221,244,3,123,207,217,179,145,212,102,131,85,212,172,124,130,237,142,25,105,150,225,21,129,34,67,139,175,81,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 837 ") {
    byte_vec_t msg { 95,28,225,6 };
    byte_vec_t sig { 214,220,31,47,30,8,150,137,249,60,116,54,162,232,102,58,217,0,157,192,252,13,56,183,39,116,41,17,245,154,206,149,45,71,233,32,108,253,190,44,194,22,5,194,140,228,248,226,11,92,131,209,88,149,219,204,206,77,115,91,141,243,154,144 };
    byte_vec_t pk { 4,34,208,147,112,147,14,6,30,232,151,50,72,238,205,82,196,174,4,109,243,95,75,165,109,83,179,236,7,56,16,34,183,234,41,149,131,39,80,190,254,24,4,42,234,131,227,12,37,161,111,28,87,112,38,62,118,225,100,121,42,91,200,138,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 838 ") {
    byte_vec_t msg { 230,86,20,219 };
    byte_vec_t sig { 189,217,86,120,48,132,117,148,34,212,13,112,177,148,175,239,246,197,173,130,176,68,242,178,234,33,113,36,154,118,126,92,76,208,74,121,210,126,23,12,160,117,166,74,212,198,224,112,166,26,67,174,79,74,171,229,141,206,186,217,237,128,251,107 };
    byte_vec_t pk { 4,254,254,171,20,197,215,203,83,241,210,44,96,155,135,167,24,100,23,180,109,37,88,201,107,168,225,228,125,36,3,137,148,31,85,86,18,233,68,66,80,178,225,240,38,22,186,65,132,213,54,199,133,207,2,176,111,25,138,159,16,43,57,215,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 838 ") {
    byte_vec_t msg { 16,23,136,6 };
    byte_vec_t sig { 64,166,38,83,140,123,226,144,135,39,216,75,64,180,176,203,194,251,71,212,227,8,178,96,88,84,182,147,161,192,100,68,93,223,128,168,121,173,168,28,212,130,227,150,82,234,158,227,36,21,95,230,172,108,45,203,63,189,90,171,241,185,147,23 };
    byte_vec_t pk { 4,36,15,241,87,239,243,113,30,107,60,87,10,56,246,110,215,165,66,237,127,73,178,23,70,229,37,88,238,254,252,172,165,99,92,77,97,7,174,0,212,82,246,190,138,159,247,46,181,129,231,63,29,61,19,4,217,186,54,87,254,150,119,63,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 839 ") {
    byte_vec_t msg { 63,237,134,160 };
    byte_vec_t sig { 223,88,180,128,37,123,102,129,240,101,14,63,3,144,117,179,167,207,239,182,56,98,164,151,184,0,195,56,93,96,221,191,80,204,1,180,63,41,52,132,75,247,53,177,255,40,144,96,77,10,208,118,122,46,144,116,116,194,108,154,39,146,42,12 };
    byte_vec_t pk { 4,1,204,134,236,70,31,119,47,214,142,228,122,222,182,175,162,60,127,136,252,129,84,4,181,52,124,192,138,235,74,157,110,66,48,97,235,59,189,210,129,190,254,226,39,177,253,35,11,201,210,242,21,238,62,118,129,245,67,124,29,59,146,240,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 839 ") {
    byte_vec_t msg { 18,253,111,235 };
    byte_vec_t sig { 103,125,94,77,116,70,187,123,22,185,212,33,201,212,170,1,17,241,54,33,33,84,29,118,97,243,67,154,28,172,61,172,137,88,180,24,108,142,238,5,156,64,74,91,31,169,77,242,55,227,57,73,225,42,45,202,105,150,42,102,141,15,151,110 };
    byte_vec_t pk { 4,188,235,98,3,158,120,85,223,255,170,141,2,118,95,118,154,70,220,226,79,8,98,18,201,215,57,83,251,103,211,69,21,191,112,253,13,121,102,151,115,45,154,37,141,74,68,115,111,248,237,144,189,95,201,133,121,247,132,163,50,85,25,84,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 840 ") {
    byte_vec_t msg { 31,165,159,234 };
    byte_vec_t sig { 172,190,91,179,25,172,40,9,215,233,50,11,118,252,233,174,71,133,174,99,186,20,41,214,84,100,239,195,69,109,74,102,218,134,80,251,69,173,203,2,177,199,156,19,99,13,7,87,116,96,190,124,160,51,138,239,96,94,222,22,254,104,185,25 };
    byte_vec_t pk { 4,126,249,211,81,108,24,175,12,211,255,81,208,184,152,94,4,33,51,90,208,255,177,53,184,102,148,67,67,57,158,132,106,157,123,251,53,114,111,196,214,179,1,188,101,31,156,126,142,28,47,14,158,162,197,117,41,138,135,167,192,23,31,13,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 840 ") {
    byte_vec_t msg { 74,237,6,18 };
    byte_vec_t sig { 107,124,137,127,16,49,91,168,165,9,85,143,64,242,175,94,254,3,124,68,6,16,210,116,222,52,213,7,109,138,50,203,211,13,185,149,24,149,30,119,158,199,180,23,216,81,55,104,236,221,20,226,195,47,16,36,70,65,15,160,70,227,78,127 };
    byte_vec_t pk { 4,95,121,207,170,9,115,32,159,4,11,30,207,4,239,4,180,183,251,254,224,14,22,27,84,61,69,14,63,65,104,35,95,235,254,151,239,157,108,87,44,17,48,182,253,138,132,46,55,15,133,250,202,11,204,95,17,44,40,151,135,197,8,196,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 841 ") {
    byte_vec_t msg { 172,129,17,173 };
    byte_vec_t sig { 46,229,9,194,212,2,218,254,203,73,243,110,40,11,122,83,3,38,160,228,205,59,163,89,46,89,56,228,102,181,20,28,109,119,190,100,203,133,60,158,121,73,107,103,137,254,50,20,119,112,128,218,26,238,141,129,151,235,150,228,242,54,209,224 };
    byte_vec_t pk { 4,163,251,156,206,0,8,85,165,47,253,171,96,33,23,111,99,214,187,19,114,249,138,105,135,9,34,96,4,70,80,19,146,138,91,195,105,75,187,39,172,24,110,27,15,92,107,208,99,100,108,119,240,227,78,44,201,165,230,54,147,61,207,167,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 841 ") {
    byte_vec_t msg { 249,76,8,103 };
    byte_vec_t sig { 195,130,60,5,152,22,241,221,128,199,47,2,206,64,27,224,129,99,73,167,150,32,170,207,197,239,187,128,166,252,35,81,164,47,170,177,202,163,148,185,236,31,40,13,66,73,146,193,236,118,167,179,37,180,134,94,243,61,72,44,35,69,68,38 };
    byte_vec_t pk { 4,199,145,124,139,126,38,92,227,127,83,228,19,247,145,228,232,55,205,47,135,87,181,235,164,167,134,53,212,165,255,177,69,117,150,228,79,42,226,114,57,82,162,20,222,185,250,37,57,144,30,237,33,239,52,107,91,215,197,153,232,113,47,253,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 842 ") {
    byte_vec_t msg { 28,182,155,41 };
    byte_vec_t sig { 64,199,6,202,47,177,42,206,143,6,66,6,150,79,205,226,122,196,89,224,134,115,185,69,130,88,105,105,154,64,179,173,65,79,201,130,89,229,123,254,19,199,123,175,68,50,107,60,233,183,101,186,25,225,115,213,11,169,112,240,108,207,94,23 };
    byte_vec_t pk { 4,44,64,133,179,30,204,89,106,35,68,195,76,127,138,93,135,62,39,235,86,115,59,210,97,206,101,247,76,255,157,152,27,41,251,190,76,85,20,190,159,161,157,206,74,49,116,127,53,104,134,149,106,74,15,142,248,21,158,205,72,197,221,197,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 842 ") {
    byte_vec_t msg { 248,190,191,237 };
    byte_vec_t sig { 64,7,227,111,190,57,252,29,111,113,57,34,43,140,140,69,49,43,165,187,129,243,253,191,215,4,120,102,29,181,104,228,179,255,122,13,68,145,87,195,56,10,191,135,147,113,26,39,48,236,59,190,85,229,179,197,147,201,177,188,201,125,42,123 };
    byte_vec_t pk { 4,236,29,55,24,232,157,125,86,199,149,100,28,67,14,22,19,184,57,96,152,141,181,220,207,131,107,35,241,16,161,204,40,169,221,3,44,186,234,1,225,45,18,51,143,225,30,233,0,253,25,227,228,74,252,164,140,126,185,18,111,61,6,76,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 843 ") {
    byte_vec_t msg { 204,6,198,199 };
    byte_vec_t sig { 190,63,162,249,73,58,235,131,118,137,125,194,197,162,87,102,217,191,216,39,41,188,6,181,138,122,109,16,28,96,142,146,182,104,164,179,170,151,75,134,185,125,92,242,78,203,16,65,33,21,68,11,164,210,84,66,250,205,147,109,64,165,109,221 };
    byte_vec_t pk { 4,146,154,185,101,2,161,80,40,158,77,141,246,135,119,159,11,4,171,89,217,131,161,84,137,62,124,95,7,80,72,98,105,144,91,66,71,126,14,209,90,129,110,62,3,188,215,124,69,2,246,20,252,65,102,116,203,11,248,161,238,36,234,178,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 843 ") {
    byte_vec_t msg { 1,34,55,244 };
    byte_vec_t sig { 167,44,102,224,220,172,43,61,62,56,192,36,23,0,127,112,1,173,41,200,128,102,120,203,170,122,244,133,40,108,226,222,254,58,223,163,164,167,193,49,23,123,116,48,129,39,123,186,206,51,24,181,88,230,110,115,199,209,182,156,99,68,145,248 };
    byte_vec_t pk { 4,184,120,9,158,248,59,181,248,178,249,241,89,244,235,232,150,231,232,67,189,30,248,26,103,46,121,46,246,204,172,59,245,19,205,213,77,220,243,166,85,35,243,16,202,197,247,62,20,173,146,110,114,75,67,61,27,212,225,192,225,210,139,199,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 844 ") {
    byte_vec_t msg { 43,182,61,169 };
    byte_vec_t sig { 245,163,85,127,43,222,234,177,94,93,220,28,249,176,114,239,149,172,253,204,118,216,235,171,52,72,16,38,98,198,151,136,95,109,53,222,253,7,24,121,228,96,191,105,151,177,95,71,112,120,44,163,237,79,46,165,73,212,199,196,96,118,129,212 };
    byte_vec_t pk { 4,224,41,176,45,101,168,78,45,65,85,222,127,23,1,95,152,13,118,194,156,2,14,18,183,174,213,111,227,47,86,111,91,157,172,74,5,212,242,216,154,1,143,102,223,62,133,52,129,222,164,88,104,38,138,131,4,137,145,16,193,60,121,205,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 844 ") {
    byte_vec_t msg { 84,27,53,200 };
    byte_vec_t sig { 168,243,201,188,134,65,193,182,171,3,90,83,108,132,126,100,206,90,166,74,133,217,111,59,84,213,221,95,75,208,5,56,104,41,174,58,157,236,119,86,65,202,142,51,210,116,184,60,137,56,233,39,104,8,238,26,68,207,220,136,120,166,36,135 };
    byte_vec_t pk { 4,123,233,61,50,247,99,238,203,219,192,122,168,62,75,111,109,173,240,152,82,25,98,218,154,185,169,1,216,133,12,187,205,40,120,103,252,101,108,116,31,91,243,28,140,182,146,241,24,224,50,116,202,249,125,73,215,104,0,241,223,198,92,151,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 845 ") {
    byte_vec_t msg { 221,29,57,180 };
    byte_vec_t sig { 12,143,176,43,28,106,43,93,246,15,240,57,190,187,18,240,194,142,234,132,67,216,54,156,47,225,38,129,204,197,162,195,137,114,234,101,214,250,35,50,75,159,194,109,18,7,173,12,176,81,254,140,249,188,206,185,45,7,123,214,214,151,33,206 };
    byte_vec_t pk { 4,184,228,68,238,19,208,206,218,186,56,243,94,69,240,48,109,12,28,230,29,192,36,156,149,134,45,185,174,101,84,82,239,86,144,135,76,84,154,56,204,114,175,252,244,177,167,109,38,108,166,94,170,110,162,223,76,204,28,245,95,160,244,188,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 845 ") {
    byte_vec_t msg { 163,210,152,168 };
    byte_vec_t sig { 114,93,58,147,154,64,78,254,176,1,68,98,192,249,81,118,48,162,0,210,202,219,126,159,214,43,184,165,174,147,162,240,201,13,31,233,68,97,130,37,55,52,54,130,49,17,186,3,54,72,43,27,42,250,152,199,240,234,248,34,199,32,216,56 };
    byte_vec_t pk { 4,112,14,100,54,96,28,172,73,139,52,143,123,89,145,197,76,251,114,73,137,46,206,136,76,254,24,215,177,66,165,234,191,187,46,127,50,83,238,104,247,213,39,184,126,104,161,244,21,57,109,165,210,232,95,72,64,105,4,81,147,73,135,22,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 846 ") {
    byte_vec_t msg { 153,148,96,107 };
    byte_vec_t sig { 113,123,13,203,45,149,166,4,190,102,190,152,171,102,146,45,166,227,230,79,72,34,187,69,183,193,160,26,69,96,44,115,147,24,78,2,38,175,187,187,10,162,159,193,53,243,237,95,54,252,62,170,17,82,93,147,117,57,229,54,109,24,255,251 };
    byte_vec_t pk { 4,90,65,241,143,41,120,216,156,248,107,173,24,244,93,196,100,179,99,249,97,64,116,142,69,223,195,217,145,131,226,205,108,186,87,49,90,69,52,55,203,66,51,16,54,36,115,31,10,79,23,246,207,152,112,150,206,38,43,31,199,226,83,242,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 846 ") {
    byte_vec_t msg { 19,0,20,140 };
    byte_vec_t sig { 164,84,80,164,54,93,252,41,202,45,36,193,9,148,236,189,61,246,14,92,112,88,14,38,112,229,64,99,231,59,154,6,160,109,185,131,63,10,103,148,138,255,52,54,35,138,127,209,97,1,154,73,9,195,166,250,106,157,20,245,91,172,4,49 };
    byte_vec_t pk { 4,125,211,110,71,14,27,113,92,204,146,41,112,108,245,140,57,211,129,137,6,59,189,142,151,93,190,236,102,193,199,20,115,92,60,188,245,138,102,101,179,97,2,108,64,230,197,91,235,99,191,67,169,53,99,180,232,245,185,159,138,253,114,194,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 847 ") {
    byte_vec_t msg { 138,228,182,16 };
    byte_vec_t sig { 142,47,71,184,244,235,91,196,113,211,227,242,200,75,243,184,253,220,27,10,164,152,224,183,26,98,214,65,91,114,71,95,30,51,17,29,217,195,90,245,195,10,157,161,167,84,119,185,58,80,41,251,104,62,214,206,97,156,187,76,87,189,227,109 };
    byte_vec_t pk { 4,8,28,12,75,110,127,249,123,105,93,110,44,151,214,75,204,108,1,5,36,206,233,40,20,214,13,203,76,108,220,61,34,133,21,117,212,59,2,209,224,66,222,32,200,83,249,252,157,10,161,0,251,253,245,42,9,21,34,151,27,241,166,182,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 847 ") {
    byte_vec_t msg { 114,201,9,44 };
    byte_vec_t sig { 84,77,164,92,39,126,221,25,70,189,44,66,145,140,124,204,157,151,173,240,232,101,66,170,62,140,65,159,229,15,81,94,38,244,242,251,122,35,51,6,173,64,2,184,3,38,217,10,236,202,31,96,212,63,140,145,25,19,3,173,59,148,194,116 };
    byte_vec_t pk { 4,3,202,74,211,118,157,69,69,61,138,152,37,87,127,180,159,141,86,35,33,95,110,69,220,32,50,194,174,202,217,60,7,227,250,235,230,48,7,92,13,155,0,5,252,44,57,96,75,162,150,196,111,41,161,214,254,152,213,12,8,126,7,37,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 848 ") {
    byte_vec_t msg { 239,32,41,64 };
    byte_vec_t sig { 198,247,105,236,239,105,4,96,37,147,246,170,59,116,37,45,23,34,80,142,232,142,126,74,239,57,3,61,205,140,135,222,155,47,9,124,189,66,150,153,152,198,165,40,252,50,106,198,223,58,70,90,66,157,226,32,178,73,209,56,51,88,153,50 };
    byte_vec_t pk { 4,240,205,15,16,10,239,247,136,130,55,204,170,144,159,123,129,65,31,107,236,208,19,137,231,213,244,196,241,97,216,157,206,40,48,168,211,38,19,173,103,122,235,72,144,57,158,38,82,211,66,169,166,60,176,82,33,194,64,210,42,201,136,102,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 848 ") {
    byte_vec_t msg { 99,73,202,130 };
    byte_vec_t sig { 220,85,54,235,87,73,120,173,162,69,83,190,109,130,94,3,140,22,15,197,52,178,157,92,184,43,202,243,209,8,88,33,232,102,226,56,97,104,145,125,18,6,56,216,177,120,185,193,234,137,22,93,1,16,160,87,127,33,221,183,192,116,170,27 };
    byte_vec_t pk { 4,130,91,215,101,236,88,182,237,174,133,202,21,194,182,172,127,32,12,172,182,107,112,177,229,225,99,169,174,172,233,52,87,247,17,187,30,26,120,230,239,128,105,208,19,9,182,207,166,216,163,212,205,43,19,56,130,46,15,115,167,195,208,95,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 849 ") {
    byte_vec_t msg { 237,233,95,120 };
    byte_vec_t sig { 80,78,211,171,15,66,210,124,41,47,154,192,156,237,216,160,39,205,55,133,143,219,35,22,100,129,117,20,41,16,6,134,12,145,217,24,171,226,172,161,165,158,85,196,239,182,65,30,122,124,52,31,24,33,67,47,88,80,103,26,10,183,200,5 };
    byte_vec_t pk { 4,147,246,249,137,203,190,197,184,155,149,248,120,126,31,152,202,206,247,74,76,65,39,53,188,93,239,123,210,217,153,164,170,87,75,42,240,48,143,131,140,211,211,168,136,29,25,157,143,144,174,35,193,151,163,57,209,201,63,173,89,75,53,129,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 849 ") {
    byte_vec_t msg { 98,250,47,178 };
    byte_vec_t sig { 1,21,118,115,9,43,19,75,27,152,10,194,189,184,56,44,4,182,232,93,187,71,147,142,86,39,137,194,233,133,155,128,82,90,181,114,7,129,152,133,59,129,15,210,178,2,78,30,111,107,188,82,248,81,81,196,73,73,233,101,244,23,182,157 };
    byte_vec_t pk { 4,169,38,160,220,203,139,225,196,194,55,192,233,235,127,60,247,184,61,171,238,40,78,200,6,148,158,243,13,119,22,105,202,62,73,140,74,218,92,178,121,57,96,171,52,136,52,150,201,13,142,252,234,250,12,150,160,225,34,31,110,18,41,204,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 850 ") {
    byte_vec_t msg { 7,27,16,228 };
    byte_vec_t sig { 130,41,244,61,28,191,124,153,159,223,50,228,2,114,18,46,106,12,74,52,172,92,186,147,78,222,37,250,209,251,118,160,127,34,64,133,213,78,167,70,239,238,207,35,122,54,97,107,209,27,186,72,154,209,135,165,98,6,178,204,24,222,73,228 };
    byte_vec_t pk { 4,143,98,19,39,66,63,15,124,138,47,192,107,96,56,125,179,152,66,223,54,36,223,237,179,97,248,97,51,34,97,35,75,7,182,207,201,219,87,90,225,131,174,126,23,30,212,211,136,148,208,60,199,124,244,34,91,202,233,167,248,13,116,38,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 850 ") {
    byte_vec_t msg { 189,63,89,118 };
    byte_vec_t sig { 238,134,34,41,42,66,215,42,39,126,55,128,105,218,6,234,62,20,11,45,195,42,155,175,24,113,149,71,44,103,150,212,77,187,195,177,60,27,153,166,171,17,190,85,57,242,35,195,244,121,181,158,112,40,190,19,50,104,171,55,20,235,27,166 };
    byte_vec_t pk { 4,119,24,112,232,20,1,181,4,108,201,99,130,124,176,175,95,65,238,227,55,64,82,253,41,220,10,193,94,75,250,110,57,241,72,136,0,102,139,199,223,35,119,63,30,205,43,221,102,112,130,176,100,48,21,96,213,127,118,23,124,163,189,151,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 851 ") {
    byte_vec_t msg { 135,133,148,7 };
    byte_vec_t sig { 108,250,142,56,109,28,72,99,129,173,207,230,197,137,50,31,131,179,96,38,50,32,24,246,188,35,152,162,248,138,211,221,15,153,82,17,185,101,222,228,172,68,69,167,230,160,86,155,249,149,4,118,39,199,152,195,43,212,250,237,140,208,197,16 };
    byte_vec_t pk { 4,145,26,25,145,80,15,230,149,88,89,1,190,90,147,55,122,41,238,211,185,97,38,186,170,21,173,131,36,2,72,125,239,115,154,187,190,57,12,206,54,17,67,23,231,120,5,88,210,30,30,114,107,166,71,185,40,42,81,173,96,237,149,36,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 851 ") {
    byte_vec_t msg { 12,103,89,170 };
    byte_vec_t sig { 217,43,12,19,26,167,7,82,192,166,193,182,110,11,253,78,183,255,107,107,42,53,212,54,237,162,230,60,55,64,7,217,29,229,4,214,144,146,93,6,104,31,50,128,162,188,118,91,201,198,125,184,47,219,140,82,173,88,77,138,65,103,20,235 };
    byte_vec_t pk { 4,238,89,195,149,108,54,185,99,15,73,26,119,243,104,56,82,191,34,81,248,252,81,244,177,203,223,131,252,130,236,114,246,10,18,1,12,156,42,147,126,233,243,10,18,22,141,138,195,150,132,5,205,235,106,215,248,166,11,170,250,136,124,209,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 852 ") {
    byte_vec_t msg { 208,115,48,192 };
    byte_vec_t sig { 72,4,37,128,44,79,206,96,172,88,220,243,109,62,78,178,93,101,78,7,206,54,29,85,3,71,225,179,80,8,221,216,166,27,173,132,23,172,99,9,92,215,1,1,172,168,181,227,44,11,95,102,168,101,45,67,138,87,171,231,229,135,19,6 };
    byte_vec_t pk { 4,255,119,178,119,103,184,9,118,53,195,69,75,147,74,196,196,63,13,48,50,129,80,180,139,29,115,185,233,148,27,139,68,180,35,5,202,12,190,178,219,37,10,49,200,49,105,16,167,24,169,153,246,181,90,237,56,74,98,82,73,182,103,71,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 852 ") {
    byte_vec_t msg { 56,115,157,164 };
    byte_vec_t sig { 69,199,77,132,141,224,163,129,94,215,189,210,106,118,125,62,209,80,74,136,175,2,65,247,95,119,153,113,221,248,23,162,191,152,124,89,232,5,143,104,204,197,170,200,204,168,38,96,152,224,56,210,143,224,140,140,244,128,209,151,252,203,141,92 };
    byte_vec_t pk { 4,187,254,93,105,200,101,243,217,45,67,171,207,224,148,220,73,2,251,97,1,173,78,99,84,34,238,59,146,45,55,48,0,176,179,66,101,101,85,202,2,6,31,62,171,68,207,227,120,29,60,93,72,202,41,207,193,186,149,41,24,75,214,180,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 853 ") {
    byte_vec_t msg { 200,6,124,17 };
    byte_vec_t sig { 94,16,204,172,214,221,184,126,251,122,178,79,181,27,20,5,40,167,205,2,9,188,105,185,196,9,172,63,251,8,111,60,239,196,68,148,243,54,80,12,100,147,37,183,247,125,135,224,120,108,146,138,43,255,102,180,222,233,178,67,244,72,113,118 };
    byte_vec_t pk { 4,208,18,113,47,58,99,215,249,246,218,228,207,237,42,190,75,118,149,216,18,77,41,124,194,132,218,228,31,149,31,202,185,102,165,218,216,26,46,164,15,127,75,246,62,17,117,162,71,84,129,52,129,64,108,50,133,204,184,78,189,171,79,50,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 853 ") {
    byte_vec_t msg { 91,177,219,17 };
    byte_vec_t sig { 242,149,174,99,80,71,229,188,7,66,137,97,168,100,221,83,133,234,69,70,44,226,225,9,228,66,15,173,169,32,63,87,149,49,192,147,235,232,117,105,252,240,120,35,125,18,175,214,217,161,130,52,129,35,150,214,49,206,122,125,97,225,122,110 };
    byte_vec_t pk { 4,111,90,139,240,223,97,94,75,142,34,193,215,52,94,254,176,142,194,180,225,40,208,229,138,98,209,49,35,245,153,15,228,46,52,123,75,96,169,8,112,62,232,80,31,145,165,28,67,4,143,218,47,28,222,225,73,25,215,193,58,123,177,255,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 854 ") {
    byte_vec_t msg { 54,226,189,145 };
    byte_vec_t sig { 107,208,155,209,97,90,153,232,153,14,52,44,196,251,254,98,166,117,65,60,81,55,108,135,57,139,83,81,226,238,207,57,32,118,221,4,245,206,181,105,186,93,218,170,119,183,67,175,153,116,30,18,213,168,161,125,94,163,217,159,179,194,68,240 };
    byte_vec_t pk { 4,171,4,183,199,151,33,220,224,229,98,100,83,8,14,132,154,208,187,70,250,240,79,208,70,45,71,138,128,23,55,220,50,243,244,26,244,90,238,125,229,251,81,194,255,161,179,227,54,180,55,242,75,213,95,101,121,202,217,48,151,181,67,186,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 854 ") {
    byte_vec_t msg { 183,219,179,154 };
    byte_vec_t sig { 119,131,234,247,183,224,173,81,94,154,194,145,25,58,99,38,206,95,140,211,31,90,167,212,240,93,2,196,174,59,146,40,244,0,160,41,249,132,199,25,236,252,219,177,86,147,98,177,45,1,27,121,39,20,156,61,212,51,58,236,121,130,30,44 };
    byte_vec_t pk { 4,202,227,163,251,34,36,8,183,249,15,3,125,15,42,141,214,249,73,241,2,129,88,65,255,134,104,47,58,28,222,3,170,208,180,208,54,184,65,169,96,46,89,27,224,225,11,80,55,35,86,17,8,222,56,61,217,8,94,211,181,197,114,99,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 855 ") {
    byte_vec_t msg { 163,103,247,227 };
    byte_vec_t sig { 35,175,86,199,1,227,175,216,17,99,88,163,195,237,176,9,134,75,23,37,147,83,149,32,59,199,130,17,154,36,76,245,91,101,141,222,176,55,5,21,163,170,15,60,87,184,21,162,165,234,104,179,26,236,136,171,175,94,141,147,60,53,173,25 };
    byte_vec_t pk { 4,225,19,27,113,178,64,54,8,3,11,75,38,63,2,65,105,103,137,181,90,101,17,123,19,33,145,220,254,13,74,149,69,162,181,4,205,248,92,46,92,52,16,222,92,172,99,107,174,210,66,184,27,42,135,176,119,206,28,24,209,206,161,5,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 855 ") {
    byte_vec_t msg { 74,31,10,177 };
    byte_vec_t sig { 242,73,253,100,122,128,153,250,174,66,219,239,230,228,188,165,8,162,235,1,55,248,135,173,187,72,81,106,219,147,87,202,101,57,164,250,56,229,177,137,20,92,150,183,141,34,169,14,239,121,201,184,88,217,87,145,83,190,119,19,106,76,41,129 };
    byte_vec_t pk { 4,6,242,255,58,145,79,22,70,104,229,30,126,50,83,211,169,172,21,233,169,63,169,179,170,160,75,28,105,17,101,14,233,84,97,243,136,214,222,160,149,214,43,55,128,69,9,234,148,93,217,99,41,25,232,180,81,105,96,56,118,115,252,43,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 856 ") {
    byte_vec_t msg { 100,99,27,255 };
    byte_vec_t sig { 18,4,202,98,46,221,34,16,197,133,11,112,159,118,187,2,230,94,176,20,176,69,36,156,193,109,253,149,100,184,228,12,95,170,205,32,67,199,246,30,141,159,39,33,142,61,148,91,148,73,0,190,87,56,189,159,13,225,24,0,5,193,79,109 };
    byte_vec_t pk { 4,11,64,18,239,220,226,159,136,130,226,39,70,5,201,244,101,225,104,32,151,198,53,12,177,156,162,194,94,149,94,104,84,9,150,33,245,53,240,200,97,55,171,213,245,133,20,236,225,206,150,176,208,221,81,170,34,104,135,233,200,174,175,70,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 856 ") {
    byte_vec_t msg { 180,95,153,68 };
    byte_vec_t sig { 247,1,205,218,173,120,68,40,254,26,149,173,125,71,244,179,70,34,12,105,171,16,191,234,21,138,40,41,71,189,130,4,19,56,20,49,122,240,12,121,160,156,242,27,109,255,72,162,119,13,118,44,186,245,205,57,24,251,68,150,36,214,98,229 };
    byte_vec_t pk { 4,111,142,95,52,38,110,170,43,140,80,65,207,175,56,215,102,44,99,22,61,204,21,131,217,160,130,125,163,95,208,58,48,83,255,225,49,67,12,92,171,243,19,208,9,171,7,21,83,142,253,198,101,189,221,43,125,146,140,83,107,159,31,253,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 857 ") {
    byte_vec_t msg { 173,62,79,30 };
    byte_vec_t sig { 73,233,226,144,15,65,88,198,148,240,40,196,15,198,173,255,163,82,18,154,243,205,163,175,139,23,133,150,52,89,182,22,12,144,147,184,164,157,214,154,246,117,55,246,120,50,230,214,235,160,176,87,212,215,150,121,136,150,6,135,164,11,221,8 };
    byte_vec_t pk { 4,184,147,48,75,101,205,223,200,241,118,94,59,181,12,221,122,199,25,127,36,85,255,110,187,235,57,137,115,68,137,19,75,82,242,149,38,149,44,128,87,140,41,145,93,248,120,95,253,17,217,189,195,180,120,97,221,3,210,77,188,154,246,70,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 857 ") {
    byte_vec_t msg { 238,168,84,106 };
    byte_vec_t sig { 247,212,218,79,207,143,68,158,160,9,7,65,215,126,93,63,103,171,227,178,66,190,199,158,125,141,39,60,139,70,235,8,251,217,194,3,1,44,153,137,117,154,98,62,108,247,6,127,143,167,149,90,242,106,255,22,203,90,247,21,103,76,50,34 };
    byte_vec_t pk { 4,254,87,162,80,202,85,152,123,161,84,186,123,60,52,9,131,58,5,191,191,103,118,36,73,129,132,159,112,232,40,38,231,60,127,190,98,109,171,252,179,20,25,185,96,187,230,34,255,79,167,118,173,59,163,166,168,230,120,203,72,112,222,175,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 858 ") {
    byte_vec_t msg { 13,13,214,199 };
    byte_vec_t sig { 30,9,218,127,10,252,39,6,129,233,90,54,63,18,202,38,54,110,117,125,247,45,211,175,101,93,179,189,150,120,3,26,0,64,80,26,132,252,127,63,84,137,59,213,10,4,160,9,135,237,196,237,250,7,138,217,248,231,248,41,6,219,205,51 };
    byte_vec_t pk { 4,208,251,248,238,110,117,137,79,92,202,116,62,77,80,4,38,98,210,60,253,135,105,157,26,1,156,248,95,116,181,173,79,195,187,245,168,67,121,37,239,186,1,156,145,233,38,170,137,251,129,175,115,232,253,197,133,221,168,47,177,60,117,34,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 858 ") {
    byte_vec_t msg { 248,53,188,52 };
    byte_vec_t sig { 42,183,85,147,169,183,155,162,221,60,25,48,154,78,210,40,56,211,121,189,229,102,171,13,101,114,26,229,91,231,255,37,227,59,193,182,228,57,92,153,11,61,80,66,249,100,175,241,16,74,246,79,131,89,204,233,41,150,123,222,222,143,68,189 };
    byte_vec_t pk { 4,177,187,13,239,192,142,60,233,81,183,64,124,252,225,86,120,1,190,166,136,2,152,228,64,192,112,231,72,166,158,19,147,68,202,178,140,184,138,90,253,213,166,131,202,101,74,198,251,26,57,252,104,104,88,139,181,110,130,91,169,9,200,212,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 859 ") {
    byte_vec_t msg { 245,210,247,138 };
    byte_vec_t sig { 118,24,146,195,134,143,252,98,212,242,117,149,57,71,141,225,81,202,44,8,55,52,166,111,180,28,117,109,21,60,243,78,44,41,84,192,56,165,151,57,163,198,53,195,77,194,233,8,77,47,174,218,102,222,139,80,58,184,123,239,114,120,225,37 };
    byte_vec_t pk { 4,243,155,210,80,189,86,159,174,152,205,180,247,193,40,138,166,212,78,233,23,102,35,219,107,68,9,168,192,169,60,105,81,22,204,136,237,136,212,77,94,205,209,160,34,243,109,179,231,230,236,72,5,237,188,127,34,237,59,157,197,7,68,125,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 859 ") {
    byte_vec_t msg { 69,34,20,216 };
    byte_vec_t sig { 144,59,106,179,8,76,144,150,118,63,120,54,243,187,210,72,43,11,124,69,190,246,67,198,12,244,251,177,18,4,254,46,179,10,6,239,24,23,119,173,130,189,158,153,13,167,112,88,75,0,79,169,55,112,131,48,108,216,81,99,84,14,138,253 };
    byte_vec_t pk { 4,205,160,236,233,241,43,171,179,51,104,245,31,130,32,43,160,211,235,144,192,143,176,254,188,199,227,241,245,213,202,172,148,232,214,252,148,212,167,160,28,124,25,84,184,205,56,181,5,226,58,181,48,82,35,159,86,244,216,11,94,106,90,252,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 860 ") {
    byte_vec_t msg { 127,71,190,247 };
    byte_vec_t sig { 3,36,209,215,246,77,250,217,57,196,252,214,40,151,67,51,249,219,182,240,247,49,244,192,154,179,116,18,207,212,79,246,250,97,53,174,149,166,165,92,144,47,171,153,77,233,21,75,198,143,149,214,172,237,65,178,153,246,49,185,195,72,189,197 };
    byte_vec_t pk { 4,246,41,166,210,218,245,162,52,101,191,13,81,14,188,207,181,168,189,22,54,202,111,181,114,158,113,47,155,109,12,121,62,15,194,142,52,138,162,211,50,80,174,179,239,71,212,137,195,115,11,62,16,221,52,100,231,248,45,124,197,246,86,14,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 860 ") {
    byte_vec_t msg { 253,232,123,202 };
    byte_vec_t sig { 219,107,139,88,224,192,100,233,37,57,251,112,160,19,7,189,247,222,114,177,100,65,76,80,133,135,94,27,222,8,45,60,166,114,125,59,76,160,86,82,181,0,208,10,99,47,35,55,59,64,88,118,95,162,249,167,222,245,221,219,21,69,71,215 };
    byte_vec_t pk { 4,220,112,7,236,144,163,5,104,198,12,93,164,195,122,243,102,167,82,179,141,16,137,68,121,42,187,124,229,73,125,139,155,168,89,6,18,163,146,241,182,69,34,229,211,206,62,64,19,250,215,25,163,20,198,66,172,13,18,173,58,58,221,248,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 861 ") {
    byte_vec_t msg { 133,176,45,247 };
    byte_vec_t sig { 92,77,244,191,128,113,148,4,15,23,157,204,38,162,159,187,177,248,232,200,138,84,248,221,94,76,125,52,186,236,53,8,168,130,178,204,176,158,129,63,104,52,240,12,102,193,149,212,49,41,247,172,237,193,206,15,16,174,231,114,183,235,128,238 };
    byte_vec_t pk { 4,106,66,69,118,102,255,112,67,236,163,178,28,34,28,172,37,111,209,127,69,208,180,230,59,17,151,247,152,203,250,44,20,155,202,250,130,221,231,84,222,16,49,91,107,160,93,187,151,137,148,104,80,198,31,80,161,222,122,126,162,50,106,226,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 861 ") {
    byte_vec_t msg { 131,153,175,219 };
    byte_vec_t sig { 222,6,174,242,62,75,180,150,201,143,80,48,98,57,239,15,214,28,208,56,200,112,164,160,241,253,67,251,79,23,28,220,95,145,212,186,83,120,107,102,133,125,210,221,246,100,129,136,54,250,67,221,138,208,210,196,185,124,72,31,233,104,23,62 };
    byte_vec_t pk { 4,30,134,242,98,112,209,13,201,4,211,54,30,146,144,64,37,162,140,20,55,204,34,66,71,208,177,3,5,64,101,0,153,109,24,54,15,207,51,141,123,217,227,20,131,64,206,202,232,7,190,182,20,151,119,251,88,148,72,144,108,190,81,202,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 862 ") {
    byte_vec_t msg { 189,194,52,132 };
    byte_vec_t sig { 183,150,183,206,188,153,143,33,223,44,92,25,190,28,33,118,246,33,35,61,138,169,5,172,40,216,136,68,127,125,106,52,245,186,117,106,149,79,123,103,250,128,212,220,214,184,203,185,54,238,133,64,182,217,3,33,151,6,192,86,195,211,173,173 };
    byte_vec_t pk { 4,76,133,183,189,252,172,43,155,88,15,245,119,142,82,53,83,157,160,223,235,16,73,104,171,74,87,26,57,73,152,148,91,136,129,53,151,106,86,77,169,180,210,59,236,85,166,123,173,121,116,210,174,125,206,208,238,190,56,249,180,238,244,231,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 862 ") {
    byte_vec_t msg { 21,89,109,222 };
    byte_vec_t sig { 212,30,110,71,224,163,219,111,211,245,0,211,197,25,41,19,131,46,1,138,196,18,17,22,224,231,4,134,14,168,213,240,138,36,148,82,15,157,174,25,229,59,111,242,61,55,68,115,150,245,101,79,137,108,177,163,17,192,84,218,102,182,111,180 };
    byte_vec_t pk { 4,25,47,95,181,216,233,179,177,114,67,172,88,146,184,151,97,149,192,226,169,236,117,134,116,226,227,47,49,250,196,158,96,145,174,17,252,143,10,19,17,106,244,56,64,61,17,11,83,123,196,110,134,15,33,54,2,74,153,164,79,162,160,48,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 863 ") {
    byte_vec_t msg { 131,5,82,234 };
    byte_vec_t sig { 212,103,119,32,238,226,19,94,124,167,221,161,132,185,6,105,242,115,249,242,62,133,49,233,149,94,11,126,90,148,226,163,13,239,106,89,50,127,89,98,78,134,174,108,172,217,38,85,82,184,179,75,133,95,113,239,74,143,239,69,219,251,206,134 };
    byte_vec_t pk { 4,67,149,99,45,76,219,241,220,20,38,141,122,230,159,3,237,124,156,218,134,157,85,167,205,236,35,177,1,249,15,57,32,19,113,144,95,191,153,248,142,143,220,214,16,89,185,129,223,50,216,202,148,199,158,190,128,165,16,42,46,20,104,108,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 863 ") {
    byte_vec_t msg { 7,20,177,229 };
    byte_vec_t sig { 137,73,126,211,59,88,244,230,155,190,105,238,221,196,7,67,250,121,116,85,181,219,239,95,39,166,60,154,197,109,246,183,166,103,179,249,19,189,182,174,155,246,41,76,164,117,30,59,6,217,180,205,87,148,250,41,149,187,191,144,85,231,135,70 };
    byte_vec_t pk { 4,91,168,193,181,228,107,156,44,65,4,11,110,155,228,16,168,121,223,176,122,0,143,193,194,238,11,163,4,78,47,139,132,197,157,239,14,63,125,138,120,160,156,22,39,54,238,220,38,44,232,57,146,233,207,54,235,174,119,44,210,202,67,218,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 864 ") {
    byte_vec_t msg { 239,183,101,198 };
    byte_vec_t sig { 199,249,120,59,152,25,239,218,25,212,166,93,46,229,68,207,8,134,236,186,9,23,57,165,97,142,241,68,188,251,83,202,72,73,194,103,135,144,48,87,182,207,183,230,79,134,189,189,235,43,244,252,223,88,84,28,12,89,223,152,206,158,246,15 };
    byte_vec_t pk { 4,74,246,218,110,39,188,85,200,2,65,89,30,184,49,74,152,42,141,156,49,174,192,251,186,51,75,151,72,26,231,85,15,18,179,141,17,161,37,217,246,52,185,235,0,138,237,112,49,78,88,81,67,83,5,90,242,204,66,200,155,33,5,253,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 864 ") {
    byte_vec_t msg { 20,80,78,232 };
    byte_vec_t sig { 174,228,232,18,50,222,75,97,136,52,230,229,194,134,124,13,136,250,141,199,150,99,104,101,214,245,201,191,15,117,96,123,29,207,43,152,182,122,134,143,159,199,255,167,7,206,247,245,140,192,123,182,57,240,167,241,179,113,114,47,83,206,193,129 };
    byte_vec_t pk { 4,174,67,23,206,39,201,97,85,31,61,229,101,248,196,192,163,20,243,112,115,228,109,239,117,198,36,172,164,108,229,69,99,125,50,7,129,136,9,219,153,243,108,83,108,144,248,161,210,127,173,78,76,99,169,52,214,209,183,185,60,47,221,65,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 865 ") {
    byte_vec_t msg { 160,43,53,147 };
    byte_vec_t sig { 132,28,131,28,85,16,159,202,187,69,34,152,79,27,250,31,36,14,78,103,44,252,213,25,155,129,240,25,30,128,45,215,36,91,9,118,87,45,37,61,12,79,12,163,66,235,141,77,37,17,202,57,36,98,136,120,231,141,174,132,79,167,64,208 };
    byte_vec_t pk { 4,207,248,21,109,147,122,141,239,114,158,210,44,34,255,20,138,96,239,21,148,107,43,151,63,78,203,179,35,17,133,102,222,227,29,192,39,109,63,85,139,202,147,68,21,236,30,61,4,161,67,62,111,158,109,141,190,107,70,171,136,65,62,13,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 865 ") {
    byte_vec_t msg { 81,13,215,238 };
    byte_vec_t sig { 21,127,69,174,55,251,253,241,56,177,167,205,80,225,233,207,192,118,243,213,201,134,19,188,124,201,97,156,60,143,228,238,199,164,154,32,25,251,170,171,71,240,148,103,10,188,160,216,168,172,152,221,113,252,155,7,227,184,10,245,50,27,251,123 };
    byte_vec_t pk { 4,197,50,116,183,177,148,165,219,105,162,14,31,233,161,233,85,23,38,241,164,101,145,4,19,176,103,55,4,114,185,134,230,194,171,110,237,230,122,206,13,218,103,199,10,179,5,155,136,40,98,15,44,34,182,16,61,195,250,32,178,120,51,195,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 866 ") {
    byte_vec_t msg { 58,208,133,133 };
    byte_vec_t sig { 208,200,101,217,246,184,12,178,185,202,195,10,27,226,36,62,66,169,203,15,30,131,213,160,112,121,237,214,205,225,94,103,133,150,232,84,29,54,79,190,18,127,107,244,160,176,251,86,199,125,30,9,112,71,222,15,205,109,183,141,149,102,120,104 };
    byte_vec_t pk { 4,203,6,31,188,132,69,13,252,64,96,78,78,63,167,42,100,116,37,116,76,79,56,127,123,194,79,191,205,186,62,79,127,200,171,244,211,119,20,160,148,249,162,43,106,16,94,199,3,122,59,94,18,119,59,1,224,17,3,118,231,14,7,150,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 866 ") {
    byte_vec_t msg { 252,153,53,187 };
    byte_vec_t sig { 223,93,94,146,210,192,146,222,3,244,65,188,216,220,18,144,39,246,125,26,68,219,181,185,186,192,238,159,157,83,53,130,18,217,200,251,135,42,67,43,96,91,108,94,147,246,237,168,52,225,125,172,10,44,201,91,165,48,63,255,143,66,109,179 };
    byte_vec_t pk { 4,245,114,64,19,166,246,182,248,75,171,80,187,234,207,231,193,1,195,200,177,79,25,23,155,151,12,10,92,98,203,131,67,212,42,36,86,206,69,19,218,48,44,99,83,1,52,201,74,139,245,232,176,78,31,31,188,5,245,212,180,200,171,66,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 867 ") {
    byte_vec_t msg { 154,224,202,195 };
    byte_vec_t sig { 183,136,187,135,192,154,246,159,32,196,245,6,183,183,222,204,97,89,170,191,102,6,124,238,126,55,116,133,161,212,65,142,183,53,136,105,85,163,206,126,152,133,118,103,202,109,20,175,135,216,130,7,10,110,205,174,240,173,119,146,3,175,139,115 };
    byte_vec_t pk { 4,6,148,107,231,183,179,2,246,235,127,108,224,157,80,19,160,162,3,143,117,198,214,228,125,65,87,61,75,28,132,255,179,55,146,116,146,19,46,131,32,238,132,238,167,34,30,126,226,172,125,235,93,242,26,184,46,137,55,203,114,111,198,3,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 867 ") {
    byte_vec_t msg { 48,6,241,205 };
    byte_vec_t sig { 49,167,118,10,99,111,195,196,73,218,228,81,139,186,226,234,98,249,199,72,49,96,86,17,145,177,32,59,0,38,88,24,199,241,0,220,162,221,170,242,150,177,181,103,173,249,242,219,16,210,117,173,209,218,193,211,227,216,165,251,251,88,247,72 };
    byte_vec_t pk { 4,197,135,112,180,50,62,240,134,165,226,97,21,64,80,55,145,202,119,228,16,124,41,13,88,124,58,66,144,137,115,165,200,40,225,189,136,196,240,24,180,230,70,102,191,174,242,230,177,6,104,187,61,207,178,97,194,144,103,76,204,127,153,130,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 868 ") {
    byte_vec_t msg { 104,60,18,140 };
    byte_vec_t sig { 23,212,175,1,105,212,170,98,206,22,15,101,238,66,236,2,240,65,172,149,237,255,222,166,200,216,102,8,225,97,36,252,199,85,57,40,207,197,189,107,204,77,98,151,8,132,164,106,237,104,148,175,69,143,88,233,101,224,109,148,149,178,118,232 };
    byte_vec_t pk { 4,68,238,2,131,202,149,45,248,185,113,50,82,217,99,233,160,128,154,152,118,207,46,166,114,67,168,235,42,145,128,234,179,31,67,226,255,67,164,5,62,87,11,67,33,222,40,89,112,216,190,181,83,192,97,167,161,57,23,15,120,202,100,110,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 868 ") {
    byte_vec_t msg { 160,129,84,245 };
    byte_vec_t sig { 42,11,182,226,100,156,18,28,199,105,56,115,97,250,184,181,19,234,34,190,245,79,39,219,202,108,151,134,80,188,213,166,11,134,180,47,237,202,51,176,222,128,174,142,219,163,239,131,121,57,186,111,219,108,40,179,231,57,13,66,23,10,74,118 };
    byte_vec_t pk { 4,61,25,137,177,248,42,22,224,169,223,178,52,23,158,157,224,164,128,43,26,15,84,245,88,149,41,36,38,254,6,89,86,98,14,197,234,106,205,254,126,157,192,234,26,196,219,39,154,130,110,226,49,167,89,127,192,44,223,214,234,95,56,92,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 869 ") {
    byte_vec_t msg { 33,241,109,185 };
    byte_vec_t sig { 99,119,190,134,76,32,39,190,98,126,142,232,234,140,116,246,145,164,58,254,63,163,120,108,174,167,29,214,145,85,100,132,224,43,51,43,28,134,19,64,179,123,95,177,101,106,145,220,248,189,74,47,110,3,16,143,244,192,215,226,88,202,83,99 };
    byte_vec_t pk { 4,140,41,172,169,73,180,120,69,146,63,127,40,184,79,57,130,217,214,141,149,243,77,126,7,228,243,242,246,47,161,235,177,197,126,212,161,209,29,249,241,146,135,118,42,77,156,164,141,194,103,185,230,5,202,200,47,14,167,75,89,233,233,28,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 869 ") {
    byte_vec_t msg { 159,32,234,5 };
    byte_vec_t sig { 106,86,211,225,54,168,212,11,37,14,131,100,1,86,179,26,60,198,185,251,162,29,106,98,0,229,61,54,75,226,1,169,242,54,19,244,198,16,151,230,32,145,234,111,243,198,200,238,181,67,151,9,27,60,231,233,115,216,187,230,179,82,207,3 };
    byte_vec_t pk { 4,112,232,33,213,202,113,84,53,47,69,174,212,14,59,156,43,218,65,170,18,118,124,76,28,117,203,0,185,20,38,47,154,130,23,60,220,64,199,191,27,192,158,142,31,102,42,230,251,165,86,155,129,242,90,30,8,245,79,185,77,255,253,244,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 870 ") {
    byte_vec_t msg { 184,90,42,73 };
    byte_vec_t sig { 227,81,176,146,50,2,165,118,139,250,159,9,133,177,86,85,8,111,233,132,92,41,133,142,34,221,203,187,103,23,247,242,252,237,172,157,69,186,8,71,116,80,80,146,137,113,27,10,84,111,123,90,225,88,111,242,74,66,182,144,186,54,231,241 };
    byte_vec_t pk { 4,15,172,166,73,214,218,206,8,244,254,115,204,18,137,58,11,140,87,115,92,224,129,204,232,195,149,73,152,122,206,17,116,239,94,37,87,110,223,80,149,155,133,115,156,18,142,35,77,206,208,94,117,200,172,5,143,150,90,37,204,26,191,81,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 870 ") {
    byte_vec_t msg { 89,228,35,242 };
    byte_vec_t sig { 191,251,27,116,150,223,185,84,146,210,203,149,223,178,177,200,141,49,227,202,86,178,189,83,151,122,127,202,71,61,46,74,135,188,47,193,36,90,222,215,220,211,120,220,254,72,231,106,243,124,121,246,150,112,194,227,13,41,119,98,34,154,180,239 };
    byte_vec_t pk { 4,214,166,242,65,46,205,67,143,55,124,219,216,159,151,149,153,138,21,251,164,253,93,57,92,179,17,193,4,40,186,121,229,227,79,71,247,219,252,88,35,220,181,210,139,157,16,4,52,189,212,10,184,38,157,189,36,22,241,32,23,169,124,35,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 871 ") {
    byte_vec_t msg { 130,1,105,230 };
    byte_vec_t sig { 118,4,164,98,21,233,244,73,96,130,229,121,72,133,163,54,113,246,16,144,44,231,161,163,56,97,29,93,6,229,71,133,101,216,26,18,88,75,90,7,7,6,109,100,137,68,215,67,193,127,56,168,203,52,68,37,73,40,64,45,47,85,155,9 };
    byte_vec_t pk { 4,240,197,52,114,36,237,42,101,4,28,25,38,194,71,92,189,160,40,34,57,194,15,185,145,73,186,76,30,206,16,254,5,31,167,41,180,59,227,101,176,163,31,87,39,108,84,7,64,71,54,216,81,193,236,140,236,166,9,191,134,254,56,20,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 871 ") {
    byte_vec_t msg { 116,126,53,253 };
    byte_vec_t sig { 120,68,31,191,36,52,149,204,200,144,61,190,200,179,81,118,101,87,139,205,173,217,170,235,39,220,153,15,163,85,58,83,130,28,93,231,32,31,124,252,47,179,231,137,235,252,219,63,221,20,70,236,22,165,163,197,234,135,240,7,144,2,51,198 };
    byte_vec_t pk { 4,86,32,79,109,229,15,24,153,51,60,253,149,23,159,17,109,163,139,130,62,232,83,181,112,243,117,118,68,125,189,70,122,53,249,235,127,243,202,85,48,244,38,59,1,170,218,171,182,207,140,60,89,48,0,25,142,94,154,97,250,90,66,131,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 872 ") {
    byte_vec_t msg { 182,162,25,11 };
    byte_vec_t sig { 175,167,187,10,169,197,246,217,137,81,107,226,104,158,155,35,214,46,48,114,110,238,22,101,151,151,125,102,80,141,19,104,141,127,92,133,241,100,238,151,68,181,162,69,143,80,103,129,19,85,69,196,93,66,54,193,137,16,237,155,138,2,212,16 };
    byte_vec_t pk { 4,57,122,96,210,62,165,97,146,161,159,132,182,43,137,176,23,138,255,220,49,154,57,172,124,202,187,41,122,111,132,72,206,131,248,215,241,178,13,63,146,156,251,44,136,106,200,116,248,24,91,116,54,243,8,129,59,241,199,104,64,12,203,157,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 872 ") {
    byte_vec_t msg { 110,94,167,208 };
    byte_vec_t sig { 22,73,138,26,245,106,78,125,174,186,8,40,19,137,138,4,94,142,66,29,42,245,61,78,121,142,251,131,107,213,229,112,144,72,62,248,175,223,164,132,153,102,208,219,245,19,235,165,166,210,178,240,135,16,162,163,27,173,73,124,172,34,41,194 };
    byte_vec_t pk { 4,98,146,173,138,52,81,162,43,229,225,17,188,130,57,28,97,152,240,176,59,174,230,255,78,201,198,92,221,193,210,153,51,145,218,230,33,59,157,67,221,117,174,72,67,176,223,6,73,247,74,254,254,226,223,105,26,244,140,238,234,198,202,226,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 873 ") {
    byte_vec_t msg { 127,179,59,43 };
    byte_vec_t sig { 219,165,61,206,205,169,189,26,127,15,142,68,6,0,249,122,221,222,103,180,160,112,247,46,203,214,189,226,154,208,175,50,168,12,55,31,115,215,145,228,120,149,181,218,218,14,151,244,166,185,145,19,190,221,236,0,197,98,191,219,126,96,238,104 };
    byte_vec_t pk { 4,139,185,71,194,242,146,251,152,247,205,68,55,226,128,41,176,67,254,252,151,209,39,23,160,81,21,22,30,16,228,174,117,96,154,96,155,96,4,105,32,53,221,96,227,199,17,119,53,25,13,150,246,81,137,63,250,142,126,52,34,180,182,212,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 873 ") {
    byte_vec_t msg { 34,18,222,9 };
    byte_vec_t sig { 233,111,176,93,79,108,68,171,105,74,157,16,34,140,8,33,90,155,90,208,235,175,255,53,140,31,236,109,95,103,189,147,229,125,81,244,154,216,245,99,167,153,91,155,144,19,56,230,116,20,174,199,237,107,131,145,177,3,116,100,214,15,37,251 };
    byte_vec_t pk { 4,35,251,58,143,219,142,255,27,45,235,199,255,223,60,92,59,249,7,94,174,137,198,204,148,251,162,199,227,143,162,87,155,190,99,149,148,162,171,166,195,249,156,66,131,201,159,207,2,185,215,213,177,45,172,124,138,47,207,53,113,25,95,69,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 874 ") {
    byte_vec_t msg { 35,251,125,145 };
    byte_vec_t sig { 56,249,27,170,73,167,170,53,128,145,11,204,249,38,252,136,184,154,14,142,45,113,21,37,183,122,20,26,108,172,28,78,18,27,79,26,202,193,76,134,251,164,164,163,160,90,254,159,253,87,79,180,34,147,68,54,110,19,37,11,65,115,236,141 };
    byte_vec_t pk { 4,156,92,65,78,98,166,144,175,70,80,21,113,51,73,178,69,85,46,171,16,49,32,160,129,179,81,201,27,51,246,203,193,53,193,88,121,242,221,205,118,129,154,180,238,129,134,85,81,108,86,132,109,238,155,148,248,151,77,22,7,79,92,76,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 874 ") {
    byte_vec_t msg { 110,190,140,190 };
    byte_vec_t sig { 47,46,21,68,27,56,147,87,157,221,240,232,126,101,133,70,240,80,60,199,231,7,65,1,90,2,24,231,188,6,124,217,191,77,107,8,236,120,70,81,124,136,88,33,28,232,14,25,98,37,244,221,170,54,137,252,134,26,250,33,182,65,192,146 };
    byte_vec_t pk { 4,71,23,208,96,190,243,136,169,223,225,147,104,157,124,122,23,64,119,222,125,216,194,191,122,6,44,88,84,226,120,8,219,218,144,25,52,4,23,35,222,105,74,166,188,112,26,233,175,168,189,91,141,133,27,18,16,163,88,76,81,62,243,207,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 875 ") {
    byte_vec_t msg { 15,142,140,92 };
    byte_vec_t sig { 180,241,118,80,92,124,112,26,43,16,169,65,5,135,64,17,231,215,98,217,94,0,132,78,77,188,14,56,118,186,108,10,231,77,38,226,159,134,130,199,70,187,158,60,5,251,59,123,191,217,92,182,139,163,231,220,92,43,150,175,61,184,51,186 };
    byte_vec_t pk { 4,149,144,12,111,189,22,84,71,101,148,103,189,220,191,10,141,235,15,122,164,121,79,180,77,229,25,245,86,39,175,183,213,58,22,77,215,58,214,58,108,51,118,196,199,198,126,254,110,180,59,127,204,97,17,111,18,21,153,27,179,218,181,194,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 875 ") {
    byte_vec_t msg { 160,203,184,245 };
    byte_vec_t sig { 167,184,214,54,126,151,186,156,13,103,87,88,236,65,72,7,240,39,232,241,237,212,183,77,208,111,33,225,30,186,240,26,29,119,73,42,80,60,244,128,217,20,113,97,22,146,1,224,92,163,42,151,124,40,247,178,86,12,179,40,142,163,209,242 };
    byte_vec_t pk { 4,77,197,159,139,205,127,191,247,244,247,51,167,94,187,197,171,66,163,166,99,245,99,70,136,164,145,111,198,27,200,21,191,167,223,226,9,71,53,80,7,236,225,73,167,186,79,238,35,161,109,70,183,215,9,203,27,93,220,108,42,54,230,206,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 876 ") {
    byte_vec_t msg { 86,133,173,1 };
    byte_vec_t sig { 41,158,219,17,166,82,198,2,55,75,176,209,221,97,57,206,209,192,38,174,10,215,156,225,47,30,8,182,125,171,216,45,79,131,27,105,10,120,93,252,224,197,153,128,122,53,31,199,203,225,50,62,84,134,139,228,68,54,50,68,45,217,18,12 };
    byte_vec_t pk { 4,108,140,249,88,105,151,178,95,196,59,167,53,17,38,198,221,148,125,179,155,172,67,12,210,242,163,13,188,42,95,207,195,84,241,64,27,167,37,148,193,240,153,183,138,175,138,60,6,226,255,76,187,14,42,7,0,192,25,220,3,89,50,80,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 876 ") {
    byte_vec_t msg { 225,122,130,213 };
    byte_vec_t sig { 112,7,144,196,240,36,148,151,216,44,121,175,4,20,49,119,95,120,132,44,254,92,32,22,92,178,125,178,38,242,234,224,90,239,242,51,93,88,12,161,20,121,149,27,86,19,152,29,166,13,90,150,210,45,146,201,112,191,241,130,94,163,127,101 };
    byte_vec_t pk { 4,128,66,163,112,85,131,172,253,153,193,96,251,90,222,43,109,131,109,18,209,238,163,145,63,84,173,254,38,140,74,46,209,47,201,51,71,145,127,12,238,67,113,106,138,183,38,35,7,175,195,215,169,149,184,239,22,162,24,0,24,52,160,9,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 877 ") {
    byte_vec_t msg { 87,61,124,118 };
    byte_vec_t sig { 156,234,76,163,167,170,250,153,155,104,96,20,60,219,25,22,64,153,36,0,56,162,89,26,88,151,19,52,140,31,57,211,17,52,74,19,85,15,74,124,235,250,21,55,154,233,39,218,100,122,134,222,239,22,244,84,183,158,131,109,139,246,2,219 };
    byte_vec_t pk { 4,192,216,212,136,152,193,230,165,9,199,204,94,249,12,197,251,91,54,128,245,236,54,55,153,90,196,43,86,91,73,232,246,216,121,65,190,137,16,184,245,225,76,230,17,55,84,159,81,132,14,104,81,224,252,97,20,135,162,242,172,1,70,127,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 877 ") {
    byte_vec_t msg { 10,157,101,67 };
    byte_vec_t sig { 31,205,10,242,85,117,171,225,152,57,156,150,197,36,143,50,180,89,124,7,193,150,160,50,190,20,151,224,90,211,115,49,223,254,108,210,50,244,125,106,26,145,245,161,255,182,106,74,215,93,208,60,96,113,28,251,89,113,213,162,156,148,71,28 };
    byte_vec_t pk { 4,57,150,193,121,154,22,173,190,151,88,168,38,98,119,80,155,237,237,190,157,197,244,3,199,154,55,215,245,87,101,204,36,177,238,91,37,119,209,37,79,57,205,57,217,31,198,103,58,133,204,216,246,68,124,45,12,74,61,60,148,141,170,202,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 878 ") {
    byte_vec_t msg { 209,229,135,206 };
    byte_vec_t sig { 253,13,150,15,161,193,143,100,246,74,123,41,219,151,231,93,54,147,15,212,237,168,141,202,235,79,222,12,226,236,132,36,105,126,247,133,93,92,159,122,215,92,170,103,95,228,142,24,71,130,45,167,137,181,78,123,116,219,133,165,106,134,27,31 };
    byte_vec_t pk { 4,68,104,137,216,124,119,143,192,115,208,66,173,214,102,75,144,85,11,106,145,46,106,239,83,254,84,90,18,232,23,251,83,43,198,220,232,232,108,209,118,31,191,137,11,173,22,176,118,26,10,160,139,116,53,10,162,131,2,72,56,26,79,164,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 878 ") {
    byte_vec_t msg { 198,58,40,232 };
    byte_vec_t sig { 243,134,94,213,4,55,103,82,232,13,175,3,88,92,116,52,157,225,141,177,77,217,162,252,76,181,110,209,203,251,105,21,125,5,48,223,203,132,81,117,48,105,80,132,198,31,141,236,31,170,53,212,128,85,246,211,131,210,70,42,173,218,244,201 };
    byte_vec_t pk { 4,175,190,154,59,72,2,89,120,121,248,38,40,209,202,127,177,249,84,49,228,108,216,166,53,98,229,74,187,200,182,63,163,170,83,76,6,191,254,155,24,17,226,41,218,233,2,98,64,75,126,56,51,153,207,120,101,245,121,201,204,231,172,255,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 879 ") {
    byte_vec_t msg { 153,83,226,206 };
    byte_vec_t sig { 237,104,142,55,145,0,78,176,184,114,54,149,225,134,244,15,212,103,142,80,105,60,189,130,40,97,17,77,77,193,228,140,19,7,224,143,185,118,170,55,151,78,126,178,195,79,215,30,224,231,242,152,185,200,105,227,177,255,76,48,26,39,162,180 };
    byte_vec_t pk { 4,94,165,186,206,76,39,1,206,215,171,148,80,193,103,58,49,93,153,143,77,249,177,184,166,135,166,213,111,111,80,65,53,68,179,124,58,192,175,126,235,44,160,228,176,200,197,98,74,254,252,186,186,41,101,244,37,73,246,43,45,124,48,215,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 879 ") {
    byte_vec_t msg { 112,28,136,12 };
    byte_vec_t sig { 130,92,241,226,135,43,44,65,60,215,30,10,127,164,46,236,181,209,197,142,27,86,2,139,26,192,90,82,184,208,164,14,228,124,1,253,75,211,16,228,28,143,245,61,24,30,206,155,112,196,41,36,167,247,152,252,80,225,191,145,161,129,157,238 };
    byte_vec_t pk { 4,64,250,3,70,190,219,85,229,201,89,166,46,14,194,245,8,22,18,236,191,150,146,36,141,102,202,64,94,109,169,36,176,29,216,80,117,199,190,189,106,18,224,48,61,153,129,45,8,19,93,45,88,75,234,55,56,28,2,29,65,65,142,91,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 880 ") {
    byte_vec_t msg { 135,120,166,34 };
    byte_vec_t sig { 121,184,241,107,2,75,192,167,86,7,157,191,123,226,60,213,71,98,76,130,234,52,90,249,222,131,87,146,155,139,212,169,225,67,129,134,177,202,55,158,77,153,57,79,254,109,152,78,57,1,137,81,205,231,235,162,189,90,113,136,193,103,142,42 };
    byte_vec_t pk { 4,140,3,84,78,204,177,165,156,43,126,122,188,103,95,71,161,89,2,109,233,165,13,205,41,30,144,186,203,82,148,16,253,178,61,192,83,168,183,108,40,191,86,54,27,85,177,30,56,53,181,255,109,34,74,101,5,5,177,248,127,113,168,191,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 880 ") {
    byte_vec_t msg { 105,43,223,248 };
    byte_vec_t sig { 170,243,199,200,113,33,43,174,133,149,239,235,242,243,73,250,19,136,117,106,159,152,198,171,27,204,175,144,15,174,225,52,175,68,86,246,145,255,171,29,195,115,75,186,151,188,104,103,197,149,73,146,57,175,11,231,198,78,4,112,102,3,157,163 };
    byte_vec_t pk { 4,7,65,123,149,108,36,4,10,53,229,172,67,78,117,7,193,238,34,178,80,163,76,209,91,172,28,3,168,244,85,16,199,185,101,192,61,229,48,233,171,19,84,68,164,110,105,4,189,126,42,107,13,10,87,227,153,212,142,164,225,80,82,97,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 881 ") {
    byte_vec_t msg { 250,189,141,245 };
    byte_vec_t sig { 115,251,156,184,47,235,167,175,234,222,97,252,43,87,91,211,116,252,156,126,143,101,22,148,8,197,33,122,28,40,177,128,132,106,34,55,74,92,230,216,28,141,186,111,53,14,91,102,193,27,96,3,50,200,129,15,154,132,60,225,142,26,243,166 };
    byte_vec_t pk { 4,153,197,106,100,95,17,5,97,58,64,166,69,181,146,211,8,151,157,117,147,216,163,168,192,233,162,175,45,185,176,51,171,199,213,19,75,34,38,161,105,74,202,162,242,64,122,90,216,190,40,236,19,98,78,140,154,123,88,153,19,254,139,179,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 881 ") {
    byte_vec_t msg { 145,171,58,241 };
    byte_vec_t sig { 248,131,11,178,156,62,115,24,76,195,19,163,173,13,169,193,169,104,11,202,208,155,141,131,239,222,239,32,220,87,7,22,157,114,79,193,131,177,174,18,191,153,170,165,50,232,234,76,177,114,60,205,93,168,185,109,185,67,72,192,15,184,104,201 };
    byte_vec_t pk { 4,73,106,205,14,65,230,138,247,9,153,168,186,16,72,154,214,204,185,252,77,132,196,224,145,5,18,11,118,111,96,57,237,245,78,192,222,232,22,40,130,151,177,205,57,88,31,22,49,201,111,69,194,184,136,126,83,4,245,90,101,143,131,207,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 882 ") {
    byte_vec_t msg { 126,216,220,29 };
    byte_vec_t sig { 188,113,63,104,174,62,40,142,58,150,98,96,206,154,81,36,155,142,163,162,241,7,210,246,2,94,77,200,242,198,47,112,45,90,89,158,53,0,27,98,185,110,135,25,160,244,149,169,78,69,2,181,51,242,218,108,193,33,97,159,61,150,19,140 };
    byte_vec_t pk { 4,223,107,29,186,191,232,234,33,161,62,235,20,20,167,232,31,54,197,203,217,41,77,138,251,121,25,32,222,16,26,147,29,216,234,53,208,200,71,84,10,241,241,115,194,14,242,181,5,19,81,158,221,37,5,91,247,121,241,218,110,41,170,180,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 882 ") {
    byte_vec_t msg { 81,178,109,221 };
    byte_vec_t sig { 29,208,62,10,41,226,185,10,223,126,42,150,113,170,242,96,76,237,253,212,80,203,245,186,229,93,169,71,230,137,96,88,86,41,116,173,3,44,249,212,114,235,150,206,239,109,173,240,19,223,30,134,167,138,86,130,145,94,171,149,164,31,223,105 };
    byte_vec_t pk { 4,148,84,71,150,227,236,216,60,97,120,233,42,93,1,65,8,253,209,49,215,215,247,135,130,174,140,214,121,40,251,153,127,59,243,62,133,240,95,98,48,137,226,52,168,197,118,193,155,221,176,113,205,187,218,85,207,27,198,187,211,72,216,163,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 883 ") {
    byte_vec_t msg { 99,125,64,79 };
    byte_vec_t sig { 95,8,234,225,230,33,124,191,148,86,151,2,68,195,150,242,196,213,151,74,160,172,239,11,233,11,127,53,168,163,122,97,202,195,106,139,218,199,232,27,213,92,241,188,206,96,211,42,114,203,250,202,238,164,114,221,43,122,194,75,35,202,14,44 };
    byte_vec_t pk { 4,88,177,254,180,27,157,87,253,111,40,113,96,180,82,48,229,23,92,195,214,55,90,52,162,231,104,1,177,238,105,81,185,238,42,101,52,104,249,148,243,118,6,173,220,157,23,203,30,6,229,230,82,246,27,123,91,241,182,173,244,216,121,230,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 883 ") {
    byte_vec_t msg { 130,251,132,1 };
    byte_vec_t sig { 187,231,105,38,214,73,220,2,215,139,17,226,51,134,254,27,67,206,202,63,101,143,251,55,14,66,57,121,21,227,226,179,15,140,151,38,162,39,224,6,113,28,42,136,64,252,106,30,224,117,180,12,49,175,151,134,252,229,233,9,242,133,21,62 };
    byte_vec_t pk { 4,26,227,157,191,225,48,45,220,156,27,100,14,16,68,221,90,31,31,127,216,1,244,2,170,60,129,8,142,73,124,74,34,12,146,55,186,41,238,42,228,189,29,130,185,102,166,31,26,129,216,181,230,109,109,31,248,116,83,137,37,109,54,111,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 884 ") {
    byte_vec_t msg { 213,221,147,102 };
    byte_vec_t sig { 114,133,137,191,147,205,62,253,109,157,19,123,107,2,153,13,195,67,168,36,242,233,78,195,228,117,7,213,151,101,116,168,228,29,249,178,251,204,17,80,176,186,18,139,115,172,184,211,0,16,235,154,99,231,244,200,191,217,248,98,141,143,187,192 };
    byte_vec_t pk { 4,188,242,154,232,213,74,229,29,108,208,0,203,170,246,91,155,120,123,13,14,32,186,63,204,97,116,235,218,253,237,205,66,3,92,25,215,161,14,48,125,103,228,163,14,14,255,246,168,245,169,166,53,217,49,240,29,119,66,251,184,51,94,153,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 884 ") {
    byte_vec_t msg { 30,237,247,238 };
    byte_vec_t sig { 255,73,34,119,84,92,214,150,8,204,160,25,175,9,229,160,150,70,156,125,240,217,27,77,63,196,64,121,132,28,176,49,44,186,231,230,68,9,125,154,145,122,221,18,158,103,229,243,74,74,111,17,48,23,82,84,124,93,188,24,136,122,62,60 };
    byte_vec_t pk { 4,160,189,8,181,162,11,56,98,112,189,66,207,126,71,94,129,148,165,183,48,95,195,150,116,1,25,83,220,24,253,76,58,176,115,106,57,107,54,193,176,251,172,211,226,17,151,167,148,12,75,210,30,166,186,77,140,228,173,190,208,181,108,57,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 885 ") {
    byte_vec_t msg { 156,102,5,79 };
    byte_vec_t sig { 235,33,28,166,229,222,67,240,47,252,3,31,138,229,181,47,163,82,221,168,185,74,56,169,169,246,7,156,141,147,28,152,179,148,232,165,61,46,91,133,215,63,171,180,159,6,127,187,239,37,218,39,127,23,113,2,98,111,240,70,231,213,185,80 };
    byte_vec_t pk { 4,10,73,175,188,36,23,197,171,194,126,27,201,175,151,28,151,209,93,96,192,140,20,48,22,182,248,187,14,173,226,167,175,218,124,198,46,67,36,226,83,33,151,155,144,178,76,125,132,41,157,230,93,164,88,61,154,110,15,219,24,208,85,212,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 885 ") {
    byte_vec_t msg { 113,252,232,190 };
    byte_vec_t sig { 144,243,158,161,254,231,134,67,61,227,84,18,8,199,200,59,117,141,156,160,53,41,89,43,161,97,89,74,118,48,214,231,231,25,74,50,51,141,132,133,79,41,229,189,196,76,210,165,244,180,9,182,105,13,133,180,40,100,251,189,221,65,100,41 };
    byte_vec_t pk { 4,143,191,197,2,243,138,103,95,175,53,124,9,42,108,202,33,148,20,137,33,48,158,16,204,107,190,21,191,216,189,143,22,200,141,71,37,6,229,168,219,41,242,221,212,180,233,177,194,54,254,246,152,231,254,52,43,71,27,37,94,221,130,157,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 886 ") {
    byte_vec_t msg { 231,203,89,123 };
    byte_vec_t sig { 141,255,40,153,64,123,230,157,56,29,231,124,230,182,249,137,23,162,0,169,57,60,107,66,29,85,40,213,207,204,33,197,9,68,26,52,64,51,123,4,243,19,163,82,88,232,106,92,160,112,65,49,214,217,53,190,91,103,150,61,174,163,230,248 };
    byte_vec_t pk { 4,191,88,216,59,20,60,127,16,25,145,213,238,242,44,164,40,220,191,173,192,93,244,47,185,204,120,239,27,80,41,11,119,157,94,178,199,171,87,178,66,210,204,246,12,164,133,154,9,165,50,40,59,200,198,106,206,98,227,137,46,188,108,204,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 886 ") {
    byte_vec_t msg { 184,26,178,181 };
    byte_vec_t sig { 61,247,14,43,135,214,58,103,94,99,242,20,50,79,135,171,35,57,128,95,36,146,93,36,107,54,136,79,53,142,36,197,254,209,141,246,223,241,196,37,118,226,142,252,148,129,142,121,150,11,197,191,237,133,245,74,98,217,76,84,89,117,208,230 };
    byte_vec_t pk { 4,251,162,36,191,169,148,212,190,103,197,154,238,39,76,236,69,91,72,73,71,38,230,40,221,2,192,49,117,24,239,79,11,66,79,239,101,237,69,241,106,253,34,81,77,110,179,223,111,107,43,91,150,183,225,61,72,217,176,57,17,174,188,221,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 887 ") {
    byte_vec_t msg { 117,136,127,68 };
    byte_vec_t sig { 123,251,120,13,224,84,57,76,198,228,62,162,195,204,151,178,2,93,250,75,220,1,29,75,166,248,102,68,238,253,208,44,51,14,93,247,93,146,175,200,110,65,46,25,111,226,183,250,246,230,178,38,6,10,216,9,170,166,115,118,27,223,5,42 };
    byte_vec_t pk { 4,232,84,246,242,57,78,1,103,84,243,217,222,123,11,21,0,125,195,244,41,140,121,43,72,124,7,102,25,195,100,61,198,208,50,36,249,137,251,117,114,232,26,236,184,185,28,70,3,214,87,150,41,149,191,20,24,116,182,19,238,119,109,250,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 887 ") {
    byte_vec_t msg { 155,21,184,99 };
    byte_vec_t sig { 86,130,41,8,110,228,159,29,162,70,53,178,11,19,115,171,155,20,230,20,55,180,52,240,111,62,148,61,247,5,238,23,220,49,181,72,171,12,164,172,115,11,165,253,9,112,54,3,220,81,81,138,79,90,143,12,77,26,60,72,98,105,119,192 };
    byte_vec_t pk { 4,253,198,185,181,181,136,144,155,82,7,217,82,42,46,18,28,118,58,162,154,197,234,181,196,108,28,9,22,213,147,204,60,250,41,209,135,180,207,28,188,232,59,131,58,226,215,98,224,127,135,173,201,105,254,193,5,136,147,76,104,18,207,138,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 888 ") {
    byte_vec_t msg { 46,172,161,76 };
    byte_vec_t sig { 78,209,250,50,66,181,204,89,180,107,217,205,120,178,130,212,110,168,217,200,215,70,22,5,148,252,1,36,102,20,70,29,165,70,48,228,157,246,200,156,244,58,95,120,126,138,81,170,191,62,224,38,195,240,156,28,171,44,200,110,101,16,217,87 };
    byte_vec_t pk { 4,97,163,196,163,20,50,66,189,193,40,204,25,149,178,107,230,212,90,139,117,137,201,4,34,35,106,5,32,21,197,63,93,195,129,177,168,14,74,95,29,69,34,67,223,54,140,237,142,223,219,234,140,200,103,243,80,21,238,155,130,67,199,112,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 888 ") {
    byte_vec_t msg { 250,46,28,16 };
    byte_vec_t sig { 193,140,154,234,79,102,35,162,177,217,81,51,224,80,205,250,207,18,172,162,53,183,249,36,161,178,193,86,173,239,97,111,163,224,162,19,226,99,185,104,137,80,231,205,174,45,94,110,100,2,149,92,227,198,55,93,202,145,150,103,252,165,71,247 };
    byte_vec_t pk { 4,28,181,33,198,184,137,213,99,184,229,19,188,139,77,150,243,144,23,163,82,6,129,229,56,68,90,213,230,52,147,240,231,165,239,235,231,80,239,167,54,220,13,198,90,237,55,239,129,226,236,82,5,41,136,75,86,91,218,125,152,228,220,77,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 889 ") {
    byte_vec_t msg { 167,132,42,17 };
    byte_vec_t sig { 94,93,51,249,124,74,77,74,109,103,81,92,77,134,24,100,180,25,186,119,106,59,227,166,100,93,104,195,45,52,105,93,250,201,187,22,7,93,177,151,35,82,26,198,118,74,226,15,78,9,73,183,0,5,54,139,240,224,70,120,235,196,189,134 };
    byte_vec_t pk { 4,22,100,144,32,57,81,56,9,135,112,75,115,214,201,177,183,70,156,235,199,107,140,123,170,7,136,182,215,6,35,229,23,165,10,163,218,246,121,128,141,28,16,212,99,239,43,235,20,163,174,163,85,219,110,119,87,3,66,1,180,66,128,85,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 889 ") {
    byte_vec_t msg { 83,103,128,177 };
    byte_vec_t sig { 29,12,45,75,114,70,195,209,252,17,116,194,195,17,39,199,175,140,95,67,139,225,195,1,64,215,194,79,138,218,182,189,122,111,126,7,128,173,174,245,99,123,113,254,19,213,45,1,169,110,82,147,104,189,147,167,170,249,101,33,241,120,77,41 };
    byte_vec_t pk { 4,191,246,133,29,47,226,252,59,41,230,160,253,112,234,187,212,101,222,182,210,36,93,31,162,6,96,69,144,69,68,169,131,50,83,215,70,181,139,95,9,144,212,135,97,219,203,201,20,213,35,135,243,56,242,31,109,157,24,130,36,136,88,82,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 890 ") {
    byte_vec_t msg { 117,200,71,73 };
    byte_vec_t sig { 77,144,120,21,15,109,160,222,42,120,177,202,35,119,2,247,219,83,15,58,26,218,16,46,225,222,131,78,198,59,82,248,164,138,135,16,25,23,236,170,105,50,148,140,50,187,252,3,54,164,229,195,59,105,246,33,159,160,235,171,61,127,12,200 };
    byte_vec_t pk { 4,233,43,206,226,8,227,234,188,108,231,71,251,107,74,250,8,165,86,18,152,221,169,244,30,181,2,59,171,136,154,184,132,168,240,108,133,148,218,112,58,8,49,167,34,93,245,83,75,16,64,66,218,187,48,70,179,146,18,34,53,12,155,57,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 890 ") {
    byte_vec_t msg { 124,161,224,3 };
    byte_vec_t sig { 141,119,64,85,116,220,167,135,41,214,89,191,171,189,22,64,140,79,254,104,237,94,92,83,55,28,73,148,210,125,123,1,165,58,17,125,97,22,190,147,36,102,63,124,222,39,199,64,17,145,207,124,215,112,16,88,91,31,226,139,17,14,165,197 };
    byte_vec_t pk { 4,242,177,89,53,139,9,42,216,29,169,35,62,65,50,252,33,21,20,94,252,225,241,38,48,84,1,51,82,199,23,151,24,148,192,74,59,239,178,9,200,45,170,27,175,107,91,21,205,0,220,166,61,101,190,54,190,184,108,1,246,58,52,172,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 891 ") {
    byte_vec_t msg { 6,145,158,24 };
    byte_vec_t sig { 204,254,162,39,245,196,210,235,44,8,189,188,28,145,152,70,78,34,190,54,22,230,225,79,69,36,192,55,116,166,82,141,76,231,248,179,153,28,225,239,44,195,233,65,204,250,105,98,191,255,29,173,127,0,98,210,139,145,130,169,182,165,51,209 };
    byte_vec_t pk { 4,138,161,5,137,223,148,190,174,81,198,100,222,54,51,197,196,253,251,191,166,174,92,226,194,24,19,123,57,230,174,219,228,94,88,233,87,179,62,124,12,134,230,115,202,24,48,125,122,47,218,97,243,77,19,206,86,143,138,47,236,123,93,147,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 891 ") {
    byte_vec_t msg { 109,73,184,226 };
    byte_vec_t sig { 250,143,5,143,9,225,127,23,120,56,39,244,33,50,142,217,107,202,235,208,154,200,192,241,249,13,157,125,163,234,73,191,144,84,2,14,126,76,239,202,222,173,228,94,153,19,134,71,251,42,224,97,213,159,170,141,124,153,161,187,218,100,71,74 };
    byte_vec_t pk { 4,6,232,227,57,252,150,31,83,209,25,197,150,51,77,148,230,108,82,35,125,37,153,50,57,142,99,160,200,85,218,72,26,73,9,47,17,14,162,16,82,46,117,15,177,29,203,247,167,203,40,95,54,69,124,69,175,101,248,108,221,97,10,190,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 892 ") {
    byte_vec_t msg { 156,66,32,14 };
    byte_vec_t sig { 38,175,87,247,140,81,203,234,23,215,117,185,19,25,48,85,50,120,47,141,121,165,112,176,215,189,185,45,68,98,248,183,84,39,218,251,182,150,1,44,199,181,217,35,109,250,86,11,61,217,215,136,116,151,57,60,170,224,170,244,82,75,12,243 };
    byte_vec_t pk { 4,149,133,73,0,219,242,91,205,178,239,188,196,112,140,253,178,216,236,47,2,0,30,82,23,248,222,46,138,51,239,68,172,153,107,228,87,246,252,237,231,177,233,208,167,14,254,67,226,26,185,0,66,108,20,111,241,94,169,238,32,94,236,31,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 892 ") {
    byte_vec_t msg { 11,102,49,164 };
    byte_vec_t sig { 85,141,113,56,70,180,42,250,232,193,171,248,162,134,100,26,220,202,247,179,84,153,95,71,80,66,206,116,83,75,2,250,62,111,202,35,160,238,165,68,35,161,28,254,240,179,65,195,40,137,134,193,174,141,214,127,215,234,171,242,246,107,201,228 };
    byte_vec_t pk { 4,185,36,33,211,110,98,238,63,33,187,56,140,232,148,97,36,245,23,131,174,206,87,12,230,75,149,0,60,135,253,241,122,234,0,105,121,7,195,152,101,219,66,17,90,103,212,252,229,49,51,177,230,27,236,194,192,61,96,102,207,29,108,50,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 893 ") {
    byte_vec_t msg { 157,16,232,116 };
    byte_vec_t sig { 94,88,171,57,1,176,61,118,41,152,105,166,82,94,81,165,77,93,25,162,217,124,247,238,31,46,20,199,199,40,33,209,129,159,149,148,61,202,4,173,184,66,171,196,83,141,224,233,108,163,64,222,36,188,48,189,25,238,236,244,134,186,14,158 };
    byte_vec_t pk { 4,238,208,30,58,81,120,243,214,81,126,186,230,134,45,56,222,39,22,9,12,194,190,50,40,91,105,143,75,74,209,50,127,176,149,46,40,120,6,105,203,44,108,251,78,143,231,159,165,234,213,37,181,79,92,93,156,115,222,112,141,45,81,180,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 893 ") {
    byte_vec_t msg { 126,161,2,241 };
    byte_vec_t sig { 222,139,148,32,203,220,27,103,205,137,175,161,52,236,184,161,160,255,161,204,232,64,164,170,192,212,71,253,163,237,166,162,56,43,93,7,106,109,175,126,246,45,189,136,47,72,151,158,104,236,5,103,64,19,192,49,80,149,41,98,61,150,224,108 };
    byte_vec_t pk { 4,34,20,57,18,26,186,255,63,126,17,131,131,207,169,187,156,203,56,154,240,247,24,194,86,19,220,245,186,201,37,43,84,154,47,108,106,46,128,174,252,234,141,24,11,172,195,128,227,144,51,203,102,171,163,61,51,119,76,64,147,134,55,40,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 894 ") {
    byte_vec_t msg { 205,126,6,204 };
    byte_vec_t sig { 254,249,198,216,183,29,126,11,70,171,83,45,143,239,64,237,27,223,140,11,42,185,123,156,77,6,164,236,206,229,239,12,20,81,50,56,195,73,113,242,216,108,134,187,38,14,173,178,187,246,167,221,82,197,14,3,13,210,124,39,9,237,8,180 };
    byte_vec_t pk { 4,127,204,205,62,146,147,141,150,66,43,6,240,23,190,47,106,89,127,63,245,8,253,7,206,236,208,221,207,91,126,57,144,138,204,221,202,234,69,80,5,244,138,29,74,91,58,128,113,210,120,226,236,42,24,236,128,26,146,88,120,13,10,180,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 894 ") {
    byte_vec_t msg { 19,64,86,151 };
    byte_vec_t sig { 63,111,80,169,217,172,26,115,170,82,101,109,135,5,102,3,194,170,49,225,162,117,213,87,214,237,28,230,230,227,44,40,30,176,184,77,9,122,103,236,92,184,19,217,124,96,125,35,136,169,140,125,72,56,157,84,252,172,211,238,192,155,184,80 };
    byte_vec_t pk { 4,253,248,135,210,217,228,53,133,156,69,5,19,30,105,196,227,247,188,109,189,169,179,75,223,203,117,79,142,241,245,2,86,66,11,133,7,251,50,183,34,152,105,219,60,104,165,141,143,114,56,236,122,182,49,163,152,227,193,126,235,150,104,86,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 895 ") {
    byte_vec_t msg { 80,173,146,14 };
    byte_vec_t sig { 115,50,201,101,167,172,148,146,249,210,226,237,235,205,89,213,108,91,47,230,131,174,108,234,99,97,57,136,93,66,88,251,238,22,113,198,208,39,51,85,1,20,164,103,12,187,205,76,216,233,69,9,91,241,252,138,159,94,38,192,199,248,27,217 };
    byte_vec_t pk { 4,142,194,133,177,197,179,90,144,90,92,68,54,234,19,250,223,213,82,117,187,205,235,32,130,62,6,195,158,39,137,254,10,254,232,255,227,103,131,132,50,110,94,212,48,94,246,31,91,95,229,162,98,203,40,186,52,37,41,2,66,253,240,76,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 895 ") {
    byte_vec_t msg { 124,184,20,245 };
    byte_vec_t sig { 175,158,101,120,40,0,50,229,85,205,55,221,168,6,26,76,67,152,234,8,242,45,70,123,135,155,47,183,155,97,254,160,50,101,167,57,196,26,117,180,73,107,185,48,128,141,232,188,110,115,138,45,178,29,116,139,82,95,82,94,33,166,55,206 };
    byte_vec_t pk { 4,235,235,170,133,86,99,138,133,2,78,12,33,226,95,116,144,45,28,116,67,178,2,205,46,88,216,155,144,5,19,85,142,24,21,14,241,66,152,176,181,105,11,95,121,29,231,188,154,162,88,229,164,84,151,228,159,129,234,171,29,40,159,11,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 896 ") {
    byte_vec_t msg { 69,175,134,21 };
    byte_vec_t sig { 183,179,228,80,80,178,106,244,127,223,230,118,98,34,232,123,81,47,49,27,83,24,43,184,115,53,202,105,126,129,20,84,114,8,108,1,23,80,122,206,80,2,17,212,244,168,112,105,194,210,215,36,221,164,63,223,170,192,118,62,11,71,200,246 };
    byte_vec_t pk { 4,54,89,239,181,230,170,221,65,85,98,145,24,234,121,236,10,161,80,174,37,197,159,221,178,43,212,219,252,117,198,178,32,122,213,81,192,109,169,7,244,92,112,142,222,108,96,189,255,98,34,142,9,152,112,115,20,177,214,200,239,159,163,4,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 896 ") {
    byte_vec_t msg { 101,187,237,140 };
    byte_vec_t sig { 140,169,219,186,229,104,230,107,190,82,106,184,152,50,70,157,197,103,107,156,142,227,147,208,124,157,23,142,92,199,2,157,216,79,218,43,53,29,113,136,158,233,1,108,76,159,161,182,182,120,189,93,236,11,176,120,56,101,31,240,211,114,133,194 };
    byte_vec_t pk { 4,182,208,254,205,46,187,79,132,249,190,248,146,61,110,255,24,6,200,64,104,182,95,202,163,81,4,49,79,196,31,113,86,15,228,57,57,212,65,168,188,218,148,222,20,33,92,103,176,86,169,206,20,112,209,189,143,102,6,73,153,68,93,112,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 897 ") {
    byte_vec_t msg { 155,242,85,203 };
    byte_vec_t sig { 242,65,68,204,177,45,80,79,177,214,5,212,70,42,181,67,252,100,73,40,18,93,82,152,88,168,195,11,90,22,41,239,227,10,100,255,185,162,73,3,207,24,45,25,33,141,229,123,215,240,242,160,190,57,83,157,113,143,161,203,245,17,121,249 };
    byte_vec_t pk { 4,244,191,138,109,90,247,18,18,170,202,243,160,146,16,184,150,157,220,1,252,223,49,78,134,49,221,3,213,89,172,16,88,2,133,124,135,158,51,7,203,187,103,254,191,104,220,130,64,92,183,16,118,87,236,173,46,192,72,106,62,99,136,143,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 897 ") {
    byte_vec_t msg { 164,164,214,36 };
    byte_vec_t sig { 109,191,157,160,151,46,118,91,118,150,179,149,108,235,78,69,119,150,158,190,110,242,96,102,112,80,238,76,125,175,171,246,89,25,11,79,45,3,249,137,111,185,17,195,44,0,122,163,83,119,3,67,176,209,110,205,5,218,14,64,71,92,233,191 };
    byte_vec_t pk { 4,87,216,74,33,60,75,136,13,140,215,110,217,255,32,190,185,38,177,193,2,32,227,193,195,222,226,201,203,109,169,105,99,24,236,253,11,38,49,189,17,203,20,222,119,251,1,135,143,226,74,248,162,251,68,196,177,107,56,225,104,73,14,4,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 898 ") {
    byte_vec_t msg { 72,169,156,234 };
    byte_vec_t sig { 23,133,77,145,56,211,177,195,240,145,189,26,42,46,161,179,209,155,125,11,116,225,133,202,252,10,136,38,245,65,217,234,48,210,241,160,10,123,19,48,113,239,202,178,20,114,187,253,100,218,135,242,227,185,111,78,76,101,198,230,193,208,51,111 };
    byte_vec_t pk { 4,104,63,199,1,6,41,35,116,108,242,9,81,105,54,24,155,135,152,154,69,27,204,229,210,61,109,173,121,21,164,135,112,30,198,147,251,12,98,218,76,61,60,202,52,170,15,120,5,27,210,71,221,53,186,30,61,68,0,23,133,145,143,46,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 898 ") {
    byte_vec_t msg { 115,222,216,125 };
    byte_vec_t sig { 186,40,200,11,58,254,57,75,207,106,230,228,186,207,70,189,233,160,113,253,113,253,219,135,88,253,124,95,20,101,124,229,111,195,215,46,240,250,75,244,52,195,248,34,233,109,57,110,131,150,23,69,44,152,54,160,81,240,88,21,87,167,184,184 };
    byte_vec_t pk { 4,23,193,250,91,101,148,11,71,167,127,154,137,81,44,214,158,126,229,130,244,234,143,158,49,87,190,22,80,75,187,103,111,238,151,16,33,253,146,210,158,215,229,177,215,107,161,116,171,136,254,34,112,76,45,17,20,12,193,82,47,253,65,181,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 899 ") {
    byte_vec_t msg { 99,121,161,211 };
    byte_vec_t sig { 39,11,199,26,215,110,190,208,181,115,124,5,205,191,79,175,40,10,21,96,119,29,33,36,86,110,198,141,196,123,168,109,99,74,122,89,199,171,87,65,218,58,240,247,173,54,179,143,197,254,225,209,183,94,169,175,212,15,96,194,23,27,252,245 };
    byte_vec_t pk { 4,220,211,87,119,114,216,66,34,208,242,218,88,65,167,38,39,151,184,200,203,6,181,165,173,207,112,247,89,183,139,217,174,138,148,114,141,194,98,171,237,169,253,222,246,203,251,63,122,73,82,109,250,137,201,94,56,154,211,54,131,232,212,120,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 899 ") {
    byte_vec_t msg { 93,169,122,65 };
    byte_vec_t sig { 47,147,114,36,146,197,191,127,136,228,121,77,71,42,55,132,0,232,131,191,49,173,181,54,129,138,107,128,65,185,204,222,65,132,2,193,180,55,147,10,211,38,11,214,48,187,110,235,203,189,90,147,134,239,217,69,211,101,48,189,149,39,126,138 };
    byte_vec_t pk { 4,210,234,249,213,54,245,145,84,50,66,82,109,167,218,34,231,143,205,94,19,143,200,82,231,251,237,96,42,250,129,227,139,56,156,75,122,85,24,109,245,62,168,212,185,240,124,218,213,67,231,23,20,218,188,148,184,234,133,85,224,99,53,44,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 900 ") {
    byte_vec_t msg { 237,149,84,111 };
    byte_vec_t sig { 1,179,32,246,116,234,91,176,57,164,241,80,201,28,231,197,156,92,177,166,184,222,7,79,62,136,224,7,191,137,135,85,93,247,0,100,1,171,48,183,111,80,115,159,155,110,6,63,120,112,253,50,134,69,57,74,93,18,93,66,246,14,21,205 };
    byte_vec_t pk { 4,155,244,140,62,59,187,145,94,142,77,75,19,54,18,232,247,114,138,64,216,23,129,246,83,208,229,169,51,193,185,53,212,152,165,75,137,29,115,136,125,197,200,218,13,72,169,152,38,234,80,127,126,131,49,185,98,161,203,108,136,106,224,29,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 900 ") {
    byte_vec_t msg { 223,238,253,64 };
    byte_vec_t sig { 29,36,110,199,14,37,244,59,76,98,18,72,48,110,174,138,235,196,6,149,39,162,206,232,190,51,7,96,233,199,226,12,155,248,121,43,158,16,212,51,119,106,154,32,152,118,121,220,247,148,155,137,155,62,83,231,17,196,56,197,98,113,11,234 };
    byte_vec_t pk { 4,249,243,242,65,118,157,207,56,145,101,222,141,78,0,79,8,143,199,119,65,159,4,120,111,65,199,88,174,34,91,151,6,226,181,174,250,28,160,146,178,170,134,92,111,76,172,65,49,146,50,37,143,21,24,236,167,229,40,255,203,196,237,58,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 901 ") {
    byte_vec_t msg { 38,130,160,168 };
    byte_vec_t sig { 199,122,81,253,205,89,240,13,30,146,164,193,92,29,101,2,176,8,193,238,180,241,27,198,61,155,68,174,200,109,228,211,31,186,65,62,68,8,226,2,0,68,231,182,114,33,103,99,182,217,173,208,184,197,201,0,162,37,165,64,121,183,142,30 };
    byte_vec_t pk { 4,187,78,19,213,150,248,97,125,169,82,208,130,43,43,225,49,22,230,217,146,93,118,187,204,17,142,245,200,121,139,109,38,187,29,39,15,84,7,89,139,72,25,32,95,148,131,40,54,9,237,116,30,168,135,8,141,93,34,39,17,234,41,156,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 901 ") {
    byte_vec_t msg { 122,125,184,10 };
    byte_vec_t sig { 123,196,204,60,76,96,161,200,75,226,92,96,2,31,55,74,165,34,114,64,210,219,99,161,108,205,38,228,159,202,92,247,21,142,131,155,79,224,50,8,79,174,63,190,214,114,255,178,151,243,157,123,183,111,177,155,211,165,197,205,195,17,41,182 };
    byte_vec_t pk { 4,134,215,164,70,37,246,166,55,203,27,253,53,209,78,98,93,47,6,176,146,0,19,166,76,196,198,180,64,145,87,106,213,23,144,84,91,70,38,116,75,90,124,195,184,134,16,150,180,237,167,135,8,100,46,71,218,178,87,183,131,150,27,106,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 902 ") {
    byte_vec_t msg { 252,166,206,238 };
    byte_vec_t sig { 4,112,22,114,49,156,174,137,81,160,105,27,13,36,208,208,249,203,117,43,226,19,138,103,121,116,10,173,174,35,16,63,167,7,186,30,166,27,84,22,46,12,160,152,96,33,87,34,52,77,125,155,231,246,154,37,223,6,166,88,147,156,114,220 };
    byte_vec_t pk { 4,95,57,130,17,104,155,69,131,147,107,77,168,251,174,137,249,163,144,48,101,125,210,43,160,58,159,5,130,227,69,93,2,99,35,26,133,197,90,197,82,196,214,148,6,34,93,72,253,40,139,112,217,146,183,65,203,239,109,74,164,17,160,181,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 902 ") {
    byte_vec_t msg { 220,147,193,226 };
    byte_vec_t sig { 195,97,32,110,245,123,12,197,227,207,32,99,187,146,182,121,104,57,63,208,202,249,2,47,54,194,147,232,160,100,224,121,170,231,160,149,90,135,117,155,75,45,128,136,152,206,138,157,212,10,80,134,192,198,246,187,8,82,44,14,97,111,65,28 };
    byte_vec_t pk { 4,39,158,63,61,81,217,97,27,3,209,149,164,235,122,202,76,34,52,215,18,182,121,201,252,226,184,126,123,197,251,178,132,142,190,119,30,83,6,6,124,166,205,89,105,77,61,190,232,152,180,66,237,40,116,136,52,93,77,75,119,163,216,212,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 903 ") {
    byte_vec_t msg { 56,23,255,101 };
    byte_vec_t sig { 104,81,189,219,107,134,46,168,246,72,155,254,241,129,226,21,164,64,3,152,58,127,240,33,180,19,150,203,16,3,194,82,14,149,178,241,212,70,230,45,135,53,9,51,213,42,86,154,111,236,53,158,76,6,11,237,97,224,32,141,209,125,48,184 };
    byte_vec_t pk { 4,35,26,192,200,87,7,86,150,226,199,240,103,239,196,209,41,133,18,34,125,157,140,192,128,235,22,4,72,138,253,172,115,128,244,146,11,193,195,122,46,101,215,139,235,77,204,88,155,148,249,22,163,47,179,147,129,246,54,85,82,168,239,131,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 903 ") {
    byte_vec_t msg { 227,233,217,248 };
    byte_vec_t sig { 81,52,34,221,185,249,0,222,149,20,183,180,147,234,192,32,60,62,166,83,118,239,46,100,242,155,29,17,2,72,55,35,202,187,154,197,239,219,245,37,57,249,201,113,219,22,108,103,186,33,218,252,192,230,217,162,135,89,41,19,110,28,229,233 };
    byte_vec_t pk { 4,131,246,52,170,47,93,135,41,19,90,25,249,98,172,203,47,239,173,44,72,230,106,226,173,141,141,170,232,226,27,183,9,79,147,211,43,100,51,69,195,94,160,179,122,134,134,27,6,65,105,82,33,166,177,161,14,247,57,173,160,203,68,156,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 904 ") {
    byte_vec_t msg { 73,178,40,227 };
    byte_vec_t sig { 22,176,250,101,43,62,102,33,187,227,252,196,107,131,162,166,163,237,201,55,10,200,6,164,135,22,215,139,112,125,217,196,61,76,95,56,40,77,170,75,211,170,16,49,96,179,193,147,64,121,211,34,150,57,16,248,110,99,25,108,25,168,61,229 };
    byte_vec_t pk { 4,61,2,42,80,128,171,64,35,6,226,144,69,26,12,40,71,126,115,218,23,27,44,160,185,190,213,48,111,81,76,111,16,196,252,111,182,36,31,125,40,180,250,3,24,73,209,87,61,112,77,127,229,163,246,84,228,146,201,141,254,97,125,82,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 904 ") {
    byte_vec_t msg { 135,62,90,93 };
    byte_vec_t sig { 223,34,17,173,135,209,101,57,7,143,238,74,16,206,57,103,192,93,206,6,216,101,174,107,207,67,51,23,252,7,108,234,126,63,119,220,242,145,76,11,91,166,139,192,25,218,36,136,45,178,215,169,30,90,209,168,126,15,195,129,25,207,60,18 };
    byte_vec_t pk { 4,124,195,251,219,59,147,168,68,10,82,71,165,105,31,198,117,43,112,254,210,233,140,168,165,206,31,11,117,254,188,27,204,22,68,93,248,240,93,100,37,153,18,235,222,246,95,56,179,16,123,47,239,221,138,179,215,76,140,132,42,108,137,213,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 905 ") {
    byte_vec_t msg { 41,89,174,212 };
    byte_vec_t sig { 6,202,206,216,110,190,224,157,218,171,20,151,190,198,117,253,164,163,72,24,76,231,38,112,28,79,230,130,38,69,56,34,113,154,245,176,117,167,202,25,60,74,60,18,57,175,62,177,171,184,30,88,6,131,64,239,68,11,198,102,173,40,92,219 };
    byte_vec_t pk { 4,97,56,202,114,68,195,152,46,221,143,233,111,229,172,186,10,209,1,15,10,5,98,134,106,28,35,230,87,184,142,103,142,203,82,0,16,121,183,176,38,127,213,220,246,127,167,201,9,147,21,190,77,9,37,47,249,58,207,103,188,160,252,208,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 905 ") {
    byte_vec_t msg { 17,38,32,244 };
    byte_vec_t sig { 138,209,161,32,35,117,164,220,16,117,244,246,138,119,215,131,245,107,176,126,218,0,109,5,99,102,110,187,243,65,13,208,166,108,2,46,158,219,202,42,236,211,58,27,12,252,239,68,58,231,196,138,241,231,244,190,124,43,123,76,77,27,31,129 };
    byte_vec_t pk { 4,74,97,191,113,192,62,91,29,161,21,97,93,46,218,218,81,215,220,85,107,51,237,135,177,46,32,97,68,104,209,219,95,116,140,110,128,5,183,40,195,95,188,7,145,170,76,72,134,192,120,112,46,232,85,16,23,150,174,119,141,178,26,201,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 906 ") {
    byte_vec_t msg { 226,195,52,126 };
    byte_vec_t sig { 164,165,65,34,72,97,217,246,78,77,230,58,49,235,75,105,63,1,65,151,33,14,106,102,249,254,193,84,205,22,82,121,31,248,33,178,3,228,244,45,186,242,17,61,75,243,222,71,104,140,172,251,118,119,102,3,233,80,144,143,194,178,52,165 };
    byte_vec_t pk { 4,57,238,62,182,107,105,211,63,200,67,254,193,1,83,179,248,185,19,249,203,138,52,128,5,119,128,46,211,179,49,139,160,11,20,86,205,111,95,124,36,179,126,156,108,11,89,143,223,255,52,105,156,232,235,103,77,190,9,140,56,87,52,96,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 906 ") {
    byte_vec_t msg { 251,189,229,136 };
    byte_vec_t sig { 173,155,237,155,141,174,249,218,112,67,99,144,43,229,223,32,232,13,19,229,223,237,2,72,95,210,174,20,167,76,35,94,186,27,95,121,153,18,120,15,88,180,160,87,159,148,113,46,134,201,95,78,185,38,232,77,11,59,1,119,3,135,234,71 };
    byte_vec_t pk { 4,142,45,209,61,79,117,194,24,236,252,200,188,71,158,121,24,76,183,179,101,211,164,12,60,100,190,150,53,79,146,126,240,203,185,23,192,187,227,165,158,242,153,52,58,146,229,104,189,133,19,142,223,75,149,13,58,236,219,146,232,84,246,207,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 907 ") {
    byte_vec_t msg { 5,14,177,23 };
    byte_vec_t sig { 125,23,225,219,102,34,169,163,66,0,232,166,67,208,81,240,173,172,60,45,129,113,36,164,211,25,26,8,182,153,35,166,13,247,31,222,181,103,148,198,147,5,64,133,53,81,73,181,165,134,198,165,190,130,124,128,24,196,57,106,122,95,218,209 };
    byte_vec_t pk { 4,230,76,153,239,22,195,163,50,142,171,169,208,252,233,121,72,220,121,254,244,0,19,48,144,81,18,183,191,34,2,169,229,156,174,223,254,36,61,174,59,243,206,208,83,13,16,173,146,5,146,167,114,122,76,215,25,223,20,148,117,101,253,117,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 907 ") {
    byte_vec_t msg { 245,155,7,137 };
    byte_vec_t sig { 39,127,26,198,97,28,7,64,28,175,247,57,8,59,45,180,39,19,67,19,66,22,7,18,112,166,88,197,158,222,11,126,46,107,170,12,254,81,113,82,162,193,27,227,97,107,32,38,236,162,66,206,212,5,80,173,219,46,26,121,107,248,4,214 };
    byte_vec_t pk { 4,237,248,209,43,189,168,23,64,176,110,116,245,52,149,216,90,162,134,164,133,198,251,13,94,136,182,129,145,224,131,177,3,163,101,28,14,65,230,171,34,163,137,48,88,41,129,162,214,70,194,153,160,204,164,137,214,218,246,148,167,255,67,216,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 908 ") {
    byte_vec_t msg { 56,179,142,170 };
    byte_vec_t sig { 181,177,205,43,63,169,163,219,65,52,168,26,163,204,223,110,244,202,216,96,157,85,88,243,124,205,23,100,175,234,27,248,106,87,15,223,243,74,30,111,95,103,43,230,87,200,11,12,10,152,198,166,100,71,119,59,233,91,80,153,165,216,169,139 };
    byte_vec_t pk { 4,18,152,228,215,62,218,47,252,236,200,236,122,161,112,231,45,11,151,121,158,142,172,253,141,117,196,206,97,146,63,130,71,76,130,245,36,223,212,13,99,138,6,239,194,245,190,169,172,145,108,6,9,180,197,60,196,75,125,21,254,243,133,11,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 908 ") {
    byte_vec_t msg { 226,24,203,102 };
    byte_vec_t sig { 10,37,255,18,21,225,230,242,148,141,145,219,48,241,106,26,211,250,255,196,221,81,125,103,113,201,200,74,200,242,129,217,143,119,227,71,71,155,66,217,132,182,127,168,77,62,83,136,151,156,177,17,150,126,127,60,163,3,92,142,129,186,114,225 };
    byte_vec_t pk { 4,187,188,36,254,108,154,86,87,34,51,104,68,144,164,114,42,51,45,238,15,21,162,246,29,223,31,119,64,52,99,95,199,214,91,226,242,142,126,253,29,87,84,74,118,129,15,87,147,75,36,80,83,83,44,148,33,168,104,111,42,159,0,33,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 909 ") {
    byte_vec_t msg { 24,79,44,98 };
    byte_vec_t sig { 153,10,142,68,92,237,95,243,65,93,129,101,234,18,163,103,140,113,177,118,151,140,90,251,160,105,24,64,138,163,55,252,85,54,208,48,20,38,62,96,86,62,32,37,66,28,175,32,170,234,15,113,203,216,198,54,192,209,78,108,198,171,227,203 };
    byte_vec_t pk { 4,36,98,61,23,232,90,228,102,119,196,147,210,224,43,234,11,175,100,164,1,97,10,133,98,95,102,119,232,88,168,77,7,231,242,184,190,31,83,35,253,10,98,112,203,137,101,97,40,48,108,10,55,26,185,114,71,205,155,73,213,122,99,255,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 909 ") {
    byte_vec_t msg { 125,179,111,107 };
    byte_vec_t sig { 166,69,140,189,58,163,108,62,99,112,61,217,75,128,61,225,73,107,244,120,204,3,53,237,25,17,181,233,170,193,216,221,74,113,108,73,2,35,72,77,93,211,252,19,95,198,144,108,242,38,152,92,63,135,112,46,61,251,182,80,72,60,198,201 };
    byte_vec_t pk { 4,13,41,111,170,174,105,208,11,48,78,99,215,145,10,46,161,177,176,15,148,9,170,198,161,217,228,106,114,219,119,25,128,81,141,137,210,187,37,207,241,101,174,102,21,102,195,104,129,96,185,36,173,181,89,200,57,113,5,80,159,245,81,119,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 910 ") {
    byte_vec_t msg { 98,192,183,223 };
    byte_vec_t sig { 18,233,192,37,51,244,251,248,212,15,81,251,121,219,175,245,65,182,139,99,251,244,145,22,62,51,146,195,190,163,152,255,81,209,0,216,195,17,181,199,118,59,69,108,170,39,182,39,102,1,69,18,37,51,98,118,244,181,85,152,243,192,34,90 };
    byte_vec_t pk { 4,96,196,170,178,142,185,28,99,99,51,54,115,185,187,218,47,16,24,59,244,239,28,150,235,253,198,6,48,212,197,225,244,227,149,30,175,213,26,134,182,39,158,13,71,46,234,254,97,230,137,51,254,105,123,66,201,229,12,27,188,1,100,197,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 910 ") {
    byte_vec_t msg { 58,10,33,28 };
    byte_vec_t sig { 151,164,120,98,216,108,109,113,197,20,218,124,33,170,12,136,209,68,128,50,0,27,124,233,237,102,79,28,93,8,124,110,151,75,46,131,215,1,68,13,36,68,203,45,174,38,190,61,89,23,248,152,217,193,171,147,251,248,99,205,117,33,179,25 };
    byte_vec_t pk { 4,174,126,170,165,46,31,20,241,148,238,238,177,65,7,175,46,208,115,153,34,82,216,250,63,82,23,242,211,208,149,104,137,94,200,230,199,63,134,19,59,223,9,112,46,141,143,153,148,12,56,22,114,24,23,228,95,117,50,16,169,58,17,250,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 911 ") {
    byte_vec_t msg { 234,100,146,34 };
    byte_vec_t sig { 232,135,83,157,66,204,182,214,27,102,67,226,88,185,0,84,49,28,93,59,136,74,103,200,11,31,78,40,212,126,43,142,64,10,210,170,201,76,126,247,179,134,28,20,224,8,91,122,223,204,121,97,138,243,144,189,169,122,37,115,3,147,35,98 };
    byte_vec_t pk { 4,249,201,218,32,250,94,204,134,150,209,236,56,196,66,168,240,204,16,56,202,109,131,96,139,0,196,130,113,25,95,72,103,137,80,141,37,228,51,142,171,234,198,103,228,123,159,178,153,73,122,117,255,70,90,247,220,114,174,39,202,47,192,9,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 911 ") {
    byte_vec_t msg { 240,242,43,190 };
    byte_vec_t sig { 254,234,218,167,237,86,129,115,229,141,162,109,38,68,199,155,160,11,71,231,75,226,82,39,11,38,100,98,168,168,211,66,20,245,40,249,117,176,162,77,221,2,30,72,7,206,195,203,196,151,168,28,37,180,241,55,201,255,211,60,206,78,3,20 };
    byte_vec_t pk { 4,208,166,113,74,133,81,197,176,237,79,209,32,245,11,9,50,231,171,154,163,213,25,21,112,65,120,104,220,73,128,95,159,7,52,240,118,15,38,58,245,236,161,220,4,85,251,70,38,1,95,237,25,183,38,62,105,155,53,50,178,229,150,177,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 912 ") {
    byte_vec_t msg { 92,216,206,156 };
    byte_vec_t sig { 34,141,209,20,50,161,26,36,157,12,128,65,115,90,45,123,134,96,141,132,43,215,146,127,245,169,13,65,133,156,3,234,237,49,125,44,12,83,17,70,34,25,168,1,76,168,106,27,54,186,179,115,253,119,148,174,201,130,218,138,34,252,23,99 };
    byte_vec_t pk { 4,60,44,21,150,50,165,124,200,154,177,192,131,101,89,151,149,56,218,227,5,75,5,124,86,222,175,19,83,73,246,94,13,99,212,251,80,244,217,44,10,80,202,162,61,208,199,63,62,69,26,162,250,95,55,91,92,159,114,146,229,206,96,147,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 912 ") {
    byte_vec_t msg { 140,236,102,95 };
    byte_vec_t sig { 99,20,3,6,196,165,140,72,25,61,210,145,46,172,236,177,144,3,183,253,240,230,13,63,101,134,108,193,219,228,63,138,155,218,222,46,35,60,52,249,133,81,250,172,45,219,159,24,26,145,192,46,77,213,29,200,95,210,93,171,187,206,5,71 };
    byte_vec_t pk { 4,46,198,97,136,175,59,63,137,149,228,34,34,194,236,66,68,205,128,147,5,148,213,248,124,212,233,72,251,167,77,174,212,237,131,121,202,31,137,203,229,17,195,233,252,5,73,246,180,57,230,219,245,230,72,185,32,193,232,143,9,250,233,192,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 913 ") {
    byte_vec_t msg { 37,245,168,208 };
    byte_vec_t sig { 52,40,191,235,252,162,9,100,149,123,4,49,25,53,67,165,160,23,155,179,75,193,211,203,22,218,34,166,16,158,101,152,31,82,94,187,125,237,195,225,22,43,230,245,127,14,54,232,176,234,43,185,161,55,235,166,133,209,164,196,175,58,245,90 };
    byte_vec_t pk { 4,239,141,234,114,233,130,162,170,133,55,167,20,216,97,205,166,187,31,130,219,180,216,161,82,26,75,56,176,186,85,207,255,115,196,31,31,200,46,239,218,221,12,229,159,230,7,139,122,102,96,232,193,36,179,224,77,230,171,151,252,129,178,76,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 913 ") {
    byte_vec_t msg { 18,132,4,128 };
    byte_vec_t sig { 92,183,211,169,200,98,5,23,243,89,137,192,102,91,215,99,39,118,177,15,80,187,223,143,175,253,63,135,231,9,154,28,225,229,73,232,176,126,187,64,191,134,8,252,164,96,112,108,173,147,176,154,234,9,5,40,195,95,26,250,91,252,232,109 };
    byte_vec_t pk { 4,104,153,181,210,51,70,62,155,240,46,170,192,220,52,51,114,193,91,214,221,238,240,84,40,164,7,213,62,33,220,125,191,251,50,61,140,52,11,236,117,60,26,23,56,56,234,155,142,14,25,95,64,244,23,101,145,209,194,236,31,156,243,156,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 914 ") {
    byte_vec_t msg { 20,223,14,125 };
    byte_vec_t sig { 170,96,92,34,37,48,118,190,235,159,1,254,20,159,132,114,87,179,198,245,148,188,134,145,110,70,226,3,142,179,226,225,134,63,228,16,46,11,51,135,118,121,66,77,89,204,118,195,147,248,70,108,95,99,193,217,75,91,27,54,253,80,239,108 };
    byte_vec_t pk { 4,162,98,36,31,129,80,163,217,100,212,199,195,191,186,255,42,144,64,83,158,91,217,6,192,82,240,75,64,44,100,188,125,182,138,112,202,183,119,250,42,116,60,117,35,90,145,175,184,172,163,95,227,6,243,53,135,255,13,205,97,251,50,126,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 914 ") {
    byte_vec_t msg { 20,20,56,128 };
    byte_vec_t sig { 77,176,201,251,64,7,2,136,215,46,116,160,186,143,174,22,108,98,67,109,205,3,165,95,194,95,230,105,72,156,133,168,31,38,197,40,74,231,179,221,135,221,47,217,49,193,94,202,187,167,16,244,173,90,228,12,158,245,207,147,57,66,146,139 };
    byte_vec_t pk { 4,174,199,122,14,110,223,197,254,41,117,89,223,52,60,33,227,222,218,223,17,148,238,96,192,136,80,81,24,143,152,86,115,121,113,140,92,118,224,19,198,10,138,58,235,160,226,224,222,107,126,78,111,232,151,50,111,166,205,222,47,223,31,159,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 915 ") {
    byte_vec_t msg { 142,97,88,117 };
    byte_vec_t sig { 161,3,126,2,251,92,178,233,218,110,212,49,112,253,162,43,176,176,157,54,63,38,232,29,218,8,67,64,234,21,142,201,27,197,55,95,46,77,79,151,224,203,190,162,218,9,119,244,142,152,162,151,58,32,140,87,208,75,10,128,224,137,222,247 };
    byte_vec_t pk { 4,159,38,194,239,175,66,151,10,93,78,173,36,83,197,172,190,223,192,176,131,249,141,206,23,14,138,68,233,6,128,172,180,213,24,182,239,249,169,9,0,0,122,41,117,205,179,108,94,194,35,188,53,126,121,219,141,120,19,158,118,184,75,40,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 915 ") {
    byte_vec_t msg { 247,171,203,100 };
    byte_vec_t sig { 234,252,24,103,161,201,218,115,238,239,29,171,211,179,129,7,123,90,27,194,85,200,220,112,132,180,42,122,57,135,138,73,36,16,20,84,47,65,118,202,208,176,152,183,28,121,167,251,128,75,34,217,219,248,132,23,97,29,155,49,207,216,114,137 };
    byte_vec_t pk { 4,235,236,103,244,169,161,11,215,193,212,156,190,179,21,189,141,170,86,255,173,118,188,144,164,115,192,166,98,84,190,184,167,81,228,254,221,95,113,69,255,215,186,109,45,70,149,244,251,162,168,141,119,213,139,248,125,207,222,181,2,48,187,113,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 916 ") {
    byte_vec_t msg { 81,238,237,45 };
    byte_vec_t sig { 217,242,83,149,216,208,139,63,194,229,163,26,204,49,218,4,59,184,37,210,121,160,216,113,212,165,93,155,237,56,31,49,7,117,212,29,114,10,101,145,16,21,119,14,53,87,119,135,197,244,211,32,54,6,3,19,120,155,80,142,252,181,10,230 };
    byte_vec_t pk { 4,50,187,95,253,242,243,250,105,63,247,58,247,67,42,40,209,177,168,98,193,212,135,9,246,18,29,75,35,84,175,155,75,171,207,180,187,33,202,195,57,164,72,59,153,49,1,156,156,49,63,240,0,186,15,174,162,201,238,241,73,222,119,105,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 916 ") {
    byte_vec_t msg { 96,170,113,83 };
    byte_vec_t sig { 172,215,9,34,33,53,44,95,106,124,162,112,220,187,150,138,153,22,124,44,57,255,206,248,191,118,190,108,51,225,192,174,158,88,231,86,213,78,61,225,224,150,83,169,19,79,22,17,200,216,14,93,15,114,193,232,47,44,85,95,160,242,63,189 };
    byte_vec_t pk { 4,220,34,194,37,121,21,25,174,159,146,134,184,12,12,141,15,228,187,73,65,141,182,182,36,187,57,53,207,170,170,243,153,140,207,240,211,213,22,241,234,237,110,121,66,170,89,4,217,26,184,36,15,208,16,19,45,138,177,27,127,16,179,14,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 917 ") {
    byte_vec_t msg { 142,93,196,5 };
    byte_vec_t sig { 62,255,35,140,162,90,208,167,152,79,86,153,224,86,72,18,57,235,6,93,104,177,114,112,178,23,94,49,180,249,92,200,50,148,72,190,11,253,0,129,226,57,164,238,23,229,30,139,117,28,35,17,190,51,214,187,242,42,254,106,238,141,120,1 };
    byte_vec_t pk { 4,130,76,227,6,158,201,6,98,57,217,43,19,208,79,161,41,41,14,149,223,39,244,77,9,79,156,187,66,200,131,168,89,33,115,119,192,235,145,168,77,255,228,181,249,250,53,211,248,166,174,211,235,203,12,212,121,39,121,127,249,220,3,44,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 917 ") {
    byte_vec_t msg { 113,85,9,134 };
    byte_vec_t sig { 185,158,181,177,10,107,74,174,135,133,174,177,107,245,9,39,201,109,191,159,113,253,41,252,143,35,233,0,142,89,14,223,86,1,84,134,238,11,129,145,170,253,248,149,121,131,28,228,147,106,130,195,100,200,199,45,90,102,149,97,52,225,249,134 };
    byte_vec_t pk { 4,204,165,93,153,62,231,127,201,126,153,94,215,85,237,161,151,161,152,204,20,213,169,150,35,35,252,63,91,227,185,19,99,235,45,108,169,89,188,20,71,196,137,104,67,213,214,12,228,193,241,220,84,18,157,147,151,150,62,141,4,113,45,18,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 918 ") {
    byte_vec_t msg { 224,145,88,196 };
    byte_vec_t sig { 237,108,230,68,107,215,235,83,132,84,236,193,85,167,197,33,62,200,84,73,104,179,92,18,237,85,118,229,223,38,54,123,163,89,90,67,104,97,8,204,159,249,166,146,212,86,101,92,134,240,153,158,7,48,248,4,189,207,64,124,2,246,127,222 };
    byte_vec_t pk { 4,215,197,13,181,27,60,167,5,94,229,198,34,182,133,0,92,147,234,117,227,235,113,99,72,123,89,229,249,245,74,72,147,127,59,120,59,224,189,47,247,204,196,251,70,165,65,226,136,146,234,126,253,5,137,137,166,240,226,40,121,10,5,51,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 918 ") {
    byte_vec_t msg { 123,93,40,90 };
    byte_vec_t sig { 11,159,102,156,79,64,201,42,16,93,34,177,253,143,87,70,100,131,65,238,90,22,242,208,151,230,101,105,169,164,233,80,153,247,210,170,211,12,174,79,249,3,217,25,137,212,248,117,19,19,214,226,12,160,16,13,167,205,46,109,41,67,116,109 };
    byte_vec_t pk { 4,51,219,122,139,10,205,187,31,18,196,144,150,148,239,170,46,202,46,145,72,110,157,188,149,144,70,66,189,41,219,76,44,142,196,67,18,62,122,182,65,196,172,7,231,196,228,229,128,228,71,183,9,89,191,98,150,210,14,198,114,152,48,70,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 919 ") {
    byte_vec_t msg { 154,226,27,206 };
    byte_vec_t sig { 14,67,159,69,54,6,71,76,55,189,247,153,74,143,18,55,36,28,247,121,207,106,205,112,8,28,235,172,33,176,84,231,11,55,250,5,26,127,114,217,23,154,223,178,103,118,75,58,39,36,12,130,102,153,208,90,186,30,107,61,136,139,169,159 };
    byte_vec_t pk { 4,108,194,166,190,107,190,226,223,190,1,171,230,124,150,169,140,174,211,243,77,208,214,205,47,25,85,60,105,97,34,167,167,202,255,249,164,29,180,28,118,68,147,225,112,12,146,224,61,238,1,55,131,3,32,100,40,232,121,212,66,144,127,46,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 919 ") {
    byte_vec_t msg { 51,208,251,105 };
    byte_vec_t sig { 174,237,53,24,17,31,18,155,198,55,168,31,209,184,54,143,34,124,103,180,68,79,225,39,222,144,136,176,97,153,140,87,47,150,60,17,126,19,45,100,78,201,43,123,53,205,129,186,141,145,45,121,224,88,163,165,117,176,71,80,71,243,109,170 };
    byte_vec_t pk { 4,2,186,235,207,137,66,89,182,198,123,97,104,139,245,62,233,30,233,10,59,127,173,180,51,8,80,112,120,102,81,235,88,97,231,240,205,123,211,126,46,164,169,92,104,121,111,62,138,141,22,228,82,76,98,34,18,201,185,106,92,196,252,219,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 920 ") {
    byte_vec_t msg { 33,192,83,181 };
    byte_vec_t sig { 177,164,158,54,180,139,203,198,144,172,175,86,165,245,115,39,160,6,238,220,202,118,14,145,246,109,84,119,49,169,195,207,76,52,81,209,40,116,241,26,139,241,213,15,251,22,177,146,4,166,168,235,55,201,32,197,54,183,69,40,30,24,185,115 };
    byte_vec_t pk { 4,55,22,35,59,188,58,118,116,47,201,60,127,90,160,232,254,240,179,249,128,5,205,148,119,246,47,116,178,74,237,233,199,254,73,245,252,149,69,26,188,236,12,20,125,40,142,251,133,98,15,114,235,73,40,187,62,142,111,58,71,31,192,227,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 920 ") {
    byte_vec_t msg { 136,242,176,70 };
    byte_vec_t sig { 95,204,41,149,159,163,58,45,29,105,234,152,119,249,210,53,142,99,50,185,110,238,94,209,77,230,189,138,152,202,15,234,41,6,156,237,247,18,31,176,64,21,172,104,225,71,240,84,150,197,112,83,44,43,190,206,254,63,7,95,103,240,39,46 };
    byte_vec_t pk { 4,79,120,98,198,116,181,80,91,26,130,228,85,109,82,189,77,167,38,5,47,46,72,98,16,40,175,77,135,187,212,81,130,86,67,133,90,142,138,244,15,65,228,124,46,148,204,97,33,67,209,149,187,28,135,24,132,63,115,107,200,210,115,119,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 921 ") {
    byte_vec_t msg { 159,13,123,27 };
    byte_vec_t sig { 102,43,82,94,223,186,209,60,134,164,51,39,242,91,76,153,160,245,7,11,35,185,116,93,213,223,72,1,170,44,157,49,123,83,113,126,108,45,34,82,159,23,29,254,97,78,151,30,184,135,172,137,233,86,16,84,49,156,149,179,159,90,29,81 };
    byte_vec_t pk { 4,157,253,18,169,153,227,27,11,175,219,111,135,186,92,121,244,158,185,4,166,75,10,120,72,56,220,83,125,4,73,142,28,198,19,66,30,163,78,202,146,171,178,162,244,217,174,253,0,143,128,9,37,81,204,38,38,76,4,23,107,3,216,226,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 921 ") {
    byte_vec_t msg { 64,26,103,229 };
    byte_vec_t sig { 173,78,225,73,160,1,162,95,130,62,136,16,115,46,100,227,186,2,54,171,101,140,112,106,166,99,93,34,181,254,66,17,154,204,59,48,17,209,47,141,227,35,213,233,120,51,138,168,156,35,30,110,225,93,251,117,130,142,56,64,254,75,186,113 };
    byte_vec_t pk { 4,231,143,15,107,149,68,47,99,142,157,106,177,32,43,97,159,238,92,7,156,101,210,132,92,203,206,173,125,246,42,140,228,228,179,228,246,40,178,148,194,255,175,102,73,229,157,220,92,240,15,97,131,86,22,180,77,77,166,60,205,253,193,220,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 922 ") {
    byte_vec_t msg { 41,127,226,34 };
    byte_vec_t sig { 67,151,57,160,177,167,86,168,243,163,132,43,169,43,16,69,141,131,74,77,94,97,164,226,224,137,206,130,208,123,6,150,79,140,204,248,254,16,223,62,105,111,194,74,81,53,183,200,243,99,239,138,158,36,104,30,115,222,225,163,113,50,106,218 };
    byte_vec_t pk { 4,155,94,225,157,168,112,104,15,135,222,141,225,175,57,141,150,178,132,108,83,94,116,197,80,82,31,81,195,147,123,248,108,180,69,86,47,52,66,142,75,17,65,73,114,127,211,42,23,199,18,241,16,60,183,112,79,174,67,142,167,132,23,17,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 922 ") {
    byte_vec_t msg { 133,180,218,77 };
    byte_vec_t sig { 131,140,70,156,121,94,86,57,175,104,238,99,68,28,100,156,123,175,84,35,126,238,60,122,145,236,239,42,250,37,236,2,156,238,203,16,119,83,24,13,53,2,216,33,194,167,32,177,22,133,7,68,209,23,119,89,250,33,222,72,49,88,0,79 };
    byte_vec_t pk { 4,232,62,2,1,219,76,39,117,71,248,181,178,42,225,164,180,4,155,23,140,177,25,167,126,219,67,169,47,29,148,12,95,75,146,105,155,149,44,221,255,134,40,137,251,174,97,154,159,179,178,217,210,126,234,116,212,21,148,167,99,134,153,126,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 923 ") {
    byte_vec_t msg { 232,66,104,163 };
    byte_vec_t sig { 44,193,128,120,174,103,195,99,100,197,32,127,150,51,216,19,13,195,134,101,6,207,206,126,6,45,230,226,105,218,45,252,209,57,68,0,12,133,20,145,38,15,151,90,220,134,179,41,87,26,205,22,169,27,131,136,52,254,174,116,67,48,56,11 };
    byte_vec_t pk { 4,151,97,24,233,178,9,223,110,94,58,92,221,140,240,152,201,206,194,199,50,230,110,181,173,33,153,162,97,231,103,243,99,236,174,229,22,26,104,83,209,182,80,135,98,7,188,186,6,249,176,94,79,117,54,128,140,184,238,108,236,37,128,11,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 923 ") {
    byte_vec_t msg { 248,232,125,34 };
    byte_vec_t sig { 255,254,149,76,230,10,25,67,191,190,67,85,223,127,214,136,108,2,48,184,103,88,251,91,141,109,101,28,43,108,127,95,7,54,197,81,49,210,161,73,233,136,14,97,127,57,29,121,172,106,137,91,42,170,5,218,4,97,88,25,154,47,109,1 };
    byte_vec_t pk { 4,232,71,4,211,202,85,189,84,78,38,208,185,124,78,99,22,192,155,204,146,210,123,255,44,211,6,67,43,250,190,191,19,118,46,104,171,145,197,207,208,227,228,31,139,73,32,124,15,173,209,246,244,187,147,237,127,2,190,166,9,137,185,229,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 924 ") {
    byte_vec_t msg { 57,179,95,27 };
    byte_vec_t sig { 212,21,220,10,96,229,131,183,154,223,241,53,156,43,27,168,110,128,209,199,184,134,109,31,186,147,15,47,15,95,96,241,175,177,215,203,118,28,124,240,44,228,151,178,97,95,195,225,214,242,65,24,115,41,61,183,6,71,162,53,247,243,7,207 };
    byte_vec_t pk { 4,188,22,240,105,95,196,213,185,176,134,65,214,142,103,125,74,208,189,21,114,206,94,239,68,103,59,8,189,166,144,67,62,208,104,90,165,126,41,147,94,175,226,168,29,202,214,218,112,9,145,252,198,237,240,152,99,69,239,97,175,170,91,88,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 924 ") {
    byte_vec_t msg { 111,1,193,14 };
    byte_vec_t sig { 172,49,24,41,113,188,100,216,124,182,195,242,64,8,116,60,159,0,225,79,155,168,206,220,70,48,179,12,20,65,74,31,224,174,196,126,154,22,130,176,147,136,242,239,153,2,132,72,45,167,234,222,15,244,45,66,241,248,105,39,108,63,252,231 };
    byte_vec_t pk { 4,142,207,206,20,27,245,165,44,247,233,207,248,207,202,75,94,73,11,59,53,40,32,74,150,201,219,10,69,50,253,100,179,114,58,189,221,28,138,188,11,89,78,67,227,76,99,146,104,157,145,33,143,240,254,20,215,14,137,232,205,47,120,196,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 925 ") {
    byte_vec_t msg { 100,213,53,18 };
    byte_vec_t sig { 140,205,8,249,160,93,112,131,46,154,26,41,164,33,150,41,168,78,116,177,67,37,98,175,186,85,87,108,195,163,185,24,77,171,100,163,180,40,24,171,124,191,232,200,248,121,171,204,102,33,192,171,39,238,163,178,35,156,233,148,102,12,60,119 };
    byte_vec_t pk { 4,13,81,37,24,164,184,239,182,12,95,62,100,108,118,36,6,124,60,37,194,199,253,246,12,206,31,127,25,93,248,23,237,20,31,45,66,45,65,101,95,167,12,135,23,39,22,81,177,127,247,222,6,97,156,5,125,221,176,81,253,178,135,222,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 925 ") {
    byte_vec_t msg { 85,186,11,78 };
    byte_vec_t sig { 129,181,88,91,147,113,90,255,139,239,84,222,96,169,98,183,190,162,78,164,212,210,235,18,187,171,220,131,86,32,45,33,63,251,151,153,225,163,55,18,140,212,132,111,118,167,12,21,220,147,205,77,16,26,20,212,246,38,37,222,147,30,44,146 };
    byte_vec_t pk { 4,194,98,126,36,167,136,48,241,220,195,188,130,77,167,110,100,127,59,118,156,27,234,112,105,2,128,92,242,115,27,206,39,116,122,231,236,15,171,183,46,129,117,29,100,199,136,219,209,251,55,124,120,115,187,186,155,72,130,31,181,117,143,22,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 926 ") {
    byte_vec_t msg { 3,100,245,194 };
    byte_vec_t sig { 65,163,201,255,246,145,228,70,187,9,176,210,93,147,187,111,63,195,250,145,88,39,22,97,204,249,50,49,149,83,66,42,96,157,113,15,240,195,63,9,59,80,106,238,172,251,99,41,112,182,40,169,40,178,59,99,177,150,89,141,176,201,111,254 };
    byte_vec_t pk { 4,250,233,19,0,112,165,145,34,82,97,52,66,136,84,177,82,147,136,95,250,91,166,158,132,98,70,64,93,55,39,114,130,33,17,252,238,123,202,64,196,218,68,140,116,20,41,253,110,130,9,125,107,130,241,223,217,8,38,31,112,10,249,215,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 926 ") {
    byte_vec_t msg { 54,177,213,235 };
    byte_vec_t sig { 224,185,137,137,236,82,54,193,142,74,35,56,11,143,85,141,84,211,152,82,185,1,57,246,113,5,243,113,179,220,147,192,146,128,206,23,236,245,113,41,51,97,140,5,191,144,118,191,74,219,166,20,226,191,25,63,61,204,123,12,232,43,104,179 };
    byte_vec_t pk { 4,251,20,229,36,234,63,67,209,128,240,171,168,2,134,79,125,3,149,175,198,92,208,161,196,226,125,99,127,110,69,150,249,98,72,18,230,43,61,197,127,168,111,157,211,95,161,186,21,74,160,101,239,80,112,39,222,129,42,124,152,185,130,55,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 927 ") {
    byte_vec_t msg { 73,143,41,174 };
    byte_vec_t sig { 89,200,147,47,243,163,188,59,78,108,69,204,185,40,234,19,60,9,195,222,91,98,2,161,58,212,138,151,216,242,136,227,108,209,87,205,66,151,104,209,37,22,67,67,84,17,54,241,136,61,59,58,233,190,210,54,255,233,198,133,77,80,252,125 };
    byte_vec_t pk { 4,10,84,189,0,155,14,18,233,141,31,132,142,119,50,61,93,189,132,49,117,72,45,192,156,253,158,232,131,48,116,222,151,68,159,111,199,43,182,199,236,243,83,199,24,60,148,166,152,251,106,253,186,151,133,200,202,236,222,193,183,159,233,6,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 927 ") {
    byte_vec_t msg { 155,79,61,253 };
    byte_vec_t sig { 34,7,36,129,34,46,78,179,32,36,21,151,91,82,114,187,144,230,103,206,77,136,71,158,148,25,218,180,93,199,79,96,176,62,19,245,1,121,152,178,40,255,89,79,229,59,176,229,71,211,179,199,83,239,82,178,81,68,146,160,208,146,157,115 };
    byte_vec_t pk { 4,34,109,219,160,19,28,98,240,130,50,0,214,222,31,238,226,195,23,33,101,178,111,162,135,3,43,103,188,117,217,223,53,149,31,31,112,179,191,145,237,41,237,179,3,64,60,202,230,137,234,94,72,72,248,80,244,178,0,211,137,198,157,216,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 928 ") {
    byte_vec_t msg { 116,157,236,26 };
    byte_vec_t sig { 245,97,242,97,172,170,95,242,78,85,127,150,247,19,73,185,214,242,43,36,59,71,229,153,115,67,193,186,62,47,171,85,80,252,175,251,104,113,74,168,73,161,218,103,4,71,255,204,97,142,99,175,1,66,224,221,105,228,59,12,192,49,120,77 };
    byte_vec_t pk { 4,14,47,6,150,132,19,135,117,114,148,227,96,16,196,29,133,166,80,174,242,106,191,229,15,178,222,193,43,43,21,211,204,66,40,20,121,82,2,10,20,133,136,31,48,203,161,47,70,53,201,80,90,182,111,39,232,104,76,95,47,194,75,46,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 928 ") {
    byte_vec_t msg { 252,123,0,173 };
    byte_vec_t sig { 63,104,48,182,210,167,97,129,138,201,18,51,188,114,116,146,185,166,189,87,224,196,57,242,102,17,192,85,175,222,63,2,77,13,43,250,73,236,6,158,11,111,97,61,59,252,242,124,191,244,237,44,88,213,29,111,175,152,127,77,255,205,190,58 };
    byte_vec_t pk { 4,170,93,7,15,24,101,139,192,68,166,245,81,178,189,90,18,247,102,134,69,38,22,82,2,235,63,27,234,212,186,175,45,49,141,57,194,166,225,252,105,19,192,103,52,252,1,40,52,130,215,101,159,141,231,137,233,32,112,114,177,196,116,198,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 929 ") {
    byte_vec_t msg { 74,95,24,49 };
    byte_vec_t sig { 95,44,11,31,27,197,205,167,41,13,216,28,95,110,53,157,251,9,144,201,216,70,218,237,255,212,33,143,77,164,173,207,131,75,226,165,88,120,59,115,66,96,21,18,125,34,222,35,72,142,211,180,120,202,58,216,227,27,224,233,16,56,6,117 };
    byte_vec_t pk { 4,80,225,60,59,217,25,54,35,39,92,124,133,189,35,16,190,20,157,251,73,174,106,159,186,66,151,191,0,159,251,36,147,196,247,145,96,16,37,67,228,117,84,244,145,117,181,60,135,134,122,160,189,168,156,62,204,28,131,250,137,228,83,128,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 929 ") {
    byte_vec_t msg { 154,132,128,26 };
    byte_vec_t sig { 225,222,3,156,48,245,206,221,140,12,228,157,155,0,237,49,249,3,218,98,141,47,233,77,191,86,49,70,47,157,44,174,84,48,109,230,44,41,241,44,108,105,116,55,55,230,88,4,222,212,81,50,19,142,233,146,164,68,155,138,73,136,33,52 };
    byte_vec_t pk { 4,24,148,142,181,110,93,91,98,19,127,144,57,55,252,43,124,65,131,34,128,84,110,199,140,203,44,106,45,124,62,193,45,196,244,222,139,83,240,127,227,90,174,78,211,184,184,158,166,132,171,248,153,62,120,12,247,6,37,105,40,174,171,144,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 930 ") {
    byte_vec_t msg { 146,171,166,224 };
    byte_vec_t sig { 134,124,117,57,155,172,47,180,103,5,13,204,16,175,31,94,78,211,106,134,58,44,130,203,37,130,133,240,0,56,63,168,239,90,88,217,217,54,208,10,98,44,232,142,67,68,23,238,5,93,186,239,77,4,1,89,133,210,12,30,2,63,230,90 };
    byte_vec_t pk { 4,173,112,83,9,93,50,247,163,130,132,135,74,205,158,122,45,250,236,45,58,130,154,198,168,210,48,149,155,171,125,177,2,141,91,22,31,9,116,149,210,29,189,24,197,95,19,37,50,56,28,138,199,7,36,84,121,230,39,200,112,187,27,105,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 930 ") {
    byte_vec_t msg { 137,144,18,29 };
    byte_vec_t sig { 88,57,242,190,157,47,89,94,136,84,152,22,23,135,241,5,202,95,59,98,114,82,163,71,243,229,189,118,208,115,79,198,50,175,15,11,69,172,90,107,124,52,56,152,232,236,70,105,131,175,241,120,230,122,250,22,56,137,242,159,160,58,31,30 };
    byte_vec_t pk { 4,184,92,80,83,130,46,73,241,57,138,157,107,236,110,147,244,152,32,235,201,209,142,154,253,189,131,210,59,77,149,202,91,117,108,141,194,181,79,201,238,139,137,39,132,141,17,43,176,187,54,134,237,139,74,217,26,114,0,212,73,34,70,156,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 931 ") {
    byte_vec_t msg { 33,249,233,137 };
    byte_vec_t sig { 111,143,48,48,142,165,129,136,90,211,99,137,54,132,235,131,82,32,22,145,247,97,197,233,41,185,210,117,147,95,248,112,168,111,139,114,100,11,197,139,134,241,227,209,122,145,105,104,228,251,70,220,159,202,0,99,28,17,253,217,188,245,109,111 };
    byte_vec_t pk { 4,26,252,216,8,78,150,50,64,28,175,121,80,82,6,247,192,207,222,47,39,116,237,195,75,142,115,25,181,147,181,195,12,29,247,2,228,24,9,120,26,51,180,255,230,157,2,39,58,240,131,74,179,62,208,222,194,152,252,120,182,46,95,183,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 931 ") {
    byte_vec_t msg { 225,119,125,74 };
    byte_vec_t sig { 16,57,197,171,19,179,221,120,166,224,134,244,72,191,190,169,113,83,59,145,84,145,249,90,244,200,144,243,35,107,219,168,149,224,118,187,29,4,173,199,76,145,35,46,4,227,38,227,225,214,112,137,48,205,114,23,190,59,27,234,112,82,197,159 };
    byte_vec_t pk { 4,53,155,224,222,178,176,132,48,217,242,214,182,49,26,29,39,80,176,159,10,24,80,249,154,174,40,45,116,172,165,215,146,226,248,244,230,107,113,17,200,86,68,117,43,145,237,95,169,232,13,25,245,198,114,127,7,161,122,47,243,118,204,177,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 932 ") {
    byte_vec_t msg { 128,26,51,234 };
    byte_vec_t sig { 238,151,227,139,5,30,101,99,202,86,62,25,105,151,131,70,2,183,127,246,92,208,193,80,200,147,156,159,104,39,100,136,72,47,205,213,157,76,119,222,7,53,206,195,1,140,60,43,225,196,239,43,65,21,241,209,234,240,70,246,67,222,175,196 };
    byte_vec_t pk { 4,82,166,167,121,205,138,238,66,219,163,239,171,98,208,171,39,224,89,9,80,136,65,38,175,128,118,18,207,172,31,63,116,40,56,228,217,1,47,1,140,237,67,168,35,86,219,110,122,199,125,230,3,161,250,157,207,72,125,157,36,96,0,205,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 932 ") {
    byte_vec_t msg { 125,252,47,137 };
    byte_vec_t sig { 146,70,48,196,130,68,55,54,20,50,116,97,28,228,252,5,106,246,87,231,221,125,250,129,214,129,57,159,44,151,172,118,69,130,255,208,205,174,126,181,60,151,121,142,228,254,50,249,25,245,117,91,238,86,216,125,210,109,87,77,116,146,95,105 };
    byte_vec_t pk { 4,118,55,79,56,252,97,144,205,129,87,82,9,113,165,97,70,255,199,82,160,192,240,237,146,30,222,8,240,132,248,51,191,247,108,129,229,174,80,36,185,202,170,34,114,122,15,115,182,162,186,35,177,24,110,213,128,10,70,43,175,73,10,81,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 933 ") {
    byte_vec_t msg { 41,152,16,216 };
    byte_vec_t sig { 154,175,112,145,60,152,183,118,158,81,177,4,82,1,98,55,237,230,30,14,115,19,112,157,194,234,98,14,16,37,36,108,60,21,80,32,43,208,180,238,203,10,235,161,65,27,3,45,244,254,242,135,57,42,249,200,237,174,126,31,215,111,23,106 };
    byte_vec_t pk { 4,16,214,148,213,105,135,153,203,166,142,241,184,140,81,210,208,135,120,33,165,123,12,181,228,160,232,103,23,157,37,89,4,132,119,73,214,129,153,223,38,69,178,3,187,102,181,127,251,47,14,142,147,25,62,113,9,25,174,176,168,55,49,8,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 933 ") {
    byte_vec_t msg { 221,75,48,163 };
    byte_vec_t sig { 166,188,153,103,15,237,68,252,173,84,169,83,115,24,126,47,44,81,76,99,111,7,20,131,160,37,92,29,70,194,0,75,123,117,158,141,89,10,202,24,140,131,25,255,210,220,72,152,242,152,76,208,17,23,124,86,59,153,208,22,44,146,75,181 };
    byte_vec_t pk { 4,87,33,185,143,234,183,157,131,61,146,136,67,49,155,195,238,210,34,23,22,246,64,127,225,48,56,143,143,198,175,81,162,211,65,7,85,177,44,110,65,114,32,254,90,234,224,109,219,24,5,230,87,38,120,166,157,23,37,106,79,214,140,116,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 934 ") {
    byte_vec_t msg { 100,227,29,248 };
    byte_vec_t sig { 118,110,79,155,215,54,90,205,21,17,156,243,86,108,244,82,13,6,195,144,222,153,184,201,187,205,144,85,83,249,106,243,195,136,188,146,28,236,228,43,15,118,129,1,22,138,151,106,181,219,225,10,68,54,247,98,119,211,113,56,79,192,117,180 };
    byte_vec_t pk { 4,209,236,237,177,42,240,3,92,100,26,175,4,221,145,91,107,223,255,175,215,191,198,113,44,112,32,28,152,161,22,143,46,69,249,125,64,105,94,71,194,208,97,104,198,136,104,138,108,219,156,177,111,180,52,197,194,51,40,187,72,140,251,180,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 934 ") {
    byte_vec_t msg { 105,61,114,94 };
    byte_vec_t sig { 208,220,144,204,98,43,40,206,72,151,197,109,217,205,163,10,117,7,184,1,25,140,107,31,94,178,198,170,40,82,114,116,224,196,164,3,64,91,127,78,81,133,213,248,202,160,108,169,211,41,206,246,91,25,214,245,144,160,146,6,250,147,237,248 };
    byte_vec_t pk { 4,21,236,88,32,123,149,144,57,26,127,243,182,221,2,140,34,104,253,228,241,212,42,119,224,107,228,190,70,213,61,34,151,23,168,8,201,180,191,44,248,59,165,227,11,223,173,65,253,71,191,39,199,199,132,180,64,200,189,82,156,155,38,26,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 935 ") {
    byte_vec_t msg { 217,52,85,147 };
    byte_vec_t sig { 117,224,25,252,167,182,108,82,137,69,162,159,2,119,165,34,19,13,191,11,213,194,156,124,109,231,42,133,87,18,187,30,24,89,162,14,203,176,76,136,214,174,168,188,26,166,28,30,105,254,233,201,24,96,223,217,119,227,201,4,80,108,42,63 };
    byte_vec_t pk { 4,56,193,132,135,198,148,50,123,170,69,25,11,214,158,91,211,198,9,75,62,207,116,130,6,208,72,106,168,252,95,212,51,91,10,255,189,168,217,114,6,164,13,231,212,38,62,109,210,39,89,232,216,155,187,47,204,145,115,96,125,12,153,247,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 935 ") {
    byte_vec_t msg { 69,167,175,125 };
    byte_vec_t sig { 90,156,148,188,215,141,247,37,103,227,100,146,62,231,195,133,145,26,89,181,87,173,111,149,133,207,249,54,41,10,90,246,7,106,211,226,143,19,96,113,103,246,1,233,6,173,68,195,251,2,223,4,32,26,171,9,88,136,193,102,88,249,21,190 };
    byte_vec_t pk { 4,78,168,252,213,191,47,37,213,41,223,111,223,1,218,250,133,204,102,94,53,54,67,170,176,68,235,40,224,98,101,163,158,41,84,221,21,142,89,153,118,95,157,154,105,200,6,161,130,70,140,185,65,22,216,196,110,92,58,26,211,33,71,213,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 936 ") {
    byte_vec_t msg { 33,40,230,36 };
    byte_vec_t sig { 184,100,195,30,7,146,242,57,49,146,95,212,169,135,186,93,157,214,163,200,227,31,141,25,234,32,66,205,84,200,194,138,225,224,144,229,170,117,145,204,57,94,51,167,67,107,184,115,81,104,232,151,131,158,251,219,196,46,34,101,168,162,61,9 };
    byte_vec_t pk { 4,195,197,84,12,136,229,247,87,154,1,98,130,131,114,162,132,199,183,77,65,32,55,127,162,57,65,6,215,106,149,229,1,75,147,151,212,218,27,127,150,193,235,122,159,228,29,202,173,170,6,148,108,199,76,105,64,90,98,144,69,184,181,141,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 936 ") {
    byte_vec_t msg { 253,49,128,203 };
    byte_vec_t sig { 170,53,221,87,29,185,67,117,153,104,229,14,231,121,96,122,101,244,12,238,112,12,57,45,74,142,247,59,136,185,69,155,7,99,206,27,219,99,119,231,211,13,79,101,96,160,25,73,225,66,115,100,24,26,99,18,71,79,93,114,122,49,125,158 };
    byte_vec_t pk { 4,159,241,106,68,48,150,75,150,41,54,13,91,184,143,59,208,24,122,150,43,159,194,36,78,159,168,6,66,51,186,7,7,221,191,114,92,242,151,108,228,24,173,132,85,17,112,202,34,130,164,106,77,85,157,152,75,203,43,68,178,150,232,170,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 937 ") {
    byte_vec_t msg { 43,12,157,206 };
    byte_vec_t sig { 121,23,219,32,8,110,52,229,98,216,176,94,218,219,45,87,200,30,2,172,214,91,221,247,154,220,134,13,6,105,133,22,178,174,170,181,56,232,153,51,212,240,98,147,2,97,33,22,65,182,112,55,26,189,103,68,178,153,252,7,20,201,212,165 };
    byte_vec_t pk { 4,37,127,44,248,119,225,112,144,155,166,24,125,193,153,149,82,216,104,225,56,0,9,13,155,172,188,191,74,133,217,240,248,156,238,205,107,93,254,206,152,191,71,83,130,248,117,231,36,242,177,75,190,44,32,124,161,169,35,212,135,218,186,147,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 937 ") {
    byte_vec_t msg { 11,235,93,31 };
    byte_vec_t sig { 202,181,254,65,210,248,68,24,17,219,180,42,254,187,227,131,24,168,51,195,183,112,229,222,225,129,99,43,17,251,44,88,159,111,216,236,90,47,60,97,118,203,248,243,228,87,100,99,217,228,51,246,195,198,98,86,61,84,84,208,1,100,91,141 };
    byte_vec_t pk { 4,255,229,140,230,80,101,98,143,143,221,107,111,254,202,121,6,146,62,5,203,158,166,75,61,39,86,27,24,116,49,200,31,94,178,58,110,253,210,109,162,79,108,135,1,196,54,14,11,239,55,75,201,37,142,120,233,83,165,208,60,185,18,64,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 938 ") {
    byte_vec_t msg { 209,163,190,252 };
    byte_vec_t sig { 223,88,188,46,77,195,195,48,11,246,232,184,39,231,110,199,213,239,49,241,191,183,225,101,236,219,51,24,32,233,194,48,148,106,38,60,88,27,135,184,62,223,83,168,41,75,140,240,240,253,17,87,149,149,167,58,160,71,52,64,82,113,35,34 };
    byte_vec_t pk { 4,177,250,174,203,13,43,215,158,81,235,130,152,203,126,143,31,49,99,228,208,32,68,64,71,95,103,56,23,77,126,209,79,64,128,85,115,111,26,220,53,232,214,240,91,56,55,59,231,127,145,179,139,126,43,48,222,114,148,158,188,207,160,235,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 938 ") {
    byte_vec_t msg { 3,91,103,16 };
    byte_vec_t sig { 235,21,71,54,203,190,92,213,253,22,104,8,77,227,149,247,58,110,185,105,167,50,73,241,73,220,196,99,104,26,168,7,74,136,56,85,105,62,30,64,226,70,192,156,70,52,196,233,243,123,29,154,246,212,91,235,94,63,41,143,184,89,166,23 };
    byte_vec_t pk { 4,67,13,32,121,20,211,125,42,197,52,220,61,46,81,102,186,121,149,71,171,250,172,60,27,75,133,180,92,58,106,95,61,253,81,138,151,228,201,58,3,27,172,148,188,81,203,46,221,74,183,58,124,58,94,212,42,199,222,43,62,221,233,138,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 939 ") {
    byte_vec_t msg { 34,79,133,6 };
    byte_vec_t sig { 92,173,224,197,13,122,219,74,76,92,131,243,236,139,191,55,139,31,62,156,169,47,137,67,175,80,15,121,138,66,62,1,100,187,59,176,151,194,196,14,34,152,52,165,81,139,150,229,172,231,19,55,252,235,129,230,247,64,145,119,85,19,5,236 };
    byte_vec_t pk { 4,34,53,143,225,193,27,51,219,61,49,68,169,30,128,136,171,49,136,115,243,241,190,155,228,186,194,75,160,118,8,111,187,56,188,0,124,146,85,252,147,74,143,148,249,47,250,171,20,70,211,73,25,128,236,77,37,167,86,192,53,216,132,141,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 939 ") {
    byte_vec_t msg { 176,187,169,125 };
    byte_vec_t sig { 209,30,250,55,237,255,155,136,131,106,118,75,105,127,109,204,251,163,68,10,162,186,6,88,165,211,52,242,228,106,206,95,67,124,138,53,72,52,205,108,145,167,30,97,57,143,189,166,13,171,223,36,123,48,120,75,187,244,131,210,187,108,222,247 };
    byte_vec_t pk { 4,34,7,35,132,232,104,139,159,228,244,87,245,52,233,55,5,25,217,249,102,181,231,72,8,253,186,170,222,164,139,135,213,70,30,188,22,86,205,85,77,38,180,40,254,35,243,109,183,141,196,2,187,161,51,189,45,204,209,152,54,20,72,226,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 940 ") {
    byte_vec_t msg { 239,224,62,147 };
    byte_vec_t sig { 249,194,111,82,112,98,229,104,145,250,29,189,194,29,187,158,164,123,18,117,97,98,104,84,127,137,116,10,60,138,20,8,33,174,139,6,212,97,38,128,77,242,7,244,209,208,236,5,166,149,13,225,103,110,64,31,40,163,207,135,119,48,125,243 };
    byte_vec_t pk { 4,113,115,192,42,157,184,189,141,83,67,2,97,156,120,160,105,219,102,96,149,96,254,104,215,228,251,41,25,254,29,193,56,172,99,48,108,173,131,177,186,47,188,34,119,150,119,173,67,241,82,118,150,192,90,24,47,62,158,195,175,232,224,4,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 940 ") {
    byte_vec_t msg { 207,27,205,79 };
    byte_vec_t sig { 128,89,171,134,64,2,190,243,85,86,87,253,242,135,171,37,246,56,208,145,9,86,134,250,52,204,248,116,21,84,142,50,94,14,188,244,40,50,235,162,167,30,216,171,57,108,80,232,220,221,212,186,3,55,108,153,37,98,86,147,169,237,152,214 };
    byte_vec_t pk { 4,125,61,193,64,46,190,252,109,18,114,235,68,7,51,174,63,250,157,110,153,79,64,83,166,44,223,197,195,20,155,43,168,124,188,61,212,234,104,37,145,253,36,164,191,182,53,146,215,245,73,184,106,136,85,147,166,142,152,46,21,46,75,6,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 941 ") {
    byte_vec_t msg { 117,18,99,254 };
    byte_vec_t sig { 29,22,95,59,173,93,83,87,181,89,149,20,141,24,172,75,29,173,66,99,164,163,14,36,45,187,144,128,225,37,194,15,156,6,155,178,62,13,173,212,148,205,5,81,186,123,110,212,127,239,233,178,29,210,149,248,56,32,168,187,176,115,103,123 };
    byte_vec_t pk { 4,64,88,190,176,57,184,92,69,116,33,227,16,19,199,245,56,238,101,237,25,208,67,116,31,88,189,163,7,204,151,94,61,67,54,64,196,218,176,80,69,175,66,72,32,203,85,138,135,14,67,76,115,45,241,97,171,130,152,238,102,64,70,248,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 941 ") {
    byte_vec_t msg { 98,79,179,236 };
    byte_vec_t sig { 198,198,141,227,227,118,99,84,179,86,55,110,111,238,3,96,134,76,247,100,221,204,108,189,182,61,30,236,154,70,235,129,2,37,40,161,75,83,243,32,9,208,113,216,57,148,36,95,159,249,239,128,69,170,117,125,111,62,65,147,179,81,118,164 };
    byte_vec_t pk { 4,165,91,231,201,52,202,209,246,228,202,227,49,234,233,234,21,116,193,89,139,175,179,63,156,252,67,168,99,115,58,142,231,107,239,225,98,97,77,37,137,89,104,0,227,33,210,204,184,118,239,203,228,57,84,200,187,62,59,185,169,187,54,216,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 942 ") {
    byte_vec_t msg { 12,118,31,133 };
    byte_vec_t sig { 204,221,92,222,178,200,140,24,62,203,45,132,20,150,203,196,231,223,142,200,122,169,106,18,144,223,129,77,64,17,161,119,238,228,58,113,2,155,59,125,166,110,80,178,31,128,26,177,84,2,142,238,156,99,41,44,101,0,10,79,35,185,23,124 };
    byte_vec_t pk { 4,150,78,252,192,43,214,5,175,99,250,83,158,42,75,159,5,36,96,47,198,179,242,227,153,252,227,210,65,158,66,36,150,129,202,78,116,158,218,161,143,107,211,135,103,64,221,100,138,110,224,14,203,75,86,240,152,112,14,12,28,11,146,181,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 942 ") {
    byte_vec_t msg { 47,217,129,225 };
    byte_vec_t sig { 209,83,195,37,26,217,38,217,101,76,20,245,41,52,150,104,169,21,243,10,196,102,37,181,220,250,142,227,242,176,233,68,19,73,98,188,94,195,120,17,5,137,191,161,241,119,194,235,248,70,21,102,112,249,245,193,81,66,160,69,242,73,217,195 };
    byte_vec_t pk { 4,189,40,173,213,205,167,150,63,102,177,194,82,124,93,186,104,175,49,16,147,120,83,142,15,3,91,87,101,89,91,180,171,54,198,82,212,104,35,28,127,103,136,146,160,83,220,255,188,219,163,204,194,134,159,215,238,178,73,178,124,144,31,20,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 943 ") {
    byte_vec_t msg { 217,110,108,70 };
    byte_vec_t sig { 62,205,234,228,203,134,177,93,179,217,8,3,21,149,51,206,206,67,144,81,227,108,1,13,171,230,228,193,244,139,49,49,167,203,199,204,239,93,233,76,107,148,216,205,198,218,75,189,19,210,255,185,109,203,198,175,106,237,98,38,63,234,54,87 };
    byte_vec_t pk { 4,100,78,242,211,41,97,116,20,140,234,196,103,205,21,251,133,110,176,124,235,109,152,186,109,92,247,181,127,88,92,114,73,110,79,101,197,41,152,47,50,53,104,231,241,29,38,75,241,117,102,254,118,100,97,30,12,41,20,129,209,136,56,70,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 943 ") {
    byte_vec_t msg { 216,52,245,205 };
    byte_vec_t sig { 139,131,102,112,115,180,54,69,78,164,23,7,231,193,164,56,91,58,65,199,251,39,216,16,137,220,92,155,17,83,21,5,227,123,246,132,109,131,4,240,225,241,237,57,24,128,119,189,196,29,6,35,50,232,21,163,205,90,159,105,184,164,170,87 };
    byte_vec_t pk { 4,35,50,51,126,81,83,77,117,238,77,121,189,69,103,129,132,37,132,14,3,6,42,16,18,38,227,1,237,197,74,5,237,48,219,249,4,154,60,75,35,128,3,113,116,175,238,64,17,191,137,129,252,233,14,201,137,252,252,179,254,199,137,218,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 944 ") {
    byte_vec_t msg { 249,20,188,180 };
    byte_vec_t sig { 199,30,95,94,189,139,210,30,105,222,122,120,79,231,241,16,249,138,103,226,49,7,64,15,228,37,143,127,172,164,109,244,234,78,64,255,101,149,141,229,193,129,138,154,167,74,96,127,126,210,236,113,37,77,17,92,118,53,227,157,118,49,143,7 };
    byte_vec_t pk { 4,48,55,245,156,104,10,243,59,206,84,111,147,78,209,11,237,178,191,97,170,230,186,130,41,30,108,246,218,65,188,143,98,5,255,24,157,107,16,87,2,136,13,226,120,253,14,149,251,131,244,60,103,131,171,54,118,113,41,236,36,199,235,229,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 944 ") {
    byte_vec_t msg { 183,216,146,134 };
    byte_vec_t sig { 230,145,100,141,13,148,115,68,118,84,8,82,182,241,37,250,13,152,38,231,32,191,153,50,62,26,212,142,90,46,12,209,32,80,233,235,41,194,10,174,153,162,67,129,73,146,206,19,204,230,155,43,166,173,138,235,8,162,65,209,134,134,172,29 };
    byte_vec_t pk { 4,241,48,117,197,11,112,170,129,59,184,182,82,182,30,92,154,254,245,75,237,238,239,229,196,144,45,52,77,10,181,54,246,23,143,131,9,224,137,131,24,140,51,215,231,94,38,92,63,183,67,127,204,99,240,160,251,35,188,51,233,79,188,239,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 945 ") {
    byte_vec_t msg { 54,69,224,121 };
    byte_vec_t sig { 107,11,15,143,0,140,112,105,51,104,189,118,242,184,150,76,46,85,99,171,173,233,34,103,188,3,93,10,32,112,8,110,43,97,250,67,222,148,136,41,56,207,22,170,214,87,85,62,120,100,83,6,232,59,92,44,45,10,236,135,86,120,53,102 };
    byte_vec_t pk { 4,251,129,23,103,12,19,177,122,88,150,161,43,8,226,168,66,145,100,113,218,52,141,207,91,181,83,201,92,13,235,38,132,203,188,120,131,73,152,56,82,89,210,91,110,217,128,220,33,116,141,78,139,181,210,114,205,225,142,137,125,165,168,223,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 945 ") {
    byte_vec_t msg { 174,50,67,117 };
    byte_vec_t sig { 143,78,247,109,83,61,149,240,15,106,92,38,238,134,74,104,202,145,162,194,109,63,237,73,32,192,43,124,180,163,144,185,4,15,179,111,254,239,219,145,212,88,193,40,177,192,47,212,77,219,156,190,79,28,116,135,177,100,162,79,173,74,97,19 };
    byte_vec_t pk { 4,120,255,204,148,152,58,42,44,32,172,75,91,181,206,34,109,39,71,160,111,55,89,38,0,151,151,72,24,56,163,122,150,87,13,173,85,127,249,159,174,177,18,175,246,224,244,140,194,167,55,169,185,220,76,81,206,133,5,61,64,243,129,153,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 946 ") {
    byte_vec_t msg { 206,224,126,247 };
    byte_vec_t sig { 76,47,127,183,70,60,216,211,70,92,53,113,15,145,183,49,147,237,253,91,40,37,80,252,54,189,82,207,43,75,136,46,151,235,252,182,223,140,35,154,29,99,82,60,236,74,199,48,185,13,29,216,97,130,38,229,229,62,249,69,54,73,168,170 };
    byte_vec_t pk { 4,121,127,0,72,0,24,174,193,2,67,184,95,125,100,75,168,217,18,23,218,224,121,170,103,19,184,239,151,58,196,189,233,226,143,109,183,192,87,148,7,255,45,163,22,203,108,6,24,8,161,161,161,186,202,82,121,179,108,74,123,102,172,246,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 946 ") {
    byte_vec_t msg { 139,176,246,140 };
    byte_vec_t sig { 47,207,171,173,246,252,57,194,99,140,133,57,81,183,238,120,202,219,56,102,193,141,14,131,7,103,18,57,238,198,173,171,126,115,202,180,217,44,115,10,121,218,162,141,136,157,5,141,173,167,206,211,191,152,99,6,120,32,28,28,51,35,78,167 };
    byte_vec_t pk { 4,172,47,29,29,154,31,151,16,215,129,216,198,190,96,75,99,179,105,130,29,201,134,233,1,245,15,247,71,225,138,103,106,142,187,211,189,134,69,130,236,44,17,183,173,246,103,112,151,80,193,112,14,173,104,19,255,97,184,132,130,238,219,169,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 947 ") {
    byte_vec_t msg { 220,53,194,252 };
    byte_vec_t sig { 21,132,144,115,229,34,85,234,244,251,173,191,207,248,40,100,223,146,70,50,0,106,235,238,188,210,125,62,79,238,90,140,203,109,19,166,76,48,188,156,199,156,200,213,29,230,186,214,56,147,33,229,70,1,150,40,163,44,142,202,236,126,153,247 };
    byte_vec_t pk { 4,64,177,144,244,62,188,145,245,149,4,103,94,251,166,221,174,139,197,207,229,146,79,226,167,104,153,114,77,89,94,196,42,254,160,81,138,106,97,129,134,165,15,167,40,67,111,35,225,45,162,203,154,198,170,122,35,52,15,37,171,131,41,254,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 947 ") {
    byte_vec_t msg { 127,242,12,247 };
    byte_vec_t sig { 164,58,33,193,203,178,208,169,254,254,198,19,194,147,64,142,180,190,19,83,87,178,144,49,57,228,95,209,22,186,60,198,191,172,72,31,164,167,152,185,151,57,51,218,77,148,190,73,184,154,234,47,158,153,104,144,246,87,54,143,224,122,108,17 };
    byte_vec_t pk { 4,72,163,177,250,115,140,217,82,251,243,178,19,37,97,147,52,71,160,184,92,71,125,166,98,127,208,233,39,71,191,91,227,99,219,19,121,33,16,142,106,2,89,159,236,228,141,29,84,33,125,92,152,136,243,187,14,101,30,23,148,97,17,167,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 948 ") {
    byte_vec_t msg { 244,26,60,149 };
    byte_vec_t sig { 149,138,215,127,183,75,27,163,143,204,49,144,193,66,254,34,127,29,77,114,8,136,143,119,218,10,197,164,255,49,100,89,113,121,233,12,7,163,82,139,29,28,143,21,135,107,64,0,152,192,120,161,36,171,94,209,131,11,0,207,199,198,103,245 };
    byte_vec_t pk { 4,3,25,107,121,10,107,247,184,217,66,10,39,86,246,255,243,158,65,213,190,110,242,89,12,92,156,217,190,172,230,56,143,126,101,165,144,81,250,131,99,92,49,202,103,156,109,193,52,111,194,139,226,210,38,207,4,96,119,153,128,200,243,107,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 948 ") {
    byte_vec_t msg { 34,20,150,25 };
    byte_vec_t sig { 224,103,30,60,42,245,194,166,80,46,167,22,67,210,215,141,50,154,242,98,184,143,230,246,54,52,109,7,59,192,123,36,153,172,90,143,69,38,219,181,137,105,55,202,17,229,54,215,74,142,192,109,160,124,210,20,203,127,221,95,150,58,254,43 };
    byte_vec_t pk { 4,130,95,151,94,29,114,239,78,117,62,57,179,238,120,79,142,214,84,42,168,168,168,59,175,134,152,98,205,210,194,190,55,167,174,145,54,162,41,210,78,13,167,108,80,100,10,24,91,51,244,50,187,72,47,29,228,175,26,29,92,104,6,34,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 949 ") {
    byte_vec_t msg { 215,158,97,150 };
    byte_vec_t sig { 52,40,164,60,156,172,195,227,59,112,196,152,152,145,42,137,74,243,62,110,91,61,44,153,162,215,232,39,235,22,153,21,138,97,145,75,62,159,154,252,73,135,84,87,59,122,243,10,76,158,33,227,223,117,23,93,188,102,160,85,117,252,136,11 };
    byte_vec_t pk { 4,206,30,204,46,6,151,135,72,100,135,195,125,136,244,45,31,22,79,150,121,128,154,116,213,156,79,178,26,97,94,13,197,69,89,35,118,220,223,226,166,229,101,4,7,37,71,145,174,146,175,5,243,107,27,75,103,51,177,59,117,197,227,106,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 949 ") {
    byte_vec_t msg { 242,238,219,164 };
    byte_vec_t sig { 168,13,27,26,76,228,150,130,102,123,181,215,80,101,216,21,136,212,176,159,29,22,146,222,225,91,77,227,192,238,56,111,225,243,49,246,10,189,76,216,80,31,169,85,12,66,126,235,88,114,152,190,38,53,137,143,74,211,121,166,98,58,109,22 };
    byte_vec_t pk { 4,130,32,191,203,105,59,151,109,194,41,214,194,77,184,131,109,129,168,16,139,252,246,44,45,37,182,168,35,101,143,190,217,189,46,133,163,98,64,58,164,12,33,167,113,77,142,85,252,3,232,110,182,136,147,68,13,49,119,125,183,254,172,86,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 950 ") {
    byte_vec_t msg { 134,47,18,140 };
    byte_vec_t sig { 91,11,179,144,226,33,165,83,87,58,174,201,85,172,23,249,108,40,24,213,193,40,140,66,181,177,162,97,124,244,246,165,85,220,115,39,182,92,219,147,38,22,134,215,197,183,18,200,158,33,27,130,89,222,125,107,174,38,35,167,244,0,203,7 };
    byte_vec_t pk { 4,207,247,4,158,32,206,0,20,129,159,166,119,136,89,143,168,165,36,143,78,85,66,12,64,154,199,152,198,62,73,123,154,11,114,19,98,101,212,246,29,127,114,214,58,223,199,250,252,141,172,204,182,15,130,141,70,95,60,216,56,171,108,252,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 950 ") {
    byte_vec_t msg { 225,172,78,139 };
    byte_vec_t sig { 167,217,31,95,99,41,123,218,76,47,212,73,43,247,87,197,86,188,26,120,201,54,191,241,87,37,66,144,12,165,59,50,67,171,236,134,22,3,34,50,85,160,115,119,140,114,75,21,58,190,207,104,87,182,200,183,146,153,3,176,171,212,72,11 };
    byte_vec_t pk { 4,224,123,136,188,176,108,242,42,89,37,210,32,124,139,181,171,240,40,180,33,151,187,28,38,17,44,207,196,55,24,180,64,225,189,162,99,246,157,41,200,247,42,146,219,77,16,22,193,36,154,47,43,199,199,124,222,206,208,105,61,206,34,184,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 951 ") {
    byte_vec_t msg { 224,128,65,70 };
    byte_vec_t sig { 153,233,94,64,100,140,177,89,133,0,237,26,193,211,248,113,113,7,110,179,209,130,201,212,92,2,148,39,222,119,36,48,225,29,147,138,133,111,94,80,65,204,82,64,152,158,164,204,226,240,255,189,53,124,23,31,188,18,59,83,90,68,31,233 };
    byte_vec_t pk { 4,52,129,158,74,81,216,175,234,148,189,233,12,51,236,149,186,112,87,137,90,181,153,118,112,230,162,161,218,189,196,125,67,145,198,249,161,148,70,113,201,141,124,134,14,175,35,1,177,196,3,31,223,206,130,47,180,60,254,124,106,241,100,85,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 951 ") {
    byte_vec_t msg { 162,250,24,10 };
    byte_vec_t sig { 180,213,70,185,110,88,251,3,129,32,246,239,26,201,50,245,109,158,207,128,159,79,19,143,113,104,1,49,147,153,31,183,171,83,94,253,241,82,18,148,45,103,205,91,91,210,90,77,155,19,72,126,90,74,172,190,181,236,166,191,103,89,131,238 };
    byte_vec_t pk { 4,172,98,225,44,59,14,15,153,232,32,118,232,183,32,87,173,170,14,140,127,40,67,243,183,162,70,150,115,89,80,252,39,99,88,64,79,50,230,195,30,38,242,110,86,131,176,71,69,188,140,218,154,91,191,44,30,248,87,176,250,56,254,52,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 952 ") {
    byte_vec_t msg { 149,93,241,38 };
    byte_vec_t sig { 162,199,28,91,118,92,98,19,212,120,215,196,35,63,92,169,39,7,128,249,63,103,235,129,76,148,52,182,103,128,177,146,78,101,168,175,151,184,152,199,178,6,180,31,226,173,126,73,6,145,231,210,27,4,172,75,194,197,152,137,195,42,92,215 };
    byte_vec_t pk { 4,160,232,156,187,111,15,225,41,108,177,79,146,59,199,180,65,254,191,226,59,81,162,245,112,226,4,135,70,90,35,158,87,224,117,177,0,159,240,91,55,17,241,71,232,107,128,142,103,137,63,210,132,3,242,44,221,79,228,109,243,236,30,186,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 952 ") {
    byte_vec_t msg { 93,196,77,134 };
    byte_vec_t sig { 163,15,25,150,4,190,116,63,22,175,49,234,182,208,157,71,9,49,121,238,106,184,136,158,199,126,50,157,68,20,232,38,125,55,141,55,203,207,129,225,90,120,238,111,215,85,137,138,200,127,197,110,48,209,28,218,124,80,131,0,201,116,214,172 };
    byte_vec_t pk { 4,170,9,19,161,99,40,58,230,65,108,89,28,129,162,139,214,161,187,119,105,23,129,76,78,152,57,117,235,174,200,183,170,159,25,58,189,137,36,114,66,205,98,52,83,202,236,190,42,80,95,188,80,15,184,57,119,55,62,199,146,60,67,247,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 953 ") {
    byte_vec_t msg { 243,84,214,94 };
    byte_vec_t sig { 29,191,162,18,23,9,103,170,206,190,181,40,62,96,120,175,86,47,169,126,104,209,134,162,235,136,51,176,79,250,0,162,24,61,109,101,70,37,31,17,240,182,112,202,55,96,138,186,37,121,205,15,202,8,244,165,137,244,137,174,203,90,96,118 };
    byte_vec_t pk { 4,11,192,99,255,23,93,209,115,215,153,205,120,80,66,7,162,238,128,78,167,185,42,198,97,205,51,130,51,247,68,39,47,35,138,12,216,11,181,123,125,158,108,250,228,243,163,56,226,130,148,161,56,234,44,89,248,217,51,246,12,57,111,62,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 953 ") {
    byte_vec_t msg { 244,233,195,237 };
    byte_vec_t sig { 216,74,232,146,134,95,243,91,4,98,23,2,166,48,161,217,168,15,81,152,171,146,109,134,166,5,253,8,120,105,164,95,102,54,168,124,246,248,119,157,1,192,119,49,211,54,88,132,21,23,254,198,47,123,157,212,7,63,78,56,199,66,214,36 };
    byte_vec_t pk { 4,196,57,190,209,211,62,35,185,232,255,181,8,51,162,227,88,211,89,55,51,37,194,232,139,91,62,125,7,135,251,188,19,244,103,127,240,254,37,90,35,113,225,161,94,142,140,227,132,113,66,50,163,208,232,179,26,68,77,247,171,238,168,81,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 954 ") {
    byte_vec_t msg { 34,65,114,173 };
    byte_vec_t sig { 17,99,201,76,190,154,117,0,43,234,144,161,96,23,91,52,9,203,236,186,180,134,225,77,83,39,14,7,180,60,52,142,179,26,193,22,62,118,50,53,44,87,223,92,32,198,170,148,121,163,245,52,88,94,63,199,131,54,197,159,88,194,112,10 };
    byte_vec_t pk { 4,79,151,223,175,241,232,254,65,205,79,86,214,177,82,79,209,191,100,13,203,134,255,209,245,197,130,101,68,57,219,246,149,124,203,180,169,220,187,1,8,211,126,105,44,169,70,119,129,171,103,213,169,11,103,157,13,110,67,161,202,65,140,73,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 954 ") {
    byte_vec_t msg { 226,65,197,245 };
    byte_vec_t sig { 210,147,137,107,131,169,23,125,70,222,33,75,100,177,225,170,143,239,7,152,148,15,156,101,35,213,253,3,147,199,241,53,251,82,19,89,178,41,56,51,124,195,50,100,39,0,46,101,17,81,141,183,140,59,150,178,248,132,135,224,74,75,173,197 };
    byte_vec_t pk { 4,168,35,25,79,239,121,86,40,160,18,110,75,141,221,34,153,206,134,174,12,17,162,135,62,17,39,63,98,205,7,173,233,196,138,220,5,228,137,190,42,225,64,134,91,104,20,47,78,224,222,254,25,213,239,229,211,34,87,59,148,96,168,50,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 955 ") {
    byte_vec_t msg { 244,88,8,39 };
    byte_vec_t sig { 255,80,40,239,24,33,7,249,166,72,213,29,224,137,129,141,37,28,233,207,194,172,93,72,198,83,229,172,71,241,24,71,208,122,133,220,223,113,130,24,130,9,37,162,91,21,244,127,49,247,111,50,4,30,184,175,136,101,128,202,146,157,11,0 };
    byte_vec_t pk { 4,212,246,129,234,38,3,227,46,34,132,202,14,85,178,53,15,21,146,98,16,146,227,10,11,85,187,128,205,152,217,191,70,164,121,20,35,151,227,191,25,6,188,114,152,75,130,191,198,234,135,166,30,201,234,117,96,150,139,246,64,242,62,198,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 955 ") {
    byte_vec_t msg { 125,121,205,72 };
    byte_vec_t sig { 90,195,84,17,36,42,9,198,79,107,33,127,179,218,10,154,21,11,232,176,54,117,162,94,151,133,123,206,22,196,188,40,130,191,43,118,125,87,220,51,1,234,46,140,128,142,79,227,106,186,225,125,161,67,95,28,219,154,131,79,95,177,97,238 };
    byte_vec_t pk { 4,148,124,198,21,179,52,75,119,48,140,123,248,6,57,33,250,202,219,111,35,45,80,169,19,233,176,3,246,60,4,168,26,150,58,233,12,181,84,52,43,75,89,183,136,203,201,121,126,7,128,149,135,59,7,251,78,120,14,170,204,48,189,42,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 956 ") {
    byte_vec_t msg { 246,159,160,208 };
    byte_vec_t sig { 255,23,179,51,148,14,180,174,101,76,233,194,64,225,220,185,187,114,144,166,225,21,18,104,251,194,246,219,137,230,202,1,76,169,240,113,243,106,252,38,233,137,115,105,81,97,108,20,220,80,201,169,76,85,248,166,104,166,92,231,50,223,114,208 };
    byte_vec_t pk { 4,195,8,120,168,131,48,55,195,115,23,39,14,33,95,104,243,184,231,45,157,181,114,43,183,112,111,228,58,217,54,252,191,236,245,40,245,35,66,76,8,198,134,149,126,207,81,207,248,105,178,60,110,106,242,154,29,160,161,19,159,219,161,37,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 956 ") {
    byte_vec_t msg { 180,96,162,77 };
    byte_vec_t sig { 208,151,64,137,136,152,239,48,16,246,248,122,25,4,32,58,182,179,75,33,251,83,89,200,198,243,23,109,78,45,157,109,248,242,109,60,32,149,113,175,232,14,67,21,188,171,89,73,74,212,246,189,167,184,232,108,157,168,23,228,126,136,166,96 };
    byte_vec_t pk { 4,120,190,175,96,122,32,231,60,95,237,1,83,61,174,126,196,19,32,91,214,3,208,157,89,88,113,211,249,245,133,74,245,248,20,77,13,126,81,247,252,49,28,57,251,188,60,70,164,206,50,100,189,234,164,33,200,105,109,140,16,116,6,255,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 957 ") {
    byte_vec_t msg { 191,188,182,27 };
    byte_vec_t sig { 198,8,229,219,246,253,38,201,183,244,121,102,77,108,251,221,62,34,205,180,190,183,135,93,27,220,82,154,47,148,236,96,3,60,252,104,138,101,215,255,125,247,92,30,66,84,100,126,43,23,123,207,38,50,38,218,165,90,25,151,99,20,5,88 };
    byte_vec_t pk { 4,32,165,46,148,252,195,138,20,90,198,242,32,146,85,185,147,143,211,33,138,233,115,109,17,15,64,245,154,89,158,82,74,204,171,78,64,226,40,87,37,201,100,63,212,4,35,8,112,233,60,172,168,241,184,103,225,149,233,28,138,16,88,25,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 957 ") {
    byte_vec_t msg { 241,159,238,232 };
    byte_vec_t sig { 147,184,66,74,157,91,227,233,219,232,176,84,77,195,174,240,56,154,169,202,209,195,176,144,190,175,195,253,123,6,30,178,18,35,223,127,105,155,183,195,55,189,0,103,43,146,235,17,169,76,111,80,229,233,167,203,171,181,225,91,165,69,18,66 };
    byte_vec_t pk { 4,194,250,134,2,122,1,200,207,21,61,28,101,163,168,188,170,116,181,45,64,35,205,211,227,11,82,228,124,50,59,76,50,32,79,80,226,111,58,195,16,172,76,214,209,37,90,203,197,151,80,90,220,31,211,205,10,33,7,223,225,231,28,6,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 958 ") {
    byte_vec_t msg { 25,232,114,41 };
    byte_vec_t sig { 175,153,166,147,204,16,234,151,148,66,16,238,227,225,198,134,163,97,120,219,63,252,113,147,223,230,56,176,63,11,224,35,204,251,252,202,7,152,197,242,184,184,194,50,241,219,145,56,244,212,195,185,96,14,149,152,245,111,252,166,51,142,32,69 };
    byte_vec_t pk { 4,235,120,128,174,53,222,39,45,44,109,163,42,36,213,37,106,127,195,207,54,74,198,3,131,208,128,113,164,248,42,186,221,125,107,118,182,181,53,128,141,140,196,63,57,208,36,30,0,91,114,100,235,169,175,66,130,136,211,132,138,21,247,132,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 958 ") {
    byte_vec_t msg { 21,189,114,121 };
    byte_vec_t sig { 141,32,187,8,184,255,212,15,152,61,223,140,241,68,43,74,136,117,95,5,125,148,175,40,219,53,84,15,180,126,71,245,65,56,196,35,142,208,152,49,58,65,148,181,230,246,190,176,83,34,146,48,163,184,0,166,30,226,195,163,78,39,145,69 };
    byte_vec_t pk { 4,162,9,16,105,216,184,70,65,12,123,45,160,219,231,10,100,33,154,155,33,24,35,24,31,229,40,208,107,217,50,231,229,240,154,7,134,241,206,77,255,189,203,142,52,212,51,68,241,3,156,128,202,198,85,225,89,70,105,219,149,213,47,209,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 959 ") {
    byte_vec_t msg { 185,181,22,82 };
    byte_vec_t sig { 135,76,129,117,216,222,153,86,143,232,113,31,42,129,111,211,188,222,114,68,37,20,186,192,96,248,228,6,241,217,40,33,195,135,192,36,149,22,98,211,160,144,103,125,113,126,119,97,95,124,9,122,140,29,101,30,10,72,158,32,100,209,84,41 };
    byte_vec_t pk { 4,31,220,78,73,160,31,152,140,24,88,208,214,176,7,3,39,118,174,168,116,170,22,146,193,120,83,20,231,217,68,169,17,251,142,76,167,227,68,85,13,104,194,252,160,154,64,32,172,116,104,145,186,181,202,160,147,47,45,53,154,129,248,163,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 959 ") {
    byte_vec_t msg { 107,55,220,55 };
    byte_vec_t sig { 10,162,237,17,175,51,140,103,240,169,95,119,29,225,168,246,86,5,254,11,128,117,201,198,7,14,104,250,14,175,4,176,205,95,1,117,226,44,158,138,29,88,255,130,242,101,181,49,77,192,98,77,36,106,139,111,155,183,69,46,152,38,170,85 };
    byte_vec_t pk { 4,44,44,200,244,77,59,185,123,69,92,113,67,145,153,123,192,227,53,34,217,86,201,205,124,169,116,24,82,243,57,6,234,148,43,12,122,19,255,148,102,64,127,1,73,180,6,3,51,181,35,245,21,210,18,170,242,166,25,110,150,171,168,218,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 960 ") {
    byte_vec_t msg { 144,150,44,243 };
    byte_vec_t sig { 150,233,43,189,185,237,227,35,21,185,136,0,184,178,117,39,146,85,250,117,208,175,17,92,125,13,69,52,130,90,153,205,79,2,22,91,14,198,198,145,245,154,219,8,91,221,29,49,81,91,132,10,177,247,147,190,248,98,73,247,182,211,245,139 };
    byte_vec_t pk { 4,36,8,58,243,94,198,247,60,244,129,250,131,117,103,74,9,15,214,102,15,91,52,233,129,254,91,174,139,85,133,79,198,153,236,208,121,254,31,185,56,141,92,111,134,189,33,250,62,153,217,160,118,216,241,130,51,159,186,220,157,43,217,108,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 960 ") {
    byte_vec_t msg { 250,176,37,95 };
    byte_vec_t sig { 202,22,75,112,61,204,161,159,54,99,164,134,168,228,93,91,236,65,37,228,2,225,161,255,4,91,49,241,224,178,179,62,164,37,20,89,200,76,66,221,155,132,227,124,40,77,20,221,94,220,45,81,129,25,207,84,142,4,89,154,108,175,199,60 };
    byte_vec_t pk { 4,132,89,115,246,80,58,243,12,213,235,63,161,149,48,14,179,3,172,74,81,179,163,59,102,1,11,32,3,66,120,236,79,53,69,142,150,68,185,249,122,168,53,243,146,177,163,55,224,94,7,82,196,189,180,32,56,171,220,239,81,219,226,58,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 961 ") {
    byte_vec_t msg { 172,40,163,47 };
    byte_vec_t sig { 203,241,40,131,117,239,128,227,150,245,105,209,226,81,58,59,95,165,224,126,234,53,80,39,233,236,49,105,77,254,188,224,25,176,234,146,111,54,119,161,210,122,171,144,130,234,78,65,178,116,183,50,72,106,80,4,195,190,40,134,59,64,208,142 };
    byte_vec_t pk { 4,224,172,244,119,181,232,6,94,16,206,239,81,143,60,63,77,162,66,89,190,248,24,83,4,111,4,247,121,209,58,47,216,185,208,229,75,121,226,58,102,171,232,208,207,251,214,253,243,208,178,103,22,138,253,102,242,10,111,186,60,2,165,132,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 961 ") {
    byte_vec_t msg { 135,110,145,216 };
    byte_vec_t sig { 255,15,177,33,223,208,149,229,41,70,214,136,106,31,69,44,235,255,253,210,143,92,241,213,47,51,106,182,64,127,162,62,55,154,162,72,2,51,187,223,153,103,50,148,165,124,182,75,242,134,180,50,247,77,180,77,1,164,107,49,46,10,42,92 };
    byte_vec_t pk { 4,71,55,124,136,122,228,144,67,135,13,158,77,174,255,162,1,106,175,238,2,60,244,20,73,21,153,161,151,175,100,100,80,239,108,255,192,195,123,228,235,18,201,194,154,158,17,141,174,43,224,55,253,237,179,200,150,37,133,142,124,255,229,177,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 962 ") {
    byte_vec_t msg { 26,248,48,180 };
    byte_vec_t sig { 104,124,229,122,159,10,62,132,185,105,183,13,249,106,38,151,250,170,251,74,92,11,150,247,213,177,123,37,70,122,149,193,122,26,39,97,60,31,84,98,230,20,9,125,132,7,185,205,241,3,134,198,248,86,248,35,2,158,206,94,56,97,66,193 };
    byte_vec_t pk { 4,231,145,225,55,95,229,66,131,227,124,179,196,128,253,69,18,85,255,176,139,241,126,153,212,11,241,5,80,70,96,236,245,124,166,109,194,0,33,161,166,103,67,81,123,214,105,60,9,239,232,118,55,215,231,93,162,154,0,41,79,146,92,239,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 962 ") {
    byte_vec_t msg { 53,104,217,249 };
    byte_vec_t sig { 137,124,90,122,146,241,243,194,166,116,33,178,200,90,7,27,225,92,174,214,150,233,122,191,237,165,58,237,54,174,201,111,25,116,235,245,149,8,122,0,24,62,203,232,235,5,31,44,102,98,56,197,19,69,224,103,235,67,103,36,92,66,173,42 };
    byte_vec_t pk { 4,89,48,72,241,168,33,43,117,174,159,211,30,215,3,213,150,175,203,45,127,132,142,91,120,119,51,208,100,135,146,95,105,63,79,100,109,25,117,50,79,165,164,22,187,211,67,143,222,65,66,246,82,3,245,20,196,149,58,41,25,103,72,87,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 963 ") {
    byte_vec_t msg { 30,15,134,142 };
    byte_vec_t sig { 241,101,1,2,170,81,5,141,211,74,147,114,10,81,241,253,113,247,93,138,233,23,209,179,176,215,147,121,151,26,91,141,166,130,10,240,65,156,23,193,140,219,50,98,52,25,171,120,73,151,90,219,196,57,190,46,241,39,18,149,152,60,124,69 };
    byte_vec_t pk { 4,0,114,22,132,61,175,59,150,117,249,233,125,232,238,201,128,254,33,151,56,13,7,199,195,255,149,175,235,205,129,8,139,250,209,223,204,6,197,151,117,255,147,63,211,33,121,12,58,228,35,137,145,69,86,125,22,205,231,238,241,182,151,44,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 963 ") {
    byte_vec_t msg { 63,222,60,220 };
    byte_vec_t sig { 120,87,69,86,18,156,58,233,147,78,108,82,233,228,47,19,6,160,108,82,92,183,183,13,83,187,18,180,141,43,232,226,68,177,21,164,240,170,79,248,255,183,244,159,54,177,16,235,48,50,255,123,249,252,183,119,59,157,62,124,7,184,102,233 };
    byte_vec_t pk { 4,166,213,61,71,173,112,99,246,227,44,37,26,238,81,19,55,29,128,33,30,76,70,144,224,62,202,123,24,121,179,222,152,42,242,228,127,208,171,200,109,96,48,80,25,66,121,92,185,170,119,219,12,241,140,3,8,98,25,127,241,153,212,164,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 964 ") {
    byte_vec_t msg { 170,23,209,237 };
    byte_vec_t sig { 227,55,127,175,98,163,47,46,43,117,73,73,170,199,216,138,32,228,12,222,15,77,158,120,223,232,201,126,19,205,149,188,249,19,151,79,213,119,237,68,180,20,98,13,180,87,52,41,201,15,123,120,218,28,78,172,72,209,180,159,196,70,247,80 };
    byte_vec_t pk { 4,66,54,55,179,220,60,221,152,135,67,248,193,123,171,123,229,216,52,129,100,59,214,205,134,114,183,130,176,84,40,69,65,141,233,250,120,95,2,91,39,7,148,67,219,9,1,152,106,133,241,63,129,74,246,45,134,235,67,63,113,36,62,84,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 964 ") {
    byte_vec_t msg { 40,211,25,195 };
    byte_vec_t sig { 131,176,172,62,193,8,232,73,66,90,57,144,192,212,249,54,165,88,65,190,214,153,229,39,178,29,185,97,2,254,221,170,86,248,33,16,218,48,180,167,189,32,223,153,136,137,186,35,141,85,140,181,214,146,153,44,155,157,229,231,203,41,48,155 };
    byte_vec_t pk { 4,208,234,112,48,40,186,137,88,32,122,126,226,127,72,91,251,54,239,228,192,245,133,18,182,172,4,185,18,119,82,23,243,60,13,223,125,181,88,233,119,215,187,237,69,19,163,148,51,1,184,31,197,54,211,204,128,17,194,223,13,184,96,122,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 965 ") {
    byte_vec_t msg { 187,55,62,217 };
    byte_vec_t sig { 49,48,128,156,208,157,96,56,72,203,186,80,239,195,38,250,175,155,254,231,102,226,114,121,69,1,184,216,156,56,229,241,217,98,246,102,27,6,200,112,150,230,215,93,81,81,35,94,59,63,117,195,40,185,199,203,174,39,242,176,48,51,204,205 };
    byte_vec_t pk { 4,148,169,157,37,62,82,69,118,0,173,86,180,67,174,90,243,255,228,24,122,16,113,186,71,198,53,145,179,91,189,118,7,251,147,36,19,154,38,209,120,91,118,152,129,94,140,75,204,10,208,233,60,252,95,66,78,176,11,145,192,98,187,156,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 965 ") {
    byte_vec_t msg { 119,121,8,88 };
    byte_vec_t sig { 177,134,222,36,3,136,186,25,129,42,148,245,174,84,237,213,160,120,63,225,40,237,211,60,188,124,240,152,47,58,106,107,4,70,163,192,54,244,91,154,42,130,59,182,227,203,128,55,119,68,15,23,29,53,229,82,128,181,35,234,59,107,156,149 };
    byte_vec_t pk { 4,137,85,161,66,228,208,26,207,13,100,141,184,202,243,92,18,82,125,231,248,254,245,58,239,96,6,39,143,221,0,120,52,135,116,205,67,189,169,9,248,214,20,198,182,118,25,199,252,24,4,105,243,10,175,84,21,72,41,160,38,159,44,208,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 966 ") {
    byte_vec_t msg { 221,218,42,167 };
    byte_vec_t sig { 183,252,89,159,177,154,250,100,230,157,120,73,188,169,209,55,237,25,212,223,98,2,222,83,58,213,94,176,29,142,11,28,16,176,190,64,229,1,136,130,226,119,155,246,208,49,125,22,133,206,117,12,236,144,14,44,76,25,243,249,151,220,196,169 };
    byte_vec_t pk { 4,198,88,70,239,153,46,193,43,207,26,47,59,195,205,193,102,235,84,244,223,1,119,47,73,129,51,121,94,19,113,187,140,52,171,150,80,116,227,123,93,48,3,48,226,121,60,159,12,208,62,233,107,79,176,187,225,211,117,69,58,254,56,209,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 966 ") {
    byte_vec_t msg { 144,70,93,76 };
    byte_vec_t sig { 198,246,128,27,243,19,87,31,103,182,224,169,198,98,185,81,63,201,37,138,75,245,253,16,211,61,21,37,43,114,46,17,190,193,97,142,143,146,243,144,37,77,88,116,148,136,223,235,54,131,238,88,89,215,122,127,32,6,170,28,181,152,202,29 };
    byte_vec_t pk { 4,121,139,77,130,169,81,132,41,100,95,240,175,82,7,242,51,77,216,153,124,89,67,150,24,147,253,29,223,116,43,144,126,115,121,140,29,206,159,234,33,9,175,184,83,61,19,12,226,17,220,135,35,73,143,181,97,168,76,120,241,127,10,195,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 967 ") {
    byte_vec_t msg { 56,156,147,138 };
    byte_vec_t sig { 208,55,111,18,151,206,144,136,38,101,153,232,33,144,134,94,51,165,56,78,64,149,46,194,128,193,48,108,218,24,234,11,150,156,13,22,244,3,59,157,239,88,36,102,205,229,93,119,192,62,198,232,132,177,26,183,47,88,152,226,112,133,206,141 };
    byte_vec_t pk { 4,127,165,106,107,131,247,234,196,138,109,151,154,40,139,13,23,140,130,204,86,7,145,101,93,249,194,244,30,121,32,118,170,177,159,96,122,136,246,208,3,32,137,46,189,221,123,129,210,95,89,105,145,156,178,145,176,32,31,116,80,151,3,234,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 967 ") {
    byte_vec_t msg { 169,74,215,207 };
    byte_vec_t sig { 86,236,86,68,88,244,13,194,142,54,56,25,161,183,250,203,204,17,138,251,199,225,247,132,141,195,81,77,196,153,138,198,44,29,237,97,111,133,247,122,92,227,116,48,46,193,172,155,145,25,250,239,253,70,46,221,210,107,18,79,70,25,116,88 };
    byte_vec_t pk { 4,49,103,47,203,15,127,215,243,108,108,128,192,184,86,1,229,227,176,165,228,69,32,6,167,203,194,106,202,132,67,138,201,164,140,219,9,88,211,241,80,223,225,165,45,25,186,199,36,9,83,92,125,235,101,138,195,77,250,18,232,59,177,117,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 968 ") {
    byte_vec_t msg { 128,180,191,142 };
    byte_vec_t sig { 126,247,4,38,4,246,169,47,3,56,129,38,210,254,180,56,103,252,184,129,25,58,74,11,137,169,211,32,140,35,201,193,247,68,175,222,149,65,17,141,14,22,31,1,228,157,147,50,59,59,237,81,152,154,234,42,202,211,200,151,214,223,22,112 };
    byte_vec_t pk { 4,143,43,136,234,17,7,251,38,183,148,225,108,223,118,94,36,84,150,65,192,13,127,5,59,72,120,10,43,227,33,77,44,84,25,174,4,20,209,238,33,25,77,211,94,252,171,201,72,215,17,124,72,229,170,213,102,116,20,126,158,86,32,210,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 968 ") {
    byte_vec_t msg { 226,89,124,43 };
    byte_vec_t sig { 145,80,24,102,37,122,211,194,249,196,52,80,70,41,197,221,98,116,150,140,164,182,145,42,148,25,254,8,53,66,101,109,100,21,197,94,98,117,116,158,199,48,88,32,71,31,222,16,37,49,104,87,59,87,71,114,46,143,167,30,55,203,108,62 };
    byte_vec_t pk { 4,125,174,213,29,133,20,137,207,235,158,187,29,137,83,144,133,250,0,5,168,90,181,107,250,110,92,227,109,192,139,35,163,88,109,111,112,191,233,161,17,246,58,58,216,64,22,148,188,29,16,157,102,133,55,29,73,175,16,250,51,17,162,189,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 969 ") {
    byte_vec_t msg { 46,18,4,55 };
    byte_vec_t sig { 169,192,192,13,0,14,193,237,20,153,19,150,240,54,16,125,153,57,2,242,50,235,144,110,150,214,197,4,28,142,94,155,6,245,138,155,129,219,201,162,136,43,146,57,223,3,7,25,250,206,156,41,7,76,115,124,14,176,15,24,146,9,143,129 };
    byte_vec_t pk { 4,52,101,181,105,19,118,157,111,227,254,231,11,82,144,109,245,253,50,94,82,121,54,249,215,145,195,252,3,38,74,81,110,51,75,149,216,118,211,7,81,9,106,49,38,57,3,130,171,3,184,42,107,223,61,60,66,95,77,64,226,132,197,63,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 969 ") {
    byte_vec_t msg { 204,171,14,88 };
    byte_vec_t sig { 111,176,7,90,232,223,221,206,80,1,173,80,78,125,148,2,128,154,210,79,216,229,135,201,80,104,196,215,59,122,24,130,161,166,200,221,142,191,105,105,231,78,6,67,218,157,217,168,100,74,6,252,58,196,137,58,251,47,131,139,206,209,160,249 };
    byte_vec_t pk { 4,23,2,246,124,52,171,85,70,102,119,149,192,168,156,94,21,141,49,81,143,236,211,123,54,110,199,161,89,79,7,81,86,109,93,103,53,215,203,101,34,149,218,33,200,70,17,126,62,52,176,50,26,198,141,49,101,170,197,100,151,238,149,199,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 970 ") {
    byte_vec_t msg { 142,87,46,118 };
    byte_vec_t sig { 229,61,207,78,85,240,151,29,22,146,249,4,39,81,82,25,52,179,189,51,193,180,6,238,252,20,121,130,192,100,172,50,31,194,217,81,242,154,183,196,22,28,81,85,70,158,103,2,188,137,66,84,224,248,136,62,212,92,178,58,43,158,216,7 };
    byte_vec_t pk { 4,246,249,54,138,94,247,149,57,121,53,146,88,67,159,5,91,112,149,253,111,217,90,73,87,8,63,35,156,44,84,134,174,243,123,69,168,51,90,74,14,38,158,70,177,102,61,124,249,125,112,12,112,203,38,80,51,68,102,41,39,185,172,143,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 970 ") {
    byte_vec_t msg { 2,145,227,217 };
    byte_vec_t sig { 45,166,123,206,232,110,110,1,161,94,83,180,80,29,70,185,41,145,106,255,240,53,57,220,236,102,34,87,165,140,12,165,121,54,167,59,82,39,113,110,39,242,163,180,195,23,22,138,25,121,137,149,54,160,212,4,152,152,28,247,120,81,51,86 };
    byte_vec_t pk { 4,179,212,163,149,210,211,91,105,203,200,206,64,219,99,217,217,134,30,133,213,71,67,149,14,157,203,133,192,105,191,160,150,100,26,100,145,100,194,75,40,6,134,103,170,228,101,153,244,58,184,160,227,0,25,240,100,123,175,114,65,21,214,78,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 971 ") {
    byte_vec_t msg { 125,94,168,33 };
    byte_vec_t sig { 43,114,148,181,7,102,58,102,12,157,189,157,51,9,3,47,80,79,130,122,173,215,242,81,213,192,216,20,7,131,202,114,29,210,194,162,90,4,10,64,7,61,92,188,249,88,146,4,44,134,165,249,203,143,208,175,28,110,236,131,243,138,69,159 };
    byte_vec_t pk { 4,209,184,155,182,202,163,105,166,234,183,68,53,36,69,150,247,159,245,205,24,106,0,129,246,191,51,2,126,96,85,83,161,147,83,30,199,124,240,67,7,201,43,91,172,63,193,109,178,203,29,117,235,167,124,248,95,129,81,90,34,7,127,3,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 971 ") {
    byte_vec_t msg { 222,149,113,91 };
    byte_vec_t sig { 52,43,12,128,160,211,207,230,34,242,180,246,83,59,224,232,7,171,216,30,52,100,103,117,247,37,134,10,116,16,11,68,233,210,140,87,180,163,43,252,40,86,220,189,176,224,33,245,64,28,184,124,90,88,106,99,137,79,38,95,232,107,73,127 };
    byte_vec_t pk { 4,105,211,4,135,159,254,224,218,89,88,180,94,119,160,120,41,181,90,60,181,163,216,164,87,224,231,79,148,92,193,136,246,74,33,230,35,184,5,139,93,119,85,224,201,177,20,217,21,6,23,44,175,253,82,168,220,62,55,36,46,175,216,246,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 972 ") {
    byte_vec_t msg { 107,247,112,234 };
    byte_vec_t sig { 120,3,194,220,181,180,204,18,16,222,73,23,74,110,4,89,60,76,118,185,229,244,10,10,50,42,96,255,189,55,254,37,222,91,248,130,59,154,192,173,33,76,195,92,123,108,21,134,61,170,219,136,255,233,118,215,254,238,38,254,79,156,171,99 };
    byte_vec_t pk { 4,66,19,120,33,154,227,174,114,64,108,122,173,255,1,183,232,223,203,240,226,93,156,53,55,120,186,226,160,247,132,193,244,33,129,66,91,197,125,98,151,225,253,29,252,148,175,33,204,118,117,167,74,131,187,77,200,159,201,166,210,240,2,224,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 972 ") {
    byte_vec_t msg { 64,187,227,190 };
    byte_vec_t sig { 172,143,108,44,252,133,105,29,193,165,175,90,146,156,78,97,236,112,156,136,240,233,68,31,252,206,191,250,154,209,123,213,182,238,75,238,99,165,240,229,109,110,245,44,8,120,236,145,243,102,219,87,252,64,13,212,214,189,62,45,55,201,1,148 };
    byte_vec_t pk { 4,211,222,198,157,214,129,61,28,171,161,172,32,196,41,108,106,209,54,252,189,125,152,4,240,88,12,209,6,39,130,174,88,175,37,216,180,97,98,182,172,78,107,197,59,52,129,79,116,223,34,76,6,147,109,155,193,183,52,173,232,180,163,166,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 973 ") {
    byte_vec_t msg { 31,81,65,76 };
    byte_vec_t sig { 17,199,17,16,197,1,129,137,243,51,253,81,49,4,51,85,94,84,231,73,99,146,130,19,29,243,30,141,188,111,80,101,70,26,49,64,73,174,230,137,100,189,52,66,189,52,147,126,85,171,252,233,76,75,155,132,205,46,165,92,246,154,44,241 };
    byte_vec_t pk { 4,53,1,67,13,158,204,130,62,14,57,215,66,23,251,98,190,138,173,24,128,229,51,4,79,30,165,95,19,146,222,139,187,202,176,41,152,52,223,96,111,16,73,136,19,238,120,132,152,250,137,193,9,4,63,113,163,238,167,218,69,1,219,77,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 973 ") {
    byte_vec_t msg { 179,31,50,119 };
    byte_vec_t sig { 114,76,89,56,231,22,233,95,165,86,197,18,78,218,128,248,5,183,140,210,228,77,64,95,58,127,253,251,159,152,24,130,135,160,39,119,45,42,80,254,182,235,219,168,160,160,255,166,239,102,173,181,34,82,103,58,211,218,150,193,38,85,143,132 };
    byte_vec_t pk { 4,236,222,176,241,145,106,241,179,141,64,250,10,131,171,197,115,41,245,111,77,79,195,71,166,105,62,59,106,100,231,24,197,108,223,162,57,21,240,238,52,100,7,194,49,215,218,183,32,100,244,77,58,81,92,33,82,92,17,33,54,81,189,97,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 974 ") {
    byte_vec_t msg { 91,239,119,83 };
    byte_vec_t sig { 202,60,5,164,5,143,114,121,41,136,42,169,34,233,113,143,122,219,200,37,198,148,89,109,214,120,29,95,188,130,69,227,111,44,28,203,205,207,47,205,240,237,30,54,175,19,86,179,132,230,54,24,224,219,240,45,101,172,165,132,182,178,47,214 };
    byte_vec_t pk { 4,100,89,123,132,77,2,243,91,96,139,117,168,228,165,176,84,102,248,178,225,60,232,38,168,93,42,225,169,252,18,134,57,218,34,196,41,136,131,237,214,199,118,78,5,1,255,161,247,213,47,23,1,176,82,163,0,191,20,32,129,106,123,46,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 974 ") {
    byte_vec_t msg { 55,158,236,186 };
    byte_vec_t sig { 110,249,239,146,84,49,92,137,254,191,240,99,169,216,154,23,18,63,146,226,222,33,158,67,201,218,66,246,188,206,1,180,59,27,28,202,15,145,209,76,176,235,52,8,233,127,54,253,167,90,143,62,199,98,210,4,188,248,218,128,44,19,35,156 };
    byte_vec_t pk { 4,136,145,169,94,96,218,250,232,150,83,189,105,54,253,75,206,199,157,152,40,105,148,200,38,8,135,14,94,187,116,127,180,168,20,120,86,122,39,118,92,32,246,96,242,32,165,249,164,39,252,49,97,22,198,85,24,188,185,234,137,29,249,216,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 975 ") {
    byte_vec_t msg { 217,83,249,55 };
    byte_vec_t sig { 239,141,36,240,101,68,131,236,79,230,194,255,152,131,121,109,68,227,157,38,127,60,74,23,121,45,254,151,28,142,79,2,180,0,224,58,191,132,215,239,220,230,15,76,68,77,10,120,241,44,88,241,147,185,177,223,139,166,77,151,93,4,16,120 };
    byte_vec_t pk { 4,196,12,4,165,109,179,122,142,177,11,182,29,76,231,45,57,214,88,140,175,160,232,117,101,130,96,120,36,239,12,177,131,95,214,100,123,146,129,47,176,151,241,141,182,43,217,72,211,172,11,37,16,74,14,58,202,32,113,155,143,31,89,143,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 975 ") {
    byte_vec_t msg { 84,137,157,207 };
    byte_vec_t sig { 49,36,58,162,115,155,72,30,84,220,227,165,11,243,170,170,0,55,115,210,73,55,205,215,2,109,209,213,159,43,245,171,180,103,182,224,133,116,160,44,3,175,70,47,201,135,39,170,30,84,175,239,27,255,105,37,127,29,150,76,120,119,52,201 };
    byte_vec_t pk { 4,14,143,21,252,63,191,58,100,203,162,147,193,108,211,162,40,227,227,123,179,120,194,228,173,162,222,82,244,37,18,67,203,66,8,121,177,190,222,204,60,236,105,86,127,2,110,169,113,208,61,242,159,161,84,53,64,193,182,205,27,58,170,244,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 976 ") {
    byte_vec_t msg { 252,165,75,209 };
    byte_vec_t sig { 97,207,143,118,170,245,134,52,162,77,51,65,98,49,166,44,97,30,9,147,165,79,252,42,73,146,161,155,211,50,238,84,13,20,240,25,35,175,86,241,106,103,28,63,129,113,166,118,238,83,242,30,195,110,57,195,25,169,150,138,31,131,252,73 };
    byte_vec_t pk { 4,230,153,78,96,87,108,18,48,54,188,127,11,20,170,141,14,161,4,98,26,89,172,170,139,114,30,142,150,203,42,246,84,106,204,188,146,148,237,172,209,108,142,127,231,13,157,132,131,6,175,198,26,36,56,77,189,93,76,192,13,228,136,135,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 976 ") {
    byte_vec_t msg { 87,199,141,243 };
    byte_vec_t sig { 107,29,20,68,12,15,247,121,127,214,108,10,163,128,30,240,47,64,34,78,178,114,28,144,247,110,156,170,60,104,39,174,22,216,233,170,19,10,188,253,217,116,42,46,27,250,195,206,161,116,29,209,68,145,130,68,146,33,127,30,88,156,28,243 };
    byte_vec_t pk { 4,108,135,128,227,168,244,123,225,29,236,7,113,73,89,107,56,77,210,49,180,77,175,233,245,127,181,200,188,183,153,243,88,110,136,169,5,36,88,95,221,244,83,228,101,8,53,237,101,50,150,199,50,41,27,214,224,211,16,68,223,55,100,42,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 977 ") {
    byte_vec_t msg { 166,223,207,0 };
    byte_vec_t sig { 79,236,166,252,115,25,230,2,170,112,179,250,220,198,222,223,184,18,79,54,126,165,214,53,113,91,71,106,176,150,232,24,56,245,53,136,202,200,220,51,142,126,82,206,17,197,89,198,57,54,241,213,14,131,113,26,140,80,226,26,196,230,216,219 };
    byte_vec_t pk { 4,230,185,192,99,58,224,24,172,74,36,250,163,129,198,139,55,109,85,132,146,170,154,59,96,22,246,239,225,35,77,225,49,165,186,159,220,98,241,59,21,110,144,61,36,107,221,232,239,220,129,67,1,192,56,30,95,152,253,165,73,88,3,182,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 977 ") {
    byte_vec_t msg { 87,115,75,120 };
    byte_vec_t sig { 228,49,63,238,253,92,52,150,76,79,168,67,105,124,119,81,88,204,9,69,244,33,204,177,254,81,230,143,245,251,30,20,121,176,48,218,38,68,127,23,181,136,72,207,26,216,155,30,177,119,86,92,7,211,156,161,116,203,74,38,73,127,49,47 };
    byte_vec_t pk { 4,238,213,49,137,170,123,24,133,149,198,238,154,219,231,250,125,124,14,155,90,72,70,252,83,139,252,200,206,242,28,183,188,100,169,250,74,14,72,233,234,174,245,218,151,166,131,183,54,15,142,59,110,23,12,108,60,45,46,225,238,8,42,201,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 978 ") {
    byte_vec_t msg { 185,116,208,170 };
    byte_vec_t sig { 7,40,184,15,228,140,68,6,126,145,85,131,36,110,10,141,4,82,182,208,105,152,52,249,17,129,236,124,14,88,254,146,159,0,131,232,197,169,166,228,197,48,115,190,111,69,25,85,171,130,76,88,177,184,113,106,233,84,47,152,209,150,185,192 };
    byte_vec_t pk { 4,110,133,122,208,70,241,73,169,31,240,246,228,109,209,255,147,105,83,65,129,14,214,22,241,88,5,87,140,45,26,74,176,111,47,59,10,0,135,209,117,135,40,205,3,128,236,255,119,192,7,243,43,44,219,239,31,66,124,5,138,142,68,214,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 978 ") {
    byte_vec_t msg { 236,24,141,113 };
    byte_vec_t sig { 69,55,108,66,96,41,86,67,85,191,207,234,198,224,76,230,204,209,124,70,13,18,87,66,76,184,99,252,250,190,72,246,15,226,104,194,43,240,238,196,101,119,181,222,66,53,15,203,63,129,13,25,52,197,161,35,93,132,206,119,134,170,122,8 };
    byte_vec_t pk { 4,185,220,68,68,89,194,171,24,8,208,175,228,144,30,201,232,25,30,189,47,50,254,151,206,4,155,99,237,51,250,9,42,76,194,41,0,84,141,155,17,20,19,223,143,154,125,160,220,228,229,161,211,176,247,22,183,197,124,192,30,122,33,5,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 979 ") {
    byte_vec_t msg { 233,246,172,95 };
    byte_vec_t sig { 135,154,96,65,65,255,36,142,222,76,90,241,99,167,180,246,101,237,197,4,6,116,147,138,151,115,185,55,188,84,106,241,36,53,18,87,67,167,204,127,102,110,228,230,250,0,30,81,22,132,0,114,135,125,215,46,65,5,91,175,136,194,127,60 };
    byte_vec_t pk { 4,162,188,63,40,110,118,160,183,123,209,113,244,112,141,40,144,48,52,167,100,231,89,252,43,204,116,33,59,228,192,152,195,77,251,185,34,176,233,115,56,202,100,105,38,154,104,111,29,139,203,114,204,218,175,101,118,199,26,156,111,148,187,255,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 979 ") {
    byte_vec_t msg { 176,186,125,214 };
    byte_vec_t sig { 30,239,131,43,183,85,185,114,76,48,176,211,64,137,101,159,192,227,221,31,243,3,116,156,175,183,220,204,168,190,236,148,70,65,228,242,127,202,72,14,118,50,79,23,77,21,33,211,166,15,7,78,184,188,235,240,86,147,158,255,73,16,14,213 };
    byte_vec_t pk { 4,221,21,20,188,3,30,98,147,125,2,161,71,166,134,157,68,24,21,219,180,186,26,180,167,120,232,230,36,83,68,68,150,43,255,236,57,231,20,91,75,26,230,123,111,92,227,90,123,237,84,96,8,255,104,33,23,8,170,10,59,236,81,138,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 980 ") {
    byte_vec_t msg { 124,154,67,31 };
    byte_vec_t sig { 46,177,111,75,171,30,40,147,181,179,227,238,114,192,169,145,107,69,53,7,158,168,0,108,57,136,104,132,171,144,111,155,66,242,51,147,251,193,48,45,38,47,204,174,218,39,199,155,210,207,120,77,28,149,5,98,32,187,135,132,96,10,3,135 };
    byte_vec_t pk { 4,127,210,137,227,108,172,198,0,61,239,210,95,88,161,233,253,202,108,233,190,43,212,127,28,112,62,71,53,177,118,160,224,132,72,248,169,228,105,55,190,3,165,98,198,133,227,101,219,147,137,125,108,47,178,56,42,38,167,158,232,222,62,31,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 980 ") {
    byte_vec_t msg { 72,65,239,127 };
    byte_vec_t sig { 181,152,161,240,156,231,107,154,2,28,194,71,120,122,111,99,127,138,100,33,101,246,95,100,51,131,74,77,123,148,24,73,64,115,124,71,250,222,127,234,232,124,86,152,238,51,48,111,37,49,31,217,143,66,96,227,230,72,2,247,129,43,27,164 };
    byte_vec_t pk { 4,153,143,208,36,219,101,212,244,87,199,15,233,157,103,151,219,163,4,193,242,183,73,229,160,169,221,192,64,239,237,13,73,34,214,209,219,154,254,239,68,120,214,211,81,119,45,29,31,240,245,120,26,202,230,100,94,58,205,170,200,221,53,19,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 981 ") {
    byte_vec_t msg { 245,206,222,14 };
    byte_vec_t sig { 106,80,116,114,137,27,109,214,86,63,160,122,196,116,236,114,214,251,230,89,132,107,236,255,169,99,62,30,225,117,71,242,71,66,32,56,215,24,66,218,59,68,161,10,102,181,234,111,139,159,60,134,167,51,212,116,60,242,195,147,66,33,10,176 };
    byte_vec_t pk { 4,68,55,109,180,170,106,95,189,33,218,145,104,254,133,59,242,97,3,102,56,254,77,176,64,79,62,17,251,131,246,40,60,184,221,2,198,238,169,231,68,242,135,16,202,195,135,209,85,31,166,86,161,0,88,89,84,252,217,97,146,190,26,238,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 981 ") {
    byte_vec_t msg { 64,60,254,186 };
    byte_vec_t sig { 55,255,106,216,37,54,161,244,115,201,28,241,229,88,149,59,128,10,32,47,166,220,44,57,231,91,221,93,9,81,113,217,46,57,142,88,137,179,105,185,40,175,175,203,254,196,240,53,142,240,59,37,134,69,228,77,142,22,151,170,236,127,126,87 };
    byte_vec_t pk { 4,122,133,167,103,99,97,114,201,49,152,98,240,36,31,14,144,112,20,50,72,163,164,144,177,243,13,213,77,81,47,195,151,124,64,166,159,196,122,50,228,199,194,22,122,199,73,166,10,136,240,128,174,175,150,81,47,80,85,11,22,225,0,77,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 982 ") {
    byte_vec_t msg { 116,225,110,132 };
    byte_vec_t sig { 130,98,14,27,82,162,153,7,222,48,169,122,156,8,255,235,100,130,191,8,120,225,206,20,188,171,31,39,112,69,15,150,237,69,240,250,18,132,196,139,170,83,27,221,192,6,84,176,245,5,39,5,254,134,130,182,166,210,222,200,200,143,203,188 };
    byte_vec_t pk { 4,82,89,164,66,18,16,7,187,44,165,91,130,165,55,235,165,198,129,86,178,178,192,87,15,37,95,82,123,173,208,245,220,109,49,4,219,153,202,66,178,151,3,29,181,203,94,61,4,185,241,98,16,216,227,73,143,230,177,175,252,227,86,176,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 982 ") {
    byte_vec_t msg { 190,195,95,131 };
    byte_vec_t sig { 116,252,223,47,191,119,206,195,250,235,38,168,101,45,227,244,179,118,25,253,213,26,182,109,154,228,130,170,237,215,72,149,157,177,66,41,227,2,183,109,219,71,57,58,201,124,68,53,220,166,88,120,18,215,86,132,86,109,67,51,107,78,157,116 };
    byte_vec_t pk { 4,106,176,172,112,194,109,122,188,67,188,148,26,148,115,69,121,66,233,189,122,205,14,202,162,37,209,73,181,154,5,129,25,179,209,6,118,210,99,221,143,183,194,169,133,230,15,157,211,95,177,157,128,222,203,139,118,87,39,13,101,138,38,107,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 983 ") {
    byte_vec_t msg { 165,230,244,9 };
    byte_vec_t sig { 39,170,219,182,6,164,188,88,168,199,85,140,57,67,20,173,2,12,212,10,104,91,44,12,136,110,137,249,212,51,212,138,147,166,100,183,58,14,6,34,44,77,109,19,46,233,228,233,29,200,174,46,49,138,33,213,21,135,157,39,101,242,211,73 };
    byte_vec_t pk { 4,55,226,64,23,168,176,252,214,222,8,13,12,203,132,129,21,183,53,228,96,94,129,249,165,124,96,11,154,47,79,177,140,63,164,208,57,80,116,16,101,16,127,181,236,82,180,194,120,242,149,252,26,238,155,221,241,151,193,219,228,33,121,160,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 983 ") {
    byte_vec_t msg { 164,113,130,205 };
    byte_vec_t sig { 233,6,221,57,32,209,216,240,70,98,128,12,57,105,210,151,46,172,217,236,245,245,78,0,205,78,79,134,152,34,216,194,63,14,143,179,114,95,107,245,206,33,89,73,136,202,98,240,242,5,249,44,67,114,140,45,105,85,86,191,124,172,219,112 };
    byte_vec_t pk { 4,188,103,120,93,0,142,207,124,159,238,18,56,137,80,55,14,215,32,94,154,29,98,201,114,210,139,124,222,78,108,93,211,19,147,217,39,82,56,188,113,226,158,172,251,69,110,90,117,63,255,127,142,205,73,129,50,128,186,206,74,108,84,161,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 984 ") {
    byte_vec_t msg { 42,192,8,26 };
    byte_vec_t sig { 61,131,112,199,60,59,234,47,188,34,97,201,175,106,87,182,7,160,199,166,59,196,102,165,54,49,121,223,201,236,86,0,12,215,140,151,165,39,89,144,113,86,125,154,163,200,239,35,189,162,212,9,107,187,151,112,68,179,184,28,105,192,99,159 };
    byte_vec_t pk { 4,117,112,20,75,72,147,145,92,157,116,219,172,203,110,249,177,87,53,113,150,31,48,81,246,175,126,145,31,11,95,179,137,64,204,128,197,201,238,142,249,63,29,134,171,0,19,7,112,104,55,175,92,153,243,200,36,159,130,128,13,125,77,230,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 984 ") {
    byte_vec_t msg { 81,44,37,47 };
    byte_vec_t sig { 71,151,60,97,247,132,175,158,34,178,234,1,156,7,103,141,131,162,182,207,188,57,245,91,108,24,117,251,229,156,15,3,107,153,136,99,16,178,107,149,170,91,123,156,217,216,240,199,43,114,106,78,162,156,73,131,0,91,38,189,195,69,176,174 };
    byte_vec_t pk { 4,160,99,161,181,9,188,187,77,232,9,255,85,25,87,244,223,7,125,18,137,81,246,205,221,165,232,253,19,202,173,5,215,157,77,230,51,220,191,228,60,80,115,157,90,189,104,175,227,161,214,90,62,88,225,180,180,53,215,14,25,93,77,86,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 985 ") {
    byte_vec_t msg { 67,103,189,66 };
    byte_vec_t sig { 32,31,140,177,33,23,34,211,86,216,90,85,49,28,54,28,169,182,76,71,97,72,166,205,250,149,97,154,141,62,221,36,187,112,229,243,33,33,112,45,150,31,128,31,117,79,187,158,56,240,221,19,138,241,173,219,77,130,136,74,29,177,84,39 };
    byte_vec_t pk { 4,43,150,137,94,141,146,233,170,110,242,244,183,63,96,208,228,215,255,122,113,96,229,63,203,211,108,211,195,158,97,37,121,125,225,88,225,202,145,121,159,121,188,196,19,164,187,54,38,29,211,189,183,158,165,112,197,11,154,119,213,211,122,40,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 985 ") {
    byte_vec_t msg { 175,42,190,183 };
    byte_vec_t sig { 224,81,28,51,83,15,126,126,117,65,211,125,40,232,24,254,214,31,45,56,13,109,244,27,2,125,178,249,87,75,141,35,172,9,22,46,28,45,176,32,35,205,12,162,79,225,22,67,196,7,33,4,232,62,139,242,145,26,245,128,146,175,84,90 };
    byte_vec_t pk { 4,103,98,130,194,83,44,187,42,53,44,66,26,163,196,17,134,23,2,82,135,198,133,209,35,47,153,95,204,224,108,40,8,77,216,90,85,184,154,212,138,151,109,228,237,91,81,101,53,159,6,175,130,193,31,206,72,244,142,140,109,39,141,134,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 986 ") {
    byte_vec_t msg { 90,57,37,16 };
    byte_vec_t sig { 102,0,151,156,79,53,254,118,189,180,201,35,236,109,225,61,74,9,253,135,91,185,124,192,167,119,51,16,153,159,168,47,162,91,70,182,52,93,239,180,233,124,50,56,106,19,217,90,70,41,5,155,222,105,15,112,86,197,155,251,6,249,215,237 };
    byte_vec_t pk { 4,28,151,55,204,92,96,4,122,213,186,96,63,230,47,205,249,65,214,142,88,21,86,13,233,192,196,201,246,31,90,102,184,95,48,228,142,11,144,237,158,29,245,27,102,16,49,86,19,215,139,186,1,99,151,117,143,15,75,158,220,160,106,237,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 986 ") {
    byte_vec_t msg { 218,29,57,110 };
    byte_vec_t sig { 248,164,211,188,64,105,139,211,37,23,175,159,234,58,191,20,150,104,143,246,233,187,71,20,155,20,182,13,126,4,227,182,167,177,70,2,95,141,201,255,99,194,41,203,11,125,138,66,166,29,42,168,210,46,77,90,70,213,148,54,112,154,120,106 };
    byte_vec_t pk { 4,33,232,116,187,90,2,63,108,58,159,66,162,118,219,6,228,67,89,3,159,96,237,33,55,61,61,39,194,227,169,167,174,221,194,45,49,121,48,46,252,112,53,68,175,91,100,194,187,101,143,68,179,87,0,214,122,225,59,46,20,0,158,13,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 987 ") {
    byte_vec_t msg { 44,235,23,117 };
    byte_vec_t sig { 186,219,247,217,123,185,145,178,34,62,31,8,80,118,225,60,60,217,177,211,8,155,160,160,247,121,45,246,178,44,159,15,20,187,134,251,216,51,232,199,79,181,142,134,167,160,123,222,66,1,9,90,136,82,101,67,124,113,115,202,217,85,64,134 };
    byte_vec_t pk { 4,11,51,159,248,95,71,4,128,74,235,139,1,84,237,96,30,200,102,55,118,247,205,112,129,212,7,64,194,134,175,178,232,219,122,140,237,238,199,149,227,251,125,224,89,250,72,24,194,226,4,222,143,61,139,181,76,57,247,237,78,80,61,158,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 987 ") {
    byte_vec_t msg { 194,26,176,48 };
    byte_vec_t sig { 201,13,139,229,18,167,177,174,147,200,127,180,164,130,140,74,136,78,88,228,115,83,123,43,199,187,235,178,199,254,175,177,41,93,15,254,180,36,195,236,49,41,2,154,166,112,17,241,185,250,11,96,148,131,27,217,185,219,0,195,211,10,86,227 };
    byte_vec_t pk { 4,102,208,85,1,67,20,117,222,206,190,237,141,246,166,87,68,138,246,217,63,122,71,132,29,145,171,29,155,30,79,125,29,225,0,249,157,92,218,155,75,155,29,227,203,28,226,74,5,187,153,125,210,176,92,168,147,253,122,41,158,116,21,176,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 988 ") {
    byte_vec_t msg { 143,252,165,207 };
    byte_vec_t sig { 11,186,65,74,76,206,122,230,60,53,29,187,96,60,110,233,161,169,27,150,237,254,99,38,152,11,98,233,43,135,198,86,48,253,27,197,82,183,221,194,127,156,132,196,7,133,171,4,59,142,243,76,75,236,239,60,78,198,54,9,22,150,154,47 };
    byte_vec_t pk { 4,45,155,224,61,201,132,111,166,39,98,142,73,82,14,10,171,146,120,25,198,105,215,169,63,187,198,30,18,226,137,11,138,19,134,125,57,1,0,167,79,24,160,132,189,221,225,121,17,225,11,147,141,203,209,104,6,223,166,24,112,228,186,22,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 988 ") {
    byte_vec_t msg { 82,228,53,48 };
    byte_vec_t sig { 111,158,115,67,183,163,45,128,124,153,34,22,40,253,245,156,170,18,138,249,250,79,80,15,191,149,148,207,28,194,92,78,100,112,225,89,76,167,252,189,203,15,92,193,125,213,82,254,128,58,74,110,233,104,144,170,148,234,176,213,210,149,127,199 };
    byte_vec_t pk { 4,45,230,83,196,72,227,146,56,92,209,60,251,191,178,217,218,229,4,3,35,210,46,103,91,51,121,188,57,58,67,245,61,64,181,0,126,199,223,18,131,21,246,84,42,120,26,72,200,114,159,135,170,19,81,219,81,22,189,96,2,179,48,250,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 989 ") {
    byte_vec_t msg { 164,36,52,73 };
    byte_vec_t sig { 129,70,236,142,155,37,26,180,71,91,43,177,35,61,15,120,95,194,202,115,166,16,54,253,251,10,132,77,24,104,182,192,110,209,188,202,238,217,106,126,204,170,32,22,56,45,170,185,8,108,214,77,65,226,249,71,20,213,164,33,243,209,159,41 };
    byte_vec_t pk { 4,15,24,51,164,253,135,57,100,99,22,129,207,61,112,64,194,65,27,15,70,197,207,54,91,222,244,165,147,180,166,38,73,187,167,59,35,51,67,119,44,140,40,78,178,96,12,117,121,13,200,192,46,117,102,248,197,122,246,214,162,98,149,137,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 989 ") {
    byte_vec_t msg { 148,136,203,236 };
    byte_vec_t sig { 173,87,232,143,117,239,167,117,6,166,169,119,158,236,38,125,74,164,191,43,241,238,181,209,221,0,177,147,253,16,29,43,45,231,158,224,97,184,211,189,82,90,109,188,157,155,57,253,32,218,80,97,19,93,105,32,156,101,104,130,124,116,209,1 };
    byte_vec_t pk { 4,17,119,23,8,199,46,116,59,168,126,102,125,54,83,122,206,109,24,237,197,183,8,89,191,113,124,54,172,109,127,209,202,192,99,109,15,61,134,158,172,35,151,24,34,133,178,185,10,63,232,228,19,122,198,36,120,200,63,222,33,11,103,109,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 990 ") {
    byte_vec_t msg { 198,251,250,141 };
    byte_vec_t sig { 108,83,87,15,158,36,69,183,161,149,26,151,80,142,186,98,144,207,213,81,217,21,79,189,49,67,58,222,101,103,27,239,208,20,14,147,47,185,25,252,87,145,195,234,206,161,203,123,160,241,170,67,85,126,137,161,74,45,99,54,152,220,131,230 };
    byte_vec_t pk { 4,59,43,134,118,68,24,186,136,17,142,192,75,4,184,107,108,100,55,155,186,10,102,70,73,56,163,9,172,165,176,104,1,142,2,173,142,115,225,227,203,28,81,244,64,10,254,26,99,39,203,248,140,63,24,85,6,242,73,142,69,113,65,82,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 990 ") {
    byte_vec_t msg { 163,97,103,84 };
    byte_vec_t sig { 227,6,220,5,204,145,100,224,38,98,243,83,97,122,37,180,65,206,174,12,62,1,37,183,214,0,43,223,49,218,7,213,220,89,128,205,157,77,90,42,127,73,35,210,247,105,160,53,163,241,1,178,42,163,112,28,57,177,210,5,145,66,92,179 };
    byte_vec_t pk { 4,137,129,234,155,14,21,167,55,46,53,9,219,196,53,134,245,24,253,163,202,216,164,170,135,182,41,119,38,26,203,89,113,119,144,7,158,205,250,183,32,199,208,211,105,188,41,153,237,192,158,194,251,61,96,106,34,128,44,83,114,198,208,133,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 991 ") {
    byte_vec_t msg { 104,158,190,182 };
    byte_vec_t sig { 240,35,3,61,234,51,206,21,15,135,166,253,141,78,178,60,180,30,227,2,55,251,208,213,126,244,9,178,49,9,18,211,222,87,60,126,30,145,156,33,190,126,202,81,105,15,179,125,165,241,79,91,130,207,160,87,248,54,3,12,245,161,163,164 };
    byte_vec_t pk { 4,173,232,22,75,59,213,71,167,138,119,50,22,43,213,21,64,126,180,84,48,60,60,229,81,134,98,63,252,247,182,178,219,233,53,131,6,35,55,235,106,57,71,224,232,115,131,49,7,135,19,110,78,59,196,243,105,64,51,79,15,149,172,232,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 991 ") {
    byte_vec_t msg { 63,127,161,202 };
    byte_vec_t sig { 44,52,163,57,188,145,58,245,13,41,168,31,145,159,178,53,179,119,146,75,130,26,228,186,30,111,138,112,199,139,52,209,178,13,25,49,7,113,92,185,155,151,179,233,135,51,86,56,239,60,214,222,245,96,53,241,253,37,11,46,46,122,99,151 };
    byte_vec_t pk { 4,203,78,59,238,136,160,178,241,143,232,92,42,55,155,240,166,55,2,126,82,147,206,90,255,73,16,240,139,60,214,40,50,74,244,187,111,71,113,163,103,238,253,149,123,229,34,51,6,206,208,57,78,78,65,200,5,232,42,75,234,180,121,245,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 992 ") {
    byte_vec_t msg { 238,8,1,151 };
    byte_vec_t sig { 123,7,241,246,44,232,240,199,129,247,143,238,240,183,110,102,108,22,77,43,143,23,150,3,244,229,228,75,39,36,100,145,59,5,57,76,11,150,58,119,244,157,5,64,237,25,172,47,204,197,124,72,76,48,9,248,248,143,204,163,244,148,204,58 };
    byte_vec_t pk { 4,136,185,141,26,3,212,119,204,233,174,65,8,160,40,31,64,50,184,253,156,85,201,140,156,240,16,138,69,135,172,149,203,69,83,38,99,255,138,81,128,122,170,26,115,87,144,231,171,50,159,149,184,251,238,246,140,155,182,98,212,50,83,217,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 992 ") {
    byte_vec_t msg { 110,205,239,114 };
    byte_vec_t sig { 185,159,205,147,193,254,96,207,249,225,9,245,130,26,255,7,82,227,108,233,129,24,10,9,59,200,51,82,226,111,246,203,17,132,81,5,129,169,123,252,4,23,236,112,93,174,31,158,9,7,119,210,241,144,41,37,131,50,75,160,201,163,196,145 };
    byte_vec_t pk { 4,17,161,3,6,85,76,185,245,136,127,249,138,172,105,39,21,143,54,107,143,86,209,20,198,249,176,158,57,123,224,12,56,40,197,202,102,55,15,154,22,83,153,224,102,144,116,199,251,168,73,74,82,103,252,203,86,101,191,1,112,1,94,188,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 993 ") {
    byte_vec_t msg { 160,235,195,41 };
    byte_vec_t sig { 174,22,167,173,206,8,62,152,141,248,174,80,138,218,250,3,4,169,43,215,167,111,230,119,203,20,59,218,240,201,99,52,167,158,42,231,11,28,148,107,181,96,50,170,154,140,197,214,169,117,14,254,67,75,233,47,61,192,237,254,216,105,19,221 };
    byte_vec_t pk { 4,231,202,188,188,136,172,35,95,200,129,199,198,239,10,9,109,181,93,85,154,111,65,81,113,170,31,121,17,151,205,98,237,17,238,243,201,120,171,161,218,217,247,234,131,38,101,34,118,184,244,217,207,129,201,194,2,104,255,83,248,67,180,203,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 993 ") {
    byte_vec_t msg { 171,7,169,235 };
    byte_vec_t sig { 231,33,144,80,17,240,16,240,218,161,89,85,187,210,25,5,173,19,68,57,196,30,79,202,199,216,24,34,177,64,200,233,5,239,191,69,182,251,141,16,47,91,85,70,62,134,117,105,45,203,97,88,26,56,111,242,169,129,168,49,49,206,68,91 };
    byte_vec_t pk { 4,196,149,239,186,19,143,96,10,8,38,147,166,117,9,68,60,139,237,189,120,156,119,28,62,30,217,6,183,77,240,201,174,73,192,109,123,65,233,107,234,11,218,116,177,84,230,169,158,91,163,214,114,39,184,144,249,161,195,95,2,252,43,88,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 994 ") {
    byte_vec_t msg { 101,223,51,157 };
    byte_vec_t sig { 102,44,128,203,199,152,146,118,252,18,134,82,242,120,232,231,141,203,35,65,229,111,2,16,126,41,37,170,45,196,56,152,131,8,66,203,130,174,24,154,208,196,137,154,92,150,71,227,215,15,241,187,85,8,108,108,167,228,151,213,110,215,32,224 };
    byte_vec_t pk { 4,64,115,58,204,172,163,253,142,170,127,45,14,80,178,148,18,169,39,106,211,37,144,188,119,75,222,201,214,187,41,159,186,221,244,171,15,13,212,154,16,165,86,0,30,86,170,37,202,66,223,79,247,184,95,58,192,205,171,117,65,133,159,249,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 994 ") {
    byte_vec_t msg { 150,207,205,144 };
    byte_vec_t sig { 43,206,38,233,234,209,103,54,86,32,100,84,74,176,138,5,174,230,42,87,151,113,213,227,192,166,12,146,87,155,145,40,153,92,47,72,247,16,72,62,151,208,195,107,59,137,23,24,217,69,252,142,245,9,112,239,55,48,225,21,191,35,141,191 };
    byte_vec_t pk { 4,230,183,196,218,28,74,249,82,207,59,194,24,190,38,196,30,209,231,236,252,197,230,89,196,66,21,67,133,105,149,161,3,255,221,47,27,42,196,68,71,238,155,171,13,218,55,2,73,247,205,243,254,250,131,131,41,235,27,7,9,155,221,80,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 995 ") {
    byte_vec_t msg { 151,33,70,22 };
    byte_vec_t sig { 223,26,178,197,45,131,231,88,157,118,226,181,112,143,88,254,185,171,126,238,255,242,254,41,153,146,144,194,83,218,135,114,141,222,75,209,43,92,101,226,22,187,122,37,13,112,75,117,95,234,42,251,78,158,84,215,243,41,71,191,28,96,167,135 };
    byte_vec_t pk { 4,82,19,25,99,4,50,227,11,148,253,2,101,243,55,93,68,31,74,194,13,226,82,19,6,140,176,108,252,230,133,3,143,181,177,181,108,77,191,225,168,27,179,116,231,19,212,171,149,169,108,191,216,170,11,40,84,255,217,104,118,188,74,247,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 995 ") {
    byte_vec_t msg { 110,239,205,108 };
    byte_vec_t sig { 193,240,96,246,70,200,83,163,104,222,10,17,166,122,23,19,29,34,63,181,139,125,196,214,146,59,254,78,46,153,213,230,156,69,176,227,160,31,240,46,170,97,128,109,155,182,144,115,181,80,244,5,211,104,185,157,172,157,16,127,10,176,46,114 };
    byte_vec_t pk { 4,113,231,129,222,61,226,116,18,248,51,239,41,72,175,61,202,40,48,190,201,71,99,138,58,140,63,156,252,176,217,150,114,141,62,182,108,240,153,174,151,68,202,240,238,239,223,172,244,39,153,41,155,123,216,182,239,48,247,230,169,83,224,16,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 996 ") {
    byte_vec_t msg { 254,103,0,103 };
    byte_vec_t sig { 113,100,190,123,78,110,222,241,231,29,82,191,227,70,126,93,135,142,166,47,202,157,74,85,98,70,155,38,115,152,166,200,217,49,53,138,46,151,208,16,213,145,213,91,166,115,104,116,60,192,185,31,49,116,142,61,233,62,218,233,80,71,56,51 };
    byte_vec_t pk { 4,181,0,168,110,93,14,152,219,234,149,184,201,137,224,112,18,58,67,64,174,125,10,175,212,100,7,242,154,224,203,69,102,81,76,131,172,95,145,78,231,122,112,145,107,58,140,218,242,208,69,113,70,152,46,25,65,48,123,61,192,249,74,254,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 996 ") {
    byte_vec_t msg { 19,167,235,72 };
    byte_vec_t sig { 203,153,226,30,30,179,180,3,221,54,86,55,175,247,193,168,23,52,161,214,248,209,0,36,100,231,131,135,27,157,124,167,140,221,41,120,25,59,131,42,82,216,3,13,84,140,135,238,53,92,82,208,92,114,87,131,59,137,89,187,106,158,33,86 };
    byte_vec_t pk { 4,53,105,74,20,195,139,54,101,143,196,126,118,210,128,4,236,188,41,60,3,77,60,80,139,151,179,70,218,116,138,241,224,220,39,7,178,186,224,207,236,208,45,161,30,218,101,127,222,45,120,104,203,96,218,178,242,121,8,212,49,56,47,131,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 997 ") {
    byte_vec_t msg { 215,171,225,54 };
    byte_vec_t sig { 127,2,38,157,103,42,20,233,226,199,13,229,251,56,87,210,31,205,11,113,204,3,59,24,243,19,121,209,141,59,148,160,196,2,115,63,233,44,144,232,33,151,235,152,161,59,73,99,29,117,185,167,144,210,45,232,174,6,84,111,14,174,190,177 };
    byte_vec_t pk { 4,168,54,187,15,6,24,141,49,214,195,66,214,48,65,217,119,96,220,231,217,236,53,47,108,83,84,238,218,72,97,150,177,62,14,0,29,47,107,189,198,68,251,205,227,23,101,148,44,67,223,6,162,48,132,25,214,1,222,9,178,242,154,112,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 997 ") {
    byte_vec_t msg { 125,80,75,229 };
    byte_vec_t sig { 203,122,55,92,127,229,110,119,105,192,46,208,14,60,159,166,255,209,181,35,209,90,238,114,160,207,142,50,180,168,1,139,96,176,45,215,225,158,99,160,149,200,251,218,38,230,218,89,85,44,144,117,139,30,108,44,169,202,9,46,29,204,167,73 };
    byte_vec_t pk { 4,107,242,203,30,203,128,22,134,225,115,3,109,68,88,239,188,226,182,106,171,93,155,30,251,11,88,130,8,57,144,124,63,220,113,20,135,133,32,148,61,11,74,218,136,234,218,118,210,53,94,251,104,198,162,173,90,171,203,147,230,39,92,135,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 998 ") {
    byte_vec_t msg { 236,182,201,121 };
    byte_vec_t sig { 136,117,138,238,14,251,102,117,236,22,13,170,170,243,175,123,176,107,53,135,249,39,239,51,21,134,3,158,245,165,101,97,43,108,221,16,142,63,23,1,202,70,252,203,66,183,243,157,82,151,86,135,75,67,32,108,101,133,64,203,14,231,4,197 };
    byte_vec_t pk { 4,24,162,130,165,203,129,226,142,37,217,231,221,166,248,68,21,25,26,16,126,98,10,115,112,11,232,58,51,176,13,46,116,25,208,25,81,172,240,235,229,202,63,49,43,31,55,96,116,103,61,30,221,118,208,44,223,169,58,132,221,67,37,11,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 998 ") {
    byte_vec_t msg { 2,110,177,120 };
    byte_vec_t sig { 31,217,131,85,230,75,132,126,209,233,254,174,9,61,143,11,150,57,25,194,12,165,129,114,196,248,142,24,192,254,193,20,159,7,22,202,32,105,128,58,217,93,4,171,34,223,101,125,165,144,211,44,90,218,154,39,99,170,95,39,140,230,188,70 };
    byte_vec_t pk { 4,174,163,166,89,233,8,147,217,67,217,28,254,23,253,19,12,206,33,199,205,19,21,244,160,97,68,144,91,130,49,13,68,69,27,206,121,112,5,47,147,177,113,125,155,154,149,16,79,247,123,198,170,227,177,140,12,95,56,200,79,71,175,225,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid 999 ") {
    byte_vec_t msg { 241,222,73,157 };
    byte_vec_t sig { 93,141,157,184,123,251,16,41,206,185,146,115,231,125,120,70,94,207,145,166,221,0,28,191,136,192,190,50,246,57,139,147,70,158,60,199,24,64,62,110,36,168,254,4,156,27,243,2,228,165,129,147,75,154,30,224,147,127,51,208,150,63,223,33 };
    byte_vec_t pk { 4,230,94,57,48,193,136,239,115,90,205,127,235,125,239,214,3,84,18,77,214,30,82,166,215,220,159,27,23,30,124,246,73,58,63,122,22,61,94,36,27,198,125,95,203,233,229,233,21,246,89,54,175,8,219,82,78,243,33,117,91,68,202,79,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid 999 ") {
    byte_vec_t msg { 158,13,84,174 };
    byte_vec_t sig { 0,24,31,129,120,32,54,218,132,18,204,50,172,52,244,252,87,196,98,254,189,52,253,242,87,14,72,39,50,41,130,146,31,115,248,54,4,227,61,13,166,140,59,74,221,67,195,193,139,250,225,19,140,73,56,6,180,120,245,205,140,161,140,251 };
    byte_vec_t pk { 4,127,81,253,69,113,185,169,185,131,140,61,172,109,13,6,90,29,80,181,23,24,161,213,28,49,52,231,43,195,143,52,75,250,239,74,120,158,60,7,72,104,180,41,88,191,63,219,147,232,0,223,245,180,164,17,226,8,255,77,138,185,242,60,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }

