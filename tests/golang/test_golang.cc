// DO NOT MODIFY, autogenerated on 2023-02-27T04:45:53Z
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN
#include "doctest.h"
#include "../../p256.h"

using byte_vec_t = std::vector< unsigned char >;

TEST_CASE("testing p256_verify valid signature") {
    byte_vec_t msg {0x68,0x69,0x0a};
    byte_vec_t sig {
        /* r */
        0x6c,0x98,0xb6,0x80,0x9f,0x6e,0x2c,0x73,
        0x95,0xc6,0xc9,0xf1,0x8a,0x30,0x28,0x21,
        0xc5,0xf6,0x03,0x69,0xd3,0xab,0xd1,0x92,
        0xe9,0xe5,0xc4,0xf6,0x07,0xd5,0x18,0xd3,

        /* s */
        0x4a,0x9d,0x74,0xa0,0xf4,0x4c,0x61,0x03,
        0x13,0x30,0xa7,0xe3,0xf2,0x79,0x08,0xf5,
        0xc5,0x89,0xfe,0x64,0x27,0xdb,0x7c,0x3f,
        0x3f,0x74,0x09,0x55,0x9e,0x50,0x0c,0x3c};

    byte_vec_t pk {
        /* constant */ 0x04,

        /* x-coord */
        0x56,0x16,0xab,0x0d,0xf8,0x5a,0xc8,0x9c,
        0xc8,0x53,0xb8,0x4e,0x53,0xca,0xb5,0x35,
        0x22,0x4a,0x7d,0xbc,0x39,0x27,0x02,0x76,
        0xdd,0xa8,0x00,0x85,0x3e,0xe8,0xae,0x9b, 

        /* y-coord */
        0x68,0xb9,0x53,0x59,0x70,0x4f,0x87,0xe0,
        0x23,0x42,0x4d,0x5d,0x84,0x2f,0x08,0x21,
        0xd8,0x8c,0xe0,0x1f,0xb6,0xa8,0x1a,0x6a,
        0x1c,0x87,0x8a,0x81,0x13,0x0c,0x61,0x68
    };

    CHECK( p256_verify(msg.data(),
                         static_cast< unsigned >(msg.size()),
                         sig.data(),
                         pk.data()) == P256_SUCCESS );
}

TEST_CASE("testing p256_verify negative case") {
    byte_vec_t msg {0x68,0x69,0x0a};
    /* incorrect signature */
    byte_vec_t sig {
        /* incorrect r */
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        0xe9,0xe5,0xc4,0xf6,0x07,0xd5,0x18,0xd3,

        /* s */
        0x4a,0x9d,0x74,0xa0,0xf4,0x4c,0x61,0x03,
        0x13,0x30,0xa7,0xe3,0xf2,0x79,0x08,0xf5,
        0xc5,0x89,0xfe,0x64,0x27,0xdb,0x7c,0x3f,
        0x3f,0x74,0x09,0x55,0x9e,0x50,0x0c,0x3c};

    byte_vec_t pk {
        /* constant */ 0x04,

        /* x-coord */
        0x56,0x16,0xab,0x0d,0xf8,0x5a,0xc8,0x9c,
        0xc8,0x53,0xb8,0x4e,0x53,0xca,0xb5,0x35,
        0x22,0x4a,0x7d,0xbc,0x39,0x27,0x02,0x76,
        0xdd,0xa8,0x00,0x85,0x3e,0xe8,0xae,0x9b, 

        /* y-coord */
        0x68,0xb9,0x53,0x59,0x70,0x4f,0x87,0xe0,
        0x23,0x42,0x4d,0x5d,0x84,0x2f,0x08,0x21,
        0xd8,0x8c,0xe0,0x1f,0xb6,0xa8,0x1a,0x6a,
        0x1c,0x87,0x8a,0x81,0x13,0x0c,0x61,0x68
    };

    REQUIRE( p256_verify(msg.data(),
                         static_cast< unsigned >(msg.size()),
                         sig.data(),
                         pk.data()) == P256_INVALID_SIGNATURE );
  }
TEST_CASE(" test golang valid uncompressed 0 ") {
    byte_vec_t msg { 153,154,153,182 };
    byte_vec_t sig { 151,92,130,163,213,251,245,180,87,100,159,169,181,207,209,68,185,218,76,221,91,183,84,89,41,224,8,128,27,29,10,101,25,247,55,104,44,193,166,22,254,49,103,186,92,225,140,95,205,131,246,95,47,119,186,208,55,246,252,221,174,146,231,31 };
    byte_vec_t pk { 4,76,113,115,185,0,102,61,195,128,81,79,178,48,182,148,162,182,140,239,176,77,173,56,221,217,84,15,60,100,134,68,130,219,77,171,144,54,148,209,10,215,201,74,63,63,241,171,113,11,228,145,204,248,54,238,18,54,194,20,254,15,10,178,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 0 ") {
    byte_vec_t msg { 250,10,194,83 };
    byte_vec_t sig { 116,81,240,205,248,30,14,48,20,58,214,128,174,199,132,178,12,166,189,158,170,253,38,14,197,29,123,1,192,76,86,154,228,86,18,97,49,194,214,228,36,171,39,41,232,28,238,161,16,248,176,13,114,50,72,8,209,91,21,57,175,41,227,28 };
    byte_vec_t pk { 4,142,118,172,207,53,34,14,27,19,33,70,179,120,10,233,252,226,169,81,74,255,162,11,207,223,19,23,217,125,97,130,221,115,139,65,28,51,151,130,245,48,212,59,2,21,121,1,191,145,132,153,223,179,133,64,67,36,86,167,43,217,83,128,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 0 ") {
    byte_vec_t msg { 0,163,145,254 };
    byte_vec_t sig { 23,191,145,221,59,211,172,27,50,129,197,75,198,138,82,16,30,173,60,105,81,212,192,33,205,144,45,175,160,188,70,111,203,251,70,81,52,98,126,149,57,132,112,163,222,11,65,245,158,133,119,7,231,160,61,75,113,25,144,242,195,2,66,45 };
    byte_vec_t pk { 2,234,97,36,171,44,154,197,42,61,103,181,169,226,43,70,198,207,222,219,77,96,163,184,94,89,210,107,181,68,146,170,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 0 ") {
    byte_vec_t msg { 91,42,147,58 };
    byte_vec_t sig { 14,0,26,61,175,158,7,116,162,151,151,35,23,128,193,82,119,36,81,5,165,70,3,5,126,146,214,63,81,144,105,134,42,215,201,207,126,130,232,130,93,189,42,177,84,198,133,96,157,153,1,155,188,182,109,23,198,136,197,159,12,220,155,151 };
    byte_vec_t pk { 2,186,24,106,74,47,217,220,39,110,65,134,100,89,233,43,194,154,144,8,209,238,161,102,155,119,254,102,168,179,31,146,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 1 ") {
    byte_vec_t msg { 167,179,94,49 };
    byte_vec_t sig { 65,14,35,12,7,252,49,254,52,106,177,167,41,22,201,6,37,86,168,68,135,228,143,182,240,108,38,35,100,244,55,202,160,116,63,57,234,171,104,155,226,100,18,72,188,121,50,238,226,182,50,97,181,240,65,51,4,247,254,72,35,85,115,50 };
    byte_vec_t pk { 4,40,162,76,115,140,250,124,98,190,4,91,162,18,38,131,140,175,157,183,12,46,187,135,183,3,121,246,216,58,107,73,151,108,188,134,170,157,109,122,238,235,10,170,215,66,19,175,13,252,55,40,166,235,177,205,20,212,134,171,153,41,200,22,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 1 ") {
    byte_vec_t msg { 168,143,25,18 };
    byte_vec_t sig { 110,135,22,13,45,134,171,101,34,191,172,222,203,68,135,138,35,206,175,194,220,245,36,143,4,206,197,195,226,225,32,123,31,181,159,86,162,77,82,207,209,77,97,14,121,140,213,143,100,205,9,156,35,99,80,47,203,230,143,122,217,53,233,189 };
    byte_vec_t pk { 4,149,101,159,196,77,60,9,43,19,173,48,236,228,164,167,167,252,83,108,152,118,169,250,146,218,132,18,190,185,34,249,108,215,62,245,155,14,213,101,139,147,176,32,63,172,110,195,13,148,131,77,88,69,117,195,93,109,198,240,111,118,59,59,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 1 ") {
    byte_vec_t msg { 201,148,223,149 };
    byte_vec_t sig { 240,81,34,55,169,225,228,53,253,181,47,222,149,77,214,112,140,53,160,203,25,200,244,64,106,239,116,194,142,231,79,39,86,222,224,252,177,75,98,171,178,89,165,221,106,106,197,36,229,81,30,54,37,138,242,150,8,240,86,70,123,17,255,86 };
    byte_vec_t pk { 2,148,87,47,183,6,108,142,93,112,144,67,29,48,191,42,43,231,183,109,30,21,246,0,124,144,230,115,46,98,212,162,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 1 ") {
    byte_vec_t msg { 47,147,245,1 };
    byte_vec_t sig { 98,240,187,253,143,1,206,126,140,60,118,166,67,221,141,251,29,227,19,130,23,92,8,103,77,113,238,124,155,128,153,89,18,183,215,137,117,18,99,5,22,16,8,90,3,39,156,40,107,178,248,47,209,161,163,79,62,79,152,231,3,117,253,214 };
    byte_vec_t pk { 2,225,32,101,121,47,72,52,233,108,18,113,36,12,216,166,232,35,215,208,144,228,35,221,32,222,220,1,72,137,225,123,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 2 ") {
    byte_vec_t msg { 114,217,53,221 };
    byte_vec_t sig { 234,121,95,113,241,244,230,57,107,69,169,222,157,110,202,79,96,56,64,183,237,41,172,202,10,114,82,53,157,186,9,253,80,122,216,104,109,188,238,89,93,1,21,185,156,245,113,43,50,143,147,18,230,22,191,247,13,189,78,225,235,248,112,145 };
    byte_vec_t pk { 4,122,216,215,8,254,13,97,241,190,154,83,195,250,86,134,189,160,228,227,54,203,11,229,192,210,108,98,242,104,213,188,24,164,226,30,238,231,57,151,6,60,107,78,115,150,191,124,249,150,62,186,86,238,254,82,203,111,192,53,79,49,229,122,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 2 ") {
    byte_vec_t msg { 226,244,241,79 };
    byte_vec_t sig { 65,83,187,168,51,68,164,148,120,16,114,232,127,171,190,149,72,174,255,254,116,57,121,217,85,228,209,56,226,118,77,146,116,192,37,193,59,230,230,73,48,98,118,138,68,157,6,29,107,27,120,25,80,28,32,125,225,91,91,43,242,44,184,150 };
    byte_vec_t pk { 4,150,204,46,145,150,97,204,231,80,254,225,153,85,136,210,60,189,108,199,40,184,9,61,171,11,221,118,181,193,86,199,202,60,103,136,144,7,81,209,7,130,104,244,201,206,168,247,141,2,230,92,221,243,239,65,145,246,211,8,36,147,98,165,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 2 ") {
    byte_vec_t msg { 45,109,120,43 };
    byte_vec_t sig { 5,11,206,161,59,146,78,143,243,196,11,162,8,39,100,58,144,53,250,116,139,104,225,144,225,200,199,27,204,37,120,207,211,123,239,163,254,109,110,93,132,16,105,154,124,152,223,102,250,161,7,37,75,60,68,95,68,175,185,178,59,56,219,191 };
    byte_vec_t pk { 3,153,249,82,3,137,61,143,186,7,59,246,71,10,115,28,180,111,119,39,230,63,173,163,19,27,170,1,152,145,85,81,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 2 ") {
    byte_vec_t msg { 241,104,149,216 };
    byte_vec_t sig { 61,239,75,194,188,55,122,170,47,32,121,27,173,127,67,77,77,21,216,203,11,78,170,197,222,214,126,28,202,227,100,125,173,131,254,179,12,40,80,206,29,67,35,219,107,175,195,132,26,24,2,62,7,127,81,34,105,137,148,123,166,126,232,138 };
    byte_vec_t pk { 3,251,248,160,204,210,82,230,201,134,222,80,113,211,150,125,255,252,26,88,115,77,146,150,100,159,115,204,238,10,57,99,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 3 ") {
    byte_vec_t msg { 132,6,79,147 };
    byte_vec_t sig { 174,43,238,80,157,242,63,154,222,183,156,172,236,210,250,127,48,55,183,102,246,193,91,42,216,183,120,227,31,52,167,13,29,215,225,52,249,97,199,249,236,144,220,205,35,210,151,228,60,87,54,183,73,192,255,61,130,230,52,105,225,199,9,243 };
    byte_vec_t pk { 4,149,25,96,82,22,27,151,6,231,252,33,64,196,127,224,105,26,69,246,190,13,90,186,188,55,11,28,18,92,114,165,236,216,148,60,123,198,66,37,40,29,21,249,12,104,185,195,205,152,202,147,13,154,135,244,138,240,230,123,139,64,141,92,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 3 ") {
    byte_vec_t msg { 190,201,144,97 };
    byte_vec_t sig { 112,158,88,72,209,189,40,115,182,248,31,223,218,62,237,172,183,127,200,218,255,94,241,86,230,59,203,64,157,221,192,253,134,22,139,115,237,74,118,215,199,66,45,86,223,237,23,214,234,213,171,79,89,143,181,102,88,194,19,242,84,82,120,43 };
    byte_vec_t pk { 4,205,90,62,153,77,237,61,133,148,224,94,239,247,35,165,206,170,61,204,134,121,241,193,174,154,13,53,124,213,63,71,166,97,254,247,55,64,1,199,102,32,208,177,209,14,87,183,164,113,117,239,134,178,125,41,179,71,117,71,17,163,15,194,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 3 ") {
    byte_vec_t msg { 214,155,127,13 };
    byte_vec_t sig { 162,252,120,243,137,83,228,110,184,86,207,105,227,80,215,12,59,132,250,245,53,81,124,160,167,253,216,75,83,246,124,165,47,139,179,95,182,196,219,156,250,19,29,169,183,226,97,84,245,213,63,9,148,66,106,30,93,139,44,239,73,135,83,196 };
    byte_vec_t pk { 3,58,111,71,107,36,15,247,158,139,101,67,136,211,60,147,56,237,36,63,37,77,150,169,118,247,20,128,68,3,219,140,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 3 ") {
    byte_vec_t msg { 228,184,124,79 };
    byte_vec_t sig { 23,35,93,102,87,130,128,77,247,94,14,45,45,81,179,31,173,64,60,238,203,238,51,12,173,24,224,22,104,162,221,120,141,219,133,204,120,98,248,124,100,247,134,115,9,0,90,168,36,148,151,15,188,27,15,83,135,98,132,84,151,158,53,140 };
    byte_vec_t pk { 3,100,137,164,166,186,14,236,16,206,191,219,55,140,20,95,79,124,164,136,16,201,33,250,240,75,226,160,173,135,179,54,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 4 ") {
    byte_vec_t msg { 243,42,186,191 };
    byte_vec_t sig { 168,185,90,221,87,152,22,179,162,65,17,238,35,99,171,128,222,5,167,193,6,151,66,136,163,102,119,115,111,234,171,106,148,49,46,231,219,86,8,162,106,98,69,196,128,110,218,225,95,161,76,57,63,77,92,163,4,150,111,42,120,209,97,236 };
    byte_vec_t pk { 4,123,150,17,147,152,152,46,179,196,255,20,237,173,237,106,149,27,206,190,166,203,199,155,238,143,167,204,151,58,179,143,34,37,9,87,148,36,220,180,124,235,17,37,36,131,44,178,106,209,63,180,159,249,84,36,109,162,152,55,109,91,199,200,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 4 ") {
    byte_vec_t msg { 179,191,95,127 };
    byte_vec_t sig { 32,20,97,210,201,248,11,103,139,159,64,36,34,57,10,39,159,158,93,62,247,170,230,119,241,32,210,207,100,119,155,195,101,82,53,110,24,78,40,36,118,236,129,67,244,36,183,101,10,80,243,211,155,95,143,155,60,246,243,37,161,41,211,133 };
    byte_vec_t pk { 4,2,250,184,211,252,10,196,83,22,179,113,177,141,5,131,27,60,165,248,162,48,132,141,211,88,249,122,158,129,239,78,20,80,190,246,186,95,180,176,220,197,44,16,255,148,25,42,120,18,69,50,225,203,237,71,79,13,188,95,115,188,212,102,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 4 ") {
    byte_vec_t msg { 4,106,17,128 };
    byte_vec_t sig { 241,232,250,30,134,41,11,29,250,88,108,19,218,6,85,90,249,214,125,152,72,245,153,85,92,246,108,172,86,35,204,91,187,46,92,243,203,203,67,76,171,50,100,170,181,205,4,39,69,28,73,39,81,154,73,145,28,82,17,214,183,191,251,208 };
    byte_vec_t pk { 3,204,64,72,148,178,244,222,250,0,151,167,75,142,197,247,43,137,96,243,149,29,115,51,80,42,205,115,88,180,152,100,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 4 ") {
    byte_vec_t msg { 1,183,53,102 };
    byte_vec_t sig { 54,177,151,177,233,37,245,78,125,134,137,136,109,111,161,5,135,101,164,211,184,181,191,54,139,36,2,223,109,99,11,115,86,126,66,214,29,231,179,41,88,31,165,25,217,74,242,34,59,160,96,237,113,49,252,206,241,245,181,184,3,187,250,200 };
    byte_vec_t pk { 2,199,76,231,45,75,227,237,176,77,206,237,134,86,126,16,24,8,232,39,241,57,42,193,245,34,195,12,192,246,112,247,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 5 ") {
    byte_vec_t msg { 228,26,101,34 };
    byte_vec_t sig { 7,86,113,0,139,192,174,154,241,169,148,27,173,95,126,67,32,160,186,217,67,20,103,31,168,129,250,151,250,40,195,201,245,249,159,154,214,221,24,131,137,33,51,230,130,193,45,191,243,237,46,44,135,195,40,193,110,126,121,55,167,0,188,55 };
    byte_vec_t pk { 4,169,200,22,187,157,65,144,178,64,48,143,238,202,127,174,55,216,119,28,29,26,107,233,185,31,174,212,118,33,5,223,19,175,10,233,157,30,249,161,90,217,32,91,182,140,217,249,168,3,233,112,239,38,153,85,84,247,234,99,38,12,111,55,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 5 ") {
    byte_vec_t msg { 182,8,149,239 };
    byte_vec_t sig { 149,6,86,39,26,85,57,233,244,120,128,90,139,215,212,238,35,65,194,21,208,169,79,164,154,48,90,229,72,189,19,107,128,81,108,250,129,33,31,152,36,176,142,178,223,234,182,145,178,1,165,146,175,100,253,60,85,164,152,161,202,9,251,151 };
    byte_vec_t pk { 4,102,70,225,28,2,78,12,218,110,21,250,139,127,221,45,185,53,56,144,156,116,113,127,41,81,186,38,109,17,180,210,166,55,46,12,57,92,216,41,235,74,217,169,203,14,8,227,247,2,181,49,254,78,202,43,7,235,121,81,21,144,111,11,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 5 ") {
    byte_vec_t msg { 141,80,79,149 };
    byte_vec_t sig { 34,241,251,254,106,130,68,234,185,133,2,131,35,52,102,255,201,57,76,178,8,239,195,211,33,159,44,204,39,236,150,229,210,246,203,196,89,81,25,149,165,183,223,68,1,168,182,161,139,76,17,222,204,171,10,40,232,88,104,117,66,136,84,171 };
    byte_vec_t pk { 2,108,26,69,64,158,211,155,11,23,103,248,250,247,189,210,166,75,234,174,139,42,157,37,216,174,180,181,23,254,219,86,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 5 ") {
    byte_vec_t msg { 33,185,206,5 };
    byte_vec_t sig { 122,27,195,164,236,206,97,64,96,140,132,219,39,43,15,101,36,225,82,5,103,200,159,101,32,83,130,82,191,25,49,111,110,121,148,2,59,198,58,99,94,136,129,131,232,227,118,134,60,0,7,210,202,210,85,51,25,235,238,74,11,156,109,141 };
    byte_vec_t pk { 2,7,61,86,40,45,212,104,86,41,205,70,191,113,105,223,194,45,19,162,78,148,108,4,166,175,92,29,176,220,225,24,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 6 ") {
    byte_vec_t msg { 102,169,213,252 };
    byte_vec_t sig { 194,154,64,152,28,91,8,221,116,156,138,96,224,116,56,36,36,3,249,17,74,8,177,11,46,172,239,6,232,127,253,14,182,22,48,84,98,197,157,7,147,211,150,202,92,234,77,115,31,57,158,101,232,124,255,85,196,244,130,167,42,114,13,128 };
    byte_vec_t pk { 4,238,85,150,167,147,113,66,142,45,49,160,86,11,28,161,86,42,34,141,107,145,223,22,161,41,212,135,202,22,76,242,131,186,203,65,90,196,250,203,81,82,130,134,96,65,232,125,147,208,214,199,239,85,202,160,47,183,135,150,87,47,254,41,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 6 ") {
    byte_vec_t msg { 129,226,193,37 };
    byte_vec_t sig { 237,36,152,205,62,239,15,72,68,94,104,121,196,214,26,178,230,14,21,139,49,186,53,255,194,218,157,219,107,13,218,44,245,27,82,80,155,98,41,114,101,200,118,246,28,192,28,60,226,134,97,126,169,187,214,41,196,252,210,20,67,44,186,195 };
    byte_vec_t pk { 4,216,231,89,199,125,139,139,77,185,227,179,157,89,71,200,125,17,83,158,11,241,203,5,45,139,199,20,102,140,229,203,226,186,105,179,153,112,94,59,150,239,248,46,124,33,28,65,10,147,95,82,131,89,127,107,143,138,132,230,1,197,152,212,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 6 ") {
    byte_vec_t msg { 178,249,251,37 };
    byte_vec_t sig { 227,17,179,19,210,45,12,135,107,46,77,186,99,104,96,4,180,160,65,65,47,188,206,172,254,43,198,106,127,50,14,59,242,240,13,241,215,149,183,76,58,108,229,44,26,47,115,38,41,64,185,232,18,83,76,93,111,73,126,140,48,82,226,101 };
    byte_vec_t pk { 2,143,22,158,115,113,23,220,90,233,96,223,228,3,110,238,145,24,81,245,129,183,74,145,78,249,155,197,3,152,35,145,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 6 ") {
    byte_vec_t msg { 194,219,199,142 };
    byte_vec_t sig { 173,110,49,131,154,218,193,69,250,22,106,216,93,13,120,171,186,87,160,92,110,238,234,212,143,206,105,166,203,158,101,235,213,225,159,82,224,36,128,89,236,111,205,16,156,45,116,183,163,57,52,144,159,66,111,29,45,239,56,135,186,66,137,180 };
    byte_vec_t pk { 3,187,255,251,186,77,50,212,159,91,16,143,160,25,74,239,250,14,196,215,171,144,104,255,100,161,61,66,92,8,214,21,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 7 ") {
    byte_vec_t msg { 114,143,194,85 };
    byte_vec_t sig { 150,112,130,100,93,0,248,89,117,83,133,220,153,110,94,104,156,161,165,112,180,199,245,50,120,182,174,57,100,98,28,61,187,187,70,144,195,221,154,119,0,200,115,101,139,129,185,42,45,115,179,182,178,255,223,145,229,245,159,121,16,31,156,38 };
    byte_vec_t pk { 4,185,183,8,60,148,132,210,33,201,65,174,98,202,246,73,101,232,19,137,210,192,6,194,248,168,249,139,243,126,65,107,205,217,44,236,191,25,150,45,119,135,166,109,202,116,7,74,70,0,55,13,106,73,101,148,138,139,48,211,144,190,211,19,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 7 ") {
    byte_vec_t msg { 139,242,100,17 };
    byte_vec_t sig { 157,112,252,108,114,187,140,167,25,188,221,21,13,117,210,75,43,59,128,81,37,1,231,239,136,202,57,45,26,208,196,240,81,107,28,163,112,59,44,148,147,195,46,136,181,129,30,133,97,57,20,23,53,121,162,127,100,229,241,116,243,3,198,215 };
    byte_vec_t pk { 4,86,22,197,113,142,72,74,16,46,242,230,29,183,213,91,128,67,51,56,217,94,90,197,224,230,151,231,205,53,111,250,118,66,56,198,234,76,140,146,240,24,34,144,143,239,228,171,20,22,70,180,130,219,148,74,253,203,184,172,11,245,40,119,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 7 ") {
    byte_vec_t msg { 163,25,35,215 };
    byte_vec_t sig { 144,84,132,217,179,212,65,150,163,52,44,193,237,129,178,219,193,65,38,28,105,171,100,33,102,41,58,230,193,135,98,245,59,207,66,101,154,23,209,212,95,208,35,235,100,108,159,67,45,139,31,238,183,147,111,8,120,68,133,201,234,31,122,135 };
    byte_vec_t pk { 3,231,208,226,166,165,205,176,89,107,140,90,5,148,131,212,159,233,18,72,51,148,116,207,183,243,38,55,42,102,59,23,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 7 ") {
    byte_vec_t msg { 139,94,30,199 };
    byte_vec_t sig { 106,115,74,202,52,17,186,187,136,35,141,123,69,174,3,188,148,217,126,205,36,192,246,201,154,89,85,27,77,75,2,221,202,248,89,231,3,7,139,45,123,212,149,85,214,151,249,4,64,227,76,135,86,33,74,118,137,100,68,152,104,135,49,80 };
    byte_vec_t pk { 2,53,218,28,161,64,210,167,124,255,107,158,81,81,71,182,183,191,23,86,135,133,207,90,93,182,177,205,196,4,127,150,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 8 ") {
    byte_vec_t msg { 85,86,192,245 };
    byte_vec_t sig { 26,140,198,66,52,50,20,31,179,23,111,8,56,123,110,168,90,88,245,198,85,124,157,100,179,150,18,242,138,205,190,28,218,141,61,71,210,3,105,215,141,205,190,177,126,134,8,55,72,125,106,131,182,245,94,122,195,117,113,103,229,121,19,204 };
    byte_vec_t pk { 4,91,169,122,87,220,41,97,58,252,59,92,77,82,127,240,60,35,181,80,169,208,242,25,158,182,175,91,168,76,135,27,218,127,30,39,225,77,221,242,158,44,25,77,250,45,213,236,98,207,110,253,164,61,158,12,43,35,114,193,13,163,177,72,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 8 ") {
    byte_vec_t msg { 50,9,170,162 };
    byte_vec_t sig { 103,180,73,28,200,145,78,174,19,191,117,226,138,162,79,177,136,154,173,123,172,244,220,202,182,55,242,174,24,203,77,138,88,141,191,9,251,53,107,120,207,106,7,47,137,191,236,221,80,50,232,172,237,248,122,7,247,230,113,138,174,106,36,232 };
    byte_vec_t pk { 4,151,82,144,123,84,80,159,69,13,228,104,118,175,139,152,123,113,204,129,236,126,138,143,155,153,6,227,96,116,181,161,209,241,157,136,138,108,226,91,2,89,83,243,186,24,81,75,131,173,169,27,251,1,139,109,206,199,150,231,96,216,205,98,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 8 ") {
    byte_vec_t msg { 92,69,236,154 };
    byte_vec_t sig { 29,125,72,188,7,204,213,203,125,225,18,200,74,76,193,218,33,4,126,99,11,231,200,200,145,67,11,52,227,219,4,26,126,201,60,84,163,75,176,88,102,85,142,0,192,199,100,255,157,158,251,165,38,81,174,125,187,105,138,18,128,203,233,188 };
    byte_vec_t pk { 2,164,68,194,201,106,122,81,2,165,214,64,38,181,181,248,35,21,125,123,231,175,93,202,94,156,98,13,194,18,125,222,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 8 ") {
    byte_vec_t msg { 6,35,26,13 };
    byte_vec_t sig { 228,110,126,205,162,165,185,58,95,27,249,42,202,237,48,58,241,137,159,196,152,9,223,36,129,251,103,236,116,52,99,227,106,203,4,3,230,185,184,251,100,32,103,44,53,134,174,235,22,114,27,101,233,57,181,15,222,133,241,198,154,237,96,94 };
    byte_vec_t pk { 3,4,63,228,181,35,105,31,223,105,67,46,116,60,211,23,228,228,182,229,241,80,208,48,144,90,252,113,35,197,34,236,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 9 ") {
    byte_vec_t msg { 133,117,91,56 };
    byte_vec_t sig { 44,66,205,42,60,236,253,27,6,208,120,227,39,150,234,93,185,178,219,157,17,245,167,198,193,7,203,110,43,139,11,46,14,211,251,139,4,202,205,63,19,225,150,166,144,62,23,21,31,205,125,227,72,50,190,92,29,210,147,98,111,94,94,71 };
    byte_vec_t pk { 4,231,226,18,111,220,58,61,212,117,87,132,166,98,228,28,33,40,75,190,130,72,161,198,41,242,177,188,0,137,134,76,189,91,58,22,108,189,245,152,54,56,83,170,38,231,156,44,42,186,202,169,82,36,175,46,33,199,172,138,223,174,153,143,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 9 ") {
    byte_vec_t msg { 220,248,40,41 };
    byte_vec_t sig { 187,33,20,114,83,248,145,171,81,166,207,244,176,136,149,162,153,20,166,227,153,37,144,206,174,122,0,134,75,130,3,180,22,228,116,25,195,119,252,247,244,216,215,82,29,145,93,99,49,179,111,208,196,25,172,255,73,64,35,79,115,114,172,63 };
    byte_vec_t pk { 4,31,46,90,26,70,228,70,204,6,59,53,37,127,230,27,138,230,109,167,133,160,35,163,17,248,8,97,47,118,207,48,253,205,61,209,144,103,116,233,123,64,70,197,102,75,211,68,195,181,163,181,218,125,197,236,223,174,180,211,21,141,164,8,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 9 ") {
    byte_vec_t msg { 180,244,114,238 };
    byte_vec_t sig { 220,4,202,94,141,26,212,136,190,173,142,126,75,229,241,225,220,114,176,229,107,201,142,147,119,127,132,255,235,99,40,30,6,74,18,51,168,128,104,59,36,3,207,98,106,53,152,91,253,239,172,244,246,113,162,101,116,183,169,15,86,52,246,11 };
    byte_vec_t pk { 3,51,1,54,122,102,12,185,173,224,179,38,206,99,33,4,148,170,212,7,86,17,43,237,10,15,203,69,51,226,66,19,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 9 ") {
    byte_vec_t msg { 47,19,23,225 };
    byte_vec_t sig { 14,2,55,124,143,218,250,162,122,155,2,18,88,78,81,138,171,234,121,85,18,41,104,209,175,199,158,190,193,122,23,54,234,80,108,122,183,205,138,71,107,212,161,81,216,221,172,245,85,238,5,28,3,63,68,236,46,99,23,85,175,97,44,57 };
    byte_vec_t pk { 3,91,13,42,228,91,144,48,248,68,4,170,172,139,229,220,13,186,196,144,175,107,250,242,55,109,157,215,34,112,25,249,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 10 ") {
    byte_vec_t msg { 132,65,60,32 };
    byte_vec_t sig { 183,105,128,98,107,68,15,181,252,59,162,133,172,149,111,30,177,35,106,143,120,221,133,62,162,141,149,169,185,81,215,20,61,209,118,173,213,227,95,120,207,106,103,139,208,204,171,67,5,79,149,97,41,0,98,150,218,16,124,76,2,101,58,189 };
    byte_vec_t pk { 4,33,35,20,112,116,235,247,227,186,129,91,114,56,252,251,116,175,5,94,242,47,206,65,182,118,96,161,252,124,7,137,223,17,139,47,182,117,18,188,104,210,50,137,208,8,198,100,43,182,232,99,135,102,110,184,167,218,211,4,231,62,167,241,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 10 ") {
    byte_vec_t msg { 77,38,138,155 };
    byte_vec_t sig { 193,152,63,83,255,80,55,253,164,28,127,62,35,156,1,253,156,91,128,33,98,193,142,173,151,59,68,223,223,177,75,66,210,36,113,84,37,31,199,21,203,211,101,38,118,246,186,11,23,237,36,233,54,22,42,86,6,97,16,141,171,154,221,43 };
    byte_vec_t pk { 4,207,202,183,142,151,72,216,83,203,108,115,217,39,112,146,26,246,188,67,242,5,229,110,1,69,15,83,152,184,135,91,80,60,252,126,194,18,210,213,73,58,48,127,33,143,133,211,204,172,3,86,74,95,12,166,226,113,227,57,227,1,185,174,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 10 ") {
    byte_vec_t msg { 43,106,10,213 };
    byte_vec_t sig { 16,150,127,92,168,91,251,204,140,170,48,31,186,200,129,127,126,207,62,146,222,193,17,224,222,91,169,138,240,172,138,156,115,149,252,174,26,211,55,20,128,74,17,17,106,141,115,98,242,214,177,206,122,155,122,26,140,137,162,202,151,216,44,178 };
    byte_vec_t pk { 3,86,228,159,56,22,62,118,123,141,72,107,98,196,150,222,182,83,253,148,87,208,188,206,5,166,233,105,38,253,243,165,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 10 ") {
    byte_vec_t msg { 75,167,240,39 };
    byte_vec_t sig { 219,214,37,208,154,112,198,47,196,155,249,159,27,155,90,79,109,22,106,104,112,253,50,101,229,137,32,241,228,176,230,81,77,97,135,158,62,148,232,140,166,42,159,203,36,103,174,77,33,180,30,223,144,67,79,157,205,208,205,72,215,246,20,209 };
    byte_vec_t pk { 2,8,0,144,1,29,225,90,49,149,221,161,85,14,159,144,14,85,183,32,38,139,211,195,102,211,94,231,225,127,202,46,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 11 ") {
    byte_vec_t msg { 139,77,149,39 };
    byte_vec_t sig { 100,149,177,132,121,55,192,233,30,123,158,54,165,184,182,164,102,1,113,20,212,42,115,109,224,58,28,98,46,179,232,124,75,190,58,156,177,107,93,218,226,34,225,247,5,47,227,87,224,3,163,220,105,209,117,127,50,223,12,228,42,48,225,62 };
    byte_vec_t pk { 4,75,88,227,164,124,111,6,234,113,11,106,124,7,166,23,3,13,125,90,224,166,113,1,148,27,234,59,175,145,154,202,21,81,199,241,176,98,165,83,61,6,79,15,252,16,63,11,40,129,221,233,160,136,253,247,240,36,152,214,161,88,5,40,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 11 ") {
    byte_vec_t msg { 117,98,177,81 };
    byte_vec_t sig { 70,236,30,141,120,75,45,147,81,111,47,166,251,0,24,56,183,66,14,168,50,197,243,242,75,148,160,211,194,176,189,223,23,18,160,161,97,98,87,130,79,72,17,41,230,106,249,159,144,69,195,189,5,166,154,203,105,99,35,127,70,86,22,196 };
    byte_vec_t pk { 4,35,238,159,159,33,153,215,65,213,34,114,251,196,138,79,34,174,70,177,231,70,60,175,229,0,168,71,61,107,124,228,180,117,104,207,106,16,63,86,15,114,79,52,97,123,36,94,75,90,246,72,241,78,47,101,143,187,94,82,190,26,107,39,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 11 ") {
    byte_vec_t msg { 5,168,116,8 };
    byte_vec_t sig { 106,49,111,29,2,174,255,167,69,90,227,248,156,123,162,237,84,199,215,189,117,164,49,55,98,72,78,159,103,232,195,200,54,60,200,50,87,94,112,63,231,87,132,87,182,84,221,94,132,183,215,130,116,238,46,123,20,148,94,143,113,14,5,36 };
    byte_vec_t pk { 3,108,82,159,49,106,204,164,122,68,234,9,15,116,250,90,122,124,216,113,20,71,185,251,1,201,178,121,60,50,52,69,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 11 ") {
    byte_vec_t msg { 19,242,246,232 };
    byte_vec_t sig { 183,246,184,159,1,90,221,17,3,102,84,85,193,142,187,101,126,71,142,232,191,65,72,155,40,243,142,171,40,151,39,104,224,195,149,213,242,210,185,150,210,75,77,44,253,80,247,150,205,45,212,85,183,122,162,221,76,90,3,139,236,141,147,180 };
    byte_vec_t pk { 2,121,9,101,127,89,6,228,101,0,191,101,159,80,252,235,113,112,51,110,152,57,24,90,110,233,252,0,25,1,128,9,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 12 ") {
    byte_vec_t msg { 54,228,245,152 };
    byte_vec_t sig { 194,106,238,129,193,78,95,78,97,75,134,208,210,170,209,125,238,224,186,76,87,56,138,51,3,179,97,83,128,57,159,16,15,129,110,236,76,167,197,249,33,15,7,90,214,94,65,102,201,89,224,230,14,90,64,81,209,132,93,89,173,142,214,12 };
    byte_vec_t pk { 4,220,244,100,127,200,45,55,152,205,246,83,7,144,244,182,166,223,13,83,88,47,138,191,252,130,15,184,253,97,44,215,125,161,57,144,175,77,137,124,145,178,111,133,18,185,59,152,110,92,183,213,119,137,82,255,54,4,148,231,112,117,212,119,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 12 ") {
    byte_vec_t msg { 159,92,202,10 };
    byte_vec_t sig { 101,100,61,77,126,78,238,85,246,22,207,108,97,111,11,160,239,183,69,220,152,166,54,197,2,205,172,180,120,53,24,200,20,70,56,88,39,146,132,183,183,218,25,92,197,102,32,169,0,255,168,201,95,119,237,21,169,134,43,147,171,58,112,138 };
    byte_vec_t pk { 4,91,230,156,21,246,98,171,129,193,206,121,210,155,232,126,134,153,158,127,157,63,9,9,194,229,55,142,25,5,76,120,87,106,29,219,240,79,71,153,195,52,107,241,153,170,169,95,195,115,114,62,180,115,137,87,163,171,11,129,33,13,219,114,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 12 ") {
    byte_vec_t msg { 223,215,180,158 };
    byte_vec_t sig { 202,255,171,86,137,91,150,250,209,85,2,51,52,207,63,50,70,19,30,210,144,99,26,207,53,233,94,178,67,250,209,188,2,81,81,205,61,106,12,83,29,220,173,152,170,204,246,27,30,101,208,185,230,253,34,164,201,5,111,93,64,222,97,117 };
    byte_vec_t pk { 3,2,249,140,89,214,230,147,204,65,26,108,55,226,135,251,46,162,114,93,216,157,93,199,239,158,91,147,95,215,92,216,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 12 ") {
    byte_vec_t msg { 106,243,90,111 };
    byte_vec_t sig { 54,182,114,213,92,218,241,66,105,96,57,237,217,36,170,238,171,240,23,103,178,60,142,114,129,243,203,91,27,95,79,28,179,243,3,100,115,179,194,134,99,10,207,181,83,87,99,176,193,76,236,204,66,212,148,58,158,153,239,105,34,65,178,19 };
    byte_vec_t pk { 3,58,180,49,241,178,110,219,6,229,171,156,191,71,172,22,224,121,202,210,121,39,151,8,16,143,223,57,9,42,82,251,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 13 ") {
    byte_vec_t msg { 71,242,249,131 };
    byte_vec_t sig { 247,7,254,242,190,93,97,192,3,39,129,99,53,206,200,63,17,145,111,10,113,209,167,21,101,169,253,129,218,153,182,28,170,142,180,249,242,141,65,155,46,195,128,59,140,212,112,205,230,240,79,169,183,239,235,153,168,192,173,239,133,182,165,127 };
    byte_vec_t pk { 4,33,240,34,126,48,235,255,105,4,206,165,117,47,141,127,71,123,164,238,43,4,165,49,119,70,111,39,183,114,125,231,120,47,14,228,192,225,17,150,249,186,62,237,207,130,22,81,62,220,28,216,246,16,254,253,42,68,224,175,128,155,83,162,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 13 ") {
    byte_vec_t msg { 160,210,202,20 };
    byte_vec_t sig { 32,199,60,216,184,148,214,74,230,111,82,232,74,15,201,202,168,88,48,12,152,203,200,189,242,50,176,146,228,208,44,49,105,32,139,180,211,165,92,210,55,133,170,4,61,156,174,208,254,203,223,222,128,67,238,235,24,23,222,109,210,143,142,109 };
    byte_vec_t pk { 4,17,144,189,50,174,31,112,69,110,66,230,154,164,189,221,6,67,19,61,140,223,89,53,94,151,71,229,224,140,249,194,254,109,99,62,197,124,183,41,75,56,111,52,98,90,68,32,79,35,2,175,3,176,52,142,37,128,250,11,36,122,94,90,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 13 ") {
    byte_vec_t msg { 61,190,33,95 };
    byte_vec_t sig { 18,96,153,204,71,21,45,223,130,59,186,211,119,216,63,210,31,234,110,99,244,224,176,71,98,191,247,124,180,236,81,40,55,238,126,218,141,208,205,190,242,189,32,122,128,79,12,35,216,239,118,141,89,161,211,105,153,127,234,143,17,143,14,60 };
    byte_vec_t pk { 2,239,154,100,178,126,157,35,161,17,129,46,26,69,42,84,66,62,194,124,30,93,79,17,139,248,177,173,171,47,221,204,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 13 ") {
    byte_vec_t msg { 32,15,119,193 };
    byte_vec_t sig { 12,3,51,6,110,114,181,37,254,191,72,237,54,117,218,205,210,62,246,192,230,42,98,116,218,229,203,202,188,171,27,150,195,113,184,102,254,188,78,43,202,113,57,165,88,41,233,238,64,170,26,204,162,114,174,23,190,75,254,126,70,206,148,207 };
    byte_vec_t pk { 2,127,15,171,228,30,192,106,115,176,181,9,30,34,69,83,144,185,58,14,57,129,139,250,199,218,150,51,79,236,214,204,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 14 ") {
    byte_vec_t msg { 146,169,36,57 };
    byte_vec_t sig { 37,139,72,107,197,255,155,76,185,141,254,122,100,111,181,227,96,194,131,214,64,193,92,69,227,112,64,155,81,50,205,82,33,122,85,103,132,199,145,159,84,14,13,113,249,139,86,197,64,243,211,77,71,123,213,205,124,44,112,81,211,6,186,5 };
    byte_vec_t pk { 4,110,248,37,232,175,179,36,124,53,242,247,104,48,56,168,49,118,226,239,155,68,185,201,199,83,88,66,189,63,171,186,152,36,153,17,122,61,9,178,46,176,214,23,38,89,177,251,114,214,22,129,137,8,111,50,4,36,239,36,210,189,240,71,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 14 ") {
    byte_vec_t msg { 1,195,94,91 };
    byte_vec_t sig { 87,136,115,26,28,231,49,177,220,118,170,240,69,170,169,126,162,185,227,112,197,182,216,111,126,41,190,184,152,143,101,106,128,178,112,159,92,233,189,250,147,108,44,91,47,242,66,241,45,197,176,44,96,140,236,154,13,5,105,77,195,194,109,119 };
    byte_vec_t pk { 4,166,117,251,18,51,145,134,101,59,179,184,194,52,75,174,255,43,154,72,162,8,55,26,132,20,74,126,210,4,232,140,158,79,250,93,78,7,81,173,195,141,120,154,41,155,206,92,193,136,208,70,46,178,185,176,1,176,32,55,180,45,185,41,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 14 ") {
    byte_vec_t msg { 110,35,84,57 };
    byte_vec_t sig { 93,241,82,123,226,85,173,95,235,145,233,225,43,82,53,71,136,220,251,43,229,207,146,86,156,222,79,10,165,18,58,231,118,10,72,248,153,137,155,109,117,219,207,146,169,59,190,249,254,36,87,232,183,170,156,103,83,138,239,148,211,183,99,149 };
    byte_vec_t pk { 2,41,206,10,190,231,102,194,189,193,90,14,195,37,226,132,29,182,38,144,43,160,117,95,145,58,105,198,40,31,109,72,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 14 ") {
    byte_vec_t msg { 136,236,8,86 };
    byte_vec_t sig { 22,182,38,214,115,201,94,184,184,105,124,91,142,246,77,122,17,69,166,52,179,216,93,20,20,95,50,227,187,119,199,49,15,173,12,161,12,185,91,63,234,21,211,69,209,39,4,47,135,178,123,89,64,247,188,118,216,247,97,117,222,253,150,135 };
    byte_vec_t pk { 3,0,16,253,94,70,75,16,64,180,135,206,207,92,96,69,57,26,146,131,236,203,100,229,193,236,46,59,249,137,134,162,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 15 ") {
    byte_vec_t msg { 172,117,19,33 };
    byte_vec_t sig { 176,58,255,206,75,13,113,140,120,182,188,93,52,19,210,146,247,224,96,78,3,124,11,241,142,222,21,121,65,35,28,228,195,7,25,83,155,121,54,146,101,105,139,61,151,113,53,129,251,31,118,187,9,71,225,219,230,255,203,178,130,210,184,131 };
    byte_vec_t pk { 4,121,31,114,84,58,236,97,131,5,14,130,43,85,91,42,67,48,132,60,99,81,195,68,190,98,126,111,87,202,15,155,31,154,50,207,182,15,5,193,79,225,192,88,210,244,61,174,162,33,131,200,228,193,94,210,247,206,185,89,210,209,204,69,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 15 ") {
    byte_vec_t msg { 57,29,225,136 };
    byte_vec_t sig { 14,76,8,199,77,58,0,52,146,216,46,130,4,197,231,22,205,169,207,162,173,158,144,111,89,189,196,246,85,31,122,172,222,212,40,230,254,159,37,128,173,12,13,103,71,68,210,27,121,66,0,223,83,156,205,225,23,0,170,209,167,0,250,165 };
    byte_vec_t pk { 4,93,54,159,58,103,249,169,71,121,71,177,194,146,12,147,184,77,116,128,215,127,125,228,144,140,187,234,248,60,158,1,223,125,217,114,143,89,169,240,181,36,84,14,55,138,63,117,5,174,254,156,239,172,2,169,101,47,107,246,95,209,54,89,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 15 ") {
    byte_vec_t msg { 156,123,145,146 };
    byte_vec_t sig { 63,17,149,200,6,146,92,184,86,116,232,29,214,148,231,189,199,230,146,25,242,98,179,207,238,44,168,125,225,84,42,174,145,179,43,32,196,165,73,227,241,61,223,223,212,111,33,139,41,181,161,232,162,228,74,133,220,177,147,16,145,155,82,211 };
    byte_vec_t pk { 3,194,156,25,225,50,242,239,80,63,223,81,250,36,248,192,46,172,133,252,230,6,71,152,38,83,86,212,44,223,11,25,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 15 ") {
    byte_vec_t msg { 55,22,21,24 };
    byte_vec_t sig { 211,200,72,171,168,190,60,191,153,79,99,153,93,126,45,16,128,196,116,150,101,4,176,212,129,85,63,34,52,222,76,170,21,56,209,54,221,220,131,26,20,220,165,225,148,179,109,71,237,92,138,62,191,45,253,34,44,251,55,225,188,56,119,39 };
    byte_vec_t pk { 3,96,61,20,169,25,76,187,32,113,141,36,8,195,111,42,189,17,10,21,169,155,111,147,45,219,9,201,183,101,110,11,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 16 ") {
    byte_vec_t msg { 233,76,59,233 };
    byte_vec_t sig { 3,246,27,249,182,46,157,193,207,248,98,209,49,76,139,214,158,134,190,112,23,220,110,76,219,159,169,67,177,107,17,237,210,93,189,236,166,96,161,108,87,220,89,71,7,125,136,227,134,139,56,178,80,111,140,45,196,183,89,68,16,91,65,13 };
    byte_vec_t pk { 4,222,255,68,20,76,130,80,20,35,109,12,125,69,102,169,12,97,78,198,48,149,40,201,205,166,46,74,22,251,202,172,218,30,175,139,55,25,77,158,110,34,144,246,36,27,74,178,158,111,125,245,48,92,152,233,213,179,159,110,122,42,144,15,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 16 ") {
    byte_vec_t msg { 164,240,59,245 };
    byte_vec_t sig { 95,48,229,239,138,253,109,22,36,153,59,173,215,130,12,125,79,15,89,141,151,104,60,116,48,98,23,75,247,13,240,84,210,186,58,40,83,249,33,67,5,195,69,224,9,165,33,169,36,213,119,102,42,214,55,180,48,25,6,218,247,237,19,70 };
    byte_vec_t pk { 4,18,2,196,253,56,63,107,223,199,11,110,133,41,116,145,185,232,141,59,183,15,154,27,54,194,27,199,117,251,157,0,208,199,86,73,194,175,90,7,79,60,99,183,65,209,38,192,189,67,80,114,26,229,49,56,63,154,34,150,170,5,108,179,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 16 ") {
    byte_vec_t msg { 222,99,27,146 };
    byte_vec_t sig { 46,71,34,199,43,208,97,73,249,104,141,234,233,77,16,181,153,11,94,156,77,179,49,148,47,95,113,239,61,171,0,113,57,28,227,201,115,185,226,126,43,43,48,120,159,203,98,82,98,248,157,227,214,216,101,218,104,195,186,235,115,19,10,80 };
    byte_vec_t pk { 2,177,107,44,13,127,200,34,201,131,138,213,126,223,252,250,140,115,168,20,57,51,106,78,145,87,216,250,217,211,53,9,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 16 ") {
    byte_vec_t msg { 209,43,222,165 };
    byte_vec_t sig { 252,95,87,107,63,32,240,162,193,195,151,163,42,126,108,9,150,150,55,152,250,182,34,0,87,211,178,194,157,158,212,42,162,86,140,67,209,37,29,10,182,40,221,187,8,166,178,67,225,249,132,71,207,180,64,12,171,235,189,187,74,158,79,130 };
    byte_vec_t pk { 3,140,103,119,76,105,220,29,205,181,41,135,31,71,88,89,175,103,63,35,147,186,7,21,200,25,21,7,209,17,42,209,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 17 ") {
    byte_vec_t msg { 75,158,171,117 };
    byte_vec_t sig { 184,111,213,174,60,54,171,69,184,135,170,145,223,44,4,234,133,127,173,16,243,137,62,138,163,183,111,101,12,145,191,196,187,6,157,96,206,61,203,130,39,85,223,196,122,88,11,98,127,241,25,158,193,91,160,230,231,14,30,254,145,13,107,134 };
    byte_vec_t pk { 4,63,202,206,71,216,68,47,169,66,50,176,37,247,50,28,121,206,92,178,174,192,155,65,137,112,37,15,102,0,199,214,59,114,62,79,234,113,27,182,106,235,53,144,4,164,128,135,230,195,237,42,56,42,78,186,244,167,211,163,247,252,177,54,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 17 ") {
    byte_vec_t msg { 144,241,51,63 };
    byte_vec_t sig { 109,91,254,173,199,162,186,174,144,118,3,118,176,112,93,213,79,187,73,188,196,214,63,9,95,115,22,130,170,21,48,124,12,13,51,233,156,65,201,123,178,147,97,198,249,2,27,65,225,135,96,4,150,20,123,51,18,230,121,206,178,170,174,6 };
    byte_vec_t pk { 4,172,96,201,76,25,217,64,198,21,218,20,56,88,211,33,146,30,78,102,15,212,56,182,80,236,232,195,157,149,239,91,210,22,163,172,183,88,10,44,230,114,234,104,178,213,248,76,33,212,163,114,161,229,234,36,107,29,187,206,247,105,118,69,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 17 ") {
    byte_vec_t msg { 254,112,69,2 };
    byte_vec_t sig { 89,152,62,105,164,228,67,219,201,43,173,163,185,53,9,75,33,145,54,33,196,93,101,48,195,248,104,39,209,206,124,146,12,174,75,87,26,69,240,120,28,159,144,190,108,226,112,168,195,5,174,23,212,174,99,101,100,3,139,224,91,206,74,189 };
    byte_vec_t pk { 3,64,193,39,82,138,0,108,93,228,91,41,37,77,224,249,189,234,214,246,80,241,45,66,97,169,239,23,41,93,104,80,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 17 ") {
    byte_vec_t msg { 31,5,8,114 };
    byte_vec_t sig { 245,141,28,33,252,63,194,139,243,58,203,117,161,103,150,174,174,62,209,150,66,226,188,71,234,6,242,252,26,164,195,225,43,186,50,109,251,139,195,251,145,177,252,130,39,182,167,69,32,248,246,27,233,60,78,52,16,250,196,27,128,19,99,49 };
    byte_vec_t pk { 2,221,176,68,37,78,169,53,170,255,93,59,247,191,98,89,130,141,142,196,6,124,21,78,152,250,173,168,50,122,152,115,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 18 ") {
    byte_vec_t msg { 156,214,102,105 };
    byte_vec_t sig { 245,7,181,210,74,116,251,30,164,242,167,82,218,42,153,76,170,143,74,168,225,69,146,225,26,210,9,28,69,124,68,105,125,243,159,153,16,120,142,232,207,148,199,49,103,117,251,230,199,8,14,178,39,43,53,54,235,157,222,196,36,8,238,119 };
    byte_vec_t pk { 4,172,38,63,34,85,79,231,109,69,121,158,6,52,223,181,17,141,45,247,178,254,192,23,116,99,182,34,114,93,33,246,208,30,199,149,216,198,121,102,93,16,5,75,242,86,182,199,79,212,182,243,51,113,97,168,51,152,202,129,36,243,170,35,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 18 ") {
    byte_vec_t msg { 229,103,59,234 };
    byte_vec_t sig { 113,175,181,216,193,246,88,227,132,41,224,127,245,156,66,24,20,199,198,81,195,244,19,134,160,114,66,190,109,198,44,49,106,222,124,85,27,122,114,134,33,32,203,211,221,76,191,249,170,239,218,117,162,27,145,28,9,252,71,237,106,212,52,30 };
    byte_vec_t pk { 4,145,155,176,224,39,57,193,217,81,229,69,195,255,16,233,144,21,146,111,235,176,174,56,193,227,121,90,251,150,57,14,93,76,238,92,54,246,29,63,28,31,239,163,20,156,41,129,87,116,93,169,71,157,163,137,184,38,211,72,134,141,55,247,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 18 ") {
    byte_vec_t msg { 171,156,114,127 };
    byte_vec_t sig { 14,129,158,58,54,153,177,156,31,157,55,115,26,242,20,61,149,30,39,70,8,19,207,251,63,183,91,148,10,182,160,132,80,93,0,163,37,64,97,61,228,124,183,8,96,242,12,105,57,206,193,125,129,223,220,235,146,147,146,140,76,189,57,57 };
    byte_vec_t pk { 3,61,69,208,129,67,225,82,158,251,72,68,185,250,90,112,175,105,103,203,145,62,93,69,190,135,4,83,197,114,237,97,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 18 ") {
    byte_vec_t msg { 154,159,33,47 };
    byte_vec_t sig { 182,88,144,67,33,198,209,224,118,102,76,151,199,239,47,212,89,10,114,248,29,109,45,79,120,144,92,54,31,57,215,77,149,210,0,226,242,196,150,54,33,29,125,13,243,8,240,113,216,97,166,16,252,47,120,193,93,70,101,215,140,146,99,118 };
    byte_vec_t pk { 3,30,108,23,177,212,228,62,135,182,83,82,95,252,67,97,179,131,55,59,181,246,135,112,215,189,97,51,30,99,101,212,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 19 ") {
    byte_vec_t msg { 68,156,214,10 };
    byte_vec_t sig { 87,161,187,75,144,100,197,199,173,82,131,108,29,155,224,201,216,73,106,40,56,138,126,151,78,69,56,253,64,69,13,134,145,176,127,38,42,206,11,211,94,78,112,88,254,21,44,178,52,16,4,147,196,1,63,178,31,42,42,216,185,61,172,187 };
    byte_vec_t pk { 4,2,93,10,71,181,174,248,92,167,92,38,171,30,176,148,114,180,189,191,95,112,187,67,179,52,58,87,11,58,78,253,83,35,39,57,126,29,36,91,252,76,56,99,2,120,220,118,18,106,137,106,13,127,248,232,245,194,223,18,116,95,215,171,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 19 ") {
    byte_vec_t msg { 221,174,205,230 };
    byte_vec_t sig { 137,212,69,81,97,253,136,23,229,135,110,130,214,169,15,209,69,250,27,13,104,166,103,32,226,168,154,191,155,175,107,196,68,143,203,51,117,253,193,136,6,27,243,135,170,7,17,85,127,218,158,118,141,63,222,151,155,197,252,135,109,201,230,228 };
    byte_vec_t pk { 4,194,15,109,191,253,210,238,54,252,47,169,81,88,19,148,90,11,163,99,205,134,99,209,212,60,24,251,153,88,202,61,87,170,98,106,34,135,102,8,173,147,100,49,143,99,115,234,165,155,210,147,39,168,179,19,166,152,46,138,125,187,9,46,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 19 ") {
    byte_vec_t msg { 40,15,133,7 };
    byte_vec_t sig { 162,41,74,76,205,28,35,51,238,194,11,193,118,75,107,38,123,50,195,188,59,129,153,80,118,187,182,198,172,218,150,78,70,48,207,39,139,104,67,77,79,226,199,217,234,214,127,253,132,31,252,90,86,155,202,109,61,191,36,134,63,145,181,77 };
    byte_vec_t pk { 3,85,88,144,184,223,225,99,146,149,7,224,245,27,44,70,229,185,98,129,114,168,1,4,2,3,54,139,244,41,91,48,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 19 ") {
    byte_vec_t msg { 162,183,216,59 };
    byte_vec_t sig { 78,83,159,10,100,118,170,141,39,132,83,159,96,107,108,216,191,251,197,92,85,234,203,146,124,141,113,20,209,55,216,200,164,67,97,209,87,14,111,228,213,44,83,120,78,65,161,116,178,247,34,5,251,44,33,222,1,190,212,42,236,245,159,168 };
    byte_vec_t pk { 2,48,122,100,118,39,236,66,254,241,184,199,22,255,83,179,45,153,115,104,6,112,92,247,75,93,171,129,80,101,43,157,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 20 ") {
    byte_vec_t msg { 253,49,112,153 };
    byte_vec_t sig { 18,46,70,36,13,229,129,118,86,149,243,30,124,93,128,102,174,34,226,164,231,233,210,43,213,225,1,189,6,198,233,210,175,253,44,91,183,180,141,242,109,225,42,142,127,241,140,224,200,205,152,67,70,163,11,80,148,217,158,245,186,163,184,137 };
    byte_vec_t pk { 4,129,186,137,163,2,35,120,181,0,95,227,207,124,158,137,70,86,44,244,178,20,197,104,134,122,172,212,192,98,243,137,251,81,39,101,241,150,108,78,162,87,79,230,231,22,44,111,251,46,20,143,50,254,4,121,91,248,135,53,244,66,157,134,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 20 ") {
    byte_vec_t msg { 141,212,41,143 };
    byte_vec_t sig { 137,199,107,158,121,71,68,134,97,246,112,13,163,130,139,120,112,82,203,86,148,58,230,253,190,64,251,146,105,120,119,202,240,85,59,19,15,4,150,158,205,199,44,75,61,172,88,116,101,231,134,187,204,75,28,55,145,38,11,21,116,16,21,97 };
    byte_vec_t pk { 4,148,15,177,29,142,74,63,232,45,250,62,225,54,205,147,96,57,36,16,49,126,78,114,239,198,246,103,27,241,34,159,14,225,1,237,55,57,223,208,174,78,15,153,221,201,135,207,234,167,106,241,254,250,159,41,58,53,99,124,15,180,109,67,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 20 ") {
    byte_vec_t msg { 1,22,165,230 };
    byte_vec_t sig { 109,191,5,241,254,142,111,189,80,148,91,15,32,37,178,154,56,219,133,48,229,231,243,215,178,116,173,126,132,140,199,210,239,165,77,21,243,56,255,195,181,241,70,203,30,221,116,232,53,45,95,144,201,28,216,225,59,232,41,174,76,149,96,198 };
    byte_vec_t pk { 3,124,73,124,32,117,238,194,14,85,195,125,205,78,239,225,100,183,155,123,64,142,94,166,200,240,86,235,150,27,142,1,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 20 ") {
    byte_vec_t msg { 149,99,54,246 };
    byte_vec_t sig { 194,83,110,196,11,152,254,174,1,102,17,131,155,246,47,133,160,135,147,25,234,62,197,47,235,156,193,226,158,56,248,39,146,173,23,113,150,160,235,204,174,242,230,101,15,76,219,199,175,164,126,50,100,191,103,136,230,20,104,109,48,202,123,82 };
    byte_vec_t pk { 2,74,219,199,71,21,88,38,53,142,119,88,236,39,227,37,136,249,231,161,213,138,70,73,149,69,133,227,69,69,179,150,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 21 ") {
    byte_vec_t msg { 62,107,189,12 };
    byte_vec_t sig { 184,237,20,38,89,182,232,33,99,249,225,149,152,54,77,97,76,70,12,229,95,149,194,174,69,129,150,27,101,241,57,147,220,16,208,251,134,5,54,138,33,253,131,179,138,67,19,155,119,207,124,147,225,115,68,138,200,1,113,102,52,22,138,221 };
    byte_vec_t pk { 4,50,27,30,92,245,5,23,147,166,119,39,84,169,214,170,70,75,230,212,148,184,105,55,212,68,165,203,140,208,124,184,130,10,10,127,8,125,49,51,83,208,205,111,79,167,184,98,144,147,203,103,229,196,69,220,4,209,134,66,201,35,71,22,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 21 ") {
    byte_vec_t msg { 16,27,202,162 };
    byte_vec_t sig { 244,24,29,250,228,197,246,25,81,54,238,15,96,88,8,78,211,176,119,99,203,25,5,16,220,121,18,109,233,156,76,8,133,2,108,167,113,71,233,252,152,211,0,35,76,221,28,89,217,116,117,148,59,96,147,220,233,48,120,238,87,117,103,78 };
    byte_vec_t pk { 4,92,9,169,48,65,193,193,207,59,45,26,140,250,217,180,5,112,62,187,7,236,235,102,3,244,208,112,13,114,79,94,230,13,216,155,151,159,246,220,151,67,116,119,211,173,192,143,73,81,90,16,221,25,80,6,14,146,230,48,97,103,207,6,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 21 ") {
    byte_vec_t msg { 6,110,32,83 };
    byte_vec_t sig { 102,194,173,12,187,88,156,217,135,103,17,191,106,97,95,226,8,85,199,180,163,132,200,197,164,188,167,97,147,18,121,234,254,232,125,6,163,182,82,90,2,74,115,106,39,247,195,166,85,32,242,230,207,171,110,117,51,29,179,117,40,236,41,3 };
    byte_vec_t pk { 3,66,212,140,52,23,90,223,175,95,49,193,187,24,203,93,27,122,242,16,80,196,147,166,228,27,197,9,33,74,104,144,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 21 ") {
    byte_vec_t msg { 117,111,113,187 };
    byte_vec_t sig { 31,109,47,177,106,232,9,215,15,31,143,74,221,41,143,141,207,140,205,80,215,103,172,29,109,203,211,138,130,204,188,192,228,136,112,226,69,100,49,208,135,61,37,179,154,240,221,5,164,202,2,63,169,234,56,230,81,84,232,153,232,145,45,121 };
    byte_vec_t pk { 2,106,73,105,137,114,46,159,216,120,51,94,63,63,91,155,57,12,182,218,195,98,34,182,133,135,32,188,245,78,74,236,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 22 ") {
    byte_vec_t msg { 39,226,158,50 };
    byte_vec_t sig { 7,66,187,108,102,206,129,125,64,250,248,236,150,45,184,49,174,27,249,111,100,200,212,223,215,220,168,3,151,187,175,165,112,111,34,99,169,214,252,179,104,235,245,72,91,244,94,18,87,232,55,191,7,4,137,209,83,181,203,140,130,50,32,204 };
    byte_vec_t pk { 4,37,163,217,183,8,70,88,59,96,117,6,5,205,183,56,20,54,78,2,84,183,224,54,74,150,211,229,193,254,115,243,80,244,13,55,143,39,65,52,218,141,47,78,32,126,226,47,244,235,135,250,84,82,106,99,246,53,196,128,134,37,0,220,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 22 ") {
    byte_vec_t msg { 126,221,36,27 };
    byte_vec_t sig { 64,102,196,141,240,20,142,36,65,231,92,250,199,78,156,233,222,88,203,148,47,133,187,140,143,143,87,48,64,225,174,75,73,103,187,135,116,102,166,222,65,29,150,242,251,176,21,11,115,109,186,234,89,195,171,91,29,73,75,64,130,163,62,143 };
    byte_vec_t pk { 4,53,174,244,88,230,47,150,184,81,81,209,47,95,38,98,152,97,204,87,119,18,160,235,58,163,189,129,119,38,242,243,46,0,50,88,139,228,79,90,114,133,6,117,86,190,129,141,58,150,231,87,9,230,67,149,13,131,93,170,147,195,123,30,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 22 ") {
    byte_vec_t msg { 152,119,172,207 };
    byte_vec_t sig { 180,21,228,89,225,202,170,197,181,237,11,94,70,43,32,67,127,241,194,158,22,154,24,151,116,165,222,69,110,185,169,170,195,124,221,121,40,139,18,220,61,112,161,101,183,16,57,203,105,186,157,203,125,50,191,38,150,18,19,246,81,82,125,17 };
    byte_vec_t pk { 3,6,68,178,189,36,82,1,165,229,199,72,229,144,69,96,240,219,28,116,241,88,22,224,238,150,191,48,118,16,122,222,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 22 ") {
    byte_vec_t msg { 27,47,9,131 };
    byte_vec_t sig { 157,97,109,7,178,184,75,244,89,239,137,79,233,246,195,40,149,4,112,215,65,229,21,240,242,114,245,65,192,17,205,228,124,183,55,104,121,255,165,84,219,18,51,255,229,78,168,110,152,162,122,148,94,231,137,9,170,179,170,24,101,148,125,174 };
    byte_vec_t pk { 3,235,201,133,215,22,128,36,86,128,79,221,19,147,55,230,90,243,171,92,115,203,208,214,168,109,84,208,105,147,57,213,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 23 ") {
    byte_vec_t msg { 69,176,181,128 };
    byte_vec_t sig { 157,223,196,129,53,159,92,176,212,151,198,75,94,145,141,99,109,16,107,139,219,38,172,249,160,55,114,160,221,164,171,50,59,164,186,196,73,45,68,12,79,24,177,115,2,249,58,6,200,118,70,36,208,137,213,213,40,193,96,34,12,118,100,130 };
    byte_vec_t pk { 4,26,182,49,114,71,229,131,36,236,15,41,136,28,112,34,80,77,9,84,201,5,81,15,25,16,249,13,90,24,179,27,117,172,204,246,127,118,28,247,182,218,221,197,153,63,189,72,155,174,138,219,132,92,204,179,71,148,157,181,72,233,251,186,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 23 ") {
    byte_vec_t msg { 176,2,152,50 };
    byte_vec_t sig { 136,98,70,225,201,115,160,115,67,138,182,169,69,58,222,88,5,216,247,32,129,238,145,166,8,12,146,120,120,181,170,50,92,106,152,216,114,84,54,88,37,27,169,35,213,226,21,189,93,136,155,47,244,158,121,27,169,101,137,229,199,64,30,62 };
    byte_vec_t pk { 4,12,17,48,7,81,36,150,124,217,62,89,74,31,230,1,55,167,111,127,201,238,56,227,211,48,90,70,38,83,187,88,212,215,6,144,69,196,60,82,102,92,212,160,185,59,133,41,245,216,113,168,110,53,47,59,156,2,33,72,111,99,226,172,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 23 ") {
    byte_vec_t msg { 180,117,51,30 };
    byte_vec_t sig { 173,34,136,168,153,25,137,88,28,74,240,35,8,115,44,93,99,63,235,83,104,159,63,125,39,74,254,76,12,28,70,29,146,38,227,166,218,208,187,160,15,70,115,12,229,46,253,161,182,56,105,86,92,244,76,183,41,218,16,142,112,205,49,9 };
    byte_vec_t pk { 3,0,253,193,111,128,143,15,168,157,79,235,72,190,169,91,245,12,60,61,136,46,24,177,208,215,176,142,24,85,131,57,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 23 ") {
    byte_vec_t msg { 93,1,8,228 };
    byte_vec_t sig { 154,162,152,213,215,57,95,191,242,232,241,208,1,254,237,84,199,200,197,97,75,137,238,42,163,28,235,94,228,144,192,132,214,224,98,41,10,131,201,230,22,62,135,61,41,128,225,228,204,122,34,90,235,230,28,121,51,189,0,119,212,53,70,207 };
    byte_vec_t pk { 3,140,194,232,163,55,252,222,198,46,199,84,106,93,87,220,89,178,128,176,248,135,56,88,163,178,124,237,10,149,181,198,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 24 ") {
    byte_vec_t msg { 2,202,236,180 };
    byte_vec_t sig { 189,103,105,91,18,47,219,128,172,145,253,104,58,70,248,195,197,60,235,245,71,198,76,226,137,177,210,240,139,91,25,18,80,100,197,239,59,121,106,97,230,62,244,115,147,39,66,131,189,27,173,209,115,159,140,240,88,209,67,218,37,248,84,27 };
    byte_vec_t pk { 4,238,142,22,117,1,92,138,179,177,224,116,224,42,89,107,85,245,7,91,164,241,215,206,140,200,43,73,83,124,160,26,142,128,123,45,183,50,218,201,10,239,123,144,27,246,186,107,191,153,216,217,176,226,19,25,47,192,225,218,184,155,113,159,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 24 ") {
    byte_vec_t msg { 82,24,83,245 };
    byte_vec_t sig { 150,133,232,94,72,38,27,129,78,17,24,68,239,53,249,116,69,88,70,113,19,163,59,245,129,139,132,42,146,88,184,23,61,218,252,132,206,11,195,44,160,110,17,211,81,27,47,114,88,197,30,196,116,34,104,141,209,217,151,88,185,202,192,211 };
    byte_vec_t pk { 4,90,29,112,165,250,232,116,191,210,139,9,95,83,3,244,255,199,31,115,119,20,127,227,33,180,213,118,102,184,92,21,68,126,113,79,12,227,40,136,142,192,57,222,144,195,59,239,193,200,251,21,59,179,14,43,194,104,142,71,99,243,151,120,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 24 ") {
    byte_vec_t msg { 53,10,243,52 };
    byte_vec_t sig { 0,221,20,161,141,98,16,137,120,6,17,164,75,210,134,245,219,133,177,14,251,94,56,202,159,193,152,227,171,241,209,186,69,228,24,197,165,134,165,65,191,219,159,208,58,254,50,130,173,165,87,55,194,193,33,218,76,243,225,79,13,228,26,26 };
    byte_vec_t pk { 2,219,103,17,218,15,133,60,111,12,5,231,94,231,64,20,86,252,115,188,52,153,150,170,243,41,103,27,80,123,84,209,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 24 ") {
    byte_vec_t msg { 235,119,59,148 };
    byte_vec_t sig { 222,59,157,218,131,207,166,137,241,221,81,82,212,98,86,189,231,46,113,212,217,15,1,27,64,43,115,220,149,207,65,214,65,63,214,49,237,241,135,88,139,204,205,252,135,58,63,195,76,122,69,77,3,247,172,129,234,18,43,163,81,70,203,108 };
    byte_vec_t pk { 3,160,151,162,203,33,12,148,11,120,165,73,157,251,202,70,128,235,183,71,95,165,98,61,240,234,6,238,140,194,168,85,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 25 ") {
    byte_vec_t msg { 123,190,41,27 };
    byte_vec_t sig { 149,16,80,242,93,95,80,74,94,6,197,248,0,60,213,107,138,233,62,193,121,215,26,255,80,42,95,36,226,50,238,202,56,224,51,10,237,120,135,9,105,19,188,200,120,255,60,218,126,61,230,193,188,48,80,50,15,4,101,44,169,16,16,22 };
    byte_vec_t pk { 4,61,96,251,129,12,244,220,166,25,14,127,210,158,152,75,176,50,40,51,85,13,157,69,225,3,4,230,51,171,21,7,204,149,11,151,106,8,13,109,31,234,135,244,95,147,218,91,209,60,225,82,177,238,118,240,205,170,177,35,31,234,229,129,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 25 ") {
    byte_vec_t msg { 146,211,233,154 };
    byte_vec_t sig { 204,204,20,121,102,29,18,75,229,6,162,156,202,89,208,193,31,110,183,44,247,154,225,240,5,250,64,50,78,60,231,40,78,90,220,238,149,84,43,100,19,228,199,61,2,252,222,235,6,249,122,121,224,200,213,125,68,146,220,35,29,127,77,147 };
    byte_vec_t pk { 4,182,179,50,4,225,116,189,213,222,70,14,233,71,22,186,73,22,16,145,183,196,160,114,172,2,71,232,222,201,209,117,11,58,112,164,107,27,6,76,60,172,185,154,173,144,134,183,45,206,89,9,235,57,96,104,80,82,33,253,126,175,120,6,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 25 ") {
    byte_vec_t msg { 197,206,17,216 };
    byte_vec_t sig { 27,160,103,36,8,105,223,22,232,222,232,40,55,98,58,118,147,254,45,224,60,47,107,134,159,194,227,119,118,60,24,233,211,59,185,212,145,230,128,163,172,114,11,67,7,51,217,168,101,240,63,216,250,14,160,52,39,200,228,209,187,237,93,130 };
    byte_vec_t pk { 3,68,101,133,223,219,249,179,37,191,10,93,102,142,249,75,126,247,14,230,216,168,199,13,63,27,212,236,2,197,79,149,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 25 ") {
    byte_vec_t msg { 231,7,230,155 };
    byte_vec_t sig { 243,91,36,102,55,69,22,226,173,82,12,219,34,173,50,125,94,2,18,142,183,90,209,100,184,111,37,6,234,23,51,103,24,252,226,134,100,29,147,101,171,158,91,40,137,171,235,162,37,89,151,236,85,101,175,67,92,44,20,150,58,238,183,55 };
    byte_vec_t pk { 2,109,102,5,219,98,46,248,82,25,212,79,234,188,61,140,228,30,170,214,27,228,241,184,160,248,50,168,58,227,62,85,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 26 ") {
    byte_vec_t msg { 83,72,136,22 };
    byte_vec_t sig { 182,28,135,205,49,34,74,10,16,28,163,34,155,69,27,123,195,83,33,86,111,212,222,0,213,176,11,173,238,169,202,133,119,13,92,87,229,221,7,41,173,65,62,117,182,136,47,53,87,47,180,146,141,98,64,190,4,80,153,235,174,158,246,165 };
    byte_vec_t pk { 4,112,86,125,111,63,174,187,188,56,65,135,31,170,233,159,216,135,127,75,224,63,168,52,230,72,34,117,214,175,163,104,137,123,100,164,234,176,4,209,110,221,10,181,242,1,10,82,59,207,189,184,53,222,146,224,172,246,14,252,74,74,203,126,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 26 ") {
    byte_vec_t msg { 224,86,158,129 };
    byte_vec_t sig { 48,191,60,102,148,207,75,114,18,44,90,162,246,13,206,192,68,53,20,95,90,201,54,124,167,70,151,207,132,128,198,3,160,211,160,51,255,21,94,106,4,18,228,180,104,12,142,217,180,179,227,70,217,67,111,62,183,149,210,194,236,193,150,228 };
    byte_vec_t pk { 4,166,184,116,218,136,126,85,150,126,112,16,147,217,239,142,85,184,140,81,224,149,217,151,236,105,107,124,75,100,91,156,254,50,12,226,113,88,101,112,103,142,67,247,213,143,120,170,75,94,149,92,93,69,67,41,8,150,106,194,190,79,143,91,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 26 ") {
    byte_vec_t msg { 177,67,166,4 };
    byte_vec_t sig { 53,216,134,22,130,117,78,57,20,117,145,228,57,91,221,183,182,196,63,113,181,193,180,110,2,82,0,235,124,236,217,83,161,21,246,184,204,69,119,27,122,98,60,164,99,79,156,20,55,187,195,4,224,57,185,191,1,228,135,65,114,118,92,4 };
    byte_vec_t pk { 2,76,188,234,154,215,189,57,4,223,206,92,245,121,88,51,9,153,158,118,76,230,197,203,225,32,190,130,94,5,174,68,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 26 ") {
    byte_vec_t msg { 155,159,214,224 };
    byte_vec_t sig { 81,189,55,55,30,83,160,67,184,90,253,1,50,136,77,26,43,213,45,206,120,178,168,1,227,94,135,245,218,118,84,127,30,201,184,81,35,212,94,82,154,2,101,230,253,210,214,97,80,102,117,212,248,130,243,79,66,75,69,126,94,71,153,49 };
    byte_vec_t pk { 3,144,85,183,207,59,144,150,163,202,188,73,73,206,131,90,143,206,103,227,28,3,80,171,82,63,183,163,209,20,51,201,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 27 ") {
    byte_vec_t msg { 135,38,168,103 };
    byte_vec_t sig { 206,116,163,255,161,199,246,0,206,236,253,87,245,158,84,69,0,127,21,182,135,177,183,177,94,154,210,220,214,98,63,21,61,119,89,209,229,222,221,159,16,108,210,109,201,140,237,173,137,107,69,159,17,54,107,3,73,214,98,162,18,140,144,149 };
    byte_vec_t pk { 4,44,150,215,126,161,101,84,196,176,8,109,168,193,103,64,154,41,19,56,202,182,5,95,180,204,50,14,98,22,216,234,185,180,92,197,172,114,155,52,149,179,108,104,103,46,31,57,234,6,31,249,142,138,120,3,163,117,178,174,150,2,168,36,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 27 ") {
    byte_vec_t msg { 97,225,38,244 };
    byte_vec_t sig { 112,205,230,215,70,174,233,191,28,85,231,85,141,201,143,55,55,107,126,57,77,232,166,32,71,206,154,123,218,148,107,205,253,80,40,80,171,210,233,5,236,21,169,174,209,39,113,207,132,56,97,152,177,54,3,122,230,20,134,119,194,68,211,200 };
    byte_vec_t pk { 4,70,69,194,219,114,123,132,27,61,17,0,89,226,53,100,206,109,58,174,102,221,44,203,203,105,80,129,213,193,0,54,61,192,38,114,245,65,11,176,99,138,61,197,84,192,2,86,46,24,93,165,80,181,121,6,198,7,18,0,71,11,216,130,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 27 ") {
    byte_vec_t msg { 206,221,185,158 };
    byte_vec_t sig { 153,125,62,131,110,78,180,26,127,160,183,44,211,5,128,127,0,227,170,129,84,182,192,163,48,86,22,2,215,57,198,18,113,25,174,248,199,77,9,27,61,138,78,169,197,26,161,63,169,64,209,191,180,137,65,78,133,224,13,28,180,57,195,156 };
    byte_vec_t pk { 3,133,20,188,9,117,165,140,213,192,210,161,43,229,182,225,235,115,44,200,133,162,241,53,134,152,241,174,96,122,162,112,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 27 ") {
    byte_vec_t msg { 232,210,122,132 };
    byte_vec_t sig { 48,139,44,109,210,23,112,209,208,255,2,139,88,47,124,61,247,173,235,215,61,162,234,69,220,211,16,175,103,73,97,83,12,160,5,227,130,151,173,6,100,210,167,34,50,68,111,103,197,196,26,165,31,35,168,192,28,125,63,147,13,227,177,77 };
    byte_vec_t pk { 2,246,28,246,208,41,71,125,33,232,162,130,243,16,11,229,171,219,117,255,171,117,207,237,128,183,149,160,101,60,230,172,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 28 ") {
    byte_vec_t msg { 189,255,130,4 };
    byte_vec_t sig { 22,87,41,55,123,225,250,105,171,128,212,44,228,161,246,62,25,205,211,209,74,107,234,27,166,189,244,223,204,94,62,81,34,91,198,3,181,191,225,66,99,94,80,75,34,230,253,10,52,31,23,90,200,32,71,53,222,208,155,102,248,149,77,81 };
    byte_vec_t pk { 4,177,243,17,218,170,22,105,213,110,54,206,44,70,19,149,18,215,202,234,239,168,137,0,184,212,37,205,148,161,95,229,12,74,34,232,116,23,102,131,24,20,72,239,238,255,162,29,196,231,56,29,159,244,209,57,86,237,199,159,77,20,148,48,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 28 ") {
    byte_vec_t msg { 23,111,9,253 };
    byte_vec_t sig { 84,186,231,248,117,192,104,16,73,73,96,155,189,153,165,61,72,156,168,249,66,188,33,3,230,41,71,151,27,8,99,44,210,147,154,224,92,69,23,172,164,10,97,192,197,167,220,25,225,98,18,79,74,150,255,242,174,137,133,63,84,87,106,219 };
    byte_vec_t pk { 4,50,154,242,248,115,227,45,152,209,148,26,229,125,16,31,224,223,12,51,95,121,19,50,236,45,12,155,225,185,63,30,107,104,80,184,215,244,22,28,200,21,157,225,236,141,210,71,25,230,34,250,23,25,144,244,240,101,14,61,3,153,35,13,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 28 ") {
    byte_vec_t msg { 133,210,147,11 };
    byte_vec_t sig { 132,101,191,43,62,9,220,23,210,92,39,247,213,134,118,208,132,43,244,221,200,134,202,0,163,104,24,207,249,81,98,233,184,63,234,47,12,195,160,180,15,145,80,90,114,127,12,196,118,112,74,103,21,83,136,55,57,207,83,113,166,194,101,157 };
    byte_vec_t pk { 2,0,242,200,19,116,215,157,248,127,74,219,154,219,174,186,87,72,189,49,194,193,39,174,235,217,230,193,212,168,43,246,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 28 ") {
    byte_vec_t msg { 50,246,79,218 };
    byte_vec_t sig { 194,156,97,104,209,201,177,189,85,198,245,244,254,101,162,189,128,104,220,133,57,87,188,39,143,189,44,27,183,212,245,118,119,96,14,177,170,172,60,160,210,173,50,149,13,19,32,122,8,54,199,159,9,187,89,58,137,156,16,64,246,69,66,196 };
    byte_vec_t pk { 3,21,86,215,110,79,88,186,79,162,66,140,235,148,77,34,113,169,68,176,214,153,214,232,97,20,51,139,222,30,109,235,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 29 ") {
    byte_vec_t msg { 192,169,29,228 };
    byte_vec_t sig { 144,194,175,42,35,134,169,108,162,1,139,21,12,126,225,115,172,42,28,149,141,243,142,91,61,196,210,111,189,15,55,169,121,128,201,162,149,70,153,58,48,0,18,9,208,234,208,216,100,130,168,37,136,80,203,11,94,59,81,114,237,91,14,97 };
    byte_vec_t pk { 4,247,252,192,34,186,128,183,22,211,21,42,159,129,232,47,95,152,46,221,188,178,200,198,57,230,189,250,234,148,39,205,48,202,75,102,102,98,208,11,191,212,226,62,31,226,85,79,246,91,89,113,11,180,222,253,129,0,222,12,89,223,177,220,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 29 ") {
    byte_vec_t msg { 31,166,235,201 };
    byte_vec_t sig { 151,208,198,245,142,48,181,97,79,102,251,111,141,30,185,27,131,50,158,177,248,90,184,238,24,115,242,109,174,235,197,204,74,201,7,145,224,237,163,4,37,217,192,36,72,182,145,248,232,50,147,28,11,213,213,210,126,6,64,118,248,44,192,158 };
    byte_vec_t pk { 4,37,131,245,228,158,71,67,157,56,190,163,192,140,42,239,67,148,98,1,134,116,119,213,3,209,239,151,144,91,254,183,244,234,105,156,244,194,175,106,33,181,198,133,61,183,22,75,88,16,176,19,185,137,137,242,226,32,190,108,220,4,2,84,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 29 ") {
    byte_vec_t msg { 12,178,134,46 };
    byte_vec_t sig { 235,128,187,194,144,67,43,96,112,9,156,56,112,136,187,200,170,233,122,144,195,10,143,15,73,55,22,143,15,40,121,206,121,166,253,161,166,192,111,226,34,56,54,159,88,14,74,126,190,71,249,225,114,251,105,63,207,1,47,82,44,79,2,220 };
    byte_vec_t pk { 2,156,170,136,123,226,206,34,180,68,167,162,126,146,91,82,44,141,206,5,159,116,218,151,54,216,152,6,31,143,243,55,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 29 ") {
    byte_vec_t msg { 138,78,209,141 };
    byte_vec_t sig { 95,100,133,233,159,112,197,137,169,189,48,76,206,166,22,135,164,1,123,203,87,177,216,132,189,3,181,146,45,182,126,88,236,126,224,129,44,206,82,55,183,200,78,213,177,211,230,72,247,232,231,20,28,70,100,116,237,224,50,197,199,11,128,252 };
    byte_vec_t pk { 3,132,13,145,104,19,40,197,238,165,38,166,63,251,171,33,83,178,107,106,13,19,239,27,162,174,165,237,21,96,214,248,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 30 ") {
    byte_vec_t msg { 229,242,95,125 };
    byte_vec_t sig { 36,122,105,79,31,99,204,31,5,129,52,139,178,239,89,75,104,111,179,29,220,180,148,31,240,121,238,14,7,223,220,34,213,199,200,183,98,61,149,219,92,244,184,79,223,79,114,120,135,7,33,182,87,138,175,133,60,80,176,56,39,104,185,180 };
    byte_vec_t pk { 4,108,99,6,32,95,137,94,48,165,248,83,54,117,87,11,25,114,71,238,39,198,7,46,178,2,136,46,196,184,140,182,93,216,23,123,1,220,48,195,54,195,151,32,216,180,4,221,201,180,125,136,230,149,155,113,68,189,228,32,77,160,76,176,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 30 ") {
    byte_vec_t msg { 89,18,10,102 };
    byte_vec_t sig { 134,76,35,186,17,14,230,231,11,187,89,142,227,22,99,115,127,182,80,25,58,176,247,99,15,144,204,24,229,198,57,213,3,52,223,171,151,99,177,195,219,101,134,113,158,194,28,90,52,148,226,231,255,200,208,228,31,99,92,140,144,253,224,8 };
    byte_vec_t pk { 4,253,129,237,111,3,21,51,2,53,50,187,90,207,127,56,177,217,164,95,110,7,150,234,161,179,86,173,16,95,253,46,155,157,1,173,48,1,38,164,86,127,55,149,67,6,224,226,252,227,146,26,98,126,82,80,61,218,162,62,80,142,66,148,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 30 ") {
    byte_vec_t msg { 153,240,206,14 };
    byte_vec_t sig { 162,224,42,203,221,207,205,30,232,252,145,16,176,74,199,195,187,242,65,44,240,79,251,139,26,17,86,22,94,229,27,47,193,200,136,243,127,189,168,127,185,176,75,96,113,239,226,195,81,194,149,237,168,184,165,45,118,197,115,225,18,108,49,18 };
    byte_vec_t pk { 3,197,250,136,155,6,85,174,83,96,22,5,99,86,32,63,78,79,237,24,33,62,86,191,1,214,82,231,15,232,209,185,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 30 ") {
    byte_vec_t msg { 190,228,72,9 };
    byte_vec_t sig { 179,186,199,242,117,222,24,103,55,59,24,237,60,252,166,182,12,132,156,115,15,0,141,234,59,138,177,180,133,20,27,86,133,112,198,179,48,85,183,230,194,104,131,76,46,86,99,171,192,238,91,177,51,180,249,228,183,216,10,188,191,121,154,50 };
    byte_vec_t pk { 3,154,154,190,228,203,141,1,210,193,185,231,92,219,63,160,192,118,17,186,116,169,162,40,77,88,221,159,59,163,173,245,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 31 ") {
    byte_vec_t msg { 207,1,247,205 };
    byte_vec_t sig { 27,89,125,200,91,254,37,16,97,6,110,214,119,41,48,85,226,253,19,129,197,204,62,80,241,15,67,203,64,39,237,3,143,234,241,109,99,198,183,47,114,112,198,129,155,4,138,172,88,141,192,253,220,143,42,142,146,168,168,150,136,206,98,138 };
    byte_vec_t pk { 4,39,165,226,239,15,67,0,78,142,192,232,149,254,199,116,13,241,119,87,21,74,87,37,199,118,57,129,74,102,210,138,49,199,245,182,206,231,2,53,162,255,43,174,228,239,166,167,167,13,206,69,94,21,129,23,115,56,30,37,239,127,140,224,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 31 ") {
    byte_vec_t msg { 230,243,109,40 };
    byte_vec_t sig { 180,16,78,232,134,249,227,153,108,176,242,217,72,144,245,18,207,168,6,254,133,0,69,217,146,252,0,212,212,177,228,116,37,108,255,194,3,29,206,176,221,130,187,150,48,199,111,43,234,205,113,213,115,16,218,71,193,208,108,233,22,225,167,207 };
    byte_vec_t pk { 4,63,151,116,82,1,139,226,196,7,135,146,133,176,18,186,3,1,179,153,237,77,227,211,155,106,24,194,251,130,143,201,180,25,186,162,190,243,86,57,42,156,9,217,213,134,254,133,61,70,90,182,111,249,157,73,133,115,155,193,123,96,206,99,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 31 ") {
    byte_vec_t msg { 201,62,220,243 };
    byte_vec_t sig { 135,5,87,98,56,14,94,242,23,209,234,179,70,198,184,10,57,253,142,12,16,87,156,156,61,48,122,199,186,242,168,253,218,227,237,137,116,52,147,7,216,244,4,185,53,219,143,215,205,153,47,227,180,246,161,92,80,62,148,110,154,190,1,232 };
    byte_vec_t pk { 2,16,250,174,60,10,243,122,121,117,146,80,197,142,241,114,153,216,147,234,199,222,211,20,236,150,55,219,210,81,164,18,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 31 ") {
    byte_vec_t msg { 25,160,183,53 };
    byte_vec_t sig { 93,228,25,211,236,163,197,155,116,154,216,141,243,75,135,177,189,196,180,73,180,184,158,13,139,180,43,252,219,217,24,139,243,81,120,11,124,141,71,15,130,138,183,143,29,243,27,88,147,71,163,219,211,230,9,212,23,68,235,81,118,68,185,37 };
    byte_vec_t pk { 2,122,160,242,95,118,150,0,82,157,254,164,72,24,198,6,99,160,126,168,110,209,251,141,121,72,227,190,20,153,92,49,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 32 ") {
    byte_vec_t msg { 92,70,96,183 };
    byte_vec_t sig { 149,74,50,81,157,153,224,246,28,252,20,189,67,92,128,245,245,222,146,9,35,63,6,196,99,90,183,199,29,250,45,196,142,40,51,96,193,89,210,161,47,236,193,218,235,249,15,149,18,163,4,220,109,187,55,167,219,116,166,210,155,117,51,96 };
    byte_vec_t pk { 4,243,104,154,114,183,23,25,93,242,147,120,60,129,218,122,32,64,205,22,163,228,49,226,18,196,77,235,203,31,81,200,98,49,37,38,36,15,188,231,242,11,21,213,38,45,68,163,61,61,17,218,211,64,86,209,11,208,217,43,21,62,29,31,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 32 ") {
    byte_vec_t msg { 183,14,17,135 };
    byte_vec_t sig { 79,80,28,91,65,52,42,145,220,232,211,127,179,53,67,126,129,161,125,116,179,117,255,208,15,244,16,142,183,127,162,123,0,103,180,110,175,228,176,119,127,4,70,214,211,189,136,172,182,160,24,29,251,6,30,79,164,67,63,8,52,217,69,79 };
    byte_vec_t pk { 4,234,24,247,224,128,19,176,213,88,111,59,127,168,232,111,162,25,77,54,103,0,228,85,153,234,197,165,94,152,226,203,136,82,193,147,206,151,93,209,198,74,42,156,29,154,11,22,121,2,123,220,188,62,113,170,120,1,39,242,240,230,153,130,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 32 ") {
    byte_vec_t msg { 156,117,128,127 };
    byte_vec_t sig { 223,65,76,71,16,112,192,2,239,137,145,32,155,7,171,238,100,160,92,220,105,232,209,230,140,200,201,251,244,97,122,172,146,82,125,121,39,171,181,96,162,117,246,23,205,163,93,155,146,140,150,130,86,134,89,60,223,98,65,182,134,98,153,229 };
    byte_vec_t pk { 3,30,98,218,208,157,220,251,84,60,98,114,93,114,124,75,146,16,177,99,204,222,117,203,195,127,57,104,203,22,162,195,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 32 ") {
    byte_vec_t msg { 194,30,99,171 };
    byte_vec_t sig { 146,70,196,39,251,45,47,252,28,77,23,88,214,31,44,137,24,21,8,73,76,202,216,144,34,230,229,75,233,77,180,35,136,1,6,175,135,104,26,104,12,198,86,23,108,72,193,151,68,97,48,13,192,156,189,142,94,135,231,128,7,156,239,111 };
    byte_vec_t pk { 2,100,10,26,222,188,206,17,15,140,94,44,80,199,120,202,1,41,245,86,206,27,62,95,28,95,95,142,195,76,116,245,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 33 ") {
    byte_vec_t msg { 219,32,87,213 };
    byte_vec_t sig { 159,188,251,136,51,142,4,131,147,219,132,107,238,212,112,122,58,6,177,116,239,96,132,190,80,231,82,75,59,141,221,252,227,73,127,88,54,140,163,143,158,70,57,80,154,217,110,44,205,181,248,37,209,117,138,175,75,150,229,111,163,64,42,240 };
    byte_vec_t pk { 4,98,71,210,115,177,145,102,147,49,239,221,248,7,173,103,152,205,210,7,116,197,41,177,176,254,237,90,72,150,122,3,96,72,3,117,47,149,215,103,177,174,3,85,118,212,1,231,145,109,10,134,250,110,24,46,132,223,31,31,218,204,90,71,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 33 ") {
    byte_vec_t msg { 152,146,151,102 };
    byte_vec_t sig { 184,176,19,167,212,163,196,20,228,1,129,47,96,212,188,48,36,101,13,154,181,37,112,54,91,90,207,28,205,208,100,39,45,71,186,239,17,161,177,38,221,184,173,181,6,70,16,158,57,142,179,32,251,88,62,112,170,176,24,44,136,54,192,61 };
    byte_vec_t pk { 4,195,191,180,48,198,96,70,152,45,71,63,246,36,113,241,174,67,154,2,16,154,128,65,106,43,66,56,63,135,206,87,241,53,179,150,133,241,252,135,133,167,31,0,143,79,108,241,151,222,224,84,181,123,118,121,218,49,72,183,55,29,75,138,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 33 ") {
    byte_vec_t msg { 200,154,125,205 };
    byte_vec_t sig { 162,167,93,32,37,239,176,52,78,7,184,175,26,34,183,127,1,125,181,232,254,66,87,188,48,138,202,202,168,36,16,180,19,109,29,109,244,161,78,244,177,50,110,193,111,161,240,136,56,187,239,166,23,252,185,137,120,127,169,164,21,19,179,38 };
    byte_vec_t pk { 2,78,69,193,153,192,59,112,87,235,157,22,5,240,247,15,56,103,7,197,30,221,23,90,235,150,88,47,59,25,101,34,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 33 ") {
    byte_vec_t msg { 141,250,197,131 };
    byte_vec_t sig { 158,94,4,247,236,185,85,52,110,50,34,76,153,81,209,226,218,122,53,157,7,75,74,70,7,66,143,82,251,139,0,127,223,196,14,78,127,2,4,105,151,206,185,111,254,145,131,4,39,168,45,189,182,117,112,70,78,115,121,130,108,166,181,155 };
    byte_vec_t pk { 3,18,12,70,20,7,87,71,215,214,227,27,31,241,232,32,39,80,25,39,198,18,209,144,71,87,177,185,0,15,165,121,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 34 ") {
    byte_vec_t msg { 62,43,71,108 };
    byte_vec_t sig { 110,108,141,104,157,2,44,28,247,151,215,118,32,241,236,42,96,143,58,21,148,192,171,203,98,91,29,39,49,80,19,104,222,110,163,182,121,27,217,77,235,10,172,143,7,5,221,29,87,35,16,108,68,39,149,181,108,107,118,48,165,120,188,32 };
    byte_vec_t pk { 4,235,171,17,177,177,110,181,226,200,235,59,20,110,205,69,220,163,149,211,150,233,32,78,99,35,61,194,130,237,60,72,109,107,11,251,84,224,4,217,123,100,9,26,72,68,133,142,71,107,53,175,190,50,236,173,48,234,183,27,217,210,85,159,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 34 ") {
    byte_vec_t msg { 165,21,112,3 };
    byte_vec_t sig { 157,2,102,192,125,66,146,50,177,132,13,156,216,158,132,133,72,131,143,245,61,240,203,125,213,83,181,149,168,217,195,131,218,112,112,29,243,1,48,225,149,2,85,99,86,18,179,43,213,85,213,218,254,183,107,1,68,180,209,230,32,81,65,27 };
    byte_vec_t pk { 4,149,163,165,196,219,235,213,143,220,73,140,140,49,240,179,210,189,148,97,35,237,67,97,139,127,120,60,178,217,116,109,155,108,49,7,133,88,150,108,55,77,11,77,140,202,187,40,44,179,55,88,202,68,67,65,45,165,104,43,92,181,47,93,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 34 ") {
    byte_vec_t msg { 110,123,253,21 };
    byte_vec_t sig { 17,98,17,126,16,100,167,72,154,163,124,162,187,252,189,195,250,81,155,36,98,187,40,36,245,202,254,211,116,19,169,70,171,216,203,105,85,212,151,255,171,171,119,173,90,50,125,67,88,211,191,178,134,198,84,36,65,183,206,67,105,64,223,233 };
    byte_vec_t pk { 3,223,251,2,45,57,212,93,172,241,45,248,217,0,233,113,239,128,144,63,104,112,240,215,172,196,131,247,97,238,245,73,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 34 ") {
    byte_vec_t msg { 248,221,144,18 };
    byte_vec_t sig { 247,141,101,62,229,64,57,204,223,89,31,203,30,180,50,178,129,57,245,124,134,220,24,27,171,105,118,212,239,11,156,178,45,24,60,206,35,158,243,20,40,140,239,189,169,237,175,165,173,115,102,7,15,236,45,197,134,30,201,60,242,75,15,171 };
    byte_vec_t pk { 2,167,58,221,214,110,159,223,10,240,205,195,48,179,217,123,6,42,174,252,14,93,92,246,138,136,82,153,40,44,86,227,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 35 ") {
    byte_vec_t msg { 151,78,210,8 };
    byte_vec_t sig { 206,119,48,154,165,2,188,249,151,32,191,244,143,205,173,120,184,32,182,29,153,20,18,38,54,150,51,176,51,193,234,169,94,129,171,35,229,96,181,40,44,97,71,178,47,167,46,176,72,4,140,96,66,230,238,138,218,122,252,224,142,22,24,167 };
    byte_vec_t pk { 4,46,233,226,152,115,13,119,252,187,172,81,102,35,73,173,186,148,44,188,38,168,216,19,240,88,74,245,190,131,214,39,92,4,151,71,82,207,7,13,232,82,208,166,173,237,199,223,192,230,202,18,223,24,238,161,183,146,77,188,123,11,19,60,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 35 ") {
    byte_vec_t msg { 169,75,188,110 };
    byte_vec_t sig { 118,177,104,247,126,63,146,111,138,224,8,165,85,221,177,182,56,181,66,254,121,55,247,94,45,120,187,24,212,156,89,66,101,101,206,243,194,101,165,195,104,16,244,215,4,61,58,177,159,183,60,58,191,217,27,81,159,58,249,178,194,19,39,42 };
    byte_vec_t pk { 4,179,40,145,126,167,115,254,248,114,192,149,64,83,136,116,148,241,197,216,40,99,5,229,181,33,109,192,89,193,226,185,245,151,101,187,231,72,98,30,8,130,230,237,2,119,87,106,73,209,28,16,215,219,140,29,114,130,91,92,4,248,255,236,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 35 ") {
    byte_vec_t msg { 21,252,251,162 };
    byte_vec_t sig { 118,106,165,212,20,131,192,134,232,205,194,121,20,188,30,138,220,169,85,145,92,1,22,158,37,120,138,45,90,4,130,11,126,78,210,175,211,44,219,254,166,186,147,84,37,120,175,182,76,108,124,138,71,32,153,217,138,101,120,41,224,236,242,72 };
    byte_vec_t pk { 3,207,252,202,66,129,5,55,222,56,122,2,71,167,144,253,31,84,226,229,5,41,3,216,67,242,179,147,18,205,79,123,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 35 ") {
    byte_vec_t msg { 184,89,114,128 };
    byte_vec_t sig { 139,35,82,77,18,85,90,225,118,161,28,111,0,72,233,223,164,186,223,228,167,111,139,214,152,31,118,222,119,156,120,241,171,26,162,163,252,68,81,5,14,4,247,235,194,21,230,228,40,126,223,180,120,151,49,109,116,89,158,216,139,179,96,244 };
    byte_vec_t pk { 3,60,72,68,23,41,86,127,67,6,212,178,244,90,73,148,58,188,206,139,14,166,72,162,185,134,15,142,221,157,233,106,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 36 ") {
    byte_vec_t msg { 16,64,180,227 };
    byte_vec_t sig { 11,250,17,115,125,2,119,76,201,139,199,242,85,3,45,222,193,19,136,128,218,180,179,252,205,129,119,79,64,176,237,243,47,244,194,28,189,174,80,26,34,35,86,163,45,7,130,134,114,200,151,41,222,171,57,72,153,168,197,237,79,123,167,104 };
    byte_vec_t pk { 4,24,255,128,212,12,195,67,183,92,85,89,129,195,173,97,191,218,112,33,110,202,122,73,109,37,23,144,108,215,155,231,53,157,162,196,111,196,244,212,64,105,157,34,223,93,144,177,200,103,212,16,30,35,50,155,9,161,98,173,78,74,223,18,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 36 ") {
    byte_vec_t msg { 138,101,235,97 };
    byte_vec_t sig { 118,98,65,63,144,61,205,178,226,120,216,231,111,240,162,115,45,16,96,180,216,130,65,23,243,145,50,72,189,224,45,195,70,212,183,34,144,209,107,98,246,235,110,9,168,120,190,21,42,125,184,234,173,73,71,191,198,196,77,29,212,196,240,120 };
    byte_vec_t pk { 4,54,131,107,214,125,96,234,30,199,44,252,110,247,35,83,16,146,15,125,83,231,186,18,208,138,252,234,89,4,155,146,139,34,62,221,185,185,198,102,212,39,251,226,245,234,36,3,102,221,112,60,53,98,38,136,65,49,190,62,253,44,173,209,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 36 ") {
    byte_vec_t msg { 113,147,235,200 };
    byte_vec_t sig { 92,23,116,72,83,158,122,121,212,73,30,211,77,164,118,9,52,228,114,174,85,51,122,182,23,111,115,219,238,250,22,60,233,169,213,88,73,7,6,249,176,75,27,101,123,27,147,190,55,255,94,179,79,118,188,98,215,41,129,145,27,113,111,8 };
    byte_vec_t pk { 2,1,118,123,174,145,121,248,247,140,75,134,233,52,228,68,135,189,240,123,107,1,54,212,134,227,110,109,95,244,208,243,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 36 ") {
    byte_vec_t msg { 18,166,41,45 };
    byte_vec_t sig { 127,40,108,52,178,89,43,194,15,206,105,42,9,138,186,24,255,47,158,211,221,202,159,64,7,16,76,200,137,98,215,250,217,123,213,45,207,120,148,158,195,73,251,7,11,167,3,184,46,36,254,249,203,61,187,139,33,167,201,233,73,25,14,5 };
    byte_vec_t pk { 3,138,8,115,64,143,39,84,81,203,216,57,66,61,247,184,144,145,119,163,86,183,72,223,186,8,8,123,239,24,209,241,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 37 ") {
    byte_vec_t msg { 251,63,156,7 };
    byte_vec_t sig { 220,76,22,41,229,164,86,13,18,121,153,49,237,213,200,15,103,86,107,182,176,230,54,193,163,202,77,17,180,216,93,119,104,215,127,193,229,69,38,175,245,224,23,136,105,241,44,238,78,109,82,220,236,163,16,111,87,6,153,53,244,145,5,62 };
    byte_vec_t pk { 4,239,63,247,109,239,136,143,23,127,55,125,203,233,132,245,60,56,124,170,51,102,252,184,3,140,34,58,45,108,72,40,199,255,151,117,63,242,117,192,128,28,206,149,194,95,82,210,25,196,59,248,69,233,35,225,201,212,6,53,164,1,222,157,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 37 ") {
    byte_vec_t msg { 144,142,204,154 };
    byte_vec_t sig { 174,35,94,66,110,86,181,20,238,43,59,3,246,240,205,74,99,107,54,171,124,102,160,116,105,62,254,189,221,2,117,26,95,150,218,214,145,130,207,185,32,253,98,124,12,190,143,123,33,240,107,144,49,65,149,161,239,102,160,225,80,34,8,73 };
    byte_vec_t pk { 4,135,27,161,96,217,165,13,31,162,34,52,136,92,32,145,123,28,64,18,191,248,116,143,248,158,189,172,141,211,130,160,234,88,234,139,122,200,122,148,121,93,151,6,189,180,221,240,194,111,15,123,189,59,184,74,28,229,33,10,212,141,220,118,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 37 ") {
    byte_vec_t msg { 182,81,184,94 };
    byte_vec_t sig { 114,67,177,52,88,121,134,198,185,206,82,26,24,88,236,119,84,59,5,232,3,115,80,242,6,224,125,123,137,146,252,246,197,219,241,132,220,243,2,133,32,57,235,231,6,169,72,187,172,21,106,7,186,177,158,195,169,241,252,3,245,186,241,171 };
    byte_vec_t pk { 2,211,198,48,229,0,246,170,108,95,110,63,209,176,246,9,227,242,94,248,120,89,171,135,189,62,137,177,54,208,173,37,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 37 ") {
    byte_vec_t msg { 95,185,149,79 };
    byte_vec_t sig { 178,242,88,147,91,193,192,115,150,90,237,90,228,110,113,87,133,72,169,90,240,112,33,186,225,178,20,166,44,237,195,45,138,143,88,167,244,92,216,152,16,238,147,40,80,49,158,187,107,77,184,105,114,250,49,184,200,236,234,139,77,95,153,109 };
    byte_vec_t pk { 3,81,100,100,5,48,68,146,149,7,179,228,247,106,159,70,152,75,186,80,215,91,147,42,18,75,130,244,19,144,200,125,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 38 ") {
    byte_vec_t msg { 188,248,126,118 };
    byte_vec_t sig { 170,235,40,199,182,156,255,165,112,12,99,152,151,63,171,173,147,248,170,254,202,109,108,21,201,192,225,126,52,211,172,220,26,139,106,159,51,92,121,102,137,212,176,174,97,187,177,249,59,230,92,235,132,133,167,14,133,249,3,228,120,254,14,177 };
    byte_vec_t pk { 4,24,210,233,17,208,3,141,215,186,92,142,239,1,224,195,39,212,87,45,109,46,210,176,215,202,146,102,200,179,36,251,134,120,237,210,0,214,197,40,236,30,173,61,86,125,50,137,159,240,7,189,55,172,32,184,64,204,218,84,87,180,11,138,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 38 ") {
    byte_vec_t msg { 162,45,2,93 };
    byte_vec_t sig { 89,2,13,203,147,221,223,215,24,69,134,21,3,105,161,150,239,187,98,122,134,112,32,57,169,154,177,200,188,250,61,235,248,30,156,255,37,94,204,162,200,162,229,95,208,200,81,183,135,219,119,213,47,121,56,250,122,193,210,38,126,235,176,223 };
    byte_vec_t pk { 4,44,44,187,70,233,142,181,131,96,248,60,221,254,24,44,222,222,29,168,217,104,222,189,50,248,69,196,198,20,47,203,40,127,170,39,111,228,60,234,69,65,127,38,99,216,197,141,140,75,205,32,177,71,16,131,162,134,82,22,117,230,178,218,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 38 ") {
    byte_vec_t msg { 239,38,248,122 };
    byte_vec_t sig { 240,114,50,100,191,146,228,40,2,228,204,124,75,224,28,90,26,44,179,232,123,117,114,60,217,106,96,243,203,23,182,247,2,163,61,6,147,12,112,253,199,163,120,74,211,150,85,129,23,136,115,170,34,161,128,232,118,112,227,133,124,253,240,194 };
    byte_vec_t pk { 2,73,14,155,78,60,58,251,229,48,232,154,65,12,168,243,189,8,238,176,136,2,235,95,245,55,238,38,44,220,224,251,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 38 ") {
    byte_vec_t msg { 99,128,219,118 };
    byte_vec_t sig { 118,110,98,37,50,1,53,83,110,67,33,7,150,70,128,85,197,75,0,186,159,13,193,68,114,2,50,184,18,119,24,4,240,196,242,162,32,160,67,126,16,71,75,26,135,178,17,94,246,211,247,119,127,171,10,152,123,221,16,21,37,12,24,116 };
    byte_vec_t pk { 3,189,249,154,173,201,45,76,143,98,58,141,8,243,47,38,192,169,43,97,27,162,117,59,173,181,226,96,131,197,96,223,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 39 ") {
    byte_vec_t msg { 221,250,75,100 };
    byte_vec_t sig { 181,158,22,221,37,222,32,185,124,215,213,27,237,32,178,254,100,18,170,23,108,214,88,27,74,94,59,68,228,105,38,240,252,242,15,179,44,1,246,137,109,96,154,68,199,212,70,153,175,217,202,130,152,36,174,197,148,83,159,234,15,96,148,188 };
    byte_vec_t pk { 4,233,181,59,193,29,49,62,100,251,119,84,121,147,205,98,66,52,76,246,197,78,212,121,61,192,192,71,169,122,38,255,174,188,42,7,253,111,107,246,132,136,23,184,254,234,252,90,118,165,199,253,223,183,151,210,205,249,6,126,15,65,53,166,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 39 ") {
    byte_vec_t msg { 187,110,16,135 };
    byte_vec_t sig { 255,247,164,99,49,33,177,144,23,34,133,16,190,6,60,111,244,66,196,153,203,46,119,219,63,89,125,40,149,20,72,237,224,90,149,113,85,62,7,129,127,218,126,233,233,141,39,61,30,13,148,115,86,85,40,243,107,232,173,18,193,157,12,244 };
    byte_vec_t pk { 4,113,142,6,17,38,9,212,61,99,111,107,249,22,146,112,240,250,66,10,72,239,187,93,50,130,50,202,152,4,68,47,92,105,105,143,126,173,150,166,6,223,229,206,121,42,181,40,43,237,34,236,8,28,254,202,76,73,114,248,121,77,32,191,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 39 ") {
    byte_vec_t msg { 31,238,233,247 };
    byte_vec_t sig { 189,226,133,47,35,107,31,171,25,83,27,143,116,158,228,34,165,120,252,206,7,216,254,176,151,3,116,70,39,247,124,200,87,248,18,178,227,129,36,64,85,239,95,159,113,250,214,132,107,182,237,121,49,27,48,109,106,248,98,61,108,31,188,250 };
    byte_vec_t pk { 3,64,21,203,231,51,204,70,108,92,116,255,1,41,92,105,183,30,127,236,187,235,55,144,143,48,118,223,31,170,173,102,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 39 ") {
    byte_vec_t msg { 205,203,78,237 };
    byte_vec_t sig { 4,217,101,223,199,239,213,194,196,100,177,222,105,139,144,63,27,105,60,147,241,98,194,109,8,106,54,64,22,67,169,100,216,254,170,180,155,56,16,57,222,32,52,240,173,218,197,214,145,137,135,88,166,165,128,168,5,164,195,146,188,174,184,10 };
    byte_vec_t pk { 3,70,109,177,110,19,128,103,12,174,143,222,217,50,23,227,34,45,226,229,185,143,245,209,174,192,73,175,70,105,117,9,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 40 ") {
    byte_vec_t msg { 76,0,163,107 };
    byte_vec_t sig { 9,0,142,239,92,219,150,229,253,125,157,34,159,139,1,157,227,177,114,145,78,154,212,15,78,90,65,90,83,67,236,211,216,127,68,157,98,212,237,192,198,1,185,196,11,44,29,143,0,113,42,86,26,90,242,186,24,241,197,51,174,47,158,244 };
    byte_vec_t pk { 4,239,132,32,122,216,28,74,242,111,50,83,186,130,68,177,131,222,145,184,41,160,98,179,180,103,127,173,149,100,94,180,89,35,21,179,80,90,223,56,3,79,93,18,225,225,217,59,16,202,3,200,88,152,4,124,190,29,87,158,117,13,60,122,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 40 ") {
    byte_vec_t msg { 151,15,250,157 };
    byte_vec_t sig { 26,2,46,129,129,45,210,14,135,41,28,144,87,220,95,249,72,156,208,2,110,24,64,176,77,67,96,74,14,61,111,149,129,74,55,15,189,250,89,163,244,145,221,218,198,170,153,38,54,177,204,45,195,149,117,123,125,33,89,128,162,201,245,122 };
    byte_vec_t pk { 4,79,27,196,77,54,75,190,103,184,206,133,178,108,212,58,27,110,171,78,179,98,228,35,198,186,147,187,144,21,108,81,248,82,76,13,45,118,51,61,249,0,158,140,85,182,133,5,34,173,203,220,41,18,60,233,197,118,108,5,7,128,12,1,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 40 ") {
    byte_vec_t msg { 14,215,168,207 };
    byte_vec_t sig { 225,15,248,42,191,157,55,27,195,145,152,109,217,121,190,179,131,111,250,0,154,251,152,165,177,137,64,50,25,234,78,139,153,151,250,208,132,133,29,170,71,101,120,30,208,3,23,42,145,180,24,6,187,166,216,226,217,175,135,213,24,88,36,170 };
    byte_vec_t pk { 3,23,173,19,68,187,71,129,42,72,91,185,250,84,216,86,137,148,133,153,58,179,123,221,99,115,145,9,139,155,150,175,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 40 ") {
    byte_vec_t msg { 156,172,184,68 };
    byte_vec_t sig { 86,165,65,82,93,34,120,245,135,177,215,65,138,234,110,206,26,178,252,96,210,124,18,146,99,108,179,237,156,112,217,102,212,162,76,41,141,101,152,254,241,161,120,99,177,36,54,138,44,241,35,127,55,94,47,251,142,194,80,159,171,12,199,28 };
    byte_vec_t pk { 3,2,129,65,11,11,205,246,8,130,168,125,228,99,171,8,174,246,165,52,202,119,2,18,156,214,168,67,180,18,138,166,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 41 ") {
    byte_vec_t msg { 137,30,164,158 };
    byte_vec_t sig { 202,119,252,106,33,44,208,112,152,116,37,12,18,253,141,151,248,30,37,105,67,25,250,61,221,88,170,194,8,158,221,47,140,146,253,44,102,113,220,42,10,127,5,166,90,52,40,66,142,120,11,121,210,224,71,229,28,191,50,176,207,78,218,204 };
    byte_vec_t pk { 4,37,114,248,118,92,77,116,8,167,34,139,10,89,30,241,170,164,195,4,230,194,167,228,110,145,200,182,253,242,193,219,181,112,213,66,6,235,132,83,49,2,75,218,107,22,222,146,36,135,225,103,160,244,163,205,115,104,39,76,185,27,140,150,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 41 ") {
    byte_vec_t msg { 164,231,91,7 };
    byte_vec_t sig { 191,173,241,139,52,40,167,66,21,242,91,228,103,174,14,192,244,9,5,166,153,53,224,23,13,250,136,214,205,54,23,33,69,80,66,27,108,248,116,232,5,156,68,213,30,243,130,50,16,85,97,111,7,108,216,151,51,252,144,141,175,208,42,49 };
    byte_vec_t pk { 4,80,8,3,183,233,154,37,26,196,1,192,159,161,43,198,49,30,235,239,220,40,110,28,92,24,19,156,193,85,106,165,251,246,169,55,195,93,189,238,38,57,49,21,19,237,145,148,186,202,144,186,15,53,213,198,139,196,222,245,82,190,182,208,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 41 ") {
    byte_vec_t msg { 134,42,241,42 };
    byte_vec_t sig { 130,184,31,83,140,161,11,148,217,61,44,59,60,220,222,145,103,25,104,111,134,53,158,180,24,136,124,135,251,146,120,223,83,254,78,244,183,14,143,84,21,133,75,142,238,167,102,218,156,37,164,199,4,146,251,204,49,56,251,55,200,159,51,211 };
    byte_vec_t pk { 3,209,110,77,138,135,52,156,144,19,12,237,28,211,122,227,173,46,24,111,9,144,176,172,104,235,73,45,198,167,183,10,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 41 ") {
    byte_vec_t msg { 75,103,248,32 };
    byte_vec_t sig { 79,130,109,58,215,109,80,13,68,247,180,178,108,33,130,154,95,146,13,252,79,20,76,88,96,141,198,32,178,247,138,157,215,234,226,5,102,248,10,42,205,202,66,53,180,93,37,23,72,239,197,137,216,68,109,160,159,102,165,24,71,48,120,160 };
    byte_vec_t pk { 2,141,27,106,123,169,91,187,84,58,33,106,150,17,15,213,224,230,211,0,5,100,112,24,163,35,165,229,7,141,67,125,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 42 ") {
    byte_vec_t msg { 60,148,221,106 };
    byte_vec_t sig { 179,186,56,203,181,148,173,208,104,96,223,203,109,30,161,107,105,86,72,115,104,145,23,23,88,191,47,98,211,74,143,14,43,5,154,134,37,143,240,71,3,234,5,44,207,246,150,209,16,80,139,82,180,185,63,181,219,32,33,125,20,18,218,122 };
    byte_vec_t pk { 4,61,54,169,201,157,124,244,250,17,113,19,71,68,133,61,133,11,55,208,132,186,47,136,141,131,178,143,162,174,93,119,59,178,86,82,102,65,217,44,3,111,127,254,14,182,203,132,181,197,64,176,112,194,118,137,95,120,154,88,4,21,18,117,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 42 ") {
    byte_vec_t msg { 27,53,148,129 };
    byte_vec_t sig { 129,96,193,48,18,215,247,160,24,61,25,27,45,60,6,51,237,183,239,30,245,63,20,33,196,184,74,127,49,237,11,154,253,12,11,121,27,44,97,43,126,49,238,192,94,65,79,197,210,118,173,240,159,180,86,174,61,98,6,214,209,155,166,108 };
    byte_vec_t pk { 4,131,138,95,3,181,106,242,106,95,29,83,245,231,139,252,57,221,218,189,62,147,57,155,54,103,234,6,93,171,76,80,67,141,36,73,182,216,35,71,123,24,47,77,123,228,86,51,104,8,175,90,217,127,169,137,236,249,222,66,128,129,90,98,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 42 ") {
    byte_vec_t msg { 24,79,95,248 };
    byte_vec_t sig { 32,11,245,79,190,85,175,83,199,125,117,196,212,69,216,74,49,132,97,64,74,51,64,230,146,58,155,248,98,108,65,2,234,35,162,26,234,65,248,158,194,130,213,119,16,89,93,224,26,5,99,20,26,193,96,215,170,90,93,194,105,208,207,82 };
    byte_vec_t pk { 2,123,240,117,230,231,65,169,11,197,210,31,206,234,173,31,122,129,105,226,34,217,88,119,154,78,169,103,209,159,23,119,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 42 ") {
    byte_vec_t msg { 120,23,132,37 };
    byte_vec_t sig { 121,86,188,164,117,66,196,17,78,88,103,10,99,220,155,168,28,1,116,192,77,195,76,94,112,208,80,60,94,12,24,27,30,0,27,18,200,212,232,89,126,245,213,46,69,33,192,18,125,23,119,187,206,232,178,6,160,11,153,76,120,219,174,177 };
    byte_vec_t pk { 3,102,163,39,147,85,190,152,165,118,105,174,1,111,43,43,81,169,60,90,204,20,24,243,69,35,158,53,184,156,161,12,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 43 ") {
    byte_vec_t msg { 228,173,75,202 };
    byte_vec_t sig { 113,44,144,217,71,37,120,187,166,241,89,73,15,205,162,147,236,87,240,251,34,18,60,156,122,106,108,238,219,252,93,95,220,91,251,47,176,87,62,231,148,108,150,134,247,144,164,87,197,102,47,55,0,80,25,211,39,177,50,122,50,38,152,163 };
    byte_vec_t pk { 4,123,129,247,79,105,85,205,77,160,242,45,90,95,251,108,63,56,26,6,12,242,233,131,210,228,74,224,196,252,145,79,136,127,203,66,103,28,203,66,66,30,52,208,15,250,7,166,243,133,154,173,184,214,60,198,224,90,165,218,21,212,19,196,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 43 ") {
    byte_vec_t msg { 39,20,34,222 };
    byte_vec_t sig { 241,53,209,21,226,105,144,61,122,196,110,134,249,132,219,24,65,138,49,226,22,115,58,244,169,19,57,114,210,74,82,24,53,218,52,94,150,172,161,166,44,19,167,238,176,16,40,80,183,245,147,203,83,76,178,173,114,45,193,71,210,97,10,228 };
    byte_vec_t pk { 4,235,0,23,193,165,17,64,103,147,178,178,137,38,156,119,228,20,63,172,105,171,24,108,10,202,65,34,158,102,199,238,139,57,100,230,21,86,208,58,173,118,55,238,158,25,233,86,125,75,238,218,8,155,47,194,179,208,196,72,149,65,191,99,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 43 ") {
    byte_vec_t msg { 160,158,7,21 };
    byte_vec_t sig { 121,159,101,188,158,213,91,6,144,255,82,64,234,87,220,61,254,31,195,1,234,180,133,236,115,124,3,152,114,244,240,127,100,41,108,253,11,3,250,102,188,111,124,93,10,240,71,64,188,84,81,254,244,249,167,227,243,130,177,121,108,101,23,229 };
    byte_vec_t pk { 3,163,70,148,209,101,197,27,159,203,18,38,14,236,213,148,178,157,26,242,26,74,156,182,98,202,184,114,185,12,20,172,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 43 ") {
    byte_vec_t msg { 6,62,16,1 };
    byte_vec_t sig { 191,159,80,209,163,184,52,14,219,155,41,70,40,28,110,21,93,149,137,227,137,201,235,138,106,40,123,27,178,96,114,53,193,212,76,115,72,27,115,224,88,71,36,148,188,38,64,88,23,10,30,6,161,188,34,97,32,203,17,68,235,167,211,74 };
    byte_vec_t pk { 3,110,246,186,214,6,189,38,255,240,231,59,36,195,156,165,32,129,35,125,219,29,111,180,198,198,254,165,46,205,237,199,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 44 ") {
    byte_vec_t msg { 4,110,113,203 };
    byte_vec_t sig { 108,74,254,76,57,96,250,254,167,234,198,149,228,170,13,155,75,15,183,155,55,210,50,193,150,201,45,125,252,206,151,235,170,101,90,10,204,140,19,12,58,255,188,119,244,200,194,162,69,98,38,180,55,231,3,159,193,205,27,179,191,171,80,180 };
    byte_vec_t pk { 4,252,138,70,141,182,209,253,209,191,154,12,225,227,213,210,93,183,59,194,27,47,217,58,52,233,74,231,184,246,220,214,188,238,0,48,76,21,220,222,234,20,68,235,252,223,10,93,106,106,137,33,87,244,122,86,69,110,88,143,78,120,228,241,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 44 ") {
    byte_vec_t msg { 5,191,11,45 };
    byte_vec_t sig { 72,32,188,33,227,201,116,180,222,57,107,102,223,121,112,220,133,194,54,151,177,67,212,115,147,206,139,4,128,208,179,25,163,161,87,222,100,35,120,57,221,203,92,197,115,44,154,158,236,64,0,60,59,98,138,59,98,32,220,100,92,201,65,206 };
    byte_vec_t pk { 4,81,78,192,237,125,67,110,250,19,56,135,30,227,244,90,55,144,56,251,236,186,233,254,141,36,156,4,149,3,9,108,114,70,122,169,32,78,70,253,197,160,103,178,42,136,168,203,30,67,81,41,236,132,127,13,108,60,157,14,5,16,104,78,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 44 ") {
    byte_vec_t msg { 206,18,122,29 };
    byte_vec_t sig { 227,16,118,97,230,167,245,212,2,10,26,222,232,63,236,109,246,174,193,40,227,138,113,208,83,162,119,40,69,209,88,169,114,26,144,55,91,233,97,178,18,82,134,30,244,242,248,229,239,167,38,131,216,77,218,66,100,206,39,172,14,63,53,10 };
    byte_vec_t pk { 3,59,112,156,129,52,135,204,250,101,222,142,119,106,161,172,176,129,128,14,19,174,161,39,218,59,184,82,113,109,207,219,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 44 ") {
    byte_vec_t msg { 71,67,100,122 };
    byte_vec_t sig { 241,95,228,118,142,118,150,139,195,35,109,210,63,114,202,121,252,64,182,60,210,90,231,6,93,51,63,135,233,141,137,227,217,91,87,126,92,133,8,249,26,103,78,172,143,173,88,108,90,90,107,219,110,16,70,188,66,146,117,162,124,107,35,58 };
    byte_vec_t pk { 2,193,252,114,216,128,124,160,95,133,102,41,236,188,72,13,133,3,216,150,56,127,40,110,53,11,69,99,154,69,130,234,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 45 ") {
    byte_vec_t msg { 47,159,227,122 };
    byte_vec_t sig { 103,16,94,54,110,209,20,106,157,35,57,155,80,144,168,9,107,117,50,218,127,74,60,5,63,202,156,144,159,167,194,34,135,196,31,103,70,138,235,246,228,209,188,101,223,138,55,46,89,127,29,18,201,50,3,33,174,26,18,173,14,63,177,97 };
    byte_vec_t pk { 4,138,148,191,142,249,241,9,65,54,50,143,134,247,146,0,200,205,33,5,30,73,23,13,30,222,187,66,152,71,168,29,237,25,218,163,180,63,103,242,117,182,158,83,134,248,47,2,104,162,40,82,216,83,30,117,8,127,14,28,24,5,115,193,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 45 ") {
    byte_vec_t msg { 14,27,161,235 };
    byte_vec_t sig { 5,95,177,70,207,19,253,22,55,176,29,190,68,111,44,78,94,74,39,108,55,42,167,8,85,84,143,157,49,102,13,53,234,78,8,111,171,251,43,129,128,143,26,37,234,45,175,228,109,79,151,211,23,150,53,240,99,117,99,93,173,141,101,171 };
    byte_vec_t pk { 4,200,232,107,178,160,151,185,241,154,255,30,98,100,95,34,247,157,65,3,242,240,220,219,54,38,243,244,34,34,80,29,18,222,78,93,205,176,146,25,236,64,157,178,161,244,148,179,220,27,89,83,171,171,98,40,213,239,138,117,31,90,77,186,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 45 ") {
    byte_vec_t msg { 61,60,19,1 };
    byte_vec_t sig { 37,6,17,190,80,198,186,157,186,96,166,182,100,27,123,35,192,251,105,114,157,108,228,81,185,63,213,9,189,16,216,181,230,114,135,77,39,20,68,42,78,151,250,143,180,170,132,131,236,215,212,163,119,215,199,175,145,5,147,3,105,24,7,68 };
    byte_vec_t pk { 2,110,141,9,67,27,219,242,65,122,100,102,96,255,16,213,170,254,74,31,162,69,218,142,83,134,168,68,113,56,205,8,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 45 ") {
    byte_vec_t msg { 34,174,25,67 };
    byte_vec_t sig { 246,181,233,238,51,39,159,197,207,55,128,194,145,16,228,157,222,235,184,77,235,218,48,130,119,77,111,98,2,206,166,27,113,121,139,54,48,75,10,157,31,75,92,8,133,185,231,98,7,46,58,236,21,59,204,209,171,219,135,161,184,7,123,186 };
    byte_vec_t pk { 3,67,116,198,137,31,106,232,91,68,7,62,65,5,252,105,154,106,135,174,3,23,8,234,255,219,4,94,102,121,3,35,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 46 ") {
    byte_vec_t msg { 173,115,14,160 };
    byte_vec_t sig { 35,119,151,166,9,183,103,168,178,97,32,56,238,45,116,14,171,151,86,3,167,246,61,79,104,70,189,15,62,62,31,186,40,196,120,7,130,151,56,26,180,188,202,9,132,60,56,163,199,186,172,68,122,78,72,151,59,107,180,74,70,229,101,214 };
    byte_vec_t pk { 4,115,27,68,227,20,80,48,175,54,132,13,146,110,85,145,15,216,138,63,133,41,74,195,87,204,244,65,47,226,222,184,11,230,174,176,214,242,71,117,110,22,37,241,144,216,164,22,156,60,226,198,54,242,213,40,9,164,35,188,18,234,252,86,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 46 ") {
    byte_vec_t msg { 37,190,35,177 };
    byte_vec_t sig { 5,89,116,221,121,61,186,222,76,143,208,122,229,67,89,34,213,118,156,50,135,249,211,206,151,235,80,135,131,48,204,52,177,103,221,145,104,253,84,216,80,93,40,87,44,188,158,70,106,153,190,177,182,50,137,96,161,48,79,66,116,84,39,174 };
    byte_vec_t pk { 4,149,18,122,204,117,180,12,241,29,150,240,106,184,55,193,170,195,251,87,238,116,46,157,183,97,133,10,20,172,215,49,28,77,110,128,245,139,125,219,39,212,66,93,214,190,7,25,250,93,225,218,124,183,50,249,106,133,229,24,62,128,2,100,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 46 ") {
    byte_vec_t msg { 21,183,158,129 };
    byte_vec_t sig { 186,225,84,174,232,102,166,211,252,137,204,153,75,83,160,255,87,20,205,223,74,154,161,159,235,64,57,145,200,62,122,30,155,157,251,204,134,119,195,161,55,139,123,39,133,241,72,239,141,45,48,130,56,7,211,213,45,29,249,104,249,231,142,178 };
    byte_vec_t pk { 3,107,63,37,139,205,142,242,95,22,163,109,94,75,92,79,8,48,14,215,214,74,24,218,85,24,236,1,175,33,46,237,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 46 ") {
    byte_vec_t msg { 112,127,193,183 };
    byte_vec_t sig { 186,253,230,29,4,57,105,254,193,209,29,139,251,70,14,214,40,46,54,38,129,160,41,144,163,199,194,31,98,215,144,170,245,76,46,61,9,79,3,205,45,42,14,229,7,61,174,67,204,30,154,143,237,141,216,39,121,89,43,36,36,21,103,176 };
    byte_vec_t pk { 3,146,184,9,134,210,70,247,76,180,25,172,215,178,248,183,1,161,44,19,101,69,212,8,30,225,140,13,220,105,222,188,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 47 ") {
    byte_vec_t msg { 89,209,176,204 };
    byte_vec_t sig { 135,176,37,197,183,194,225,97,8,188,156,181,95,190,215,58,30,80,220,207,183,136,229,79,91,232,224,160,235,17,218,60,78,139,24,238,34,45,231,2,49,62,125,186,77,44,205,90,45,47,238,207,189,204,61,187,61,63,94,50,39,202,197,63 };
    byte_vec_t pk { 4,35,77,147,25,174,61,207,148,137,108,63,251,215,247,59,77,249,122,127,128,214,193,146,134,92,242,130,216,149,16,62,191,0,63,144,221,127,254,246,220,147,91,26,203,88,253,136,101,171,100,135,98,43,51,108,191,212,28,40,228,172,106,247,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 47 ") {
    byte_vec_t msg { 144,34,143,145 };
    byte_vec_t sig { 16,84,84,80,230,199,85,227,74,6,133,123,52,6,130,180,27,233,125,48,140,220,96,242,166,65,2,51,125,230,26,38,170,93,213,75,65,165,171,14,130,15,249,239,101,254,250,23,127,65,49,180,164,134,185,196,32,26,244,164,59,193,184,7 };
    byte_vec_t pk { 4,75,104,66,230,9,56,61,184,200,132,236,253,153,88,22,179,56,113,83,43,190,219,91,169,43,116,254,93,32,151,15,119,151,158,10,181,158,133,217,81,45,172,31,128,205,50,157,168,58,188,173,177,44,115,216,187,197,25,88,175,76,104,85,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 47 ") {
    byte_vec_t msg { 246,196,45,65 };
    byte_vec_t sig { 247,69,104,198,190,181,98,113,164,107,106,136,240,177,158,206,63,109,82,253,229,11,143,25,143,4,130,69,7,200,92,76,120,112,157,109,178,233,218,53,182,251,124,110,219,81,44,204,44,161,94,23,253,35,93,126,245,201,43,93,180,38,218,118 };
    byte_vec_t pk { 3,189,93,255,171,192,172,222,227,201,148,212,105,63,191,246,27,9,5,232,34,196,205,218,192,172,59,143,92,70,104,94,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 47 ") {
    byte_vec_t msg { 146,31,104,57 };
    byte_vec_t sig { 89,146,218,182,16,40,73,236,44,202,99,197,206,21,162,23,62,15,168,179,203,20,97,99,66,60,140,182,150,173,133,149,181,12,170,8,66,18,107,115,70,13,165,182,179,232,13,171,58,149,57,120,149,216,74,239,186,223,21,215,68,253,224,177 };
    byte_vec_t pk { 2,79,79,90,192,43,197,221,149,27,225,41,231,142,131,175,221,127,104,83,217,157,51,112,222,68,34,14,176,40,27,79,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 48 ") {
    byte_vec_t msg { 168,94,44,119 };
    byte_vec_t sig { 160,53,79,130,76,160,190,133,24,21,155,133,139,224,195,228,193,9,71,60,81,189,245,233,51,160,25,2,229,167,160,84,248,57,129,181,133,209,243,45,201,243,185,76,87,205,69,31,183,51,85,151,180,11,32,86,208,123,126,47,34,224,96,95 };
    byte_vec_t pk { 4,214,50,56,129,87,93,56,19,156,218,233,69,122,45,154,154,195,215,128,200,20,52,199,176,152,188,207,17,151,91,153,63,23,246,42,240,116,212,122,179,149,36,93,45,59,51,229,54,229,100,200,142,163,46,1,87,38,117,208,214,43,136,122,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 48 ") {
    byte_vec_t msg { 179,232,138,102 };
    byte_vec_t sig { 250,103,196,73,14,189,233,10,79,187,71,147,162,99,248,133,31,129,80,248,243,168,141,93,121,180,178,190,101,37,83,135,172,141,39,194,49,234,158,199,248,90,87,51,113,8,81,215,96,59,61,246,70,175,9,89,147,74,219,250,135,199,169,14 };
    byte_vec_t pk { 4,106,103,232,231,29,197,103,171,108,226,162,51,128,220,27,225,131,145,223,158,105,80,161,56,168,184,233,118,59,94,206,43,180,26,99,198,54,21,49,196,90,180,186,205,155,139,233,13,118,117,201,15,164,250,194,135,53,184,2,113,104,38,54,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 48 ") {
    byte_vec_t msg { 39,13,209,32 };
    byte_vec_t sig { 244,198,197,143,155,207,172,61,28,166,116,30,44,141,252,224,209,79,89,215,42,81,62,234,87,245,141,162,17,209,138,144,44,79,150,95,255,51,121,171,102,150,31,142,74,177,2,39,65,158,1,100,9,216,33,127,125,90,109,238,187,126,198,29 };
    byte_vec_t pk { 3,74,101,190,227,227,45,133,227,76,14,116,57,238,17,96,83,5,13,177,255,72,92,178,176,122,202,49,233,166,30,237,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 48 ") {
    byte_vec_t msg { 148,100,186,192 };
    byte_vec_t sig { 165,91,50,220,63,66,1,3,167,227,51,50,98,97,251,214,94,18,218,113,52,96,191,65,46,39,5,44,27,70,92,93,254,54,94,236,26,151,102,150,37,175,35,16,166,121,175,66,131,181,224,203,240,114,35,14,72,50,98,174,160,157,193,6 };
    byte_vec_t pk { 3,131,176,241,53,127,14,194,32,66,233,192,152,205,10,12,44,215,196,64,199,189,208,202,11,181,206,14,146,250,95,37,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 49 ") {
    byte_vec_t msg { 107,237,44,91 };
    byte_vec_t sig { 47,249,134,200,138,29,13,74,169,125,103,2,178,98,102,55,158,198,35,195,83,227,7,202,84,103,7,82,69,80,224,244,166,249,204,219,153,215,112,123,45,38,251,236,101,172,163,91,54,249,13,73,32,79,184,251,223,233,53,231,40,242,18,48 };
    byte_vec_t pk { 4,135,129,66,72,83,192,235,90,149,204,33,15,14,14,198,170,143,54,30,90,106,3,82,123,21,94,127,168,110,72,41,196,92,57,123,235,216,12,2,66,5,167,183,42,11,3,58,24,123,102,105,5,32,240,88,28,3,38,122,55,167,209,138,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 49 ") {
    byte_vec_t msg { 216,197,85,41 };
    byte_vec_t sig { 51,50,148,183,59,225,140,238,60,132,3,200,11,247,111,150,208,35,72,16,48,174,94,21,233,94,235,211,216,205,69,130,185,111,61,65,227,195,56,51,125,94,89,145,181,67,226,136,137,42,220,177,213,68,190,149,153,141,240,95,186,187,149,36 };
    byte_vec_t pk { 4,111,76,127,27,184,182,13,237,36,164,151,44,62,214,70,59,215,182,199,137,102,60,216,170,180,88,0,19,186,232,13,144,213,214,128,96,129,96,222,168,39,53,211,37,197,56,52,76,22,63,69,83,206,210,201,237,170,206,209,97,220,116,39,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 49 ") {
    byte_vec_t msg { 83,192,204,161 };
    byte_vec_t sig { 31,81,72,120,133,133,126,190,108,166,65,202,35,102,63,92,207,68,99,77,35,197,83,52,213,133,81,57,139,89,102,62,152,202,81,235,205,166,130,196,176,29,250,193,32,225,225,107,214,40,99,14,189,124,134,196,1,183,182,163,27,102,240,249 };
    byte_vec_t pk { 3,158,175,223,247,100,42,203,253,0,71,57,238,228,176,37,192,199,17,115,40,152,166,78,133,103,224,168,137,28,202,206,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 49 ") {
    byte_vec_t msg { 47,74,206,193 };
    byte_vec_t sig { 125,151,39,28,0,3,111,131,71,213,167,206,121,183,158,217,183,76,64,45,1,100,138,231,127,164,250,98,148,14,203,95,220,223,93,49,4,51,36,124,109,228,112,160,137,76,162,66,31,163,202,228,149,195,121,183,227,63,116,234,4,147,173,197 };
    byte_vec_t pk { 3,228,31,60,223,193,124,246,165,123,0,211,9,249,57,211,205,220,100,41,105,130,79,81,193,202,27,139,239,167,202,239,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 50 ") {
    byte_vec_t msg { 153,85,25,142 };
    byte_vec_t sig { 162,215,154,120,28,141,150,71,26,19,226,115,229,170,247,225,165,167,207,207,222,211,13,90,118,80,192,175,65,102,41,32,254,66,199,233,94,179,169,235,212,228,251,30,208,163,41,53,103,170,18,215,110,72,23,74,219,185,149,109,150,8,235,227 };
    byte_vec_t pk { 4,155,116,221,209,234,160,114,144,58,149,53,227,90,141,244,233,92,188,171,94,137,94,38,182,198,96,195,60,83,163,190,67,105,149,169,62,118,25,176,10,170,40,235,85,231,170,93,71,6,246,12,98,79,231,8,1,140,37,216,52,73,55,141,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 50 ") {
    byte_vec_t msg { 89,4,28,192 };
    byte_vec_t sig { 202,253,212,152,201,39,249,79,75,171,203,82,183,173,5,15,170,175,206,189,113,246,65,81,173,253,176,175,29,166,138,125,149,221,30,210,181,170,91,10,80,41,233,193,197,175,247,153,23,167,128,172,248,78,48,39,162,172,66,79,62,112,120,211 };
    byte_vec_t pk { 4,121,111,245,210,190,114,201,8,49,123,30,77,171,84,165,186,122,5,40,236,44,23,190,18,189,25,169,157,116,213,187,202,41,86,219,159,115,127,245,11,181,102,202,144,159,143,123,233,149,195,188,250,249,247,50,208,226,178,252,3,102,110,226,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 50 ") {
    byte_vec_t msg { 188,248,107,33 };
    byte_vec_t sig { 190,248,34,48,58,66,116,234,93,145,121,21,25,228,87,45,169,118,100,58,118,64,250,11,107,16,159,158,172,246,234,23,144,32,145,24,251,56,37,185,225,54,175,3,255,76,183,243,121,33,124,102,92,66,193,170,193,50,244,161,181,161,100,203 };
    byte_vec_t pk { 2,241,249,9,199,105,60,14,101,227,132,224,101,197,75,220,194,213,85,180,145,156,64,254,106,191,20,187,39,148,53,3,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 50 ") {
    byte_vec_t msg { 128,164,173,141 };
    byte_vec_t sig { 90,176,164,178,106,148,56,115,11,48,102,9,12,85,195,214,57,74,108,137,63,40,159,15,131,97,92,151,209,70,87,226,93,166,95,90,35,48,59,1,55,200,37,137,248,74,207,88,29,238,147,171,130,89,17,253,183,46,195,121,242,94,116,209 };
    byte_vec_t pk { 2,207,184,43,202,222,174,165,70,4,107,0,4,41,155,244,43,61,8,34,32,46,184,51,29,205,197,33,102,161,237,87,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 51 ") {
    byte_vec_t msg { 200,212,21,52 };
    byte_vec_t sig { 82,77,247,96,68,38,48,208,123,207,16,162,121,63,220,238,241,227,14,227,57,251,52,253,95,236,185,229,5,9,4,231,231,161,135,138,181,161,100,15,90,173,211,48,103,176,90,252,34,209,71,239,212,69,43,141,70,146,64,146,2,203,86,10 };
    byte_vec_t pk { 4,128,12,166,109,236,94,90,112,8,77,93,224,41,19,227,119,35,99,235,54,45,54,245,193,198,123,123,180,196,121,0,88,63,20,48,207,57,139,30,182,175,2,160,249,233,233,189,190,155,89,88,7,195,244,250,85,72,167,103,102,40,24,213,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 51 ") {
    byte_vec_t msg { 98,135,197,95 };
    byte_vec_t sig { 131,225,248,41,12,194,65,177,31,8,49,53,134,166,252,83,211,11,21,178,178,239,108,72,244,130,7,90,107,55,178,124,50,195,42,178,139,30,3,71,49,252,14,2,161,56,187,51,30,253,235,86,223,34,122,193,2,93,90,119,10,190,212,200 };
    byte_vec_t pk { 4,204,120,250,16,209,234,106,203,100,156,116,142,190,199,35,41,224,109,206,219,18,23,6,23,13,186,42,200,65,199,173,131,171,216,250,170,211,246,166,15,93,149,159,17,215,148,84,98,81,135,22,198,141,120,239,128,232,55,16,145,103,28,46,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 51 ") {
    byte_vec_t msg { 196,61,168,230 };
    byte_vec_t sig { 108,91,114,18,176,46,141,180,7,138,9,162,71,4,130,32,181,71,38,134,6,5,198,47,211,202,174,14,26,242,181,246,234,195,55,238,204,235,197,98,95,58,159,132,55,104,153,81,191,223,32,245,171,39,141,108,225,172,35,178,213,30,76,23 };
    byte_vec_t pk { 3,35,240,80,159,215,169,93,211,29,14,162,26,117,23,13,154,209,4,181,211,245,52,239,204,202,136,132,218,118,88,232,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 51 ") {
    byte_vec_t msg { 133,68,116,50 };
    byte_vec_t sig { 123,114,131,210,212,80,250,142,200,54,8,216,198,187,141,97,97,87,252,94,127,175,39,189,136,169,166,231,12,181,29,170,204,133,151,143,21,176,186,23,244,141,100,46,188,61,15,143,148,88,128,40,39,231,65,164,60,51,135,156,215,73,246,139 };
    byte_vec_t pk { 2,167,206,38,0,123,17,144,182,200,36,246,238,159,116,240,18,24,12,228,76,133,2,85,65,10,126,89,30,64,226,216,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 52 ") {
    byte_vec_t msg { 232,124,131,241 };
    byte_vec_t sig { 239,151,122,75,186,244,18,207,63,16,215,83,81,106,178,191,103,235,94,192,120,132,18,80,104,65,229,111,23,14,99,172,76,92,116,214,206,99,65,145,180,135,165,172,95,174,164,79,21,148,228,91,210,207,236,69,192,71,162,240,255,93,131,49 };
    byte_vec_t pk { 4,201,136,91,87,46,112,78,248,14,233,47,67,227,17,156,71,187,102,45,218,240,88,126,157,70,154,237,123,22,100,16,175,127,42,16,81,180,2,102,207,15,152,210,15,76,137,146,143,177,82,223,253,192,186,184,54,14,175,161,63,118,91,175,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 52 ") {
    byte_vec_t msg { 194,219,49,153 };
    byte_vec_t sig { 253,4,83,201,62,203,125,180,2,8,54,193,106,154,109,42,107,27,168,222,151,66,212,231,111,107,123,34,125,54,45,231,97,11,199,208,247,127,171,248,29,129,25,191,22,163,117,191,117,71,81,177,96,26,41,186,44,176,149,158,24,17,111,248 };
    byte_vec_t pk { 4,206,74,68,84,137,247,119,81,51,47,237,217,254,72,116,184,187,142,224,236,77,70,207,236,239,15,19,224,146,20,172,140,74,175,8,241,27,245,62,178,60,112,73,64,55,50,222,47,131,207,88,65,19,54,93,154,227,227,126,99,14,216,240,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 52 ") {
    byte_vec_t msg { 122,215,63,187 };
    byte_vec_t sig { 123,227,123,81,9,155,130,248,16,215,184,106,139,44,238,18,65,195,77,120,255,82,248,102,24,204,187,83,145,239,120,7,231,216,130,174,216,11,120,109,68,50,172,1,15,84,154,50,50,5,128,79,56,39,80,246,30,220,129,12,151,207,3,90 };
    byte_vec_t pk { 3,136,218,177,109,195,139,146,221,177,202,255,254,87,172,53,36,20,170,38,55,49,19,59,108,17,205,22,180,52,210,157,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 52 ") {
    byte_vec_t msg { 31,20,99,47 };
    byte_vec_t sig { 154,43,54,140,5,100,149,243,110,72,157,111,79,96,215,236,53,11,63,41,229,77,26,203,104,28,1,23,56,171,151,151,129,148,244,30,176,109,57,174,82,30,42,54,195,66,146,183,176,111,174,124,79,33,217,235,241,211,25,179,155,197,16,204 };
    byte_vec_t pk { 3,116,43,237,226,206,128,171,53,126,123,47,23,98,72,212,149,5,58,12,77,249,137,196,165,10,166,128,48,104,135,122,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 53 ") {
    byte_vec_t msg { 179,63,223,14 };
    byte_vec_t sig { 127,94,118,28,25,138,195,226,83,105,23,193,40,141,185,92,49,76,105,167,1,252,38,180,223,12,231,76,211,240,178,167,178,91,59,243,23,141,204,94,65,204,182,204,128,105,172,177,61,115,124,100,151,0,171,218,32,126,178,112,254,178,93,231 };
    byte_vec_t pk { 4,41,144,143,248,114,241,106,102,95,51,241,35,122,209,85,46,253,126,174,93,203,15,187,138,214,179,69,20,72,236,134,23,79,137,77,211,156,109,38,230,245,165,177,176,33,222,83,80,248,176,90,89,236,0,7,108,224,97,22,238,169,57,127,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 53 ") {
    byte_vec_t msg { 99,189,192,183 };
    byte_vec_t sig { 47,215,53,243,134,128,236,193,86,168,113,177,124,124,176,253,88,3,186,165,128,99,43,204,236,29,180,47,150,37,50,116,59,242,62,218,77,98,250,240,97,99,66,66,134,255,91,91,199,89,154,94,248,204,29,131,212,64,194,243,186,235,225,115 };
    byte_vec_t pk { 4,86,225,105,185,78,156,216,242,251,84,190,199,31,74,216,208,57,243,26,55,1,195,104,239,1,9,3,213,158,189,106,107,29,179,182,255,22,141,97,159,74,55,223,71,102,157,243,177,183,199,177,123,241,20,212,191,48,43,253,238,114,163,50,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 53 ") {
    byte_vec_t msg { 161,169,175,244 };
    byte_vec_t sig { 60,205,223,214,155,190,209,202,45,199,62,30,253,137,1,122,88,251,118,247,187,63,224,149,73,19,17,159,19,16,88,170,74,88,234,84,139,38,66,48,120,162,250,165,45,192,8,81,147,97,156,85,69,76,56,38,184,154,249,109,42,127,181,113 };
    byte_vec_t pk { 2,195,104,30,50,52,109,124,109,184,11,255,108,152,157,129,13,226,187,165,136,31,211,64,106,219,164,190,98,4,190,202,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 53 ") {
    byte_vec_t msg { 117,169,177,153 };
    byte_vec_t sig { 100,13,35,39,17,2,68,120,249,124,94,32,184,6,84,79,43,211,77,111,63,122,86,18,237,48,41,21,183,138,237,86,199,245,199,200,135,155,172,1,138,41,78,9,17,175,232,44,141,79,183,249,58,26,27,243,248,26,218,184,188,60,132,84 };
    byte_vec_t pk { 2,85,186,218,74,174,94,169,75,0,112,80,140,198,114,5,17,155,55,4,43,255,145,104,93,229,245,160,226,233,165,38,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 54 ") {
    byte_vec_t msg { 146,77,139,37 };
    byte_vec_t sig { 185,134,225,190,205,230,78,99,95,164,128,29,40,252,147,13,241,175,206,85,145,241,210,244,127,38,81,93,110,108,96,3,200,77,211,91,21,186,33,159,70,183,129,9,161,162,12,62,11,201,90,133,175,222,33,86,65,183,231,140,187,99,143,135 };
    byte_vec_t pk { 4,183,65,10,20,248,39,70,168,35,88,241,125,111,208,66,159,6,23,73,207,192,122,143,27,210,24,39,46,174,149,224,27,136,195,23,228,127,169,131,177,41,226,180,190,95,174,66,15,195,119,226,97,230,215,168,74,132,107,128,168,184,206,197,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 54 ") {
    byte_vec_t msg { 34,114,81,8 };
    byte_vec_t sig { 5,234,250,234,144,7,144,233,164,155,184,155,118,255,27,182,159,7,223,42,150,221,123,132,48,176,182,139,31,210,89,188,168,165,137,192,255,90,228,174,198,84,239,185,62,83,251,114,154,11,128,172,72,178,9,57,218,137,159,231,219,116,216,19 };
    byte_vec_t pk { 4,245,59,143,138,213,185,220,56,175,73,183,69,191,153,132,146,48,66,157,128,98,140,143,185,211,174,242,5,196,61,53,71,210,20,122,1,144,197,156,204,196,91,96,97,152,241,212,130,25,160,145,182,211,67,14,240,42,139,188,190,106,243,0,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 54 ") {
    byte_vec_t msg { 5,42,172,250 };
    byte_vec_t sig { 241,174,58,220,167,239,252,64,85,79,152,166,79,142,1,11,78,78,229,7,79,132,13,50,159,73,21,184,154,203,166,169,21,119,131,88,125,54,163,130,236,155,143,21,15,206,2,22,94,40,73,16,231,69,244,107,94,60,202,185,180,70,229,139 };
    byte_vec_t pk { 3,81,0,169,10,54,201,146,11,159,61,177,161,167,60,132,117,144,225,8,108,106,145,166,62,70,90,0,71,21,104,112,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 54 ") {
    byte_vec_t msg { 136,104,228,122 };
    byte_vec_t sig { 81,245,138,64,230,71,45,105,57,59,222,154,216,219,197,184,51,235,171,106,128,189,222,45,245,89,207,0,236,139,7,195,173,208,85,196,244,243,118,112,171,245,252,35,45,17,106,68,123,66,207,161,69,67,177,144,7,212,167,37,149,151,163,249 };
    byte_vec_t pk { 3,230,17,123,69,61,4,180,177,58,253,153,70,118,8,129,73,138,14,12,91,152,154,211,246,214,90,173,234,99,11,194,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 55 ") {
    byte_vec_t msg { 120,71,222,212 };
    byte_vec_t sig { 249,145,117,43,219,38,251,81,159,91,240,161,56,167,62,231,235,230,151,76,19,187,226,236,240,202,29,62,196,10,210,39,222,64,103,51,93,182,160,246,227,90,171,78,205,133,201,233,75,103,143,204,230,244,116,203,115,113,224,90,70,54,18,82 };
    byte_vec_t pk { 4,15,167,3,112,114,47,134,85,254,220,62,143,132,164,3,176,29,14,10,226,157,106,70,72,215,137,220,38,214,114,0,206,62,226,186,92,215,31,143,126,176,16,145,138,15,60,27,198,165,131,95,228,88,87,43,23,110,69,220,172,166,28,60,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 55 ") {
    byte_vec_t msg { 160,118,232,50 };
    byte_vec_t sig { 77,192,197,249,195,198,216,121,251,181,71,199,67,98,53,221,193,190,12,209,22,225,22,104,30,55,124,61,110,157,89,18,103,57,103,170,161,104,32,136,124,90,8,169,199,82,36,160,176,5,214,71,43,113,181,210,198,200,210,81,162,132,101,248 };
    byte_vec_t pk { 4,24,147,223,164,43,113,83,182,74,38,199,82,189,225,109,143,208,49,209,124,195,236,97,11,37,159,181,224,67,116,240,246,161,136,137,11,5,82,137,6,44,15,225,52,91,61,217,174,98,245,229,140,47,231,244,64,25,201,189,88,100,102,59,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 55 ") {
    byte_vec_t msg { 52,76,223,94 };
    byte_vec_t sig { 37,234,137,145,36,69,222,50,165,105,235,53,51,168,4,62,145,203,61,248,183,192,57,102,158,126,223,67,12,1,78,110,236,33,25,117,162,131,42,48,73,6,46,208,109,147,186,18,71,172,254,139,26,44,21,124,210,105,47,206,55,214,43,87 };
    byte_vec_t pk { 3,166,132,66,50,191,248,216,74,207,62,163,15,209,79,158,182,183,235,122,44,60,140,3,118,226,87,101,27,94,251,24,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 55 ") {
    byte_vec_t msg { 128,223,134,157 };
    byte_vec_t sig { 148,105,176,189,81,132,41,124,41,39,216,155,233,204,91,34,13,239,37,108,150,205,201,113,168,175,162,113,253,132,11,160,236,215,17,45,2,47,121,145,190,210,251,150,190,2,244,239,142,64,0,177,250,82,165,21,17,91,108,205,139,42,134,156 };
    byte_vec_t pk { 3,28,165,251,170,153,29,241,34,113,56,194,210,42,247,117,240,76,161,77,88,253,112,132,133,90,196,64,102,199,167,170,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 56 ") {
    byte_vec_t msg { 82,38,253,232 };
    byte_vec_t sig { 157,96,65,223,102,51,86,232,164,86,158,12,30,110,175,125,48,109,157,25,117,180,185,135,112,168,38,3,149,101,130,194,143,82,37,183,211,22,135,139,233,240,160,75,236,126,71,135,99,144,39,70,83,193,121,199,99,67,105,255,229,250,63,242 };
    byte_vec_t pk { 4,142,254,186,36,252,43,128,230,73,208,79,63,109,70,36,26,96,13,89,239,249,225,61,27,175,100,24,174,52,121,146,248,77,166,82,166,89,63,235,87,67,179,170,162,16,106,39,83,158,252,100,61,144,99,140,26,72,230,198,234,252,224,230,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 56 ") {
    byte_vec_t msg { 74,158,27,155 };
    byte_vec_t sig { 108,227,59,62,52,177,144,54,80,227,147,59,181,188,235,140,24,61,236,217,139,189,46,225,110,204,32,19,203,77,53,230,29,33,245,11,98,176,111,145,185,109,60,27,99,152,84,168,62,84,29,156,184,89,99,194,223,166,98,86,227,8,245,4 };
    byte_vec_t pk { 4,17,66,80,209,63,178,103,253,204,68,48,150,210,174,68,67,216,10,144,73,214,191,229,60,151,248,187,249,22,27,52,0,103,32,4,93,58,89,56,39,133,153,154,199,72,83,11,138,96,121,175,245,210,97,59,128,160,206,89,171,193,245,96,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 56 ") {
    byte_vec_t msg { 170,58,67,222 };
    byte_vec_t sig { 87,87,109,164,53,75,102,46,125,89,204,63,57,253,86,42,72,38,251,39,76,62,197,191,219,193,210,99,68,58,211,237,5,232,195,194,2,245,72,173,230,146,102,62,145,33,250,89,189,108,46,99,117,227,159,224,196,157,19,240,51,88,73,55 };
    byte_vec_t pk { 2,48,110,105,247,95,50,224,247,47,68,16,57,210,0,68,140,250,136,16,59,243,45,249,104,240,187,140,202,193,64,210,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 56 ") {
    byte_vec_t msg { 117,31,68,107 };
    byte_vec_t sig { 121,79,89,121,33,227,14,149,172,76,252,68,168,173,107,0,140,52,80,59,41,51,59,8,208,48,9,244,235,72,37,239,145,218,119,68,252,130,38,99,193,196,190,101,159,112,37,3,47,198,99,185,202,191,90,196,20,41,72,120,60,136,22,76 };
    byte_vec_t pk { 2,244,94,46,110,102,254,214,144,17,214,107,109,164,102,112,89,74,209,248,126,240,232,93,59,84,44,175,3,153,197,206,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 57 ") {
    byte_vec_t msg { 24,70,180,106 };
    byte_vec_t sig { 52,179,17,188,251,13,110,91,124,129,102,247,108,238,108,8,179,5,250,210,249,219,177,28,250,200,133,91,157,200,60,85,104,34,186,42,183,157,111,38,164,204,197,205,210,34,191,234,162,139,31,61,218,112,130,221,179,193,164,228,34,18,82,195 };
    byte_vec_t pk { 4,159,235,109,216,66,188,147,31,17,135,32,254,207,14,137,161,178,221,51,203,86,95,73,48,252,105,193,80,206,250,15,203,136,9,181,68,147,14,207,36,48,169,182,96,116,220,224,128,125,94,120,211,60,10,196,128,123,158,196,238,39,99,93,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 57 ") {
    byte_vec_t msg { 21,87,232,200 };
    byte_vec_t sig { 199,255,148,42,118,57,130,249,141,24,125,31,221,96,101,75,36,97,253,155,118,132,248,0,181,42,236,195,29,109,229,31,127,147,10,109,80,198,97,2,130,158,52,28,93,156,22,178,152,64,232,81,25,17,155,199,17,212,53,249,145,11,20,3 };
    byte_vec_t pk { 4,153,34,140,221,233,114,21,244,200,193,38,37,249,168,219,71,112,253,5,226,197,54,24,230,76,24,36,162,229,157,58,135,25,165,149,113,123,35,247,199,232,187,131,121,142,47,37,50,141,148,112,241,37,129,40,235,25,46,173,193,193,244,22,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 57 ") {
    byte_vec_t msg { 117,46,250,113 };
    byte_vec_t sig { 15,33,163,122,32,150,86,145,132,54,234,247,226,109,5,71,95,32,163,80,177,54,41,1,155,58,48,159,128,155,227,16,128,72,156,122,113,137,18,98,166,226,200,50,171,125,215,26,248,155,150,138,188,145,128,160,247,91,197,110,196,45,146,156 };
    byte_vec_t pk { 2,100,164,196,81,191,113,77,209,86,75,65,237,25,36,185,240,20,125,85,143,52,157,14,201,178,22,32,173,47,51,55,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 57 ") {
    byte_vec_t msg { 20,221,94,133 };
    byte_vec_t sig { 97,175,43,178,109,98,126,250,131,207,216,208,222,129,217,21,169,101,32,227,234,21,93,195,3,120,110,2,183,121,160,44,204,47,79,69,44,126,52,15,16,64,81,147,225,57,4,44,148,53,24,216,93,5,121,159,38,164,150,223,238,139,137,4 };
    byte_vec_t pk { 2,133,40,164,134,45,157,228,157,197,19,23,81,248,235,169,0,21,196,234,8,233,186,92,2,69,91,156,187,162,102,147,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 58 ") {
    byte_vec_t msg { 255,110,45,209 };
    byte_vec_t sig { 155,22,9,249,2,92,66,42,253,225,83,159,61,113,147,104,85,145,243,86,108,185,197,30,145,62,233,120,245,217,51,175,188,230,251,56,45,124,212,13,85,168,53,117,207,85,114,11,177,108,105,186,195,10,231,115,93,224,143,141,90,248,83,211 };
    byte_vec_t pk { 4,26,229,239,201,61,243,179,18,158,35,175,125,1,253,115,20,17,246,120,11,149,213,140,42,140,55,190,102,216,49,212,17,208,155,113,52,95,67,7,0,199,199,155,14,238,188,181,220,33,244,136,82,222,83,84,236,14,182,181,245,15,110,242,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 58 ") {
    byte_vec_t msg { 26,96,152,227 };
    byte_vec_t sig { 124,1,247,226,46,165,128,138,24,169,34,250,56,82,46,215,67,206,18,209,8,64,129,31,151,50,249,143,41,97,199,45,91,213,155,106,177,196,251,170,92,96,27,64,190,95,46,161,26,178,242,204,194,225,60,123,80,118,18,36,218,199,87,201 };
    byte_vec_t pk { 4,194,9,177,16,237,207,0,130,41,25,227,195,43,248,40,145,68,230,163,17,61,202,39,135,253,179,18,12,81,200,39,190,145,173,55,224,10,141,233,174,218,95,18,142,170,61,110,169,13,148,75,38,167,134,164,207,164,161,93,10,121,139,74,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 58 ") {
    byte_vec_t msg { 130,247,138,45 };
    byte_vec_t sig { 64,156,160,206,162,101,255,195,248,97,129,191,98,122,205,165,63,51,166,253,145,230,198,144,203,94,100,182,110,217,176,116,186,73,20,237,245,64,77,44,178,157,73,18,185,32,191,194,242,113,69,152,18,18,114,69,202,203,82,24,13,67,147,0 };
    byte_vec_t pk { 3,127,215,126,167,98,191,6,9,84,235,54,129,202,224,133,156,238,130,183,218,185,138,101,221,211,130,99,215,240,219,198,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 58 ") {
    byte_vec_t msg { 244,152,152,248 };
    byte_vec_t sig { 226,54,39,28,215,102,135,37,175,182,209,168,135,144,70,80,171,62,215,63,58,13,21,61,165,217,172,195,24,30,52,188,203,148,135,40,179,215,30,54,68,72,15,236,48,180,99,198,23,200,21,183,185,204,228,171,34,10,53,1,161,125,218,76 };
    byte_vec_t pk { 3,44,1,228,37,17,114,215,141,227,236,170,20,136,112,174,186,60,218,96,214,233,106,209,233,233,240,74,191,117,187,16,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 59 ") {
    byte_vec_t msg { 9,253,151,187 };
    byte_vec_t sig { 224,42,174,126,67,150,87,51,164,56,62,56,27,118,1,215,81,76,12,118,220,37,150,144,56,86,221,52,6,58,145,177,214,60,153,185,11,167,243,51,140,51,78,170,177,172,56,251,197,182,59,139,204,225,172,22,2,34,70,121,65,60,27,29 };
    byte_vec_t pk { 4,200,49,121,116,74,193,125,116,250,166,216,224,85,12,192,116,221,160,235,107,255,113,176,58,92,162,167,81,194,245,67,2,211,218,220,22,88,247,196,202,219,79,222,27,210,101,192,58,115,108,200,34,75,193,75,200,128,70,150,122,52,83,22,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 59 ") {
    byte_vec_t msg { 226,254,77,189 };
    byte_vec_t sig { 68,190,84,84,239,123,183,151,112,111,66,158,223,187,183,207,215,191,91,251,195,107,132,229,84,111,170,196,165,19,95,123,163,127,252,30,111,38,247,95,213,249,179,132,137,236,43,15,131,18,89,175,164,227,12,248,74,175,163,18,47,209,173,178 };
    byte_vec_t pk { 4,115,197,15,173,90,74,204,143,163,23,10,165,33,231,175,142,151,29,26,2,57,78,203,46,57,210,224,42,192,154,196,253,99,126,208,219,188,96,119,22,190,46,82,244,244,185,190,0,252,63,210,170,229,42,21,215,124,245,89,49,38,144,121,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 59 ") {
    byte_vec_t msg { 133,180,55,177 };
    byte_vec_t sig { 100,231,177,231,34,38,14,131,63,166,242,200,0,156,39,19,179,107,61,153,240,204,3,240,199,203,214,30,83,103,133,102,202,44,134,205,227,19,111,204,173,201,193,14,151,30,233,55,176,220,170,65,2,40,98,214,164,59,152,193,116,84,211,10 };
    byte_vec_t pk { 2,114,189,53,252,139,58,212,208,31,136,112,165,248,153,138,241,175,238,189,215,251,255,186,163,246,79,229,90,75,191,22,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 59 ") {
    byte_vec_t msg { 162,104,103,28 };
    byte_vec_t sig { 6,200,64,113,244,67,119,64,134,97,234,182,113,242,69,198,59,73,0,68,65,201,192,210,184,214,204,215,191,218,135,242,184,195,7,111,54,44,180,154,209,198,67,44,218,58,120,6,132,85,157,152,88,103,64,163,199,72,38,84,223,141,128,76 };
    byte_vec_t pk { 2,48,172,177,218,89,159,165,123,97,116,44,132,167,254,246,163,9,4,104,23,36,153,124,201,24,250,171,70,247,106,138,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 60 ") {
    byte_vec_t msg { 210,217,37,114 };
    byte_vec_t sig { 208,206,173,231,196,17,131,158,106,109,20,56,36,101,6,182,47,56,207,84,164,23,186,120,87,83,207,208,243,223,254,48,50,27,245,208,78,134,62,179,122,97,252,252,83,231,108,51,128,14,215,110,133,136,84,72,203,182,211,208,119,34,196,16 };
    byte_vec_t pk { 4,26,160,204,186,196,205,190,42,233,125,7,147,3,103,165,233,210,201,238,51,162,84,87,73,209,216,253,72,202,188,83,23,127,72,173,13,14,215,214,181,192,58,135,63,205,192,98,108,218,187,119,181,127,150,15,187,26,184,213,18,15,197,43,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 60 ") {
    byte_vec_t msg { 26,151,135,206 };
    byte_vec_t sig { 49,226,131,174,145,76,248,75,81,216,216,228,175,205,185,117,159,255,9,202,215,248,218,102,150,205,205,25,213,203,250,86,19,70,231,193,48,139,7,211,59,152,21,211,72,108,29,230,49,154,71,128,222,140,253,98,232,56,133,28,229,98,148,81 };
    byte_vec_t pk { 4,252,119,170,152,152,172,152,152,4,34,216,48,204,39,182,44,219,68,248,141,0,32,240,77,204,193,240,73,232,232,179,78,241,202,236,147,112,28,62,231,72,220,79,196,243,43,119,76,82,169,144,40,201,111,63,31,206,3,82,125,213,101,64,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 60 ") {
    byte_vec_t msg { 191,205,216,79 };
    byte_vec_t sig { 141,233,202,20,209,195,114,214,31,50,212,161,117,134,127,121,120,241,162,229,228,100,211,128,207,253,60,190,111,53,65,217,220,43,130,142,240,224,9,193,61,164,34,83,104,103,51,157,71,30,86,150,125,192,83,252,177,172,198,78,116,69,90,4 };
    byte_vec_t pk { 2,202,221,55,107,29,224,100,151,59,192,107,239,19,164,4,5,108,150,40,102,103,19,137,210,3,238,239,38,76,191,20,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 60 ") {
    byte_vec_t msg { 232,92,232,11 };
    byte_vec_t sig { 194,213,174,200,222,165,87,239,122,236,72,20,192,38,96,179,250,10,66,227,120,30,243,181,32,58,203,54,250,62,217,158,182,38,99,103,208,100,206,105,153,172,245,182,31,117,133,202,82,67,135,67,196,180,193,133,187,124,92,33,122,162,1,235 };
    byte_vec_t pk { 3,66,194,179,76,235,53,252,156,173,44,217,101,164,188,40,196,140,105,28,77,26,100,2,198,143,150,132,102,184,156,170,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 61 ") {
    byte_vec_t msg { 87,198,216,161 };
    byte_vec_t sig { 84,188,255,94,47,155,122,209,65,129,105,55,179,3,107,26,12,34,34,101,105,202,2,71,53,242,145,160,105,191,244,186,110,85,244,33,231,34,3,229,125,239,24,233,131,245,136,58,72,172,111,200,246,13,229,8,186,77,65,67,123,173,35,34 };
    byte_vec_t pk { 4,124,26,14,26,135,153,96,104,167,214,80,212,222,48,64,105,81,66,221,143,183,187,221,247,113,199,208,142,220,137,222,78,117,231,132,232,175,215,189,50,15,107,39,207,142,22,111,121,66,209,52,112,122,247,227,17,232,158,86,178,160,199,222,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 61 ") {
    byte_vec_t msg { 64,215,118,198 };
    byte_vec_t sig { 144,212,159,173,215,136,123,218,7,87,173,236,44,5,203,4,63,62,150,139,127,173,64,108,49,207,40,16,211,128,133,234,210,183,203,70,102,197,117,172,191,151,90,72,56,101,153,215,72,203,194,144,106,104,194,196,30,19,97,84,248,51,188,99 };
    byte_vec_t pk { 4,246,84,141,161,136,185,252,54,234,68,9,42,96,72,121,229,158,105,131,228,255,170,64,38,48,90,233,225,133,50,16,147,31,61,165,238,125,172,227,172,211,213,78,46,195,213,99,58,210,99,90,61,134,39,100,68,41,255,254,211,246,77,198,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 61 ") {
    byte_vec_t msg { 109,142,23,86 };
    byte_vec_t sig { 135,56,30,9,56,67,207,168,57,126,219,31,86,126,98,172,63,131,150,190,72,117,208,96,23,251,102,101,16,61,190,218,206,5,55,35,138,162,25,63,168,101,129,230,69,151,255,0,63,230,138,209,62,107,50,219,211,60,92,208,175,27,55,133 };
    byte_vec_t pk { 3,49,5,70,78,82,222,50,218,79,74,2,95,97,34,197,38,244,220,232,131,190,109,209,58,243,19,171,243,106,216,105,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 61 ") {
    byte_vec_t msg { 247,176,208,147 };
    byte_vec_t sig { 239,62,163,26,86,6,39,251,232,173,56,175,134,157,122,27,76,41,104,50,84,192,33,94,100,123,239,178,240,80,94,198,160,187,205,141,140,37,142,116,82,16,9,136,98,207,105,6,38,54,126,182,27,210,95,25,127,54,202,250,72,147,122,52 };
    byte_vec_t pk { 2,169,148,227,165,109,106,32,219,5,253,220,36,169,67,140,249,212,7,184,211,95,173,25,204,27,0,38,237,86,40,175,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 62 ") {
    byte_vec_t msg { 128,74,111,202 };
    byte_vec_t sig { 7,243,67,33,187,193,142,205,232,172,111,113,251,83,45,80,111,30,240,250,22,107,9,232,179,171,128,137,28,185,170,27,192,107,50,95,143,240,3,142,211,212,102,180,57,30,130,98,186,110,126,187,150,6,56,133,199,105,215,117,48,161,182,146 };
    byte_vec_t pk { 4,184,27,35,68,210,64,178,77,3,186,101,246,113,184,239,118,205,30,238,121,41,18,100,79,161,37,200,82,45,209,218,54,244,137,4,122,110,88,156,141,103,193,38,242,207,126,171,207,67,177,127,15,96,175,36,114,238,237,172,13,237,130,245,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 62 ") {
    byte_vec_t msg { 139,169,16,252 };
    byte_vec_t sig { 192,45,66,12,13,64,217,104,226,163,165,31,148,171,217,229,39,177,173,100,76,250,224,4,210,81,48,188,126,130,10,91,56,199,223,240,173,225,172,91,188,14,154,162,203,247,93,243,147,223,111,116,129,249,190,176,218,175,144,9,30,211,95,240 };
    byte_vec_t pk { 4,217,196,231,227,81,175,22,184,252,23,75,252,80,111,179,134,246,32,151,69,32,71,193,117,0,158,221,0,168,246,175,252,15,238,224,225,89,136,239,250,190,154,65,243,181,82,78,9,25,77,199,251,123,230,191,96,82,178,221,111,118,240,140,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 62 ") {
    byte_vec_t msg { 30,189,232,167 };
    byte_vec_t sig { 143,60,82,117,62,13,200,246,35,78,184,17,41,201,56,137,148,56,163,130,143,37,34,134,14,157,182,213,184,95,226,90,229,11,48,102,65,18,181,196,6,68,152,154,246,255,63,158,229,207,20,35,53,135,86,31,176,253,178,109,185,178,98,239 };
    byte_vec_t pk { 2,213,182,65,41,125,253,0,99,206,51,237,220,113,150,214,201,158,218,144,40,209,103,177,177,201,50,248,164,246,175,130,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 62 ") {
    byte_vec_t msg { 7,162,248,208 };
    byte_vec_t sig { 69,173,84,240,71,198,243,179,237,117,226,118,237,176,113,159,239,187,217,61,112,25,193,20,7,239,42,223,128,127,73,237,90,8,43,219,98,46,13,235,144,101,47,131,47,128,132,209,126,57,226,195,122,178,79,211,56,154,162,87,64,203,216,212 };
    byte_vec_t pk { 3,110,142,41,13,202,118,50,30,112,157,120,180,73,151,169,80,133,231,223,108,206,101,124,18,244,227,5,14,113,185,142,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 63 ") {
    byte_vec_t msg { 109,248,251,4 };
    byte_vec_t sig { 138,132,56,135,248,176,214,187,148,224,173,219,141,28,37,48,181,51,151,77,221,122,4,22,245,180,18,175,207,163,135,96,105,189,193,15,21,166,241,15,115,175,131,33,240,70,88,160,109,141,35,166,237,140,246,17,178,77,155,213,224,219,185,208 };
    byte_vec_t pk { 4,223,209,71,106,43,139,145,48,209,16,143,83,194,132,109,153,211,114,126,83,107,31,25,116,128,251,98,190,212,35,118,184,226,60,98,204,57,135,96,44,217,172,74,231,117,61,83,3,37,180,208,212,130,75,24,4,105,97,233,204,11,234,43,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 63 ") {
    byte_vec_t msg { 38,82,55,136 };
    byte_vec_t sig { 207,247,152,154,147,50,249,172,69,133,20,33,246,218,169,16,58,118,69,153,201,12,193,201,73,102,200,193,101,72,150,142,247,224,158,58,191,111,201,177,167,245,45,111,225,118,95,79,220,179,34,45,22,26,216,234,231,97,206,219,112,47,84,143 };
    byte_vec_t pk { 4,69,221,195,196,6,19,244,150,44,59,30,62,72,44,69,245,114,35,140,53,102,137,115,195,233,184,117,202,177,87,81,251,78,156,136,204,30,150,48,77,70,48,162,241,67,247,41,71,1,31,20,169,157,21,153,138,101,60,235,245,82,131,46,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 63 ") {
    byte_vec_t msg { 6,125,251,231 };
    byte_vec_t sig { 47,70,156,194,221,78,247,75,100,21,26,143,37,44,220,92,57,4,121,52,107,53,232,164,164,68,186,152,44,75,166,146,93,39,253,121,132,234,33,200,251,153,110,31,194,111,36,216,165,76,115,137,236,141,187,90,63,56,111,164,160,73,207,123 };
    byte_vec_t pk { 2,49,55,220,161,10,161,11,209,77,128,217,194,111,113,248,238,226,196,95,75,236,119,63,254,180,121,223,9,96,214,115,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 63 ") {
    byte_vec_t msg { 176,110,24,155 };
    byte_vec_t sig { 196,33,72,89,224,242,201,16,49,185,98,61,71,21,128,4,33,4,3,137,248,169,198,55,129,53,129,104,41,105,143,130,93,102,247,42,177,113,136,235,221,60,20,140,74,153,91,34,214,214,165,32,239,199,245,234,192,43,27,5,233,198,124,139 };
    byte_vec_t pk { 2,170,194,37,229,178,178,195,119,166,84,231,179,118,230,222,81,27,107,59,198,58,254,221,128,218,34,137,78,36,177,99,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 64 ") {
    byte_vec_t msg { 228,144,234,31 };
    byte_vec_t sig { 163,6,97,213,161,196,98,184,240,191,225,65,141,75,33,173,72,121,46,47,149,140,77,3,163,123,121,253,74,120,162,255,110,249,82,127,195,76,110,163,142,54,245,4,13,219,35,22,209,46,248,193,92,248,127,183,206,234,29,70,194,2,248,86 };
    byte_vec_t pk { 4,158,46,151,137,133,139,233,31,146,204,98,101,170,20,144,32,105,215,235,107,57,211,66,100,254,140,113,35,129,0,160,157,224,180,145,78,54,121,142,106,177,238,45,4,145,214,127,66,198,143,184,0,187,24,174,199,220,138,203,162,248,245,23,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 64 ") {
    byte_vec_t msg { 70,199,178,192 };
    byte_vec_t sig { 129,42,98,196,157,53,75,246,247,92,110,5,3,153,186,178,20,175,12,167,41,4,188,192,77,220,234,238,252,73,197,252,247,96,158,241,177,124,211,226,205,112,139,246,131,69,95,160,27,117,23,116,146,35,152,46,2,242,169,71,199,135,23,98 };
    byte_vec_t pk { 4,144,81,30,225,242,166,54,133,211,156,130,11,187,103,22,89,157,205,7,173,189,240,113,159,243,56,190,23,189,20,8,7,50,227,2,196,234,251,69,148,184,50,118,179,49,137,3,68,177,89,201,148,182,252,244,36,12,172,175,239,88,46,23,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 64 ") {
    byte_vec_t msg { 131,100,243,64 };
    byte_vec_t sig { 182,176,55,219,5,33,151,10,84,78,104,215,114,19,194,166,14,164,102,208,186,148,113,159,62,8,43,170,205,138,211,177,95,70,89,247,98,5,53,15,106,75,42,58,83,183,239,14,211,15,246,249,180,4,182,189,38,117,82,144,159,63,222,219 };
    byte_vec_t pk { 2,77,108,137,8,46,46,114,126,156,233,56,226,129,39,84,208,166,8,244,225,42,177,184,37,25,146,159,217,66,249,25,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 64 ") {
    byte_vec_t msg { 234,12,14,215 };
    byte_vec_t sig { 188,77,117,229,200,174,50,29,20,210,168,225,211,61,241,88,151,212,115,133,60,94,236,47,84,105,89,133,177,253,160,33,44,39,92,10,2,232,110,254,129,253,236,198,54,0,243,54,155,167,35,113,67,218,11,103,105,13,179,62,146,152,162,176 };
    byte_vec_t pk { 3,5,5,155,39,16,59,83,122,79,187,99,251,198,220,16,242,0,103,203,191,98,222,19,207,70,49,109,79,45,42,156,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 65 ") {
    byte_vec_t msg { 21,18,236,97 };
    byte_vec_t sig { 42,93,223,83,149,206,38,220,233,68,152,141,206,130,11,129,176,236,153,224,98,181,134,238,109,36,230,158,116,202,156,49,185,29,37,129,29,168,75,37,39,13,67,163,164,106,169,189,236,77,81,152,191,133,72,57,83,126,53,251,44,32,95,35 };
    byte_vec_t pk { 4,31,135,174,173,195,73,71,108,21,224,48,9,179,129,1,162,1,149,13,72,108,81,137,123,153,213,58,238,166,89,163,34,201,18,1,52,92,0,136,59,170,207,170,68,184,188,164,251,247,104,165,233,72,181,40,164,142,82,183,188,231,139,186,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 65 ") {
    byte_vec_t msg { 202,26,125,142 };
    byte_vec_t sig { 110,21,99,81,30,63,126,83,150,33,245,213,190,16,131,31,167,128,122,6,212,28,238,66,234,98,153,38,186,231,208,67,234,148,200,77,137,78,66,135,105,150,235,138,237,157,248,98,179,211,23,46,194,33,24,192,225,184,196,79,19,63,73,56 };
    byte_vec_t pk { 4,76,250,114,119,221,229,110,243,208,195,70,245,151,24,8,81,173,16,234,146,26,24,153,72,160,211,98,56,45,227,5,32,189,98,39,159,53,165,57,45,101,163,115,119,198,12,207,140,150,14,60,64,49,48,246,183,101,179,169,17,135,35,146,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 65 ") {
    byte_vec_t msg { 143,88,217,7 };
    byte_vec_t sig { 249,20,103,159,79,221,97,194,104,230,26,78,105,169,153,120,186,234,121,24,234,166,205,69,253,139,111,194,203,59,152,136,225,209,220,235,117,45,150,215,216,194,168,102,218,162,92,76,202,212,154,153,236,90,81,30,74,5,244,146,204,113,109,255 };
    byte_vec_t pk { 3,106,70,213,51,133,89,11,122,226,157,87,211,91,105,167,133,235,227,224,113,151,138,227,160,205,139,3,179,68,40,240,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 65 ") {
    byte_vec_t msg { 182,12,159,139 };
    byte_vec_t sig { 183,150,19,124,221,184,3,69,246,110,98,57,185,13,226,156,180,71,90,175,140,155,226,233,111,163,6,125,8,113,230,221,183,28,73,251,198,8,217,56,207,89,130,182,152,229,72,244,33,15,230,144,33,241,186,46,222,55,158,239,222,21,240,83 };
    byte_vec_t pk { 2,238,180,162,142,58,130,238,228,8,211,245,229,209,79,254,250,83,132,225,179,29,127,37,35,59,162,12,158,218,121,117,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 66 ") {
    byte_vec_t msg { 186,126,111,171 };
    byte_vec_t sig { 136,87,82,253,231,32,222,67,253,230,172,144,230,190,104,173,90,13,17,243,0,243,17,170,8,213,41,194,118,19,12,84,90,38,65,86,100,38,136,224,85,214,88,158,105,251,230,115,223,13,210,27,93,89,197,237,103,76,229,144,178,2,151,238 };
    byte_vec_t pk { 4,12,42,50,156,12,166,133,195,22,50,187,243,121,194,6,69,162,196,76,115,90,141,133,35,215,21,255,160,221,17,57,147,150,98,150,230,220,212,247,183,225,246,93,20,20,50,140,231,164,149,52,131,162,74,78,37,154,199,172,208,203,126,152,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 66 ") {
    byte_vec_t msg { 162,28,207,132 };
    byte_vec_t sig { 172,26,230,241,95,224,149,2,125,70,217,127,249,176,114,254,147,54,115,47,32,92,246,56,3,7,172,13,29,232,98,187,54,91,210,204,147,136,53,159,103,182,190,56,128,57,24,38,134,98,162,203,113,83,47,76,35,62,204,34,222,114,232,255 };
    byte_vec_t pk { 4,64,113,41,127,57,236,140,152,80,158,10,232,20,158,40,254,207,132,14,213,188,91,37,52,2,229,8,65,176,29,217,165,63,195,144,171,231,162,81,34,156,110,131,30,212,231,246,247,240,104,222,131,88,232,233,58,137,135,57,107,170,88,205,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 66 ") {
    byte_vec_t msg { 62,232,154,26 };
    byte_vec_t sig { 238,140,71,139,38,98,10,101,94,79,99,130,242,168,0,98,47,151,24,102,154,145,228,27,62,82,231,230,141,186,171,28,242,172,122,253,87,255,102,71,167,125,33,143,34,214,47,121,181,86,83,164,102,178,41,148,210,160,225,105,74,30,174,128 };
    byte_vec_t pk { 3,93,243,141,55,153,114,212,206,31,140,235,57,128,164,90,100,84,60,53,10,194,160,67,224,193,80,193,84,39,65,137,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 66 ") {
    byte_vec_t msg { 225,139,22,29 };
    byte_vec_t sig { 162,243,73,162,217,123,239,123,87,210,92,228,246,28,189,223,118,15,194,204,43,134,17,17,90,226,149,97,105,187,225,179,96,93,108,48,231,161,157,26,85,20,196,148,68,8,77,237,47,125,226,51,52,28,119,108,196,201,17,160,150,128,89,35 };
    byte_vec_t pk { 3,250,20,21,165,169,143,180,100,4,174,30,215,48,219,69,215,229,70,82,245,42,161,150,221,42,142,229,100,71,50,174,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 67 ") {
    byte_vec_t msg { 133,252,21,194 };
    byte_vec_t sig { 47,30,155,88,85,248,234,63,205,59,54,128,146,129,129,131,33,168,173,88,57,60,233,99,78,205,215,219,32,160,73,22,100,95,224,6,94,76,219,168,5,215,52,148,70,191,20,24,54,89,120,14,179,114,80,228,179,220,41,70,3,215,140,74 };
    byte_vec_t pk { 4,122,201,142,190,116,103,159,148,229,54,125,204,77,127,63,250,127,235,72,45,192,95,59,58,128,143,119,72,219,168,191,117,141,43,234,148,181,0,91,204,32,95,253,50,254,122,133,249,206,62,242,28,243,30,121,252,181,166,218,200,209,26,161,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 67 ") {
    byte_vec_t msg { 116,242,163,89 };
    byte_vec_t sig { 175,235,40,49,100,254,211,113,50,200,250,232,222,123,129,3,87,78,30,32,205,176,60,241,103,155,125,111,110,175,229,41,14,188,46,202,65,56,185,147,7,5,138,227,208,97,152,155,187,106,137,237,66,62,51,153,1,119,118,88,104,68,113,95 };
    byte_vec_t pk { 4,7,207,89,92,150,53,230,19,252,252,149,63,153,10,229,186,151,159,26,35,133,123,190,247,177,176,230,248,166,96,179,7,81,137,71,46,174,22,96,148,203,97,202,197,190,237,164,194,255,16,115,211,200,50,240,55,176,225,40,20,51,58,95,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 67 ") {
    byte_vec_t msg { 223,249,165,131 };
    byte_vec_t sig { 207,39,207,38,49,132,143,25,41,84,185,10,128,85,245,253,250,177,157,227,134,209,128,218,114,138,251,172,197,205,249,98,37,233,97,197,153,125,190,228,144,246,1,200,128,230,231,203,14,230,225,3,101,164,75,251,81,182,45,163,241,194,162,153 };
    byte_vec_t pk { 3,157,10,136,180,120,163,132,146,51,94,54,229,39,201,181,121,31,157,150,213,163,7,89,145,154,206,241,117,133,91,181,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 67 ") {
    byte_vec_t msg { 63,199,8,39 };
    byte_vec_t sig { 151,160,92,76,248,191,39,244,126,88,35,107,70,161,140,50,215,60,93,207,12,14,18,59,226,213,133,224,138,46,147,112,157,95,72,157,82,10,154,170,169,7,249,116,4,95,250,17,115,118,32,156,28,102,58,95,240,162,180,99,209,214,240,143 };
    byte_vec_t pk { 3,90,67,117,192,20,194,148,77,191,15,183,88,13,50,98,218,244,147,83,51,100,48,101,146,7,249,205,140,32,243,174,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 68 ") {
    byte_vec_t msg { 175,53,226,232 };
    byte_vec_t sig { 49,182,6,164,166,62,237,217,237,154,99,99,40,128,27,208,99,177,242,1,230,84,128,104,44,81,167,63,99,12,150,181,145,221,50,67,102,27,140,70,218,72,62,99,190,207,189,126,107,62,165,157,8,242,191,45,67,59,246,68,151,231,1,37 };
    byte_vec_t pk { 4,74,38,22,129,102,236,136,173,36,188,167,211,89,249,111,86,151,200,145,88,244,54,85,48,116,90,90,5,191,41,206,82,63,224,140,128,224,22,132,177,229,85,81,24,38,205,12,164,162,70,172,197,130,196,217,41,15,169,8,65,240,170,196,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 68 ") {
    byte_vec_t msg { 192,1,182,201 };
    byte_vec_t sig { 248,119,140,88,230,68,126,10,199,90,222,17,233,150,103,98,201,126,133,29,141,20,204,249,63,208,203,7,102,98,86,191,240,123,62,92,106,145,128,243,116,151,100,204,187,251,251,6,62,41,214,204,65,46,155,183,164,73,19,165,106,128,200,107 };
    byte_vec_t pk { 4,38,34,38,187,16,75,115,176,247,4,250,192,149,72,228,193,215,165,168,222,195,253,228,110,17,21,148,102,20,56,115,77,203,20,161,53,39,194,13,199,63,27,138,130,187,93,106,249,240,199,13,103,89,70,171,201,174,84,55,183,74,6,71,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 68 ") {
    byte_vec_t msg { 148,154,24,33 };
    byte_vec_t sig { 215,46,180,198,98,241,234,223,45,104,211,88,56,46,54,224,119,44,100,103,56,173,123,59,62,247,201,52,91,69,228,1,213,84,110,36,137,72,235,186,85,129,49,233,51,243,115,91,171,85,130,47,236,100,122,109,95,86,58,143,13,171,32,249 };
    byte_vec_t pk { 3,165,240,11,201,47,140,174,8,99,235,72,249,243,1,8,182,103,67,17,128,180,140,55,211,47,2,84,44,173,182,129,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 68 ") {
    byte_vec_t msg { 84,189,201,28 };
    byte_vec_t sig { 208,213,95,100,132,84,7,158,188,221,129,103,99,193,114,205,233,222,10,129,248,235,11,247,231,27,168,62,250,146,3,126,189,248,2,44,170,14,52,22,191,118,37,174,95,49,104,36,66,44,145,236,71,165,235,207,36,19,14,29,180,84,26,121 };
    byte_vec_t pk { 2,153,243,124,117,0,253,154,195,56,161,166,177,132,165,255,101,188,251,221,13,140,170,255,195,34,156,207,11,254,65,241,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 69 ") {
    byte_vec_t msg { 62,2,129,173 };
    byte_vec_t sig { 67,139,80,195,128,25,18,167,140,210,60,182,26,189,73,206,125,17,161,157,151,42,71,89,42,104,224,50,30,25,121,90,83,108,183,124,3,201,225,55,141,200,92,195,181,134,146,79,49,194,163,69,162,127,150,10,184,131,36,104,29,163,235,55 };
    byte_vec_t pk { 4,67,116,3,238,232,35,124,26,175,154,136,172,210,43,152,135,236,202,175,224,197,138,53,18,68,230,243,77,11,129,193,229,135,102,199,239,44,111,164,137,249,11,218,139,138,226,62,154,171,254,53,230,82,255,82,191,236,223,150,26,71,158,61,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 69 ") {
    byte_vec_t msg { 52,98,12,148 };
    byte_vec_t sig { 70,235,65,38,68,125,82,214,201,62,178,182,181,189,97,131,73,1,149,7,255,157,44,16,66,167,13,163,222,228,206,123,170,74,243,158,35,16,237,168,240,33,155,126,186,228,201,172,57,205,116,160,136,9,205,186,219,60,248,128,157,211,47,111 };
    byte_vec_t pk { 4,41,119,122,28,144,31,97,65,71,62,10,181,250,194,187,241,32,39,133,112,82,159,128,29,126,36,237,216,74,214,90,238,250,55,76,110,148,213,77,184,118,35,203,65,66,153,175,14,94,246,122,248,111,124,188,141,197,8,104,62,90,10,53,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 69 ") {
    byte_vec_t msg { 102,197,2,21 };
    byte_vec_t sig { 72,193,155,109,129,187,225,77,32,113,191,118,89,208,183,19,100,134,88,68,205,143,130,102,119,40,126,196,55,114,162,88,143,123,228,240,22,78,87,94,124,126,190,213,88,95,76,153,205,201,232,254,185,252,1,75,255,181,137,82,16,89,6,37 };
    byte_vec_t pk { 2,83,129,19,64,223,209,62,251,216,212,136,175,14,167,179,130,248,129,62,119,168,174,198,160,215,112,86,237,53,106,243,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 69 ") {
    byte_vec_t msg { 252,43,157,102 };
    byte_vec_t sig { 102,85,24,106,139,10,77,127,224,94,234,129,156,190,164,119,170,94,68,195,33,250,48,82,105,123,80,85,206,140,48,1,165,99,71,242,100,38,69,6,174,24,103,108,18,88,115,193,201,5,14,162,253,140,111,61,200,154,133,190,236,190,247,230 };
    byte_vec_t pk { 3,75,86,72,125,114,16,0,94,161,14,149,36,146,130,21,60,186,14,77,118,39,209,145,231,112,74,95,48,26,119,28,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 70 ") {
    byte_vec_t msg { 119,101,67,53 };
    byte_vec_t sig { 77,103,39,15,242,73,222,245,103,92,109,118,21,116,217,170,58,96,133,166,145,205,127,106,201,111,24,202,216,9,79,225,102,125,131,208,192,211,42,115,124,243,98,241,116,81,75,75,227,165,243,255,156,133,219,87,131,211,227,128,46,255,47,124 };
    byte_vec_t pk { 4,251,135,17,24,138,99,76,219,99,85,169,133,14,218,6,91,69,240,87,103,35,103,21,175,83,115,99,154,62,5,122,193,215,32,202,72,129,17,39,137,154,235,99,9,1,213,216,169,169,179,69,96,229,139,209,107,200,143,15,155,188,46,228,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 70 ") {
    byte_vec_t msg { 97,153,159,96 };
    byte_vec_t sig { 218,148,207,5,168,246,192,55,215,241,13,160,202,222,188,49,84,239,40,110,29,178,17,255,133,59,94,245,104,137,24,0,60,83,148,11,243,29,136,155,253,94,62,201,72,17,205,247,202,200,143,42,205,39,52,20,47,130,217,222,34,102,178,188 };
    byte_vec_t pk { 4,251,118,61,59,27,183,108,224,88,238,227,255,226,130,238,8,24,77,113,84,119,1,226,44,181,51,122,0,175,198,199,254,130,185,241,140,208,229,170,159,196,210,121,237,88,23,65,117,236,248,205,108,58,32,203,173,119,36,94,96,140,235,125,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 70 ") {
    byte_vec_t msg { 2,45,186,110 };
    byte_vec_t sig { 130,220,117,243,80,172,140,220,162,198,185,57,179,239,132,108,16,115,86,162,253,120,235,124,32,158,2,69,71,232,57,247,223,15,170,249,35,218,44,211,43,27,72,169,102,195,56,61,87,165,130,46,146,209,187,24,56,133,45,17,174,227,41,42 };
    byte_vec_t pk { 2,79,107,112,205,232,173,51,220,93,199,146,164,94,192,46,65,254,120,29,228,117,125,181,211,100,76,218,137,223,188,107,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 70 ") {
    byte_vec_t msg { 255,183,126,149 };
    byte_vec_t sig { 142,165,88,231,21,139,62,57,82,183,31,220,109,77,2,172,192,12,62,236,254,70,45,29,223,101,179,89,132,9,131,94,146,205,5,40,110,185,56,85,220,170,81,154,83,249,119,140,200,1,193,150,33,101,152,175,133,189,224,108,76,4,63,109 };
    byte_vec_t pk { 3,238,219,232,142,250,188,168,41,75,51,188,208,110,192,73,139,152,126,30,183,39,100,27,149,218,31,100,115,187,135,8,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 71 ") {
    byte_vec_t msg { 235,21,73,77 };
    byte_vec_t sig { 110,51,33,250,228,10,110,36,179,35,145,89,129,132,243,13,146,227,187,87,236,118,39,2,192,126,75,169,203,197,168,42,133,190,173,203,169,85,169,55,197,208,232,183,184,6,192,209,130,35,62,57,41,17,165,90,65,21,183,138,42,88,132,172 };
    byte_vec_t pk { 4,237,16,175,119,79,49,102,117,90,236,174,77,86,109,106,54,44,28,26,142,229,217,122,235,234,9,66,209,36,42,91,145,149,191,82,252,118,175,245,152,51,20,91,191,136,235,217,79,171,3,185,177,69,28,248,222,69,66,166,181,50,9,73,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 71 ") {
    byte_vec_t msg { 192,166,177,105 };
    byte_vec_t sig { 138,239,49,18,185,88,23,184,217,25,219,2,79,34,73,149,248,76,95,245,123,160,183,30,85,241,141,138,160,190,123,68,54,16,51,73,227,245,241,36,75,168,212,46,179,225,138,233,96,226,196,156,102,232,194,239,164,199,215,208,1,250,119,201 };
    byte_vec_t pk { 4,54,170,142,45,67,23,97,3,64,3,109,96,101,203,75,27,228,199,225,67,213,71,15,174,214,186,235,22,91,229,243,111,40,132,146,80,27,42,185,243,202,144,102,177,87,208,184,187,160,150,28,83,7,120,238,54,35,185,179,189,38,136,196,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 71 ") {
    byte_vec_t msg { 119,233,217,216 };
    byte_vec_t sig { 150,67,16,245,116,71,26,39,132,245,189,239,47,248,176,7,223,108,144,205,75,240,109,45,8,85,229,236,204,93,110,142,252,66,234,132,48,235,8,72,121,80,210,48,218,98,86,176,105,13,172,181,202,12,242,118,14,179,188,75,120,113,25,162 };
    byte_vec_t pk { 3,227,252,44,117,198,109,107,35,150,183,175,165,154,52,120,13,116,175,122,98,185,216,120,25,151,223,5,238,16,15,252,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 71 ") {
    byte_vec_t msg { 24,205,183,180 };
    byte_vec_t sig { 147,46,154,137,207,232,217,20,250,153,222,143,37,51,82,175,15,100,121,69,85,231,52,198,200,87,132,214,97,142,26,179,160,68,175,198,142,92,224,179,227,58,153,58,95,150,6,233,93,97,58,197,48,120,17,228,224,218,40,169,4,204,182,85 };
    byte_vec_t pk { 3,59,102,138,126,66,122,97,202,157,237,179,164,210,73,78,204,42,111,240,63,95,40,53,136,31,113,70,76,25,215,113,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 72 ") {
    byte_vec_t msg { 117,241,250,211 };
    byte_vec_t sig { 202,173,165,66,96,80,170,12,180,215,80,138,228,107,94,175,19,237,144,127,43,54,36,243,156,203,78,72,181,115,198,40,254,65,14,244,251,183,136,180,27,178,86,6,250,165,205,80,196,117,189,147,124,60,56,142,62,238,111,194,7,224,73,116 };
    byte_vec_t pk { 4,105,246,142,172,4,187,118,87,67,103,117,255,224,26,86,46,110,113,0,122,55,153,117,208,188,221,49,106,147,255,37,57,172,68,53,34,84,199,158,75,152,163,8,128,70,109,110,195,38,57,125,180,26,3,55,177,37,230,192,190,237,109,13,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 72 ") {
    byte_vec_t msg { 100,124,103,153 };
    byte_vec_t sig { 128,236,29,46,117,231,55,57,89,206,197,28,159,202,128,116,135,20,101,72,207,140,66,9,33,9,173,212,78,157,192,222,185,99,18,45,70,13,69,14,178,9,43,90,122,205,126,146,136,240,216,75,152,213,7,240,246,91,102,194,206,183,99,36 };
    byte_vec_t pk { 4,221,42,1,78,243,177,254,109,112,52,73,179,177,129,125,64,8,208,163,154,94,252,176,10,15,69,58,198,210,81,231,100,133,200,40,7,61,63,44,233,172,247,17,4,207,142,224,91,183,79,234,71,54,51,127,61,215,84,225,237,20,240,60,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 72 ") {
    byte_vec_t msg { 5,136,18,39 };
    byte_vec_t sig { 213,91,76,221,154,193,235,157,42,181,69,123,113,44,37,91,220,90,21,198,151,16,9,22,162,147,61,201,211,78,117,197,159,76,250,207,252,137,43,148,80,124,157,85,53,250,79,223,65,184,181,151,37,49,73,74,243,36,73,25,43,140,171,83 };
    byte_vec_t pk { 3,192,122,63,232,131,132,108,2,254,109,223,215,159,223,232,195,75,171,145,169,118,141,71,120,147,103,205,248,199,186,77,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 72 ") {
    byte_vec_t msg { 189,205,212,214 };
    byte_vec_t sig { 135,5,193,78,138,134,38,162,74,93,129,66,41,119,231,226,121,3,82,209,172,17,66,168,99,193,210,87,13,76,252,36,226,213,66,63,105,6,48,118,148,78,214,27,84,23,131,152,148,208,82,50,101,184,66,151,111,222,0,181,13,90,241,227 };
    byte_vec_t pk { 3,202,10,47,76,122,108,94,194,92,199,90,238,147,49,199,191,169,219,10,116,219,220,192,148,173,13,150,12,164,119,130,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 73 ") {
    byte_vec_t msg { 251,191,53,184 };
    byte_vec_t sig { 32,248,210,57,194,183,64,65,234,211,171,59,222,26,190,143,198,31,81,166,30,102,4,61,231,11,204,156,58,64,91,222,169,69,59,86,114,183,88,157,83,247,110,241,48,87,115,79,188,63,93,180,0,32,68,151,201,94,137,164,5,166,14,188 };
    byte_vec_t pk { 4,80,18,249,127,97,232,195,0,213,89,225,103,70,185,149,183,154,232,215,248,148,123,113,151,171,233,84,214,146,191,72,106,84,167,73,107,96,75,45,196,186,62,107,137,161,9,173,22,169,130,123,254,187,110,254,224,23,109,248,133,138,30,179,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 73 ") {
    byte_vec_t msg { 7,103,120,67 };
    byte_vec_t sig { 46,8,29,44,115,119,97,252,152,57,52,202,51,13,238,172,247,70,111,100,246,31,170,206,99,41,170,84,97,118,49,184,124,225,197,93,245,244,39,173,119,253,42,128,100,241,240,31,195,30,65,220,224,2,162,163,146,109,229,148,249,125,225,98 };
    byte_vec_t pk { 4,131,156,88,67,104,195,182,233,92,50,43,89,45,15,78,91,25,250,88,180,154,2,109,100,217,122,159,63,19,219,207,207,115,244,150,162,182,7,230,23,23,39,96,94,170,154,212,37,155,220,192,79,186,138,254,78,233,95,228,88,153,214,115,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 73 ") {
    byte_vec_t msg { 53,221,215,28 };
    byte_vec_t sig { 131,124,109,111,36,17,253,93,208,195,159,90,2,177,169,183,96,212,60,63,246,89,58,23,248,245,103,248,178,195,114,70,65,26,79,107,184,156,111,96,122,117,188,41,59,246,103,43,79,111,149,72,65,58,221,49,215,13,102,88,1,43,18,37 };
    byte_vec_t pk { 2,13,24,239,74,224,146,143,200,78,83,209,42,59,254,2,199,243,228,149,168,187,100,138,79,158,91,107,45,6,3,100,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 73 ") {
    byte_vec_t msg { 250,165,203,21 };
    byte_vec_t sig { 28,108,166,178,109,163,66,44,143,44,232,95,134,122,41,40,30,64,190,194,94,231,13,61,168,103,15,14,141,31,71,99,163,145,201,106,143,7,125,172,130,36,84,15,37,199,52,218,44,91,16,175,222,115,254,68,38,3,195,97,62,29,70,252 };
    byte_vec_t pk { 2,3,150,238,2,15,243,23,241,116,92,208,153,63,48,182,84,26,252,87,242,170,198,214,175,5,222,56,208,111,210,249,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 74 ") {
    byte_vec_t msg { 1,75,163,65 };
    byte_vec_t sig { 117,74,218,19,186,165,214,27,174,115,228,60,98,12,1,205,192,138,214,105,31,66,78,95,109,106,18,52,27,15,128,12,237,210,214,179,72,51,196,125,58,192,134,230,3,39,24,236,1,227,209,174,37,168,175,53,219,104,19,240,130,63,41,11 };
    byte_vec_t pk { 4,41,171,112,49,235,48,235,115,235,0,102,156,79,39,223,44,78,190,69,21,233,200,31,123,235,111,133,241,82,189,71,142,222,164,78,108,35,218,29,8,152,61,235,52,233,87,173,5,28,196,149,186,223,113,110,36,171,150,200,83,60,111,185,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 74 ") {
    byte_vec_t msg { 187,10,101,153 };
    byte_vec_t sig { 99,59,86,39,124,236,201,207,30,113,206,138,208,160,241,233,154,87,1,198,87,97,0,189,177,183,77,150,90,55,48,204,74,126,97,100,125,77,68,164,131,119,8,67,207,238,101,22,149,48,65,100,23,252,18,191,255,61,87,154,202,26,46,130 };
    byte_vec_t pk { 4,119,64,26,205,186,138,61,133,141,145,30,111,25,179,152,11,127,118,22,118,52,28,156,144,11,237,172,41,193,241,234,4,173,68,196,111,234,183,30,87,148,49,178,40,185,68,190,81,85,48,149,202,70,54,157,146,147,33,110,231,189,65,176,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 74 ") {
    byte_vec_t msg { 215,42,180,22 };
    byte_vec_t sig { 23,28,72,177,161,92,251,214,153,183,119,140,77,183,243,55,210,184,131,95,252,85,14,146,137,5,38,126,245,218,141,69,49,12,132,120,207,94,248,150,30,104,37,139,26,180,23,244,52,58,11,236,144,179,250,1,59,156,192,29,97,110,212,135 };
    byte_vec_t pk { 3,220,247,151,12,126,221,83,154,122,131,140,63,229,209,166,231,253,31,166,134,18,208,191,53,104,241,239,22,46,252,0,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 74 ") {
    byte_vec_t msg { 124,101,0,234 };
    byte_vec_t sig { 46,210,110,181,218,27,141,105,216,110,45,37,82,220,107,214,238,11,108,236,152,40,130,8,17,13,41,106,153,54,200,84,241,217,117,236,116,195,42,34,29,111,128,86,162,35,18,151,27,229,73,66,40,203,229,25,185,47,93,30,99,222,220,121 };
    byte_vec_t pk { 2,98,136,255,60,106,153,183,81,94,189,182,172,86,237,164,143,226,183,173,12,54,11,222,209,189,154,70,88,246,249,230,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 75 ") {
    byte_vec_t msg { 101,8,32,22 };
    byte_vec_t sig { 247,231,133,164,219,172,82,221,44,236,155,231,110,95,58,46,91,13,136,120,215,91,158,195,117,90,101,1,108,254,212,215,101,65,219,175,166,134,228,255,54,92,216,201,146,158,5,0,194,240,200,6,236,194,159,58,190,57,201,148,230,212,2,116 };
    byte_vec_t pk { 4,217,87,62,40,254,168,52,60,224,67,153,112,208,91,103,174,120,59,20,165,78,4,0,112,12,83,223,195,228,237,202,110,5,163,48,241,85,134,221,186,33,19,131,69,241,89,49,208,110,169,105,246,103,9,172,21,63,179,14,11,53,96,152,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 75 ") {
    byte_vec_t msg { 128,166,90,222 };
    byte_vec_t sig { 88,119,99,237,34,66,86,253,194,229,90,244,9,107,58,247,124,165,154,42,166,211,226,123,210,129,244,239,80,5,95,20,250,11,161,234,17,42,185,133,127,221,32,12,143,159,74,35,212,137,81,16,47,231,133,76,31,148,149,179,44,69,141,95 };
    byte_vec_t pk { 4,76,4,10,20,232,240,40,105,3,128,75,147,242,136,195,233,209,197,149,201,27,7,75,172,55,61,51,83,38,196,160,156,145,224,62,188,206,67,112,24,4,135,215,151,48,34,85,199,95,40,59,121,201,173,14,169,40,151,141,139,82,126,9,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 75 ") {
    byte_vec_t msg { 250,248,126,145 };
    byte_vec_t sig { 17,158,42,72,12,121,172,255,221,174,145,205,210,93,231,149,113,241,252,89,107,6,102,162,105,31,85,200,203,162,211,12,175,85,145,163,116,125,194,17,110,190,14,100,191,99,45,252,120,179,202,236,170,29,124,247,152,29,51,56,191,75,121,174 };
    byte_vec_t pk { 2,80,61,179,198,78,194,166,201,106,180,184,206,38,146,228,8,100,113,173,101,119,199,32,197,121,57,6,35,175,108,189,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 75 ") {
    byte_vec_t msg { 233,165,132,200 };
    byte_vec_t sig { 38,186,188,20,154,246,224,77,189,165,85,139,7,114,161,55,24,46,34,23,48,175,27,79,225,107,97,202,225,138,172,200,30,112,26,189,15,75,229,147,71,133,7,46,179,73,111,215,100,191,209,43,17,3,162,62,106,19,21,172,73,197,69,132 };
    byte_vec_t pk { 3,226,63,0,152,70,156,238,141,58,164,207,26,60,238,212,74,118,246,121,88,216,19,143,27,200,239,82,195,36,125,172,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 76 ") {
    byte_vec_t msg { 66,93,172,135 };
    byte_vec_t sig { 209,209,34,153,249,51,191,66,101,217,19,226,67,238,216,206,37,144,212,43,4,180,125,150,166,112,137,179,218,94,102,236,47,177,250,3,5,199,51,41,231,15,213,183,221,26,251,177,74,183,34,220,128,107,84,68,251,221,149,231,176,47,122,200 };
    byte_vec_t pk { 4,250,93,14,205,173,146,236,17,185,24,59,145,92,245,9,62,145,217,104,168,153,121,120,133,170,154,193,75,115,172,6,129,46,21,6,0,67,237,136,97,73,60,137,135,73,235,146,127,41,93,248,43,127,55,68,123,75,96,68,70,204,204,4,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 76 ") {
    byte_vec_t msg { 247,255,94,241 };
    byte_vec_t sig { 96,151,222,72,76,246,216,118,141,13,229,123,133,199,74,206,2,80,16,251,166,25,26,168,252,132,233,89,19,94,174,143,72,37,74,155,79,178,238,82,237,10,185,27,82,168,183,146,109,58,105,80,12,222,87,131,124,245,154,204,215,209,39,222 };
    byte_vec_t pk { 4,32,56,86,79,85,211,240,122,26,112,217,160,42,31,145,75,93,26,29,193,144,237,64,66,248,164,10,25,96,179,251,119,178,131,20,72,138,128,46,185,213,232,36,229,101,213,70,209,21,51,216,199,115,199,58,225,174,203,186,163,38,110,248,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 76 ") {
    byte_vec_t msg { 60,214,51,216 };
    byte_vec_t sig { 94,231,71,73,42,252,180,85,59,140,24,69,59,40,171,156,103,66,76,1,146,49,28,31,73,73,118,8,46,47,21,225,60,58,170,162,23,155,10,51,183,200,88,108,172,235,154,83,233,173,183,161,219,205,76,254,49,6,227,18,192,106,80,91 };
    byte_vec_t pk { 3,218,230,18,7,37,54,73,11,242,94,238,47,60,242,51,86,228,236,38,253,205,109,7,138,232,181,103,245,14,238,177,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 76 ") {
    byte_vec_t msg { 169,50,202,250 };
    byte_vec_t sig { 225,49,55,194,138,142,240,170,249,116,96,48,117,51,135,192,56,53,250,29,254,244,179,28,92,144,41,15,110,21,169,51,22,175,146,105,78,214,122,118,85,149,229,140,98,199,181,225,113,1,83,126,5,82,51,208,64,156,32,100,226,231,220,149 };
    byte_vec_t pk { 2,227,199,132,44,233,93,134,246,198,136,80,161,110,60,245,246,4,129,109,206,90,137,200,208,65,237,109,237,26,111,15,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 77 ") {
    byte_vec_t msg { 244,150,127,226 };
    byte_vec_t sig { 211,234,2,96,201,223,64,150,194,161,124,46,149,63,127,137,2,242,42,144,140,5,24,172,212,137,110,80,6,47,166,97,241,226,126,9,247,184,65,247,95,43,63,110,85,33,7,10,8,183,251,165,120,150,230,45,128,73,155,238,84,13,96,111 };
    byte_vec_t pk { 4,96,47,236,37,242,108,154,201,22,32,25,173,200,227,126,188,236,230,24,66,115,34,152,92,0,40,244,214,75,187,0,204,142,202,121,229,94,19,129,60,117,47,80,6,156,221,85,97,99,103,96,221,124,67,124,32,171,77,64,241,129,176,230,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 77 ") {
    byte_vec_t msg { 37,11,40,194 };
    byte_vec_t sig { 190,195,7,169,128,126,190,59,28,255,218,187,38,121,15,77,18,99,250,171,95,125,16,176,155,108,92,120,115,73,140,199,177,10,210,48,186,32,87,18,86,84,248,92,28,2,78,119,122,82,16,130,7,149,122,17,201,124,109,122,33,157,78,131 };
    byte_vec_t pk { 4,40,51,245,100,125,234,46,224,117,180,86,182,67,46,167,39,203,212,137,120,149,9,83,219,240,119,41,96,60,244,214,161,66,156,177,37,175,52,180,235,48,220,110,34,35,52,243,197,96,65,57,251,152,58,102,199,117,166,163,176,251,193,69,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 77 ") {
    byte_vec_t msg { 0,111,82,65 };
    byte_vec_t sig { 253,210,134,164,134,165,10,164,21,5,171,18,188,78,218,211,173,193,176,217,197,201,142,224,215,190,50,81,165,36,117,248,94,34,57,17,121,58,130,139,190,152,222,251,113,82,123,189,93,227,131,110,138,238,89,31,214,203,78,0,246,159,163,4 };
    byte_vec_t pk { 2,140,61,213,77,152,126,8,94,240,245,140,237,159,231,195,176,6,108,102,140,193,132,114,142,161,22,187,251,17,130,42,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 77 ") {
    byte_vec_t msg { 196,112,34,85 };
    byte_vec_t sig { 233,169,152,155,26,166,177,23,175,194,98,129,241,73,140,62,51,151,48,136,136,209,223,127,26,91,128,20,171,148,202,133,220,150,14,227,0,251,125,26,175,183,73,234,178,194,93,229,162,36,212,2,195,155,232,151,183,132,28,98,171,80,86,75 };
    byte_vec_t pk { 2,63,1,25,186,188,222,28,107,172,203,227,28,166,204,208,198,240,100,129,20,49,47,209,186,251,238,181,173,246,137,48,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 78 ") {
    byte_vec_t msg { 114,95,119,196 };
    byte_vec_t sig { 170,21,100,72,100,57,104,238,187,81,171,120,89,72,244,8,205,106,168,179,52,54,3,192,209,3,214,11,28,43,155,246,225,243,124,7,105,79,251,212,46,44,83,223,15,171,50,100,132,157,111,241,114,31,160,250,4,178,234,178,146,181,118,19 };
    byte_vec_t pk { 4,208,28,8,135,130,15,235,213,209,230,192,240,14,36,121,44,110,80,201,12,63,152,14,206,60,135,37,23,10,155,241,25,121,78,233,150,91,177,252,4,236,171,165,2,114,124,65,137,209,241,202,121,84,105,139,47,158,10,207,42,115,107,3,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 78 ") {
    byte_vec_t msg { 187,252,228,133 };
    byte_vec_t sig { 73,203,99,109,88,253,83,142,43,175,145,177,139,3,252,29,237,153,24,11,213,254,89,138,137,186,38,193,157,134,136,105,254,78,56,231,87,147,209,165,40,17,107,188,181,78,18,245,233,109,95,54,162,57,49,57,110,117,254,182,196,236,43,162 };
    byte_vec_t pk { 4,10,5,14,80,0,215,246,153,74,255,38,49,200,61,199,180,104,185,102,55,69,251,146,157,193,202,37,209,230,9,111,173,240,122,39,243,34,53,59,108,91,184,198,30,157,119,70,25,69,144,33,198,142,70,50,50,224,82,109,197,199,175,13,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 78 ") {
    byte_vec_t msg { 8,26,247,200 };
    byte_vec_t sig { 148,189,240,209,19,251,185,131,232,47,170,36,114,68,148,247,107,132,185,153,71,40,164,222,140,126,205,206,98,191,85,13,164,107,168,230,99,8,230,246,102,156,209,141,91,142,26,181,132,113,145,152,20,91,133,121,250,159,228,138,0,104,65,31 };
    byte_vec_t pk { 3,250,238,174,66,31,47,192,47,231,85,250,6,5,212,229,7,252,30,236,38,107,180,219,14,64,0,198,65,233,189,204,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 78 ") {
    byte_vec_t msg { 28,241,19,80 };
    byte_vec_t sig { 173,148,167,126,34,184,143,18,215,29,48,118,96,76,160,126,99,102,106,74,17,108,38,122,183,79,44,50,224,248,105,88,76,1,75,0,0,7,30,150,100,73,125,249,85,86,148,222,173,206,136,26,200,234,134,179,103,51,214,38,102,98,126,170 };
    byte_vec_t pk { 2,184,138,104,88,47,150,0,112,64,145,40,252,151,34,248,228,22,151,175,198,105,74,230,240,168,212,231,224,153,110,108,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 79 ") {
    byte_vec_t msg { 193,14,43,75 };
    byte_vec_t sig { 20,125,39,101,217,170,182,93,14,125,109,19,179,115,121,181,4,64,185,54,155,15,186,45,49,40,0,236,61,71,8,161,222,227,62,202,131,186,137,108,32,134,125,83,237,141,104,0,232,208,98,121,136,37,76,162,75,233,32,92,186,182,78,22 };
    byte_vec_t pk { 4,148,197,159,30,220,55,242,146,23,96,44,32,28,35,48,82,127,82,136,187,178,91,96,78,73,140,214,225,241,230,112,207,212,48,8,140,134,88,138,116,176,199,127,10,77,194,140,116,174,99,0,211,207,120,147,68,131,185,127,2,104,155,74,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 79 ") {
    byte_vec_t msg { 26,121,207,155 };
    byte_vec_t sig { 46,95,252,216,66,233,151,50,210,74,188,9,60,113,179,203,155,196,110,63,234,119,86,218,187,51,103,25,241,236,188,29,166,64,21,87,33,231,87,154,86,125,60,55,224,164,80,147,223,187,25,5,91,8,84,205,87,14,65,155,39,37,108,171 };
    byte_vec_t pk { 4,34,84,253,18,14,121,212,192,200,48,118,61,89,140,21,81,7,239,13,245,85,131,130,70,70,225,136,121,94,119,68,181,233,130,89,202,152,77,117,8,141,60,89,16,69,188,255,136,84,143,199,137,88,97,13,21,28,97,3,229,199,13,73,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 79 ") {
    byte_vec_t msg { 245,183,130,102 };
    byte_vec_t sig { 104,51,65,31,189,11,125,55,29,124,0,205,238,236,1,235,36,249,231,79,249,66,238,193,63,27,133,202,134,190,113,63,174,195,255,222,131,75,41,5,3,243,2,192,228,66,75,241,213,174,253,0,177,147,161,245,235,171,53,50,182,128,219,18 };
    byte_vec_t pk { 2,114,50,17,148,106,78,88,198,135,58,57,7,142,167,44,106,221,181,198,166,98,231,196,181,3,104,105,91,166,195,226,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 79 ") {
    byte_vec_t msg { 189,196,135,93 };
    byte_vec_t sig { 44,116,173,120,171,18,108,185,15,194,245,179,14,165,190,86,238,173,246,58,150,162,106,252,123,179,96,233,41,133,113,199,185,157,245,228,249,108,24,241,179,252,130,120,62,195,84,191,54,144,72,68,53,53,65,133,6,111,152,76,112,21,220,238 };
    byte_vec_t pk { 2,101,168,224,18,21,138,0,95,61,1,107,149,210,203,232,93,220,154,82,49,101,198,252,144,103,103,77,89,224,98,6,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 80 ") {
    byte_vec_t msg { 193,152,192,38 };
    byte_vec_t sig { 78,95,69,70,6,145,140,165,107,124,202,22,143,104,147,164,172,215,32,73,17,14,145,197,17,154,186,106,206,184,240,227,22,167,95,52,150,34,130,249,241,132,48,143,204,16,56,244,243,70,229,220,124,218,172,209,120,127,45,24,9,55,58,70 };
    byte_vec_t pk { 4,45,244,6,33,206,154,254,118,76,171,188,37,204,236,215,115,13,208,40,222,6,93,28,173,243,244,47,230,14,179,113,30,11,209,153,83,128,161,243,182,181,9,17,25,54,48,43,75,10,207,253,101,62,207,65,20,96,189,189,235,89,253,236,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 80 ") {
    byte_vec_t msg { 82,93,173,240 };
    byte_vec_t sig { 62,130,126,136,194,93,161,79,104,121,124,138,209,121,22,187,94,198,88,195,75,29,204,112,4,72,92,115,28,35,127,79,63,159,105,229,235,7,68,89,253,126,115,225,215,133,181,159,10,160,198,96,150,214,191,201,197,90,61,237,219,17,196,218 };
    byte_vec_t pk { 4,206,244,253,254,207,252,163,22,125,217,51,134,56,169,248,252,208,76,48,149,216,127,201,32,128,28,142,34,237,134,62,74,98,211,163,135,198,179,145,171,65,37,13,253,124,64,129,97,229,225,190,175,27,243,208,226,238,113,101,120,181,164,229,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 80 ") {
    byte_vec_t msg { 226,44,184,75 };
    byte_vec_t sig { 54,192,228,144,140,80,70,52,15,121,53,244,254,93,58,76,221,250,250,249,222,149,32,188,177,166,122,242,179,20,97,232,132,226,154,128,140,27,34,61,175,185,254,230,115,218,72,194,194,35,27,129,215,43,146,64,58,51,121,84,2,159,43,211 };
    byte_vec_t pk { 3,84,143,42,54,197,111,150,157,87,126,89,250,20,96,128,49,74,140,216,253,78,97,73,154,18,15,45,89,209,80,3,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 80 ") {
    byte_vec_t msg { 173,129,93,164 };
    byte_vec_t sig { 73,203,212,68,191,208,190,223,96,116,29,149,104,30,53,137,195,83,96,10,148,118,196,157,154,1,247,225,224,27,123,62,54,14,160,208,62,59,12,227,16,82,229,229,186,218,238,69,60,212,213,40,43,80,119,102,104,57,181,253,140,35,21,195 };
    byte_vec_t pk { 2,3,149,82,220,195,165,12,100,89,31,88,79,66,12,161,241,131,93,161,191,81,114,240,47,57,104,219,4,91,72,51,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 81 ") {
    byte_vec_t msg { 110,95,71,104 };
    byte_vec_t sig { 146,238,93,95,69,121,188,175,13,251,254,17,12,193,133,3,97,100,230,1,229,17,230,76,62,111,138,6,86,96,21,142,101,238,67,32,202,41,5,91,117,107,66,11,117,168,43,89,70,241,244,97,161,35,198,49,86,161,193,36,2,198,215,160 };
    byte_vec_t pk { 4,175,14,33,191,180,60,16,129,218,209,58,109,215,245,23,40,103,213,44,193,83,144,168,162,3,203,239,130,226,149,52,248,141,232,228,165,43,212,106,151,172,162,79,237,198,192,43,142,27,11,255,229,73,186,81,212,150,78,212,6,80,146,247,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 81 ") {
    byte_vec_t msg { 37,64,228,20 };
    byte_vec_t sig { 109,155,3,135,10,5,204,154,82,21,225,133,206,216,176,148,153,217,125,186,49,81,255,179,133,164,85,100,81,164,90,230,138,61,191,235,115,127,17,16,199,213,158,184,132,210,109,48,182,154,222,239,5,109,219,171,136,178,97,85,230,57,88,64 };
    byte_vec_t pk { 4,218,57,71,32,55,13,88,227,134,187,219,72,87,76,232,12,147,44,166,136,79,186,99,101,126,235,117,65,48,80,168,204,115,224,60,100,17,248,42,101,31,45,42,226,93,114,155,4,148,75,20,239,95,154,2,2,105,215,209,97,198,91,87,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 81 ") {
    byte_vec_t msg { 240,56,200,181 };
    byte_vec_t sig { 58,202,23,193,82,103,192,233,220,140,221,3,160,101,27,7,58,208,217,175,22,2,151,214,109,85,8,147,196,204,174,36,17,55,94,51,91,62,48,162,105,246,19,251,237,53,18,169,200,158,115,235,243,163,77,193,95,253,106,215,48,157,33,80 };
    byte_vec_t pk { 3,52,205,62,56,111,164,170,28,34,69,186,222,179,6,191,227,170,250,157,112,3,64,253,192,27,66,129,9,145,36,62,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 81 ") {
    byte_vec_t msg { 135,110,224,131 };
    byte_vec_t sig { 77,68,218,38,217,218,125,201,80,91,195,145,74,159,158,93,28,197,171,50,229,195,106,171,89,20,75,236,51,189,215,246,88,251,159,50,121,255,195,55,214,138,235,232,83,187,81,222,84,233,145,37,200,107,136,218,2,128,8,55,165,232,157,122 };
    byte_vec_t pk { 3,220,166,190,89,194,111,169,133,16,45,130,19,246,93,240,105,233,144,35,93,104,17,159,102,45,168,55,173,246,198,203,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 82 ") {
    byte_vec_t msg { 141,139,111,226 };
    byte_vec_t sig { 161,78,131,138,55,148,20,32,183,165,116,172,54,158,39,11,0,174,81,135,88,204,91,224,104,168,192,110,11,168,102,25,193,74,0,23,99,125,113,156,200,92,197,59,202,208,36,202,105,238,100,55,220,101,120,169,106,231,146,78,140,221,163,174 };
    byte_vec_t pk { 4,200,193,124,240,241,2,72,185,65,117,230,192,167,95,121,231,38,30,35,107,176,85,213,34,44,1,181,64,213,33,167,244,109,9,102,88,20,215,248,220,57,228,207,109,229,0,250,62,1,85,114,78,1,87,208,25,71,79,200,29,63,220,125,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 82 ") {
    byte_vec_t msg { 244,75,73,85 };
    byte_vec_t sig { 40,75,50,154,233,154,210,238,126,186,117,19,153,189,104,136,199,74,217,42,73,214,35,90,219,254,112,153,197,76,149,20,253,22,33,184,121,24,67,34,119,129,47,197,159,176,231,22,45,46,239,88,193,66,39,38,24,218,96,255,241,166,72,6 };
    byte_vec_t pk { 4,176,3,220,86,229,216,92,156,141,63,132,43,124,23,150,97,77,49,107,61,156,175,235,119,41,201,127,85,132,165,79,31,163,83,43,104,123,15,109,145,33,42,91,189,204,105,145,9,129,74,11,207,28,68,37,3,203,231,214,236,85,149,36,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 82 ") {
    byte_vec_t msg { 30,200,44,74 };
    byte_vec_t sig { 172,124,169,74,131,76,92,232,167,134,167,158,139,18,28,252,253,196,163,11,98,77,134,63,7,163,104,243,152,199,68,248,208,89,155,239,208,19,4,241,166,195,219,47,241,126,44,244,228,6,124,237,173,24,110,230,215,140,178,237,205,2,42,0 };
    byte_vec_t pk { 3,144,230,246,93,211,112,252,24,110,51,66,79,80,245,139,194,246,48,79,88,193,37,56,208,52,58,101,195,75,110,121,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 82 ") {
    byte_vec_t msg { 153,207,137,183 };
    byte_vec_t sig { 50,127,226,191,90,245,129,37,179,50,151,177,93,138,25,164,29,38,123,64,189,81,86,101,26,195,192,28,75,227,168,39,48,93,244,132,242,21,1,189,183,126,89,237,94,6,204,39,153,186,105,31,126,154,218,1,135,98,112,116,147,217,59,105 };
    byte_vec_t pk { 2,74,50,237,70,172,195,10,255,62,23,10,152,188,55,80,30,249,172,207,98,20,135,124,61,119,203,118,247,181,205,255,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 83 ") {
    byte_vec_t msg { 248,14,220,36 };
    byte_vec_t sig { 230,16,123,100,131,178,189,152,91,34,209,10,12,29,210,152,109,136,16,124,85,71,240,4,53,124,155,46,198,165,208,68,202,68,152,224,136,195,17,145,4,37,80,57,225,193,44,162,193,182,133,165,245,203,85,31,193,135,127,81,244,200,144,94 };
    byte_vec_t pk { 4,242,207,140,36,61,117,65,150,144,116,154,18,77,10,119,33,140,164,115,207,25,125,168,220,155,180,83,26,50,63,197,45,85,201,116,142,26,110,203,176,225,227,206,42,136,129,168,25,43,18,94,225,106,255,219,148,206,254,163,124,99,217,35,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 83 ") {
    byte_vec_t msg { 238,220,158,153 };
    byte_vec_t sig { 133,217,251,32,44,7,40,229,75,204,173,249,130,117,225,6,62,120,78,127,90,67,69,118,170,124,89,63,74,201,14,213,216,208,131,171,99,105,46,209,213,11,40,182,184,130,175,232,107,10,98,14,2,134,28,176,22,4,205,185,243,86,109,28 };
    byte_vec_t pk { 4,235,82,23,167,81,235,85,188,3,240,253,50,0,6,208,29,250,12,0,192,130,156,203,139,44,227,191,15,159,23,23,53,137,60,120,179,9,102,109,175,181,77,199,163,133,42,40,253,73,3,119,38,228,11,176,25,116,12,49,143,104,16,60,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 83 ") {
    byte_vec_t msg { 208,108,138,236 };
    byte_vec_t sig { 170,65,181,232,16,162,92,44,62,173,126,86,201,29,23,237,51,218,1,254,243,137,85,242,171,122,247,188,113,94,173,93,39,125,6,31,165,6,96,192,90,100,130,16,42,89,213,58,165,112,158,90,133,191,134,94,231,78,128,100,45,70,140,229 };
    byte_vec_t pk { 2,90,78,37,201,74,208,122,12,192,55,225,10,171,75,192,246,107,180,20,50,142,175,209,10,12,17,120,241,63,44,232,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 83 ") {
    byte_vec_t msg { 35,49,136,83 };
    byte_vec_t sig { 157,95,101,93,91,238,152,1,123,25,187,149,54,95,184,199,107,96,73,180,100,66,14,103,121,197,110,61,116,136,236,17,32,110,202,235,156,116,52,7,238,205,181,175,63,31,114,81,45,206,141,93,97,191,89,195,242,54,125,106,164,254,214,204 };
    byte_vec_t pk { 2,58,167,83,222,126,53,251,217,187,82,110,156,234,44,160,174,21,171,144,178,166,104,23,107,229,4,139,221,10,104,169,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 84 ") {
    byte_vec_t msg { 191,132,78,127 };
    byte_vec_t sig { 211,86,199,202,161,203,171,235,1,47,129,74,133,62,254,103,56,218,67,50,48,200,9,99,214,114,7,32,76,132,227,253,157,55,2,253,179,195,92,182,30,241,134,11,151,164,22,85,168,19,118,149,46,82,173,165,65,64,197,31,103,180,22,184 };
    byte_vec_t pk { 4,55,175,142,24,161,23,155,67,82,236,51,80,193,95,92,240,106,128,112,230,189,185,69,226,86,206,94,95,20,158,69,107,178,235,92,143,153,206,142,19,226,95,2,3,241,47,142,152,46,160,225,61,1,191,26,97,79,98,178,185,86,109,164,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 84 ") {
    byte_vec_t msg { 25,179,190,193 };
    byte_vec_t sig { 39,218,233,17,98,137,35,129,237,109,191,84,246,234,145,167,58,154,98,5,180,151,166,241,146,55,250,234,184,167,191,152,197,97,143,206,243,88,126,104,156,252,139,187,15,254,76,207,201,33,46,163,160,237,82,163,221,226,183,159,200,229,31,107 };
    byte_vec_t pk { 4,213,189,67,74,104,49,202,126,127,72,243,106,53,106,71,156,199,81,253,149,63,241,3,194,55,223,33,22,52,219,253,79,224,33,132,152,42,42,95,230,206,182,88,63,94,21,27,221,2,198,66,221,103,158,120,135,115,110,196,215,22,11,152,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 84 ") {
    byte_vec_t msg { 204,35,209,99 };
    byte_vec_t sig { 86,74,84,32,45,67,24,157,140,107,188,113,46,55,0,103,72,195,249,151,93,212,141,239,152,172,28,84,235,188,42,1,207,212,60,17,108,150,37,73,132,169,49,251,68,38,145,177,181,41,131,152,44,191,109,150,241,33,177,80,97,91,23,30 };
    byte_vec_t pk { 3,120,186,23,107,117,234,241,150,230,219,119,75,189,109,179,254,58,253,108,185,130,242,76,184,158,238,9,51,159,228,25,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 84 ") {
    byte_vec_t msg { 80,183,155,43 };
    byte_vec_t sig { 191,31,105,68,140,102,38,115,104,138,170,31,38,251,116,188,235,248,72,60,84,163,210,65,110,187,61,50,124,38,110,15,89,127,91,212,153,206,39,81,89,172,122,155,43,139,204,230,171,129,12,246,245,64,229,48,210,137,253,186,231,254,246,2 };
    byte_vec_t pk { 2,49,15,31,39,150,183,58,11,92,94,34,98,238,203,88,6,237,86,14,55,138,253,176,26,67,119,7,182,26,167,43,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 85 ") {
    byte_vec_t msg { 204,103,8,198 };
    byte_vec_t sig { 236,21,27,231,212,90,123,186,228,20,208,106,32,2,7,25,29,147,66,171,241,243,124,98,1,233,159,46,190,109,154,209,93,242,170,192,104,2,7,62,154,85,189,214,46,149,12,204,249,215,168,125,61,216,23,121,18,201,57,7,53,182,234,38 };
    byte_vec_t pk { 4,141,113,220,111,247,49,120,68,197,78,183,90,13,49,176,104,64,82,200,172,91,180,230,200,122,115,11,4,12,112,193,244,85,99,35,33,249,151,113,120,103,214,125,24,236,216,108,120,46,176,70,169,40,33,63,92,106,187,168,204,239,182,44,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 85 ") {
    byte_vec_t msg { 240,71,70,149 };
    byte_vec_t sig { 240,27,4,159,236,123,193,202,18,98,80,117,166,137,8,187,46,213,229,31,49,2,237,17,15,115,6,210,202,122,8,162,205,92,202,192,251,216,135,162,119,89,106,136,204,178,203,104,99,110,119,15,31,221,244,129,91,170,78,207,12,222,197,243 };
    byte_vec_t pk { 4,192,105,86,221,130,16,183,175,30,101,105,168,39,119,137,117,161,46,149,106,166,226,225,207,112,133,147,226,28,149,250,82,162,176,199,124,113,100,107,4,136,244,227,150,29,224,15,103,162,179,0,80,117,235,237,37,129,248,254,134,14,169,86,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 85 ") {
    byte_vec_t msg { 29,242,247,13 };
    byte_vec_t sig { 5,249,13,21,208,47,232,216,177,27,85,141,147,82,34,139,41,199,164,166,198,43,205,82,13,206,220,244,50,199,219,15,164,107,158,201,218,220,60,184,58,182,112,70,51,240,58,143,64,168,16,90,138,44,176,111,232,167,46,85,68,208,216,116 };
    byte_vec_t pk { 2,57,96,177,1,26,0,147,3,30,224,87,162,249,44,46,213,239,13,233,86,48,70,239,223,223,80,138,90,230,67,150,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 85 ") {
    byte_vec_t msg { 186,147,234,197 };
    byte_vec_t sig { 114,96,136,40,88,132,117,23,4,28,106,210,126,70,225,58,224,148,189,46,57,86,42,254,240,33,107,23,129,196,45,132,238,90,188,92,164,197,92,44,196,195,78,139,83,214,13,45,225,139,109,110,187,34,148,61,217,153,112,3,138,164,4,248 };
    byte_vec_t pk { 3,50,65,197,56,225,197,76,198,184,17,2,221,206,230,142,247,50,34,58,105,219,90,6,253,98,205,249,218,25,142,218,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 86 ") {
    byte_vec_t msg { 253,164,239,244 };
    byte_vec_t sig { 195,89,211,130,133,255,56,242,58,67,93,130,243,222,97,212,116,38,49,246,138,195,41,82,239,158,79,249,169,116,162,12,236,149,242,222,237,97,70,96,193,206,204,159,74,90,186,251,77,215,95,30,24,138,163,187,2,55,87,40,183,156,253,93 };
    byte_vec_t pk { 4,95,66,80,166,67,36,149,4,230,138,245,15,27,61,202,41,87,209,232,221,183,5,22,38,15,53,205,10,196,224,61,233,7,192,183,53,18,228,227,100,195,58,151,202,115,28,11,17,242,120,23,175,161,195,221,51,39,161,1,218,60,233,55,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 86 ") {
    byte_vec_t msg { 40,26,80,177 };
    byte_vec_t sig { 16,204,227,82,93,216,128,48,191,57,255,156,90,166,71,116,132,7,99,128,123,133,87,132,34,109,204,50,21,190,237,159,189,180,52,28,165,183,30,206,31,176,143,36,13,178,75,81,77,108,61,180,12,215,80,107,103,123,233,234,172,76,181,207 };
    byte_vec_t pk { 4,179,33,175,158,185,90,239,88,153,30,105,36,192,223,152,185,234,5,19,248,0,54,202,17,254,49,29,88,74,113,223,186,19,237,92,219,143,60,141,198,71,61,224,246,115,166,156,146,195,6,234,143,7,88,121,188,67,145,236,67,121,162,35,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 86 ") {
    byte_vec_t msg { 48,98,32,76 };
    byte_vec_t sig { 141,187,37,192,99,41,15,197,181,175,62,13,152,57,7,211,30,14,93,91,19,247,160,80,141,86,29,46,19,80,72,77,251,115,5,193,149,162,28,41,102,206,163,18,113,157,39,43,208,179,140,49,128,105,57,3,58,214,13,159,16,186,146,66 };
    byte_vec_t pk { 2,190,90,146,36,88,223,22,228,64,55,210,55,53,207,174,73,79,152,216,200,71,244,184,126,163,144,72,179,83,47,15,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 86 ") {
    byte_vec_t msg { 232,52,23,184 };
    byte_vec_t sig { 121,56,195,48,189,143,59,55,40,111,220,206,246,36,216,157,56,91,117,43,39,195,93,170,188,230,219,208,222,212,181,39,180,232,104,248,27,127,242,27,179,57,219,144,227,171,142,33,80,230,229,87,186,243,94,200,14,169,127,251,212,65,229,23 };
    byte_vec_t pk { 2,76,21,34,140,205,92,172,212,206,170,111,62,181,187,39,55,207,59,62,203,51,204,122,52,162,213,72,105,215,179,192,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 87 ") {
    byte_vec_t msg { 41,175,108,46 };
    byte_vec_t sig { 83,221,235,202,140,143,240,159,157,146,254,188,62,41,255,91,197,1,67,85,171,253,250,148,101,7,226,30,38,99,186,34,206,156,231,27,206,15,31,85,122,162,56,161,66,179,161,177,175,212,209,33,20,191,76,234,112,5,165,39,100,119,133,0 };
    byte_vec_t pk { 4,132,203,47,199,14,31,29,146,142,162,8,22,161,141,159,167,120,117,50,147,152,103,16,227,191,172,140,94,62,234,124,206,103,86,132,91,57,32,2,20,228,31,251,153,51,27,108,151,76,145,196,192,9,55,99,234,159,74,175,218,163,135,14,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 87 ") {
    byte_vec_t msg { 197,178,154,140 };
    byte_vec_t sig { 173,36,236,44,174,42,59,65,5,88,239,98,57,101,88,92,140,67,97,148,204,65,171,7,1,193,226,135,55,28,165,97,75,220,239,253,24,41,193,1,58,23,96,77,16,113,225,150,74,186,47,200,165,245,2,115,7,62,44,61,71,21,244,146 };
    byte_vec_t pk { 4,117,66,241,160,187,95,107,6,172,46,85,197,8,54,216,183,5,214,90,6,238,7,13,253,96,28,224,98,123,59,115,172,136,216,213,63,151,7,149,78,169,173,36,138,25,25,77,119,107,143,111,78,203,199,44,98,14,213,202,199,244,207,32,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 87 ") {
    byte_vec_t msg { 234,45,53,105 };
    byte_vec_t sig { 234,160,155,111,126,102,191,13,31,242,90,34,82,70,164,188,184,136,44,70,47,101,161,220,190,232,14,163,151,152,88,194,228,60,211,99,192,43,49,249,250,179,193,134,164,213,107,83,203,215,14,219,54,177,93,188,195,55,171,43,203,118,57,24 };
    byte_vec_t pk { 2,219,93,86,104,252,245,183,32,67,101,119,223,77,177,36,235,94,193,37,32,103,220,231,111,228,52,186,63,169,149,182,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 87 ") {
    byte_vec_t msg { 54,47,170,139 };
    byte_vec_t sig { 189,116,13,55,138,129,83,119,176,52,253,69,236,150,158,14,246,187,13,77,149,54,142,6,26,74,81,102,63,80,199,250,20,104,41,209,153,68,125,170,85,216,170,224,106,215,36,116,55,215,155,227,47,182,52,94,150,80,189,76,46,105,165,212 };
    byte_vec_t pk { 2,90,39,72,203,151,18,251,252,37,218,90,99,244,164,51,253,189,231,77,130,108,42,156,141,66,206,160,188,205,14,210,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 88 ") {
    byte_vec_t msg { 238,19,14,176 };
    byte_vec_t sig { 70,184,9,16,68,82,7,240,113,106,199,251,210,153,254,11,128,140,169,30,198,136,159,245,192,194,156,180,191,139,136,244,104,172,129,42,210,220,159,239,250,123,238,85,32,237,239,111,158,174,94,176,34,226,69,143,246,197,136,224,236,60,247,139 };
    byte_vec_t pk { 4,117,111,10,234,253,59,138,218,149,135,230,228,134,67,104,67,26,87,62,233,135,171,239,57,211,197,130,122,242,96,176,242,105,133,57,121,60,153,229,97,43,54,157,145,83,88,213,164,221,165,175,180,203,58,130,114,138,119,146,193,142,129,58,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 88 ") {
    byte_vec_t msg { 201,101,193,160 };
    byte_vec_t sig { 135,97,213,59,37,34,163,128,95,218,163,111,45,10,26,121,218,250,176,194,154,155,35,28,84,67,59,199,23,213,194,39,58,143,2,186,241,43,168,245,214,176,104,51,52,20,43,56,77,45,111,174,178,167,64,45,224,216,23,115,121,62,101,56 };
    byte_vec_t pk { 4,95,105,117,152,214,212,15,139,192,157,57,183,116,38,22,9,136,129,118,48,108,161,212,85,215,0,27,150,246,228,230,30,64,231,72,166,217,165,121,112,106,183,54,121,252,180,213,40,166,253,16,98,43,191,134,105,140,151,97,17,195,111,73,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 88 ") {
    byte_vec_t msg { 231,14,167,16 };
    byte_vec_t sig { 226,182,202,104,204,254,198,36,161,224,200,188,110,30,237,65,96,194,215,89,211,220,233,112,106,159,13,109,73,91,158,183,103,165,243,139,60,73,203,157,214,109,36,61,138,188,179,120,115,169,22,112,184,67,223,69,221,242,246,5,242,204,23,49 };
    byte_vec_t pk { 2,167,14,104,101,63,55,31,247,133,0,57,223,129,53,98,165,204,89,253,174,54,114,87,201,177,246,214,248,16,14,81,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 88 ") {
    byte_vec_t msg { 130,49,76,5 };
    byte_vec_t sig { 238,78,249,120,108,105,169,126,231,67,76,149,215,247,106,31,24,88,157,13,148,222,186,212,7,109,207,118,72,6,46,103,62,3,1,19,82,118,248,88,52,58,145,200,179,150,251,187,134,77,44,174,215,9,145,93,109,13,71,40,186,112,40,135 };
    byte_vec_t pk { 3,250,85,95,65,213,218,136,138,217,134,243,173,176,252,87,55,222,13,124,62,145,236,243,176,150,127,86,139,218,117,145,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 89 ") {
    byte_vec_t msg { 249,129,159,200 };
    byte_vec_t sig { 215,204,217,0,132,230,81,22,44,74,234,238,64,237,195,83,244,152,219,51,192,27,85,32,108,161,78,96,38,232,115,96,99,148,100,201,228,95,163,28,112,17,13,156,204,2,37,133,154,100,37,162,94,234,132,219,30,223,163,55,210,83,107,64 };
    byte_vec_t pk { 4,149,43,168,123,112,199,58,140,172,14,19,107,65,142,63,25,98,83,214,45,207,103,90,74,84,19,28,19,13,249,146,104,218,148,104,250,123,105,93,16,98,158,244,249,36,184,157,117,77,249,118,46,210,200,162,124,190,206,25,210,131,183,162,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 89 ") {
    byte_vec_t msg { 232,232,153,25 };
    byte_vec_t sig { 242,98,153,234,170,213,31,95,13,184,104,81,139,34,34,150,246,103,31,31,196,119,186,109,16,188,4,164,81,6,129,220,101,219,213,10,247,172,242,21,128,45,210,64,154,242,129,72,236,117,119,200,151,196,72,85,46,19,231,68,242,210,248,83 };
    byte_vec_t pk { 4,93,163,88,152,161,46,95,204,105,122,78,32,105,108,96,127,148,85,240,12,224,137,35,211,131,201,36,86,250,193,40,74,163,172,18,47,209,156,107,198,231,7,146,52,154,85,14,50,110,115,170,146,33,9,217,249,248,221,102,208,49,121,136,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 89 ") {
    byte_vec_t msg { 233,97,85,112 };
    byte_vec_t sig { 82,107,128,162,35,111,238,254,231,25,29,205,142,13,38,151,194,128,166,7,201,43,47,138,186,202,63,15,103,42,110,221,96,134,14,3,204,21,236,0,91,67,175,72,219,193,175,113,68,86,160,133,231,59,4,231,29,149,243,208,59,231,165,152 };
    byte_vec_t pk { 2,199,128,224,127,179,64,131,206,100,198,81,240,43,101,219,87,184,167,151,142,247,220,215,20,2,19,166,52,119,53,86,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 89 ") {
    byte_vec_t msg { 168,207,239,8 };
    byte_vec_t sig { 46,133,163,160,39,142,83,160,97,155,179,137,250,189,222,232,245,237,4,175,185,16,173,76,121,248,150,85,74,193,161,4,35,178,194,31,248,229,42,137,192,242,26,221,102,199,215,225,49,246,112,199,12,1,198,196,101,43,86,225,178,221,146,44 };
    byte_vec_t pk { 3,171,213,170,229,197,226,114,162,178,16,189,91,137,180,48,122,189,246,154,137,194,3,229,19,177,71,124,67,126,5,222,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 90 ") {
    byte_vec_t msg { 9,252,178,73 };
    byte_vec_t sig { 156,5,22,201,165,48,211,40,34,246,64,110,85,191,84,141,180,210,84,134,166,113,145,211,232,165,159,32,80,153,197,54,249,24,237,223,233,136,0,26,215,223,87,19,103,205,70,108,234,146,96,175,183,191,153,75,53,207,162,203,116,67,250,1 };
    byte_vec_t pk { 4,27,209,142,111,202,205,132,159,107,252,13,199,146,205,181,59,200,123,187,228,15,139,92,0,30,184,23,229,160,63,59,204,49,119,113,160,221,137,121,83,215,8,237,44,229,156,50,210,195,105,13,254,171,137,236,232,105,91,102,252,137,113,57,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 90 ") {
    byte_vec_t msg { 199,3,115,104 };
    byte_vec_t sig { 180,81,164,11,62,50,43,235,178,164,146,39,250,51,30,94,40,185,4,117,73,172,146,111,3,180,145,141,138,206,181,93,49,83,12,203,231,212,42,115,74,177,143,167,233,45,133,54,125,65,53,90,92,67,212,192,109,18,51,99,59,230,87,73 };
    byte_vec_t pk { 4,67,102,33,97,40,136,190,241,82,224,96,22,192,107,42,205,146,146,58,28,143,79,28,123,48,30,97,204,7,166,72,185,79,13,5,102,144,4,112,13,14,101,83,15,205,185,53,18,100,28,173,235,164,138,96,51,148,233,72,211,100,100,176,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 90 ") {
    byte_vec_t msg { 11,134,111,224 };
    byte_vec_t sig { 37,0,241,153,233,180,49,66,102,213,16,154,113,153,56,32,35,59,190,65,43,26,204,224,226,129,177,104,69,60,19,145,217,169,186,169,133,12,40,179,179,250,226,165,223,15,144,30,126,18,134,169,114,28,136,155,132,255,122,37,91,158,225,230 };
    byte_vec_t pk { 2,173,231,59,20,11,106,176,157,224,3,125,43,130,175,232,25,159,231,217,131,208,143,12,241,68,144,54,107,26,178,205,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 90 ") {
    byte_vec_t msg { 85,211,57,219 };
    byte_vec_t sig { 95,156,187,101,138,132,97,195,98,126,0,151,236,211,209,153,121,90,52,125,70,168,115,203,55,131,185,166,237,41,123,55,254,60,79,241,146,164,26,210,189,141,48,216,113,168,156,116,182,183,140,190,3,236,216,191,66,94,183,71,160,69,170,7 };
    byte_vec_t pk { 3,73,131,200,100,126,121,89,102,53,126,89,131,214,108,30,25,12,163,135,240,153,115,1,76,46,44,189,129,206,215,38,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 91 ") {
    byte_vec_t msg { 119,54,72,90 };
    byte_vec_t sig { 23,32,182,68,146,120,119,0,55,92,177,18,143,226,150,20,151,54,123,182,26,160,21,126,19,207,163,183,223,201,193,61,92,40,245,50,182,223,129,42,140,113,170,11,48,237,128,17,241,82,47,10,104,11,108,36,87,46,15,206,100,71,97,72 };
    byte_vec_t pk { 4,176,65,145,2,108,12,10,94,141,190,160,29,171,233,242,154,165,138,108,230,25,196,78,128,148,38,225,123,222,125,31,113,155,204,172,218,231,169,102,67,206,170,158,250,66,29,123,172,171,139,222,140,253,86,70,165,183,102,137,56,157,14,104,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 91 ") {
    byte_vec_t msg { 93,143,115,82 };
    byte_vec_t sig { 176,46,70,96,223,232,191,134,118,37,77,26,149,92,209,184,129,35,75,250,94,187,117,205,142,102,129,165,134,152,87,182,56,211,171,108,73,233,247,34,61,219,86,193,134,31,149,78,4,233,119,24,191,222,60,124,135,150,240,14,111,45,14,15 };
    byte_vec_t pk { 4,121,113,255,73,92,150,101,178,213,102,76,47,244,236,117,175,147,200,30,154,40,34,138,125,153,147,128,241,98,98,150,210,229,115,186,208,35,66,194,5,100,89,38,226,103,18,20,252,178,214,212,67,14,90,163,196,55,134,20,166,212,77,232,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 91 ") {
    byte_vec_t msg { 196,85,112,191 };
    byte_vec_t sig { 251,170,186,12,142,129,153,59,205,180,14,86,231,72,44,220,29,255,213,49,176,58,152,90,193,179,75,229,45,233,155,157,130,179,220,81,178,59,215,166,53,147,153,29,90,237,47,15,98,79,33,135,126,142,197,168,61,21,172,226,27,181,41,226 };
    byte_vec_t pk { 2,126,27,4,71,58,242,243,118,40,16,13,80,119,110,184,52,137,205,70,165,67,88,85,225,54,55,1,208,170,178,26,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 91 ") {
    byte_vec_t msg { 100,39,70,8 };
    byte_vec_t sig { 251,85,144,32,114,220,226,167,53,219,101,42,127,108,174,213,145,201,43,2,129,12,103,91,237,36,100,73,0,244,44,205,199,204,105,116,225,125,137,94,169,221,168,89,187,218,80,16,28,249,201,20,233,48,202,144,9,79,93,204,44,29,99,142 };
    byte_vec_t pk { 2,162,134,91,151,41,141,114,255,179,154,132,47,67,91,149,192,30,34,187,192,154,234,93,92,39,177,160,19,231,138,228,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 92 ") {
    byte_vec_t msg { 128,176,170,185 };
    byte_vec_t sig { 106,113,52,19,120,60,245,1,220,72,73,50,185,18,146,234,90,255,211,143,236,91,253,121,13,72,111,163,144,167,240,52,107,63,54,128,223,126,238,73,12,117,203,71,67,26,255,71,163,134,246,50,205,236,11,237,143,74,13,255,45,134,4,15 };
    byte_vec_t pk { 4,66,140,244,220,174,99,87,226,248,62,214,127,215,43,239,212,158,55,101,41,122,120,205,85,127,14,212,75,35,185,109,92,69,223,62,74,238,200,121,111,192,111,36,63,235,171,20,16,41,59,62,181,111,35,153,137,77,58,146,213,89,86,227,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 92 ") {
    byte_vec_t msg { 133,139,198,96 };
    byte_vec_t sig { 51,203,195,102,5,115,94,182,129,143,165,233,4,114,59,97,43,118,3,156,112,251,50,46,190,116,156,56,160,100,27,50,19,230,245,162,137,238,15,108,45,96,9,24,170,111,71,112,229,243,158,57,171,210,172,152,52,14,244,181,47,140,27,12 };
    byte_vec_t pk { 4,198,106,26,251,158,151,24,8,92,110,69,153,219,217,75,227,228,5,240,0,177,122,219,147,91,144,190,136,253,138,22,208,245,129,108,222,82,249,189,140,123,9,43,211,109,159,130,210,148,124,232,17,75,167,122,23,140,217,81,237,93,214,227,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 92 ") {
    byte_vec_t msg { 53,123,119,134 };
    byte_vec_t sig { 10,70,205,21,82,73,121,160,199,102,54,96,214,199,118,77,208,87,100,101,234,146,33,223,8,197,105,123,41,156,78,79,15,156,116,33,113,56,233,135,60,40,229,38,122,184,110,90,56,92,104,145,54,223,102,56,187,92,13,24,157,201,153,170 };
    byte_vec_t pk { 2,250,55,81,41,148,191,245,214,204,183,30,142,185,155,186,213,73,84,80,4,223,64,16,182,48,30,3,78,186,232,213,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 92 ") {
    byte_vec_t msg { 234,203,94,143 };
    byte_vec_t sig { 153,152,183,81,168,107,227,128,160,223,48,42,69,51,25,189,127,179,31,111,62,17,99,28,251,117,193,228,163,50,92,205,192,94,175,156,243,192,154,200,213,52,144,27,32,192,3,237,32,215,147,190,114,77,48,238,248,206,214,112,50,91,63,127 };
    byte_vec_t pk { 3,250,96,148,117,214,197,215,76,157,206,135,131,131,99,29,54,208,169,4,84,246,67,164,200,202,49,155,153,9,73,72,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 93 ") {
    byte_vec_t msg { 194,90,153,54 };
    byte_vec_t sig { 30,4,131,3,160,233,76,229,49,246,98,55,68,158,144,217,6,135,127,126,70,192,198,44,57,87,209,222,232,203,211,214,30,164,99,113,99,255,167,14,230,91,185,131,55,54,27,44,143,205,103,19,100,207,23,229,128,237,23,129,36,199,80,150 };
    byte_vec_t pk { 4,54,185,91,188,112,167,62,12,127,6,230,168,91,26,100,79,173,252,255,205,209,154,192,106,226,141,233,131,94,92,89,181,130,136,120,255,135,250,252,240,225,25,132,213,54,69,194,59,109,190,67,65,149,81,169,105,134,112,106,10,202,37,217,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 93 ") {
    byte_vec_t msg { 16,55,34,110 };
    byte_vec_t sig { 113,155,62,151,231,243,160,197,205,180,186,134,146,166,212,152,17,233,110,124,202,223,141,149,84,50,231,66,168,138,186,110,235,39,181,153,164,19,130,104,50,36,89,37,203,95,61,82,18,23,168,158,235,141,246,238,75,181,111,133,164,109,205,113 };
    byte_vec_t pk { 4,66,135,94,120,30,1,120,117,182,204,15,216,26,30,254,160,96,53,221,190,12,187,124,195,98,37,138,175,115,166,215,106,33,243,224,153,68,216,194,0,106,213,106,8,195,63,89,231,187,184,165,69,173,195,37,243,25,137,64,217,163,179,29,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 93 ") {
    byte_vec_t msg { 16,43,58,8 };
    byte_vec_t sig { 88,211,27,64,140,83,92,68,11,82,13,139,233,168,206,204,143,186,57,114,153,114,107,110,77,213,200,128,74,250,167,249,242,202,75,29,19,167,178,109,127,216,48,154,244,91,214,161,107,182,46,244,152,144,153,51,248,106,103,107,195,195,218,194 };
    byte_vec_t pk { 3,174,113,228,91,173,52,28,102,98,232,225,217,192,128,247,98,20,170,217,36,41,237,105,44,6,123,107,73,147,86,210,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 93 ") {
    byte_vec_t msg { 76,11,64,37 };
    byte_vec_t sig { 27,25,32,9,87,145,107,66,177,202,111,221,22,184,174,234,227,39,56,209,63,25,249,254,44,38,163,131,213,251,207,109,8,154,78,196,52,44,40,94,74,12,46,171,154,235,115,179,27,29,42,40,42,116,68,197,246,24,215,135,123,113,212,116 };
    byte_vec_t pk { 2,1,113,26,180,243,204,69,132,110,252,136,66,75,8,225,90,214,81,43,243,149,252,140,158,245,204,202,163,89,220,13,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 94 ") {
    byte_vec_t msg { 27,215,126,204 };
    byte_vec_t sig { 121,83,246,183,84,26,105,203,57,63,208,5,137,190,109,57,229,137,212,117,217,127,61,95,175,101,97,56,115,76,169,66,162,252,211,224,59,35,132,255,33,5,189,178,140,39,92,72,29,196,4,68,32,231,65,4,108,179,170,74,88,253,95,89 };
    byte_vec_t pk { 4,111,141,227,207,136,73,18,255,237,250,30,36,91,82,112,98,58,103,31,188,108,161,75,226,64,252,184,204,7,143,71,232,93,201,210,150,102,175,223,228,45,131,70,17,46,187,105,203,241,97,100,173,162,61,192,93,75,165,234,187,166,11,109,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 94 ") {
    byte_vec_t msg { 192,106,38,244 };
    byte_vec_t sig { 144,61,101,204,95,211,48,86,213,14,53,188,153,166,27,98,197,22,238,171,193,226,135,206,114,2,206,196,204,254,39,84,31,145,53,252,223,233,223,166,254,226,241,70,60,110,39,18,104,21,130,239,3,165,254,233,25,254,57,82,75,144,231,236 };
    byte_vec_t pk { 4,36,60,226,243,129,144,153,203,217,36,75,148,246,83,86,221,42,135,58,59,185,139,56,21,65,254,140,77,63,127,85,199,209,150,31,173,210,132,65,160,60,94,62,67,70,141,122,84,134,107,206,40,38,122,179,54,115,137,69,146,78,207,149,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 94 ") {
    byte_vec_t msg { 36,199,220,114 };
    byte_vec_t sig { 14,226,44,173,153,70,101,180,112,167,156,184,166,104,81,23,235,253,60,167,239,2,187,83,68,110,115,135,199,127,90,95,86,13,207,133,121,186,42,205,210,27,83,150,91,34,2,110,5,167,66,182,253,227,100,208,65,101,187,69,36,155,150,39 };
    byte_vec_t pk { 2,182,44,254,118,91,253,250,10,20,154,226,219,171,90,81,243,3,139,116,178,163,21,133,154,77,96,70,2,192,199,102,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 94 ") {
    byte_vec_t msg { 22,69,28,122 };
    byte_vec_t sig { 136,247,199,23,160,46,168,251,11,101,155,81,129,212,203,170,49,115,31,237,63,122,119,225,225,180,137,10,195,22,161,248,93,0,53,114,90,0,51,119,76,156,101,64,40,54,244,112,208,240,143,102,167,10,243,30,195,207,25,229,10,80,250,212 };
    byte_vec_t pk { 2,8,216,126,168,58,125,227,17,97,145,58,53,151,158,23,239,96,50,224,199,141,214,57,155,36,145,220,7,157,211,164,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 95 ") {
    byte_vec_t msg { 35,110,163,5 };
    byte_vec_t sig { 145,143,220,235,47,213,164,119,234,93,157,173,222,215,202,90,175,78,94,55,124,108,193,151,42,10,146,218,191,29,182,33,226,101,210,42,133,42,170,57,91,45,94,6,167,0,42,45,66,250,248,112,24,91,177,220,41,150,143,74,205,0,175,214 };
    byte_vec_t pk { 4,151,28,22,141,228,31,217,240,22,216,117,209,210,150,63,164,67,115,147,38,161,145,27,72,59,48,15,69,231,49,174,216,216,142,22,39,193,76,198,233,108,71,66,5,165,2,155,78,155,84,0,212,111,93,161,74,61,72,193,60,241,141,200,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 95 ") {
    byte_vec_t msg { 125,28,6,149 };
    byte_vec_t sig { 208,146,176,106,247,110,32,113,247,189,182,177,72,149,146,110,156,106,12,87,46,75,36,130,237,215,42,205,153,31,10,243,192,74,76,69,22,52,177,102,181,250,216,194,188,23,22,133,17,127,132,106,224,90,250,2,107,20,86,197,233,4,98,248 };
    byte_vec_t pk { 4,21,94,191,238,150,180,210,85,44,240,157,212,25,15,34,244,96,103,117,33,115,63,122,185,62,125,46,172,230,143,138,156,15,105,201,155,248,37,39,109,146,45,116,51,216,96,104,189,132,28,220,150,28,193,93,134,22,196,73,113,228,213,156,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 95 ") {
    byte_vec_t msg { 195,112,217,71 };
    byte_vec_t sig { 57,238,214,21,115,31,153,105,192,194,191,169,63,200,74,145,255,194,45,240,66,172,75,157,29,76,189,34,246,170,20,38,41,40,59,196,107,63,128,45,241,89,184,175,158,54,151,23,95,99,75,23,49,241,224,166,148,173,211,202,180,95,141,108 };
    byte_vec_t pk { 2,35,165,222,175,198,58,8,89,41,23,6,164,211,190,123,199,203,241,76,146,91,117,195,28,98,54,144,144,11,109,187,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 95 ") {
    byte_vec_t msg { 67,53,237,199 };
    byte_vec_t sig { 114,82,153,209,49,6,176,212,227,205,217,122,212,249,188,120,143,194,150,66,51,24,121,189,127,113,245,196,239,11,107,170,240,48,47,230,201,229,102,136,101,20,79,91,204,251,124,200,134,105,241,186,35,211,241,102,35,234,182,156,44,184,226,59 };
    byte_vec_t pk { 3,135,41,61,199,14,122,113,16,118,80,112,127,135,78,91,5,112,130,214,184,76,113,4,15,104,155,252,232,130,48,214,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 96 ") {
    byte_vec_t msg { 53,217,130,115 };
    byte_vec_t sig { 180,195,190,31,176,158,120,185,217,250,47,216,1,251,6,154,105,171,12,229,211,158,181,214,113,107,13,253,210,114,197,155,229,205,223,239,85,243,219,164,159,164,205,180,55,101,66,88,207,13,28,218,143,196,153,202,85,6,59,235,26,71,243,233 };
    byte_vec_t pk { 4,236,251,175,106,126,111,225,46,132,172,53,74,92,124,43,8,152,110,207,102,177,221,59,22,168,60,54,22,116,228,216,217,118,99,52,131,160,96,236,64,224,180,77,108,150,101,148,162,177,138,194,14,106,84,99,241,244,51,7,134,10,140,5,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 96 ") {
    byte_vec_t msg { 158,203,64,220 };
    byte_vec_t sig { 222,93,203,76,183,114,107,212,87,181,25,253,118,124,32,90,156,4,147,165,44,79,205,231,207,149,244,236,43,218,76,68,190,103,212,198,78,243,32,60,15,36,120,129,98,74,7,127,48,220,204,174,135,202,252,69,173,29,56,56,126,42,193,78 };
    byte_vec_t pk { 4,87,45,248,118,163,191,43,226,22,112,139,150,215,79,164,195,38,10,31,9,32,23,112,168,99,93,76,180,204,34,44,83,29,76,21,188,248,122,208,82,174,79,68,190,61,17,144,20,198,44,6,176,131,74,198,243,42,85,84,68,50,255,83,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 96 ") {
    byte_vec_t msg { 162,124,248,184 };
    byte_vec_t sig { 40,224,189,157,29,156,56,146,140,125,139,238,20,143,151,59,101,127,203,117,170,183,0,166,167,74,23,67,162,60,135,108,228,220,7,19,195,151,143,85,157,65,44,10,211,63,170,67,138,23,119,137,176,174,253,159,49,122,13,112,172,46,151,247 };
    byte_vec_t pk { 2,76,190,104,168,118,16,15,238,102,95,52,172,12,210,80,64,22,70,151,118,78,200,151,138,119,23,239,200,139,172,125,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 96 ") {
    byte_vec_t msg { 44,209,220,46 };
    byte_vec_t sig { 139,185,98,218,47,167,169,58,178,57,152,198,202,82,100,196,88,12,237,140,91,114,58,78,104,146,116,221,44,112,124,238,228,13,162,46,160,215,190,195,150,137,55,133,244,215,160,68,107,43,163,22,107,209,230,92,87,103,75,50,144,82,111,93 };
    byte_vec_t pk { 2,65,247,204,231,66,203,171,198,0,185,56,176,205,64,9,204,162,129,9,104,4,28,237,132,37,110,13,123,31,83,160,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 97 ") {
    byte_vec_t msg { 69,109,94,54 };
    byte_vec_t sig { 210,90,63,40,232,53,67,113,59,248,226,3,77,86,8,72,69,177,112,59,94,208,204,228,155,194,93,69,194,136,123,151,101,124,3,136,109,112,217,211,152,177,44,254,174,183,122,172,68,161,9,188,36,219,204,132,249,166,34,56,250,88,164,78 };
    byte_vec_t pk { 4,161,56,255,173,230,120,175,151,87,99,170,86,21,6,95,10,220,242,39,96,253,140,248,79,121,9,6,38,218,209,32,85,159,38,252,149,20,246,158,209,255,99,215,133,86,125,190,124,196,106,181,55,19,46,11,17,94,177,228,232,179,117,118,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 97 ") {
    byte_vec_t msg { 157,164,234,204 };
    byte_vec_t sig { 240,134,25,51,106,180,114,17,231,141,128,147,189,104,254,114,101,198,65,2,130,88,89,15,137,124,5,180,231,116,190,252,185,57,143,173,110,146,20,163,192,148,62,220,5,110,105,245,243,238,239,26,122,85,122,241,187,246,194,46,197,216,109,177 };
    byte_vec_t pk { 4,149,216,109,160,138,248,205,147,0,92,146,41,6,17,184,181,181,140,62,185,175,238,213,39,71,202,120,153,73,156,208,227,67,52,246,217,106,143,109,166,75,248,199,184,195,241,60,88,46,220,76,75,254,143,199,50,95,108,236,36,69,86,158,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 97 ") {
    byte_vec_t msg { 30,120,106,20 };
    byte_vec_t sig { 164,137,39,234,250,218,198,50,210,225,227,21,29,65,204,197,229,179,235,254,15,65,26,184,47,28,70,114,201,32,154,245,99,213,64,235,172,137,94,21,83,195,21,250,93,16,244,43,39,131,194,169,69,174,250,119,29,118,38,12,183,200,40,241 };
    byte_vec_t pk { 3,210,61,115,28,41,57,52,54,165,253,172,159,96,148,221,25,254,102,85,211,146,115,116,56,146,73,152,49,118,23,13,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 97 ") {
    byte_vec_t msg { 48,9,176,110 };
    byte_vec_t sig { 86,96,174,121,158,198,77,11,90,116,242,126,180,38,71,6,117,129,142,21,248,161,175,248,215,157,242,142,79,0,33,99,83,48,209,128,252,144,162,149,162,122,82,27,115,230,64,228,152,50,30,249,251,80,116,98,162,122,233,19,5,18,12,247 };
    byte_vec_t pk { 3,166,107,2,77,185,236,249,2,224,69,118,69,107,169,25,19,34,248,245,99,15,193,207,121,211,166,134,248,13,129,66,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 98 ") {
    byte_vec_t msg { 121,49,167,83 };
    byte_vec_t sig { 141,211,103,217,244,130,138,244,115,120,161,150,90,157,49,20,198,134,88,252,97,227,90,119,224,14,164,205,137,96,167,163,100,81,32,94,119,46,142,95,206,118,172,82,120,182,21,87,43,35,105,211,72,200,85,83,131,58,188,150,84,134,66,86 };
    byte_vec_t pk { 4,121,102,10,69,12,243,5,170,96,5,81,220,216,142,12,64,87,165,153,228,205,127,150,61,168,173,251,28,122,215,154,216,216,225,14,164,236,198,51,170,194,97,109,132,210,195,70,126,112,85,17,158,246,102,250,234,31,10,252,185,39,8,164,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 98 ") {
    byte_vec_t msg { 151,254,173,196 };
    byte_vec_t sig { 10,22,156,184,255,18,119,180,204,239,83,91,70,35,3,27,105,208,125,93,80,165,65,116,235,221,190,33,105,251,132,161,223,107,99,74,219,168,114,140,16,72,186,187,13,202,241,191,20,50,204,111,31,168,119,197,111,230,234,51,63,71,72,233 };
    byte_vec_t pk { 4,97,197,40,89,83,205,224,17,81,189,11,154,66,74,53,104,109,94,151,175,61,65,30,25,181,37,232,29,233,60,82,182,147,54,182,194,58,252,225,18,96,115,54,16,48,85,222,20,35,218,147,56,186,243,240,151,63,38,183,140,180,89,101,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 98 ") {
    byte_vec_t msg { 245,204,108,147 };
    byte_vec_t sig { 128,185,255,190,188,208,181,91,24,98,114,11,15,43,30,223,20,249,125,161,202,146,249,27,164,173,231,103,59,130,82,2,22,114,49,93,62,162,192,207,207,137,119,80,141,200,110,235,245,37,21,45,196,150,172,186,49,205,144,86,10,12,94,71 };
    byte_vec_t pk { 2,52,184,76,196,180,171,78,97,186,63,149,91,184,236,174,115,176,16,212,155,58,27,80,125,157,218,114,58,182,204,189,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 98 ") {
    byte_vec_t msg { 55,84,103,184 };
    byte_vec_t sig { 13,140,194,66,204,18,78,180,41,149,142,89,108,241,143,48,118,74,42,17,179,64,107,33,13,208,91,243,55,57,202,104,240,229,181,29,107,204,115,4,193,183,98,173,71,224,67,68,51,90,33,25,179,11,220,47,54,133,250,56,108,6,174,217 };
    byte_vec_t pk { 3,15,91,24,204,191,212,37,221,0,60,106,21,195,93,216,105,8,229,22,195,41,82,191,203,48,51,98,58,91,110,149,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 99 ") {
    byte_vec_t msg { 109,200,42,192 };
    byte_vec_t sig { 253,132,86,228,50,27,38,206,144,164,178,39,67,149,233,49,252,12,93,44,164,224,243,61,88,46,105,229,198,184,164,165,214,16,173,52,140,212,155,50,147,37,226,160,218,39,68,76,137,119,117,203,223,244,55,111,73,157,17,226,221,156,112,178 };
    byte_vec_t pk { 4,200,104,48,34,215,196,200,225,109,9,73,131,21,104,6,22,8,55,250,197,78,68,184,253,173,7,197,192,194,193,172,160,43,151,73,100,177,69,115,16,216,24,36,126,115,175,225,108,202,32,48,116,71,213,69,76,60,9,138,205,67,182,160,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 99 ") {
    byte_vec_t msg { 20,82,99,90 };
    byte_vec_t sig { 94,212,4,209,174,156,228,228,2,96,134,67,231,125,149,53,133,96,141,112,130,188,122,50,115,144,252,159,73,182,202,16,186,96,129,113,50,255,106,52,27,48,3,31,106,72,165,214,193,93,240,131,238,114,224,207,253,153,140,237,252,86,216,223 };
    byte_vec_t pk { 4,141,118,43,72,38,15,149,34,246,240,82,129,159,90,236,98,172,220,59,147,98,116,182,120,169,170,56,35,249,127,161,111,46,247,10,253,4,254,2,239,97,9,50,64,108,240,5,78,126,63,75,96,228,8,46,61,161,144,189,63,229,157,36,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 99 ") {
    byte_vec_t msg { 186,79,18,155 };
    byte_vec_t sig { 240,4,63,29,88,159,248,206,141,70,114,68,246,68,22,180,242,72,232,12,127,233,134,125,71,84,167,78,122,21,106,168,51,91,199,107,221,67,50,245,176,1,121,78,72,53,168,165,54,18,215,121,67,108,104,198,32,173,138,92,204,38,37,217 };
    byte_vec_t pk { 2,237,137,156,166,42,61,179,105,89,145,137,69,185,108,107,104,222,93,34,80,124,33,163,183,242,1,177,27,72,159,49,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 99 ") {
    byte_vec_t msg { 97,122,255,79 };
    byte_vec_t sig { 49,254,2,53,118,95,217,248,116,24,215,104,151,73,52,1,183,28,45,49,142,96,238,75,21,146,27,245,154,141,117,37,43,144,255,193,33,80,50,237,58,255,19,123,55,107,205,74,66,13,5,248,148,223,104,81,108,179,86,77,67,81,176,41 };
    byte_vec_t pk { 3,98,78,81,203,196,172,53,16,40,99,23,132,167,186,46,39,60,240,58,72,37,188,98,13,26,15,0,118,45,43,100,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 100 ") {
    byte_vec_t msg { 63,154,44,244 };
    byte_vec_t sig { 9,231,191,88,191,197,112,194,144,61,70,174,192,126,42,238,97,248,137,177,118,241,227,128,94,253,229,190,2,0,230,53,174,186,9,78,6,122,88,245,83,224,98,57,54,242,140,121,227,202,0,23,12,136,87,19,110,136,75,202,41,76,43,180 };
    byte_vec_t pk { 4,124,146,2,168,64,134,97,6,108,159,42,62,194,101,50,154,120,199,21,155,252,239,73,198,223,8,1,205,62,25,108,21,57,124,159,240,119,164,88,50,115,122,185,13,48,205,5,241,230,106,118,200,230,127,118,16,133,227,116,142,71,219,115,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 100 ") {
    byte_vec_t msg { 89,16,211,254 };
    byte_vec_t sig { 51,169,226,209,40,234,204,125,46,131,233,199,47,73,90,170,11,185,201,131,173,199,53,156,39,62,61,134,28,148,195,174,123,145,105,88,182,88,253,185,177,109,11,35,201,211,218,1,247,142,230,109,187,98,216,252,169,174,251,162,34,211,223,142 };
    byte_vec_t pk { 4,136,113,85,166,20,195,94,82,16,204,182,217,43,28,179,110,219,29,50,175,230,80,58,125,227,143,126,69,15,34,67,184,226,49,1,29,22,187,235,248,134,46,63,98,254,1,250,26,252,22,198,147,56,24,212,71,169,218,22,63,202,120,251,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 100 ") {
    byte_vec_t msg { 9,48,8,61 };
    byte_vec_t sig { 172,239,39,231,200,45,73,155,217,112,52,210,247,217,28,172,204,21,78,79,100,182,156,45,211,210,235,28,174,219,17,57,62,166,27,212,46,75,121,228,244,53,245,3,148,62,109,33,250,154,42,237,228,79,175,207,42,219,111,222,195,45,66,35 };
    byte_vec_t pk { 2,108,86,216,231,255,80,60,119,72,4,135,34,217,17,220,207,250,24,50,81,147,38,224,195,214,9,163,117,79,179,46,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 100 ") {
    byte_vec_t msg { 6,212,30,48 };
    byte_vec_t sig { 12,91,63,32,159,188,176,166,156,93,142,121,81,156,196,34,57,32,202,7,128,72,234,79,89,41,158,21,204,164,112,177,21,176,23,172,165,243,110,160,249,60,201,103,32,154,170,254,240,54,117,43,10,117,153,172,219,183,239,248,132,23,34,238 };
    byte_vec_t pk { 3,69,249,14,29,176,67,144,115,145,97,180,143,143,134,230,249,232,119,63,215,93,211,209,248,178,237,96,252,213,126,149,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 101 ") {
    byte_vec_t msg { 233,214,218,29 };
    byte_vec_t sig { 64,94,59,39,104,92,233,208,238,84,215,147,26,155,132,191,147,229,133,28,244,109,59,129,241,218,82,240,147,68,13,147,160,222,131,167,229,252,137,241,124,163,10,202,128,118,151,25,210,175,239,149,14,45,247,59,76,193,234,197,142,62,126,21 };
    byte_vec_t pk { 4,124,87,36,169,255,136,108,28,181,181,161,10,35,213,16,83,102,28,133,51,113,16,236,252,13,37,53,26,62,33,214,49,149,84,78,171,175,15,4,64,64,37,170,172,14,59,70,102,215,119,131,131,170,73,141,127,22,59,193,241,178,186,51,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 101 ") {
    byte_vec_t msg { 148,174,251,80 };
    byte_vec_t sig { 30,31,48,215,79,69,245,47,152,78,127,38,222,250,222,31,111,220,84,189,124,117,213,185,70,49,172,74,135,158,212,244,52,186,230,88,226,134,199,150,127,177,58,131,66,8,155,237,216,48,72,150,33,160,68,232,97,10,105,132,162,185,243,36 };
    byte_vec_t pk { 4,254,49,49,137,201,179,253,167,58,197,94,45,137,24,68,212,19,50,61,74,113,24,236,211,222,43,224,216,184,0,102,37,207,164,110,96,106,33,228,203,120,145,236,44,70,64,44,174,160,37,211,37,178,139,33,231,155,31,23,39,103,152,78,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 101 ") {
    byte_vec_t msg { 42,17,46,199 };
    byte_vec_t sig { 110,115,4,124,52,117,170,201,255,251,56,218,107,98,208,118,87,239,58,228,56,172,131,160,168,8,66,157,220,69,21,24,3,100,74,234,157,218,36,210,61,51,126,111,213,240,130,24,234,57,167,226,9,114,61,154,213,39,142,229,212,158,66,241 };
    byte_vec_t pk { 3,26,211,199,68,51,232,61,97,217,183,2,210,71,19,189,58,205,210,115,137,51,45,69,145,97,167,178,36,82,198,49,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 101 ") {
    byte_vec_t msg { 201,192,250,201 };
    byte_vec_t sig { 124,145,10,51,44,74,47,250,107,81,54,8,39,42,167,129,74,121,14,58,5,205,67,58,101,31,113,12,29,35,203,9,163,202,188,57,237,187,134,10,237,205,173,132,66,118,197,88,164,151,23,103,135,38,211,177,14,157,221,33,10,71,64,42 };
    byte_vec_t pk { 2,197,145,239,201,252,27,14,23,168,51,152,116,54,221,139,98,174,201,31,6,175,200,21,197,172,117,39,186,52,1,13,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 102 ") {
    byte_vec_t msg { 97,14,176,76 };
    byte_vec_t sig { 89,90,220,185,210,184,136,136,41,61,247,19,40,2,7,210,71,7,43,158,40,218,177,249,212,99,253,215,98,10,159,125,42,184,86,73,95,242,147,165,237,182,146,45,244,66,196,211,249,37,135,17,169,116,51,103,237,1,103,155,249,92,86,47 };
    byte_vec_t pk { 4,238,225,3,207,107,61,177,70,45,98,248,42,217,123,98,222,96,112,222,213,16,237,118,73,252,234,170,241,205,67,199,179,142,147,16,67,255,66,32,180,55,21,237,167,195,222,119,223,240,255,180,205,9,174,108,207,124,110,88,19,99,209,233,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 102 ") {
    byte_vec_t msg { 208,157,123,146 };
    byte_vec_t sig { 162,61,252,190,214,104,101,141,34,132,157,43,175,184,42,73,158,142,186,195,191,149,12,153,24,149,148,4,226,207,114,244,60,100,100,49,236,183,130,204,51,78,218,54,216,161,215,93,157,156,155,161,30,144,9,35,119,204,210,166,131,231,71,223 };
    byte_vec_t pk { 4,79,228,153,8,229,244,153,63,231,52,43,201,245,246,72,92,218,213,178,76,35,137,195,179,93,142,170,172,62,93,8,199,148,121,104,191,19,29,243,228,251,206,144,176,160,239,230,145,239,113,71,48,195,210,252,188,34,130,56,5,6,157,227,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 102 ") {
    byte_vec_t msg { 74,205,20,125 };
    byte_vec_t sig { 98,174,56,227,255,9,147,33,134,204,3,113,188,51,124,192,219,28,237,32,121,7,133,127,129,79,92,173,70,101,243,28,207,76,50,51,136,51,129,111,56,43,105,57,242,153,34,184,112,228,2,66,61,37,54,132,74,229,171,107,123,55,28,164 };
    byte_vec_t pk { 3,33,81,13,191,109,203,52,197,60,199,95,126,170,81,83,1,115,21,47,136,137,188,144,178,31,130,54,119,181,114,190,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 102 ") {
    byte_vec_t msg { 226,91,91,28 };
    byte_vec_t sig { 16,173,169,134,184,248,217,250,90,191,220,237,117,0,218,161,178,96,56,152,31,48,227,190,52,110,142,101,225,238,49,16,233,97,97,125,224,61,145,117,214,96,132,13,203,206,15,147,248,143,105,136,249,140,28,24,194,252,201,164,67,176,3,229 };
    byte_vec_t pk { 2,218,71,95,122,107,73,14,193,131,62,246,248,240,57,122,127,243,28,109,141,118,29,221,5,85,253,40,144,15,58,224,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 103 ") {
    byte_vec_t msg { 21,59,18,94 };
    byte_vec_t sig { 12,47,188,218,86,138,163,238,95,203,16,52,118,221,212,94,34,188,180,237,238,64,44,161,106,25,144,8,2,177,19,1,196,176,153,120,113,31,42,10,229,125,150,126,85,89,84,0,78,194,139,231,152,16,47,115,201,201,218,134,100,251,2,213 };
    byte_vec_t pk { 4,239,43,86,61,2,17,215,198,184,47,149,195,55,109,65,249,56,116,72,169,125,104,81,53,155,233,77,133,228,245,219,164,192,247,152,47,237,130,135,62,125,182,138,239,74,14,124,103,83,183,36,207,139,169,238,68,126,184,68,73,197,79,192,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 103 ") {
    byte_vec_t msg { 204,116,157,165 };
    byte_vec_t sig { 165,85,253,15,133,179,255,10,154,169,105,61,242,129,176,214,228,174,181,183,197,106,86,12,26,246,64,187,156,82,36,89,46,137,83,230,41,181,255,162,237,230,32,182,88,50,55,33,230,144,39,230,18,185,63,221,181,92,42,235,100,32,148,28 };
    byte_vec_t pk { 4,138,242,177,140,244,175,46,44,71,214,52,153,90,156,54,94,126,211,72,251,15,207,11,236,43,2,222,60,189,19,231,140,98,113,184,151,103,98,199,26,55,101,44,205,222,169,65,29,90,94,139,211,36,199,15,219,58,248,18,8,209,63,184,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 103 ") {
    byte_vec_t msg { 5,83,148,183 };
    byte_vec_t sig { 175,188,147,207,150,148,250,212,146,228,134,213,89,116,147,166,192,87,64,214,77,29,157,52,138,82,121,25,168,235,156,48,91,241,156,252,172,61,104,161,99,211,230,113,128,150,242,247,111,110,96,5,249,85,34,163,229,123,191,93,6,37,2,32 };
    byte_vec_t pk { 3,207,146,56,248,169,157,107,12,94,28,132,28,40,220,110,110,202,0,115,99,201,249,78,85,116,212,13,242,172,168,154,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 103 ") {
    byte_vec_t msg { 143,248,14,182 };
    byte_vec_t sig { 241,21,128,56,188,166,85,201,165,232,48,119,136,0,20,60,3,170,53,158,151,137,132,111,208,153,23,216,122,49,237,247,199,152,34,8,23,30,215,128,16,153,136,194,231,40,28,203,164,47,39,233,67,72,83,125,126,170,205,76,12,177,221,48 };
    byte_vec_t pk { 3,209,60,21,198,82,134,87,34,130,182,3,167,188,67,11,185,106,7,219,14,244,123,156,115,143,103,76,208,184,184,83,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 104 ") {
    byte_vec_t msg { 108,7,45,111 };
    byte_vec_t sig { 202,162,234,103,231,102,239,118,75,82,165,60,25,174,178,105,124,173,234,129,145,112,203,251,131,61,2,17,112,230,241,63,99,182,244,130,172,238,201,64,202,109,219,36,79,98,170,154,69,122,88,61,227,206,230,108,214,217,13,156,86,231,212,122 };
    byte_vec_t pk { 4,48,36,89,81,28,39,82,80,208,52,227,161,232,213,153,165,61,159,119,206,230,37,151,112,50,176,152,164,162,156,34,255,96,235,235,50,255,158,50,47,93,136,142,41,30,240,57,243,112,208,189,84,188,133,76,145,110,29,102,218,171,39,218,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 104 ") {
    byte_vec_t msg { 91,170,177,59 };
    byte_vec_t sig { 36,154,177,109,101,133,169,125,127,25,158,51,131,217,202,103,73,243,241,32,1,243,47,20,218,231,145,250,10,213,12,5,83,182,3,109,92,15,69,80,155,161,194,239,12,178,144,114,60,51,250,73,210,28,52,81,131,217,138,250,185,228,57,233 };
    byte_vec_t pk { 4,214,242,234,101,28,48,227,11,97,91,141,187,247,247,57,227,16,44,40,90,92,13,179,1,62,160,111,0,175,170,211,156,98,164,2,251,154,193,34,133,179,159,179,188,138,181,27,242,247,88,96,52,158,227,60,75,200,48,10,6,222,170,102,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 104 ") {
    byte_vec_t msg { 126,30,222,103 };
    byte_vec_t sig { 1,203,164,106,129,225,253,216,199,197,24,250,175,233,17,218,242,141,133,210,35,80,246,30,124,73,247,176,16,127,7,133,130,33,141,51,56,192,129,17,131,44,235,168,246,63,63,183,101,86,207,200,117,187,33,65,22,44,144,44,154,42,46,255 };
    byte_vec_t pk { 2,184,22,120,246,237,71,235,202,247,227,152,85,148,91,120,135,170,173,239,189,201,57,170,86,32,33,167,33,0,224,132,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 104 ") {
    byte_vec_t msg { 95,151,136,232 };
    byte_vec_t sig { 174,134,7,241,105,160,153,74,48,252,10,60,56,120,67,91,112,2,254,165,214,59,127,67,126,39,151,128,133,87,148,4,207,249,11,111,61,248,167,37,1,97,246,135,48,250,91,157,214,108,121,142,170,133,61,188,182,222,86,32,249,36,39,143 };
    byte_vec_t pk { 3,161,10,102,120,28,66,230,179,148,76,37,1,8,181,7,78,181,136,212,187,154,84,248,75,135,37,0,130,203,87,194,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 105 ") {
    byte_vec_t msg { 243,18,35,166 };
    byte_vec_t sig { 18,243,111,13,163,155,58,144,185,139,112,158,186,12,169,249,197,144,31,201,75,186,16,84,116,47,91,58,98,39,177,185,174,146,65,29,67,185,162,172,220,238,198,220,167,7,164,135,55,45,116,224,131,38,218,10,95,157,53,38,31,162,39,103 };
    byte_vec_t pk { 4,80,54,122,143,140,23,190,138,80,220,28,132,182,160,80,59,19,68,127,74,14,142,10,8,223,218,211,247,100,13,66,68,228,156,19,143,133,222,107,91,31,101,142,80,137,59,174,218,99,254,232,146,65,244,161,102,56,121,64,20,21,75,157,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 105 ") {
    byte_vec_t msg { 124,132,68,38 };
    byte_vec_t sig { 44,37,65,106,126,8,122,134,196,78,84,4,89,31,191,54,247,45,173,169,52,245,133,214,22,4,4,209,114,22,5,111,204,66,243,122,169,102,205,237,228,0,170,146,4,213,68,178,45,95,162,228,101,55,147,19,220,251,224,208,106,134,232,174 };
    byte_vec_t pk { 4,106,43,214,65,97,50,134,82,146,135,217,193,29,158,246,171,92,14,109,77,116,175,100,108,200,216,126,15,5,35,63,14,60,90,138,155,124,176,35,45,125,223,175,157,8,120,63,175,43,106,120,206,61,27,182,68,255,134,58,68,164,204,107,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 105 ") {
    byte_vec_t msg { 142,27,53,223 };
    byte_vec_t sig { 75,87,196,47,55,167,1,98,126,168,45,60,132,133,202,86,10,232,138,11,164,145,250,139,110,72,219,125,2,15,151,97,26,184,6,247,88,144,126,17,18,123,241,119,145,141,2,164,158,225,133,195,231,234,26,240,139,50,124,66,155,252,197,248 };
    byte_vec_t pk { 2,136,11,210,49,206,14,245,219,207,166,107,48,6,241,10,234,249,4,26,47,222,100,173,152,5,205,49,221,88,210,217,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 105 ") {
    byte_vec_t msg { 115,102,33,146 };
    byte_vec_t sig { 9,132,101,84,18,21,188,101,116,135,120,6,212,218,151,27,143,138,77,19,175,48,186,49,249,54,34,190,228,35,203,231,26,235,62,39,8,89,136,120,224,184,81,151,52,57,119,115,169,33,186,145,92,240,80,10,67,125,187,236,139,180,56,134 };
    byte_vec_t pk { 2,221,23,146,166,23,242,29,102,166,102,120,31,149,160,222,154,251,140,159,134,22,214,220,240,21,108,0,189,250,102,33,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 106 ") {
    byte_vec_t msg { 167,248,142,52 };
    byte_vec_t sig { 230,155,35,18,147,80,4,239,210,34,174,98,56,39,173,77,96,45,64,187,90,39,11,68,90,0,185,36,33,7,200,198,139,8,18,34,84,171,184,209,213,140,74,7,55,69,169,70,71,125,51,102,177,15,9,57,212,220,195,6,220,181,55,32 };
    byte_vec_t pk { 4,93,120,232,138,176,238,134,163,153,192,248,219,244,20,234,82,60,213,128,56,28,156,149,42,77,52,90,198,215,168,16,252,95,122,64,207,148,5,82,38,56,88,196,193,221,42,58,6,151,189,40,61,237,181,132,53,225,15,21,218,100,227,18,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 106 ") {
    byte_vec_t msg { 103,211,103,137 };
    byte_vec_t sig { 26,4,161,73,11,160,234,181,178,76,99,244,36,117,104,209,4,89,125,74,75,141,249,156,208,133,156,1,155,97,102,135,135,178,129,44,74,187,36,223,127,47,88,237,87,163,192,2,74,203,137,39,92,17,60,206,71,140,65,87,120,251,30,226 };
    byte_vec_t pk { 4,117,65,109,43,81,24,79,211,1,88,31,246,66,70,226,109,80,169,132,230,88,243,122,59,109,30,61,233,156,89,44,213,8,77,38,67,178,94,165,69,226,247,30,152,61,42,142,77,169,61,237,32,144,20,70,211,112,0,221,1,68,109,182,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 106 ") {
    byte_vec_t msg { 211,31,225,229 };
    byte_vec_t sig { 234,205,10,188,240,248,50,110,113,180,25,103,38,11,5,210,85,37,98,27,112,124,78,56,249,50,114,180,213,29,179,32,31,0,117,33,45,152,129,16,86,196,175,29,102,143,120,80,14,98,169,106,57,112,132,0,133,158,17,30,30,231,191,238 };
    byte_vec_t pk { 2,124,33,236,143,81,252,68,94,150,82,59,42,250,161,214,83,132,105,115,238,32,133,230,176,104,57,240,41,190,174,156,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 106 ") {
    byte_vec_t msg { 248,124,143,6 };
    byte_vec_t sig { 76,231,14,47,14,231,1,120,67,152,98,58,143,124,206,248,21,55,88,191,15,163,42,25,71,214,13,183,75,103,107,201,169,255,202,3,149,76,140,148,198,180,175,188,239,44,98,137,71,82,22,81,63,66,74,51,151,183,14,201,91,162,109,181 };
    byte_vec_t pk { 3,71,37,6,231,82,240,20,74,57,138,203,32,185,156,247,170,191,237,186,180,207,44,132,78,73,173,204,26,51,238,10,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 107 ") {
    byte_vec_t msg { 184,155,135,157 };
    byte_vec_t sig { 19,222,65,240,14,55,98,155,5,60,82,102,135,51,197,216,104,152,251,115,164,214,250,98,239,206,186,249,245,7,70,59,30,181,197,59,107,91,152,207,72,203,166,38,218,251,176,57,14,189,104,23,29,49,10,49,69,180,13,135,243,44,34,147 };
    byte_vec_t pk { 4,246,50,159,183,251,199,42,236,223,72,230,236,250,196,236,164,212,26,172,140,188,40,3,14,83,240,43,185,120,30,222,79,134,217,64,162,151,113,125,224,110,134,15,148,151,77,201,95,177,180,233,18,114,91,251,163,74,210,151,182,175,157,83,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 107 ") {
    byte_vec_t msg { 190,188,65,193 };
    byte_vec_t sig { 58,169,143,99,142,169,62,188,176,111,130,129,20,82,93,38,106,114,175,241,13,42,163,145,231,20,30,12,236,161,208,166,222,194,74,236,216,99,20,64,18,38,224,72,47,205,214,19,239,137,129,249,3,117,111,27,197,237,82,223,15,219,144,171 };
    byte_vec_t pk { 4,177,32,65,101,148,113,179,58,28,128,69,178,225,72,20,246,11,121,189,83,74,107,191,91,6,241,2,69,173,239,58,136,227,64,252,163,135,103,175,125,111,72,142,98,81,250,248,108,108,238,117,208,174,119,52,116,99,141,234,192,200,88,62,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 107 ") {
    byte_vec_t msg { 128,179,54,119 };
    byte_vec_t sig { 198,194,234,118,228,129,16,108,141,0,105,187,142,150,230,171,234,92,79,9,174,169,11,64,177,181,146,181,25,235,107,95,85,53,132,235,119,125,63,183,65,244,69,108,112,170,202,71,32,180,125,85,91,122,241,50,121,112,189,46,3,46,211,177 };
    byte_vec_t pk { 2,28,227,167,189,175,22,4,73,87,176,253,75,163,226,34,8,124,62,0,61,74,87,72,201,36,194,167,101,255,82,206,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 107 ") {
    byte_vec_t msg { 249,177,9,170 };
    byte_vec_t sig { 170,126,152,221,35,154,5,48,17,245,164,179,238,136,56,193,84,180,45,255,217,148,209,88,234,235,160,71,99,66,149,240,116,149,181,223,134,126,201,30,233,112,184,104,24,142,140,92,118,225,135,167,5,192,200,241,124,202,104,114,140,103,207,5 };
    byte_vec_t pk { 3,213,123,119,88,21,116,58,48,106,149,83,122,166,146,219,64,126,102,168,24,75,117,84,198,125,61,108,48,16,29,158,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 108 ") {
    byte_vec_t msg { 180,152,253,173 };
    byte_vec_t sig { 118,87,61,146,105,51,197,87,50,199,174,61,195,156,79,52,27,100,82,2,235,170,220,143,166,147,176,191,74,97,106,53,138,11,109,53,220,49,75,163,221,117,33,44,203,41,159,51,213,32,91,94,46,225,255,80,255,112,22,201,169,73,59,155 };
    byte_vec_t pk { 4,180,207,50,84,79,217,129,66,71,36,29,42,74,1,21,242,75,25,98,163,68,41,74,103,133,26,166,176,213,80,4,213,207,22,173,26,189,82,184,177,75,179,167,61,69,201,199,5,90,205,250,145,97,60,5,35,77,33,147,207,9,100,7,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 108 ") {
    byte_vec_t msg { 15,194,208,165 };
    byte_vec_t sig { 234,136,217,51,189,181,111,2,173,140,111,49,168,200,51,166,43,176,155,254,233,240,198,201,159,7,77,218,137,178,50,237,137,165,105,55,189,253,67,43,48,53,174,186,54,76,63,217,176,217,56,109,8,0,125,242,39,0,104,163,148,154,165,149 };
    byte_vec_t pk { 4,121,190,77,61,199,56,128,116,132,92,74,32,89,91,63,215,187,216,76,73,30,219,29,94,139,124,91,154,238,212,25,84,215,229,26,60,48,84,137,70,230,131,1,108,106,58,211,126,227,148,1,162,161,201,167,231,134,123,177,157,13,64,70,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 108 ") {
    byte_vec_t msg { 214,116,122,167 };
    byte_vec_t sig { 192,68,144,229,24,191,230,188,57,43,113,164,255,230,156,214,246,215,81,58,31,53,16,237,9,162,185,155,44,252,128,179,219,221,111,114,192,231,84,125,209,58,9,232,251,253,36,117,74,242,127,55,131,103,224,160,43,243,11,253,55,71,144,212 };
    byte_vec_t pk { 3,148,32,18,216,198,119,123,3,112,236,162,178,157,255,90,13,58,43,95,68,53,144,198,113,153,8,86,48,186,61,226,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 108 ") {
    byte_vec_t msg { 48,31,101,131 };
    byte_vec_t sig { 175,191,11,99,227,184,183,72,75,64,106,238,170,65,180,73,159,195,193,206,149,200,163,106,99,30,172,185,86,141,185,76,148,209,150,136,110,243,243,74,38,101,145,67,83,224,106,39,32,228,171,9,108,12,132,98,211,222,120,245,14,201,13,23 };
    byte_vec_t pk { 3,138,38,212,64,131,8,90,132,174,164,125,146,208,179,64,15,114,21,38,224,216,57,205,239,200,172,35,49,133,27,135,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 109 ") {
    byte_vec_t msg { 240,120,65,73 };
    byte_vec_t sig { 214,33,114,212,2,180,64,15,146,154,34,144,51,43,187,77,144,77,124,46,51,164,235,149,152,165,236,98,3,183,105,58,23,5,150,144,205,94,154,41,129,125,42,95,117,48,198,107,27,207,121,59,144,7,183,223,61,141,233,19,55,147,56,238 };
    byte_vec_t pk { 4,49,41,197,97,31,80,12,22,9,4,245,108,247,187,197,53,6,104,137,242,150,35,17,89,165,221,29,133,237,68,140,254,219,59,54,99,213,150,99,73,222,206,34,161,147,232,226,88,217,210,183,186,174,167,196,122,149,140,67,243,48,26,194,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 109 ") {
    byte_vec_t msg { 147,57,101,106 };
    byte_vec_t sig { 250,35,205,208,49,157,150,199,5,5,77,162,167,73,252,240,131,231,209,69,27,7,248,196,131,248,87,216,60,133,130,253,78,46,35,52,225,204,132,2,186,35,101,95,185,121,93,108,155,117,202,46,153,220,33,111,187,56,201,126,120,104,63,60 };
    byte_vec_t pk { 4,69,71,9,224,85,96,186,202,135,244,71,5,213,40,81,37,155,78,148,6,214,173,92,34,150,163,150,182,111,155,228,64,84,217,223,211,33,110,153,83,153,86,126,128,49,68,102,114,35,155,163,67,40,77,218,50,30,145,36,28,147,226,83,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 109 ") {
    byte_vec_t msg { 140,73,91,17 };
    byte_vec_t sig { 240,149,34,58,34,233,141,139,114,219,131,147,68,165,85,195,163,184,33,162,207,152,11,226,171,35,232,244,142,155,184,137,87,140,142,38,8,32,125,73,251,116,19,117,185,165,171,129,23,96,2,95,226,102,142,64,191,164,38,54,241,186,216,82 };
    byte_vec_t pk { 3,34,240,50,255,107,209,99,79,187,187,244,181,75,11,66,23,53,189,108,90,54,106,209,227,171,12,65,43,215,120,49,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 109 ") {
    byte_vec_t msg { 110,221,39,65 };
    byte_vec_t sig { 238,165,189,129,180,191,208,64,21,28,212,135,227,194,174,213,179,192,198,178,215,93,46,178,243,162,64,89,142,184,219,80,176,165,85,37,163,46,204,222,67,126,145,28,174,252,35,76,227,178,172,124,103,157,103,67,79,201,22,176,212,118,8,187 };
    byte_vec_t pk { 3,229,158,120,217,176,168,70,191,63,92,209,63,74,203,154,196,121,221,189,167,195,135,29,126,87,148,136,69,116,107,28,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 110 ") {
    byte_vec_t msg { 42,47,12,0 };
    byte_vec_t sig { 132,149,208,109,115,243,241,58,236,224,81,249,38,29,96,241,239,93,81,97,189,173,68,233,234,183,2,179,217,40,5,119,27,19,49,144,199,137,167,197,99,241,202,251,55,53,189,60,29,232,111,178,164,78,97,67,231,3,21,63,159,48,81,125 };
    byte_vec_t pk { 4,174,203,182,15,64,44,168,122,229,171,19,115,218,192,117,0,90,248,70,158,48,218,248,129,38,21,143,240,1,159,195,242,2,208,125,245,112,228,33,238,188,205,54,163,227,74,50,244,80,93,219,78,16,121,1,143,204,158,28,203,221,60,41,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 110 ") {
    byte_vec_t msg { 220,24,36,87 };
    byte_vec_t sig { 49,179,180,239,22,130,248,61,117,102,69,21,134,192,235,150,165,217,200,79,202,24,36,64,245,154,41,209,53,36,98,43,246,203,246,81,144,109,144,25,104,235,21,131,25,133,245,55,65,165,16,198,19,72,239,79,10,54,228,145,118,195,143,251 };
    byte_vec_t pk { 4,160,120,199,35,239,242,181,82,246,204,63,95,74,49,129,34,51,42,74,232,213,146,227,164,76,57,0,124,17,62,187,7,47,45,228,109,95,62,222,5,149,160,230,55,243,105,228,93,2,134,210,30,215,195,151,58,5,66,24,162,80,111,118,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 110 ") {
    byte_vec_t msg { 81,170,247,60 };
    byte_vec_t sig { 2,111,247,187,6,151,63,197,117,251,146,103,149,42,53,200,146,207,82,86,153,245,185,147,208,72,159,47,78,29,150,215,35,25,178,206,192,28,5,119,64,202,178,161,187,157,51,157,181,210,151,29,103,9,224,134,239,208,248,110,239,212,99,148 };
    byte_vec_t pk { 3,170,71,229,159,179,27,196,23,206,198,164,75,145,134,53,104,21,42,130,113,69,136,255,139,152,136,42,238,108,178,89,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 110 ") {
    byte_vec_t msg { 10,97,71,110 };
    byte_vec_t sig { 66,213,64,213,58,60,97,66,154,49,65,107,217,131,55,145,174,112,170,23,201,40,157,129,61,115,30,133,36,169,131,146,53,150,7,138,234,20,153,69,1,244,166,211,21,206,249,109,92,102,184,68,184,228,70,94,109,183,203,158,85,181,228,139 };
    byte_vec_t pk { 3,196,142,16,56,52,178,34,67,195,34,19,245,78,103,113,54,145,17,246,141,34,63,225,116,163,46,2,127,172,73,31,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 111 ") {
    byte_vec_t msg { 35,168,180,1 };
    byte_vec_t sig { 35,154,234,19,70,147,36,23,44,159,177,218,145,152,253,174,221,53,109,215,242,240,185,181,2,248,159,117,177,34,123,70,6,115,238,42,129,46,21,232,192,224,178,213,189,129,181,68,26,167,183,116,136,213,210,9,14,229,191,3,99,88,110,246 };
    byte_vec_t pk { 4,14,24,148,250,125,223,235,12,29,190,39,13,194,9,105,53,101,211,162,214,72,253,200,90,68,11,9,121,99,228,196,80,162,67,2,4,206,100,204,106,27,145,180,208,106,199,54,15,103,4,84,28,84,9,213,150,105,86,18,93,124,189,113,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 111 ") {
    byte_vec_t msg { 134,140,66,121 };
    byte_vec_t sig { 193,152,225,202,47,41,206,192,53,95,87,145,56,110,215,195,153,121,39,192,211,179,51,119,118,206,243,161,149,49,240,63,37,31,94,160,141,51,69,124,113,58,27,38,39,167,97,118,180,162,182,1,63,104,145,8,202,240,7,201,57,26,241,191 };
    byte_vec_t pk { 4,250,183,128,222,65,135,185,24,125,179,22,198,109,172,169,128,147,237,30,226,192,41,79,60,214,181,163,245,16,34,75,183,181,118,132,250,187,237,42,217,87,83,126,169,195,201,59,143,47,147,50,96,21,245,13,97,117,123,68,252,105,23,151,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 111 ") {
    byte_vec_t msg { 238,161,101,102 };
    byte_vec_t sig { 53,109,180,160,219,127,148,21,88,145,237,76,30,72,1,25,6,93,6,38,14,58,43,60,165,147,166,239,178,193,142,46,107,109,231,99,41,108,175,35,195,18,45,180,193,114,201,60,7,148,34,2,27,66,255,175,149,152,138,205,235,32,171,200 };
    byte_vec_t pk { 3,217,159,92,237,163,80,26,155,253,107,152,29,12,248,56,246,142,62,153,15,74,11,17,180,185,224,161,70,156,206,95,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 111 ") {
    byte_vec_t msg { 31,92,237,52 };
    byte_vec_t sig { 247,25,216,25,142,131,32,156,194,11,220,175,195,95,41,59,216,132,244,93,166,68,199,107,204,167,12,175,21,137,16,190,116,143,84,76,217,204,12,210,44,218,174,192,43,173,219,127,212,128,73,146,180,3,112,176,33,6,119,41,78,72,85,116 };
    byte_vec_t pk { 2,111,154,225,239,67,84,195,38,13,210,83,122,35,161,34,62,170,151,30,245,20,77,188,102,251,210,29,229,71,55,7,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 112 ") {
    byte_vec_t msg { 87,41,178,137 };
    byte_vec_t sig { 152,65,210,116,215,165,39,207,48,145,92,34,133,136,58,173,101,41,99,208,109,250,3,38,155,207,74,144,210,226,36,240,224,176,76,41,221,20,49,7,177,130,37,118,114,213,83,26,109,134,28,220,89,115,140,91,50,133,49,178,148,31,163,14 };
    byte_vec_t pk { 4,120,176,33,181,97,67,188,244,172,241,209,253,205,122,148,239,123,108,93,119,222,42,241,170,71,245,121,184,122,114,127,50,2,6,32,90,134,75,152,96,123,72,244,255,248,47,185,42,179,86,247,161,241,207,50,68,152,151,35,214,130,246,85,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 112 ") {
    byte_vec_t msg { 142,50,243,69 };
    byte_vec_t sig { 222,39,185,110,138,118,103,32,133,209,244,100,75,119,81,142,117,160,194,11,87,1,9,40,82,241,191,67,124,217,218,92,166,8,225,147,253,157,240,175,233,76,10,242,166,204,197,122,97,106,66,120,131,44,79,171,230,203,221,51,253,237,239,248 };
    byte_vec_t pk { 4,48,136,95,182,227,163,186,54,6,248,123,156,108,148,51,215,41,73,216,229,66,203,130,175,16,178,76,3,139,104,158,106,28,77,127,61,83,78,67,74,116,191,139,206,21,174,35,87,120,118,111,51,50,240,232,85,172,116,173,217,140,247,133,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 112 ") {
    byte_vec_t msg { 15,82,17,201 };
    byte_vec_t sig { 15,221,242,209,230,19,10,63,49,98,58,30,232,171,219,28,233,139,235,41,238,170,58,178,59,222,207,165,38,218,29,133,224,184,156,214,179,165,38,97,206,25,246,222,27,113,73,221,71,238,118,203,160,242,129,104,7,165,141,106,209,143,180,26 };
    byte_vec_t pk { 2,135,250,22,128,155,20,187,27,73,89,23,142,123,252,7,116,132,87,115,140,200,185,252,74,213,152,112,97,203,91,27,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 112 ") {
    byte_vec_t msg { 61,203,188,68 };
    byte_vec_t sig { 228,236,191,254,175,167,95,10,226,142,156,205,243,24,237,242,138,167,178,148,23,96,187,124,148,129,20,58,93,195,236,89,144,67,106,104,15,104,18,182,143,203,35,80,246,69,103,79,98,10,242,252,255,98,151,225,151,142,97,138,112,11,41,92 };
    byte_vec_t pk { 2,167,163,252,70,89,146,31,186,126,156,124,31,218,53,119,190,14,150,237,6,64,189,171,127,172,211,13,2,32,185,6,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 113 ") {
    byte_vec_t msg { 64,154,35,80 };
    byte_vec_t sig { 42,5,143,183,155,141,99,212,48,63,136,30,149,57,52,236,235,72,226,202,172,117,193,177,104,64,180,67,155,195,60,80,163,222,55,17,82,203,247,142,121,149,248,47,146,159,52,67,90,166,64,2,169,251,128,222,129,240,151,143,100,50,204,68 };
    byte_vec_t pk { 4,34,41,138,20,157,255,77,17,153,223,107,251,161,183,242,27,42,137,232,249,196,52,223,81,96,44,150,43,35,32,43,249,82,80,194,243,190,180,11,210,132,252,68,221,52,103,233,158,108,11,34,201,3,249,229,49,64,180,89,104,227,106,163,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 113 ") {
    byte_vec_t msg { 61,61,193,135 };
    byte_vec_t sig { 139,79,188,32,26,63,223,26,241,202,186,134,34,216,8,133,164,160,165,30,95,86,203,66,127,236,112,136,119,96,240,237,28,93,11,47,10,97,151,55,40,187,174,103,68,142,111,209,196,112,78,160,174,157,23,156,85,224,251,242,208,109,6,86 };
    byte_vec_t pk { 4,61,172,200,210,159,168,166,220,61,202,143,4,155,213,6,128,59,221,185,167,226,30,66,141,4,59,54,80,140,229,28,167,139,218,98,154,201,110,222,143,42,24,108,157,195,96,184,92,178,186,101,59,61,69,112,249,18,78,39,51,212,137,41,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 113 ") {
    byte_vec_t msg { 34,5,214,119 };
    byte_vec_t sig { 44,219,110,245,171,195,129,104,76,128,0,243,115,229,109,80,23,45,103,239,120,181,160,70,69,15,170,206,152,6,18,252,163,239,217,237,13,218,61,121,75,157,25,81,62,184,222,198,29,96,41,54,179,161,203,244,70,245,174,44,66,209,93,169 };
    byte_vec_t pk { 3,86,89,59,125,225,235,214,140,89,209,54,253,94,99,214,64,130,50,94,2,10,189,209,95,145,53,233,177,228,167,49,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 113 ") {
    byte_vec_t msg { 232,195,110,77 };
    byte_vec_t sig { 117,134,211,226,222,222,235,77,83,87,53,56,247,21,77,136,145,36,74,189,33,229,155,59,51,61,36,127,193,8,58,62,37,206,79,161,24,58,249,138,103,8,26,71,149,108,213,29,251,139,109,198,242,91,24,169,200,249,17,207,190,190,123,122 };
    byte_vec_t pk { 3,250,38,39,0,177,125,130,137,196,137,89,123,129,235,128,107,26,104,75,171,59,58,170,200,49,49,156,2,88,218,137,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 114 ") {
    byte_vec_t msg { 122,175,58,106 };
    byte_vec_t sig { 209,13,229,116,184,152,129,165,158,2,194,240,130,86,171,169,159,101,226,239,122,161,116,198,47,145,47,189,29,86,203,2,254,20,56,115,127,53,161,14,172,125,139,85,140,187,70,83,170,196,218,102,202,126,28,93,23,38,255,138,200,71,158,95 };
    byte_vec_t pk { 4,124,37,107,208,225,117,42,160,56,86,37,100,130,96,143,160,36,64,45,112,52,83,200,122,188,145,180,161,181,229,149,145,235,24,232,49,244,254,109,236,176,67,188,23,0,63,158,145,146,59,31,203,84,100,162,212,74,102,201,112,164,179,63,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 114 ") {
    byte_vec_t msg { 147,108,94,54 };
    byte_vec_t sig { 101,43,216,186,205,233,194,133,29,206,86,21,10,192,44,127,232,199,176,193,16,162,27,166,78,36,105,162,89,187,88,253,240,32,121,56,112,127,42,99,12,77,48,209,201,127,187,238,236,114,158,228,108,126,76,200,173,219,166,131,200,129,76,15 };
    byte_vec_t pk { 4,224,245,74,174,231,193,104,123,158,47,83,107,47,65,201,74,80,236,254,109,52,197,153,192,219,102,14,114,49,211,242,47,53,185,41,187,150,213,193,154,128,93,136,135,191,64,45,237,198,99,220,242,159,95,224,238,111,104,122,210,156,93,242,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 114 ") {
    byte_vec_t msg { 249,233,102,241 };
    byte_vec_t sig { 165,90,114,181,154,165,132,136,160,101,169,113,194,218,26,227,169,221,166,23,210,79,164,213,215,128,213,83,96,59,89,185,84,82,162,16,255,203,79,255,176,85,115,121,2,201,227,7,29,119,16,166,37,132,49,201,195,78,111,66,241,17,131,250 };
    byte_vec_t pk { 3,123,43,107,203,180,70,44,102,208,114,133,195,39,155,11,124,189,28,158,5,242,18,118,37,78,130,232,8,142,241,168,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 114 ") {
    byte_vec_t msg { 194,190,191,144 };
    byte_vec_t sig { 198,65,151,86,187,223,204,126,62,195,26,177,213,145,104,64,195,15,150,176,214,6,227,112,249,156,176,190,31,64,41,200,163,185,22,104,237,144,78,42,104,138,42,137,72,6,249,170,33,191,112,242,179,191,83,56,224,50,61,181,161,149,53,37 };
    byte_vec_t pk { 2,196,97,142,163,248,181,157,133,86,245,146,219,161,111,160,103,25,21,5,78,119,82,161,129,161,69,175,169,106,130,133,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 115 ") {
    byte_vec_t msg { 126,215,8,169 };
    byte_vec_t sig { 207,118,120,130,254,229,149,5,109,191,211,86,180,142,33,191,65,147,223,93,70,72,135,159,85,150,240,15,90,83,99,139,40,91,132,82,7,221,236,89,19,169,126,114,247,204,115,122,246,58,177,37,237,2,87,129,54,115,208,127,38,249,220,114 };
    byte_vec_t pk { 4,228,70,43,74,150,243,57,94,57,252,83,255,180,14,158,222,163,141,225,83,247,195,192,241,77,108,27,248,10,141,176,100,194,208,155,189,94,190,137,99,162,71,9,57,82,236,228,163,197,239,75,134,57,209,33,164,198,233,174,75,43,36,12,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 115 ") {
    byte_vec_t msg { 194,78,143,73 };
    byte_vec_t sig { 74,15,84,145,227,236,165,129,240,65,135,59,119,149,127,110,100,223,34,207,99,134,223,150,245,57,4,253,72,108,137,211,96,221,219,127,154,4,230,118,166,201,229,171,189,11,211,93,139,150,136,166,141,35,7,2,222,94,2,185,33,37,194,3 };
    byte_vec_t pk { 4,97,235,205,252,24,223,154,15,147,191,33,91,227,85,225,192,236,143,207,187,85,148,50,226,218,233,159,83,187,35,86,209,221,29,157,146,26,45,80,245,138,71,47,94,32,115,14,162,119,110,46,3,235,135,180,106,66,211,219,89,6,94,130,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 115 ") {
    byte_vec_t msg { 158,74,42,135 };
    byte_vec_t sig { 249,107,65,133,163,255,58,117,203,113,138,127,47,28,18,24,115,128,228,222,144,134,82,212,164,29,125,134,184,185,70,119,223,120,93,37,143,102,30,145,250,222,98,220,42,204,78,68,72,29,166,10,123,14,149,195,94,112,134,20,238,159,55,251 };
    byte_vec_t pk { 3,5,2,4,255,204,183,4,198,163,107,247,233,10,96,145,124,108,80,115,155,136,0,41,15,207,201,229,148,190,60,113,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 115 ") {
    byte_vec_t msg { 200,153,180,51 };
    byte_vec_t sig { 71,85,31,28,167,141,126,48,132,110,175,246,248,173,28,135,241,218,198,22,120,96,49,142,68,60,213,112,82,125,27,101,172,236,218,94,122,23,91,1,101,107,176,170,158,58,65,174,173,32,255,9,63,42,61,45,177,162,61,22,179,82,48,240 };
    byte_vec_t pk { 2,121,255,217,84,138,80,50,220,245,93,228,182,252,161,192,21,94,219,75,70,201,129,38,132,131,46,155,180,248,138,218,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 116 ") {
    byte_vec_t msg { 121,144,132,26 };
    byte_vec_t sig { 235,46,250,225,213,181,70,109,159,55,142,122,232,244,135,84,224,230,164,220,126,219,38,72,187,203,186,43,52,225,55,44,158,125,37,45,184,44,190,102,132,27,180,126,190,53,61,215,96,248,221,147,173,213,204,44,216,218,245,73,97,248,34,76 };
    byte_vec_t pk { 4,118,195,91,61,165,239,253,5,160,20,106,71,201,38,41,109,16,68,66,65,90,131,177,81,156,127,76,50,106,68,64,65,144,105,6,249,33,118,111,61,223,227,167,202,119,9,75,51,240,151,198,40,4,213,224,101,83,35,209,67,201,242,88,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 116 ") {
    byte_vec_t msg { 136,136,204,95 };
    byte_vec_t sig { 232,55,68,207,204,81,102,221,173,199,91,224,240,66,204,206,110,176,106,212,99,127,200,237,32,0,28,203,43,116,62,40,91,97,226,177,46,177,141,26,150,141,186,154,178,10,101,88,168,157,112,237,96,135,85,30,238,178,37,161,41,76,103,146 };
    byte_vec_t pk { 4,192,245,69,211,198,52,231,66,137,183,195,39,179,227,155,218,60,239,217,189,178,15,132,116,42,72,45,230,77,203,230,39,247,186,6,114,88,73,166,70,122,21,171,7,9,244,68,213,91,98,102,152,89,142,120,114,241,4,251,223,222,248,154,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 116 ") {
    byte_vec_t msg { 118,56,53,136 };
    byte_vec_t sig { 42,248,160,39,185,9,154,104,53,203,43,116,205,224,182,198,57,112,234,34,107,82,41,155,189,0,254,26,103,0,187,236,188,94,106,90,43,135,128,115,98,95,238,62,1,122,46,203,9,42,122,59,61,200,141,18,221,206,2,53,177,113,192,149 };
    byte_vec_t pk { 3,110,191,7,170,240,138,239,137,158,117,223,184,59,63,144,127,47,18,204,190,207,180,69,60,245,121,76,247,12,174,228,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 116 ") {
    byte_vec_t msg { 96,180,220,124 };
    byte_vec_t sig { 70,231,19,214,21,98,221,110,201,73,253,71,82,14,23,233,29,167,251,35,230,57,181,74,52,33,41,11,41,104,236,35,177,84,5,20,149,67,98,56,23,81,15,117,82,249,148,5,34,118,114,84,106,249,215,73,9,49,123,28,129,180,70,137 };
    byte_vec_t pk { 3,227,45,15,22,44,4,43,99,52,78,4,102,61,176,211,119,48,163,178,163,156,80,248,219,18,169,96,152,142,210,19,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 117 ") {
    byte_vec_t msg { 254,131,48,77 };
    byte_vec_t sig { 41,80,6,214,119,236,254,112,71,160,152,87,96,153,165,170,234,165,68,65,162,93,150,11,105,83,5,57,1,71,132,241,42,78,0,45,249,183,199,203,21,233,18,209,125,27,254,246,36,180,131,247,9,172,180,87,241,121,25,120,150,166,171,214 };
    byte_vec_t pk { 4,5,208,101,99,30,52,40,62,138,93,203,192,63,40,42,250,109,3,211,162,175,63,113,105,211,25,91,118,150,117,70,13,127,40,87,156,53,34,127,114,119,179,13,178,14,46,154,41,98,124,35,11,227,154,2,143,150,117,58,200,100,240,152,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 117 ") {
    byte_vec_t msg { 36,178,105,156 };
    byte_vec_t sig { 152,15,162,193,90,218,87,50,172,95,117,217,118,117,155,12,15,204,104,95,167,127,216,122,165,25,247,62,11,195,254,85,143,55,35,185,146,240,38,15,114,107,91,151,14,111,12,191,77,99,86,135,234,117,47,6,83,147,102,249,228,9,134,101 };
    byte_vec_t pk { 4,92,235,105,1,186,189,128,137,216,89,77,109,15,224,248,67,252,87,53,228,119,40,51,56,207,225,94,179,37,132,104,72,97,4,80,80,141,45,149,42,84,239,28,35,60,192,14,249,23,24,142,133,190,45,241,204,201,99,229,189,168,235,61,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 117 ") {
    byte_vec_t msg { 54,121,33,65 };
    byte_vec_t sig { 190,128,23,41,179,79,147,42,78,170,84,216,231,155,253,205,100,144,198,47,10,166,175,177,195,106,118,86,27,226,11,203,141,31,83,115,238,6,167,237,193,87,138,90,158,192,248,195,7,146,57,91,24,173,240,56,2,91,31,20,95,93,206,33 };
    byte_vec_t pk { 2,79,187,43,226,78,197,203,54,129,179,52,66,59,236,218,40,17,36,121,145,91,116,83,197,49,133,127,7,123,116,150,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 117 ") {
    byte_vec_t msg { 116,248,223,97 };
    byte_vec_t sig { 193,102,235,73,52,42,215,125,102,82,114,14,131,142,251,95,109,162,243,220,10,193,98,151,214,118,27,164,239,16,54,145,170,220,11,96,231,210,145,80,13,234,42,254,5,66,185,227,39,8,219,12,52,71,51,22,247,68,166,222,1,87,251,15 };
    byte_vec_t pk { 3,214,17,8,53,101,127,189,190,103,74,60,177,218,32,42,205,203,72,239,89,128,237,59,222,81,176,74,129,48,250,195,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 118 ") {
    byte_vec_t msg { 254,213,103,33 };
    byte_vec_t sig { 15,75,177,3,125,72,152,38,53,233,55,129,22,151,110,216,254,66,81,207,65,241,232,10,40,210,3,92,130,219,128,134,7,199,180,128,197,71,110,230,53,243,158,140,53,228,18,175,249,72,81,59,230,35,175,179,200,143,194,230,150,104,89,118 };
    byte_vec_t pk { 4,128,65,144,72,254,97,2,195,26,114,59,43,104,15,70,64,238,121,52,111,177,215,13,227,56,79,37,18,68,59,27,167,34,60,121,227,112,201,167,121,117,106,71,85,124,233,110,168,154,85,150,156,171,105,128,34,127,73,162,34,101,236,19,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 118 ") {
    byte_vec_t msg { 147,245,63,220 };
    byte_vec_t sig { 202,192,123,142,95,7,71,59,183,121,205,214,33,131,105,73,55,229,195,46,7,5,51,46,139,35,243,231,95,95,18,149,231,52,70,244,10,146,165,178,12,102,143,72,214,219,99,79,252,209,116,87,51,185,10,56,200,136,206,80,32,61,111,193 };
    byte_vec_t pk { 4,8,113,42,22,199,1,25,110,37,198,200,7,120,203,64,63,91,182,43,77,135,239,154,60,14,75,183,112,147,42,223,10,18,129,255,255,3,154,128,244,13,139,4,147,98,49,207,33,160,28,88,36,131,69,155,97,194,174,64,45,244,141,162,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 118 ") {
    byte_vec_t msg { 191,208,246,245 };
    byte_vec_t sig { 62,85,168,113,181,79,188,87,183,117,18,17,139,221,117,177,166,219,88,144,221,242,191,123,84,163,176,229,26,115,243,205,13,92,141,91,174,71,189,14,238,198,174,100,118,236,175,221,163,82,229,30,241,55,52,234,246,239,146,187,37,52,126,243 };
    byte_vec_t pk { 3,47,157,219,145,188,176,120,248,109,163,59,165,205,19,223,80,123,61,233,183,91,40,185,86,230,112,169,92,26,236,107,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 118 ") {
    byte_vec_t msg { 211,29,244,94 };
    byte_vec_t sig { 179,86,197,45,34,133,52,56,39,175,251,15,37,107,142,134,131,97,97,176,93,172,157,251,134,225,41,156,109,114,194,250,142,93,66,141,151,17,184,249,97,181,248,188,46,160,7,220,250,252,127,213,196,202,29,12,6,183,44,116,36,184,137,211 };
    byte_vec_t pk { 2,229,190,152,124,119,9,28,45,252,134,181,213,224,31,239,3,149,174,12,199,114,241,82,153,121,11,58,191,118,29,180,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 119 ") {
    byte_vec_t msg { 89,89,227,42 };
    byte_vec_t sig { 152,64,9,240,131,13,29,236,251,7,71,105,26,210,16,213,84,8,99,4,212,94,127,114,55,47,197,243,187,43,194,20,127,17,160,114,163,36,203,78,64,86,127,23,32,96,71,7,135,229,244,30,255,85,234,180,216,6,17,125,106,26,116,106 };
    byte_vec_t pk { 4,11,146,139,196,10,234,74,247,181,176,207,56,89,59,230,172,183,166,103,39,24,7,133,12,6,225,88,110,145,100,169,233,3,88,253,86,202,47,60,95,82,211,72,251,141,72,165,211,191,165,75,154,10,118,237,155,248,103,65,64,100,83,145,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 119 ") {
    byte_vec_t msg { 166,105,133,70 };
    byte_vec_t sig { 192,52,30,77,95,131,18,97,130,66,163,207,149,221,57,40,177,161,175,79,252,9,91,83,52,35,110,202,184,238,17,63,175,165,232,76,122,95,40,255,188,122,141,162,1,120,159,250,176,135,168,42,94,50,123,143,133,27,142,80,35,109,212,216 };
    byte_vec_t pk { 4,187,162,189,221,28,77,225,199,137,117,8,149,120,107,157,167,87,217,9,201,152,109,8,42,136,90,236,46,29,50,34,4,160,148,33,189,139,96,137,205,58,81,72,81,135,215,28,145,46,210,237,99,233,153,44,21,110,25,93,70,8,188,226,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 119 ") {
    byte_vec_t msg { 31,163,55,112 };
    byte_vec_t sig { 217,102,118,85,89,139,157,119,101,125,164,3,247,40,161,114,74,27,57,189,158,104,47,164,191,91,213,9,33,162,159,171,170,190,61,166,116,104,111,11,244,18,38,125,27,23,35,183,224,25,180,17,49,31,57,78,245,224,110,152,223,193,69,4 };
    byte_vec_t pk { 2,56,140,9,246,95,37,11,148,60,46,135,94,42,244,112,142,93,64,75,224,30,61,64,97,181,114,144,190,147,100,232,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 119 ") {
    byte_vec_t msg { 151,105,27,85 };
    byte_vec_t sig { 75,240,215,68,176,85,14,237,42,176,217,105,66,45,43,227,77,29,132,208,183,188,109,236,58,155,35,66,177,212,166,114,87,158,172,144,111,125,169,153,79,36,239,143,20,35,236,248,203,211,39,118,140,218,220,168,247,104,173,79,48,187,157,174 };
    byte_vec_t pk { 3,72,239,243,58,243,27,181,92,176,74,139,23,148,219,210,210,70,138,118,166,76,119,116,101,48,128,77,43,52,71,18,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 120 ") {
    byte_vec_t msg { 100,93,76,64 };
    byte_vec_t sig { 124,149,74,235,149,181,173,17,100,52,144,95,235,120,16,145,255,96,56,0,85,159,81,80,1,180,172,161,8,125,90,17,78,233,190,187,212,74,34,174,86,238,191,169,30,241,102,105,121,7,147,40,176,56,39,236,160,250,228,122,167,206,139,23 };
    byte_vec_t pk { 4,168,149,178,52,211,88,9,243,68,4,58,89,58,70,0,166,33,166,214,113,92,163,251,35,161,77,164,117,70,169,243,61,7,210,43,26,207,139,136,82,163,20,238,165,207,47,63,51,18,217,112,208,196,235,35,3,44,138,217,5,119,87,131,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 120 ") {
    byte_vec_t msg { 169,233,99,161 };
    byte_vec_t sig { 202,129,41,4,25,105,197,85,77,117,167,65,221,29,3,168,32,21,254,36,92,223,168,89,161,140,108,15,49,124,33,11,96,22,86,160,238,60,200,76,17,105,149,7,27,62,235,15,220,196,89,239,109,224,217,9,1,58,242,216,189,159,76,16 };
    byte_vec_t pk { 4,34,219,103,74,25,120,219,217,35,234,137,215,3,115,142,227,22,44,136,90,21,136,133,5,191,119,202,202,211,90,171,75,68,28,237,90,49,96,212,180,3,120,31,12,29,90,205,12,5,151,67,62,130,140,153,8,246,41,107,101,98,44,141,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 120 ") {
    byte_vec_t msg { 193,145,40,80 };
    byte_vec_t sig { 35,91,104,19,238,13,71,189,94,22,71,219,59,153,244,6,126,29,27,61,149,190,156,39,110,85,180,233,23,116,6,52,128,62,151,250,176,69,41,134,51,36,194,134,226,131,226,167,43,209,174,154,129,106,240,125,4,151,141,253,170,234,19,222 };
    byte_vec_t pk { 3,224,224,66,56,134,69,82,106,50,120,178,92,57,77,71,185,123,53,102,209,121,150,199,254,74,21,66,146,165,172,137,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 120 ") {
    byte_vec_t msg { 206,181,115,183 };
    byte_vec_t sig { 19,94,32,34,251,228,8,127,44,161,9,165,69,115,0,138,38,49,114,187,160,115,33,232,147,90,121,157,31,103,19,118,188,51,67,195,84,187,196,160,61,160,229,71,62,80,100,180,156,214,4,150,101,126,106,107,27,137,77,179,215,134,41,141 };
    byte_vec_t pk { 3,248,52,89,49,97,144,186,232,116,111,89,55,141,204,132,99,229,119,255,126,94,252,129,88,224,193,218,53,204,203,255,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 121 ") {
    byte_vec_t msg { 205,195,50,155 };
    byte_vec_t sig { 214,91,255,155,125,129,15,31,108,136,69,227,74,87,98,217,209,17,40,249,208,138,106,88,232,66,61,154,139,87,145,189,207,212,242,73,238,233,68,220,50,169,82,102,253,207,121,252,35,105,239,168,131,152,106,211,58,39,198,90,110,246,53,255 };
    byte_vec_t pk { 4,128,86,250,8,50,152,104,126,26,238,174,42,48,219,16,168,21,92,62,157,244,80,214,215,183,121,106,47,57,251,140,17,106,72,181,230,4,109,77,225,82,70,121,76,22,228,187,2,8,162,223,63,243,134,36,173,209,185,43,213,119,167,218,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 121 ") {
    byte_vec_t msg { 112,246,113,202 };
    byte_vec_t sig { 249,173,38,46,69,13,247,179,136,66,96,29,233,131,144,101,36,233,56,184,197,26,15,201,28,184,123,182,92,79,53,185,107,160,175,32,243,60,25,185,160,47,164,180,79,129,169,228,4,215,113,44,67,91,94,232,181,169,162,90,235,75,14,140 };
    byte_vec_t pk { 4,208,94,129,72,225,115,99,153,143,65,85,111,3,204,214,216,133,183,222,123,144,53,243,231,105,90,163,141,92,205,71,159,188,80,74,5,39,139,8,3,8,81,33,190,212,104,229,116,40,40,134,159,222,17,8,51,207,253,194,180,154,145,132,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 121 ") {
    byte_vec_t msg { 211,60,147,34 };
    byte_vec_t sig { 88,72,90,57,195,183,152,71,238,144,111,21,177,87,174,182,79,141,126,251,75,136,228,230,222,232,91,59,132,131,37,83,93,162,62,87,85,147,104,40,99,207,241,187,186,197,33,86,197,161,158,90,88,180,75,194,118,21,69,161,150,197,97,196 };
    byte_vec_t pk { 3,90,89,47,27,79,80,121,208,237,120,109,85,21,39,68,96,227,44,125,66,198,40,107,254,253,42,165,161,175,35,129,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 121 ") {
    byte_vec_t msg { 173,36,160,212 };
    byte_vec_t sig { 128,90,221,8,239,31,29,255,241,188,39,47,165,2,112,1,133,92,193,137,101,232,236,105,199,81,63,230,77,253,159,69,145,226,19,11,147,36,69,63,66,3,82,72,184,92,188,228,113,86,221,74,63,230,174,119,3,191,120,136,162,245,235,123 };
    byte_vec_t pk { 3,104,67,69,193,82,100,208,166,202,59,193,161,47,115,144,83,25,125,161,229,149,134,153,109,228,172,224,0,208,174,250,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 122 ") {
    byte_vec_t msg { 95,135,178,158 };
    byte_vec_t sig { 108,89,38,43,114,142,229,216,212,97,1,89,27,246,174,124,115,187,219,37,116,89,182,18,136,119,146,184,123,75,140,102,84,192,171,135,49,183,220,112,105,171,84,61,217,244,225,149,151,61,252,139,90,84,32,104,234,217,214,242,158,70,230,90 };
    byte_vec_t pk { 4,193,55,171,121,249,216,202,14,61,74,1,64,160,76,145,181,132,118,72,151,7,177,1,238,44,208,139,84,210,205,178,132,80,106,99,225,147,202,114,73,155,70,237,102,110,17,249,172,45,16,192,125,254,4,143,76,96,184,159,149,61,130,120,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 122 ") {
    byte_vec_t msg { 27,3,52,227 };
    byte_vec_t sig { 209,254,46,202,245,183,183,233,151,119,18,127,32,172,13,128,221,45,171,31,86,145,182,215,92,199,243,221,88,190,203,182,84,105,183,167,176,64,71,165,30,98,224,222,19,42,213,75,133,226,186,239,8,143,203,224,88,97,215,152,224,137,51,186 };
    byte_vec_t pk { 4,178,77,139,193,240,38,90,14,81,103,232,194,103,128,44,245,78,204,231,206,134,153,144,54,6,185,210,190,57,50,50,47,165,34,183,127,18,16,0,71,190,231,111,2,139,123,228,5,137,81,159,103,102,199,189,43,0,200,52,187,165,70,57,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 122 ") {
    byte_vec_t msg { 16,178,160,197 };
    byte_vec_t sig { 125,52,13,120,44,150,232,237,224,185,9,187,75,146,199,209,9,88,114,239,143,86,179,121,17,140,0,22,90,177,70,3,5,21,185,62,26,14,30,187,121,235,253,95,185,57,112,146,120,102,88,121,32,59,137,104,250,137,14,202,232,92,162,30 };
    byte_vec_t pk { 3,156,72,202,134,104,68,18,13,177,72,155,248,207,122,63,208,112,35,47,2,109,216,11,210,1,124,156,29,186,82,207,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 122 ") {
    byte_vec_t msg { 176,108,128,42 };
    byte_vec_t sig { 224,28,247,33,185,190,30,224,198,74,164,18,120,156,249,166,13,67,170,116,84,162,101,151,158,159,189,13,46,165,11,1,47,145,28,148,134,76,225,45,13,199,140,2,52,45,99,56,88,111,40,165,204,152,238,90,43,130,156,172,120,55,127,97 };
    byte_vec_t pk { 3,60,123,243,198,147,72,28,44,72,56,185,57,202,43,230,156,129,160,197,138,163,41,200,192,227,135,150,214,1,162,219,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 123 ") {
    byte_vec_t msg { 74,9,154,29 };
    byte_vec_t sig { 24,137,41,166,37,106,48,118,74,166,82,152,93,227,220,157,212,190,149,77,184,191,244,115,245,196,201,111,245,200,166,206,56,55,63,115,166,238,237,231,244,191,184,70,98,57,53,150,191,80,61,133,38,69,109,94,5,108,76,187,31,149,23,115 };
    byte_vec_t pk { 4,13,30,255,151,212,171,162,161,232,157,50,139,56,128,2,224,237,104,255,132,33,58,11,34,85,96,6,189,66,122,228,248,232,83,89,211,2,247,121,6,128,210,228,135,186,220,176,47,222,4,47,156,217,104,141,148,158,111,225,1,145,156,61,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 123 ") {
    byte_vec_t msg { 75,136,181,123 };
    byte_vec_t sig { 200,150,243,168,12,47,72,98,147,163,141,157,32,123,47,79,209,7,70,25,189,149,82,153,179,216,49,176,191,199,229,52,250,102,180,252,26,188,111,99,94,74,65,192,64,171,134,13,201,42,136,19,174,249,217,82,71,114,144,187,30,121,106,94 };
    byte_vec_t pk { 4,40,122,242,255,204,232,29,63,143,250,236,198,95,81,53,56,59,194,166,247,143,247,17,217,88,66,48,238,130,61,240,17,9,164,199,34,68,168,19,138,87,138,246,32,224,99,243,85,184,207,159,246,127,78,198,56,54,170,21,217,194,32,223,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 123 ") {
    byte_vec_t msg { 226,222,11,255 };
    byte_vec_t sig { 141,111,247,220,195,13,205,18,57,98,69,137,208,65,243,41,170,234,192,0,167,184,78,167,141,60,75,119,195,90,146,16,161,146,113,34,13,178,154,232,134,168,127,7,221,65,220,242,35,194,169,20,208,243,95,173,50,28,52,13,79,117,190,106 };
    byte_vec_t pk { 3,88,150,118,199,60,246,207,12,117,173,107,192,73,134,236,236,197,20,29,131,232,9,186,59,157,5,212,84,3,87,107,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 123 ") {
    byte_vec_t msg { 168,13,73,123 };
    byte_vec_t sig { 28,156,83,155,178,147,51,184,111,121,82,84,145,174,11,141,18,219,150,157,227,164,47,34,74,151,153,168,220,115,193,115,30,34,197,160,237,178,85,87,16,114,227,241,231,57,100,150,35,172,70,56,134,37,79,226,170,104,97,107,80,212,131,169 };
    byte_vec_t pk { 2,225,218,210,212,14,175,228,251,80,167,183,12,234,231,117,208,30,252,43,144,25,188,249,216,35,77,23,162,194,154,237,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 124 ") {
    byte_vec_t msg { 198,104,231,246 };
    byte_vec_t sig { 6,112,221,58,109,17,79,79,154,84,193,115,59,236,51,245,214,226,178,50,182,47,70,241,201,44,210,57,158,132,60,82,94,82,228,149,227,0,84,250,49,13,58,195,163,21,91,203,176,60,210,192,200,172,75,141,38,111,207,53,2,150,179,37 };
    byte_vec_t pk { 4,195,92,152,81,10,84,179,29,252,142,37,24,226,154,215,140,35,175,103,238,57,68,26,158,199,38,227,28,131,121,90,228,59,87,3,207,124,208,22,77,125,205,37,51,91,76,89,0,166,93,86,24,243,238,49,217,117,165,206,170,29,237,165,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 124 ") {
    byte_vec_t msg { 71,69,49,133 };
    byte_vec_t sig { 78,249,163,245,124,34,53,111,90,232,214,194,87,191,100,94,15,3,179,234,34,118,26,58,84,171,79,142,199,251,0,248,152,188,33,126,145,219,67,60,188,55,251,161,61,132,154,129,157,139,110,167,89,63,138,119,67,185,251,143,203,51,244,148 };
    byte_vec_t pk { 4,191,114,98,251,87,205,131,17,45,244,115,102,253,41,57,56,40,66,84,137,204,154,181,154,17,69,61,50,164,194,169,205,9,183,114,104,99,86,98,28,55,49,157,153,59,147,255,47,48,144,142,31,58,4,163,151,115,3,183,68,122,236,136,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 124 ") {
    byte_vec_t msg { 71,221,48,22 };
    byte_vec_t sig { 246,115,194,43,195,72,165,156,1,79,171,3,130,33,214,168,185,84,90,220,216,195,126,174,79,214,33,124,173,197,65,208,171,24,58,22,89,30,24,7,122,207,19,210,253,208,212,163,57,59,53,173,252,87,146,163,140,43,28,154,224,131,251,97 };
    byte_vec_t pk { 2,88,116,211,41,249,174,239,145,80,159,140,58,170,69,189,174,155,175,151,181,125,182,240,178,137,82,167,15,190,253,149,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 124 ") {
    byte_vec_t msg { 204,24,246,217 };
    byte_vec_t sig { 52,157,223,18,124,144,9,4,36,50,65,87,36,253,144,94,22,152,147,26,100,74,83,164,146,195,27,253,74,44,14,61,239,97,145,119,146,32,224,168,80,9,210,165,56,22,48,135,180,44,51,174,60,247,138,253,79,245,232,167,35,195,188,82 };
    byte_vec_t pk { 2,130,14,11,243,121,206,13,75,166,193,7,24,237,202,35,117,192,32,90,158,84,77,95,18,150,98,87,63,234,222,159,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 125 ") {
    byte_vec_t msg { 174,35,232,25 };
    byte_vec_t sig { 245,91,57,233,247,187,101,8,217,51,123,249,80,199,117,130,227,98,0,236,196,175,173,89,50,141,176,33,204,169,112,45,182,128,169,54,81,155,142,0,15,31,2,38,2,123,166,237,214,19,0,71,156,190,232,66,11,5,128,208,153,232,238,176 };
    byte_vec_t pk { 4,142,14,29,99,183,59,31,38,146,150,16,30,4,0,105,247,241,148,164,49,44,195,48,154,247,151,79,9,194,100,124,196,30,56,122,62,84,188,236,65,59,124,4,70,232,118,162,137,52,30,223,127,222,18,148,97,172,217,139,105,90,243,24,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 125 ") {
    byte_vec_t msg { 243,78,206,222 };
    byte_vec_t sig { 112,109,37,169,227,27,236,85,226,226,153,186,44,83,220,68,157,141,42,222,102,182,135,104,241,94,24,132,213,222,54,204,171,186,17,166,3,116,33,241,5,164,101,59,231,154,174,211,27,115,220,102,37,114,146,75,162,90,215,189,91,254,123,73 };
    byte_vec_t pk { 4,24,229,149,207,125,87,32,241,112,170,208,179,135,92,218,109,64,37,69,99,238,156,64,167,212,64,194,153,9,70,213,40,85,153,139,122,129,127,215,241,113,1,253,166,11,123,95,110,193,63,212,153,114,182,114,46,180,99,171,131,167,68,239,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 125 ") {
    byte_vec_t msg { 119,193,62,175 };
    byte_vec_t sig { 74,107,15,78,158,60,83,173,195,5,76,244,123,131,106,80,49,43,82,155,175,206,36,241,190,226,33,123,170,30,177,254,197,173,102,234,179,176,157,238,13,9,185,90,134,59,78,214,184,67,205,121,222,79,87,148,53,16,110,240,203,148,36,135 };
    byte_vec_t pk { 3,7,75,217,60,40,206,156,7,246,152,103,163,187,180,242,46,216,177,162,199,197,143,211,126,225,243,130,58,7,34,7,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 125 ") {
    byte_vec_t msg { 13,40,36,172 };
    byte_vec_t sig { 118,191,61,182,54,65,227,245,38,52,203,126,96,254,35,43,208,186,252,162,212,39,49,251,12,200,133,139,91,177,130,146,201,247,51,99,21,97,160,137,76,15,201,148,196,98,101,149,180,83,73,39,215,35,252,25,33,46,184,204,113,67,109,192 };
    byte_vec_t pk { 3,109,86,52,74,210,106,248,242,168,146,239,192,11,199,67,100,40,139,26,94,105,161,30,179,146,41,79,140,247,65,89,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 126 ") {
    byte_vec_t msg { 58,127,225,211 };
    byte_vec_t sig { 0,81,149,112,67,197,27,17,188,143,57,68,218,182,160,60,9,20,24,95,103,243,3,92,205,190,99,60,78,218,60,216,71,226,228,104,236,107,54,220,122,49,226,206,205,203,21,126,158,34,241,188,74,192,232,232,223,92,71,70,137,177,182,26 };
    byte_vec_t pk { 4,18,23,112,32,227,14,192,243,116,39,123,20,112,176,141,201,159,83,144,179,57,141,5,1,97,39,176,61,220,193,184,222,30,156,229,10,9,72,173,58,76,139,223,15,32,44,33,67,56,198,24,21,13,163,174,172,103,57,210,247,127,3,140,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 126 ") {
    byte_vec_t msg { 236,33,36,108 };
    byte_vec_t sig { 152,234,246,114,179,54,38,132,37,114,176,49,88,93,120,213,167,162,119,98,188,219,128,224,34,12,48,89,142,130,52,78,113,25,147,52,67,42,64,67,136,75,57,167,61,29,210,63,241,191,137,47,158,202,211,64,154,194,106,219,30,250,42,103 };
    byte_vec_t pk { 4,37,153,186,87,30,29,127,27,44,55,233,31,78,195,81,97,239,38,103,53,8,124,118,175,17,153,148,149,243,196,97,93,0,39,85,51,170,201,94,143,33,166,193,56,38,212,235,133,138,115,83,38,57,66,129,232,49,54,111,117,34,57,131,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 126 ") {
    byte_vec_t msg { 153,191,17,13 };
    byte_vec_t sig { 78,149,219,188,93,26,54,151,229,131,60,157,232,224,168,0,109,80,91,176,146,250,251,222,137,207,205,205,51,245,87,225,161,152,158,49,124,116,83,218,218,78,4,200,208,141,26,103,33,251,48,53,117,25,146,18,28,1,26,95,135,237,100,12 };
    byte_vec_t pk { 3,106,224,93,106,130,155,110,65,40,129,204,78,201,43,193,22,156,158,60,222,4,51,199,132,105,115,99,137,51,115,127,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 126 ") {
    byte_vec_t msg { 237,23,27,255 };
    byte_vec_t sig { 254,111,137,153,81,62,60,4,155,9,136,82,35,175,204,167,169,19,147,151,126,157,136,138,233,100,78,159,109,12,233,51,155,137,74,241,181,52,152,123,122,133,46,158,217,180,84,206,143,125,201,174,253,138,251,47,200,3,140,250,159,4,59,163 };
    byte_vec_t pk { 2,226,28,34,169,252,197,212,104,66,74,170,214,135,20,52,166,195,153,25,160,254,6,220,97,94,180,200,124,188,86,238,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 127 ") {
    byte_vec_t msg { 127,150,178,50 };
    byte_vec_t sig { 118,214,102,159,155,184,40,131,85,49,20,192,159,193,249,135,15,14,14,125,93,100,43,20,68,242,81,37,53,210,160,58,242,155,4,249,198,75,38,121,173,195,173,167,183,59,93,174,204,54,179,37,152,134,194,12,101,57,250,81,243,190,38,112 };
    byte_vec_t pk { 4,8,254,124,187,132,99,228,172,222,111,213,118,48,120,118,157,102,230,214,31,103,24,69,48,154,245,19,110,0,82,108,57,149,140,73,135,96,67,88,79,120,115,110,226,236,255,201,169,208,126,12,48,31,120,175,172,189,177,159,227,120,144,202,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 127 ") {
    byte_vec_t msg { 26,235,250,12 };
    byte_vec_t sig { 130,107,167,144,212,8,118,115,206,38,54,191,205,190,95,129,0,6,115,10,46,134,246,104,237,141,107,235,104,202,50,189,103,195,47,102,166,34,100,83,54,13,226,43,43,144,187,246,201,27,13,86,221,210,110,144,160,103,222,55,128,215,11,173 };
    byte_vec_t pk { 4,235,134,245,222,200,14,22,252,159,246,80,171,47,67,235,128,94,68,149,155,28,104,55,133,177,34,46,0,191,100,178,230,111,20,136,50,243,104,193,199,204,210,101,141,246,208,17,21,234,144,156,115,124,172,99,250,145,155,72,1,231,255,156,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 127 ") {
    byte_vec_t msg { 175,149,5,93 };
    byte_vec_t sig { 176,39,115,37,118,216,209,70,19,226,246,179,152,241,93,125,213,75,222,77,9,242,98,235,25,150,7,131,81,222,7,73,172,210,237,117,40,203,250,39,217,188,118,130,148,60,203,91,112,7,251,233,95,46,133,146,119,206,207,118,244,137,152,206 };
    byte_vec_t pk { 3,221,247,102,158,60,11,123,188,116,158,242,66,225,172,193,87,244,229,139,4,5,5,2,113,69,29,67,72,69,238,98,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 127 ") {
    byte_vec_t msg { 73,255,194,57 };
    byte_vec_t sig { 47,38,10,113,69,161,242,213,155,251,49,169,163,172,52,61,80,215,10,188,132,135,130,230,240,166,75,147,30,80,148,109,103,226,183,163,192,186,4,238,50,91,193,19,101,124,39,104,157,141,250,157,191,0,70,201,107,87,199,89,185,79,169,252 };
    byte_vec_t pk { 3,130,164,136,84,48,77,175,78,164,43,151,1,179,191,76,32,129,116,212,227,136,235,231,167,200,163,154,97,146,151,163,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 128 ") {
    byte_vec_t msg { 108,23,115,85 };
    byte_vec_t sig { 195,237,189,249,58,28,80,98,255,104,50,175,229,21,216,84,42,158,1,103,52,229,231,54,75,22,22,150,241,251,110,88,167,208,131,20,145,45,255,62,207,70,151,89,71,142,38,120,42,44,79,103,167,27,164,90,166,227,130,191,125,253,25,75 };
    byte_vec_t pk { 4,55,220,134,27,24,122,95,132,201,122,7,32,107,170,123,26,102,210,183,212,10,169,76,146,219,66,163,204,4,150,2,244,55,251,91,147,33,183,240,4,114,249,159,229,244,173,38,40,176,156,195,111,78,234,162,36,76,92,144,148,145,137,211,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 128 ") {
    byte_vec_t msg { 124,34,229,171 };
    byte_vec_t sig { 185,194,165,17,10,214,238,246,100,16,26,13,173,15,235,122,34,243,109,78,154,215,133,40,92,247,215,101,33,98,182,192,102,147,2,216,196,64,200,101,119,208,177,37,85,246,188,222,203,139,82,255,68,10,25,26,214,246,54,109,33,146,244,159 };
    byte_vec_t pk { 4,94,61,33,78,17,102,167,172,114,197,23,200,55,246,250,192,141,108,4,106,146,240,23,10,43,118,80,23,221,35,174,53,67,121,132,7,244,42,191,197,72,78,132,218,116,100,251,196,218,200,56,5,25,121,222,241,21,32,157,203,228,137,60,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 128 ") {
    byte_vec_t msg { 206,185,234,69 };
    byte_vec_t sig { 40,180,57,83,69,237,200,59,167,5,26,127,238,126,98,25,207,234,135,133,252,209,119,205,151,163,6,103,140,217,92,63,34,230,69,60,177,75,57,78,36,26,79,120,107,219,163,74,34,207,87,43,189,124,169,6,40,21,138,42,99,175,212,103 };
    byte_vec_t pk { 2,57,172,236,82,139,55,41,24,93,209,16,72,4,68,172,37,245,178,199,211,11,83,88,97,158,36,96,0,241,125,79,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 128 ") {
    byte_vec_t msg { 112,52,134,123 };
    byte_vec_t sig { 250,90,11,116,180,240,77,17,81,88,214,171,47,209,174,177,74,158,65,34,193,124,0,41,113,65,178,129,82,159,41,212,6,180,40,135,68,112,32,147,108,203,200,205,228,89,34,12,77,27,40,211,118,211,240,43,136,51,206,216,54,35,54,181 };
    byte_vec_t pk { 2,143,98,76,173,192,148,124,147,56,168,255,48,238,151,164,130,190,14,64,21,35,32,58,102,143,169,198,106,175,49,85,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 129 ") {
    byte_vec_t msg { 101,166,5,78 };
    byte_vec_t sig { 46,19,71,141,124,60,68,143,67,242,20,109,211,126,144,34,175,4,129,52,173,52,228,165,56,59,26,56,59,61,125,17,55,8,125,65,145,217,213,126,209,39,53,22,46,139,106,68,51,131,108,29,109,175,28,127,121,190,167,108,196,164,150,180 };
    byte_vec_t pk { 4,69,192,174,162,131,44,185,70,249,238,86,2,86,200,203,212,70,121,82,253,230,13,38,165,166,13,58,129,234,90,235,139,196,141,13,129,201,144,173,191,174,248,67,225,76,215,96,118,72,97,201,190,53,221,202,98,175,82,157,235,136,45,152,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 129 ") {
    byte_vec_t msg { 196,142,175,4 };
    byte_vec_t sig { 4,22,110,137,107,181,199,121,164,7,202,12,122,243,221,227,24,210,248,74,195,156,15,179,67,12,32,126,130,43,167,79,228,47,209,26,89,254,54,247,91,106,4,100,26,49,99,96,27,114,59,2,6,75,239,146,91,183,16,84,73,240,197,129 };
    byte_vec_t pk { 4,233,162,105,132,232,197,129,196,147,233,20,167,252,218,110,14,212,124,255,77,2,159,90,46,192,191,4,223,168,234,207,237,70,254,85,88,128,4,11,243,128,142,174,172,2,171,237,51,163,228,255,17,151,133,175,177,111,179,196,106,218,118,106,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 129 ") {
    byte_vec_t msg { 204,248,143,69 };
    byte_vec_t sig { 20,53,90,53,234,147,205,193,169,223,1,215,51,171,52,118,37,152,151,7,251,42,200,116,77,62,94,208,196,227,234,56,62,154,34,237,152,151,209,172,22,232,73,124,235,27,204,99,125,117,203,211,240,142,178,16,34,6,199,206,234,28,134,121 };
    byte_vec_t pk { 2,188,170,215,61,192,99,33,156,205,192,164,58,123,90,60,197,231,232,242,76,56,157,108,212,126,241,220,223,190,164,147,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 129 ") {
    byte_vec_t msg { 92,198,125,64 };
    byte_vec_t sig { 67,81,209,244,81,62,14,248,216,52,81,39,198,149,3,63,167,119,11,176,202,105,109,204,207,202,174,235,173,102,236,15,11,150,92,133,182,130,206,80,230,51,210,146,109,233,0,110,198,15,142,152,137,38,180,85,143,244,124,189,190,128,16,99 };
    byte_vec_t pk { 2,242,254,21,117,241,242,12,219,20,177,76,122,130,35,165,24,70,129,147,103,59,22,176,64,24,250,232,97,137,109,38,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 130 ") {
    byte_vec_t msg { 126,49,192,117 };
    byte_vec_t sig { 179,206,232,20,22,2,85,205,200,61,89,31,140,123,67,238,237,255,177,9,90,61,54,73,248,15,208,255,238,106,107,200,205,180,80,74,106,32,176,136,156,60,38,9,189,196,37,169,94,113,105,122,246,82,70,157,135,180,97,77,46,197,132,216 };
    byte_vec_t pk { 4,200,18,241,115,86,255,96,65,39,235,200,248,28,241,127,217,121,123,49,205,131,207,112,232,248,77,32,89,249,52,158,185,239,125,192,192,131,110,25,32,132,186,109,168,124,212,36,205,27,46,153,120,43,86,140,128,92,189,119,150,238,11,72,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 130 ") {
    byte_vec_t msg { 19,98,88,64 };
    byte_vec_t sig { 175,103,72,84,123,22,23,60,138,165,251,87,216,108,209,115,104,38,243,92,202,133,10,203,49,49,147,171,176,202,238,69,52,76,62,88,248,51,181,37,147,86,58,160,245,242,174,91,134,118,107,5,202,243,21,154,234,125,196,160,178,144,217,0 };
    byte_vec_t pk { 4,16,35,119,168,246,69,122,152,255,240,95,71,68,119,127,169,2,102,176,197,116,227,247,172,242,124,26,146,11,114,171,207,21,72,232,155,41,250,20,98,102,190,214,57,130,96,160,221,130,166,31,183,249,143,94,34,52,211,189,199,246,185,119,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 130 ") {
    byte_vec_t msg { 28,27,96,128 };
    byte_vec_t sig { 72,226,125,67,125,60,29,67,5,68,26,40,59,57,10,58,118,181,87,208,219,92,240,166,35,120,217,26,94,180,70,212,128,167,53,7,65,172,30,194,171,149,249,148,31,230,166,65,146,44,140,61,45,251,42,112,26,236,188,145,85,45,40,71 };
    byte_vec_t pk { 3,99,63,62,247,144,95,244,17,151,105,12,213,122,178,242,114,203,117,183,210,120,152,139,116,74,144,60,182,22,108,224,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 130 ") {
    byte_vec_t msg { 131,157,138,192 };
    byte_vec_t sig { 12,134,161,178,130,200,239,12,169,121,199,246,38,146,109,223,103,104,25,194,180,222,24,25,248,114,135,241,119,188,214,33,255,215,102,204,209,113,152,106,91,18,147,81,139,72,223,222,145,63,83,105,80,151,200,174,197,143,104,17,176,204,198,130 };
    byte_vec_t pk { 3,157,4,136,175,8,24,143,28,51,75,122,222,161,103,93,156,228,162,188,160,2,34,222,147,242,3,194,130,241,189,146,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 131 ") {
    byte_vec_t msg { 198,69,21,249 };
    byte_vec_t sig { 102,24,38,142,130,172,0,90,14,197,54,240,60,139,91,250,41,189,22,251,116,255,65,51,192,125,136,147,165,171,215,157,36,251,175,77,42,135,26,44,205,154,54,42,29,136,4,181,91,148,108,120,177,96,188,70,230,78,39,196,156,234,147,200 };
    byte_vec_t pk { 4,61,169,42,198,126,210,13,162,126,240,208,12,197,222,235,237,2,17,199,51,231,4,202,24,141,188,170,189,25,101,40,253,161,67,7,109,38,9,167,50,21,77,70,2,17,132,82,158,25,15,146,5,8,205,224,210,113,124,214,191,80,7,65,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 131 ") {
    byte_vec_t msg { 141,157,124,251 };
    byte_vec_t sig { 224,101,229,124,174,136,105,47,183,19,235,236,139,61,131,54,210,169,120,230,202,181,103,192,241,249,29,9,21,245,226,78,107,95,31,161,199,200,141,37,221,122,174,242,123,242,217,59,28,4,215,121,142,84,96,77,232,254,228,92,85,29,198,147 };
    byte_vec_t pk { 4,60,15,231,117,65,244,31,124,81,98,108,65,126,57,161,8,12,76,3,254,32,210,199,239,41,72,156,123,115,81,23,187,210,87,212,202,182,7,52,70,120,79,64,248,194,23,7,113,148,134,54,177,35,199,120,103,157,152,93,110,37,210,110,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 131 ") {
    byte_vec_t msg { 224,82,226,103 };
    byte_vec_t sig { 50,177,180,42,52,20,179,122,177,182,155,59,239,133,184,176,205,85,81,162,75,162,155,91,225,38,94,93,113,176,36,112,50,225,171,211,122,148,254,3,119,127,234,241,33,227,88,48,140,232,182,150,119,163,194,17,62,194,240,7,247,29,109,211 };
    byte_vec_t pk { 2,210,57,106,146,207,44,59,38,211,148,122,67,190,213,121,125,62,6,145,201,90,23,125,160,248,212,231,113,164,85,102,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 131 ") {
    byte_vec_t msg { 85,65,130,159 };
    byte_vec_t sig { 123,236,43,48,245,107,88,186,15,18,45,156,74,54,220,241,166,193,104,133,68,47,35,223,14,65,251,239,170,116,134,179,93,60,96,233,22,180,57,83,144,85,223,113,73,73,5,254,67,249,111,168,65,179,110,152,82,241,217,118,181,202,239,26 };
    byte_vec_t pk { 3,192,229,83,17,232,89,73,181,246,116,131,132,174,61,206,204,38,136,88,117,186,143,171,1,119,90,8,82,67,119,50,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 132 ") {
    byte_vec_t msg { 50,51,130,234 };
    byte_vec_t sig { 25,54,189,182,57,87,74,80,205,162,244,72,44,61,9,166,53,182,166,38,95,242,56,90,78,128,51,22,195,61,27,243,110,186,63,167,78,211,111,92,200,139,6,10,228,232,60,123,238,11,21,169,103,109,236,16,12,127,26,193,107,245,132,117 };
    byte_vec_t pk { 4,26,171,82,4,128,172,216,52,240,48,187,70,210,173,30,157,48,236,219,133,129,24,54,233,15,225,188,75,57,251,255,172,57,118,202,52,21,2,130,21,227,27,108,47,20,63,122,151,44,124,69,141,11,73,217,189,203,30,48,106,251,230,232,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 132 ") {
    byte_vec_t msg { 81,222,255,211 };
    byte_vec_t sig { 91,6,115,64,226,240,244,226,170,112,45,11,196,74,204,225,144,133,217,172,161,176,89,83,245,122,248,239,144,203,6,17,249,124,239,188,159,147,46,34,164,244,190,141,253,46,154,92,31,9,131,59,163,22,127,157,109,225,99,103,133,154,153,157 };
    byte_vec_t pk { 4,36,11,99,214,84,130,45,140,125,97,232,199,41,227,114,76,28,172,84,181,229,49,69,31,192,248,136,129,161,214,116,147,223,161,165,129,129,81,147,142,236,17,248,221,166,150,49,107,31,122,128,222,223,11,190,167,173,135,203,140,249,208,142,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 132 ") {
    byte_vec_t msg { 89,247,236,198 };
    byte_vec_t sig { 191,95,113,87,60,198,22,247,167,62,22,191,221,88,219,0,18,161,33,115,165,193,143,90,34,172,110,242,111,128,140,106,62,204,166,67,151,241,50,34,13,61,130,144,0,35,193,154,203,161,11,142,107,110,61,10,89,2,172,81,32,125,150,102 };
    byte_vec_t pk { 3,157,128,225,195,195,56,165,11,225,111,12,253,70,172,85,138,98,201,113,192,244,206,137,32,44,197,245,37,8,185,183,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 132 ") {
    byte_vec_t msg { 34,44,172,231 };
    byte_vec_t sig { 131,251,244,165,8,97,209,14,202,181,59,192,248,107,251,123,107,226,251,71,19,242,51,78,241,75,97,224,221,14,143,194,111,72,71,55,37,129,113,85,66,24,6,164,5,230,172,36,65,7,223,84,89,35,142,187,98,188,172,102,196,216,241,10 };
    byte_vec_t pk { 3,83,172,181,104,140,141,99,138,115,98,70,193,240,117,224,94,94,244,89,107,72,147,81,82,51,212,213,191,4,85,10,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 133 ") {
    byte_vec_t msg { 236,92,202,62 };
    byte_vec_t sig { 185,200,114,221,197,171,53,155,22,73,41,112,46,151,243,116,250,86,157,97,109,217,192,25,101,30,41,43,67,75,159,54,29,80,26,217,58,207,35,168,180,216,170,233,210,188,132,183,248,144,67,9,56,187,214,208,26,74,171,36,92,104,76,62 };
    byte_vec_t pk { 4,116,202,121,91,253,75,216,8,93,13,26,225,218,93,127,194,42,190,125,169,103,112,207,174,145,81,45,137,61,31,215,130,238,165,217,24,59,167,212,166,10,223,230,92,227,220,147,65,59,113,18,31,13,200,236,141,169,142,82,231,169,142,207,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 133 ") {
    byte_vec_t msg { 144,115,130,29 };
    byte_vec_t sig { 212,81,49,162,45,204,35,172,145,196,183,0,182,11,17,77,156,250,115,154,220,104,202,223,67,28,90,137,119,220,48,102,18,188,199,203,152,136,145,93,110,103,83,228,170,168,28,59,233,137,158,19,115,43,95,241,233,2,255,27,229,207,97,30 };
    byte_vec_t pk { 4,82,155,14,177,0,79,8,86,245,31,189,116,195,201,128,172,167,101,181,44,217,73,115,174,156,64,57,215,185,221,111,33,113,143,181,40,147,17,160,16,102,6,156,142,128,185,50,21,106,18,101,104,175,67,66,10,110,156,228,8,136,106,243,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 133 ") {
    byte_vec_t msg { 188,134,226,31 };
    byte_vec_t sig { 225,253,215,199,203,101,216,239,251,15,65,103,12,33,24,73,95,42,34,125,117,207,167,117,100,210,205,16,3,234,115,104,219,32,214,155,206,113,193,44,61,218,192,39,239,80,244,53,160,161,29,245,231,234,159,80,207,133,92,236,186,39,246,158 };
    byte_vec_t pk { 2,206,132,166,252,92,195,91,47,142,225,100,159,121,155,160,156,172,101,114,213,244,195,155,233,67,89,179,10,26,225,176,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 133 ") {
    byte_vec_t msg { 3,120,160,205 };
    byte_vec_t sig { 47,206,128,50,13,48,156,194,111,135,253,194,99,106,137,40,119,101,128,35,14,254,212,168,232,46,130,123,30,139,30,202,82,96,70,208,194,56,255,188,103,30,125,3,177,179,189,193,230,18,33,157,253,252,99,49,150,250,58,97,14,175,58,36 };
    byte_vec_t pk { 3,59,255,31,24,153,197,106,58,124,47,91,223,141,155,21,200,251,0,49,164,0,147,71,109,132,245,172,115,33,72,161,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 134 ") {
    byte_vec_t msg { 111,192,128,161 };
    byte_vec_t sig { 68,109,230,144,223,103,70,185,131,34,11,34,161,200,23,86,94,56,130,156,137,25,48,66,245,26,188,149,57,21,146,62,91,195,178,253,26,59,254,151,245,48,92,115,161,236,89,97,216,144,5,165,218,114,152,140,85,66,29,163,32,191,35,120 };
    byte_vec_t pk { 4,62,34,202,47,86,167,75,4,159,3,162,176,223,36,184,9,213,107,118,40,203,54,44,168,129,23,38,52,182,232,106,97,98,87,192,244,145,4,142,35,150,46,112,98,42,141,195,80,215,131,216,186,212,251,59,22,121,42,14,42,245,180,82,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 134 ") {
    byte_vec_t msg { 43,144,79,171 };
    byte_vec_t sig { 198,63,158,37,128,154,147,252,146,88,210,59,233,158,91,175,79,161,161,153,174,196,0,156,64,107,152,23,111,139,70,253,76,249,130,2,94,214,87,172,118,248,241,106,69,126,2,187,91,76,222,104,103,218,211,85,52,199,150,125,236,207,120,164 };
    byte_vec_t pk { 4,125,50,237,106,126,63,247,0,131,141,37,207,126,165,24,152,140,253,51,189,72,37,25,143,238,33,154,147,213,245,250,51,177,112,101,233,255,172,30,113,93,22,42,58,156,239,177,148,166,248,195,237,205,3,81,2,59,19,42,93,71,149,153,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 134 ") {
    byte_vec_t msg { 41,39,127,58 };
    byte_vec_t sig { 58,6,70,102,25,37,153,22,223,168,255,242,84,194,133,25,216,1,77,140,143,101,253,127,86,236,136,196,172,91,137,196,78,119,156,91,40,130,241,216,42,30,122,55,92,78,109,66,87,236,114,74,141,217,58,99,75,67,204,115,36,87,12,36 };
    byte_vec_t pk { 3,88,166,122,179,28,180,159,16,124,243,22,84,142,168,83,44,29,195,247,177,247,108,153,243,133,91,65,98,85,22,28,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 134 ") {
    byte_vec_t msg { 90,83,87,152 };
    byte_vec_t sig { 93,197,46,171,172,80,181,228,20,60,57,163,129,58,250,205,4,155,14,72,153,161,122,133,240,125,88,38,192,32,71,120,197,13,187,106,145,68,95,159,103,241,83,168,239,255,186,72,93,76,104,93,219,191,60,179,217,245,205,9,145,164,103,208 };
    byte_vec_t pk { 3,154,132,109,201,233,92,123,45,178,112,153,145,105,199,204,131,100,44,80,69,10,224,66,229,35,149,101,6,237,139,48,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 135 ") {
    byte_vec_t msg { 159,58,27,146 };
    byte_vec_t sig { 76,212,157,67,86,112,170,52,95,177,65,208,234,18,248,162,62,7,39,44,190,160,169,204,196,175,184,149,8,38,77,103,218,212,194,179,143,153,156,67,36,58,255,174,126,16,51,219,172,137,64,62,8,234,77,177,235,35,60,227,109,10,127,111 };
    byte_vec_t pk { 4,163,181,139,142,93,15,0,29,126,126,85,189,202,249,132,187,103,225,139,132,233,238,60,176,220,14,137,222,107,2,173,213,14,194,184,229,105,115,157,240,149,215,202,48,238,54,221,194,59,19,52,47,60,82,194,23,172,115,1,216,74,162,23,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 135 ") {
    byte_vec_t msg { 163,249,9,241 };
    byte_vec_t sig { 115,115,148,49,164,32,186,243,92,51,155,102,122,132,228,212,147,46,179,23,133,176,133,130,223,232,61,49,222,44,182,204,116,98,211,50,142,190,127,88,139,60,1,132,214,193,123,4,119,192,20,24,171,43,217,129,58,106,128,62,46,91,141,174 };
    byte_vec_t pk { 4,71,162,177,149,91,225,174,251,223,53,22,128,86,86,109,53,249,189,142,29,103,237,178,252,237,143,135,54,103,47,72,235,83,171,213,109,225,151,147,140,138,143,33,161,107,141,26,68,253,143,86,235,40,83,100,229,175,58,199,211,15,146,73,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 135 ") {
    byte_vec_t msg { 94,4,21,145 };
    byte_vec_t sig { 58,176,93,132,18,2,144,210,197,113,127,237,112,5,75,9,59,121,66,12,26,67,248,60,173,80,71,156,151,166,51,114,167,251,248,249,202,13,10,59,95,120,30,37,173,53,85,58,9,15,131,198,43,100,226,245,23,164,71,78,63,113,194,213 };
    byte_vec_t pk { 3,103,60,114,190,205,6,122,138,133,9,249,207,247,227,233,254,63,152,107,81,11,204,78,47,217,148,38,216,216,243,127,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 135 ") {
    byte_vec_t msg { 49,118,165,243 };
    byte_vec_t sig { 143,14,99,136,246,236,109,223,60,38,39,158,224,57,211,235,124,45,206,40,215,178,228,126,99,150,227,154,129,23,225,242,40,10,206,237,227,228,144,43,128,96,96,199,66,61,86,154,242,242,245,127,13,8,35,190,231,218,218,247,153,193,42,251 };
    byte_vec_t pk { 2,187,46,184,12,209,66,104,252,100,127,127,212,122,247,237,252,130,38,179,73,31,221,144,72,114,11,132,109,94,75,170,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 136 ") {
    byte_vec_t msg { 5,66,6,200 };
    byte_vec_t sig { 90,102,85,241,240,252,6,200,244,140,144,109,183,178,2,161,95,67,161,90,120,141,20,78,188,114,131,217,236,188,72,35,140,182,200,25,27,243,191,38,11,229,145,106,33,36,134,17,169,130,145,81,34,54,99,217,242,112,248,3,143,124,113,202 };
    byte_vec_t pk { 4,198,143,129,26,79,239,38,69,52,173,95,158,182,96,208,147,61,32,210,145,199,160,172,192,251,147,18,79,240,100,248,78,43,27,1,195,167,203,211,202,250,232,61,232,34,240,118,198,155,169,66,43,145,189,93,140,248,7,164,100,205,173,213,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 136 ") {
    byte_vec_t msg { 52,222,16,121 };
    byte_vec_t sig { 42,232,15,189,121,23,40,211,159,148,249,162,162,189,164,33,20,242,168,138,201,27,193,164,76,70,0,183,79,32,158,57,96,12,250,141,28,177,116,24,224,87,9,39,225,62,94,74,15,233,174,19,76,221,120,137,126,246,8,6,112,70,49,253 };
    byte_vec_t pk { 4,101,201,184,85,165,91,188,204,45,4,141,246,11,93,135,83,232,156,36,154,221,9,6,12,210,116,69,185,179,203,179,210,56,220,222,84,146,76,35,164,204,30,250,36,91,141,173,108,177,175,185,16,84,210,68,59,100,197,198,39,163,218,87,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 136 ") {
    byte_vec_t msg { 232,116,10,242 };
    byte_vec_t sig { 249,196,3,18,116,54,107,98,113,184,3,106,112,175,54,255,25,248,121,69,161,149,48,99,116,23,52,134,244,58,92,168,163,154,216,12,92,184,201,27,203,175,93,199,217,132,163,110,62,56,167,157,200,40,201,126,207,171,66,174,74,109,13,172 };
    byte_vec_t pk { 3,85,47,93,228,62,29,219,52,153,248,32,209,195,162,225,182,137,43,215,23,26,105,60,25,176,254,82,10,120,162,53,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 136 ") {
    byte_vec_t msg { 63,58,249,48 };
    byte_vec_t sig { 5,121,71,233,119,36,71,119,219,36,223,21,174,74,103,199,164,124,181,1,98,61,186,171,161,10,0,198,90,81,145,52,39,88,126,0,6,117,116,40,137,194,113,183,142,140,23,141,170,226,3,57,14,233,185,79,12,169,9,177,239,25,15,227 };
    byte_vec_t pk { 2,110,187,185,195,52,182,230,237,88,230,174,151,172,199,228,90,168,40,241,212,131,102,34,75,25,189,253,255,128,234,93,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 137 ") {
    byte_vec_t msg { 47,51,106,164 };
    byte_vec_t sig { 204,156,110,113,65,23,206,11,232,193,141,218,34,252,172,183,174,48,35,65,73,75,216,37,33,34,110,242,172,136,228,199,44,97,100,245,16,249,120,79,1,76,59,197,142,103,5,221,235,4,111,214,32,12,222,115,155,67,11,198,0,60,244,146 };
    byte_vec_t pk { 4,108,245,120,151,81,138,147,174,115,19,218,132,174,70,194,75,89,8,202,150,147,137,140,70,89,246,249,144,70,112,114,109,59,221,83,194,46,236,170,163,243,56,53,210,52,27,204,248,77,49,7,142,201,114,129,242,246,104,72,234,187,202,233,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 137 ") {
    byte_vec_t msg { 116,9,42,116 };
    byte_vec_t sig { 167,46,87,244,112,9,127,107,231,125,63,218,233,136,94,79,95,21,185,230,163,131,228,203,54,33,86,59,119,74,100,70,89,191,163,126,27,221,200,52,55,245,173,102,175,37,11,163,252,250,187,68,115,229,57,181,177,233,25,7,193,142,56,58 };
    byte_vec_t pk { 4,94,55,176,138,72,120,128,182,149,248,39,26,129,179,56,159,41,235,19,61,165,144,51,153,209,20,75,53,6,102,121,26,177,143,80,99,92,110,2,223,142,154,219,1,149,189,9,26,46,76,95,170,214,166,202,145,5,64,124,82,86,101,23,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 137 ") {
    byte_vec_t msg { 159,174,145,199 };
    byte_vec_t sig { 53,33,196,17,100,128,102,127,141,182,107,80,78,28,178,109,54,70,57,113,237,123,51,129,49,216,49,80,113,188,125,140,245,221,170,23,212,173,255,77,224,121,169,198,221,165,225,192,107,229,203,39,14,34,20,1,225,12,248,221,157,9,2,78 };
    byte_vec_t pk { 3,221,71,152,116,163,23,22,150,65,9,68,21,249,4,44,25,75,142,236,220,232,56,193,158,198,197,183,229,70,111,80,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 137 ") {
    byte_vec_t msg { 234,192,169,104 };
    byte_vec_t sig { 29,66,123,195,117,233,232,182,174,32,60,143,19,222,30,49,101,241,130,13,60,166,51,118,164,60,123,85,109,55,75,95,159,119,11,204,151,65,56,185,211,99,204,0,152,217,117,242,14,37,163,9,230,115,99,218,77,130,25,4,161,17,231,55 };
    byte_vec_t pk { 3,174,35,238,116,62,79,205,223,4,25,198,250,128,131,108,252,250,221,72,3,236,195,120,64,129,59,203,107,249,150,187,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 138 ") {
    byte_vec_t msg { 103,84,108,92 };
    byte_vec_t sig { 17,15,3,187,9,65,237,140,236,100,251,196,54,166,141,104,38,141,89,84,234,41,195,9,239,115,33,169,129,227,68,106,142,221,179,54,148,160,160,223,69,32,160,119,136,146,147,175,247,103,153,250,246,142,181,233,231,96,153,138,19,58,213,166 };
    byte_vec_t pk { 4,96,146,55,162,193,164,89,255,14,28,96,49,44,24,149,100,100,253,139,42,228,12,202,70,80,128,140,132,92,23,29,207,9,47,121,107,75,11,184,13,166,5,25,173,1,240,99,134,7,124,158,66,83,113,120,45,145,56,58,161,134,65,84,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 138 ") {
    byte_vec_t msg { 24,211,132,33 };
    byte_vec_t sig { 219,45,130,252,121,27,64,11,64,176,184,127,105,4,50,231,126,50,164,11,143,147,223,90,120,79,144,198,9,176,225,101,170,167,38,190,102,4,181,252,217,199,80,16,15,209,169,85,125,207,150,214,28,165,83,57,250,76,224,105,84,154,8,238 };
    byte_vec_t pk { 4,43,55,220,78,151,10,231,83,18,233,14,154,3,79,242,9,206,110,12,69,165,219,199,212,96,10,185,187,239,155,93,64,236,236,212,180,20,205,209,98,244,192,93,141,160,241,103,56,199,11,168,198,93,55,72,12,86,212,33,113,179,28,74,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 138 ") {
    byte_vec_t msg { 226,93,26,153 };
    byte_vec_t sig { 156,186,162,146,8,165,128,212,130,163,178,245,73,42,117,16,219,86,129,7,144,141,232,251,231,157,19,102,42,39,188,40,3,156,187,57,199,153,196,202,204,113,113,38,20,50,0,106,189,102,217,77,205,61,93,5,140,62,183,218,134,198,10,231 };
    byte_vec_t pk { 2,183,178,119,73,148,18,69,226,180,139,78,212,9,61,219,178,77,238,18,6,19,107,40,132,230,37,173,255,142,49,232,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 138 ") {
    byte_vec_t msg { 170,140,248,225 };
    byte_vec_t sig { 3,230,59,120,243,45,210,37,168,243,200,224,50,53,197,139,102,147,233,249,184,29,128,132,237,90,115,165,199,1,73,219,144,108,254,249,207,196,99,180,184,116,215,195,118,27,88,128,250,188,34,9,135,215,163,18,80,252,121,198,154,37,56,169 };
    byte_vec_t pk { 3,255,169,70,13,218,72,98,210,172,72,182,248,228,168,13,50,149,129,49,52,153,143,109,19,207,166,248,114,12,60,25,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 139 ") {
    byte_vec_t msg { 45,101,10,39 };
    byte_vec_t sig { 118,116,104,58,44,127,138,69,214,151,220,17,75,199,93,88,246,232,3,218,198,205,76,110,81,23,230,126,193,123,140,105,78,254,30,77,228,167,164,23,195,177,178,95,114,0,173,196,40,11,46,212,35,145,189,143,70,172,66,156,188,213,223,84 };
    byte_vec_t pk { 4,160,48,12,147,185,9,37,194,197,76,188,107,80,65,50,254,185,169,208,34,218,76,113,123,188,175,88,29,174,160,218,253,154,24,253,44,69,4,50,197,169,77,13,175,182,90,42,161,245,35,104,20,211,220,154,158,217,205,98,87,146,53,201,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 139 ") {
    byte_vec_t msg { 161,42,194,68 };
    byte_vec_t sig { 164,31,47,83,22,236,49,55,100,99,245,80,184,241,80,122,7,37,148,76,146,189,160,141,4,244,42,111,236,65,79,36,254,64,3,182,217,16,42,64,223,158,64,252,237,133,182,89,213,90,23,177,47,83,15,189,130,206,106,188,143,20,244,37 };
    byte_vec_t pk { 4,65,167,240,148,150,53,203,238,206,8,130,193,223,15,119,166,58,223,185,31,122,114,41,43,224,211,166,4,27,1,220,96,89,163,110,155,33,36,175,111,33,222,183,81,151,191,84,148,3,234,34,43,214,239,49,238,240,95,17,210,233,97,202,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 139 ") {
    byte_vec_t msg { 148,29,191,58 };
    byte_vec_t sig { 120,80,202,175,244,133,224,207,192,133,125,61,94,51,173,50,138,115,84,115,187,143,215,182,6,162,34,38,150,39,151,63,64,5,226,41,35,129,96,66,70,116,240,141,222,28,251,243,61,67,200,36,163,122,100,70,227,122,127,72,54,219,235,13 };
    byte_vec_t pk { 3,37,27,149,240,18,50,11,101,105,65,198,79,198,53,119,209,37,60,113,156,226,217,105,219,178,3,122,175,210,158,22,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 139 ") {
    byte_vec_t msg { 186,144,177,171 };
    byte_vec_t sig { 195,168,251,140,229,62,212,128,226,162,89,137,114,182,157,78,107,250,19,79,113,24,227,23,226,238,142,215,195,154,164,125,53,191,206,128,43,87,159,42,0,144,80,245,250,120,224,153,230,38,139,101,197,241,78,91,111,0,232,142,152,200,113,214 };
    byte_vec_t pk { 3,232,33,224,204,170,208,248,65,220,34,81,169,58,180,238,95,15,158,97,220,222,1,35,15,207,12,116,149,230,95,166,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 140 ") {
    byte_vec_t msg { 160,121,220,78 };
    byte_vec_t sig { 212,195,74,183,79,165,3,247,158,111,8,74,254,229,64,157,87,15,40,62,150,168,149,98,148,236,15,232,122,115,146,245,7,170,41,25,62,194,16,35,173,155,145,212,211,36,26,226,204,219,116,19,57,176,140,92,204,63,136,179,216,200,51,141 };
    byte_vec_t pk { 4,232,42,238,183,97,141,97,167,75,54,104,165,104,236,46,83,34,207,155,213,163,13,169,226,20,33,176,59,86,240,175,204,6,27,244,173,220,195,193,244,170,52,118,52,47,171,127,44,91,78,193,88,78,62,213,56,142,36,89,76,55,87,87,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 140 ") {
    byte_vec_t msg { 5,16,54,86 };
    byte_vec_t sig { 84,171,160,79,145,125,134,53,204,176,108,32,136,226,69,170,73,35,66,95,111,26,182,39,127,97,175,157,248,54,14,127,206,149,97,141,124,24,95,186,254,52,172,159,240,19,126,187,42,237,4,110,140,132,249,140,128,196,6,241,127,232,151,203 };
    byte_vec_t pk { 4,86,12,223,86,91,40,128,150,177,210,41,157,61,93,196,163,231,110,140,151,61,198,204,202,135,152,251,180,231,163,102,71,173,146,53,14,49,66,30,134,255,157,133,45,204,146,123,156,82,5,137,206,45,117,71,61,122,112,117,157,34,221,247,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 140 ") {
    byte_vec_t msg { 210,72,188,176 };
    byte_vec_t sig { 60,23,235,190,181,164,145,152,20,89,187,199,21,251,28,124,115,109,225,172,208,5,254,33,140,59,243,124,89,157,9,196,154,210,245,236,56,16,75,119,56,251,243,188,224,98,3,36,102,19,101,162,55,184,160,230,24,199,58,26,215,25,232,241 };
    byte_vec_t pk { 2,30,51,47,255,133,206,234,22,2,66,31,62,194,236,221,117,114,70,64,23,243,212,241,75,44,146,115,235,28,128,214,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 140 ") {
    byte_vec_t msg { 134,46,221,211 };
    byte_vec_t sig { 205,41,231,65,130,196,219,120,15,150,87,243,92,128,215,171,163,31,237,56,123,48,57,164,55,25,135,15,222,253,189,156,68,83,131,224,240,192,56,41,231,58,152,105,152,167,246,167,40,196,37,11,247,117,249,160,91,21,252,72,252,64,157,159 };
    byte_vec_t pk { 3,17,110,102,33,35,56,239,123,125,207,8,4,168,60,106,189,48,4,5,130,163,190,64,182,208,60,101,234,30,234,3,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 141 ") {
    byte_vec_t msg { 44,193,124,132 };
    byte_vec_t sig { 194,71,184,150,218,192,123,67,56,101,41,251,59,220,247,178,238,168,7,54,91,230,149,249,184,126,8,68,45,57,153,223,4,53,19,41,253,131,62,160,87,6,124,6,120,142,81,175,92,184,55,167,102,216,98,235,110,232,13,132,186,107,138,7 };
    byte_vec_t pk { 4,39,79,95,111,26,16,208,208,49,5,84,187,180,227,228,188,207,184,254,243,166,254,115,138,197,234,51,71,130,71,222,120,126,114,100,194,188,165,87,144,87,240,56,54,127,112,138,125,45,63,136,54,49,230,214,1,120,146,46,225,161,214,149,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 141 ") {
    byte_vec_t msg { 37,218,115,58 };
    byte_vec_t sig { 228,178,52,166,177,157,202,66,152,73,63,9,96,93,85,222,5,48,181,129,173,157,1,17,226,244,2,25,0,166,172,220,238,194,96,57,42,109,168,4,117,4,58,144,83,35,193,231,86,215,179,129,0,154,230,102,212,199,235,7,74,41,150,252 };
    byte_vec_t pk { 4,47,176,211,148,186,50,99,164,71,116,166,32,250,34,101,40,198,177,125,62,73,171,174,153,102,209,50,59,114,105,71,19,106,251,156,185,186,25,116,4,153,167,125,147,221,106,11,245,146,34,201,155,85,227,187,147,240,156,158,218,128,131,12,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 141 ") {
    byte_vec_t msg { 139,105,155,21 };
    byte_vec_t sig { 21,76,217,100,110,38,73,49,98,113,37,213,96,160,4,102,123,1,44,102,155,85,247,229,99,146,134,182,211,118,122,114,66,155,68,115,240,178,176,174,120,12,227,32,237,48,186,129,39,206,100,199,68,184,253,93,249,187,1,83,4,142,70,134 };
    byte_vec_t pk { 2,31,129,75,246,161,140,18,22,248,159,0,184,232,3,169,241,203,158,72,114,183,169,0,88,192,187,87,139,215,46,42,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 141 ") {
    byte_vec_t msg { 41,33,85,68 };
    byte_vec_t sig { 111,187,66,18,75,97,112,178,118,37,233,14,242,197,212,124,115,173,230,116,154,250,156,10,182,59,152,232,137,29,100,143,70,91,231,136,121,117,223,182,127,178,230,127,136,240,86,15,251,43,133,249,22,135,221,213,67,65,75,234,24,104,237,201 };
    byte_vec_t pk { 3,158,15,167,147,215,37,177,85,165,59,16,214,118,85,156,218,141,106,215,102,73,216,11,97,47,7,158,193,34,23,111,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 142 ") {
    byte_vec_t msg { 22,38,102,211 };
    byte_vec_t sig { 251,34,127,90,206,74,46,43,142,142,12,251,9,21,26,154,135,125,92,203,235,240,123,165,214,92,5,25,138,194,79,60,111,218,140,89,232,244,224,170,130,95,86,189,48,78,168,39,82,181,241,59,204,144,44,197,231,8,155,214,66,38,0,229 };
    byte_vec_t pk { 4,167,102,74,86,40,159,174,173,137,64,79,158,119,243,9,243,157,215,100,23,58,127,79,222,63,171,31,47,226,57,161,100,118,2,25,123,69,86,255,32,249,250,210,146,251,192,171,181,190,87,52,150,24,166,108,1,127,192,240,143,134,178,24,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 142 ") {
    byte_vec_t msg { 47,228,203,226 };
    byte_vec_t sig { 76,209,6,68,100,10,232,197,240,179,157,228,165,134,196,112,77,85,175,187,85,23,68,145,134,99,38,8,55,55,92,63,223,234,174,138,154,4,44,71,193,56,143,116,112,110,229,132,24,238,247,206,60,85,232,183,17,63,235,87,52,143,6,236 };
    byte_vec_t pk { 4,147,47,95,41,126,246,20,155,64,118,210,124,220,94,55,251,175,4,122,236,60,172,225,100,127,151,111,119,145,248,120,213,28,213,72,76,199,235,179,101,148,174,205,46,242,249,85,97,228,82,244,190,252,28,5,81,234,46,233,240,36,17,125,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 142 ") {
    byte_vec_t msg { 42,231,249,175 };
    byte_vec_t sig { 179,79,205,2,50,205,154,104,18,167,49,191,224,125,52,201,149,223,111,56,195,67,227,56,8,145,246,121,178,130,162,5,109,10,183,50,43,153,114,242,129,80,221,149,132,123,4,23,54,41,247,29,212,145,110,212,101,208,51,2,245,138,178,195 };
    byte_vec_t pk { 3,205,227,176,0,255,35,63,172,226,5,32,18,187,220,8,62,68,121,251,219,166,59,213,226,159,153,24,58,249,216,165,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 142 ") {
    byte_vec_t msg { 112,213,34,234 };
    byte_vec_t sig { 181,84,26,113,0,205,232,174,202,182,106,33,227,41,217,48,30,191,112,12,165,106,62,100,39,67,154,149,67,42,11,201,154,159,221,26,141,72,62,215,144,26,254,122,152,198,85,212,186,124,223,196,148,67,181,57,60,150,209,33,78,24,192,80 };
    byte_vec_t pk { 3,192,72,138,31,90,189,200,106,193,170,128,254,171,164,142,170,93,73,4,84,58,155,243,171,208,106,245,253,110,220,116,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 143 ") {
    byte_vec_t msg { 163,162,209,54 };
    byte_vec_t sig { 45,72,146,17,195,98,240,109,31,238,62,54,233,219,230,173,188,21,197,18,170,194,170,210,247,109,165,70,142,125,149,143,223,149,46,51,199,64,115,126,155,231,175,217,247,42,145,247,142,65,5,186,63,213,231,42,129,229,59,227,4,194,246,148 };
    byte_vec_t pk { 4,104,102,81,26,37,68,252,249,91,131,137,94,37,46,24,198,158,105,74,55,47,40,25,202,83,215,202,240,183,42,251,8,15,223,219,208,17,252,110,94,155,216,156,85,53,141,104,154,194,105,88,54,191,85,140,177,170,182,233,227,72,162,1,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 143 ") {
    byte_vec_t msg { 57,185,245,19 };
    byte_vec_t sig { 186,34,182,34,44,12,247,48,64,242,71,228,188,111,17,20,101,98,129,49,249,147,149,187,122,125,238,94,131,193,93,32,160,251,7,66,129,118,45,186,127,81,83,148,176,185,51,155,27,222,76,25,188,224,144,70,56,118,141,176,94,63,74,86 };
    byte_vec_t pk { 4,88,163,167,142,145,118,239,157,40,25,43,85,93,51,142,67,138,226,160,201,216,36,39,98,56,132,85,208,215,34,254,6,220,104,235,182,143,93,13,178,43,80,25,214,2,221,20,165,206,9,128,167,57,112,245,201,210,157,24,230,12,60,248,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 143 ") {
    byte_vec_t msg { 9,234,26,44 };
    byte_vec_t sig { 157,132,49,15,223,201,28,183,58,180,130,203,246,41,64,58,215,116,3,239,219,183,210,39,20,41,212,224,83,217,151,72,54,118,211,194,200,79,163,85,88,74,156,153,110,238,157,129,251,153,14,130,19,43,250,144,143,30,128,148,155,130,234,79 };
    byte_vec_t pk { 2,230,106,87,150,209,222,162,173,134,253,87,24,22,36,156,170,184,111,20,190,217,187,24,120,173,150,230,87,47,62,154,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 143 ") {
    byte_vec_t msg { 194,107,219,101 };
    byte_vec_t sig { 61,185,219,160,40,45,89,243,51,17,147,221,55,220,167,214,78,217,39,20,186,34,104,59,94,7,21,145,201,68,13,137,195,50,91,45,120,241,35,204,229,25,21,150,239,171,250,169,224,231,63,6,99,113,130,125,167,45,114,171,5,229,78,53 };
    byte_vec_t pk { 2,20,52,159,82,53,47,229,47,132,97,162,87,201,53,29,215,82,188,129,194,84,155,2,226,74,4,41,148,233,108,196,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 144 ") {
    byte_vec_t msg { 152,155,182,217 };
    byte_vec_t sig { 40,13,8,147,156,5,83,94,248,172,114,184,104,96,172,187,194,65,124,238,66,165,145,120,52,9,196,249,208,254,10,63,114,243,51,90,103,164,46,187,109,199,15,184,14,81,117,244,208,161,9,198,238,234,249,76,69,131,122,211,65,128,21,92 };
    byte_vec_t pk { 4,211,96,184,73,255,42,125,15,95,175,128,223,147,219,212,177,205,212,30,187,75,49,8,91,71,101,213,20,106,139,220,12,122,149,215,218,212,191,52,77,13,133,70,249,126,246,83,81,35,113,148,20,179,156,184,135,151,126,91,149,124,132,113,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 144 ") {
    byte_vec_t msg { 151,82,98,86 };
    byte_vec_t sig { 186,89,104,155,184,64,247,43,233,102,87,91,199,251,73,103,137,255,69,233,218,154,61,30,163,207,55,199,225,254,80,200,176,147,76,9,245,22,209,233,156,238,39,191,20,10,147,45,72,35,232,55,32,27,0,58,22,141,124,117,36,23,102,165 };
    byte_vec_t pk { 4,128,245,43,1,101,199,62,109,116,203,130,18,148,126,51,4,74,180,251,242,42,202,165,254,134,1,250,239,203,147,23,106,0,42,250,109,199,135,221,45,5,220,194,36,37,253,158,62,78,100,176,194,2,190,90,146,71,54,87,55,100,169,234,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 144 ") {
    byte_vec_t msg { 166,138,155,184 };
    byte_vec_t sig { 239,153,76,97,116,56,16,203,231,113,173,192,200,151,245,57,36,222,207,229,240,132,213,202,111,227,94,132,227,78,197,92,230,98,254,49,11,188,237,204,35,59,139,143,90,178,141,182,67,103,67,183,128,38,75,141,238,177,65,29,235,192,53,36 };
    byte_vec_t pk { 3,188,199,198,177,146,219,2,60,92,250,255,148,34,35,2,139,144,138,72,178,28,98,52,129,13,88,113,83,144,228,128,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 144 ") {
    byte_vec_t msg { 213,154,21,58 };
    byte_vec_t sig { 163,50,58,173,66,128,171,116,149,177,86,87,39,89,153,16,41,231,69,91,74,227,69,111,96,6,52,134,104,9,66,237,67,216,175,65,222,46,244,168,181,5,163,70,181,57,98,154,87,154,232,180,24,203,120,19,106,219,203,75,167,11,98,235 };
    byte_vec_t pk { 3,198,45,243,194,148,4,148,143,128,161,143,156,60,6,230,109,67,107,193,90,126,217,65,64,173,80,125,212,144,180,59,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 145 ") {
    byte_vec_t msg { 117,1,60,66 };
    byte_vec_t sig { 154,7,89,226,165,58,184,152,249,78,233,116,90,200,103,156,156,206,81,147,179,236,200,109,234,236,50,165,182,79,43,230,97,188,164,142,118,117,230,51,149,55,22,128,211,252,163,205,157,208,119,86,65,147,136,169,98,160,26,204,48,42,232,20 };
    byte_vec_t pk { 4,248,225,122,144,207,133,199,120,104,55,203,51,166,172,163,247,52,116,149,153,107,231,129,15,234,5,41,231,119,118,195,46,218,111,174,143,80,139,80,60,12,37,229,228,31,96,229,171,245,226,90,35,36,177,16,220,200,55,152,150,120,53,102,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 145 ") {
    byte_vec_t msg { 115,78,113,95 };
    byte_vec_t sig { 21,72,221,83,61,194,229,100,15,40,134,79,25,128,20,212,203,219,118,42,60,149,161,152,173,135,247,18,23,223,125,137,233,161,26,177,89,147,237,173,120,204,101,244,129,130,60,57,22,197,160,236,88,30,99,214,74,77,24,133,204,46,103,100 };
    byte_vec_t pk { 4,113,121,114,142,245,55,119,243,191,110,97,221,66,252,99,12,59,184,100,54,24,53,207,251,203,95,240,162,237,186,76,73,172,151,51,147,251,81,164,108,16,44,63,231,46,19,85,232,37,43,203,174,8,11,234,20,153,124,123,55,115,208,126,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 145 ") {
    byte_vec_t msg { 202,111,255,24 };
    byte_vec_t sig { 63,144,145,6,147,64,134,133,14,18,191,248,121,30,25,12,65,220,17,3,82,49,153,149,114,5,207,173,19,30,55,228,86,150,156,209,152,75,60,134,166,136,161,66,28,33,163,193,130,155,136,131,203,63,83,204,28,201,18,65,221,18,95,126 };
    byte_vec_t pk { 3,162,144,237,101,192,253,31,84,104,89,6,129,67,210,134,213,112,70,115,100,170,107,83,143,118,80,63,16,229,32,11,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 145 ") {
    byte_vec_t msg { 85,126,18,149 };
    byte_vec_t sig { 179,27,50,34,129,133,91,217,63,19,30,63,156,30,201,76,62,161,215,142,195,212,195,129,131,103,27,86,72,176,24,75,238,42,2,112,73,220,13,196,129,236,170,141,62,108,30,147,181,34,28,242,193,129,70,52,226,198,1,227,128,250,111,80 };
    byte_vec_t pk { 2,186,111,236,158,9,110,99,134,229,78,152,67,30,82,13,185,113,35,255,147,252,208,171,1,31,252,235,230,164,8,137,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 146 ") {
    byte_vec_t msg { 16,240,48,86 };
    byte_vec_t sig { 56,79,172,82,33,107,170,34,56,180,91,65,61,156,190,3,199,220,34,136,237,109,232,196,212,17,185,151,104,120,153,205,192,49,165,78,249,2,162,170,237,114,53,226,144,92,151,163,203,188,52,235,204,43,245,90,223,242,18,90,134,122,65,149 };
    byte_vec_t pk { 4,98,64,189,126,186,161,237,101,217,187,107,88,5,186,12,220,207,187,199,43,49,205,214,103,67,135,108,182,185,51,18,37,79,104,65,62,231,170,26,130,4,212,5,118,199,153,81,86,20,43,157,236,180,148,207,10,191,140,179,167,37,114,82,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 146 ") {
    byte_vec_t msg { 1,88,240,0 };
    byte_vec_t sig { 168,204,244,215,150,249,146,148,188,68,215,163,241,233,199,64,40,221,43,235,44,65,39,221,223,249,122,115,162,156,1,214,161,5,240,205,224,133,94,255,14,204,114,160,237,24,71,7,150,175,222,255,242,143,124,170,49,155,40,181,58,133,0,202 };
    byte_vec_t pk { 4,219,29,125,234,97,144,113,20,144,173,22,56,252,1,61,224,19,119,222,10,42,147,16,26,53,99,4,75,201,83,170,211,147,30,174,118,215,133,27,62,66,72,165,30,108,209,167,161,157,182,168,126,93,216,60,158,98,74,236,125,20,248,112,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 146 ") {
    byte_vec_t msg { 200,130,224,21 };
    byte_vec_t sig { 119,168,214,189,231,100,6,69,94,50,177,178,26,31,117,216,7,109,140,114,42,154,107,132,159,87,172,59,217,84,234,123,120,34,167,158,239,221,13,9,192,79,233,18,181,30,184,3,235,154,223,214,48,4,27,26,196,35,186,226,245,92,228,26 };
    byte_vec_t pk { 2,53,238,60,27,49,176,24,220,220,107,95,154,189,72,138,245,202,114,27,191,127,173,49,76,101,183,75,239,230,100,163,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 146 ") {
    byte_vec_t msg { 210,216,226,226 };
    byte_vec_t sig { 201,96,254,19,9,23,68,140,239,9,80,214,135,109,210,142,96,214,58,193,67,3,178,11,109,66,144,70,229,170,212,176,57,114,116,57,158,186,39,238,219,237,184,182,223,94,146,108,152,183,194,192,118,30,245,170,78,183,126,25,159,106,40,28 };
    byte_vec_t pk { 3,78,155,22,50,26,71,219,252,28,17,125,198,128,7,102,246,117,61,5,230,67,194,64,162,114,53,19,62,57,12,32,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 147 ") {
    byte_vec_t msg { 155,146,118,200 };
    byte_vec_t sig { 227,222,177,87,161,159,237,94,102,149,246,138,65,149,153,138,194,24,210,53,27,114,204,138,209,195,33,68,117,66,4,160,38,181,43,54,130,181,37,141,238,104,85,234,81,152,202,28,76,97,126,140,232,172,10,238,115,156,79,218,211,238,53,83 };
    byte_vec_t pk { 4,90,156,50,148,112,51,72,31,107,221,95,84,162,211,197,65,80,157,125,183,19,77,232,53,218,110,75,231,124,32,31,193,171,168,53,15,220,225,167,152,54,242,24,64,233,116,115,149,252,65,142,1,211,222,18,244,219,236,57,9,95,230,148,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 147 ") {
    byte_vec_t msg { 203,4,161,182 };
    byte_vec_t sig { 235,144,78,180,9,55,29,51,220,94,250,166,124,165,21,110,238,82,71,219,64,87,205,87,72,185,88,227,101,86,189,203,129,153,166,139,247,133,168,38,133,119,223,203,11,97,77,24,243,52,232,15,230,240,172,160,89,162,168,155,25,128,136,125 };
    byte_vec_t pk { 4,208,59,129,13,202,143,106,95,134,164,245,119,115,219,29,151,89,162,51,46,212,44,41,121,5,131,71,219,198,142,36,26,36,14,169,117,102,69,107,136,187,182,177,46,212,173,239,122,149,218,169,217,152,190,185,200,63,171,115,68,103,202,77,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 147 ") {
    byte_vec_t msg { 173,98,235,19 };
    byte_vec_t sig { 60,188,151,236,195,191,5,162,246,84,128,23,98,169,30,69,28,97,133,193,137,167,45,150,66,90,140,106,108,81,129,244,125,158,188,215,32,125,142,174,108,78,107,188,165,153,162,174,204,20,116,0,123,85,141,108,253,67,214,5,94,52,186,31 };
    byte_vec_t pk { 3,156,206,80,146,64,111,245,124,20,88,77,164,178,156,42,88,27,113,22,113,162,70,2,46,131,195,210,167,191,66,121,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 147 ") {
    byte_vec_t msg { 240,39,182,144 };
    byte_vec_t sig { 50,207,5,22,56,54,207,106,151,204,89,212,118,213,212,186,173,254,140,51,102,211,147,78,6,151,229,47,220,50,50,127,51,148,99,100,50,13,239,129,82,220,168,105,121,34,209,178,59,97,203,46,164,151,173,148,87,103,167,115,15,92,224,247 };
    byte_vec_t pk { 3,138,160,145,28,92,33,164,66,168,141,234,230,42,182,37,138,209,162,105,53,15,235,82,171,0,178,174,136,235,251,249,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 148 ") {
    byte_vec_t msg { 42,20,239,243 };
    byte_vec_t sig { 249,148,161,17,18,56,243,229,196,33,106,216,153,207,174,178,137,120,180,205,225,81,39,246,67,175,177,28,49,165,98,10,151,118,169,118,125,181,14,53,3,122,64,89,233,14,143,64,76,201,49,115,167,180,202,81,151,132,211,156,153,216,202,107 };
    byte_vec_t pk { 4,113,174,180,60,33,193,111,7,43,117,155,193,141,97,190,250,149,184,45,160,111,165,83,66,194,218,235,13,120,47,14,70,80,23,56,36,152,222,151,89,108,87,109,159,190,109,4,249,22,200,27,217,114,253,123,68,20,95,108,100,51,33,40,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 148 ") {
    byte_vec_t msg { 144,160,81,121 };
    byte_vec_t sig { 247,37,153,147,254,235,155,188,12,111,187,50,216,222,83,61,212,229,182,119,133,146,70,1,49,63,40,89,202,1,127,19,38,236,103,230,134,103,132,101,174,39,187,109,241,98,110,89,178,187,255,235,0,249,232,232,95,127,165,79,44,24,196,180 };
    byte_vec_t pk { 4,148,52,56,255,92,110,8,158,170,36,69,21,8,136,173,83,225,247,222,95,148,199,245,21,146,202,69,187,153,106,159,127,58,110,193,68,56,94,166,83,183,164,221,93,123,146,106,17,194,150,121,80,208,148,132,182,161,52,254,56,215,32,160,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 148 ") {
    byte_vec_t msg { 222,49,214,65 };
    byte_vec_t sig { 69,28,30,29,223,15,111,183,144,240,103,236,234,89,149,105,59,1,204,189,214,99,182,210,222,251,62,162,77,17,179,179,206,140,76,251,31,231,71,90,0,11,236,95,49,165,59,176,34,182,215,136,126,199,195,57,87,98,12,160,223,9,178,151 };
    byte_vec_t pk { 3,114,39,231,42,54,112,235,174,224,92,148,135,25,128,163,151,235,19,147,116,34,47,201,241,196,233,29,101,152,38,157,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 148 ") {
    byte_vec_t msg { 253,150,40,29 };
    byte_vec_t sig { 189,0,209,116,108,67,191,4,37,3,30,68,42,187,86,7,134,182,97,245,182,210,49,53,44,216,240,86,165,166,134,151,145,96,214,227,164,12,139,127,161,212,210,219,185,21,145,202,254,153,206,68,175,199,52,12,165,37,119,58,162,235,141,108 };
    byte_vec_t pk { 3,120,228,142,82,75,111,124,8,67,237,174,39,191,40,118,173,83,205,105,35,181,118,204,210,198,218,172,229,162,111,111,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 149 ") {
    byte_vec_t msg { 112,81,143,165 };
    byte_vec_t sig { 16,69,158,251,11,176,51,50,137,14,22,150,180,219,191,104,121,64,201,213,55,210,74,245,63,65,5,32,149,60,242,231,85,95,183,85,36,143,179,170,78,123,252,77,126,88,221,100,71,221,29,17,206,122,1,212,3,203,103,88,96,191,57,163 };
    byte_vec_t pk { 4,113,17,63,41,243,54,120,218,106,113,161,149,19,70,174,62,34,245,236,142,226,209,224,198,149,108,9,212,92,41,19,112,27,15,228,140,38,31,153,131,203,183,97,40,129,38,248,251,78,177,226,96,169,241,246,88,60,100,207,163,221,239,131,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 149 ") {
    byte_vec_t msg { 98,50,121,44 };
    byte_vec_t sig { 64,245,240,172,61,39,226,246,74,132,104,198,66,24,72,145,130,56,201,22,226,219,90,255,110,128,153,224,124,31,59,190,180,205,96,86,33,204,16,187,165,168,108,111,17,92,80,173,229,65,7,184,176,255,210,196,21,90,6,254,121,75,26,241 };
    byte_vec_t pk { 4,38,175,151,220,3,223,150,57,152,196,171,11,93,221,115,198,165,113,37,3,14,103,132,146,122,0,69,158,224,166,149,102,0,92,110,218,166,65,244,255,249,29,80,100,221,245,124,128,204,62,50,221,12,111,8,98,72,60,191,50,204,235,93,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 149 ") {
    byte_vec_t msg { 93,95,252,224 };
    byte_vec_t sig { 103,233,166,95,111,242,198,153,152,190,248,169,5,42,62,98,119,251,233,170,178,20,116,94,171,205,192,22,24,123,133,188,141,155,199,40,183,202,141,120,98,122,47,45,193,131,86,240,215,15,125,55,26,125,129,255,188,235,218,63,164,183,37,195 };
    byte_vec_t pk { 3,195,29,35,220,114,156,151,30,142,90,129,103,39,197,33,113,38,89,9,134,57,230,102,4,24,249,138,14,63,16,250,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 149 ") {
    byte_vec_t msg { 197,106,124,107 };
    byte_vec_t sig { 118,73,225,181,45,54,239,91,51,210,166,237,187,98,201,51,255,235,2,124,19,118,4,119,39,175,56,147,239,64,159,242,178,1,146,198,45,93,11,117,185,180,118,236,24,52,156,117,221,85,31,183,133,126,140,205,214,34,158,36,221,82,155,62 };
    byte_vec_t pk { 2,242,91,42,250,180,139,63,83,105,127,63,19,194,110,57,90,250,116,63,230,245,129,146,131,3,110,170,104,60,49,154,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 150 ") {
    byte_vec_t msg { 215,94,183,232 };
    byte_vec_t sig { 141,118,143,209,212,53,163,254,2,8,47,29,175,202,27,226,198,95,216,180,166,121,252,65,90,189,127,152,157,73,31,207,90,237,206,73,48,44,9,54,212,174,184,59,56,162,121,224,242,86,180,26,75,191,77,192,191,107,239,31,67,214,212,20 };
    byte_vec_t pk { 4,108,126,177,54,168,151,175,46,139,21,216,18,105,56,81,161,34,202,234,53,143,97,78,114,46,27,139,255,158,193,81,153,117,252,238,101,165,8,186,90,215,57,35,211,139,2,70,183,87,230,99,241,224,245,204,7,16,221,21,46,152,30,64,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 150 ") {
    byte_vec_t msg { 118,219,181,204 };
    byte_vec_t sig { 65,4,228,13,191,217,154,149,172,31,209,92,108,243,5,93,252,212,65,197,111,132,78,227,208,163,148,20,24,233,0,208,177,49,99,166,162,36,216,40,4,166,120,205,240,248,175,168,175,62,121,24,171,210,14,213,73,6,90,176,80,64,211,92 };
    byte_vec_t pk { 4,123,113,222,34,131,9,175,92,81,100,160,198,83,148,2,166,158,16,150,10,4,126,143,45,26,6,178,158,100,83,245,240,95,244,20,168,194,95,98,158,108,9,95,73,112,58,192,20,141,225,79,69,220,61,43,191,160,120,184,98,163,45,65,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 150 ") {
    byte_vec_t msg { 87,121,64,21 };
    byte_vec_t sig { 225,124,105,120,206,29,154,138,150,231,5,135,127,234,169,175,146,215,225,43,7,110,155,18,180,43,202,217,43,233,67,198,31,70,223,215,164,13,15,92,18,212,59,45,204,154,157,205,46,207,134,53,180,138,214,20,223,115,144,128,27,27,180,198 };
    byte_vec_t pk { 3,195,22,103,12,35,159,248,31,228,103,124,163,136,105,207,241,92,171,6,179,237,54,176,20,14,227,96,50,214,70,221,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 150 ") {
    byte_vec_t msg { 201,179,124,248 };
    byte_vec_t sig { 42,77,57,13,209,28,142,13,27,10,56,35,88,109,239,241,235,8,9,17,72,31,111,53,62,149,156,68,157,58,96,28,111,120,231,88,217,190,78,181,191,35,253,40,60,90,168,198,107,116,125,162,106,203,102,12,237,29,18,53,127,85,95,57 };
    byte_vec_t pk { 3,110,209,130,191,250,20,234,127,144,59,245,87,11,101,153,112,101,137,129,105,197,139,206,6,118,124,41,29,173,195,29,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 151 ") {
    byte_vec_t msg { 186,167,131,134 };
    byte_vec_t sig { 243,64,11,158,140,60,76,28,114,187,167,24,134,201,243,160,170,233,210,145,16,174,227,86,96,164,160,181,124,149,52,36,57,177,14,70,202,92,111,118,195,62,243,184,207,227,238,7,190,253,13,125,201,211,96,161,164,88,130,80,129,136,63,179 };
    byte_vec_t pk { 4,159,83,142,224,186,211,41,69,169,24,41,79,116,156,55,242,33,98,87,12,186,26,51,155,210,62,62,110,53,47,132,79,148,183,86,246,212,42,82,104,61,92,252,79,160,82,185,113,116,200,4,78,167,239,93,157,104,16,92,8,94,125,8,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 151 ") {
    byte_vec_t msg { 161,138,145,151 };
    byte_vec_t sig { 149,241,234,196,181,95,146,135,240,193,23,215,80,89,115,0,92,215,22,200,191,159,26,42,235,204,157,79,17,77,50,39,188,80,1,175,137,229,213,187,58,159,252,119,107,96,21,117,56,242,143,68,184,212,0,54,162,110,155,213,45,151,80,178 };
    byte_vec_t pk { 4,156,16,253,245,172,92,203,222,203,210,191,86,53,46,162,207,124,113,5,84,78,145,159,95,160,103,7,6,38,51,147,206,178,195,50,204,173,17,157,3,2,20,134,175,7,88,195,117,68,241,133,59,11,234,120,98,63,74,237,24,36,101,118,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 151 ") {
    byte_vec_t msg { 164,110,247,216 };
    byte_vec_t sig { 181,34,68,235,235,250,160,10,72,190,77,8,126,122,182,129,255,12,37,99,25,105,38,69,246,100,53,51,48,26,63,93,110,1,214,232,192,127,145,35,71,36,230,133,234,42,135,80,86,8,52,229,95,90,22,251,252,97,205,200,240,254,207,91 };
    byte_vec_t pk { 2,241,214,201,26,211,175,57,211,55,24,51,144,4,148,171,49,79,40,1,92,152,140,150,172,14,83,242,224,115,95,63,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 151 ") {
    byte_vec_t msg { 52,158,211,82 };
    byte_vec_t sig { 55,42,134,13,187,93,197,132,205,102,68,134,27,116,87,69,37,180,209,144,136,156,134,31,249,103,129,199,149,38,126,88,51,236,158,93,254,23,50,199,24,188,165,211,253,137,115,121,124,96,252,204,182,231,77,81,218,218,154,164,234,24,134,34 };
    byte_vec_t pk { 2,86,99,225,126,226,228,137,116,23,47,94,55,99,79,136,253,114,8,30,16,229,123,167,82,95,220,142,198,185,104,74,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 152 ") {
    byte_vec_t msg { 134,63,206,52 };
    byte_vec_t sig { 50,185,54,230,39,245,251,152,174,112,149,143,167,162,1,24,108,148,84,234,9,116,206,229,152,39,207,20,183,140,199,130,219,19,224,74,154,25,227,214,47,26,53,174,236,85,105,166,166,129,126,60,181,45,230,255,164,200,122,128,15,197,27,239 };
    byte_vec_t pk { 4,170,17,107,28,241,118,143,136,203,107,250,236,134,58,228,69,81,125,137,228,172,156,159,82,13,227,226,83,127,182,74,204,78,246,43,137,216,106,54,124,237,89,44,89,67,120,88,48,71,95,35,70,53,15,3,68,30,251,253,64,247,131,127,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 152 ") {
    byte_vec_t msg { 119,67,42,238 };
    byte_vec_t sig { 12,136,24,147,6,9,194,251,155,111,24,18,40,138,105,75,113,170,180,225,108,17,113,195,198,176,179,96,65,4,3,11,35,227,17,92,232,92,195,173,175,187,220,200,226,145,189,58,67,105,232,164,150,253,11,106,227,61,4,248,65,34,123,86 };
    byte_vec_t pk { 4,88,218,181,172,71,231,98,116,155,139,13,237,151,158,240,90,107,39,47,147,96,51,67,147,229,34,167,216,77,66,194,200,232,99,218,190,213,231,84,82,110,201,217,225,30,65,153,208,229,166,165,69,94,21,117,14,242,170,102,221,147,174,91,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 152 ") {
    byte_vec_t msg { 106,223,171,190 };
    byte_vec_t sig { 80,208,243,80,203,233,228,56,76,160,233,68,34,230,218,36,223,14,89,215,112,43,0,122,160,118,30,154,8,169,98,119,114,135,61,98,142,235,143,2,147,25,209,102,207,78,52,140,22,196,13,133,173,203,88,12,180,196,240,82,223,230,9,60 };
    byte_vec_t pk { 3,239,38,249,108,173,242,137,220,208,160,120,104,96,246,25,81,185,22,214,69,80,241,152,46,43,4,55,232,194,94,175,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 152 ") {
    byte_vec_t msg { 99,104,26,174 };
    byte_vec_t sig { 106,166,115,62,36,240,91,243,206,245,5,142,66,52,7,148,157,136,99,125,174,38,93,141,203,252,245,90,136,216,225,76,229,166,246,90,183,168,255,19,229,251,34,90,142,114,3,39,196,4,242,77,76,247,2,95,252,196,209,103,148,91,204,232 };
    byte_vec_t pk { 3,229,162,105,178,99,59,82,40,196,250,41,251,92,185,79,198,15,181,53,42,180,172,141,231,99,56,72,198,16,114,60,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 153 ") {
    byte_vec_t msg { 139,84,172,69 };
    byte_vec_t sig { 200,205,134,177,121,19,165,97,22,246,184,31,108,71,42,45,158,159,12,255,14,222,209,177,225,57,117,85,23,91,80,90,129,200,96,192,138,254,241,166,198,127,249,190,224,188,85,187,79,212,8,189,213,22,215,245,143,60,82,116,168,144,68,239 };
    byte_vec_t pk { 4,61,194,138,102,208,186,127,24,156,216,228,205,154,99,1,206,31,248,28,223,146,49,42,88,7,170,182,89,182,82,174,37,154,37,121,234,218,79,189,75,176,37,238,180,160,250,23,182,178,48,11,160,13,188,228,103,2,215,200,71,34,190,211,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 153 ") {
    byte_vec_t msg { 96,41,121,147 };
    byte_vec_t sig { 232,188,36,92,100,117,211,235,2,15,230,181,188,251,58,8,151,213,70,120,119,39,148,220,34,196,233,137,40,144,240,198,83,157,173,80,126,81,242,203,117,198,73,142,115,225,225,189,61,5,31,91,166,199,240,180,250,142,153,16,211,93,83,19 };
    byte_vec_t pk { 4,173,176,197,82,38,37,235,108,251,100,167,152,175,99,201,190,3,70,96,94,251,139,155,185,108,249,188,246,192,96,108,233,199,194,52,61,232,178,180,62,9,159,132,254,68,189,173,129,115,245,21,74,240,230,189,150,93,13,143,108,65,100,21,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 153 ") {
    byte_vec_t msg { 68,99,156,242 };
    byte_vec_t sig { 43,166,243,254,83,93,127,179,56,59,235,108,5,203,39,245,185,224,122,223,196,55,156,197,68,62,1,247,194,20,26,205,95,85,243,91,201,136,161,16,161,79,89,84,146,185,221,92,172,63,182,83,235,181,202,152,9,195,121,118,85,111,32,59 };
    byte_vec_t pk { 2,17,200,96,72,223,181,106,196,20,65,237,6,218,136,24,239,10,155,189,209,152,209,125,248,101,157,84,184,54,246,237,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 153 ") {
    byte_vec_t msg { 228,35,113,119 };
    byte_vec_t sig { 92,198,150,74,78,67,179,195,110,82,183,112,226,76,10,127,3,77,162,253,97,123,148,63,61,71,162,67,206,70,87,169,232,219,200,89,236,236,4,104,40,25,131,45,149,98,114,17,96,63,150,60,0,46,205,243,71,99,34,106,66,20,30,214 };
    byte_vec_t pk { 2,14,176,172,246,220,229,199,19,10,18,145,176,81,165,191,184,201,47,53,66,126,226,135,251,229,96,37,166,43,118,147,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 154 ") {
    byte_vec_t msg { 180,193,29,90 };
    byte_vec_t sig { 194,83,203,119,122,24,179,79,55,37,44,43,134,95,22,109,7,230,174,49,168,3,241,161,25,167,98,130,231,139,250,53,64,23,95,15,54,159,178,68,247,228,26,250,135,93,35,138,66,18,56,16,80,223,209,47,228,194,218,79,225,233,19,41 };
    byte_vec_t pk { 4,134,168,24,27,37,133,158,9,248,245,180,89,170,38,109,83,89,227,75,160,49,46,98,26,50,76,46,173,177,103,36,74,33,251,196,162,132,154,114,135,149,177,205,72,199,104,110,114,175,41,250,130,195,77,13,94,246,204,223,85,71,65,89,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 154 ") {
    byte_vec_t msg { 21,41,97,182 };
    byte_vec_t sig { 209,240,162,80,170,144,65,89,240,237,18,104,158,67,66,223,174,58,35,98,141,213,29,154,122,34,237,246,103,124,18,211,128,49,7,185,159,4,128,191,255,13,81,32,216,206,215,208,72,202,139,151,57,63,223,95,10,77,174,46,106,114,27,35 };
    byte_vec_t pk { 4,86,83,79,96,113,234,64,154,42,163,39,185,243,169,27,93,79,214,35,195,148,210,189,111,176,107,24,243,175,121,21,246,67,228,203,236,58,250,96,54,184,161,242,222,235,52,180,88,25,41,43,159,50,188,186,211,123,206,54,133,17,7,221,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 154 ") {
    byte_vec_t msg { 169,210,34,65 };
    byte_vec_t sig { 231,190,143,57,172,226,139,25,171,231,205,229,199,75,246,240,198,110,160,31,13,5,148,172,244,53,141,196,67,29,84,201,38,103,188,1,13,185,211,88,20,225,179,76,222,222,46,250,68,88,241,48,98,83,59,172,85,114,171,1,152,249,174,29 };
    byte_vec_t pk { 2,94,234,21,184,193,1,144,233,242,106,67,254,59,230,53,71,93,140,200,202,125,15,45,218,227,26,118,255,41,181,36,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 154 ") {
    byte_vec_t msg { 86,121,124,127 };
    byte_vec_t sig { 115,41,118,147,138,197,88,126,40,190,0,141,122,56,36,59,60,129,141,180,201,200,98,89,29,242,18,189,187,214,245,166,238,59,130,39,3,124,96,219,200,179,158,135,46,102,130,2,113,188,237,100,244,225,9,245,111,231,198,206,185,240,217,219 };
    byte_vec_t pk { 2,161,208,177,30,15,0,17,20,0,202,224,250,134,61,41,189,210,6,94,248,223,149,98,59,182,199,123,3,164,108,37,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 155 ") {
    byte_vec_t msg { 44,224,217,224 };
    byte_vec_t sig { 148,221,186,88,79,203,73,22,116,191,92,15,220,101,212,206,155,187,194,10,255,17,225,229,182,213,4,28,184,35,165,46,18,206,73,53,163,177,118,14,47,133,92,199,200,78,166,102,142,76,219,146,177,78,98,153,2,177,173,112,159,197,83,27 };
    byte_vec_t pk { 4,124,9,113,122,198,95,73,30,80,209,79,82,20,161,2,238,135,5,22,225,254,70,146,137,90,28,236,54,84,150,35,192,222,162,179,42,158,8,250,27,37,6,77,68,220,241,63,153,25,158,124,111,143,1,148,34,11,252,64,161,98,187,96,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 155 ") {
    byte_vec_t msg { 167,201,254,64 };
    byte_vec_t sig { 118,233,104,141,55,249,30,17,238,252,77,176,124,214,108,114,73,66,162,196,7,26,74,74,42,142,1,184,220,2,11,156,55,141,8,15,234,63,119,244,186,168,111,101,171,50,4,157,110,167,88,173,89,234,113,50,214,21,230,48,181,146,57,246 };
    byte_vec_t pk { 4,178,93,241,187,214,231,105,184,29,224,40,5,230,157,37,73,140,113,158,49,202,15,124,255,126,53,52,151,85,243,95,183,222,69,72,54,42,98,92,16,10,229,209,125,234,241,46,151,33,230,191,25,240,32,218,75,7,120,225,122,232,70,85,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 155 ") {
    byte_vec_t msg { 47,177,142,19 };
    byte_vec_t sig { 118,8,14,114,93,220,94,107,188,235,150,79,149,6,4,169,107,176,69,220,97,215,149,43,36,154,23,177,228,185,120,203,144,142,224,164,188,158,118,90,56,51,160,209,241,111,61,150,43,128,199,56,243,189,220,178,15,189,226,233,26,141,49,218 };
    byte_vec_t pk { 2,97,169,77,169,128,232,91,75,40,49,180,37,44,21,191,7,85,26,17,150,168,130,235,181,61,179,217,106,165,33,122,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 155 ") {
    byte_vec_t msg { 68,36,7,159 };
    byte_vec_t sig { 39,184,71,168,162,251,125,236,57,120,46,13,124,138,36,157,118,103,81,154,214,237,202,188,72,180,163,43,229,223,249,89,121,14,138,81,58,223,0,179,49,110,64,133,179,123,21,207,141,27,161,52,81,106,229,33,203,156,12,132,131,238,103,40 };
    byte_vec_t pk { 2,219,166,77,12,118,83,102,22,200,165,28,134,225,60,146,219,14,221,150,107,8,111,220,240,194,144,188,228,155,7,203,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 156 ") {
    byte_vec_t msg { 115,81,199,30 };
    byte_vec_t sig { 104,14,110,63,165,171,49,96,82,101,156,148,27,96,223,72,60,216,62,56,184,26,50,196,11,214,75,241,102,188,127,127,197,20,95,6,171,242,84,124,212,253,178,85,218,57,64,226,47,212,184,63,23,59,137,250,199,30,62,11,211,126,176,244 };
    byte_vec_t pk { 4,228,5,234,155,210,129,28,125,27,95,108,239,231,73,130,253,101,16,133,234,131,250,6,113,136,173,229,33,134,45,117,122,251,121,190,114,204,106,185,235,6,188,104,64,252,17,35,65,246,33,2,78,246,92,165,181,3,39,179,168,99,221,224,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 156 ") {
    byte_vec_t msg { 132,42,152,253 };
    byte_vec_t sig { 186,66,89,179,38,173,161,56,95,178,65,188,92,230,142,64,119,124,128,238,83,251,188,184,209,126,128,170,104,197,128,7,44,167,63,114,81,233,164,145,248,125,210,131,34,54,107,118,131,23,132,13,48,14,111,195,5,30,153,163,38,104,33,184 };
    byte_vec_t pk { 4,223,171,184,232,244,57,217,80,201,135,132,184,56,6,171,215,151,38,23,154,161,164,187,171,205,93,55,234,161,187,11,102,11,124,152,136,205,20,21,250,52,79,2,31,54,130,176,9,43,248,217,164,45,203,244,17,230,118,162,70,108,160,135,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 156 ") {
    byte_vec_t msg { 81,151,119,118 };
    byte_vec_t sig { 158,203,184,139,137,188,175,155,79,219,238,151,127,76,106,13,57,100,233,210,165,127,125,137,133,187,15,97,68,249,125,250,18,203,186,84,155,23,172,69,126,167,50,63,159,77,0,242,111,253,221,1,47,41,163,228,151,143,191,5,34,134,7,194 };
    byte_vec_t pk { 3,253,61,86,194,61,72,106,198,206,80,169,4,107,200,33,102,179,147,217,79,28,130,5,142,154,7,190,213,217,121,107,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 156 ") {
    byte_vec_t msg { 21,100,133,61 };
    byte_vec_t sig { 216,117,46,29,207,118,99,228,46,41,107,181,141,15,134,168,188,93,129,75,145,162,90,13,15,255,60,107,241,180,102,156,238,186,237,178,114,188,88,148,124,88,67,189,105,63,175,57,164,199,151,142,212,99,35,164,192,255,41,41,144,88,83,63 };
    byte_vec_t pk { 2,104,146,207,133,251,221,250,80,49,93,194,250,161,199,164,81,173,153,173,110,239,19,162,22,70,75,22,0,39,244,176,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 157 ") {
    byte_vec_t msg { 102,100,185,187 };
    byte_vec_t sig { 222,40,40,120,163,24,65,132,72,138,29,89,145,188,72,109,82,227,243,64,160,206,90,171,191,18,233,101,46,157,99,70,120,46,32,99,7,157,119,90,171,49,11,59,246,12,46,129,94,129,38,109,111,73,184,26,227,208,72,131,54,249,25,162 };
    byte_vec_t pk { 4,133,250,60,91,61,14,100,19,186,95,159,176,152,251,57,105,75,158,120,13,29,224,116,84,147,179,58,31,241,212,239,99,75,250,79,73,255,34,184,1,109,38,157,188,156,91,54,42,98,169,137,94,169,126,185,51,33,215,57,190,149,69,63,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 157 ") {
    byte_vec_t msg { 74,103,197,1 };
    byte_vec_t sig { 30,65,190,175,122,196,123,234,231,78,4,145,108,87,8,109,247,105,99,208,46,173,34,7,167,119,161,190,133,211,124,158,243,97,111,28,199,53,6,133,136,116,158,142,250,199,205,1,60,58,239,3,76,140,153,185,170,133,125,88,181,242,102,14 };
    byte_vec_t pk { 4,196,120,158,80,175,230,229,13,138,242,177,153,2,10,8,147,242,99,144,56,183,205,16,85,10,138,131,218,236,84,214,198,146,62,172,57,14,212,26,211,194,42,159,25,251,12,129,60,251,6,229,99,206,210,29,205,210,127,238,177,248,154,92,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 157 ") {
    byte_vec_t msg { 177,148,163,157 };
    byte_vec_t sig { 158,40,82,73,62,167,31,181,99,87,8,50,29,211,254,245,139,107,153,126,218,62,43,227,188,51,130,184,19,75,7,225,42,47,130,233,115,202,131,48,104,13,83,20,179,39,211,141,162,232,45,216,152,89,199,252,173,73,227,205,187,215,119,242 };
    byte_vec_t pk { 2,72,206,95,236,121,112,71,58,108,253,105,255,31,67,184,122,161,74,22,201,90,153,102,38,16,53,18,9,43,126,89,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 157 ") {
    byte_vec_t msg { 89,137,38,1 };
    byte_vec_t sig { 47,151,177,47,227,254,51,182,28,218,73,74,225,139,163,85,249,109,132,168,10,113,87,130,43,211,139,49,187,63,242,253,137,227,55,0,140,163,187,173,233,82,30,57,124,205,35,90,94,157,63,55,138,2,232,130,221,113,122,225,88,62,244,254 };
    byte_vec_t pk { 3,25,157,185,196,169,155,45,206,205,242,73,54,64,147,172,33,41,248,253,108,64,220,241,46,133,140,90,115,84,37,112,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 158 ") {
    byte_vec_t msg { 131,203,177,73 };
    byte_vec_t sig { 193,223,21,208,55,235,115,103,71,63,251,93,21,84,15,161,142,116,97,25,96,202,195,151,186,21,165,112,181,147,209,181,181,33,69,254,195,73,106,113,187,126,246,227,96,17,110,163,248,21,62,160,43,133,168,148,137,253,151,155,4,222,8,109 };
    byte_vec_t pk { 4,11,130,240,111,186,8,175,171,29,54,26,128,243,226,209,45,131,251,42,156,43,134,25,42,138,37,13,235,22,177,78,18,150,85,179,250,69,170,105,44,39,56,173,144,183,228,204,3,2,157,241,51,158,183,129,70,219,77,94,184,112,254,137,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 158 ") {
    byte_vec_t msg { 27,98,233,28 };
    byte_vec_t sig { 129,96,109,101,54,147,155,135,116,224,243,131,127,247,160,160,14,242,95,177,139,28,133,88,102,12,244,171,242,117,77,147,4,23,212,88,94,210,56,48,247,207,100,101,134,43,136,185,66,220,252,87,253,230,195,183,251,70,139,6,165,252,69,36 };
    byte_vec_t pk { 4,73,25,169,116,112,194,184,21,216,63,251,229,245,199,72,93,124,161,130,158,94,253,130,26,117,41,34,152,82,201,238,254,61,195,107,60,41,236,20,127,14,12,241,149,200,243,85,106,55,232,124,27,212,138,163,32,14,22,43,111,139,181,138,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 158 ") {
    byte_vec_t msg { 39,106,178,122 };
    byte_vec_t sig { 4,106,194,72,221,204,230,55,233,188,7,111,218,153,29,15,2,253,45,213,150,83,81,222,27,139,191,145,221,212,77,47,28,251,43,172,135,205,49,144,116,219,200,69,121,28,205,38,21,187,219,140,53,102,72,91,38,91,97,38,54,59,74,197 };
    byte_vec_t pk { 3,4,65,78,30,153,142,175,110,242,93,185,141,247,25,136,169,66,168,106,176,245,201,25,135,70,236,31,173,144,51,57,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 158 ") {
    byte_vec_t msg { 71,195,150,151 };
    byte_vec_t sig { 204,144,98,247,182,221,31,41,184,171,99,131,194,115,146,55,49,193,206,186,247,143,151,118,208,126,199,8,28,28,242,100,9,38,136,76,123,245,107,196,27,195,180,56,197,34,242,16,186,11,164,145,15,183,59,99,112,172,198,72,101,201,91,184 };
    byte_vec_t pk { 2,155,5,123,128,239,225,90,216,157,61,8,200,171,156,193,234,77,204,233,133,145,65,68,160,130,20,87,180,231,51,70,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 159 ") {
    byte_vec_t msg { 149,208,142,23 };
    byte_vec_t sig { 86,135,120,183,37,225,218,252,112,157,42,36,88,237,162,98,250,195,239,67,212,219,95,69,248,12,255,62,105,197,225,99,101,197,161,204,29,56,197,158,230,46,32,77,184,151,164,108,187,173,66,156,148,19,128,230,62,77,18,47,223,0,139,128 };
    byte_vec_t pk { 4,241,2,39,127,67,65,184,155,65,6,191,206,139,2,167,183,167,151,65,168,217,2,50,180,8,111,234,199,65,157,64,25,107,166,171,120,166,109,141,59,193,194,242,9,239,221,189,120,79,43,239,208,75,39,156,56,139,93,239,76,181,57,8,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 159 ") {
    byte_vec_t msg { 253,237,95,17 };
    byte_vec_t sig { 42,93,117,109,198,44,56,27,218,201,219,253,45,22,121,0,8,157,126,239,86,93,227,194,226,22,128,251,46,54,43,4,56,43,150,14,87,238,249,16,29,242,65,18,195,17,53,159,250,125,208,80,108,64,238,42,149,110,110,252,40,53,235,110 };
    byte_vec_t pk { 4,229,208,82,141,200,232,202,151,133,16,112,84,6,91,52,13,33,236,181,30,57,9,118,151,110,228,27,197,157,231,9,154,124,183,241,129,209,11,254,58,48,12,115,217,234,241,224,119,88,164,13,82,17,222,251,150,146,23,156,117,95,132,163,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 159 ") {
    byte_vec_t msg { 120,36,152,138 };
    byte_vec_t sig { 1,78,199,187,19,50,51,255,62,105,85,178,223,220,245,250,73,206,93,214,139,88,225,141,40,27,227,117,81,151,206,33,201,39,179,11,104,115,57,150,132,90,162,85,38,109,178,22,7,35,89,120,37,253,34,11,178,18,192,117,94,165,151,4 };
    byte_vec_t pk { 2,66,187,222,138,75,137,237,190,97,239,103,28,208,188,130,238,245,37,30,101,68,201,30,127,223,100,250,27,151,154,38,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 159 ") {
    byte_vec_t msg { 157,232,51,154 };
    byte_vec_t sig { 55,217,255,14,98,27,12,69,75,231,251,193,155,20,218,156,110,222,244,174,252,52,9,91,166,174,60,198,250,42,163,0,154,165,218,163,116,254,15,206,96,174,158,95,223,18,17,25,187,142,169,130,119,101,247,189,232,38,205,156,154,124,97,175 };
    byte_vec_t pk { 3,86,203,196,241,24,213,59,70,40,7,28,14,241,94,33,151,224,193,77,99,1,163,181,15,227,88,163,57,34,233,95,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 160 ") {
    byte_vec_t msg { 157,30,239,130 };
    byte_vec_t sig { 253,211,54,254,241,15,119,200,240,76,33,87,92,36,1,55,18,224,73,241,172,156,172,137,24,191,222,242,75,97,56,0,231,195,128,36,69,12,163,12,224,137,205,104,146,33,120,22,28,16,81,159,11,223,179,77,180,239,9,143,21,62,88,84 };
    byte_vec_t pk { 4,179,216,140,6,26,185,67,173,34,223,97,136,241,63,89,85,26,81,68,246,152,141,177,190,31,56,190,127,246,206,6,12,85,41,176,145,216,4,59,85,242,33,176,155,224,240,50,78,161,186,82,44,75,221,188,127,145,83,26,31,161,179,168,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 160 ") {
    byte_vec_t msg { 69,19,130,188 };
    byte_vec_t sig { 253,145,255,6,64,90,0,61,184,182,156,54,215,236,232,97,125,24,253,49,97,97,10,133,49,196,106,221,246,231,148,24,252,99,92,252,186,138,171,1,157,97,224,248,234,22,49,170,134,38,25,27,209,94,10,75,104,158,56,220,176,229,169,136 };
    byte_vec_t pk { 4,152,22,230,128,203,182,138,149,229,153,52,217,178,208,136,115,198,237,74,15,34,1,2,29,77,51,155,32,108,240,204,54,95,85,155,45,82,76,19,182,61,138,64,253,188,195,119,226,198,22,38,215,45,194,4,122,36,9,54,15,179,104,108,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 160 ") {
    byte_vec_t msg { 164,117,56,230 };
    byte_vec_t sig { 212,132,87,156,133,173,199,178,88,139,87,164,117,236,143,201,60,170,104,223,169,168,202,255,47,150,187,9,100,193,8,176,113,26,33,0,106,39,103,189,38,168,192,60,64,17,29,153,45,157,145,121,155,118,61,51,60,231,123,100,59,57,146,219 };
    byte_vec_t pk { 3,231,85,65,53,74,53,126,244,46,147,48,131,144,44,33,195,221,205,155,160,211,234,244,178,188,225,235,253,69,254,193,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 160 ") {
    byte_vec_t msg { 58,132,24,160 };
    byte_vec_t sig { 19,61,9,247,155,244,172,95,34,22,143,203,54,135,190,183,105,48,113,61,165,82,49,207,68,72,89,96,101,109,160,115,115,19,8,26,176,43,228,119,84,126,75,250,244,22,130,70,94,129,119,2,152,200,223,209,48,144,78,126,12,118,17,181 };
    byte_vec_t pk { 2,36,220,2,124,89,246,82,188,232,228,228,142,40,209,202,63,26,212,237,14,65,53,9,17,202,117,255,57,60,10,89,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 161 ") {
    byte_vec_t msg { 80,98,231,24 };
    byte_vec_t sig { 44,135,46,84,210,160,22,104,93,244,124,53,80,68,48,47,205,180,46,25,170,165,57,60,128,193,30,0,28,164,111,60,94,28,105,243,72,253,79,55,0,238,7,140,182,10,250,189,136,1,104,214,122,52,246,140,138,66,207,216,5,167,194,117 };
    byte_vec_t pk { 4,59,15,58,249,21,174,20,170,211,164,171,185,44,132,73,165,70,136,75,139,62,204,97,205,200,20,65,20,95,118,165,43,58,84,21,76,55,80,181,254,192,195,251,40,114,76,174,47,132,21,116,147,193,217,157,224,136,82,213,55,106,169,195,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 161 ") {
    byte_vec_t msg { 183,208,24,251 };
    byte_vec_t sig { 41,188,204,120,50,4,238,196,131,137,151,86,111,21,19,184,34,231,12,165,252,56,169,30,248,213,80,207,121,189,107,40,211,133,19,96,219,112,93,108,137,233,37,227,192,90,191,39,157,121,130,81,249,149,156,66,174,54,238,110,237,254,141,113 };
    byte_vec_t pk { 4,112,80,10,161,6,58,160,86,58,236,78,96,253,226,152,39,58,65,230,232,254,45,69,23,227,118,242,147,131,82,108,250,133,181,140,12,46,161,117,93,118,239,52,238,126,226,250,7,240,205,209,75,246,25,187,144,47,137,85,145,165,29,71,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 161 ") {
    byte_vec_t msg { 238,139,127,69 };
    byte_vec_t sig { 182,78,181,74,162,196,232,181,20,254,165,150,220,32,99,177,217,216,85,176,31,200,129,191,45,22,60,93,194,152,33,228,180,68,104,97,30,188,1,144,198,209,58,117,160,73,250,98,110,24,85,237,82,179,35,222,152,234,123,236,232,148,214,13 };
    byte_vec_t pk { 2,31,202,230,61,138,178,67,17,87,29,48,123,75,188,208,116,245,33,147,255,194,2,242,159,115,149,53,30,179,112,155,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 161 ") {
    byte_vec_t msg { 148,89,184,119 };
    byte_vec_t sig { 210,206,112,108,119,149,109,165,5,84,152,17,98,210,249,199,194,51,171,109,175,26,44,23,235,167,157,67,112,210,203,14,215,225,141,27,32,0,206,46,127,15,133,135,188,126,183,214,184,95,65,125,235,108,27,79,70,11,223,247,63,23,43,19 };
    byte_vec_t pk { 2,207,25,51,161,5,223,136,229,171,102,95,214,196,240,80,122,203,60,72,68,100,18,47,172,88,90,177,117,106,27,197,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 162 ") {
    byte_vec_t msg { 1,129,85,49 };
    byte_vec_t sig { 130,32,78,134,23,240,179,101,130,24,57,34,113,203,241,36,118,254,136,155,153,22,2,176,84,203,79,65,125,16,80,147,33,143,240,70,174,246,152,45,94,219,103,80,89,221,122,91,182,128,20,161,157,154,242,2,135,132,139,125,150,193,186,105 };
    byte_vec_t pk { 4,32,207,177,89,123,1,13,202,170,95,228,6,249,187,204,153,100,216,213,31,198,145,43,136,126,13,133,46,76,215,54,52,63,43,21,182,178,51,131,88,54,82,194,100,111,49,167,218,176,160,94,18,57,154,128,177,96,61,107,131,180,18,20,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 162 ") {
    byte_vec_t msg { 153,180,105,130 };
    byte_vec_t sig { 196,170,183,194,9,35,212,185,52,140,76,49,45,253,148,44,170,76,195,73,116,127,111,170,55,137,189,126,239,47,99,26,55,225,202,24,75,230,91,136,85,116,28,198,40,163,181,84,254,33,12,82,21,159,217,47,127,79,34,56,98,216,123,112 };
    byte_vec_t pk { 4,31,21,147,193,177,119,187,246,130,65,70,178,201,74,161,16,41,56,75,128,38,18,29,32,33,4,78,23,187,227,234,59,228,91,226,33,114,223,15,159,200,70,62,32,19,150,237,107,195,98,235,197,159,232,161,187,145,212,222,233,17,243,217,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 162 ") {
    byte_vec_t msg { 208,12,115,71 };
    byte_vec_t sig { 152,0,13,213,178,127,166,217,72,203,7,103,247,203,253,193,182,163,207,232,185,76,58,223,217,144,182,230,143,177,216,124,35,27,85,114,48,160,103,240,84,151,214,34,242,95,240,62,182,222,157,181,28,97,146,20,43,247,115,205,149,217,64,90 };
    byte_vec_t pk { 2,243,64,78,122,132,194,98,235,154,184,134,42,89,188,213,123,147,13,182,28,156,102,66,6,207,9,76,9,32,3,63,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 162 ") {
    byte_vec_t msg { 140,139,179,134 };
    byte_vec_t sig { 168,55,115,101,141,43,71,33,58,219,200,25,188,5,28,206,93,161,216,253,20,139,156,64,126,24,159,98,222,150,212,33,62,28,36,251,62,233,149,105,123,153,184,84,150,82,144,62,191,232,32,73,182,161,211,62,25,115,73,161,254,235,205,124 };
    byte_vec_t pk { 3,129,140,88,169,93,109,161,60,172,205,83,35,224,17,121,72,11,173,114,151,192,108,171,13,48,235,169,247,223,127,230,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 163 ") {
    byte_vec_t msg { 41,62,85,84 };
    byte_vec_t sig { 54,215,65,21,132,94,37,187,14,5,109,141,227,79,112,19,242,168,22,129,114,96,226,153,203,188,14,44,59,8,88,32,167,38,242,150,22,103,217,131,34,50,204,232,118,160,155,7,209,224,34,250,118,44,49,82,218,245,233,214,121,124,141,196 };
    byte_vec_t pk { 4,152,119,55,160,15,147,230,252,136,210,187,164,137,175,188,139,226,26,12,244,144,213,63,116,90,87,211,141,93,80,210,74,33,115,222,147,205,1,146,202,203,28,56,19,196,75,73,91,199,128,182,74,15,198,181,130,135,17,208,207,213,116,208,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 163 ") {
    byte_vec_t msg { 45,75,110,214 };
    byte_vec_t sig { 178,103,93,253,98,37,117,180,6,236,40,23,122,93,162,178,183,117,225,116,237,135,191,221,102,32,220,68,247,251,80,200,95,154,70,204,232,30,123,57,123,134,224,166,43,184,151,22,132,77,64,220,234,16,165,230,14,12,199,128,249,69,19,28 };
    byte_vec_t pk { 4,29,145,125,9,186,68,73,196,103,9,88,230,250,172,16,219,216,89,193,184,208,98,243,77,151,170,247,55,80,236,25,121,121,196,45,99,68,159,108,19,82,25,182,149,78,167,181,243,193,78,77,193,55,145,77,125,71,75,182,99,139,18,155,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 163 ") {
    byte_vec_t msg { 134,117,58,142 };
    byte_vec_t sig { 172,70,85,108,142,24,129,205,86,249,99,77,143,181,130,54,237,248,15,250,243,224,142,45,149,154,244,234,112,99,133,140,148,196,220,251,132,238,27,237,43,227,110,61,176,19,2,167,132,235,218,202,121,6,245,11,227,63,238,48,142,247,10,30 };
    byte_vec_t pk { 3,178,124,93,25,11,103,74,117,10,217,103,233,226,234,253,151,107,62,89,173,101,243,34,62,75,215,76,187,154,237,184,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 163 ") {
    byte_vec_t msg { 182,180,187,150 };
    byte_vec_t sig { 212,7,207,167,228,57,222,235,176,228,225,157,51,146,197,115,93,65,119,198,3,133,200,102,186,20,36,33,140,55,150,6,210,122,43,223,231,144,58,16,129,150,112,208,49,84,153,97,122,43,191,146,129,48,53,114,49,142,86,232,112,174,24,11 };
    byte_vec_t pk { 3,74,101,147,35,180,32,73,92,214,61,240,183,64,205,145,9,55,124,186,0,220,99,116,31,163,223,113,81,152,248,194,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 164 ") {
    byte_vec_t msg { 1,140,70,242 };
    byte_vec_t sig { 80,97,210,71,214,192,167,20,148,62,170,47,206,213,144,10,24,99,14,174,99,173,143,223,225,123,175,208,137,53,189,101,162,118,36,244,4,176,32,105,232,187,96,218,135,6,99,69,252,188,235,0,25,231,92,217,220,209,51,201,6,114,160,118 };
    byte_vec_t pk { 4,38,35,68,214,149,83,120,252,195,188,102,11,41,81,83,155,226,0,153,199,235,216,44,186,136,251,237,35,30,1,133,101,105,149,246,180,42,162,251,97,23,173,66,127,1,72,113,69,78,17,134,127,5,63,30,202,217,210,17,39,234,63,77,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 164 ") {
    byte_vec_t msg { 246,62,170,84 };
    byte_vec_t sig { 233,88,186,50,16,221,85,110,246,66,204,236,24,9,58,242,205,97,216,78,168,33,250,150,72,23,155,46,238,9,24,173,6,226,102,44,54,78,157,177,46,251,23,124,47,2,150,85,180,162,184,237,254,3,230,28,235,139,141,239,52,52,178,169 };
    byte_vec_t pk { 4,203,232,54,150,213,196,27,41,5,121,154,222,170,201,96,51,10,116,207,162,175,64,58,68,160,60,108,172,104,27,208,34,43,185,194,213,9,80,209,184,173,5,59,253,254,155,173,71,28,7,129,138,188,89,9,148,26,153,93,45,96,172,55,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 164 ") {
    byte_vec_t msg { 196,115,212,62 };
    byte_vec_t sig { 13,114,119,57,110,180,150,198,110,40,215,255,217,119,47,249,4,141,112,230,80,108,184,132,25,89,213,159,75,243,179,55,98,58,124,93,95,170,250,81,252,105,55,140,204,0,185,159,226,199,77,34,64,148,188,12,14,200,236,224,218,194,143,19 };
    byte_vec_t pk { 3,207,191,55,57,222,92,94,141,163,183,161,223,74,26,80,176,20,232,232,244,119,210,95,214,62,13,5,203,163,76,1,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 164 ") {
    byte_vec_t msg { 80,98,149,241 };
    byte_vec_t sig { 248,191,109,207,91,236,47,227,60,176,166,103,51,235,178,115,186,8,9,80,189,104,187,157,128,144,36,17,54,228,58,105,243,252,159,55,81,62,187,137,116,109,200,254,237,184,79,126,177,253,183,99,202,107,144,152,15,148,186,206,76,36,150,6 };
    byte_vec_t pk { 3,158,188,220,222,64,213,110,254,229,197,180,45,206,1,141,34,165,250,79,37,107,40,155,216,163,108,182,80,45,89,179,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 165 ") {
    byte_vec_t msg { 95,234,2,221 };
    byte_vec_t sig { 50,127,66,47,110,161,211,222,33,189,15,149,47,189,196,126,171,209,160,136,236,65,160,185,90,89,207,83,139,166,253,79,0,193,137,0,9,214,169,189,41,89,8,23,187,248,205,180,174,215,101,163,160,234,107,50,215,194,76,4,199,128,118,90 };
    byte_vec_t pk { 4,111,3,215,138,156,123,79,135,65,136,106,244,97,73,169,145,153,229,170,200,93,40,108,239,22,99,184,10,100,158,57,54,157,129,245,107,100,85,171,159,198,133,166,60,33,161,74,95,51,30,32,241,136,48,195,36,243,58,69,59,88,35,248,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 165 ") {
    byte_vec_t msg { 161,65,67,99 };
    byte_vec_t sig { 235,86,61,215,247,222,214,109,48,134,54,24,187,211,51,173,121,13,165,95,204,196,194,170,27,128,154,42,0,104,215,13,251,253,95,123,148,213,199,115,93,104,73,122,81,76,213,24,145,242,159,185,69,123,82,11,19,61,131,102,9,188,192,231 };
    byte_vec_t pk { 4,230,116,223,44,216,215,90,26,214,51,234,202,124,130,239,113,252,85,156,169,137,11,128,240,217,122,68,58,58,119,183,81,133,19,87,191,48,53,210,118,135,211,130,198,132,125,230,130,29,65,37,75,221,150,165,159,184,94,234,123,93,130,121,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 165 ") {
    byte_vec_t msg { 9,1,109,205 };
    byte_vec_t sig { 37,28,46,113,236,19,229,81,165,74,189,42,44,150,1,165,146,245,55,13,48,123,171,228,199,113,182,59,236,33,69,27,36,3,72,119,169,30,87,249,159,203,108,136,250,186,103,21,245,108,146,213,252,16,50,200,195,235,210,1,84,100,134,68 };
    byte_vec_t pk { 2,24,247,214,207,90,206,25,77,11,221,40,211,214,71,95,0,94,130,240,99,109,3,60,144,57,169,181,76,80,146,87,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 165 ") {
    byte_vec_t msg { 158,135,138,6 };
    byte_vec_t sig { 240,90,131,152,203,21,26,54,1,131,142,142,30,89,94,164,24,0,164,155,223,78,84,55,70,78,142,6,127,248,236,163,178,63,196,67,164,26,230,244,123,247,195,78,133,2,161,163,9,56,184,17,69,38,223,237,131,153,67,145,38,113,92,131 };
    byte_vec_t pk { 2,151,146,3,20,83,6,169,85,6,103,213,142,153,190,122,234,3,176,48,4,115,19,171,188,53,154,94,2,199,19,207,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 166 ") {
    byte_vec_t msg { 48,112,98,116 };
    byte_vec_t sig { 248,44,69,221,8,200,109,112,30,196,229,111,64,82,14,71,105,203,174,251,212,82,204,42,27,201,65,74,143,1,57,91,13,139,166,60,250,67,226,113,101,225,123,206,30,152,204,0,11,122,70,252,193,145,149,1,17,252,157,53,208,242,21,199 };
    byte_vec_t pk { 4,126,246,25,82,29,77,234,221,27,24,39,140,198,87,147,94,208,140,167,226,17,152,77,156,150,230,55,39,254,254,223,91,223,139,220,3,153,251,42,254,225,95,71,243,178,179,251,1,247,86,34,103,247,210,230,217,119,228,80,149,136,1,174,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 166 ") {
    byte_vec_t msg { 107,232,114,234 };
    byte_vec_t sig { 183,133,226,37,120,153,244,56,223,111,91,136,124,70,227,251,140,207,228,116,61,48,102,50,96,49,131,46,178,38,44,190,210,48,182,170,137,123,132,43,226,244,159,25,45,113,142,210,247,158,185,75,234,53,79,135,155,71,186,245,160,113,200,148 };
    byte_vec_t pk { 4,99,152,217,110,9,20,178,172,16,220,138,32,247,103,167,15,209,179,216,227,26,45,31,129,246,211,137,170,222,51,149,103,114,23,106,59,248,139,202,113,59,29,56,148,190,61,127,157,51,107,154,120,75,162,255,28,244,109,131,126,205,253,176,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 166 ") {
    byte_vec_t msg { 205,14,148,156 };
    byte_vec_t sig { 8,117,47,145,210,76,90,251,163,252,179,201,166,215,160,227,62,45,141,100,66,0,104,244,112,27,232,155,12,22,124,240,179,108,169,161,48,132,51,69,236,106,59,196,60,162,246,1,100,210,176,204,104,197,83,236,48,107,22,188,0,21,73,146 };
    byte_vec_t pk { 2,165,114,228,59,250,182,107,11,153,166,220,138,162,194,253,52,246,172,65,251,253,121,71,251,8,44,80,165,210,12,119,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 166 ") {
    byte_vec_t msg { 253,169,187,28 };
    byte_vec_t sig { 19,198,137,243,124,55,108,44,120,100,199,55,10,172,48,196,156,52,105,79,4,29,4,243,188,68,224,41,187,156,5,212,63,62,184,94,158,36,121,140,152,255,73,41,3,232,24,95,233,212,132,122,37,215,93,41,83,23,28,115,190,199,121,243 };
    byte_vec_t pk { 3,189,64,202,28,100,121,214,86,82,136,187,32,79,0,25,182,193,248,116,153,7,8,156,159,22,142,90,72,39,252,126,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 167 ") {
    byte_vec_t msg { 146,117,110,200 };
    byte_vec_t sig { 185,84,117,110,58,74,217,247,177,24,255,113,201,207,66,53,84,88,253,152,236,43,99,123,223,113,80,4,0,36,188,176,75,99,23,189,210,140,149,36,179,225,113,83,200,20,230,105,184,248,61,215,59,52,159,159,203,127,243,41,81,31,120,141 };
    byte_vec_t pk { 4,88,191,9,192,92,154,211,162,170,2,226,175,24,28,115,62,223,122,220,58,29,88,183,61,2,11,68,3,97,61,232,247,223,246,55,131,3,140,190,104,22,164,185,76,168,82,90,10,205,113,212,139,80,217,89,4,155,105,60,1,2,242,13,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 167 ") {
    byte_vec_t msg { 55,251,84,223 };
    byte_vec_t sig { 29,128,123,120,226,109,125,39,233,126,69,11,127,242,199,227,27,108,250,118,247,86,170,149,231,179,32,170,232,45,243,168,7,197,58,110,112,41,51,91,38,221,163,35,217,115,28,77,188,150,226,152,75,235,118,29,46,149,60,174,34,80,90,249 };
    byte_vec_t pk { 4,226,44,136,31,56,93,249,170,186,30,120,255,79,18,128,83,6,188,166,154,74,164,202,70,177,252,90,35,58,85,31,224,208,97,0,29,87,117,51,170,175,62,203,70,74,180,147,121,107,39,74,232,151,62,136,61,106,143,164,54,241,164,227,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 167 ") {
    byte_vec_t msg { 143,39,71,75 };
    byte_vec_t sig { 125,223,76,88,130,238,104,90,41,191,234,152,105,86,50,14,187,183,170,111,74,154,204,164,254,138,54,61,113,216,253,5,166,76,243,198,22,77,201,29,168,178,250,114,32,93,244,205,175,227,40,35,125,66,224,250,207,203,147,176,18,6,122,147 };
    byte_vec_t pk { 2,38,78,104,193,18,121,211,255,112,204,47,0,22,159,126,14,119,34,213,161,223,8,30,72,197,22,89,97,22,244,185,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 167 ") {
    byte_vec_t msg { 153,99,105,56 };
    byte_vec_t sig { 106,7,95,3,129,221,40,179,197,160,62,101,103,162,28,51,93,189,119,241,158,120,52,225,22,165,233,108,191,131,249,206,48,64,100,8,231,85,126,25,27,156,205,43,111,220,184,70,147,141,45,64,79,189,252,0,99,42,224,255,86,149,184,157 };
    byte_vec_t pk { 3,86,8,162,186,77,136,0,65,8,147,100,166,214,248,114,208,204,241,226,60,20,75,194,38,125,25,77,12,161,48,10,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 168 ") {
    byte_vec_t msg { 155,141,254,23 };
    byte_vec_t sig { 41,69,48,31,93,204,179,32,113,54,61,27,105,44,233,156,82,17,57,140,171,73,123,202,101,153,20,251,99,18,205,72,235,208,239,24,167,85,6,53,191,35,29,22,86,82,129,14,54,246,248,5,195,21,59,108,126,158,136,138,20,126,119,138 };
    byte_vec_t pk { 4,181,72,233,191,254,52,142,99,37,233,132,45,172,202,247,182,181,174,189,105,25,123,78,248,217,161,184,238,141,195,52,148,147,63,65,50,238,191,189,88,17,150,44,98,200,2,102,54,159,99,133,246,140,183,207,9,194,13,8,225,112,39,143,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 168 ") {
    byte_vec_t msg { 246,19,126,27 };
    byte_vec_t sig { 79,34,239,79,31,20,252,208,222,91,18,80,66,19,134,185,148,115,57,99,131,95,139,6,228,231,39,161,62,109,248,114,14,154,188,126,142,102,70,63,239,101,180,121,147,9,79,1,194,3,213,234,242,22,199,151,68,50,202,149,3,85,223,225 };
    byte_vec_t pk { 4,86,205,105,127,235,117,47,133,131,157,201,186,239,85,121,103,73,121,79,147,191,47,66,37,32,113,168,24,19,130,211,139,67,34,130,25,30,78,62,90,12,239,75,45,209,73,100,16,199,33,52,187,121,225,137,69,17,38,32,80,14,218,58,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 168 ") {
    byte_vec_t msg { 227,201,121,128 };
    byte_vec_t sig { 55,2,191,112,129,13,249,82,217,154,250,213,129,56,222,123,125,207,107,45,212,56,140,246,94,11,31,208,184,76,27,72,251,142,5,7,84,36,66,8,19,183,250,144,181,115,75,248,55,224,212,99,240,51,122,179,14,119,80,43,2,143,86,101 };
    byte_vec_t pk { 3,66,168,232,147,38,111,7,161,185,124,147,91,35,134,41,29,194,215,17,41,24,69,179,161,16,39,108,18,232,47,34,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 168 ") {
    byte_vec_t msg { 17,103,12,55 };
    byte_vec_t sig { 70,1,78,228,12,132,194,146,158,249,68,184,0,77,60,46,212,72,33,173,83,164,37,243,6,10,69,15,110,71,139,244,164,70,68,158,182,114,213,229,203,225,161,72,66,18,12,161,223,226,158,98,237,63,22,142,218,147,8,53,102,12,108,247 };
    byte_vec_t pk { 3,216,218,208,38,42,166,156,86,255,138,87,212,128,189,164,48,33,222,71,248,34,116,196,253,15,86,71,80,64,50,200,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 169 ") {
    byte_vec_t msg { 65,127,68,227 };
    byte_vec_t sig { 158,100,133,184,28,232,198,128,253,15,47,88,189,47,20,166,65,97,246,189,254,183,114,156,48,43,4,12,25,188,208,205,183,51,231,80,150,75,118,20,204,65,10,98,76,35,242,132,158,209,64,82,49,47,139,173,183,20,243,191,155,95,147,150 };
    byte_vec_t pk { 4,137,226,74,97,83,35,100,227,86,40,22,38,254,169,133,109,66,90,241,7,212,112,6,225,46,87,163,145,35,0,133,139,183,15,57,92,38,191,30,1,133,181,243,78,30,169,138,0,172,41,215,157,231,83,52,216,24,190,114,10,242,173,34,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 169 ") {
    byte_vec_t msg { 213,76,247,158 };
    byte_vec_t sig { 157,254,43,29,83,40,198,231,253,4,241,187,53,37,114,17,144,162,212,253,158,255,198,181,3,151,33,57,77,212,155,125,36,87,146,13,6,196,173,181,62,58,72,76,35,59,93,71,255,16,131,64,226,19,93,189,175,87,121,191,176,130,6,165 };
    byte_vec_t pk { 4,69,17,150,90,168,230,183,199,129,6,44,115,252,78,177,71,255,105,140,120,29,175,3,42,101,48,123,162,216,185,246,160,101,188,90,20,211,123,212,4,5,34,208,116,202,223,19,44,232,222,168,193,224,250,73,214,62,37,178,3,150,132,203,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 169 ") {
    byte_vec_t msg { 151,189,208,223 };
    byte_vec_t sig { 61,39,66,110,210,118,122,36,75,187,233,193,246,248,175,187,219,13,82,86,171,55,44,47,224,22,55,105,0,243,71,229,201,10,196,151,1,4,153,144,25,78,113,129,86,17,126,129,248,192,182,61,39,144,149,101,5,17,9,175,123,2,128,229 };
    byte_vec_t pk { 2,79,114,87,1,221,160,166,96,200,89,238,142,248,181,13,240,201,89,163,63,12,40,101,109,58,232,227,233,67,14,116,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 169 ") {
    byte_vec_t msg { 68,42,51,223 };
    byte_vec_t sig { 104,214,241,242,30,74,225,10,211,204,64,211,231,83,79,167,241,19,67,102,101,164,184,204,100,207,104,167,94,92,21,156,20,6,219,179,85,130,198,134,176,113,135,222,230,175,155,115,110,68,136,84,121,179,26,130,75,137,95,62,200,183,52,68 };
    byte_vec_t pk { 2,249,245,63,216,73,5,99,253,227,150,74,50,160,112,86,46,147,24,212,73,35,94,249,202,50,85,251,222,128,115,11,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 170 ") {
    byte_vec_t msg { 24,208,44,123 };
    byte_vec_t sig { 121,46,108,203,172,195,84,167,131,245,71,73,49,118,138,81,232,116,15,12,46,91,39,21,41,144,202,175,154,228,56,193,17,237,24,103,237,181,28,203,104,55,73,65,223,59,20,165,66,254,33,2,195,252,250,66,87,4,159,121,246,109,181,92 };
    byte_vec_t pk { 4,222,19,102,58,203,94,88,249,114,203,249,231,211,39,246,75,10,225,156,232,28,87,177,207,167,194,124,4,247,68,245,236,50,101,219,243,113,63,163,226,59,200,74,181,51,25,28,246,171,199,87,99,107,33,194,250,245,120,184,63,247,44,48,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 170 ") {
    byte_vec_t msg { 224,127,144,250 };
    byte_vec_t sig { 253,231,224,178,58,212,55,124,10,13,75,70,122,118,136,93,185,70,36,73,49,15,165,49,69,249,247,215,40,144,9,195,136,60,150,187,55,22,251,99,68,253,45,209,115,70,231,156,252,182,109,51,99,39,165,42,255,201,173,26,124,193,224,119 };
    byte_vec_t pk { 4,73,246,189,137,169,223,5,244,118,189,251,83,209,143,12,195,110,237,184,4,228,12,250,149,185,59,142,184,203,251,10,118,219,240,98,22,13,133,79,36,207,165,162,186,146,195,81,169,183,104,102,88,46,247,35,247,242,143,255,188,121,107,175,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 170 ") {
    byte_vec_t msg { 29,195,236,11 };
    byte_vec_t sig { 225,181,159,194,157,186,57,152,127,18,185,177,19,194,62,249,68,79,113,244,80,255,43,24,79,141,210,198,201,72,166,82,242,158,135,192,151,223,231,218,159,123,224,124,219,79,201,7,115,206,31,135,205,148,41,160,182,23,26,135,32,103,148,226 };
    byte_vec_t pk { 3,32,30,168,244,253,252,3,210,145,79,25,73,191,96,112,174,172,147,143,166,111,207,42,221,156,134,85,70,156,27,142,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 170 ") {
    byte_vec_t msg { 41,28,234,163 };
    byte_vec_t sig { 235,166,21,170,236,255,34,23,152,190,71,63,133,165,139,149,42,106,193,54,193,21,196,95,194,11,245,56,217,18,244,68,189,58,214,206,57,229,207,24,27,232,51,224,40,107,133,111,62,110,15,156,253,212,47,147,62,146,10,155,41,61,15,184 };
    byte_vec_t pk { 2,223,251,96,193,8,235,160,207,93,249,130,187,53,83,195,58,241,125,32,52,78,197,119,35,93,69,82,63,52,28,204,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 171 ") {
    byte_vec_t msg { 114,254,100,251 };
    byte_vec_t sig { 77,93,165,112,15,6,57,117,134,219,194,23,71,34,50,126,126,106,125,126,243,59,51,226,157,188,244,188,118,34,37,179,1,221,104,116,48,148,152,194,19,58,0,218,13,71,185,73,178,205,71,71,24,176,137,89,20,156,97,4,147,255,11,233 };
    byte_vec_t pk { 4,172,179,11,130,243,56,205,37,241,44,143,242,209,54,209,85,107,156,178,24,166,67,239,182,82,59,40,92,109,114,203,242,177,198,12,9,156,156,221,233,227,123,88,182,25,171,62,198,122,213,214,238,128,217,136,105,22,180,143,91,143,116,211,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 171 ") {
    byte_vec_t msg { 90,222,220,233 };
    byte_vec_t sig { 73,17,229,175,219,1,143,76,235,127,126,22,0,15,202,28,255,172,141,250,182,187,130,127,21,253,179,22,70,85,125,27,41,0,139,182,72,219,141,103,209,210,182,253,61,251,212,163,96,24,152,98,168,227,115,57,115,221,210,133,96,174,37,136 };
    byte_vec_t pk { 4,49,85,182,35,212,167,144,112,162,164,170,162,105,80,16,95,34,1,176,85,84,254,169,249,211,45,100,28,167,27,227,91,253,186,249,100,62,183,22,216,17,111,47,178,87,156,81,215,148,88,113,171,54,164,251,182,14,15,175,44,171,51,209,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 171 ") {
    byte_vec_t msg { 45,121,6,59 };
    byte_vec_t sig { 73,69,8,137,91,21,218,63,194,82,168,49,51,44,159,75,169,105,210,46,177,80,7,19,83,220,141,94,88,30,31,64,94,191,221,7,215,32,38,163,31,211,102,13,60,96,199,253,2,124,83,236,189,103,56,105,126,11,138,21,4,176,211,90 };
    byte_vec_t pk { 3,228,12,198,193,82,29,21,163,75,73,108,41,17,7,2,117,73,40,214,232,141,77,160,204,231,140,66,216,92,62,191,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 171 ") {
    byte_vec_t msg { 39,166,111,225 };
    byte_vec_t sig { 240,83,3,135,229,76,207,231,40,198,36,201,164,233,244,238,33,115,61,205,43,2,56,125,226,16,0,225,158,230,60,248,91,3,182,202,70,224,204,240,168,133,206,125,227,43,105,151,79,234,120,109,134,58,4,118,83,132,169,130,147,175,99,27 };
    byte_vec_t pk { 3,250,7,160,142,189,25,109,80,7,39,31,18,71,245,240,214,247,215,196,38,78,78,68,23,63,241,17,252,216,246,134,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 172 ") {
    byte_vec_t msg { 131,108,58,151 };
    byte_vec_t sig { 107,192,252,110,241,103,246,88,216,159,74,197,128,78,192,76,111,215,13,145,219,74,111,244,9,131,65,8,93,82,128,172,26,137,72,93,240,65,66,17,31,19,17,179,95,22,2,175,198,178,225,216,32,216,162,162,123,65,232,94,141,211,111,129 };
    byte_vec_t pk { 4,153,107,158,199,69,66,90,203,119,201,44,83,90,35,74,24,130,148,190,129,124,1,27,153,136,234,45,230,147,165,224,245,155,68,212,38,158,33,224,108,80,188,222,6,138,10,81,73,190,192,172,74,199,243,67,22,252,180,142,18,83,96,109,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 172 ") {
    byte_vec_t msg { 230,8,167,95 };
    byte_vec_t sig { 121,89,48,234,150,123,93,225,7,150,205,137,187,45,108,106,159,236,2,31,31,94,174,226,188,148,187,116,2,42,74,169,18,56,5,74,12,86,47,209,118,231,149,199,85,98,150,190,105,3,5,231,84,96,66,112,36,114,178,80,135,235,207,187 };
    byte_vec_t pk { 4,145,149,123,128,226,148,65,54,225,14,246,200,59,234,170,205,84,194,173,150,202,31,143,251,164,105,187,63,36,174,31,139,21,24,133,207,82,77,84,247,163,245,196,11,49,186,237,5,17,35,13,51,72,132,156,96,49,73,30,191,133,235,187,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 172 ") {
    byte_vec_t msg { 205,114,154,76 };
    byte_vec_t sig { 182,236,221,69,52,26,5,177,8,69,1,68,130,158,138,48,32,65,25,149,186,4,117,130,238,130,162,95,254,71,237,132,70,185,204,97,156,201,85,182,42,240,218,149,73,6,144,116,69,154,246,174,175,204,68,168,7,207,26,134,45,127,104,224 };
    byte_vec_t pk { 3,102,105,14,135,112,234,201,151,73,207,166,59,101,207,210,240,239,113,12,166,252,65,202,145,131,17,77,172,210,57,95,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 172 ") {
    byte_vec_t msg { 140,60,148,197 };
    byte_vec_t sig { 159,78,26,100,202,246,37,59,20,243,18,172,192,205,120,185,23,161,200,66,127,176,88,165,248,112,81,33,189,206,208,76,143,28,212,37,218,81,55,205,246,173,158,96,58,175,16,82,176,245,39,14,179,102,182,212,16,22,200,49,12,69,94,15 };
    byte_vec_t pk { 3,250,252,19,33,35,133,98,169,84,197,203,90,117,1,121,2,21,177,194,98,49,89,62,140,19,87,71,69,54,204,127,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 173 ") {
    byte_vec_t msg { 121,108,10,105 };
    byte_vec_t sig { 22,3,5,143,187,148,86,156,216,211,203,165,13,94,157,92,47,131,104,102,72,85,223,156,224,173,56,196,7,216,158,18,7,89,17,124,135,48,5,75,85,26,38,145,149,208,225,200,117,53,34,125,70,156,200,250,224,5,130,100,154,229,149,240 };
    byte_vec_t pk { 4,213,136,133,201,71,96,192,41,247,181,180,224,172,44,119,133,241,68,132,18,60,185,144,250,17,86,228,9,115,246,219,28,242,101,72,184,38,21,121,71,65,46,7,77,196,136,126,228,149,177,202,42,175,207,141,144,51,64,255,43,137,194,31,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 173 ") {
    byte_vec_t msg { 70,184,92,200 };
    byte_vec_t sig { 126,30,222,241,227,141,217,92,67,177,29,0,243,31,7,112,191,168,11,91,102,98,18,7,213,111,176,198,193,36,72,149,193,150,173,232,93,53,57,242,34,247,243,67,16,239,215,234,187,72,24,239,205,62,209,203,44,227,40,161,243,58,226,160 };
    byte_vec_t pk { 4,84,116,52,196,95,124,49,113,172,128,161,188,245,230,37,249,23,24,178,216,208,69,173,115,43,162,182,53,214,33,209,55,179,245,121,172,231,19,55,192,254,46,49,27,211,78,11,234,86,46,170,243,195,68,10,72,221,107,214,143,49,230,104,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 173 ") {
    byte_vec_t msg { 63,243,147,97 };
    byte_vec_t sig { 252,161,226,59,15,195,11,228,135,205,131,222,178,68,23,27,100,21,205,128,5,8,160,204,26,167,154,201,255,46,62,36,122,231,229,252,242,10,122,88,250,127,122,112,16,210,98,39,154,165,196,242,182,52,232,123,127,1,63,91,48,14,161,89 };
    byte_vec_t pk { 3,52,215,116,73,211,33,2,173,243,10,184,31,213,232,109,183,105,104,80,130,16,198,219,161,243,61,233,76,21,193,22,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 173 ") {
    byte_vec_t msg { 80,101,228,168 };
    byte_vec_t sig { 127,193,188,59,12,195,248,250,170,146,20,127,88,1,176,229,162,12,95,28,125,89,112,207,114,35,47,255,236,201,200,218,186,231,238,127,202,63,75,101,127,118,164,184,60,147,241,84,78,93,181,117,179,51,29,86,248,10,222,167,196,224,18,12 };
    byte_vec_t pk { 3,187,171,175,12,192,176,144,101,22,147,68,174,156,116,222,138,76,78,15,74,119,198,147,223,153,201,37,188,243,177,168,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 174 ") {
    byte_vec_t msg { 168,161,201,152 };
    byte_vec_t sig { 148,195,105,232,89,231,136,159,220,178,147,4,138,85,222,223,71,21,230,223,247,201,61,242,177,74,188,72,249,121,135,24,23,19,136,161,190,180,100,186,208,168,77,230,200,228,103,76,143,29,170,165,219,171,68,168,184,100,245,116,104,14,89,106 };
    byte_vec_t pk { 4,198,60,161,176,86,147,144,207,182,165,63,53,74,41,99,120,252,28,97,170,75,62,142,195,177,192,3,115,219,60,157,59,83,97,14,64,49,223,250,171,232,166,49,211,136,53,246,60,80,171,214,177,18,100,11,170,100,157,150,223,5,225,66,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 174 ") {
    byte_vec_t msg { 177,53,132,172 };
    byte_vec_t sig { 80,144,160,228,14,255,131,60,131,102,61,9,99,114,253,230,183,44,62,168,202,25,159,163,97,253,200,4,13,90,228,178,242,186,45,7,44,160,115,112,127,11,247,122,94,201,187,156,78,205,79,43,41,38,109,145,91,4,149,0,77,134,0,101 };
    byte_vec_t pk { 4,80,47,120,128,19,136,251,27,1,21,234,150,116,216,31,109,118,212,136,140,235,26,73,47,172,75,253,65,121,60,252,100,199,203,55,210,202,48,104,96,223,35,217,166,29,102,69,78,254,113,16,70,19,219,13,74,146,67,212,247,169,180,132,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 174 ") {
    byte_vec_t msg { 74,81,177,157 };
    byte_vec_t sig { 249,117,94,27,136,0,205,100,66,61,19,104,54,86,3,73,244,34,115,130,36,204,241,200,164,192,200,103,159,139,39,90,219,54,214,226,39,239,220,116,178,13,219,154,170,152,217,201,42,100,53,94,168,158,252,127,250,56,221,204,35,65,48,98 };
    byte_vec_t pk { 3,177,51,226,218,44,1,194,88,88,236,40,203,113,65,213,104,63,206,177,127,203,13,132,252,242,253,205,75,252,8,211,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 174 ") {
    byte_vec_t msg { 128,221,25,153 };
    byte_vec_t sig { 124,233,39,134,117,33,8,0,130,75,44,194,247,240,176,44,16,234,207,163,55,154,141,209,239,183,239,15,131,234,169,160,154,103,223,213,199,113,147,85,19,104,137,225,157,81,9,186,218,14,26,141,54,2,42,184,251,212,95,31,117,173,183,209 };
    byte_vec_t pk { 2,194,251,170,122,130,180,66,237,21,156,0,163,204,172,201,46,124,51,38,154,187,57,201,160,133,24,116,36,169,1,33,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 175 ") {
    byte_vec_t msg { 57,135,238,72 };
    byte_vec_t sig { 106,183,0,218,83,21,161,195,63,188,222,178,170,216,115,131,4,245,37,94,24,227,17,211,12,145,156,76,217,73,200,205,157,150,142,167,46,235,86,43,17,25,204,178,199,81,124,253,114,169,129,244,67,197,40,142,195,111,125,202,178,144,56,69 };
    byte_vec_t pk { 4,61,205,95,70,61,173,26,66,126,206,178,65,101,48,36,144,107,97,105,86,114,163,83,83,186,246,220,207,83,125,217,52,146,141,80,88,108,46,75,72,32,9,209,69,217,166,60,169,238,18,215,228,137,63,229,115,247,85,251,50,170,18,63,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 175 ") {
    byte_vec_t msg { 109,95,224,133 };
    byte_vec_t sig { 169,240,214,243,13,134,235,210,81,130,155,238,174,57,248,36,95,179,44,19,26,150,190,71,153,163,7,178,221,215,36,188,144,130,73,94,76,39,101,202,126,232,94,151,184,59,160,229,69,161,112,15,81,249,116,98,194,161,85,113,38,21,49,139 };
    byte_vec_t pk { 4,101,238,82,83,155,176,184,212,233,68,207,201,222,45,220,14,229,108,47,53,4,232,156,32,253,97,93,84,220,247,118,41,196,94,38,192,88,178,107,84,180,17,213,98,178,171,238,14,28,43,117,75,236,146,220,231,46,48,180,86,245,153,177,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 175 ") {
    byte_vec_t msg { 134,217,193,254 };
    byte_vec_t sig { 66,38,222,224,97,116,158,205,180,218,245,237,112,117,28,236,71,52,183,158,214,153,24,139,164,65,255,231,155,18,70,64,6,253,155,211,70,242,9,16,112,148,160,57,244,44,4,57,138,209,70,134,67,242,175,175,8,83,3,109,207,133,253,26 };
    byte_vec_t pk { 2,42,45,31,70,139,48,1,150,59,6,183,29,61,248,22,88,42,113,210,30,186,98,173,167,203,41,17,246,145,10,128,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 175 ") {
    byte_vec_t msg { 212,27,90,119 };
    byte_vec_t sig { 26,119,92,160,32,66,143,200,55,240,35,20,220,9,131,174,20,188,153,186,51,111,198,64,88,179,216,112,117,19,30,233,71,115,179,125,100,81,92,83,151,74,125,10,22,112,64,123,93,114,18,42,187,19,97,187,54,115,1,235,90,93,87,26 };
    byte_vec_t pk { 3,247,155,26,190,14,97,198,130,39,244,12,51,222,146,111,131,60,154,170,26,239,129,12,184,121,114,145,110,231,31,239,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 176 ") {
    byte_vec_t msg { 123,91,244,222 };
    byte_vec_t sig { 145,4,220,19,22,32,217,45,124,151,141,71,157,34,99,11,147,13,43,228,2,85,143,252,213,237,231,147,242,26,152,215,47,236,159,118,5,246,112,94,244,231,184,254,198,244,233,74,98,130,147,14,173,84,41,64,36,64,115,178,0,119,247,2 };
    byte_vec_t pk { 4,220,216,146,207,109,129,59,9,86,96,61,11,71,187,96,228,168,237,9,111,165,109,200,64,208,85,191,139,237,67,243,245,24,134,59,73,127,184,229,110,198,123,186,162,185,106,10,207,100,219,207,23,13,4,115,161,112,67,3,174,253,200,188,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 176 ") {
    byte_vec_t msg { 18,73,50,113 };
    byte_vec_t sig { 171,50,42,251,134,208,228,24,82,214,227,168,97,147,162,149,21,2,174,251,44,203,202,88,88,32,46,98,164,94,100,158,35,169,180,117,8,245,181,17,240,54,173,28,219,143,217,18,118,160,229,137,31,4,51,214,153,190,39,191,228,230,15,44 };
    byte_vec_t pk { 4,234,42,90,208,246,104,171,95,207,247,98,231,96,149,13,127,72,80,40,159,157,15,87,58,155,135,147,131,42,124,244,243,65,200,109,190,152,169,44,112,247,150,9,84,60,40,43,100,34,126,235,170,232,112,43,17,156,252,158,215,254,55,224,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 176 ") {
    byte_vec_t msg { 178,114,82,75 };
    byte_vec_t sig { 194,120,173,110,166,126,120,46,72,144,201,94,33,183,194,78,156,51,239,190,3,99,4,106,44,9,248,196,45,168,171,117,249,4,181,109,59,155,38,68,44,45,176,24,133,194,143,57,204,124,76,188,123,102,7,90,32,157,109,46,192,69,164,146 };
    byte_vec_t pk { 2,188,246,236,164,70,60,218,239,70,43,76,102,3,116,249,194,157,121,245,50,239,83,227,161,167,121,207,0,133,23,59,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 176 ") {
    byte_vec_t msg { 193,112,27,232 };
    byte_vec_t sig { 237,218,111,27,194,204,8,250,213,237,16,77,43,251,232,100,196,221,63,89,154,12,154,57,132,235,236,75,86,156,8,104,39,20,169,254,36,253,165,196,163,252,75,37,45,9,196,211,110,110,230,81,43,237,22,16,87,135,94,180,120,40,238,99 };
    byte_vec_t pk { 2,193,233,78,22,75,215,29,98,48,179,118,224,107,47,190,17,4,55,123,35,116,111,76,29,146,20,100,173,226,110,235,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 177 ") {
    byte_vec_t msg { 196,131,48,139 };
    byte_vec_t sig { 167,46,8,158,122,223,79,219,37,116,81,62,121,25,81,20,100,147,169,59,14,80,15,111,191,77,10,155,130,45,115,122,182,252,175,120,106,202,234,190,221,58,252,230,178,10,3,144,63,181,187,172,201,222,85,27,240,39,50,8,136,109,156,64 };
    byte_vec_t pk { 4,94,152,147,43,239,108,55,151,70,111,196,27,20,132,140,34,100,171,9,227,64,96,146,198,209,75,61,14,6,179,117,74,188,223,155,155,48,69,78,113,187,112,200,103,98,125,251,169,166,133,204,15,253,244,86,139,93,206,106,158,154,225,54,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 177 ") {
    byte_vec_t msg { 239,16,76,165 };
    byte_vec_t sig { 202,228,201,176,60,16,210,187,165,87,95,70,230,175,40,10,240,96,118,105,177,136,242,69,207,14,108,66,3,233,58,180,100,240,121,81,164,118,175,7,6,10,2,226,188,98,170,244,146,170,180,98,218,116,12,102,7,44,182,230,12,84,14,131 };
    byte_vec_t pk { 4,156,100,117,187,187,72,255,224,253,29,248,248,62,76,85,99,111,138,98,225,80,79,10,85,250,130,221,248,101,134,241,126,16,245,229,88,216,195,9,123,124,37,50,103,5,145,177,78,109,125,39,43,247,116,85,157,209,236,135,49,238,52,100,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 177 ") {
    byte_vec_t msg { 245,148,145,133 };
    byte_vec_t sig { 25,153,67,199,28,225,184,23,16,48,178,245,189,177,151,66,150,139,132,98,163,238,238,253,102,105,23,46,246,118,21,242,194,234,153,64,209,111,148,32,250,8,31,49,69,187,37,107,46,246,88,202,186,19,184,189,70,0,218,154,25,254,220,64 };
    byte_vec_t pk { 2,2,129,95,153,15,206,254,124,27,58,48,61,82,166,139,102,98,172,216,122,176,10,110,201,124,89,207,85,41,190,61,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 177 ") {
    byte_vec_t msg { 252,243,216,40 };
    byte_vec_t sig { 224,16,117,73,104,27,173,16,43,100,53,96,102,111,133,169,222,75,17,168,152,156,112,45,175,109,207,1,201,157,245,200,245,77,169,99,205,161,246,225,113,53,82,75,72,237,211,43,51,241,136,95,164,14,171,97,168,3,103,65,9,31,63,151 };
    byte_vec_t pk { 3,149,170,238,62,238,162,94,208,84,72,5,238,137,30,60,82,193,233,22,128,150,180,206,155,244,163,130,82,197,222,90,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 178 ") {
    byte_vec_t msg { 248,204,196,96 };
    byte_vec_t sig { 76,158,236,227,201,104,112,150,98,144,243,114,221,251,59,169,129,116,191,211,162,227,241,106,161,239,34,118,71,31,155,61,59,105,146,121,195,187,65,48,143,136,248,150,128,150,214,250,147,206,235,245,120,224,64,181,149,160,14,175,50,181,176,49 };
    byte_vec_t pk { 4,3,151,224,18,114,55,254,138,37,193,160,58,247,63,212,183,208,139,24,235,51,35,212,144,106,218,152,248,67,92,141,119,97,111,213,53,11,109,254,13,163,143,221,24,244,207,214,196,189,165,4,12,218,227,139,128,122,255,121,232,187,241,79,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 178 ") {
    byte_vec_t msg { 187,16,162,54 };
    byte_vec_t sig { 119,134,207,107,112,120,9,43,56,203,69,241,90,167,141,154,116,137,63,126,178,157,61,119,208,43,187,198,203,145,70,172,252,19,251,211,178,47,83,250,18,95,106,166,171,53,143,15,95,211,85,35,27,179,212,30,205,36,54,96,36,26,240,121 };
    byte_vec_t pk { 4,192,81,186,186,62,63,73,113,138,10,156,139,131,113,92,81,181,175,243,26,134,96,199,121,22,97,250,35,7,29,184,157,165,221,36,130,141,191,63,83,246,127,235,33,73,9,33,107,49,145,223,66,120,8,79,128,156,237,110,181,132,223,104,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 178 ") {
    byte_vec_t msg { 239,83,162,214 };
    byte_vec_t sig { 104,1,85,152,78,118,4,130,103,161,170,58,221,154,125,65,146,108,128,140,214,86,135,188,174,210,98,139,115,93,158,31,87,118,75,166,232,108,176,167,16,26,152,92,61,32,191,119,46,182,61,172,202,82,121,230,236,153,56,165,219,172,124,9 };
    byte_vec_t pk { 3,73,222,47,146,253,211,15,226,92,30,25,182,79,83,71,227,103,116,120,202,234,223,198,170,237,243,58,58,50,143,41,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 178 ") {
    byte_vec_t msg { 19,113,240,204 };
    byte_vec_t sig { 27,42,185,57,26,203,37,196,50,232,252,161,210,124,51,59,191,207,73,222,51,232,122,27,69,22,165,139,14,122,215,39,133,143,23,194,241,164,51,236,233,179,46,20,185,78,43,216,178,183,46,185,11,241,119,241,54,236,179,74,116,255,196,1 };
    byte_vec_t pk { 3,205,32,107,204,62,134,253,94,56,144,249,30,100,12,126,104,84,219,112,150,139,120,108,177,135,64,37,209,29,100,165,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 179 ") {
    byte_vec_t msg { 224,125,208,2 };
    byte_vec_t sig { 174,192,135,69,51,50,93,31,185,225,139,47,178,199,113,51,190,105,208,242,217,14,184,187,163,246,135,205,118,13,81,231,103,255,165,143,112,79,145,98,64,150,234,186,222,132,121,72,69,211,251,11,193,69,9,180,200,93,234,161,103,43,125,213 };
    byte_vec_t pk { 4,65,39,21,5,64,136,55,8,114,3,45,234,46,97,177,184,28,153,72,15,178,195,128,232,14,223,133,214,254,213,64,171,35,154,77,3,243,156,62,63,249,169,49,160,32,245,170,220,49,127,76,225,252,106,18,245,156,114,53,180,245,204,139,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 179 ") {
    byte_vec_t msg { 58,71,93,151 };
    byte_vec_t sig { 197,13,158,68,96,126,71,90,130,223,37,122,185,125,8,60,72,197,116,50,110,71,114,10,45,181,164,209,132,48,145,197,86,25,180,201,92,131,73,251,40,243,225,204,164,205,103,248,235,12,229,111,70,67,155,121,51,85,191,69,200,176,204,24 };
    byte_vec_t pk { 4,49,213,112,72,31,59,61,4,141,32,125,124,107,40,16,75,119,149,155,99,252,93,115,230,153,106,145,41,79,141,169,142,163,166,86,140,87,19,197,22,104,165,169,28,101,118,110,52,185,173,219,152,220,131,132,56,133,106,80,113,64,78,231,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 179 ") {
    byte_vec_t msg { 74,178,221,113 };
    byte_vec_t sig { 63,51,7,108,79,185,43,65,58,57,8,23,154,243,231,52,6,14,62,191,33,48,37,252,245,243,235,147,65,156,94,16,194,10,210,86,16,209,184,3,211,243,150,78,89,212,162,5,39,206,56,35,152,150,214,131,31,91,224,215,118,202,33,105 };
    byte_vec_t pk { 3,107,15,111,200,8,179,76,206,104,197,115,19,186,234,30,201,221,182,182,90,142,9,36,105,171,19,141,203,134,153,248,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 179 ") {
    byte_vec_t msg { 118,104,207,0 };
    byte_vec_t sig { 229,224,234,112,74,136,59,246,14,105,18,253,14,194,194,107,26,160,167,226,83,145,205,218,101,77,2,131,255,163,222,63,135,40,188,236,148,14,56,28,235,75,131,99,149,200,214,248,58,64,94,27,96,75,222,142,2,210,4,233,192,230,107,150 };
    byte_vec_t pk { 3,18,112,122,154,200,9,81,5,240,25,36,227,18,87,248,104,7,189,36,194,136,107,141,27,169,24,150,58,27,75,180,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 180 ") {
    byte_vec_t msg { 216,18,62,236 };
    byte_vec_t sig { 52,221,124,40,165,105,209,90,226,89,109,0,12,221,182,214,126,128,236,168,48,90,221,14,245,81,61,70,187,47,28,74,123,233,49,128,47,159,57,107,176,50,8,194,59,87,46,147,175,119,88,255,121,61,0,41,229,55,162,196,21,183,126,49 };
    byte_vec_t pk { 4,0,73,34,253,112,112,216,243,170,163,129,187,12,74,215,182,51,137,27,215,240,52,206,125,91,206,89,227,192,130,192,243,213,109,26,235,113,110,171,45,58,181,192,74,137,53,195,202,166,66,94,243,76,85,60,42,32,218,159,96,186,158,82,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 180 ") {
    byte_vec_t msg { 86,31,37,84 };
    byte_vec_t sig { 74,70,135,148,229,35,130,63,155,9,63,176,102,151,228,154,36,87,212,51,61,104,103,205,133,243,84,18,18,244,50,31,248,253,40,90,213,29,46,5,69,253,19,23,152,25,108,193,126,87,251,248,169,41,58,158,232,217,110,208,161,239,190,89 };
    byte_vec_t pk { 4,181,186,101,175,119,200,241,11,43,186,91,57,207,216,165,242,39,111,180,56,91,200,11,195,53,146,154,210,249,181,42,84,4,195,31,64,124,192,91,83,115,21,23,250,13,110,44,253,219,230,213,137,22,64,96,22,45,48,101,148,58,45,105,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 180 ") {
    byte_vec_t msg { 201,70,144,164 };
    byte_vec_t sig { 56,249,249,62,151,238,90,84,166,75,196,128,0,228,47,201,66,99,162,61,57,37,217,6,0,25,139,92,57,97,120,193,79,217,189,188,52,90,24,67,71,51,2,80,149,141,37,201,2,163,14,45,11,234,184,123,237,206,77,184,35,204,228,137 };
    byte_vec_t pk { 2,226,80,185,201,69,248,156,206,128,208,57,101,30,42,178,238,158,24,3,176,11,64,1,107,233,84,218,203,115,57,197,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 180 ") {
    byte_vec_t msg { 212,238,191,152 };
    byte_vec_t sig { 116,110,173,79,174,54,18,116,144,139,47,59,106,126,147,189,82,146,178,179,243,201,93,198,213,119,37,152,131,45,251,244,180,105,31,178,106,66,12,3,157,109,199,174,40,174,92,115,29,156,48,25,186,184,2,146,125,126,242,187,226,121,23,135 };
    byte_vec_t pk { 2,220,101,239,72,12,10,25,248,196,18,218,29,203,118,242,92,205,55,200,181,228,87,141,202,162,175,84,32,140,42,8,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 181 ") {
    byte_vec_t msg { 56,143,110,55 };
    byte_vec_t sig { 16,107,173,97,226,135,195,209,248,118,12,19,59,105,140,103,67,2,62,32,246,119,239,186,97,14,218,209,163,16,75,209,157,32,76,221,168,212,144,212,63,14,31,145,171,177,117,150,94,40,133,202,94,89,179,63,116,43,25,211,217,208,212,227 };
    byte_vec_t pk { 4,253,102,98,202,152,248,136,191,123,194,99,90,226,37,163,55,222,73,83,22,218,245,186,205,251,135,95,10,227,238,159,164,98,156,66,186,86,136,139,104,202,129,192,102,135,76,248,78,133,221,61,112,51,193,198,237,18,150,224,188,183,64,18,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 181 ") {
    byte_vec_t msg { 9,118,195,163 };
    byte_vec_t sig { 98,201,125,220,246,58,250,182,221,89,130,182,215,237,236,160,77,158,219,88,174,170,72,158,111,127,137,231,183,117,212,37,188,24,149,188,41,141,92,105,209,235,217,221,219,226,247,105,82,25,184,162,24,245,105,99,158,79,29,110,111,22,154,212 };
    byte_vec_t pk { 4,220,120,160,9,80,151,121,243,134,199,76,114,188,77,46,221,4,83,221,196,125,74,246,250,68,249,15,218,251,144,116,93,241,221,162,59,21,156,63,133,11,66,23,245,35,90,119,29,245,77,133,235,180,139,169,228,216,145,179,84,83,76,127,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 181 ") {
    byte_vec_t msg { 58,191,167,255 };
    byte_vec_t sig { 117,69,107,169,96,99,188,233,65,18,244,224,223,36,133,191,71,15,51,243,158,147,14,101,118,189,49,232,149,86,247,58,182,136,65,162,184,85,15,70,172,147,248,218,245,189,154,32,81,225,52,242,26,6,55,179,114,36,147,199,38,243,201,181 };
    byte_vec_t pk { 2,16,32,118,45,71,41,153,77,112,86,210,55,12,108,253,127,73,52,80,104,101,65,18,232,215,23,75,166,182,123,21,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 181 ") {
    byte_vec_t msg { 162,17,240,140 };
    byte_vec_t sig { 33,171,138,31,189,84,33,109,71,101,71,236,189,37,150,142,13,183,90,162,41,40,120,36,244,49,115,80,73,110,100,221,90,161,80,61,201,16,245,112,81,104,134,211,219,129,118,187,91,188,95,206,225,83,89,100,60,77,40,45,203,177,70,198 };
    byte_vec_t pk { 3,234,64,16,97,119,241,148,97,147,239,176,174,140,2,62,25,95,248,51,222,26,15,151,11,18,47,216,252,167,106,133,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 182 ") {
    byte_vec_t msg { 194,156,248,160 };
    byte_vec_t sig { 11,81,166,198,87,0,187,232,211,88,206,81,108,166,198,144,11,169,104,2,177,39,223,95,20,229,232,173,223,136,105,43,162,38,228,169,157,101,250,210,180,111,182,235,145,77,120,229,227,202,220,154,251,251,119,228,157,195,10,124,238,26,126,243 };
    byte_vec_t pk { 4,207,88,83,111,193,234,17,34,219,150,81,189,231,135,228,10,179,2,11,65,179,97,143,100,141,128,204,46,43,114,27,220,167,6,202,166,121,105,5,18,213,89,10,144,173,139,81,10,81,126,142,139,105,154,89,47,231,99,180,5,8,132,232,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 182 ") {
    byte_vec_t msg { 74,132,83,166 };
    byte_vec_t sig { 30,37,251,244,215,192,36,63,1,94,192,223,143,222,211,190,217,149,83,64,203,172,79,132,244,118,200,44,81,62,17,107,227,221,230,143,194,3,51,84,144,33,63,115,156,135,188,190,216,243,26,142,106,162,80,176,191,76,202,126,32,175,49,225 };
    byte_vec_t pk { 4,159,127,32,3,55,201,128,23,192,213,81,183,103,202,73,27,244,251,70,176,40,239,0,218,133,246,195,38,154,192,40,136,48,215,145,238,251,128,46,185,29,7,180,141,120,189,66,40,190,54,131,220,155,41,239,59,210,254,18,43,142,8,100,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 182 ") {
    byte_vec_t msg { 163,200,135,251 };
    byte_vec_t sig { 0,172,245,97,91,59,104,215,93,111,18,26,74,34,71,159,96,175,181,10,132,116,14,97,195,129,83,81,34,242,49,117,178,66,122,99,89,125,195,123,243,163,135,81,111,131,2,147,155,219,235,52,111,108,17,12,6,244,182,93,175,24,19,146 };
    byte_vec_t pk { 3,28,124,165,8,104,63,160,169,91,30,73,52,206,91,191,142,43,207,23,11,55,93,122,108,57,3,98,13,100,93,117,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 182 ") {
    byte_vec_t msg { 252,219,147,176 };
    byte_vec_t sig { 25,29,38,249,20,246,31,70,125,49,85,76,188,132,116,11,158,244,64,12,66,196,217,236,41,178,72,240,219,195,180,41,202,109,29,134,183,108,177,35,98,254,243,185,204,161,135,220,203,34,53,170,76,3,196,55,71,7,157,100,118,208,148,176 };
    byte_vec_t pk { 3,163,199,239,18,56,177,107,0,70,89,185,185,103,83,12,173,106,121,169,125,167,145,56,84,249,43,229,49,62,240,47,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 183 ") {
    byte_vec_t msg { 172,83,148,169 };
    byte_vec_t sig { 252,216,36,112,125,180,80,157,43,186,52,207,26,155,8,25,174,55,73,154,127,148,200,15,56,181,203,226,46,208,96,85,245,56,252,196,60,140,64,111,25,124,150,46,233,246,68,102,21,91,199,171,199,183,180,92,180,194,107,200,121,50,243,220 };
    byte_vec_t pk { 4,239,249,159,6,207,130,160,232,226,51,196,102,107,73,218,210,127,231,85,227,247,147,193,58,239,226,2,172,203,71,11,230,203,164,222,235,219,152,18,25,223,227,111,23,24,223,64,149,241,165,221,47,174,184,150,205,249,33,92,124,129,29,31,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 183 ") {
    byte_vec_t msg { 163,26,2,169 };
    byte_vec_t sig { 174,164,201,180,20,95,243,205,89,109,215,238,234,105,248,251,250,194,42,13,161,124,180,249,142,162,26,64,170,71,193,31,120,46,238,63,231,140,244,249,156,247,58,153,225,78,88,50,124,71,79,33,18,18,152,48,119,113,60,247,60,252,186,68 };
    byte_vec_t pk { 4,222,14,241,218,68,36,231,110,81,15,199,173,162,177,241,138,147,245,216,42,184,225,28,248,200,123,254,142,79,12,75,20,106,147,102,97,219,116,238,114,152,166,70,215,183,129,10,174,24,4,82,13,18,154,11,72,92,246,129,85,170,120,102,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 183 ") {
    byte_vec_t msg { 23,178,133,216 };
    byte_vec_t sig { 98,240,90,29,127,237,238,130,168,209,251,187,166,221,103,16,154,26,197,166,89,21,94,159,89,7,72,114,30,106,185,10,156,204,142,0,215,232,123,181,136,194,213,216,17,68,12,101,23,108,220,19,63,191,107,137,134,220,155,153,244,62,90,107 };
    byte_vec_t pk { 3,245,35,191,44,91,109,175,216,102,89,93,100,106,17,254,211,18,169,195,238,17,106,225,154,39,156,216,127,130,163,71,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 183 ") {
    byte_vec_t msg { 9,218,249,134 };
    byte_vec_t sig { 196,97,90,2,39,166,58,139,178,12,128,153,9,177,132,35,103,70,137,175,60,12,236,76,142,96,15,239,25,37,8,163,174,140,156,52,65,32,194,223,154,196,86,210,82,166,68,58,51,123,213,73,55,55,11,2,51,125,67,5,65,120,48,176 };
    byte_vec_t pk { 2,192,154,31,88,97,233,113,35,38,115,193,212,145,48,124,90,228,131,23,9,203,105,233,161,7,35,120,41,170,87,221,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 184 ") {
    byte_vec_t msg { 204,75,197,116 };
    byte_vec_t sig { 2,74,9,55,10,72,8,138,124,73,135,161,200,149,56,120,246,230,150,33,214,128,28,71,4,149,232,136,189,35,137,82,221,152,84,170,109,186,102,3,25,60,87,65,97,84,215,212,21,235,223,179,120,39,6,214,112,65,77,146,129,98,67,83 };
    byte_vec_t pk { 4,92,134,203,86,124,128,120,198,142,73,194,87,43,71,57,142,86,253,212,70,20,4,154,239,117,50,198,43,2,154,132,87,208,156,147,136,2,53,187,16,102,157,188,132,211,65,110,101,154,13,113,29,68,178,124,234,255,178,247,133,54,244,113,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 184 ") {
    byte_vec_t msg { 48,168,210,59 };
    byte_vec_t sig { 50,165,228,45,148,108,58,247,28,153,87,252,20,83,208,222,141,116,150,160,51,66,112,47,54,157,79,25,120,12,240,76,227,211,22,27,187,95,34,17,41,4,190,168,14,201,215,215,33,201,44,198,241,221,146,163,83,132,246,253,133,151,78,24 };
    byte_vec_t pk { 4,73,110,10,41,209,20,124,232,118,161,213,164,3,202,64,47,250,186,168,196,35,103,32,86,197,83,38,9,84,25,66,246,249,245,0,143,195,106,221,255,2,104,13,181,112,3,130,246,193,41,159,42,224,80,72,9,163,92,116,70,72,197,61,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 184 ") {
    byte_vec_t msg { 93,11,30,241 };
    byte_vec_t sig { 127,193,195,231,181,232,200,103,177,169,220,50,158,79,97,2,126,233,192,174,170,126,53,239,102,56,140,148,212,193,193,83,128,220,158,70,148,238,226,25,152,136,168,149,214,111,45,91,114,253,242,234,253,219,226,71,143,178,77,28,37,160,167,99 };
    byte_vec_t pk { 2,49,214,252,43,70,18,171,190,108,90,221,161,210,78,132,47,169,113,252,77,20,93,127,200,217,135,60,130,39,231,140,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 184 ") {
    byte_vec_t msg { 219,124,149,157 };
    byte_vec_t sig { 230,191,227,237,44,251,154,215,66,236,29,243,99,50,88,146,231,2,32,202,97,218,10,87,14,46,45,103,116,62,146,119,191,197,161,184,113,96,233,225,202,179,182,27,147,79,15,100,199,64,43,150,192,14,149,101,31,2,159,243,189,101,228,34 };
    byte_vec_t pk { 3,228,18,149,143,119,25,42,14,190,201,37,193,230,118,131,172,108,223,99,112,143,255,255,67,177,234,196,152,121,34,47,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 185 ") {
    byte_vec_t msg { 44,76,118,103 };
    byte_vec_t sig { 226,229,144,160,82,44,211,53,204,239,148,112,170,239,18,251,208,210,216,100,254,248,118,137,27,51,223,176,90,79,199,114,156,131,223,236,168,210,113,131,253,151,60,254,206,76,252,66,40,154,225,42,91,138,50,254,140,93,210,16,24,191,166,108 };
    byte_vec_t pk { 4,119,126,32,18,172,1,149,243,239,58,144,81,24,118,87,158,237,26,238,177,2,141,45,34,96,198,141,58,17,70,129,45,26,153,144,233,206,74,163,134,231,26,91,44,125,23,31,50,83,15,116,29,8,14,131,161,128,22,144,4,93,227,146,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 185 ") {
    byte_vec_t msg { 77,13,201,177 };
    byte_vec_t sig { 221,87,25,39,138,212,32,14,15,109,149,248,4,178,175,104,15,241,85,106,199,130,210,154,49,142,126,126,164,95,222,210,79,32,49,28,124,67,174,38,171,211,211,155,209,111,155,252,85,5,219,223,64,20,236,132,2,70,15,119,106,182,77,183 };
    byte_vec_t pk { 4,190,138,145,149,253,170,172,81,245,108,150,71,145,144,11,72,83,141,78,21,23,224,16,215,20,75,85,84,252,179,3,19,97,106,19,84,75,176,182,108,139,32,241,90,223,120,213,127,199,6,178,3,135,6,213,49,99,85,255,243,64,182,234,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 185 ") {
    byte_vec_t msg { 249,138,251,104 };
    byte_vec_t sig { 1,96,56,172,21,58,198,150,152,24,149,45,68,57,193,52,18,74,136,67,180,119,140,162,177,138,67,99,132,253,17,140,212,36,77,58,38,170,89,50,42,118,129,131,66,186,43,109,144,247,42,157,102,230,37,184,79,143,183,112,156,130,225,207 };
    byte_vec_t pk { 2,219,68,124,198,141,13,252,251,34,19,56,77,66,7,41,211,206,168,97,158,69,21,103,50,184,69,162,224,209,58,113,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 185 ") {
    byte_vec_t msg { 127,243,144,117 };
    byte_vec_t sig { 16,87,199,142,91,191,49,29,58,76,218,22,118,123,109,109,128,92,252,100,119,48,19,139,102,206,96,252,253,196,166,74,177,198,192,95,20,216,249,79,95,11,223,56,157,97,17,125,206,6,69,188,63,161,104,248,120,100,51,79,192,191,228,244 };
    byte_vec_t pk { 2,101,155,66,212,12,102,63,43,210,210,172,17,56,6,29,156,182,181,40,86,148,206,20,122,52,100,162,192,118,10,116,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 186 ") {
    byte_vec_t msg { 51,226,106,82 };
    byte_vec_t sig { 218,250,131,24,222,165,127,28,141,184,227,156,141,163,167,20,249,142,71,99,46,237,2,77,158,42,191,102,34,251,48,105,213,117,227,200,182,159,115,130,248,216,214,15,14,161,40,126,102,205,241,32,134,33,49,129,50,69,125,37,35,66,129,77 };
    byte_vec_t pk { 4,128,74,28,219,69,125,71,199,83,134,134,23,85,17,72,100,128,138,80,216,108,175,105,155,8,161,216,11,177,17,143,80,131,180,53,240,34,96,255,238,216,88,207,101,6,8,132,215,224,219,239,183,102,65,204,209,36,80,48,132,226,89,51,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 186 ") {
    byte_vec_t msg { 72,197,162,44 };
    byte_vec_t sig { 164,180,168,72,116,155,179,144,110,17,154,115,112,40,125,204,198,248,111,75,207,108,64,184,199,139,250,93,149,217,38,84,101,83,31,94,84,90,179,92,247,32,241,76,82,173,191,62,86,176,67,64,243,182,234,251,243,16,200,31,145,187,233,24 };
    byte_vec_t pk { 4,90,54,161,154,107,215,0,5,220,140,86,168,78,225,45,181,2,236,99,191,159,153,220,117,104,192,77,169,136,149,234,39,240,138,174,150,233,229,129,25,244,173,10,133,233,81,57,188,75,228,124,97,132,28,42,113,230,134,145,3,149,86,200,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 186 ") {
    byte_vec_t msg { 14,254,98,200 };
    byte_vec_t sig { 109,175,141,90,118,107,4,28,237,54,157,249,18,152,161,231,131,183,35,236,99,65,173,6,238,138,216,212,138,181,8,254,30,10,227,98,93,29,104,155,152,206,110,106,58,136,60,190,223,231,144,29,75,191,63,128,156,51,234,177,117,95,14,83 };
    byte_vec_t pk { 3,152,243,230,28,108,36,185,11,74,250,56,105,0,104,57,180,197,125,228,161,60,142,212,32,129,22,70,135,100,251,84,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 186 ") {
    byte_vec_t msg { 91,50,82,9 };
    byte_vec_t sig { 140,62,80,78,145,156,112,30,50,73,126,8,179,74,52,197,241,175,200,211,47,6,23,111,39,72,3,136,237,195,106,217,141,122,0,48,45,60,217,52,18,183,217,175,140,93,27,6,52,59,244,150,240,213,83,141,98,68,248,127,159,60,248,3 };
    byte_vec_t pk { 3,70,136,238,143,141,102,121,4,13,41,1,123,71,119,228,218,158,69,215,219,208,1,149,104,96,128,136,240,121,151,233,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 187 ") {
    byte_vec_t msg { 243,205,101,229 };
    byte_vec_t sig { 234,240,21,185,162,93,124,234,177,254,250,252,147,247,145,228,44,253,234,81,65,249,208,8,199,227,29,218,221,197,8,235,220,25,151,204,40,244,45,204,245,27,14,99,113,8,16,233,238,6,127,151,188,8,160,88,31,117,51,200,77,39,119,36 };
    byte_vec_t pk { 4,231,117,229,247,250,15,223,179,121,13,92,89,75,146,250,44,1,167,234,214,37,30,136,240,212,135,134,156,25,59,42,72,170,207,59,237,218,74,198,53,29,114,133,33,222,0,153,182,15,35,212,216,222,48,181,145,32,27,118,203,126,54,206,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 187 ") {
    byte_vec_t msg { 5,116,39,249 };
    byte_vec_t sig { 181,68,37,84,212,216,50,241,40,21,79,243,168,99,30,197,41,39,185,239,242,143,187,243,0,118,163,150,244,178,147,79,137,92,135,152,131,150,98,63,131,20,182,84,154,28,150,72,90,62,124,205,218,233,144,117,54,8,84,96,109,76,158,13 };
    byte_vec_t pk { 4,100,116,120,64,217,116,75,12,251,165,166,63,130,245,27,60,181,13,162,151,215,246,84,183,244,197,218,37,118,125,216,172,113,114,28,101,209,249,156,18,158,226,51,233,104,105,46,17,94,62,179,178,196,172,98,182,18,167,241,82,191,55,206,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 187 ") {
    byte_vec_t msg { 226,148,125,89 };
    byte_vec_t sig { 70,154,129,19,137,238,7,247,64,117,76,8,28,198,109,86,104,162,243,166,18,40,226,111,151,83,163,150,71,115,253,67,133,248,55,209,132,95,229,98,9,216,241,183,159,217,219,93,99,32,200,36,157,192,177,160,207,44,129,130,87,139,6,120 };
    byte_vec_t pk { 2,253,249,91,242,118,216,98,124,47,40,217,203,74,135,28,241,88,71,109,130,206,135,240,158,151,36,7,61,240,145,164,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 187 ") {
    byte_vec_t msg { 64,203,235,35 };
    byte_vec_t sig { 88,164,30,250,146,86,242,132,195,17,130,152,224,93,174,255,143,165,69,110,8,130,173,187,29,1,126,85,198,40,72,136,239,252,205,198,104,74,251,145,242,197,98,109,105,171,229,141,228,63,3,192,224,38,89,238,210,190,53,11,222,71,175,102 };
    byte_vec_t pk { 3,59,147,224,250,188,136,10,42,127,162,204,86,119,85,25,23,91,26,70,174,156,42,182,235,219,234,146,29,84,206,191,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 188 ") {
    byte_vec_t msg { 105,164,186,57 };
    byte_vec_t sig { 33,10,22,0,201,64,93,119,78,66,185,54,156,186,120,50,176,111,60,73,190,112,115,91,203,196,162,204,156,29,63,149,115,71,0,44,231,27,18,174,104,157,37,216,94,27,81,232,18,186,189,134,147,44,82,47,65,100,236,69,106,164,175,34 };
    byte_vec_t pk { 4,114,185,161,166,130,52,240,118,114,172,125,207,2,2,250,147,158,36,244,225,90,37,13,122,238,231,62,25,237,45,4,216,203,151,13,191,49,4,101,65,243,94,254,118,171,177,33,45,229,92,142,18,141,152,68,132,91,128,206,115,194,15,195,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 188 ") {
    byte_vec_t msg { 15,207,230,36 };
    byte_vec_t sig { 107,48,127,106,110,44,219,227,210,213,227,98,227,249,33,215,73,40,37,186,230,76,235,156,25,64,23,211,21,201,89,207,61,97,237,135,143,221,33,184,207,73,89,142,93,160,239,7,107,44,34,189,79,186,31,201,227,104,66,106,69,175,54,114 };
    byte_vec_t pk { 4,122,206,57,73,29,166,223,81,14,25,162,84,193,18,100,229,201,240,213,244,80,131,75,175,238,141,52,133,32,118,32,243,64,184,120,215,173,248,79,66,223,250,34,7,145,216,154,229,31,176,179,252,169,58,124,15,250,85,170,184,214,216,144,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 188 ") {
    byte_vec_t msg { 29,7,99,226 };
    byte_vec_t sig { 110,114,139,76,246,9,190,8,197,251,253,125,209,98,126,119,93,142,139,170,148,69,101,242,197,169,14,123,121,27,198,108,62,193,209,108,216,7,164,107,234,57,19,102,231,200,210,13,117,231,248,145,141,237,216,212,27,91,200,238,160,13,68,138 };
    byte_vec_t pk { 3,173,145,82,26,52,110,72,248,178,95,199,178,115,43,255,63,67,40,140,192,220,199,45,234,8,122,160,243,171,48,9,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 188 ") {
    byte_vec_t msg { 66,222,82,228 };
    byte_vec_t sig { 88,242,111,176,208,97,144,38,176,22,137,96,49,128,205,137,229,95,22,158,120,200,211,14,209,12,209,97,135,97,149,80,182,220,73,250,71,113,82,240,20,158,251,52,114,73,165,121,192,165,157,158,44,222,222,102,121,179,48,87,119,224,94,212 };
    byte_vec_t pk { 3,79,165,141,46,120,68,60,14,143,46,222,183,227,166,205,243,120,192,40,131,169,110,224,186,100,23,15,165,125,245,195,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 189 ") {
    byte_vec_t msg { 50,236,33,41 };
    byte_vec_t sig { 51,8,237,252,21,196,189,46,81,202,110,52,152,198,49,195,221,60,164,95,6,180,178,15,244,75,172,30,165,208,213,97,133,200,173,119,87,230,252,249,110,62,31,25,36,87,31,142,242,222,210,20,47,164,144,82,31,207,106,156,219,118,190,207 };
    byte_vec_t pk { 4,150,107,47,112,253,195,33,214,136,148,17,253,227,79,167,120,39,72,150,26,74,72,179,188,104,160,127,92,112,114,250,45,64,113,232,19,250,180,7,111,73,86,30,55,204,33,28,111,58,112,175,7,180,225,71,202,87,79,57,144,177,173,214,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 189 ") {
    byte_vec_t msg { 18,238,69,54 };
    byte_vec_t sig { 240,25,75,26,62,122,103,53,27,86,157,0,30,100,0,174,139,202,92,99,198,119,0,14,168,22,210,1,89,216,215,112,205,69,212,50,157,211,246,169,82,34,13,135,194,21,146,129,207,11,58,113,204,253,25,48,183,179,90,31,120,210,234,37 };
    byte_vec_t pk { 4,41,108,19,46,1,165,11,201,22,61,199,187,87,147,153,186,115,194,10,202,113,113,9,139,138,109,102,7,225,99,169,255,23,247,86,208,206,23,207,6,210,164,234,127,87,7,66,151,81,122,51,12,146,224,14,101,249,230,207,201,54,233,45,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 189 ") {
    byte_vec_t msg { 135,164,2,219 };
    byte_vec_t sig { 70,117,165,175,138,156,71,118,193,165,31,232,108,1,176,134,161,142,254,72,82,24,204,224,183,84,161,96,225,170,227,205,252,184,45,50,61,225,23,238,68,88,28,240,76,224,163,197,9,231,57,57,213,37,171,213,92,31,59,166,144,214,54,247 };
    byte_vec_t pk { 3,78,241,52,155,90,241,76,66,50,215,113,237,49,32,192,239,39,190,122,210,204,151,211,53,71,94,118,125,93,252,147,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 189 ") {
    byte_vec_t msg { 63,250,73,99 };
    byte_vec_t sig { 170,54,96,249,23,213,223,201,163,33,186,220,64,204,210,26,50,248,40,72,97,102,141,45,30,53,61,234,70,94,27,69,246,87,18,192,36,198,78,3,205,17,7,18,119,13,134,167,71,24,215,250,79,110,151,59,47,135,99,153,141,21,219,19 };
    byte_vec_t pk { 2,60,212,166,77,237,98,156,36,107,148,0,101,188,47,225,75,249,93,71,64,63,107,122,158,181,250,76,242,54,188,22,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 190 ") {
    byte_vec_t msg { 221,168,162,195 };
    byte_vec_t sig { 104,212,181,122,105,43,133,87,204,66,51,184,92,120,118,240,221,235,100,131,120,213,53,50,75,43,221,29,49,228,251,57,48,149,114,22,218,10,41,216,26,187,96,110,203,199,253,27,91,98,96,119,165,198,6,72,121,247,247,246,235,210,149,53 };
    byte_vec_t pk { 4,226,228,128,23,135,100,204,32,99,166,185,168,70,99,131,129,184,123,10,144,116,131,186,45,119,105,202,136,253,58,198,219,253,12,123,134,250,187,24,97,45,191,70,103,53,220,34,181,255,123,149,84,134,154,177,161,131,214,0,71,204,190,156,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 190 ") {
    byte_vec_t msg { 209,212,132,232 };
    byte_vec_t sig { 255,137,13,7,72,80,16,41,168,226,75,187,37,229,220,105,212,7,22,102,67,121,198,209,133,77,35,244,129,73,182,158,164,224,2,146,73,184,123,155,118,206,126,172,254,104,107,115,67,94,129,163,233,170,92,50,161,102,66,29,249,215,197,191 };
    byte_vec_t pk { 4,222,4,160,231,135,151,51,182,201,19,38,148,208,84,86,42,218,111,246,168,67,46,57,173,99,178,31,155,131,31,112,36,105,68,87,222,136,8,12,186,180,10,164,88,252,126,219,246,182,102,167,137,198,22,73,111,91,112,241,42,69,208,205,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 190 ") {
    byte_vec_t msg { 240,104,247,0 };
    byte_vec_t sig { 119,136,229,170,29,244,77,199,166,173,63,85,40,92,156,137,71,90,31,198,222,7,149,169,161,37,28,185,68,131,116,121,51,35,203,44,3,50,237,212,209,226,180,22,102,23,79,87,164,193,177,100,101,85,102,171,0,65,50,198,209,125,245,249 };
    byte_vec_t pk { 2,254,59,116,192,244,69,118,82,214,123,231,220,40,218,97,118,156,137,227,99,43,6,166,152,84,52,53,59,187,49,50,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 190 ") {
    byte_vec_t msg { 143,209,161,176 };
    byte_vec_t sig { 87,74,39,212,46,180,196,74,109,25,117,117,115,50,82,69,13,150,54,162,0,179,102,26,11,188,135,117,12,227,159,122,57,187,135,220,181,161,138,130,22,7,134,49,110,249,168,2,254,13,224,52,213,149,20,182,100,42,187,83,172,105,19,208 };
    byte_vec_t pk { 3,11,171,184,235,127,215,37,187,174,148,211,69,209,4,237,155,239,39,56,211,152,99,131,47,58,104,86,168,23,37,107,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 191 ") {
    byte_vec_t msg { 177,135,127,56 };
    byte_vec_t sig { 245,145,95,165,57,254,196,230,5,15,119,213,218,44,127,104,232,233,200,184,112,196,72,58,133,212,137,229,165,3,107,156,155,127,101,117,192,35,103,136,62,36,28,137,6,26,114,198,180,201,28,73,179,168,163,41,58,1,182,124,132,144,77,97 };
    byte_vec_t pk { 4,204,48,170,165,206,183,28,129,59,37,176,100,124,8,9,20,241,118,124,31,121,65,14,54,144,157,129,244,209,22,7,182,149,35,184,60,43,40,159,117,64,76,25,64,97,138,144,174,133,50,151,161,121,254,175,39,149,233,178,116,206,120,52,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 191 ") {
    byte_vec_t msg { 63,117,198,104 };
    byte_vec_t sig { 241,50,79,142,176,69,244,101,143,243,176,43,34,235,195,125,69,235,253,97,234,32,55,61,153,209,211,30,137,138,127,101,163,105,221,82,204,65,228,37,177,106,120,56,179,52,20,189,110,94,3,31,109,142,226,52,137,28,167,8,218,25,200,19 };
    byte_vec_t pk { 4,81,176,24,181,194,23,17,62,120,227,171,143,128,195,164,108,164,123,12,182,23,232,142,109,35,222,204,224,205,140,198,223,71,63,142,174,94,75,109,86,99,144,96,55,222,225,102,13,2,158,224,236,10,21,131,219,114,160,30,5,77,223,85,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 191 ") {
    byte_vec_t msg { 195,198,187,178 };
    byte_vec_t sig { 185,127,236,25,98,39,172,87,187,121,107,217,64,21,234,146,56,172,67,234,250,195,127,106,213,244,54,248,52,239,18,175,27,24,79,63,17,135,253,94,142,173,75,194,26,102,182,128,112,16,171,213,110,51,44,237,103,183,236,118,49,31,135,39 };
    byte_vec_t pk { 3,18,193,127,251,193,77,168,17,48,51,15,250,78,64,115,91,122,72,132,207,124,130,36,135,172,118,79,44,111,89,159,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 191 ") {
    byte_vec_t msg { 190,202,137,249 };
    byte_vec_t sig { 170,190,255,222,46,88,38,99,111,74,21,240,15,54,189,182,147,244,77,135,213,3,65,52,3,251,169,231,73,67,177,52,247,233,229,15,208,122,32,140,240,35,151,50,88,235,18,23,21,139,253,72,224,251,12,212,57,92,236,188,108,165,240,87 };
    byte_vec_t pk { 2,3,247,65,2,157,16,49,147,156,78,237,89,2,249,88,2,53,125,163,132,188,207,81,52,158,214,159,199,174,12,205,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 192 ") {
    byte_vec_t msg { 128,33,202,182 };
    byte_vec_t sig { 25,246,94,177,120,50,83,231,130,14,50,222,129,114,180,33,234,131,238,62,173,153,22,51,31,44,45,59,97,99,236,118,232,10,233,239,32,135,133,103,194,191,35,125,245,209,175,0,112,167,37,214,143,124,185,175,125,182,223,159,72,23,178,47 };
    byte_vec_t pk { 4,182,128,249,23,30,148,124,190,130,59,154,254,18,111,230,30,113,210,5,255,56,81,68,86,85,66,50,0,14,229,159,4,15,154,182,87,19,84,248,248,12,2,145,11,214,78,195,250,12,136,175,63,74,80,70,75,245,44,230,40,42,42,117,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 192 ") {
    byte_vec_t msg { 176,112,86,46 };
    byte_vec_t sig { 229,174,55,107,146,35,28,105,247,161,190,229,114,124,161,227,60,91,173,0,23,103,25,76,171,155,66,66,40,124,243,149,112,4,237,198,135,244,1,71,166,86,99,222,66,52,236,109,122,61,26,134,63,98,95,246,94,153,158,155,185,214,79,117 };
    byte_vec_t pk { 4,76,136,194,109,20,130,217,64,226,233,34,178,181,208,76,37,104,204,112,49,125,228,81,208,5,224,243,246,49,44,241,216,85,90,99,0,67,215,49,58,30,254,18,151,123,1,193,62,93,125,24,113,117,205,186,215,10,88,208,18,37,41,241,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 192 ") {
    byte_vec_t msg { 191,72,186,243 };
    byte_vec_t sig { 226,84,245,247,183,60,216,44,62,192,207,155,236,138,109,170,140,252,4,83,193,17,77,163,165,16,123,90,223,157,18,17,46,87,241,163,22,19,39,225,134,185,131,51,86,239,30,98,93,111,0,134,29,214,255,132,250,97,187,253,248,181,33,42 };
    byte_vec_t pk { 3,247,29,12,19,177,38,219,132,109,212,195,129,104,107,82,97,215,108,41,98,3,97,46,164,211,105,86,167,89,33,3,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 192 ") {
    byte_vec_t msg { 162,132,16,8 };
    byte_vec_t sig { 119,214,181,254,11,238,166,156,106,255,31,133,238,192,68,54,230,45,46,187,63,244,85,233,152,132,134,168,166,117,24,119,146,200,222,50,56,41,128,48,25,9,247,138,216,9,166,87,205,199,181,62,146,212,23,123,74,22,138,142,58,192,114,148 };
    byte_vec_t pk { 2,219,69,24,58,88,208,128,196,114,232,114,106,215,122,85,228,231,232,56,175,24,109,214,63,161,26,146,194,224,143,10,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 193 ") {
    byte_vec_t msg { 21,38,233,211 };
    byte_vec_t sig { 141,188,35,134,238,38,3,138,102,149,45,70,172,26,195,234,249,94,2,39,239,15,175,216,179,36,44,62,94,64,43,85,222,57,107,200,85,112,102,255,167,125,246,83,14,248,240,14,252,58,218,226,86,208,176,231,231,181,20,253,110,210,239,21 };
    byte_vec_t pk { 4,118,246,250,64,123,114,238,5,153,139,138,50,209,136,129,44,186,230,66,141,142,147,85,213,48,186,57,103,3,57,148,99,34,67,56,180,207,176,195,82,124,123,67,124,90,186,22,223,95,26,44,19,147,101,99,47,35,206,24,112,199,60,7,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 193 ") {
    byte_vec_t msg { 16,14,117,201 };
    byte_vec_t sig { 207,54,157,95,5,29,236,193,99,41,155,39,14,92,127,16,14,75,49,162,126,247,13,184,26,83,72,33,33,94,75,186,20,144,218,16,107,126,4,99,154,191,105,244,199,244,217,42,218,43,199,245,13,54,172,65,101,62,213,211,134,9,46,103 };
    byte_vec_t pk { 4,205,171,244,216,203,198,146,106,75,68,142,59,57,249,7,249,102,159,12,177,218,32,234,167,78,190,81,180,123,125,158,209,142,128,103,166,102,248,241,156,43,11,136,70,182,108,109,141,199,198,152,248,220,13,89,20,89,26,159,203,97,10,128,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 193 ") {
    byte_vec_t msg { 111,144,80,124 };
    byte_vec_t sig { 233,69,197,47,207,232,39,238,28,71,222,108,103,172,145,237,203,165,14,9,131,135,196,5,156,204,249,230,1,121,245,18,177,43,228,185,167,63,36,52,193,180,111,29,166,122,214,137,63,127,206,219,243,117,47,150,123,64,61,189,57,43,50,22 };
    byte_vec_t pk { 3,158,154,253,12,65,176,209,32,137,12,54,117,39,188,131,20,209,100,130,100,96,180,85,130,65,148,254,227,199,233,172,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 193 ") {
    byte_vec_t msg { 84,220,142,241 };
    byte_vec_t sig { 190,246,118,110,60,59,254,167,7,11,10,80,223,55,90,132,220,68,178,163,110,76,120,28,74,141,40,235,235,174,210,81,156,188,218,95,115,170,253,255,115,52,91,238,28,29,175,236,98,14,0,126,173,176,0,199,255,118,194,10,222,114,155,110 };
    byte_vec_t pk { 2,182,161,77,128,184,98,244,91,235,99,69,112,24,105,148,29,53,216,27,248,161,94,4,126,231,92,141,99,169,248,94,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 194 ") {
    byte_vec_t msg { 228,249,248,144 };
    byte_vec_t sig { 139,197,48,107,248,66,234,209,37,102,145,164,166,58,246,196,13,87,164,193,208,183,187,197,247,101,107,93,170,228,210,29,58,227,69,53,52,87,205,94,175,54,233,169,71,184,116,153,222,107,131,87,247,134,91,164,12,202,145,47,34,241,104,113 };
    byte_vec_t pk { 4,185,95,86,121,87,17,30,245,157,207,132,202,81,132,14,228,11,48,249,249,235,44,26,101,245,151,163,5,49,183,129,186,38,197,200,117,190,230,19,45,151,30,115,132,10,247,106,126,239,23,39,24,64,127,102,69,145,186,190,223,176,249,215,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 194 ") {
    byte_vec_t msg { 111,77,105,44 };
    byte_vec_t sig { 80,249,3,224,59,194,122,49,224,171,129,192,71,139,21,131,64,209,223,108,105,57,249,188,188,162,168,171,108,4,75,240,247,112,116,61,100,47,217,128,115,206,230,147,100,151,80,92,155,5,165,87,178,122,59,251,192,88,72,11,45,87,213,127 };
    byte_vec_t pk { 4,167,234,69,111,72,190,82,122,206,244,198,108,228,4,253,246,214,98,34,105,21,132,76,186,203,78,156,101,182,192,136,134,45,71,107,96,138,227,83,202,51,252,73,56,25,204,91,110,139,117,78,43,142,99,86,156,0,32,218,215,171,228,63,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 194 ") {
    byte_vec_t msg { 53,62,12,85 };
    byte_vec_t sig { 228,226,208,119,240,202,101,80,174,206,224,76,233,160,238,101,122,186,172,118,44,42,219,223,248,37,215,139,186,177,155,195,18,219,66,175,192,39,77,3,146,48,200,176,31,29,215,204,69,49,155,46,109,22,193,126,143,4,97,218,62,96,68,103 };
    byte_vec_t pk { 2,139,196,161,113,178,174,106,55,41,132,178,178,119,42,25,79,235,184,15,85,156,134,132,209,71,233,171,80,45,65,205,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 194 ") {
    byte_vec_t msg { 155,53,179,143 };
    byte_vec_t sig { 140,52,71,36,166,136,67,100,6,63,124,70,117,49,23,219,167,39,199,175,62,193,72,15,147,104,13,110,33,177,19,122,38,42,2,169,95,72,175,15,12,18,29,144,66,219,98,174,29,43,199,68,246,22,232,65,138,167,211,36,143,163,161,126 };
    byte_vec_t pk { 2,153,196,123,53,239,214,144,233,115,251,183,205,190,237,42,45,92,218,190,104,128,210,40,221,25,25,114,152,112,228,119,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 195 ") {
    byte_vec_t msg { 195,235,121,54 };
    byte_vec_t sig { 90,64,179,207,20,144,146,129,189,18,151,104,241,0,76,56,172,250,43,72,39,204,2,236,32,252,149,3,21,7,53,233,125,161,77,131,213,121,152,88,129,197,199,252,151,24,93,151,118,16,76,202,181,228,224,148,68,151,114,153,36,128,204,19 };
    byte_vec_t pk { 4,38,108,2,17,57,59,190,25,169,246,222,238,174,195,226,127,155,205,69,103,193,137,211,189,255,215,13,142,56,99,98,34,229,43,209,96,251,191,38,41,37,66,211,83,170,215,198,247,39,249,26,219,218,76,126,159,245,238,71,201,181,127,59,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 195 ") {
    byte_vec_t msg { 76,13,133,148 };
    byte_vec_t sig { 148,134,61,22,138,117,197,44,13,182,188,43,32,110,178,155,46,111,47,118,184,176,141,197,121,203,82,25,29,204,186,192,123,183,134,83,0,10,42,9,212,10,252,220,122,255,112,13,228,97,197,1,197,165,21,201,221,217,168,7,102,79,155,96 };
    byte_vec_t pk { 4,17,245,30,228,187,244,45,57,194,167,21,113,42,163,114,72,149,161,240,231,63,241,97,116,152,160,244,241,181,93,20,45,97,12,233,168,115,105,56,50,171,217,240,40,154,101,145,98,160,226,108,113,138,139,167,163,1,207,166,139,215,212,71,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 195 ") {
    byte_vec_t msg { 107,122,167,16 };
    byte_vec_t sig { 204,177,153,231,111,204,86,177,97,219,93,63,87,174,82,12,195,97,151,177,235,4,99,215,217,40,25,178,108,204,20,22,226,134,254,26,221,98,199,157,125,248,31,146,52,150,19,69,22,139,15,95,180,115,154,255,16,148,76,137,183,237,175,185 };
    byte_vec_t pk { 3,220,165,227,223,44,15,123,140,191,48,215,2,125,158,168,35,97,159,179,37,188,98,91,232,93,253,68,101,103,60,163,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 195 ") {
    byte_vec_t msg { 20,175,157,69 };
    byte_vec_t sig { 84,231,161,138,232,152,181,1,183,145,156,61,196,202,140,187,176,66,48,84,161,177,5,97,126,184,139,47,188,74,239,157,191,220,231,115,239,133,240,212,49,135,194,38,193,131,195,89,122,93,48,126,218,213,132,164,181,38,193,116,109,145,200,254 };
    byte_vec_t pk { 3,150,125,208,207,150,239,42,97,66,147,250,115,242,205,252,169,108,112,141,85,9,117,31,2,0,201,105,42,243,78,137,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 196 ") {
    byte_vec_t msg { 180,23,7,93 };
    byte_vec_t sig { 188,36,254,162,199,77,233,44,73,221,24,182,252,79,45,152,204,229,155,6,181,19,245,81,67,131,32,210,102,24,22,104,219,133,99,70,184,163,200,200,179,197,226,204,4,178,149,86,42,169,85,98,26,20,89,43,4,59,229,51,92,54,57,39 };
    byte_vec_t pk { 4,98,124,151,44,105,194,44,142,71,37,12,54,116,62,65,181,17,174,182,162,113,51,0,164,220,104,93,26,11,222,85,239,178,130,87,36,140,224,225,69,254,117,235,4,41,130,227,72,119,100,78,79,208,74,207,24,192,136,249,118,174,138,212,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 196 ") {
    byte_vec_t msg { 106,205,212,7 };
    byte_vec_t sig { 14,28,252,30,143,31,112,202,207,126,148,224,45,92,104,24,204,132,122,216,75,136,197,145,166,159,147,112,29,123,93,199,164,60,52,117,19,193,100,253,130,164,147,132,101,202,2,73,17,36,109,87,128,70,27,87,147,196,168,81,238,74,161,186 };
    byte_vec_t pk { 4,195,10,45,188,75,199,237,166,135,65,85,190,34,43,234,147,212,226,166,0,144,226,63,234,71,232,66,222,57,125,103,14,204,76,3,136,190,12,148,67,201,52,11,181,62,36,132,13,25,185,81,222,177,161,180,186,198,215,250,5,113,17,3,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 196 ") {
    byte_vec_t msg { 30,50,119,197 };
    byte_vec_t sig { 25,209,230,207,6,173,29,15,85,230,80,221,116,243,239,165,131,210,118,98,27,122,157,107,45,31,63,193,208,183,216,65,185,162,139,138,66,12,214,86,85,0,2,61,20,25,164,118,164,28,66,36,97,230,197,246,221,167,106,200,128,42,78,112 };
    byte_vec_t pk { 3,87,27,75,129,208,37,157,173,215,230,226,174,75,213,192,233,14,235,132,88,100,102,78,189,96,89,206,124,246,206,106,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 196 ") {
    byte_vec_t msg { 64,243,224,48 };
    byte_vec_t sig { 199,106,39,70,140,228,3,122,19,118,148,3,175,169,248,104,198,246,227,214,123,217,202,221,143,199,232,101,118,0,59,210,13,234,203,78,208,236,88,96,44,116,218,140,174,80,111,236,13,85,9,120,94,245,185,41,18,114,190,135,16,34,49,40 };
    byte_vec_t pk { 3,18,72,151,23,219,104,77,226,42,235,29,159,177,110,119,119,73,33,73,42,254,197,165,39,249,67,1,93,224,118,65,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 197 ") {
    byte_vec_t msg { 48,94,128,156 };
    byte_vec_t sig { 148,207,109,53,97,195,56,168,197,171,245,154,171,201,30,107,78,24,14,28,51,51,42,55,215,139,209,21,152,43,47,161,137,154,61,166,18,159,18,16,188,228,231,13,60,6,9,219,129,151,125,131,218,94,66,40,254,186,205,150,32,22,105,161 };
    byte_vec_t pk { 4,128,163,87,30,230,130,188,113,142,224,77,120,30,196,21,36,87,75,77,171,146,88,20,144,38,153,198,91,222,9,75,20,185,207,6,172,130,231,211,157,164,142,106,190,229,17,62,222,169,184,171,199,194,212,231,139,96,131,197,199,0,130,110,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 197 ") {
    byte_vec_t msg { 22,77,78,215 };
    byte_vec_t sig { 77,140,42,26,12,39,137,173,237,93,183,190,120,217,171,245,252,65,71,95,182,126,224,18,96,230,184,108,42,145,146,130,144,63,63,177,45,63,151,178,218,166,249,235,145,0,255,58,164,174,202,157,157,15,41,93,80,213,99,208,166,161,233,83 };
    byte_vec_t pk { 4,19,136,112,206,42,83,17,249,162,48,60,241,26,68,60,28,46,45,205,167,58,6,223,232,141,248,31,67,235,188,167,251,116,135,187,96,206,15,238,41,239,119,34,210,3,188,60,242,250,104,148,76,199,133,148,34,52,144,187,161,217,135,145,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 197 ") {
    byte_vec_t msg { 193,166,19,234 };
    byte_vec_t sig { 254,199,244,126,140,87,16,202,47,97,236,82,172,234,185,10,170,43,94,148,0,119,13,139,254,23,209,93,52,117,127,1,187,248,188,141,217,197,168,51,79,73,185,132,102,243,93,249,117,60,127,97,53,35,171,252,40,43,227,201,117,223,43,49 };
    byte_vec_t pk { 3,199,137,70,250,211,206,166,184,42,205,10,152,131,188,199,238,202,14,226,29,225,69,106,5,153,237,173,188,253,181,35,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 197 ") {
    byte_vec_t msg { 122,245,80,150 };
    byte_vec_t sig { 150,68,183,102,61,196,254,255,139,128,130,201,233,68,66,182,181,1,202,174,115,17,36,130,9,53,78,111,34,198,75,126,91,203,111,184,82,249,246,167,227,34,22,149,197,28,166,119,138,176,136,219,123,29,138,163,95,184,76,167,1,118,208,54 };
    byte_vec_t pk { 2,172,165,112,185,198,212,253,70,109,217,191,143,179,83,168,71,236,94,199,60,113,89,47,246,91,136,10,12,198,144,198,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 198 ") {
    byte_vec_t msg { 48,99,244,242 };
    byte_vec_t sig { 43,99,43,8,135,125,238,202,118,140,193,215,147,179,250,206,74,139,195,85,176,54,33,204,79,169,180,121,154,80,60,10,220,233,160,45,138,154,117,247,25,31,123,1,126,205,4,15,213,15,62,209,104,131,48,71,160,193,235,7,159,20,173,209 };
    byte_vec_t pk { 4,193,219,28,159,171,177,96,174,153,39,200,14,9,67,218,174,214,99,220,23,163,66,49,106,251,185,177,144,6,30,2,59,72,87,5,179,123,184,174,226,13,205,82,29,204,187,82,129,114,124,80,139,95,208,98,188,66,18,227,8,34,199,217,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 198 ") {
    byte_vec_t msg { 139,254,213,75 };
    byte_vec_t sig { 94,30,221,31,81,85,225,192,197,224,135,180,230,32,195,117,7,15,118,196,123,15,103,38,97,131,217,219,21,242,53,125,73,253,24,125,121,239,196,33,165,110,7,9,192,177,155,58,181,45,179,239,122,82,191,170,182,146,106,235,27,235,190,142 };
    byte_vec_t pk { 4,143,192,188,223,53,239,37,141,113,29,96,122,18,240,148,219,54,161,1,134,232,70,220,119,29,136,138,139,7,19,56,171,230,104,127,124,180,11,67,103,30,204,233,3,223,55,195,174,247,89,146,23,109,183,31,12,176,217,76,176,240,7,104,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 198 ") {
    byte_vec_t msg { 174,56,197,132 };
    byte_vec_t sig { 177,237,244,164,67,66,30,188,226,37,108,178,241,130,109,80,199,76,116,63,184,85,90,180,205,0,168,17,2,91,215,147,67,76,144,184,126,213,54,55,17,81,132,50,6,139,154,49,151,0,1,122,67,86,198,132,81,237,163,240,89,153,218,142 };
    byte_vec_t pk { 3,66,183,70,27,145,236,74,77,163,92,45,110,139,17,76,198,27,30,51,30,23,242,70,69,149,149,55,39,177,129,35,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 198 ") {
    byte_vec_t msg { 153,68,170,166 };
    byte_vec_t sig { 245,5,8,31,168,205,68,92,246,234,82,211,111,67,163,68,127,35,109,236,153,218,42,21,213,6,232,57,197,15,207,69,255,199,144,166,113,139,20,225,117,118,241,166,235,12,150,97,155,237,25,93,106,200,35,88,107,223,66,148,143,117,221,47 };
    byte_vec_t pk { 3,87,101,166,248,158,247,102,119,35,27,237,121,201,213,235,125,177,107,70,37,212,133,21,102,142,242,244,154,186,235,232,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 199 ") {
    byte_vec_t msg { 248,7,87,135 };
    byte_vec_t sig { 159,94,190,123,96,116,48,11,66,107,224,62,67,65,10,93,208,177,189,72,153,72,69,131,14,182,48,36,234,121,250,93,11,8,131,197,173,80,90,25,161,206,250,144,140,64,168,163,134,140,71,17,7,43,242,236,100,106,119,90,223,213,19,163 };
    byte_vec_t pk { 4,158,11,58,77,247,20,236,47,88,212,7,61,23,54,31,24,28,65,85,224,51,247,84,125,242,113,190,234,158,10,250,24,225,129,202,204,76,222,235,134,113,23,172,212,228,62,10,95,72,175,168,198,141,217,70,2,212,98,154,43,224,185,58,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 199 ") {
    byte_vec_t msg { 47,6,5,49 };
    byte_vec_t sig { 154,128,29,22,62,2,33,170,15,41,156,116,102,216,144,251,85,146,107,193,95,73,87,132,80,183,90,216,153,215,217,9,72,27,38,35,11,221,170,106,209,115,230,82,216,37,167,74,65,248,22,157,2,252,149,15,108,206,227,207,141,89,106,148 };
    byte_vec_t pk { 4,62,243,215,209,47,31,121,227,166,96,250,116,127,46,46,25,13,127,66,234,197,43,72,219,213,220,61,136,71,52,121,100,59,110,193,99,79,224,100,54,67,221,19,16,20,148,0,85,149,109,35,223,67,147,53,61,12,108,24,132,142,170,167,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 199 ") {
    byte_vec_t msg { 152,214,240,46 };
    byte_vec_t sig { 113,89,144,224,18,217,231,229,137,174,168,235,83,242,143,53,147,113,161,74,45,196,108,184,156,66,0,186,159,41,198,154,54,84,79,127,216,163,227,126,120,169,178,185,100,99,48,193,132,80,113,79,56,65,68,96,83,143,195,221,220,132,209,65 };
    byte_vec_t pk { 3,26,144,188,43,120,135,246,204,203,248,108,186,194,101,53,204,232,249,26,163,119,6,202,151,150,158,172,154,57,18,164,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 199 ") {
    byte_vec_t msg { 93,170,207,141 };
    byte_vec_t sig { 24,51,255,1,145,237,120,82,109,47,202,107,20,10,123,89,81,17,139,74,111,17,103,97,247,105,195,63,133,235,253,190,43,253,53,84,202,48,13,103,38,37,0,253,100,165,191,208,19,184,241,115,60,214,99,219,221,166,102,247,146,222,57,98 };
    byte_vec_t pk { 3,68,166,0,162,9,152,24,116,56,76,191,57,31,75,107,201,41,91,72,132,2,16,70,112,158,147,188,148,27,191,49,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 200 ") {
    byte_vec_t msg { 245,50,116,179 };
    byte_vec_t sig { 16,230,176,43,27,149,91,58,88,46,39,22,238,128,35,22,200,34,215,203,7,195,111,71,90,207,36,56,166,99,116,71,226,233,34,164,171,210,16,197,44,9,208,133,10,83,255,145,224,177,108,7,246,159,62,164,114,85,67,10,229,92,15,38 };
    byte_vec_t pk { 4,163,134,25,86,202,25,54,48,172,90,156,19,230,123,84,55,170,147,14,142,4,111,184,124,236,161,193,151,216,15,68,166,180,153,43,146,6,230,174,99,104,185,64,126,140,254,97,252,83,111,127,117,255,175,235,30,161,48,232,56,84,211,17,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 200 ") {
    byte_vec_t msg { 187,244,51,80 };
    byte_vec_t sig { 168,36,65,251,141,42,224,50,171,178,5,29,15,163,193,209,27,190,191,129,32,179,201,253,104,100,97,137,82,229,194,106,12,7,137,244,77,32,179,200,97,31,141,252,63,127,133,207,194,154,189,232,242,31,109,35,122,74,247,130,2,121,227,123 };
    byte_vec_t pk { 4,30,228,141,21,156,125,190,199,20,182,247,8,158,242,122,32,69,211,168,181,95,245,139,83,152,232,165,64,17,3,162,230,77,53,190,99,9,212,23,162,98,89,36,55,230,143,88,50,131,21,128,161,101,51,121,156,198,143,154,113,192,216,251,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 200 ") {
    byte_vec_t msg { 67,141,204,58 };
    byte_vec_t sig { 10,224,231,125,73,254,143,117,32,71,48,33,125,188,211,94,8,72,6,158,227,214,28,246,238,230,227,95,77,109,59,109,136,122,164,237,229,202,226,100,54,65,197,109,155,253,71,40,131,162,54,116,157,0,132,170,231,90,149,246,79,153,179,178 };
    byte_vec_t pk { 2,1,225,82,174,229,144,211,181,198,200,162,10,228,25,251,209,161,93,80,17,57,245,3,250,26,67,43,37,159,198,167,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 200 ") {
    byte_vec_t msg { 136,240,23,222 };
    byte_vec_t sig { 203,216,193,192,8,255,118,128,24,18,156,90,64,163,187,212,35,221,0,151,98,42,45,141,143,68,243,92,212,184,36,111,254,164,94,48,92,137,50,113,61,138,239,76,116,197,240,12,251,250,72,40,27,239,69,67,150,197,26,9,189,217,193,165 };
    byte_vec_t pk { 2,66,189,31,203,141,197,208,15,140,106,143,216,74,51,24,38,104,25,230,145,219,102,51,253,183,11,238,161,36,214,241,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 201 ") {
    byte_vec_t msg { 63,56,184,159 };
    byte_vec_t sig { 121,178,239,54,204,22,183,63,40,171,37,44,145,46,161,112,246,22,152,247,147,12,134,201,42,127,63,122,28,79,254,212,249,11,237,165,124,204,231,214,177,137,54,72,153,113,85,157,99,0,193,110,56,111,59,134,102,15,32,195,9,187,237,26 };
    byte_vec_t pk { 4,139,231,136,63,63,49,126,24,83,235,90,21,194,221,165,6,189,48,3,17,21,254,202,70,96,156,218,72,239,213,35,135,161,211,4,141,82,62,137,139,22,203,147,117,87,117,63,203,99,53,238,238,92,108,185,250,126,224,175,107,230,0,121,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 201 ") {
    byte_vec_t msg { 82,167,10,199 };
    byte_vec_t sig { 250,115,210,164,127,194,94,233,146,39,171,112,77,166,160,170,28,242,165,159,66,202,22,49,138,120,218,138,28,17,20,124,24,194,211,95,65,139,129,242,54,52,189,188,5,141,94,86,165,180,231,60,153,79,94,216,215,219,28,55,151,33,173,165 };
    byte_vec_t pk { 4,187,224,131,132,30,231,172,244,16,149,82,14,247,15,53,76,13,158,135,100,136,95,64,182,158,137,244,74,54,154,46,67,253,64,155,157,105,104,105,200,9,238,13,76,91,24,29,52,7,52,185,233,116,255,250,224,247,177,76,254,240,210,244,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 201 ") {
    byte_vec_t msg { 184,248,237,0 };
    byte_vec_t sig { 168,147,162,79,234,133,240,173,67,34,196,58,249,9,31,129,243,31,124,214,185,110,201,115,93,32,8,38,173,104,146,57,98,139,98,187,79,171,160,232,179,154,117,19,223,62,181,146,61,207,197,111,174,22,248,83,140,181,242,109,45,175,247,236 };
    byte_vec_t pk { 3,239,41,79,120,78,112,8,201,130,149,61,141,17,158,10,44,231,215,229,252,123,96,149,3,233,183,197,85,70,26,11,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 201 ") {
    byte_vec_t msg { 193,236,227,143 };
    byte_vec_t sig { 254,149,23,200,91,139,213,107,30,114,26,45,151,194,26,121,45,214,181,179,236,44,21,141,246,60,134,237,223,128,151,103,241,212,231,14,232,11,54,181,247,240,182,166,22,58,58,231,172,211,94,78,48,148,0,181,89,25,11,175,248,46,215,186 };
    byte_vec_t pk { 2,147,19,183,213,176,189,63,235,222,172,71,190,151,41,254,213,111,224,49,38,252,186,164,71,188,17,255,181,55,233,226,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 202 ") {
    byte_vec_t msg { 81,213,210,40 };
    byte_vec_t sig { 141,17,27,184,9,63,35,44,68,204,1,170,136,147,178,122,33,218,11,236,225,184,118,113,209,87,225,111,212,62,226,185,102,128,42,166,111,205,181,68,61,223,32,109,47,7,173,59,178,9,50,162,220,23,88,132,68,56,219,248,52,248,9,244 };
    byte_vec_t pk { 4,162,32,90,240,3,93,221,172,224,59,148,14,109,229,243,150,247,185,223,25,43,24,91,45,119,11,29,176,198,132,3,255,69,93,59,66,168,107,129,229,120,214,222,236,107,128,49,131,63,224,97,124,215,31,111,9,117,150,157,165,112,100,110,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 202 ") {
    byte_vec_t msg { 95,89,110,223 };
    byte_vec_t sig { 27,82,167,153,184,216,251,75,234,104,175,116,49,87,52,130,103,45,142,43,153,87,7,205,104,242,114,77,102,21,250,39,183,182,44,214,192,216,6,91,92,0,103,202,28,244,18,40,15,44,84,168,228,104,117,232,158,52,72,12,53,8,38,228 };
    byte_vec_t pk { 4,63,145,114,229,207,130,109,12,185,8,40,38,73,46,70,255,165,132,64,70,95,170,244,185,36,17,56,39,169,137,246,163,164,254,245,10,70,27,113,237,176,94,247,239,3,113,82,73,194,211,26,67,232,42,13,37,56,71,236,211,55,73,44,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 202 ") {
    byte_vec_t msg { 248,168,232,151 };
    byte_vec_t sig { 125,188,25,146,66,134,18,154,133,166,125,228,75,153,149,16,44,158,53,97,184,124,20,218,41,3,112,56,206,255,166,139,195,252,173,241,210,68,118,188,57,194,123,52,68,115,103,204,127,106,135,95,234,10,185,20,168,127,163,226,132,74,16,112 };
    byte_vec_t pk { 3,69,122,17,224,222,163,5,153,208,180,9,189,246,189,194,61,121,1,96,71,112,119,41,127,140,91,10,86,132,205,165,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 202 ") {
    byte_vec_t msg { 232,108,120,201 };
    byte_vec_t sig { 46,95,12,189,118,17,50,32,40,113,169,152,73,204,202,44,239,30,12,123,238,133,212,71,232,86,247,151,86,1,229,171,94,59,70,74,42,133,145,0,71,153,36,50,119,147,37,113,233,112,140,190,21,182,5,88,128,238,84,148,114,59,2,91 };
    byte_vec_t pk { 3,23,183,233,150,141,208,146,206,189,216,190,50,1,117,50,193,56,244,226,205,4,12,249,184,39,147,207,22,202,114,246,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 203 ") {
    byte_vec_t msg { 251,126,5,137 };
    byte_vec_t sig { 136,229,250,68,213,185,253,230,188,1,212,78,150,177,92,37,167,31,48,73,46,105,198,165,1,196,132,180,225,173,98,132,127,185,142,33,210,170,187,119,244,5,231,68,224,32,81,144,94,210,88,81,105,94,119,105,63,216,109,80,18,49,77,10 };
    byte_vec_t pk { 4,127,100,193,170,140,226,241,166,228,253,28,43,230,224,83,55,78,217,21,36,128,125,182,63,210,210,232,2,244,63,125,250,56,106,241,167,9,225,65,111,164,96,169,233,224,105,252,201,126,36,142,69,183,231,5,233,151,21,224,56,133,176,210,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 203 ") {
    byte_vec_t msg { 191,107,154,29 };
    byte_vec_t sig { 138,199,47,68,189,49,48,4,99,36,136,199,214,228,174,37,129,171,55,126,150,242,52,185,39,175,226,240,112,165,183,24,116,224,70,104,5,170,70,199,244,108,165,211,9,69,169,12,193,172,218,81,132,239,36,122,124,106,196,206,221,97,34,65 };
    byte_vec_t pk { 4,34,158,187,73,32,2,24,223,218,76,182,168,103,153,143,95,224,23,171,136,205,230,130,212,37,63,253,142,242,245,209,179,143,0,132,80,157,16,199,139,100,11,223,157,217,66,238,205,7,118,116,60,17,67,222,33,35,243,228,133,82,51,231,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 203 ") {
    byte_vec_t msg { 89,233,157,86 };
    byte_vec_t sig { 192,220,102,227,188,231,255,240,226,244,29,78,239,135,75,248,123,70,219,56,37,127,199,80,9,228,126,93,236,176,228,211,123,28,143,160,181,188,169,134,115,16,240,71,200,129,244,110,106,114,157,176,200,219,161,63,139,119,58,195,132,250,201,77 };
    byte_vec_t pk { 3,176,128,253,101,227,84,191,111,224,94,146,27,11,129,233,252,169,113,214,34,175,246,142,26,49,91,78,167,171,141,60,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 203 ") {
    byte_vec_t msg { 188,194,21,7 };
    byte_vec_t sig { 110,32,8,87,234,91,62,212,152,208,169,56,163,154,56,237,154,8,225,146,142,231,219,227,126,73,230,197,221,68,254,72,56,223,128,108,137,43,205,47,57,152,92,63,181,100,242,152,105,91,120,42,183,232,239,199,224,92,47,165,241,63,170,67 };
    byte_vec_t pk { 2,235,51,221,66,169,88,105,131,191,199,202,31,184,170,165,22,247,218,159,155,195,181,69,223,78,178,57,67,50,62,172,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 204 ") {
    byte_vec_t msg { 70,89,68,242 };
    byte_vec_t sig { 6,242,203,235,44,9,60,39,216,90,170,201,222,74,123,2,211,156,121,111,213,253,25,208,158,38,20,159,83,251,43,80,207,140,153,126,59,104,235,36,101,0,141,229,246,113,50,94,33,206,223,188,138,244,103,27,121,89,160,14,121,157,148,163 };
    byte_vec_t pk { 4,87,20,109,118,148,24,21,43,88,94,0,131,48,183,210,199,28,94,206,166,118,20,230,157,145,166,213,226,134,169,185,240,193,169,166,40,130,45,2,143,198,70,137,130,223,118,3,14,195,87,224,101,47,190,87,252,179,172,210,113,224,121,57,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 204 ") {
    byte_vec_t msg { 179,87,47,59 };
    byte_vec_t sig { 48,11,230,218,60,68,0,156,31,196,45,207,9,153,33,122,39,135,70,91,97,33,199,220,166,32,2,72,81,214,233,22,213,206,65,25,185,229,241,163,224,131,118,210,186,129,74,66,231,162,7,133,155,192,134,221,148,187,220,133,201,112,172,58 };
    byte_vec_t pk { 4,209,108,56,130,149,189,181,102,253,245,210,92,87,36,149,30,251,45,250,4,140,228,0,34,174,210,99,162,119,68,253,133,32,187,65,4,41,36,131,184,144,11,205,241,154,21,190,118,44,99,7,210,210,122,250,247,69,79,93,155,173,142,76,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 204 ") {
    byte_vec_t msg { 141,70,152,121 };
    byte_vec_t sig { 25,78,209,70,201,173,156,74,240,40,48,37,199,126,92,58,57,8,24,193,90,170,67,193,211,136,33,138,25,145,24,146,149,224,174,224,105,151,169,41,152,130,28,188,39,214,47,164,212,156,91,150,169,237,172,242,223,102,243,23,205,165,232,199 };
    byte_vec_t pk { 3,141,78,167,114,81,45,96,125,11,24,32,14,213,46,233,176,40,42,53,67,4,91,68,186,48,5,58,225,15,137,30,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 204 ") {
    byte_vec_t msg { 15,18,163,173 };
    byte_vec_t sig { 228,155,25,185,166,142,23,246,137,174,149,60,115,204,26,57,22,241,210,153,149,238,79,56,202,210,52,213,3,33,55,203,174,65,219,251,213,156,224,191,80,251,255,252,88,50,144,13,113,9,63,114,121,234,37,175,165,49,191,131,251,221,224,136 };
    byte_vec_t pk { 2,125,103,147,68,228,219,118,34,89,134,11,193,58,241,199,232,229,147,250,193,231,23,113,151,141,121,97,158,68,23,180,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 205 ") {
    byte_vec_t msg { 148,224,231,83 };
    byte_vec_t sig { 129,12,174,177,87,79,5,246,195,233,235,135,79,60,206,149,136,106,77,212,148,190,109,54,248,251,27,49,138,27,87,249,75,174,179,94,212,62,225,165,86,74,8,188,213,31,223,51,255,29,51,4,162,55,227,129,139,63,165,218,4,13,110,89 };
    byte_vec_t pk { 4,225,160,91,246,70,194,76,175,99,28,127,217,71,241,79,89,101,0,5,89,170,53,1,114,194,55,127,134,153,232,129,129,60,224,111,70,141,138,146,115,216,109,163,149,166,135,164,237,124,206,241,193,154,219,74,93,88,186,35,251,127,207,176,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 205 ") {
    byte_vec_t msg { 210,251,195,198 };
    byte_vec_t sig { 104,182,213,134,200,154,238,253,85,176,137,203,165,12,73,19,229,0,9,103,65,29,11,59,34,85,247,12,158,36,20,52,213,136,32,253,73,125,203,201,200,220,5,141,208,187,48,148,13,180,39,177,233,122,171,79,13,87,68,249,79,90,65,140 };
    byte_vec_t pk { 4,233,175,135,163,244,68,15,62,229,30,27,17,74,207,89,38,216,8,246,135,63,124,44,236,122,221,217,77,124,181,125,185,170,178,140,97,10,160,85,147,189,193,203,243,188,125,35,247,153,142,31,36,155,58,189,233,239,100,192,59,28,24,113,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 205 ") {
    byte_vec_t msg { 193,53,173,91 };
    byte_vec_t sig { 203,168,115,24,198,135,116,0,52,160,32,171,94,218,123,164,200,35,211,79,82,100,184,158,86,59,177,75,220,178,239,200,181,196,217,46,39,244,89,213,180,19,224,103,121,35,217,139,94,212,198,220,86,190,17,137,78,70,46,122,116,220,31,9 };
    byte_vec_t pk { 3,18,73,125,148,218,171,166,228,130,88,132,153,75,134,72,175,217,149,81,63,227,131,126,201,7,110,241,117,17,142,116,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 205 ") {
    byte_vec_t msg { 126,0,172,215 };
    byte_vec_t sig { 54,154,220,38,201,167,148,23,38,234,155,5,120,52,106,81,140,157,54,119,165,189,164,166,218,214,134,162,228,10,75,228,113,126,33,83,195,29,118,79,147,123,183,98,99,85,211,171,210,176,253,121,164,64,43,130,36,37,132,131,246,10,117,26 };
    byte_vec_t pk { 2,91,78,34,106,223,178,43,88,130,181,41,44,132,202,97,247,235,225,19,39,216,86,231,180,145,208,8,58,86,62,84,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 206 ") {
    byte_vec_t msg { 119,145,212,44 };
    byte_vec_t sig { 50,81,159,15,238,179,65,109,229,68,55,77,174,93,188,197,154,203,63,44,190,110,210,19,200,42,205,133,176,202,91,65,254,95,242,2,174,62,163,217,218,220,243,61,68,162,183,50,100,36,103,242,209,43,141,242,144,35,241,255,67,21,137,142 };
    byte_vec_t pk { 4,254,22,93,163,233,13,163,252,125,30,103,29,147,255,38,76,40,183,251,46,253,18,3,88,80,89,247,247,21,105,250,100,6,53,112,239,109,195,66,36,48,60,117,124,227,161,145,34,117,193,3,249,163,31,13,0,49,121,245,30,122,210,45,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 206 ") {
    byte_vec_t msg { 93,75,156,241 };
    byte_vec_t sig { 27,35,156,132,230,51,49,188,254,9,62,82,43,63,242,238,77,248,150,241,85,229,196,226,39,45,252,234,201,85,177,24,124,110,151,137,45,195,196,173,86,46,14,12,86,239,101,24,45,43,141,226,189,98,62,146,30,126,34,236,203,223,11,4 };
    byte_vec_t pk { 4,245,250,138,251,0,137,249,173,48,85,94,92,12,64,192,163,44,248,55,175,216,12,113,185,153,215,160,93,21,243,239,191,109,233,1,217,9,181,218,119,98,192,18,22,218,203,205,150,103,71,157,228,246,81,139,121,72,151,132,86,121,208,230,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 206 ") {
    byte_vec_t msg { 12,90,182,199 };
    byte_vec_t sig { 166,221,43,207,161,215,78,211,97,163,8,195,103,67,32,195,243,61,54,72,178,239,29,103,139,176,74,241,113,249,46,250,162,111,150,113,150,211,180,32,51,210,187,144,226,156,80,140,131,88,245,8,142,130,77,12,137,32,71,56,104,148,131,147 };
    byte_vec_t pk { 3,229,196,56,24,145,145,209,91,193,117,16,138,253,37,20,245,118,16,101,71,43,165,118,205,106,184,254,250,180,156,93,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 206 ") {
    byte_vec_t msg { 106,150,161,151 };
    byte_vec_t sig { 53,19,85,5,36,172,2,74,58,140,84,122,145,149,163,58,199,237,71,241,207,137,156,141,93,137,147,93,86,236,178,93,175,146,237,226,149,142,78,202,131,66,37,40,226,171,17,31,210,213,90,229,115,20,50,79,235,68,127,201,175,232,84,202 };
    byte_vec_t pk { 2,168,41,186,152,114,147,145,188,252,125,7,173,26,142,184,34,195,161,97,66,156,21,190,197,251,19,245,71,246,35,167,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 207 ") {
    byte_vec_t msg { 129,42,122,238 };
    byte_vec_t sig { 199,222,244,245,13,135,171,234,58,212,67,102,184,46,49,88,134,132,14,125,121,244,71,158,42,121,222,178,54,97,217,100,188,128,144,197,42,0,8,248,83,14,114,182,44,63,24,253,118,23,45,161,246,43,223,41,119,82,172,90,43,239,70,45 };
    byte_vec_t pk { 4,175,142,194,39,53,188,163,157,227,119,165,153,106,239,160,148,148,46,131,2,181,222,143,205,112,174,25,211,49,199,133,145,218,148,73,234,60,13,12,97,97,4,207,92,4,121,71,219,60,165,155,139,213,241,47,24,95,216,218,155,180,161,203,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 207 ") {
    byte_vec_t msg { 139,197,79,242 };
    byte_vec_t sig { 6,240,97,225,215,52,201,244,226,228,132,135,164,253,63,65,21,37,103,79,130,244,55,190,63,183,78,144,243,9,101,145,71,117,210,210,30,7,189,254,175,201,194,206,228,250,23,1,236,17,131,164,47,36,185,243,117,67,3,232,255,161,113,172 };
    byte_vec_t pk { 4,239,56,54,213,117,211,67,138,208,253,19,202,154,86,7,26,22,63,170,22,19,243,183,231,39,214,65,187,227,213,227,87,205,189,205,200,39,94,8,5,12,225,25,61,169,132,109,209,236,254,208,80,23,248,215,70,241,255,9,209,131,75,94,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 207 ") {
    byte_vec_t msg { 83,46,57,64 };
    byte_vec_t sig { 209,149,222,215,125,216,120,174,207,74,34,111,208,168,76,213,12,105,193,113,57,240,41,23,69,242,103,81,143,189,12,31,68,172,38,57,111,70,102,230,14,178,128,223,129,10,86,220,39,217,125,1,78,132,166,126,40,24,227,142,45,248,80,149 };
    byte_vec_t pk { 3,140,93,152,20,140,162,56,191,156,202,62,64,204,164,211,124,155,20,46,166,8,188,137,191,180,85,157,64,157,32,122,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 207 ") {
    byte_vec_t msg { 160,158,32,86 };
    byte_vec_t sig { 219,202,182,13,142,120,170,15,77,44,158,88,166,155,13,208,133,96,139,172,11,20,129,36,94,195,45,110,255,250,254,182,161,125,180,134,7,228,247,83,123,14,143,137,230,163,240,216,220,223,36,26,179,156,150,255,233,21,246,88,132,101,146,98 };
    byte_vec_t pk { 2,76,1,153,70,192,235,26,73,173,143,66,145,70,229,215,177,244,2,50,75,21,14,72,208,122,96,252,112,166,43,21,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 208 ") {
    byte_vec_t msg { 171,127,120,139 };
    byte_vec_t sig { 41,92,93,111,180,170,87,136,174,34,249,76,245,49,35,215,198,193,174,16,184,69,168,106,174,214,111,159,148,184,252,153,44,10,10,243,130,191,70,248,210,186,119,102,180,224,225,106,117,123,117,34,83,249,158,116,97,240,162,247,51,56,152,35 };
    byte_vec_t pk { 4,21,140,140,241,182,55,103,212,199,243,202,25,117,251,107,250,241,97,139,186,10,136,198,34,42,103,182,30,237,88,218,23,245,169,93,30,90,195,242,228,186,153,218,96,23,206,208,139,122,50,125,74,119,70,105,169,16,73,108,255,170,19,92,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 208 ") {
    byte_vec_t msg { 242,142,199,169 };
    byte_vec_t sig { 119,89,97,26,106,90,108,250,84,131,156,117,96,38,43,58,42,102,220,244,6,229,183,143,78,200,167,127,90,221,196,8,227,114,148,251,107,173,242,81,35,127,219,88,229,58,163,122,178,135,239,252,76,252,87,8,17,184,68,131,52,0,159,59 };
    byte_vec_t pk { 4,19,163,229,216,255,80,224,99,170,20,203,231,110,92,9,248,240,198,219,246,31,32,212,137,50,113,36,142,26,24,226,70,129,159,29,22,253,148,69,111,171,134,76,134,163,57,244,179,114,254,17,227,157,141,235,36,204,143,116,159,59,134,239,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 208 ") {
    byte_vec_t msg { 121,124,248,117 };
    byte_vec_t sig { 148,141,4,73,114,64,255,255,195,134,124,131,13,192,9,25,5,55,181,237,204,85,142,70,46,107,36,213,241,33,78,99,218,59,110,110,238,11,162,45,156,78,121,29,17,56,124,178,10,214,135,59,205,69,208,179,64,144,213,254,249,201,255,122 };
    byte_vec_t pk { 2,132,91,24,203,88,204,200,12,64,18,250,67,217,12,0,190,251,74,120,94,129,41,187,105,123,148,200,3,173,36,94,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 208 ") {
    byte_vec_t msg { 96,204,78,132 };
    byte_vec_t sig { 87,36,51,140,224,112,245,138,82,138,124,168,3,142,210,1,226,175,76,58,95,26,16,86,47,79,235,181,197,199,15,123,163,211,166,234,57,100,129,134,64,128,2,26,17,215,117,189,70,241,153,12,192,43,88,165,232,138,236,50,89,218,12,150 };
    byte_vec_t pk { 3,62,65,144,141,71,169,142,160,4,215,58,116,190,108,152,152,131,89,0,10,84,74,55,64,158,213,77,114,2,23,18,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 209 ") {
    byte_vec_t msg { 176,65,135,114 };
    byte_vec_t sig { 168,90,218,107,232,143,31,72,48,22,241,185,188,152,68,131,150,158,238,137,177,131,254,113,15,204,156,125,240,82,152,243,39,87,183,34,170,227,106,167,180,185,172,145,100,2,210,134,14,76,211,142,192,193,230,182,183,254,132,50,79,10,180,204 };
    byte_vec_t pk { 4,106,31,95,76,147,18,146,128,235,167,28,120,245,132,129,40,34,249,0,142,197,25,114,45,88,109,204,255,110,26,254,16,111,54,22,139,181,153,75,225,240,173,194,171,219,121,100,247,42,78,228,232,86,199,188,212,252,147,138,47,57,230,42,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 209 ") {
    byte_vec_t msg { 13,75,208,239 };
    byte_vec_t sig { 254,29,233,150,193,6,57,30,154,115,161,190,103,17,229,253,248,184,249,179,161,56,138,71,67,164,172,18,209,46,166,27,65,62,48,52,69,211,144,106,212,229,159,191,20,13,24,167,251,4,4,131,79,144,27,71,244,68,245,53,47,13,21,231 };
    byte_vec_t pk { 4,159,152,171,182,84,40,127,162,44,131,36,123,233,238,16,107,12,161,173,16,12,99,241,157,114,181,0,211,191,240,253,158,98,7,25,6,245,187,164,89,23,6,66,127,84,193,250,85,73,8,160,108,119,242,220,20,248,3,110,169,162,4,47,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 209 ") {
    byte_vec_t msg { 158,97,255,119 };
    byte_vec_t sig { 134,77,26,158,18,30,92,216,22,23,58,39,18,69,238,18,201,101,241,85,29,235,120,26,80,93,154,173,187,88,98,14,90,197,160,217,191,173,124,234,201,26,32,174,93,129,37,120,127,10,153,3,206,65,244,16,222,6,174,58,30,26,160,97 };
    byte_vec_t pk { 2,227,252,233,36,164,108,140,124,125,223,171,136,17,49,52,92,63,148,113,104,165,111,175,90,110,10,75,98,81,185,4,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 209 ") {
    byte_vec_t msg { 63,201,67,117 };
    byte_vec_t sig { 117,203,10,104,15,173,37,251,105,101,240,85,178,206,45,2,82,9,248,96,38,80,191,144,112,22,192,95,141,97,169,180,76,245,201,32,135,2,54,53,229,179,80,196,41,134,5,112,132,45,58,116,30,222,207,102,189,237,123,236,120,254,239,49 };
    byte_vec_t pk { 3,206,130,253,190,158,222,221,2,236,98,16,41,107,132,151,122,99,80,5,113,11,57,31,79,249,12,215,122,169,129,130,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 210 ") {
    byte_vec_t msg { 125,15,112,79 };
    byte_vec_t sig { 2,81,205,218,23,114,229,216,53,240,54,222,167,211,244,184,253,58,28,230,202,241,50,42,157,77,222,1,23,119,149,69,188,45,112,77,137,209,72,16,176,176,194,214,1,60,137,112,138,125,233,161,166,76,229,74,108,191,148,169,234,245,242,17 };
    byte_vec_t pk { 4,216,248,45,236,216,61,119,199,186,196,129,131,84,9,76,184,121,66,184,198,205,101,113,215,34,173,58,241,69,101,177,12,12,160,160,165,213,168,71,14,58,29,167,178,73,242,49,160,49,121,88,40,105,41,208,56,115,5,186,118,207,84,51,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 210 ") {
    byte_vec_t msg { 206,6,12,187 };
    byte_vec_t sig { 226,49,52,206,56,192,19,105,57,15,15,153,99,33,4,254,66,200,159,243,177,3,216,131,72,28,164,102,169,173,120,87,136,191,15,174,6,0,97,236,228,151,102,16,220,54,106,68,51,222,109,192,196,219,165,11,82,216,63,85,40,84,75,14 };
    byte_vec_t pk { 4,111,198,30,72,107,226,99,171,203,241,3,120,195,52,93,121,55,165,29,133,54,204,202,154,233,123,153,166,209,78,231,147,53,201,149,193,186,142,119,234,48,160,79,103,142,172,212,82,215,23,242,175,219,26,154,243,41,94,124,71,18,99,188,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 210 ") {
    byte_vec_t msg { 158,104,115,223 };
    byte_vec_t sig { 126,215,11,76,90,186,110,72,182,229,222,166,19,197,113,94,109,8,124,235,155,198,99,111,69,87,191,215,251,151,178,61,83,34,203,119,155,177,232,45,201,123,74,200,225,115,164,83,239,23,224,13,87,140,170,137,206,209,67,217,24,219,220,110 };
    byte_vec_t pk { 2,163,36,133,35,161,151,51,87,139,168,112,184,146,10,78,122,183,69,193,229,229,76,152,150,206,173,174,106,77,96,55,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 210 ") {
    byte_vec_t msg { 142,207,89,249 };
    byte_vec_t sig { 43,32,214,233,119,11,167,237,95,89,139,54,191,232,228,222,43,189,146,48,9,76,40,1,47,153,248,240,169,164,234,251,206,252,99,102,143,130,25,174,157,133,122,4,184,22,157,163,89,80,229,11,204,3,126,139,22,143,72,170,78,59,238,105 };
    byte_vec_t pk { 3,165,141,144,34,208,68,33,72,240,183,13,48,49,204,32,177,113,160,113,119,124,121,239,74,68,57,88,167,11,222,176,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 211 ") {
    byte_vec_t msg { 132,155,241,205 };
    byte_vec_t sig { 56,145,155,220,200,52,209,150,247,111,93,72,41,103,251,154,44,95,51,249,118,118,179,17,98,211,223,188,221,70,199,54,55,19,64,9,49,213,184,125,158,255,215,246,52,116,35,25,236,49,79,134,88,183,30,145,152,33,205,26,141,127,178,207 };
    byte_vec_t pk { 4,241,87,2,209,185,140,23,242,27,149,140,15,186,193,142,66,39,75,98,227,17,45,150,31,33,32,130,236,13,110,148,172,143,121,133,105,184,11,250,117,92,80,145,220,147,159,108,18,221,85,35,236,39,217,49,136,231,225,104,121,116,214,212,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 211 ") {
    byte_vec_t msg { 255,196,157,184 };
    byte_vec_t sig { 157,200,182,111,244,184,117,123,197,42,47,190,245,249,209,33,181,136,147,74,143,193,54,189,44,86,110,119,18,60,153,189,61,26,194,38,135,208,16,25,224,149,216,4,197,186,207,165,236,128,211,242,226,76,254,215,30,178,123,162,126,3,248,253 };
    byte_vec_t pk { 4,101,117,96,8,120,72,10,198,79,133,209,64,192,243,81,201,24,177,172,232,32,234,5,10,195,76,173,247,145,23,65,177,47,207,66,97,154,64,82,88,247,242,48,42,111,74,177,183,179,246,102,72,252,154,139,14,65,251,189,206,252,109,145,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 211 ") {
    byte_vec_t msg { 77,64,213,6 };
    byte_vec_t sig { 13,155,2,30,151,115,166,243,166,19,124,120,112,107,46,9,66,111,12,80,72,224,153,225,245,242,135,13,220,136,125,29,145,25,240,234,179,13,106,1,219,204,124,58,43,3,194,32,122,221,0,97,38,88,10,0,103,117,120,226,127,34,246,210 };
    byte_vec_t pk { 2,170,53,38,179,11,79,105,159,107,47,152,177,22,108,49,108,240,68,149,2,47,201,21,14,242,13,29,48,63,23,242,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 211 ") {
    byte_vec_t msg { 7,207,37,251 };
    byte_vec_t sig { 135,17,137,65,195,221,238,124,205,72,208,133,217,117,168,252,169,61,33,215,54,74,98,12,215,167,237,66,34,26,45,93,161,60,14,163,115,200,125,57,174,103,73,177,96,169,25,27,152,173,253,176,248,224,27,238,142,242,2,212,129,207,26,187 };
    byte_vec_t pk { 2,41,23,7,97,85,82,243,245,119,90,90,139,11,225,127,184,158,183,67,223,229,180,138,149,127,99,61,125,181,181,140,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 212 ") {
    byte_vec_t msg { 160,61,202,178 };
    byte_vec_t sig { 4,47,80,163,198,140,207,238,109,167,197,1,38,71,229,41,111,52,59,88,16,155,149,39,186,16,13,116,190,2,59,170,31,152,172,162,3,248,37,137,181,111,100,49,142,177,162,148,234,156,136,225,81,42,16,11,164,42,14,190,171,166,58,50 };
    byte_vec_t pk { 4,243,122,172,99,112,101,70,61,235,241,211,171,141,212,87,95,65,12,160,19,82,109,252,243,49,172,39,176,85,50,175,155,104,14,49,172,220,240,196,187,185,117,20,95,10,181,170,205,4,154,147,164,102,50,230,243,123,228,153,199,118,214,67,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 212 ") {
    byte_vec_t msg { 208,228,165,53 };
    byte_vec_t sig { 223,163,145,164,141,160,209,118,223,87,113,23,244,61,124,77,49,153,183,22,127,155,211,127,166,254,180,143,30,91,185,145,27,81,200,31,99,173,231,200,60,35,73,20,18,48,156,195,249,98,156,101,247,203,180,52,150,90,10,19,35,93,147,64 };
    byte_vec_t pk { 4,215,222,52,226,84,141,241,225,175,55,243,206,146,64,57,36,56,9,108,208,133,181,127,242,124,253,82,54,193,32,77,18,198,142,132,243,66,147,4,236,67,144,63,61,143,48,241,209,191,237,29,29,67,159,16,67,47,93,209,227,6,239,150,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 212 ") {
    byte_vec_t msg { 37,104,26,69 };
    byte_vec_t sig { 106,62,187,49,92,103,66,200,182,246,30,136,220,36,1,97,194,114,99,227,207,71,162,191,42,117,145,125,61,166,40,159,178,205,104,79,222,185,196,194,83,228,195,95,18,24,149,197,143,227,173,177,30,163,39,2,166,98,151,206,206,119,29,130 };
    byte_vec_t pk { 2,192,194,176,228,21,0,102,50,195,60,177,134,98,5,82,139,157,161,162,17,238,79,125,101,74,224,16,181,155,18,118,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 212 ") {
    byte_vec_t msg { 225,164,37,162 };
    byte_vec_t sig { 68,86,13,170,117,167,64,172,205,102,125,57,2,6,96,49,184,148,201,49,225,132,66,61,29,220,180,109,21,166,54,56,62,132,177,14,18,237,254,23,86,118,170,188,182,117,42,53,5,232,174,143,66,43,199,213,251,159,78,95,102,251,61,10 };
    byte_vec_t pk { 2,181,19,245,115,37,92,9,220,141,88,214,165,42,102,193,222,194,176,191,228,36,119,191,45,225,79,173,144,240,157,182,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 213 ") {
    byte_vec_t msg { 12,59,142,94 };
    byte_vec_t sig { 75,175,120,98,202,21,42,25,95,23,199,198,20,45,3,146,4,43,67,145,55,245,17,43,124,47,9,115,89,52,84,165,100,199,195,235,198,30,54,53,185,244,93,185,144,141,25,208,177,227,145,60,147,30,127,129,13,255,236,218,123,56,118,101 };
    byte_vec_t pk { 4,40,92,232,81,59,60,22,190,187,189,121,189,29,123,241,108,19,49,153,239,180,54,168,121,174,190,84,17,164,248,82,203,231,169,18,118,39,177,62,2,66,53,141,21,40,201,43,6,110,130,199,234,35,213,173,176,180,1,127,238,98,114,160,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 213 ") {
    byte_vec_t msg { 244,3,41,115 };
    byte_vec_t sig { 146,144,15,45,209,157,107,17,223,26,238,28,54,212,96,167,86,249,29,82,98,102,92,206,253,114,10,228,29,142,139,230,81,91,8,152,253,95,143,107,45,215,243,188,195,22,171,146,102,60,17,197,71,223,69,254,159,31,98,233,54,152,123,23 };
    byte_vec_t pk { 4,92,159,174,144,2,180,174,230,29,75,195,202,160,183,195,57,33,176,15,13,186,107,194,104,43,7,19,102,214,1,248,230,66,159,103,59,249,188,67,144,108,145,109,167,116,49,42,212,179,104,29,29,189,16,0,50,151,46,147,24,228,152,111,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 213 ") {
    byte_vec_t msg { 130,26,53,193 };
    byte_vec_t sig { 166,99,172,126,50,166,14,75,194,202,16,37,149,130,87,216,114,158,115,243,255,195,255,212,35,201,53,16,46,215,136,133,107,12,222,25,132,243,69,149,143,105,79,35,208,9,190,142,165,54,41,57,214,172,248,159,99,165,210,116,142,188,53,11 };
    byte_vec_t pk { 3,32,156,242,72,104,157,69,32,37,25,252,224,47,230,215,4,165,76,198,155,207,131,134,181,203,53,106,118,78,140,115,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 213 ") {
    byte_vec_t msg { 40,254,188,65 };
    byte_vec_t sig { 230,229,4,184,124,203,35,80,78,131,250,223,243,13,234,124,152,53,128,66,205,56,99,30,157,242,207,120,3,153,4,46,145,153,47,214,35,27,168,134,209,147,31,198,169,194,98,115,149,202,113,138,21,68,3,254,155,239,219,116,7,79,123,96 };
    byte_vec_t pk { 2,108,121,123,132,166,217,224,157,230,33,40,237,99,116,64,38,175,14,145,26,43,173,99,167,21,143,120,140,34,141,114,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 214 ") {
    byte_vec_t msg { 206,162,218,137 };
    byte_vec_t sig { 202,254,212,88,253,57,144,154,167,6,121,118,27,194,92,124,119,175,212,72,73,215,211,16,49,24,42,197,198,129,16,244,193,176,30,248,151,5,5,23,104,238,145,253,176,204,156,68,55,28,1,147,168,103,198,0,30,126,179,125,201,68,222,134 };
    byte_vec_t pk { 4,43,66,126,130,198,117,155,21,201,157,142,98,168,141,224,121,102,29,5,179,191,72,12,50,228,216,57,151,198,235,18,52,132,81,132,36,150,236,194,147,171,46,84,214,216,20,166,208,103,77,146,22,37,132,10,176,55,56,247,165,32,113,152,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 214 ") {
    byte_vec_t msg { 155,37,20,68 };
    byte_vec_t sig { 2,66,252,138,67,145,1,27,121,81,16,114,129,168,15,177,94,36,46,192,206,172,206,247,5,114,223,16,44,41,108,192,241,9,95,87,157,219,100,57,225,229,150,140,120,3,238,87,5,75,180,170,112,213,45,244,217,5,206,219,208,165,254,148 };
    byte_vec_t pk { 4,141,239,172,152,185,247,52,7,154,51,169,246,193,56,76,155,236,223,27,205,26,231,79,115,241,74,85,104,37,81,149,184,146,82,194,193,18,23,241,229,86,173,81,29,241,88,83,114,93,141,102,34,110,202,198,102,121,178,153,19,95,47,186,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 214 ") {
    byte_vec_t msg { 40,163,181,101 };
    byte_vec_t sig { 101,73,135,41,150,71,117,63,232,121,199,42,114,211,75,97,22,159,84,213,9,58,189,42,124,154,167,216,114,24,9,177,92,41,230,242,158,156,59,215,96,114,228,32,113,67,43,65,114,228,164,167,218,17,144,47,238,223,40,85,222,249,91,187 };
    byte_vec_t pk { 3,74,235,5,192,178,14,81,203,55,141,2,83,155,189,95,14,234,69,206,35,110,178,163,91,219,235,226,16,214,61,229,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 214 ") {
    byte_vec_t msg { 75,238,240,50 };
    byte_vec_t sig { 115,78,228,255,56,135,16,226,68,160,237,173,76,11,152,60,97,71,132,60,115,115,158,20,163,131,242,135,235,96,132,252,137,161,111,238,233,190,76,144,247,145,63,0,158,247,17,125,40,17,33,122,67,153,233,140,197,126,85,197,98,240,45,138 };
    byte_vec_t pk { 3,182,98,29,24,168,174,43,237,34,103,41,5,42,220,170,69,242,224,2,19,250,53,219,216,71,59,111,254,45,229,203,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 215 ") {
    byte_vec_t msg { 12,200,35,52 };
    byte_vec_t sig { 163,148,237,43,44,72,116,118,229,181,77,14,237,224,209,213,54,201,189,248,42,111,148,255,53,149,28,95,34,87,77,38,183,9,168,65,148,185,98,209,70,185,126,231,187,149,164,182,172,125,179,140,92,254,68,129,111,115,114,3,242,163,215,129 };
    byte_vec_t pk { 4,65,194,253,75,105,241,112,190,48,31,198,201,42,233,160,201,247,190,237,6,211,128,249,127,72,148,133,243,52,50,172,200,244,128,219,56,27,150,203,30,106,192,201,178,154,189,70,37,199,76,3,253,234,178,27,134,173,45,247,224,105,142,24,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 215 ") {
    byte_vec_t msg { 192,95,129,88 };
    byte_vec_t sig { 96,58,27,192,134,243,155,25,219,194,175,185,240,173,136,231,84,143,91,105,143,248,60,68,149,158,233,100,58,241,253,138,166,148,127,139,225,37,165,28,240,14,156,235,133,91,115,129,113,75,209,248,25,93,106,104,183,65,176,105,20,218,12,84 };
    byte_vec_t pk { 4,192,151,50,179,214,117,96,250,81,126,121,175,204,134,117,109,246,188,122,202,184,14,32,12,49,232,220,71,116,215,40,33,74,46,155,234,150,106,160,193,88,32,110,189,4,211,21,27,129,84,221,87,226,84,184,27,19,171,104,50,192,233,252,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 215 ") {
    byte_vec_t msg { 197,163,78,244 };
    byte_vec_t sig { 134,147,4,130,81,128,18,213,41,208,250,188,152,188,80,221,66,126,242,81,117,229,9,20,57,164,186,95,50,142,100,146,129,249,184,82,103,117,171,150,146,128,144,139,60,136,138,99,207,220,143,241,255,173,121,225,239,144,154,255,46,44,80,21 };
    byte_vec_t pk { 3,74,128,176,91,142,253,98,54,61,219,127,190,229,146,141,180,247,169,206,215,92,127,87,0,46,48,90,229,242,70,165,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 215 ") {
    byte_vec_t msg { 95,159,28,25 };
    byte_vec_t sig { 144,63,189,59,90,189,71,20,200,27,158,250,208,250,254,76,102,48,11,188,8,225,199,90,176,37,163,230,47,9,104,239,192,182,254,180,248,11,58,74,118,88,27,56,59,208,226,192,182,238,153,198,109,225,138,77,17,3,126,104,73,137,243,97 };
    byte_vec_t pk { 2,155,105,71,7,207,94,130,66,137,131,226,107,11,58,227,52,117,15,148,9,166,89,56,4,174,71,64,102,146,246,254,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 216 ") {
    byte_vec_t msg { 59,28,208,37 };
    byte_vec_t sig { 101,174,113,89,230,135,72,115,199,182,43,10,184,110,72,37,215,231,210,111,243,232,102,122,134,37,40,3,20,50,199,249,186,4,50,35,45,147,127,205,41,40,102,255,149,244,4,24,203,145,100,133,54,128,62,245,250,150,187,60,185,244,77,85 };
    byte_vec_t pk { 4,96,194,160,29,142,63,129,46,198,136,58,94,65,223,236,187,172,166,104,235,47,243,42,244,215,65,157,213,182,113,169,195,206,201,11,87,71,183,62,172,100,79,84,250,207,38,131,170,177,23,61,133,233,251,146,55,14,252,169,55,113,229,116,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 216 ") {
    byte_vec_t msg { 13,105,236,154 };
    byte_vec_t sig { 44,140,4,26,246,70,111,18,12,80,64,73,15,189,223,41,192,49,108,48,83,243,178,179,20,242,27,110,84,235,210,76,25,11,134,43,253,208,115,144,224,111,61,176,119,60,121,196,22,58,156,46,109,102,109,99,82,162,9,219,179,141,79,117 };
    byte_vec_t pk { 4,154,187,62,5,179,177,209,123,64,197,96,35,72,54,30,128,23,48,15,176,201,84,248,214,224,190,46,32,61,8,58,218,126,146,22,181,131,218,243,100,235,85,148,120,121,200,95,86,210,199,87,41,238,16,78,25,171,56,123,251,71,16,202,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 216 ") {
    byte_vec_t msg { 21,172,193,189 };
    byte_vec_t sig { 237,137,192,47,19,221,15,53,217,247,12,64,3,67,115,73,7,86,136,165,25,223,107,83,35,17,8,117,251,241,109,32,10,117,184,36,142,45,127,100,154,51,244,134,136,56,51,116,198,0,66,223,242,47,119,12,188,97,150,22,117,73,203,8 };
    byte_vec_t pk { 3,114,154,199,206,71,130,209,235,135,223,34,19,187,228,252,220,187,199,112,73,75,210,16,48,131,102,121,199,111,176,54,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 216 ") {
    byte_vec_t msg { 185,0,210,245 };
    byte_vec_t sig { 33,3,36,140,255,90,182,70,126,15,30,237,166,150,145,200,100,164,18,62,135,153,61,210,208,3,119,136,72,212,190,222,153,135,63,250,234,253,55,77,205,139,49,134,158,79,183,81,56,54,191,64,78,212,138,129,206,148,96,234,11,61,51,82 };
    byte_vec_t pk { 3,211,27,125,45,248,110,195,225,114,177,171,52,178,85,151,133,182,4,235,62,169,62,188,195,238,178,88,178,187,164,44,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 217 ") {
    byte_vec_t msg { 154,134,11,184 };
    byte_vec_t sig { 181,235,112,127,103,88,180,104,133,243,46,106,16,93,72,137,226,16,11,71,90,117,82,34,21,31,238,200,34,236,47,192,166,21,234,138,241,170,65,77,139,18,132,10,223,163,238,119,34,28,75,11,169,240,239,227,0,242,99,56,82,200,114,194 };
    byte_vec_t pk { 4,125,108,87,68,143,68,9,136,48,134,226,232,186,126,128,34,245,164,118,252,146,62,249,61,167,193,191,212,85,99,173,129,31,167,180,240,190,180,112,189,235,68,31,213,190,160,233,18,231,109,243,127,78,153,180,182,162,115,108,220,83,50,47,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 217 ") {
    byte_vec_t msg { 196,187,53,153 };
    byte_vec_t sig { 67,30,67,93,15,224,151,197,100,26,151,193,68,201,73,200,237,49,166,8,142,233,132,134,105,77,69,128,100,7,185,221,97,33,229,128,28,9,31,126,73,56,197,204,176,226,255,212,224,113,182,18,59,81,20,204,225,239,157,125,102,61,187,249 };
    byte_vec_t pk { 4,152,240,71,153,5,155,123,49,109,151,233,10,235,5,113,241,129,182,9,26,2,84,200,219,223,130,129,205,218,224,69,223,98,202,180,16,151,64,50,164,231,142,93,63,103,184,156,146,153,127,36,87,27,216,98,145,116,127,129,103,144,190,105,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 217 ") {
    byte_vec_t msg { 18,176,59,12 };
    byte_vec_t sig { 95,29,202,220,192,88,55,91,179,23,252,58,197,54,225,98,121,63,144,207,118,59,22,228,30,48,122,147,207,205,45,232,159,35,246,168,169,67,76,232,151,180,250,68,72,121,194,239,6,97,190,60,85,5,216,196,97,173,157,1,105,196,124,199 };
    byte_vec_t pk { 3,69,255,240,115,105,24,156,131,11,136,173,212,75,193,240,142,83,189,213,104,181,37,103,159,50,132,57,229,248,179,66,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 217 ") {
    byte_vec_t msg { 157,142,40,65 };
    byte_vec_t sig { 180,28,163,182,51,169,0,115,211,110,19,35,235,26,224,144,240,216,88,59,15,37,202,26,151,43,25,246,233,144,38,5,185,97,123,112,29,97,127,98,239,115,12,167,198,143,239,96,118,242,61,248,120,207,129,190,241,128,150,170,201,216,19,232 };
    byte_vec_t pk { 2,27,234,10,219,168,77,220,191,96,175,194,215,204,164,245,166,189,164,103,77,40,28,47,13,148,246,0,51,14,169,79,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 218 ") {
    byte_vec_t msg { 210,147,18,26 };
    byte_vec_t sig { 134,234,224,105,114,41,211,172,104,173,162,144,247,174,132,29,187,124,32,98,252,214,66,233,227,212,173,240,108,221,121,139,154,125,18,243,248,48,221,94,23,90,237,4,11,88,47,162,143,4,221,28,49,47,199,91,167,177,109,148,95,93,116,4 };
    byte_vec_t pk { 4,104,46,237,101,254,150,202,90,234,247,83,71,113,63,69,224,234,59,29,214,254,227,108,156,145,194,14,100,147,57,232,135,121,139,119,54,171,48,168,32,200,199,25,136,147,51,252,121,235,33,82,214,224,40,243,41,227,6,182,253,196,166,188,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 218 ") {
    byte_vec_t msg { 172,7,13,253 };
    byte_vec_t sig { 170,156,214,201,237,163,26,192,44,144,66,187,83,86,28,237,72,65,165,63,22,40,255,185,193,238,69,69,231,117,219,87,129,18,200,130,63,37,139,121,251,189,26,229,62,131,143,97,176,3,142,74,9,145,133,38,129,173,190,95,244,58,163,228 };
    byte_vec_t pk { 4,92,92,166,135,68,208,244,22,125,212,125,132,22,85,158,79,238,239,187,147,240,75,85,168,63,93,241,141,160,211,11,6,201,136,223,26,20,113,141,195,155,236,227,122,132,42,230,78,233,175,97,79,22,12,172,80,138,14,229,221,249,86,22,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 218 ") {
    byte_vec_t msg { 18,15,216,37 };
    byte_vec_t sig { 56,235,5,54,81,3,166,129,239,223,51,147,108,186,127,163,102,0,59,180,151,174,54,3,226,147,239,196,99,171,18,123,43,245,178,168,108,44,248,159,158,32,85,145,208,219,222,93,175,46,249,162,221,50,161,213,79,115,102,46,157,11,4,184 };
    byte_vec_t pk { 3,68,181,25,4,103,199,114,106,53,178,78,131,76,122,137,139,210,167,10,187,143,92,139,52,205,174,55,187,161,113,243,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 218 ") {
    byte_vec_t msg { 39,27,189,87 };
    byte_vec_t sig { 16,190,182,138,84,86,244,243,80,30,155,238,17,117,68,206,173,49,101,186,70,160,135,67,167,24,200,235,57,116,191,193,100,123,245,112,217,203,82,179,15,122,106,8,144,100,40,191,144,3,183,160,54,194,128,160,6,154,57,151,241,120,150,138 };
    byte_vec_t pk { 2,224,84,112,229,90,167,144,144,98,123,221,84,21,87,226,137,7,104,29,44,252,206,42,39,129,150,168,71,30,49,243,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 219 ") {
    byte_vec_t msg { 45,202,189,133 };
    byte_vec_t sig { 150,204,179,227,83,25,247,188,25,248,176,153,130,158,40,134,203,73,24,145,179,33,248,165,131,31,82,32,57,65,196,254,2,225,228,63,100,129,212,110,201,151,129,82,186,232,241,234,214,141,243,66,198,51,192,92,85,172,180,208,179,120,109,194 };
    byte_vec_t pk { 4,152,120,34,254,8,215,157,90,154,49,190,7,235,224,110,16,219,228,220,132,56,86,141,168,182,208,176,149,231,160,186,217,185,127,19,167,159,177,241,112,232,40,108,239,112,110,176,29,94,7,107,159,41,36,152,75,137,240,229,48,117,74,179,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 219 ") {
    byte_vec_t msg { 147,25,127,162 };
    byte_vec_t sig { 184,7,213,107,114,222,179,110,83,41,68,44,238,150,197,71,76,16,174,73,71,46,117,37,244,14,217,250,165,52,109,83,122,101,84,165,114,35,26,151,75,191,108,155,79,229,180,214,141,100,76,63,185,251,235,246,149,170,173,242,227,113,56,241 };
    byte_vec_t pk { 4,43,165,205,111,96,51,117,21,146,52,53,12,189,40,207,90,6,33,56,112,147,46,86,117,172,195,139,173,112,47,218,213,41,99,52,26,93,112,237,205,95,111,207,240,202,106,116,139,151,161,0,125,37,204,58,206,109,197,153,9,199,4,51,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 219 ") {
    byte_vec_t msg { 133,148,152,39 };
    byte_vec_t sig { 3,156,163,90,232,200,74,78,21,250,103,248,247,145,37,131,4,124,153,91,42,21,36,227,38,117,211,73,112,129,92,199,147,234,127,216,217,144,15,140,240,241,74,9,107,238,52,242,191,54,247,225,58,229,21,70,154,87,9,6,84,6,125,157 };
    byte_vec_t pk { 2,29,170,94,212,30,149,181,87,111,237,22,64,193,40,97,119,199,80,26,249,94,149,196,206,149,18,215,28,76,113,103,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 219 ") {
    byte_vec_t msg { 95,20,21,65 };
    byte_vec_t sig { 244,196,192,218,241,153,219,184,172,67,73,163,36,163,129,7,156,134,75,137,125,231,112,28,198,16,23,31,159,182,77,74,152,15,60,167,89,200,132,206,226,131,211,93,176,208,79,47,64,183,113,228,131,98,120,33,164,70,169,83,180,119,127,120 };
    byte_vec_t pk { 3,63,169,68,21,13,119,109,124,21,143,162,155,148,182,190,27,36,32,152,179,246,130,63,83,80,15,83,6,129,232,17,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 220 ") {
    byte_vec_t msg { 60,108,65,61 };
    byte_vec_t sig { 64,254,73,69,81,109,40,82,172,36,161,238,116,103,69,144,106,171,134,240,40,165,47,26,58,4,147,54,212,216,156,18,168,165,99,78,111,227,3,193,240,83,47,8,145,204,129,2,224,79,151,232,253,41,178,79,221,115,244,252,198,109,194,142 };
    byte_vec_t pk { 4,92,122,147,97,160,30,2,25,239,223,118,19,213,21,20,115,230,121,76,171,247,223,156,59,162,1,42,11,72,102,18,36,66,141,132,56,172,59,26,30,180,56,33,11,73,173,54,201,165,16,196,30,146,80,161,18,101,208,110,76,14,121,91,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 220 ") {
    byte_vec_t msg { 224,71,159,30 };
    byte_vec_t sig { 211,82,157,79,175,145,124,170,32,177,30,127,13,125,96,14,9,131,199,162,74,103,253,54,136,201,69,141,237,197,119,112,28,58,52,107,74,100,97,194,95,64,219,163,78,49,192,161,34,60,4,150,217,85,137,1,71,65,63,8,41,38,135,82 };
    byte_vec_t pk { 4,43,148,234,173,243,150,92,86,166,199,69,38,6,153,221,249,172,63,216,250,198,150,85,97,149,223,192,57,184,105,143,152,169,141,133,23,137,117,8,184,100,58,63,114,131,122,228,215,18,216,76,189,140,101,154,251,112,159,250,158,253,14,85,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 220 ") {
    byte_vec_t msg { 122,41,38,114 };
    byte_vec_t sig { 200,90,171,52,129,221,29,189,38,18,9,255,110,130,168,141,41,113,191,177,72,19,173,78,177,223,228,180,48,68,206,230,91,27,215,111,178,135,241,90,167,213,212,56,249,157,241,50,24,108,157,82,233,155,69,31,99,89,251,101,161,54,39,187 };
    byte_vec_t pk { 2,97,132,239,128,14,209,218,41,110,41,159,48,148,194,107,15,176,81,108,151,81,195,62,66,203,144,135,144,110,68,39,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 220 ") {
    byte_vec_t msg { 35,66,8,68 };
    byte_vec_t sig { 219,50,218,124,238,122,221,94,248,7,16,98,48,85,211,148,59,62,126,22,87,123,156,38,81,200,20,114,95,117,28,122,16,167,161,99,41,81,32,251,113,59,56,207,211,66,233,73,47,18,19,83,219,230,113,200,6,52,241,61,196,149,32,129 };
    byte_vec_t pk { 2,129,5,116,70,55,199,28,11,126,75,230,175,169,188,166,169,34,255,212,167,196,203,36,83,64,121,160,195,123,134,96,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 221 ") {
    byte_vec_t msg { 33,47,252,90 };
    byte_vec_t sig { 42,111,176,164,115,251,159,175,79,47,148,109,251,241,165,61,234,83,115,182,233,10,25,164,241,74,67,199,72,90,154,73,188,239,155,205,128,106,191,82,75,108,228,32,140,31,234,238,174,28,81,48,0,56,87,131,5,137,61,143,206,164,253,101 };
    byte_vec_t pk { 4,50,174,56,179,200,93,46,129,205,50,222,107,191,255,147,1,97,105,15,191,153,106,109,216,110,48,74,6,203,102,97,181,48,89,186,186,153,185,193,25,249,186,157,183,118,79,170,164,255,39,204,228,251,170,189,50,245,62,86,5,7,67,51,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 221 ") {
    byte_vec_t msg { 3,155,132,56 };
    byte_vec_t sig { 13,205,141,121,10,0,3,227,220,15,14,203,253,144,19,51,128,141,23,80,232,85,115,19,114,16,196,183,121,114,148,182,46,223,47,49,122,215,136,38,186,83,26,2,110,245,130,216,159,218,92,235,161,14,65,156,137,119,47,222,209,78,15,33 };
    byte_vec_t pk { 4,192,182,138,141,152,248,44,179,210,69,50,58,150,255,32,198,188,64,118,209,83,71,21,223,166,1,115,54,169,197,198,102,20,42,2,187,30,245,212,202,117,12,29,78,93,170,199,29,6,167,211,173,134,151,157,181,81,36,112,5,196,226,35,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 221 ") {
    byte_vec_t msg { 98,229,68,120 };
    byte_vec_t sig { 216,96,147,64,190,141,33,15,239,242,36,219,63,197,211,55,127,251,33,67,36,102,136,8,72,232,98,16,8,190,179,110,140,130,31,79,113,174,106,23,207,133,195,220,182,193,146,16,5,58,5,173,199,212,17,30,59,122,14,243,6,210,192,181 };
    byte_vec_t pk { 3,179,206,248,73,16,248,243,140,160,22,226,205,109,106,84,85,59,49,212,161,5,20,109,221,21,170,202,170,197,227,193,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 221 ") {
    byte_vec_t msg { 229,208,194,32 };
    byte_vec_t sig { 194,113,128,165,149,51,6,218,124,151,203,230,193,188,97,221,98,121,82,186,231,233,77,230,142,82,74,217,134,175,132,78,227,211,123,44,19,81,218,23,128,193,111,43,118,14,209,255,21,240,227,51,218,231,14,4,169,247,49,151,122,121,135,22 };
    byte_vec_t pk { 3,207,77,173,156,111,143,72,201,5,31,230,230,68,185,60,221,154,57,106,57,108,91,200,35,32,235,34,90,13,186,151,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 222 ") {
    byte_vec_t msg { 173,53,216,50 };
    byte_vec_t sig { 178,145,240,233,119,204,208,103,103,113,88,227,251,229,114,142,73,64,210,137,252,27,232,197,79,26,64,206,72,184,30,210,3,229,57,164,178,235,245,249,113,212,178,167,241,223,108,73,140,163,24,244,240,159,78,193,171,155,181,95,160,45,232,178 };
    byte_vec_t pk { 4,153,141,48,241,220,69,166,2,207,45,179,230,200,200,16,119,76,67,116,50,68,133,244,125,4,209,185,61,69,126,14,63,85,65,142,188,123,70,227,15,70,5,160,139,66,110,179,140,233,183,179,223,45,17,18,42,225,184,22,229,114,214,109,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 222 ") {
    byte_vec_t msg { 73,19,46,224 };
    byte_vec_t sig { 42,251,108,136,103,238,200,125,9,169,230,172,165,194,248,143,197,54,145,82,174,124,86,186,241,74,131,156,204,17,222,34,43,254,12,98,180,213,234,25,158,254,30,16,5,223,3,154,210,2,73,30,35,195,241,141,62,194,107,85,10,169,131,109 };
    byte_vec_t pk { 4,54,106,81,20,94,1,113,33,30,216,102,238,141,104,195,150,76,77,111,122,234,21,159,225,221,64,40,111,244,164,106,219,199,144,88,231,221,94,43,99,84,231,166,161,11,98,134,155,122,71,114,220,27,133,167,1,172,243,86,233,189,40,66,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 222 ") {
    byte_vec_t msg { 69,157,141,3 };
    byte_vec_t sig { 34,199,160,6,110,83,250,235,165,218,4,67,171,114,199,81,53,224,92,185,143,31,12,2,252,119,227,60,196,44,6,211,130,198,155,51,205,163,96,171,171,143,67,10,203,75,179,177,81,26,63,226,109,223,115,83,222,142,93,193,100,74,200,33 };
    byte_vec_t pk { 2,129,252,71,71,6,84,49,52,248,107,48,122,3,50,179,101,55,24,9,84,138,81,192,5,13,237,97,249,46,109,59,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 222 ") {
    byte_vec_t msg { 53,157,39,103 };
    byte_vec_t sig { 212,8,159,71,171,84,88,123,241,62,238,45,33,172,244,142,163,71,121,239,217,143,8,229,173,205,21,46,133,247,228,108,87,77,71,158,95,20,80,250,110,153,203,73,244,100,232,5,98,44,171,132,63,134,7,47,234,72,164,164,116,240,224,243 };
    byte_vec_t pk { 2,165,80,188,123,56,228,254,168,215,152,236,133,70,148,20,204,125,54,106,113,94,1,150,61,13,93,115,164,52,198,192,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 223 ") {
    byte_vec_t msg { 20,228,161,249 };
    byte_vec_t sig { 13,101,229,161,203,103,168,246,126,242,229,20,43,89,159,235,187,206,16,152,76,160,214,184,36,172,250,81,106,241,124,9,11,162,237,76,44,207,231,37,52,75,140,89,241,144,62,127,233,100,40,226,42,69,189,137,242,176,205,133,121,148,23,210 };
    byte_vec_t pk { 4,242,11,180,33,89,220,233,85,248,20,43,210,15,171,92,200,11,184,106,177,175,177,33,115,198,225,18,147,92,117,105,4,123,143,122,70,234,71,127,182,160,34,0,118,0,32,235,249,199,213,20,103,239,73,211,121,221,114,5,12,174,226,17,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 223 ") {
    byte_vec_t msg { 52,72,6,251 };
    byte_vec_t sig { 3,244,243,129,197,227,137,21,58,44,85,31,210,223,188,150,50,192,53,87,146,76,36,252,144,78,37,181,245,207,21,198,175,83,122,3,34,93,141,60,128,96,125,19,184,23,134,183,155,197,83,207,17,131,140,57,100,236,51,100,29,234,19,119 };
    byte_vec_t pk { 4,230,223,82,61,92,32,68,248,149,216,118,27,31,243,45,96,188,99,14,20,230,83,84,7,93,213,133,87,75,85,228,108,57,236,255,107,200,207,93,199,166,66,71,16,153,126,235,245,104,151,85,146,170,190,71,121,118,25,186,28,48,108,45,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 223 ") {
    byte_vec_t msg { 120,162,96,98 };
    byte_vec_t sig { 133,191,56,159,159,228,12,168,168,108,18,250,126,53,254,239,165,54,186,254,65,109,83,7,5,59,33,227,70,30,157,123,254,12,184,56,164,62,43,153,251,133,182,104,173,134,42,185,196,88,173,10,69,106,248,239,19,13,5,135,24,187,123,15 };
    byte_vec_t pk { 3,204,145,43,230,33,89,245,193,45,198,141,219,143,176,21,33,64,107,91,243,233,41,162,45,10,62,245,107,106,153,195,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 223 ") {
    byte_vec_t msg { 239,16,105,225 };
    byte_vec_t sig { 104,72,162,35,26,78,216,188,151,219,35,49,25,57,169,225,8,167,181,104,44,139,35,200,11,164,109,39,245,146,41,100,160,164,33,161,91,201,221,24,85,139,185,91,189,223,124,202,159,224,172,134,104,171,209,243,134,5,79,86,93,60,239,114 };
    byte_vec_t pk { 3,66,249,144,241,21,244,83,162,53,247,179,120,216,192,94,167,96,248,111,39,180,242,223,130,217,86,243,5,119,0,163,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 224 ") {
    byte_vec_t msg { 183,59,234,100 };
    byte_vec_t sig { 41,197,26,100,71,213,88,193,241,168,107,8,5,87,56,228,70,10,50,131,88,242,72,89,21,180,19,73,38,150,134,97,174,162,96,172,100,203,130,216,182,231,187,16,30,219,19,161,154,126,151,122,96,92,104,162,199,41,179,242,10,36,179,129 };
    byte_vec_t pk { 4,44,186,96,250,4,143,209,8,122,169,30,64,47,16,95,4,1,68,97,102,177,72,231,77,115,75,123,182,59,237,220,96,151,150,160,182,150,55,93,3,7,137,85,122,252,220,93,232,184,113,86,232,164,114,179,236,99,199,105,157,230,190,4,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 224 ") {
    byte_vec_t msg { 53,57,34,21 };
    byte_vec_t sig { 164,32,22,18,87,123,159,51,61,125,245,14,129,38,199,179,141,119,83,158,64,18,187,118,149,144,3,209,116,117,22,41,24,130,236,46,217,241,29,251,174,149,45,26,36,171,17,35,241,99,241,154,135,131,101,164,5,18,139,193,181,14,245,244 };
    byte_vec_t pk { 4,146,205,174,175,193,81,228,90,73,234,244,78,213,228,24,128,51,39,223,238,194,215,104,133,47,159,99,238,133,209,28,255,229,123,244,156,93,27,239,62,111,17,253,13,130,224,97,34,2,96,83,205,8,157,9,86,245,56,97,157,233,81,67,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 224 ") {
    byte_vec_t msg { 39,255,32,4 };
    byte_vec_t sig { 192,188,35,54,156,182,4,136,14,185,246,96,52,240,200,151,209,212,91,61,57,28,87,79,162,135,161,169,173,207,156,151,82,137,44,149,193,195,176,182,206,51,214,170,136,68,228,82,113,67,222,102,223,49,128,151,218,125,200,21,8,43,125,6 };
    byte_vec_t pk { 2,108,214,242,19,125,214,168,179,130,13,26,41,42,220,246,185,1,207,129,154,225,52,99,78,49,93,231,227,134,192,120,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 224 ") {
    byte_vec_t msg { 123,200,81,223 };
    byte_vec_t sig { 37,132,148,141,245,249,46,114,173,115,32,127,121,147,98,113,79,154,29,126,109,242,121,112,188,208,68,219,190,213,79,220,107,198,237,15,29,226,235,139,0,83,211,130,114,40,12,182,193,201,185,126,157,182,85,150,47,170,50,91,179,135,185,4 };
    byte_vec_t pk { 3,171,205,36,29,74,23,111,106,229,182,82,85,246,15,43,43,29,181,253,45,32,28,24,144,111,251,54,124,242,71,170,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 225 ") {
    byte_vec_t msg { 20,228,16,179 };
    byte_vec_t sig { 93,111,106,248,196,87,153,60,39,114,216,54,119,190,99,205,238,36,242,91,141,181,17,176,161,60,244,136,101,90,22,160,105,241,185,160,120,84,167,181,121,251,73,224,167,36,119,69,166,227,143,115,200,30,24,216,161,174,36,205,230,230,225,124 };
    byte_vec_t pk { 4,128,100,181,55,187,72,68,46,93,223,60,185,23,219,0,56,49,243,67,81,233,65,182,64,20,140,43,126,227,30,222,160,99,141,13,67,142,201,194,62,9,202,245,253,92,36,86,218,235,46,121,102,101,136,249,163,194,2,124,128,231,206,50,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 225 ") {
    byte_vec_t msg { 20,192,158,28 };
    byte_vec_t sig { 119,8,78,234,92,230,73,170,73,55,245,152,22,80,248,128,179,10,74,67,52,130,175,236,217,93,76,64,167,135,152,155,242,246,86,55,167,83,2,244,149,198,76,16,100,75,173,91,32,102,55,135,215,141,189,197,41,117,63,155,1,81,255,31 };
    byte_vec_t pk { 4,5,82,25,60,101,60,220,165,195,94,76,191,155,93,186,217,192,201,174,213,34,69,39,227,64,211,75,46,106,211,84,220,219,31,14,161,148,152,114,211,234,193,89,143,153,69,197,182,142,56,157,183,235,53,189,40,191,193,207,178,44,246,143,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 225 ") {
    byte_vec_t msg { 99,177,152,142 };
    byte_vec_t sig { 30,214,179,50,216,227,139,96,123,30,48,199,113,24,208,103,119,3,32,128,44,69,137,193,81,103,249,171,174,89,15,205,218,238,152,227,36,171,126,214,197,246,131,113,182,29,186,2,10,130,145,13,9,146,26,104,218,110,49,30,189,209,214,57 };
    byte_vec_t pk { 3,0,174,7,252,209,62,124,174,201,171,167,172,93,1,156,68,155,148,13,103,114,30,91,70,46,41,13,198,211,214,237,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 225 ") {
    byte_vec_t msg { 97,240,225,188 };
    byte_vec_t sig { 254,38,110,227,73,82,188,171,131,233,9,80,68,103,25,68,152,63,185,69,77,43,215,75,183,52,245,145,173,13,40,31,213,90,70,0,172,251,89,84,118,219,77,155,185,36,131,98,68,67,150,231,209,121,10,232,156,78,247,235,186,193,9,219 };
    byte_vec_t pk { 2,148,71,92,45,199,176,186,236,31,137,178,125,39,134,137,60,241,209,213,227,243,210,214,202,124,184,150,109,67,144,26,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 226 ") {
    byte_vec_t msg { 195,26,5,99 };
    byte_vec_t sig { 240,15,20,81,207,168,154,23,185,166,143,12,58,93,217,149,58,204,174,242,21,152,241,185,6,235,134,84,56,104,41,90,250,211,76,195,227,6,56,37,81,63,109,93,97,51,75,61,175,249,184,222,238,244,228,115,165,119,39,54,37,206,210,145 };
    byte_vec_t pk { 4,182,236,200,194,74,182,65,120,49,195,207,67,229,102,55,60,136,184,132,92,151,103,210,58,180,159,201,243,76,54,35,151,249,65,92,36,170,26,194,42,157,139,231,14,112,172,231,157,210,65,101,14,85,91,45,4,111,14,20,170,160,148,154,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 226 ") {
    byte_vec_t msg { 135,196,99,195 };
    byte_vec_t sig { 248,65,183,130,83,176,49,106,22,103,245,49,213,142,125,22,58,185,90,85,47,17,225,32,22,179,226,115,250,17,187,232,142,144,180,71,144,92,23,252,128,156,210,1,149,120,78,172,30,193,50,232,152,24,19,190,83,154,118,48,253,14,197,251 };
    byte_vec_t pk { 4,50,33,238,215,215,63,185,132,147,2,219,184,247,67,206,3,37,8,150,97,193,37,53,13,59,90,123,105,227,133,193,150,38,200,234,31,63,234,173,152,82,184,83,204,223,197,146,75,31,123,213,10,239,84,35,48,96,124,10,142,210,146,219,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 226 ") {
    byte_vec_t msg { 50,159,213,8 };
    byte_vec_t sig { 7,106,51,235,9,246,253,165,39,39,77,226,59,50,228,7,251,21,134,130,84,210,104,41,75,170,158,24,254,191,82,201,65,119,231,132,213,212,80,78,134,71,190,43,186,203,17,28,57,230,35,100,116,109,150,74,198,129,144,3,74,193,49,56 };
    byte_vec_t pk { 2,130,148,218,74,56,192,10,104,125,101,139,9,72,77,135,197,179,18,222,121,15,168,97,162,251,23,29,207,185,86,212,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 226 ") {
    byte_vec_t msg { 238,189,233,7 };
    byte_vec_t sig { 248,176,135,17,174,115,153,14,215,26,118,184,92,162,47,194,68,38,19,81,150,196,176,110,39,60,4,83,190,203,211,132,190,190,168,159,162,181,78,1,190,213,69,253,161,214,68,90,86,187,168,196,41,39,105,7,53,4,197,154,17,125,173,36 };
    byte_vec_t pk { 3,148,88,246,135,82,74,71,213,99,105,219,199,89,121,254,172,106,190,142,212,104,172,178,31,223,136,70,177,175,17,192,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 227 ") {
    byte_vec_t msg { 223,206,128,142 };
    byte_vec_t sig { 148,209,45,195,215,154,27,246,59,234,97,229,14,35,34,245,65,155,186,52,96,8,188,16,235,13,170,25,227,14,30,243,16,11,14,180,13,81,161,90,51,6,14,127,116,171,91,193,164,95,209,48,3,23,182,52,220,62,28,198,80,181,235,70 };
    byte_vec_t pk { 4,122,239,5,120,173,71,141,236,91,156,212,99,49,12,219,69,243,55,131,132,126,224,205,47,17,227,9,37,101,22,227,254,71,181,1,229,203,209,109,85,192,129,143,233,131,80,29,203,182,136,109,57,227,192,105,249,110,53,101,244,97,84,44,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 227 ") {
    byte_vec_t msg { 228,43,47,172 };
    byte_vec_t sig { 75,21,72,164,80,62,90,53,60,200,27,25,7,129,184,41,166,163,114,196,143,36,212,34,46,28,142,203,176,64,148,64,148,233,130,198,120,255,37,115,148,12,206,184,14,219,100,100,165,25,179,32,233,172,34,24,130,116,160,119,238,207,216,25 };
    byte_vec_t pk { 4,149,87,114,90,6,199,135,150,61,221,185,85,188,253,213,199,130,199,234,222,174,90,16,222,113,236,138,251,173,0,24,153,73,54,195,231,126,107,77,70,123,188,35,118,104,175,66,141,140,209,219,6,237,16,157,159,129,48,176,237,137,59,14,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 227 ") {
    byte_vec_t msg { 68,175,203,252 };
    byte_vec_t sig { 70,167,150,85,76,241,166,229,30,109,200,108,238,64,157,36,170,171,249,54,210,48,2,62,202,205,141,111,154,241,137,193,188,253,217,39,73,197,145,21,118,192,138,154,181,12,247,7,153,225,116,88,137,31,50,185,20,137,151,88,237,147,90,131 };
    byte_vec_t pk { 3,215,234,124,125,22,174,56,156,75,29,97,248,238,146,206,124,119,244,182,231,182,189,239,106,244,30,249,229,6,239,175,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 227 ") {
    byte_vec_t msg { 226,215,35,46 };
    byte_vec_t sig { 205,203,22,178,26,127,172,113,125,123,46,234,94,22,43,119,179,4,149,157,65,76,4,14,3,50,255,219,135,103,77,6,6,161,166,115,142,180,122,238,219,18,214,222,167,232,63,51,200,143,0,136,229,95,12,122,238,199,45,80,144,202,248,6 };
    byte_vec_t pk { 3,230,137,255,12,42,57,145,206,76,117,233,36,155,235,220,35,67,84,227,240,170,248,236,194,13,156,13,87,71,188,56,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 228 ") {
    byte_vec_t msg { 137,153,178,204 };
    byte_vec_t sig { 208,236,49,214,69,124,113,121,17,25,146,86,241,3,111,232,9,236,132,192,245,48,132,181,87,136,213,96,178,5,126,236,121,27,98,225,182,102,51,220,196,110,199,176,185,143,123,207,45,153,41,222,176,117,96,106,124,140,123,237,77,107,183,76 };
    byte_vec_t pk { 4,131,134,159,250,108,106,23,248,210,133,72,208,236,249,185,75,84,81,186,205,29,211,199,63,149,21,92,216,112,243,157,151,146,14,177,205,82,144,216,14,32,181,49,218,88,145,224,8,181,137,72,216,35,197,236,242,98,227,236,21,209,94,134,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 228 ") {
    byte_vec_t msg { 226,235,132,123 };
    byte_vec_t sig { 50,230,54,7,173,214,253,220,39,144,56,212,254,176,213,55,38,67,33,47,45,190,4,206,59,130,95,206,246,162,53,56,115,176,61,8,140,112,211,145,42,40,249,208,48,236,199,156,192,200,199,6,229,60,223,43,121,6,165,185,17,74,116,94 };
    byte_vec_t pk { 4,26,247,226,63,255,7,155,26,15,64,234,103,110,204,35,202,97,250,148,119,127,9,1,4,217,147,110,22,169,237,241,95,181,128,46,5,216,208,136,16,206,183,252,194,70,127,224,235,196,150,221,38,153,173,127,253,111,12,218,99,60,82,20,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 228 ") {
    byte_vec_t msg { 222,161,208,22 };
    byte_vec_t sig { 98,28,158,172,120,13,88,135,124,200,68,146,252,219,7,125,19,19,222,170,73,252,192,247,155,151,185,190,229,180,96,107,78,204,134,241,23,176,122,57,212,55,11,226,98,151,19,249,245,218,145,74,70,51,75,22,145,193,248,114,141,150,37,245 };
    byte_vec_t pk { 3,187,43,31,97,83,173,187,176,5,113,223,41,57,195,82,242,18,84,62,167,140,49,77,161,69,50,207,45,94,233,91,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 228 ") {
    byte_vec_t msg { 225,118,234,120 };
    byte_vec_t sig { 108,111,119,217,33,138,197,94,56,222,129,96,129,157,223,155,134,201,12,249,231,1,133,207,187,86,238,216,70,196,123,141,161,214,171,206,26,250,148,15,219,180,124,184,167,8,85,220,62,151,51,98,191,92,193,143,77,141,20,90,147,183,189,51 };
    byte_vec_t pk { 3,27,217,202,22,244,101,182,212,114,203,186,255,32,188,13,227,144,38,48,198,207,156,173,245,83,216,144,232,174,32,136,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 229 ") {
    byte_vec_t msg { 135,16,81,111 };
    byte_vec_t sig { 89,157,215,98,211,22,14,29,133,240,100,201,225,155,52,33,51,99,177,59,232,68,47,152,174,58,93,190,207,53,188,248,249,183,63,110,170,70,234,145,145,225,59,228,29,118,136,155,229,17,225,103,178,181,230,169,153,235,234,100,211,163,56,96 };
    byte_vec_t pk { 4,49,130,33,201,161,146,58,215,200,69,127,46,169,43,11,182,44,56,218,151,216,112,48,8,200,169,7,10,202,143,94,244,206,19,163,114,84,158,85,242,37,52,172,24,252,121,170,5,218,90,8,54,104,77,176,151,70,208,155,59,137,50,206,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 229 ") {
    byte_vec_t msg { 17,23,90,113 };
    byte_vec_t sig { 160,139,209,32,225,105,165,187,128,12,143,241,147,165,46,100,149,171,217,53,33,113,201,3,228,183,58,196,6,60,251,93,253,36,80,88,166,224,76,38,153,195,124,219,92,97,61,112,197,83,84,149,40,237,106,203,155,41,71,183,250,42,176,15 };
    byte_vec_t pk { 4,255,223,197,70,71,92,43,148,145,156,70,30,95,172,35,232,131,93,238,196,239,171,162,47,222,82,191,43,218,79,135,101,230,200,224,35,49,92,197,101,188,29,0,15,171,142,245,101,252,242,49,123,56,203,42,229,138,128,134,121,1,196,2,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 229 ") {
    byte_vec_t msg { 186,126,68,187 };
    byte_vec_t sig { 219,128,164,141,208,28,167,220,221,184,159,88,69,57,214,221,244,219,110,29,152,51,16,180,94,121,244,57,169,101,209,175,144,118,151,239,81,192,53,56,100,171,216,237,35,133,75,192,122,98,36,212,246,46,86,180,25,159,232,229,117,174,63,188 };
    byte_vec_t pk { 3,147,54,113,26,149,144,214,146,22,183,234,187,129,133,4,169,49,88,14,187,188,65,128,71,33,192,152,178,109,93,152,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 229 ") {
    byte_vec_t msg { 46,15,19,210 };
    byte_vec_t sig { 194,74,18,57,20,65,223,127,220,42,251,254,113,96,116,1,168,51,26,142,171,116,115,81,114,7,100,160,132,67,33,255,123,23,135,242,184,179,108,245,212,187,57,111,0,98,230,139,153,233,163,4,246,120,254,215,90,87,182,54,171,44,186,86 };
    byte_vec_t pk { 2,25,147,128,57,22,181,65,196,77,128,96,230,58,18,225,15,118,220,36,87,65,24,133,40,147,192,102,70,214,142,74,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 230 ") {
    byte_vec_t msg { 14,160,186,97 };
    byte_vec_t sig { 9,171,5,98,95,79,54,3,188,228,105,68,133,34,58,180,125,160,160,54,25,177,167,246,253,103,178,69,136,178,223,3,57,233,43,216,170,214,183,75,119,237,130,26,166,146,141,134,137,118,110,47,160,122,118,181,140,6,156,201,15,93,159,200 };
    byte_vec_t pk { 4,241,198,234,49,190,245,202,66,50,38,23,153,226,245,46,215,70,112,63,68,250,34,4,242,150,68,63,64,170,44,75,4,167,6,88,159,141,145,119,172,106,150,250,247,111,23,183,222,62,14,167,173,151,26,54,208,154,193,24,125,164,79,43,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 230 ") {
    byte_vec_t msg { 44,73,193,88 };
    byte_vec_t sig { 140,190,105,116,137,96,133,176,248,66,168,68,171,175,200,8,6,20,245,31,41,159,2,194,223,178,55,135,48,53,42,132,89,255,109,241,217,161,170,250,226,207,218,28,191,243,56,136,72,44,186,218,86,131,234,213,130,143,207,218,187,101,250,231 };
    byte_vec_t pk { 4,122,227,24,158,164,94,174,240,18,51,236,42,184,44,23,217,233,45,36,34,196,27,77,162,35,63,217,4,79,172,77,103,93,37,133,217,103,2,161,213,229,179,57,10,76,70,63,40,160,99,227,107,88,21,234,173,91,210,5,201,22,222,186,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 230 ") {
    byte_vec_t msg { 235,253,170,174 };
    byte_vec_t sig { 205,139,248,8,53,202,50,80,89,175,122,195,79,15,29,38,97,106,112,231,79,187,65,172,138,143,20,179,221,30,153,136,214,189,203,226,110,188,64,95,26,135,113,69,20,58,78,53,111,32,255,170,221,199,67,131,3,252,240,156,131,27,90,136 };
    byte_vec_t pk { 2,57,151,204,95,33,101,211,169,171,215,233,43,120,1,66,251,118,5,255,147,140,180,54,175,98,43,72,70,144,229,51,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 230 ") {
    byte_vec_t msg { 113,252,234,111 };
    byte_vec_t sig { 85,200,128,157,155,66,255,244,240,98,158,175,51,1,154,201,173,36,254,13,137,109,96,34,184,51,64,149,36,213,105,69,175,66,63,232,46,46,236,17,172,100,84,97,73,218,152,137,212,37,30,83,14,64,93,11,50,202,88,227,77,102,91,7 };
    byte_vec_t pk { 3,40,21,22,50,206,230,51,186,74,233,197,210,34,32,125,85,98,93,129,147,229,159,214,23,85,64,224,91,211,57,89,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 231 ") {
    byte_vec_t msg { 184,230,215,180 };
    byte_vec_t sig { 18,232,159,34,103,34,226,169,179,231,250,11,117,199,4,145,95,40,134,240,131,95,214,93,255,141,54,250,5,54,208,14,200,141,235,87,169,119,29,46,49,83,222,32,154,99,193,245,56,36,197,167,18,185,1,245,208,26,239,105,28,9,172,179 };
    byte_vec_t pk { 4,190,72,174,147,212,135,64,233,189,107,30,108,136,199,102,105,71,61,138,146,238,227,99,191,131,137,206,122,200,116,20,38,96,202,206,169,250,137,181,176,137,67,189,156,214,45,91,51,17,121,217,78,154,245,43,179,11,7,184,13,231,163,98,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 231 ") {
    byte_vec_t msg { 240,166,53,161 };
    byte_vec_t sig { 204,211,79,115,200,67,75,212,165,134,121,103,14,54,59,21,1,79,122,88,66,149,233,243,210,58,198,85,146,136,128,3,118,12,149,182,113,237,108,226,39,13,196,145,106,90,246,198,131,25,1,19,171,53,101,100,52,115,182,178,92,215,95,188 };
    byte_vec_t pk { 4,166,255,144,243,30,150,88,165,169,68,96,55,27,234,112,29,81,26,141,54,84,183,134,229,121,189,84,68,61,114,59,198,144,120,83,33,208,86,118,54,108,25,31,119,26,72,26,231,166,209,147,148,236,235,247,141,194,63,93,79,146,106,222,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 231 ") {
    byte_vec_t msg { 144,128,91,55 };
    byte_vec_t sig { 154,216,224,71,210,125,95,225,90,37,96,114,105,3,7,96,237,213,234,206,43,249,97,225,29,14,100,24,201,91,87,164,140,207,55,86,193,107,228,193,115,173,178,248,125,33,254,91,197,226,207,180,212,4,75,69,55,23,163,75,135,174,135,80 };
    byte_vec_t pk { 3,1,14,157,142,187,118,248,124,235,212,159,74,35,112,179,247,204,57,225,155,218,53,198,12,162,1,50,9,241,66,106,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 231 ") {
    byte_vec_t msg { 1,73,201,75 };
    byte_vec_t sig { 25,59,134,76,26,172,26,37,22,218,76,138,153,14,104,121,154,84,252,119,114,205,144,244,182,238,129,1,159,134,255,53,10,176,170,169,152,240,58,9,131,202,63,185,189,200,187,240,179,67,80,40,247,47,189,125,184,127,191,89,58,200,245,72 };
    byte_vec_t pk { 2,135,108,14,250,12,44,218,48,121,176,144,92,122,119,166,245,82,114,30,173,21,22,117,141,45,3,84,38,160,127,222,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 232 ") {
    byte_vec_t msg { 86,253,1,111 };
    byte_vec_t sig { 229,17,51,126,13,177,151,186,143,225,165,134,166,17,108,39,20,96,67,148,225,86,144,115,72,28,67,60,82,54,38,108,37,158,218,238,196,84,203,65,96,153,102,154,20,110,130,98,251,141,183,69,227,57,222,12,57,150,192,92,102,108,70,198 };
    byte_vec_t pk { 4,238,167,142,127,46,70,101,195,217,254,168,35,123,110,188,150,246,240,60,205,123,139,101,87,170,134,201,173,104,61,181,255,52,136,164,58,202,105,39,236,21,68,230,231,139,84,229,122,218,100,168,176,118,51,77,17,50,226,81,250,251,139,128,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 232 ") {
    byte_vec_t msg { 84,72,41,26 };
    byte_vec_t sig { 66,79,181,163,37,48,126,224,157,214,95,37,64,139,240,155,112,208,49,233,132,224,157,58,37,94,167,66,252,194,36,112,88,121,193,13,189,132,147,79,99,121,113,194,124,228,7,251,80,219,23,49,78,162,56,196,233,117,20,106,200,217,89,121 };
    byte_vec_t pk { 4,23,77,247,157,39,51,109,164,14,120,156,195,206,191,232,247,134,184,44,68,56,237,233,171,125,71,133,178,168,109,103,178,106,220,47,54,181,227,7,42,99,136,167,186,65,24,135,212,165,17,119,51,209,82,220,45,60,129,236,207,11,230,14,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 232 ") {
    byte_vec_t msg { 172,93,9,220 };
    byte_vec_t sig { 18,184,161,220,175,41,242,112,232,247,179,199,144,254,239,90,54,229,231,55,104,115,190,166,209,179,115,198,243,140,247,76,120,147,64,249,41,2,238,43,84,54,52,36,51,7,143,128,220,168,241,39,18,225,140,57,223,50,249,167,175,1,175,222 };
    byte_vec_t pk { 3,217,249,251,171,120,44,255,69,39,248,49,67,160,48,102,138,66,7,165,41,33,122,214,216,98,29,202,49,100,88,83,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 232 ") {
    byte_vec_t msg { 43,118,53,136 };
    byte_vec_t sig { 64,232,114,19,143,45,106,8,28,38,118,11,244,1,63,36,153,103,50,45,63,157,150,73,226,116,110,25,200,243,200,89,158,120,186,255,139,17,83,179,164,146,115,245,1,82,22,213,61,17,127,40,160,159,50,132,122,46,158,135,152,7,161,153 };
    byte_vec_t pk { 2,210,118,80,50,239,102,235,44,14,42,23,79,206,252,144,251,26,0,93,61,82,200,106,44,246,190,247,179,78,18,15,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 233 ") {
    byte_vec_t msg { 174,170,164,20 };
    byte_vec_t sig { 223,253,56,24,239,166,146,169,42,30,128,94,190,144,4,1,54,156,8,234,7,161,5,240,90,49,80,211,178,100,89,132,199,105,51,215,3,165,60,202,96,108,58,87,236,55,166,124,218,22,25,47,165,114,132,126,136,162,244,153,1,185,37,186 };
    byte_vec_t pk { 4,239,94,116,65,233,70,220,254,123,1,202,202,244,67,94,2,37,23,153,76,116,166,85,146,126,105,162,106,144,203,212,90,19,227,192,20,175,139,185,238,121,61,46,187,80,73,234,67,253,61,61,156,92,155,208,242,80,142,15,5,233,76,236,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 233 ") {
    byte_vec_t msg { 35,88,224,84 };
    byte_vec_t sig { 159,93,120,131,177,248,81,140,204,81,215,218,221,105,191,47,5,245,136,21,235,59,219,18,154,232,133,72,64,101,61,84,213,72,234,189,203,7,21,231,208,149,2,70,97,133,41,23,137,3,45,165,196,48,24,110,11,228,138,76,180,60,55,4 };
    byte_vec_t pk { 4,218,58,183,5,172,111,54,57,67,208,143,199,84,227,1,160,64,184,178,206,61,199,15,222,77,221,234,146,32,42,162,144,38,115,8,147,37,40,38,223,6,28,57,82,63,64,168,92,80,90,86,108,177,203,71,105,32,194,242,171,18,249,246,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 233 ") {
    byte_vec_t msg { 53,15,126,165 };
    byte_vec_t sig { 227,4,161,115,207,227,144,141,224,40,116,5,78,5,237,35,224,199,120,142,241,179,118,21,153,161,3,128,241,156,136,166,208,75,147,202,74,44,80,115,205,35,13,9,115,22,106,42,1,113,115,67,84,48,179,108,203,207,163,208,62,183,59,23 };
    byte_vec_t pk { 2,117,171,224,82,57,174,28,105,58,138,166,162,90,160,46,0,122,28,41,190,165,83,218,120,254,68,78,77,222,191,147,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 233 ") {
    byte_vec_t msg { 164,83,141,241 };
    byte_vec_t sig { 181,70,101,143,121,112,80,189,251,227,190,94,54,187,197,125,37,131,65,134,187,137,128,214,71,110,77,198,27,46,38,227,88,62,222,112,191,149,11,81,51,174,208,177,129,19,58,226,161,188,234,14,96,210,55,184,186,225,10,203,130,47,187,214 };
    byte_vec_t pk { 3,48,6,222,77,175,110,156,132,105,51,145,103,150,23,110,209,165,56,251,189,170,161,11,56,2,159,108,195,136,0,25,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 234 ") {
    byte_vec_t msg { 149,146,153,136 };
    byte_vec_t sig { 36,211,71,206,191,234,5,100,92,23,163,160,143,41,254,116,50,110,31,160,97,40,179,80,108,247,125,184,76,23,147,7,25,32,172,19,195,115,89,28,249,121,234,73,193,65,230,64,155,16,197,78,165,199,22,67,27,176,162,125,181,70,7,224 };
    byte_vec_t pk { 4,132,66,155,246,183,78,229,109,8,187,30,79,175,229,138,254,143,226,55,120,47,73,161,246,250,186,117,39,151,166,227,38,94,126,4,10,200,107,203,114,215,115,95,81,101,154,114,111,217,93,132,97,145,126,218,18,72,12,224,57,27,228,195,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 234 ") {
    byte_vec_t msg { 171,242,164,132 };
    byte_vec_t sig { 253,237,52,176,103,218,73,218,66,206,54,117,133,19,215,191,72,17,202,78,222,37,11,135,124,60,164,125,83,234,21,61,183,26,21,221,79,157,220,63,211,215,13,57,89,165,22,232,80,155,45,96,48,20,108,196,194,131,101,245,78,214,200,230 };
    byte_vec_t pk { 4,121,173,42,178,136,221,23,31,96,154,78,136,33,136,241,184,79,104,234,145,29,229,137,207,60,93,231,6,148,189,185,32,229,150,251,173,218,201,188,125,151,91,143,202,242,107,81,21,94,177,42,220,89,120,154,64,25,2,112,183,30,137,249,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 234 ") {
    byte_vec_t msg { 227,75,79,243 };
    byte_vec_t sig { 5,150,240,35,85,231,6,74,48,50,64,27,239,238,235,138,253,63,214,171,242,60,160,155,242,9,34,20,226,185,43,156,124,27,87,167,239,118,243,13,165,5,178,253,94,18,185,161,24,43,156,31,105,70,217,233,136,81,248,53,31,135,40,251 };
    byte_vec_t pk { 3,88,152,181,122,108,78,216,241,32,46,141,91,24,224,143,132,54,251,87,180,172,135,11,125,214,210,50,237,108,130,143,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 234 ") {
    byte_vec_t msg { 165,51,64,29 };
    byte_vec_t sig { 63,239,102,155,238,54,157,163,10,244,32,227,228,127,107,118,181,199,213,151,235,7,89,166,190,111,161,182,18,93,14,93,10,128,137,144,97,4,217,232,56,241,191,67,49,186,41,31,31,9,204,122,251,147,156,68,77,25,40,77,192,20,214,138 };
    byte_vec_t pk { 3,19,81,8,79,41,86,37,22,180,49,67,45,199,123,51,109,253,189,233,90,53,84,62,159,226,182,48,121,78,246,24,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 235 ") {
    byte_vec_t msg { 96,6,155,6 };
    byte_vec_t sig { 78,73,79,179,95,143,213,74,247,29,227,85,236,6,39,161,38,88,164,91,67,89,182,250,28,215,92,23,197,206,37,134,81,99,177,116,126,58,115,155,188,186,242,190,72,1,162,202,186,134,19,101,18,124,245,78,77,79,234,5,41,108,3,112 };
    byte_vec_t pk { 4,207,62,134,14,2,74,57,96,180,107,82,141,157,155,133,138,248,31,140,208,175,36,218,106,96,241,138,229,236,198,96,237,102,91,82,194,83,251,208,35,129,24,229,26,254,139,50,207,138,49,51,26,74,206,26,18,233,63,60,209,245,19,126,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 235 ") {
    byte_vec_t msg { 31,249,41,109 };
    byte_vec_t sig { 50,253,248,75,91,35,188,119,52,66,36,146,99,15,203,60,208,64,174,92,249,124,67,253,12,91,44,243,88,158,153,120,88,194,75,57,48,235,150,170,38,123,222,84,132,188,131,222,154,2,223,178,24,60,38,23,241,40,239,152,202,8,221,2 };
    byte_vec_t pk { 4,18,182,2,154,52,225,157,81,55,73,113,207,120,106,43,243,53,17,207,149,151,171,186,41,23,53,122,152,214,48,221,111,172,255,30,24,167,41,210,44,132,194,53,74,42,110,249,146,178,6,32,180,115,180,143,12,98,153,50,181,46,209,150,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 235 ") {
    byte_vec_t msg { 28,77,93,19 };
    byte_vec_t sig { 229,22,171,181,132,0,5,173,83,153,127,215,94,116,175,88,198,185,47,157,253,166,71,182,95,0,6,204,16,76,46,3,184,39,57,242,7,82,211,132,72,97,49,173,67,129,45,70,56,76,94,119,157,107,211,249,212,162,140,10,184,111,121,41 };
    byte_vec_t pk { 3,208,61,66,190,236,9,189,122,116,96,56,151,78,145,101,121,219,222,36,93,132,179,193,30,200,81,103,115,209,177,10,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 235 ") {
    byte_vec_t msg { 1,179,237,164 };
    byte_vec_t sig { 222,67,36,41,90,249,165,226,2,235,108,110,162,58,60,153,107,126,5,239,63,152,49,241,126,66,148,160,242,58,124,253,213,178,239,7,84,222,253,91,103,29,109,195,60,47,36,12,164,121,60,112,191,25,194,166,252,117,93,2,183,6,9,157 };
    byte_vec_t pk { 2,210,101,218,246,20,4,202,221,80,103,37,215,84,97,155,9,122,83,83,92,253,86,52,164,247,37,38,85,4,11,223,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 236 ") {
    byte_vec_t msg { 161,253,111,220 };
    byte_vec_t sig { 99,238,137,226,221,218,78,191,232,129,51,189,244,42,27,159,62,125,127,191,57,230,238,250,12,112,170,213,156,70,39,160,21,227,200,132,240,62,128,58,130,169,231,68,172,208,186,114,213,54,19,16,137,67,1,65,157,200,16,231,151,120,50,192 };
    byte_vec_t pk { 4,248,170,185,254,112,107,235,62,141,41,101,44,235,8,139,40,22,207,223,233,157,84,72,23,166,250,185,155,7,38,150,40,36,197,210,149,24,190,117,245,203,53,143,25,180,50,220,104,109,177,80,130,29,8,151,182,220,52,157,242,162,74,43,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 236 ") {
    byte_vec_t msg { 205,139,213,105 };
    byte_vec_t sig { 177,11,150,80,46,167,147,210,204,236,246,67,122,210,158,100,55,250,64,15,184,147,144,17,217,106,236,104,63,26,212,51,88,36,4,50,53,215,191,251,123,57,122,250,245,93,216,172,195,40,27,177,86,60,61,95,51,60,253,216,213,37,191,18 };
    byte_vec_t pk { 4,222,163,200,145,71,53,106,215,155,175,214,58,114,100,97,242,61,168,127,213,235,156,249,75,149,84,89,20,110,156,119,157,113,239,227,82,64,79,170,131,136,89,207,110,231,198,195,255,201,18,138,11,212,45,211,33,115,135,157,41,175,51,221,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 236 ") {
    byte_vec_t msg { 139,1,125,230 };
    byte_vec_t sig { 118,82,182,112,178,119,108,241,98,193,147,196,167,61,26,215,110,44,110,103,134,103,150,68,152,214,93,174,35,144,147,185,225,84,71,150,7,137,186,138,158,73,183,9,198,215,241,162,139,223,94,222,48,82,60,4,98,125,42,111,96,44,249,86 };
    byte_vec_t pk { 2,212,218,56,121,169,204,25,148,140,5,74,145,73,87,21,208,82,75,178,220,84,181,251,235,88,186,25,18,150,218,203,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 236 ") {
    byte_vec_t msg { 221,164,192,249 };
    byte_vec_t sig { 25,51,93,10,234,37,55,66,187,128,5,24,126,111,241,11,95,121,125,125,35,112,246,72,92,75,102,248,12,142,27,17,238,26,154,30,174,37,63,65,108,30,1,81,40,47,244,181,235,136,167,17,55,70,147,199,144,34,132,190,104,67,233,212 };
    byte_vec_t pk { 3,96,44,10,151,32,51,211,108,252,243,255,43,78,185,56,148,54,172,79,23,184,0,45,7,246,209,176,87,90,143,228,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 237 ") {
    byte_vec_t msg { 194,80,73,196 };
    byte_vec_t sig { 165,114,42,237,161,189,96,23,215,214,152,43,129,122,137,125,145,142,224,120,21,163,34,81,202,42,218,183,226,43,155,170,252,230,161,247,127,63,241,157,18,91,243,191,55,135,233,187,167,8,244,122,30,238,145,30,137,86,155,177,107,71,235,70 };
    byte_vec_t pk { 4,109,242,193,229,228,190,58,246,127,225,184,55,118,254,192,219,239,64,149,203,124,104,70,205,255,141,216,41,13,203,186,214,163,238,86,231,150,126,248,104,2,241,235,52,159,233,40,43,19,181,245,253,20,73,105,20,86,14,13,48,63,176,157,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 237 ") {
    byte_vec_t msg { 30,255,117,201 };
    byte_vec_t sig { 9,38,213,2,95,57,22,24,141,112,69,117,108,79,40,202,246,140,241,248,243,10,173,236,209,43,24,40,122,49,52,240,41,171,127,66,238,101,233,233,171,11,229,152,48,202,64,173,220,198,145,181,66,236,1,128,173,197,163,127,115,148,122,160 };
    byte_vec_t pk { 4,142,64,151,221,173,57,251,219,159,37,206,88,37,107,114,208,87,41,154,176,153,184,46,38,134,91,106,187,84,21,10,168,60,211,104,134,235,30,142,137,158,126,229,237,88,227,64,78,20,123,6,100,1,133,233,55,7,123,63,7,139,124,108,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 237 ") {
    byte_vec_t msg { 201,218,170,151 };
    byte_vec_t sig { 130,11,53,180,123,227,215,192,75,142,135,40,124,44,11,247,42,75,5,194,185,126,150,235,146,42,185,18,36,180,28,24,65,222,71,94,156,199,18,175,143,168,104,66,250,163,22,222,1,21,179,107,180,125,17,55,66,57,197,19,161,158,34,143 };
    byte_vec_t pk { 3,85,181,30,33,34,80,234,27,164,198,223,18,32,132,180,171,28,231,241,106,232,104,45,140,66,202,52,76,206,236,198,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 237 ") {
    byte_vec_t msg { 182,226,251,211 };
    byte_vec_t sig { 86,233,180,59,191,98,76,20,252,249,15,246,107,173,151,206,30,182,28,58,3,65,221,220,129,26,192,217,252,148,79,60,217,228,10,65,185,55,29,161,143,39,135,168,163,180,191,118,127,229,104,150,83,110,200,59,29,124,163,143,146,176,94,250 };
    byte_vec_t pk { 2,77,226,234,49,167,212,1,66,165,54,13,107,38,98,65,61,54,32,72,155,173,194,65,34,198,252,57,190,137,12,77,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 238 ") {
    byte_vec_t msg { 22,228,120,73 };
    byte_vec_t sig { 42,131,36,44,238,223,68,75,230,185,153,161,147,80,18,203,163,16,40,128,11,117,95,23,15,39,209,46,206,121,104,245,6,76,152,196,7,236,234,228,39,83,67,194,216,13,170,189,74,237,23,18,95,233,113,194,36,61,43,42,86,42,136,54 };
    byte_vec_t pk { 4,201,126,129,95,10,223,17,98,112,52,27,101,228,82,224,164,142,16,0,149,244,129,28,249,178,222,243,218,166,2,205,113,52,197,93,57,50,195,205,46,230,188,16,153,79,180,168,218,233,103,62,148,162,233,243,115,222,125,105,48,249,90,8,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 238 ") {
    byte_vec_t msg { 159,213,110,252 };
    byte_vec_t sig { 140,75,85,230,170,0,51,150,36,112,165,142,112,79,147,221,0,201,98,0,136,130,1,147,46,191,28,196,222,172,215,168,182,17,8,33,200,150,142,158,25,182,15,158,172,81,79,121,24,236,157,37,226,44,126,194,244,170,55,140,40,203,71,202 };
    byte_vec_t pk { 4,134,17,194,164,241,84,193,78,171,46,125,176,132,139,162,13,183,189,130,52,128,119,42,163,180,161,25,138,48,210,161,77,19,124,210,39,199,141,109,184,115,75,241,140,131,155,224,53,192,157,218,170,5,125,4,63,73,177,60,164,41,47,220,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 238 ") {
    byte_vec_t msg { 71,88,205,245 };
    byte_vec_t sig { 57,218,158,231,190,189,128,80,183,204,110,240,158,239,87,91,179,124,128,216,250,17,140,136,123,39,63,196,32,254,238,160,40,71,207,116,232,161,187,149,213,111,141,64,107,43,16,49,209,7,101,106,184,84,147,73,122,23,13,3,158,26,213,159 };
    byte_vec_t pk { 2,41,115,8,17,108,21,110,85,132,251,200,137,1,208,74,127,111,126,242,109,232,57,77,223,82,92,113,15,174,234,252,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 238 ") {
    byte_vec_t msg { 112,89,219,155 };
    byte_vec_t sig { 181,130,248,252,52,183,91,149,150,141,51,188,24,158,153,206,157,54,109,57,157,75,176,122,209,254,2,210,127,163,120,112,110,163,124,94,241,169,113,179,15,104,170,106,230,248,94,5,21,146,123,29,231,49,129,126,233,8,138,38,166,171,113,12 };
    byte_vec_t pk { 3,227,87,14,104,9,237,155,252,228,219,19,123,152,33,166,151,252,87,134,29,49,235,236,95,232,215,165,133,189,118,158,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 239 ") {
    byte_vec_t msg { 62,57,170,180 };
    byte_vec_t sig { 186,45,216,3,217,136,15,115,40,96,72,77,233,65,228,206,42,116,148,37,19,66,2,151,148,193,250,201,232,65,143,54,8,150,229,206,106,29,54,85,155,201,249,17,157,72,38,244,192,71,183,224,244,184,211,24,150,81,187,12,247,232,174,15 };
    byte_vec_t pk { 4,248,232,59,229,158,57,46,151,233,156,103,196,147,249,200,129,0,53,42,82,144,39,73,81,99,71,176,129,212,200,209,59,235,170,214,49,218,221,57,235,255,252,143,253,21,124,137,18,90,30,188,170,41,153,21,117,177,95,49,167,57,145,79,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 239 ") {
    byte_vec_t msg { 7,187,101,27 };
    byte_vec_t sig { 236,60,109,246,131,147,23,140,152,19,24,89,1,78,134,139,164,170,151,51,174,157,90,125,121,146,118,128,52,72,252,153,133,203,133,0,55,52,172,21,86,64,88,48,208,69,137,30,198,44,122,11,22,27,82,228,80,209,17,89,25,212,201,152 };
    byte_vec_t pk { 4,186,169,68,185,47,47,135,163,9,236,243,218,198,28,109,141,157,144,203,2,177,34,71,39,96,47,233,58,124,69,138,196,173,147,92,162,168,253,216,109,113,99,240,165,209,234,126,27,121,8,28,86,36,41,207,214,30,219,177,143,92,144,82,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 239 ") {
    byte_vec_t msg { 91,176,193,226 };
    byte_vec_t sig { 137,0,203,119,0,60,107,187,61,63,2,171,170,163,63,217,83,61,84,71,77,244,122,78,31,213,172,126,53,128,86,78,184,66,178,118,59,161,144,247,156,11,6,68,241,187,175,255,237,187,132,69,193,94,54,13,210,236,103,185,77,169,16,41 };
    byte_vec_t pk { 2,233,68,184,38,255,42,106,138,206,51,10,188,119,136,248,31,51,19,137,95,11,151,238,35,127,197,48,130,23,44,128,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 239 ") {
    byte_vec_t msg { 39,228,76,176 };
    byte_vec_t sig { 225,249,139,89,21,41,127,53,80,200,172,217,20,113,208,125,207,207,214,113,127,216,178,130,250,8,188,226,249,82,119,131,63,82,194,52,159,105,124,69,222,52,1,214,201,0,240,175,156,139,129,190,30,102,192,158,2,222,12,164,221,163,111,130 };
    byte_vec_t pk { 3,181,112,116,225,87,254,26,244,48,204,148,215,136,120,190,59,195,130,159,206,146,167,218,205,87,44,152,13,12,14,130,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 240 ") {
    byte_vec_t msg { 135,66,234,29 };
    byte_vec_t sig { 98,57,183,43,102,132,24,110,180,164,74,138,223,34,70,188,38,243,234,231,245,71,209,55,197,172,227,88,191,14,94,114,220,219,178,99,48,66,17,139,185,177,146,249,89,66,39,210,31,179,137,36,193,202,57,181,153,236,200,174,200,79,24,173 };
    byte_vec_t pk { 4,207,183,75,206,127,143,1,18,25,102,239,153,145,150,35,66,10,167,242,28,157,9,199,119,47,249,88,119,247,25,223,179,179,222,168,93,202,192,226,38,87,21,93,153,133,6,38,90,113,13,227,14,91,27,227,255,190,71,41,211,19,242,135,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 240 ") {
    byte_vec_t msg { 130,215,68,243 };
    byte_vec_t sig { 236,246,44,93,183,168,241,197,76,115,104,63,49,209,105,44,161,191,74,43,151,121,6,9,108,210,29,171,78,34,220,75,11,226,131,184,80,215,234,70,203,169,40,219,29,31,168,95,101,239,103,83,94,190,0,212,229,148,245,133,49,172,67,76 };
    byte_vec_t pk { 4,108,63,217,159,252,181,245,186,229,34,133,196,15,176,178,36,10,144,208,8,135,219,45,61,254,89,103,170,104,246,76,120,161,124,232,175,24,69,160,122,12,165,87,112,24,106,214,139,33,12,193,123,76,195,197,227,141,4,98,254,220,142,255,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 240 ") {
    byte_vec_t msg { 21,247,80,125 };
    byte_vec_t sig { 23,157,65,0,217,23,32,184,7,17,11,78,79,118,162,179,196,18,184,6,17,194,239,23,38,115,247,234,179,49,145,114,67,69,65,15,253,227,184,155,29,250,225,171,40,227,199,59,171,54,55,156,118,139,57,198,157,174,137,22,202,12,32,173 };
    byte_vec_t pk { 3,220,37,26,211,152,229,139,115,86,120,99,152,10,246,99,79,54,180,185,132,182,166,68,95,129,106,17,234,54,245,7,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 240 ") {
    byte_vec_t msg { 59,56,126,160 };
    byte_vec_t sig { 74,89,158,157,125,220,180,178,65,179,147,143,33,237,98,137,146,123,242,18,5,69,147,56,102,65,121,252,53,38,234,107,175,5,25,96,179,13,37,2,79,68,188,12,201,59,169,27,69,228,209,166,251,226,206,158,117,138,188,111,111,176,21,146 };
    byte_vec_t pk { 2,23,14,181,29,66,41,224,254,116,161,240,47,29,72,139,105,72,94,11,61,236,55,214,244,41,129,118,215,0,59,254,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 241 ") {
    byte_vec_t msg { 12,49,207,211 };
    byte_vec_t sig { 119,29,139,230,180,166,155,35,128,35,108,252,227,140,151,201,115,27,181,16,166,64,154,71,175,211,22,1,194,204,46,103,147,170,118,20,239,151,118,71,23,95,183,194,254,236,160,135,40,151,9,129,9,234,240,191,37,46,114,52,63,158,105,80 };
    byte_vec_t pk { 4,112,120,246,18,127,151,18,186,99,206,192,80,95,125,232,252,177,77,22,37,23,130,34,177,161,176,39,150,226,90,169,44,210,43,110,86,177,194,189,232,121,2,58,208,206,182,53,184,61,89,43,113,134,214,206,4,134,28,254,67,209,213,209,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 241 ") {
    byte_vec_t msg { 188,18,243,58 };
    byte_vec_t sig { 211,96,100,178,137,221,240,28,63,147,87,187,61,213,6,15,217,11,36,208,240,198,59,254,241,14,9,201,127,180,148,7,215,226,83,151,171,127,93,177,251,109,241,71,198,173,163,205,56,126,76,155,178,48,157,116,123,97,243,74,154,129,238,119 };
    byte_vec_t pk { 4,200,66,242,168,159,141,163,213,110,206,8,17,94,83,164,219,3,153,78,15,254,66,162,53,146,77,112,3,58,1,230,225,56,194,239,178,102,243,102,204,61,234,212,176,126,221,181,132,237,148,179,82,254,194,87,95,48,97,11,64,7,156,74,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 241 ") {
    byte_vec_t msg { 240,64,208,0 };
    byte_vec_t sig { 212,236,61,128,99,217,242,136,29,253,158,69,39,206,253,234,226,24,154,148,129,225,236,157,114,113,65,52,39,208,61,116,96,154,100,127,234,182,104,249,7,105,214,139,175,69,199,126,236,252,232,173,213,95,96,16,130,164,85,84,126,99,129,254 };
    byte_vec_t pk { 2,142,202,42,208,123,96,141,33,55,101,66,140,132,60,145,232,237,249,192,190,80,245,245,196,144,183,35,131,55,109,246,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 241 ") {
    byte_vec_t msg { 226,140,247,131 };
    byte_vec_t sig { 138,195,76,59,57,65,150,198,254,53,117,143,19,185,114,39,202,149,133,156,121,184,28,137,80,43,248,51,191,109,140,240,158,219,153,184,45,146,242,53,43,197,161,217,174,247,108,104,250,114,139,203,197,85,102,20,72,4,231,123,174,193,216,216 };
    byte_vec_t pk { 2,88,129,142,149,21,123,167,139,178,219,138,107,173,155,118,8,167,225,83,77,213,248,214,75,187,48,199,76,254,155,6,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 242 ") {
    byte_vec_t msg { 91,131,2,78 };
    byte_vec_t sig { 123,197,185,231,136,2,174,139,91,54,66,148,63,40,154,65,30,204,247,50,28,247,55,236,54,28,139,117,56,57,82,25,232,112,237,143,187,206,98,48,89,132,44,20,35,94,21,220,74,209,54,242,176,7,14,37,31,214,132,222,21,47,57,128 };
    byte_vec_t pk { 4,50,206,168,169,63,208,155,229,130,232,228,211,81,96,220,180,230,240,131,22,169,26,101,189,132,72,138,153,214,229,126,6,144,81,134,105,48,26,25,179,230,162,4,124,19,206,248,133,185,171,236,19,170,147,175,151,186,121,143,7,132,78,162,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 242 ") {
    byte_vec_t msg { 237,33,56,109 };
    byte_vec_t sig { 44,154,88,131,2,234,10,37,52,160,30,155,119,177,112,60,210,16,87,66,171,244,14,9,237,28,153,92,161,125,200,189,211,62,43,232,152,7,237,159,152,172,52,66,45,12,124,98,39,254,214,79,195,21,224,101,178,1,129,86,231,174,255,211 };
    byte_vec_t pk { 4,177,98,74,213,12,56,175,3,178,13,33,125,242,27,130,163,85,175,180,202,133,203,46,67,95,105,100,160,56,7,25,105,81,245,89,189,23,122,48,207,94,25,140,40,124,211,38,236,234,223,223,21,145,214,47,45,188,6,139,183,45,192,58,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 242 ") {
    byte_vec_t msg { 72,175,210,160 };
    byte_vec_t sig { 111,231,166,1,58,252,211,9,127,77,242,6,37,249,177,133,40,144,77,117,78,0,130,234,71,91,143,121,65,47,230,127,88,244,249,96,42,221,2,164,131,10,154,78,66,202,182,246,2,160,18,28,228,205,18,59,103,175,147,146,80,81,84,77 };
    byte_vec_t pk { 3,81,5,186,78,84,227,3,0,188,13,98,179,95,64,30,244,148,78,122,92,58,6,91,31,182,91,109,169,10,171,96,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 242 ") {
    byte_vec_t msg { 2,155,49,198 };
    byte_vec_t sig { 8,171,131,186,91,148,3,206,37,7,10,47,77,100,59,27,111,32,220,188,176,110,202,119,215,126,66,115,101,198,182,173,11,41,3,164,232,193,137,116,193,55,125,19,103,76,121,170,16,60,18,36,46,195,206,96,102,208,212,30,216,154,74,246 };
    byte_vec_t pk { 2,3,111,238,113,45,127,62,56,95,79,28,237,117,38,33,174,121,189,249,104,75,167,41,172,59,183,176,74,169,135,51,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 243 ") {
    byte_vec_t msg { 87,195,127,169 };
    byte_vec_t sig { 129,96,76,39,152,39,148,48,168,229,50,3,27,181,181,46,61,95,67,172,146,230,238,220,173,93,110,34,178,62,221,2,25,21,254,229,174,151,69,61,220,227,184,57,81,124,164,176,221,168,141,251,101,189,183,98,66,57,95,122,128,23,243,50 };
    byte_vec_t pk { 4,206,47,149,74,216,222,116,241,87,196,170,90,170,16,114,86,17,147,211,198,74,54,46,13,192,28,4,64,227,144,226,78,154,242,249,73,71,206,63,140,114,244,211,217,113,85,170,209,132,228,40,90,237,60,42,142,44,116,139,184,1,128,57,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 243 ") {
    byte_vec_t msg { 217,11,83,69 };
    byte_vec_t sig { 25,89,139,76,217,67,45,156,196,246,176,228,33,50,203,159,107,109,243,215,233,241,18,154,154,16,13,4,78,149,158,45,63,156,59,163,2,114,18,244,20,49,161,72,114,115,163,242,234,97,133,123,86,136,176,22,28,12,164,105,181,239,43,6 };
    byte_vec_t pk { 4,13,24,193,253,112,152,84,73,8,144,242,228,99,208,201,84,193,205,45,207,103,25,209,157,139,243,252,108,93,171,200,107,195,253,49,122,214,253,125,112,225,12,76,111,243,21,90,1,122,200,230,64,126,126,149,47,75,69,93,216,47,81,242,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 243 ") {
    byte_vec_t msg { 213,202,16,128 };
    byte_vec_t sig { 193,96,187,196,121,90,103,244,181,43,51,142,234,200,124,26,55,216,241,177,217,117,121,132,170,81,182,4,191,254,229,202,43,121,102,47,36,113,170,144,74,211,183,51,231,6,126,65,212,172,160,216,134,232,200,70,81,135,36,245,67,27,36,57 };
    byte_vec_t pk { 2,42,29,141,183,171,108,58,52,118,41,44,25,167,131,171,63,254,21,61,71,107,215,204,125,106,115,10,184,48,14,195,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 243 ") {
    byte_vec_t msg { 152,197,243,182 };
    byte_vec_t sig { 38,251,116,38,31,161,180,117,226,193,188,5,237,97,67,219,6,78,6,119,185,8,20,106,244,152,8,197,116,27,32,88,2,19,36,134,86,10,39,90,161,219,83,147,182,112,212,114,84,14,59,34,0,218,21,60,92,166,7,34,155,178,11,79 };
    byte_vec_t pk { 2,207,81,204,247,103,216,84,100,152,92,47,206,17,233,250,18,170,252,45,38,195,49,70,160,169,102,250,159,65,53,202,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 244 ") {
    byte_vec_t msg { 88,24,178,20 };
    byte_vec_t sig { 244,9,191,182,118,88,109,53,233,23,233,159,136,74,16,30,142,71,39,208,184,255,56,37,131,36,181,145,246,252,255,13,116,113,95,60,214,14,46,82,229,174,2,26,81,22,169,220,209,17,55,161,38,152,5,76,114,38,247,59,185,10,14,64 };
    byte_vec_t pk { 4,112,20,211,240,13,104,173,49,217,161,141,159,48,98,254,85,66,254,57,146,212,95,150,157,82,198,19,127,11,137,33,239,121,97,219,139,152,42,91,209,117,140,160,145,152,70,251,156,221,4,173,55,113,111,102,243,192,52,169,95,164,190,128,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 244 ") {
    byte_vec_t msg { 84,107,138,150 };
    byte_vec_t sig { 206,23,122,12,85,79,7,129,197,170,220,111,191,136,50,3,68,132,170,190,68,38,72,229,203,35,22,92,206,238,43,104,21,30,135,13,158,202,169,231,72,20,127,83,78,156,208,240,111,255,158,164,191,215,122,166,149,237,75,112,38,163,20,149 };
    byte_vec_t pk { 4,13,67,36,245,242,82,137,43,22,183,157,144,140,202,203,17,103,141,115,59,197,62,151,21,200,211,105,106,55,121,175,78,246,46,69,191,4,27,110,62,2,188,221,23,160,31,250,160,70,157,239,153,145,252,100,8,230,229,134,69,67,9,155,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 244 ") {
    byte_vec_t msg { 118,22,138,200 };
    byte_vec_t sig { 93,63,25,229,25,105,248,189,76,237,180,103,224,208,56,219,45,25,65,81,252,226,42,74,230,109,184,79,29,9,202,26,207,21,185,7,223,133,6,228,165,185,134,246,76,162,217,227,4,40,234,70,173,247,123,32,148,44,186,198,215,131,59,55 };
    byte_vec_t pk { 2,74,247,224,138,177,187,110,31,114,29,225,205,153,103,206,3,212,75,134,80,45,174,153,244,191,20,76,88,241,46,139,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 244 ") {
    byte_vec_t msg { 8,69,201,186 };
    byte_vec_t sig { 85,239,117,197,165,108,158,32,100,181,169,251,110,179,197,105,4,196,237,3,200,13,159,15,135,67,200,110,253,83,236,50,210,201,119,233,130,237,57,229,53,240,131,133,44,50,173,24,20,222,41,86,189,34,105,30,114,232,175,92,71,23,198,39 };
    byte_vec_t pk { 2,11,120,92,103,209,105,62,188,17,96,231,100,187,192,14,20,198,6,255,64,200,139,228,23,188,177,29,179,160,74,101,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 245 ") {
    byte_vec_t msg { 122,221,149,0 };
    byte_vec_t sig { 97,22,135,72,26,52,235,59,84,103,204,181,202,246,192,65,35,39,166,74,156,255,90,118,33,164,186,254,229,87,22,208,255,118,242,176,137,115,3,223,110,247,30,196,134,151,166,236,231,24,145,246,10,160,211,221,112,223,187,232,52,211,248,48 };
    byte_vec_t pk { 4,198,30,176,166,15,96,135,64,88,139,54,147,207,81,120,64,64,141,204,30,230,47,226,166,199,32,68,40,28,56,223,27,124,52,42,189,195,50,216,100,216,12,186,196,189,238,186,103,207,212,134,41,80,43,103,129,47,83,35,188,113,86,93,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 245 ") {
    byte_vec_t msg { 187,46,204,78 };
    byte_vec_t sig { 130,34,102,18,113,53,59,162,34,205,154,240,11,39,18,156,236,7,81,66,12,244,78,58,209,138,5,20,118,95,133,63,63,72,136,26,6,86,244,62,65,227,93,11,61,137,91,42,69,222,44,130,128,56,231,32,70,209,173,64,96,57,166,166 };
    byte_vec_t pk { 4,32,12,7,72,216,207,13,89,109,119,148,137,162,35,228,152,36,154,0,68,211,205,82,4,5,175,107,9,190,97,242,73,58,176,106,34,202,243,222,98,111,169,244,168,108,107,118,30,133,170,130,90,199,69,13,82,227,232,122,131,225,200,185,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 245 ") {
    byte_vec_t msg { 28,160,231,229 };
    byte_vec_t sig { 234,120,69,75,68,25,182,26,51,44,247,18,66,74,155,154,75,90,5,69,162,169,253,176,109,38,4,214,50,216,191,190,209,90,110,33,99,247,172,19,51,236,200,188,148,16,0,52,232,232,245,241,100,195,241,161,118,180,243,118,97,50,87,147 };
    byte_vec_t pk { 2,156,182,19,133,39,49,125,113,26,112,137,37,137,133,113,131,138,210,214,203,51,27,9,141,219,126,221,159,129,83,76,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 245 ") {
    byte_vec_t msg { 163,88,94,85 };
    byte_vec_t sig { 234,106,136,34,8,210,238,113,179,10,135,193,92,249,1,129,114,78,31,135,236,143,26,85,178,108,88,226,155,108,25,104,78,37,57,225,16,167,27,78,32,193,232,25,103,203,120,174,74,76,249,179,143,130,97,201,1,37,132,104,179,1,240,27 };
    byte_vec_t pk { 3,239,145,111,151,200,58,127,182,217,26,114,113,228,9,235,70,42,240,219,244,23,17,15,24,172,193,89,162,14,13,206,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 246 ") {
    byte_vec_t msg { 170,61,99,9 };
    byte_vec_t sig { 13,43,30,152,219,184,100,109,213,225,197,99,212,21,223,209,245,141,177,120,57,223,5,67,221,201,216,251,173,180,164,61,200,135,70,103,233,32,140,87,75,160,105,69,14,94,19,116,142,66,220,249,139,32,185,174,192,65,26,86,91,227,207,3 };
    byte_vec_t pk { 4,212,87,79,190,225,184,186,214,36,38,2,24,102,55,9,169,105,51,251,166,90,121,22,117,218,172,172,99,12,212,248,26,18,100,58,238,26,68,131,88,154,113,9,181,20,242,205,143,218,248,2,197,246,99,106,187,163,84,140,109,204,115,209,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 246 ") {
    byte_vec_t msg { 108,12,238,173 };
    byte_vec_t sig { 100,8,152,220,65,253,108,48,18,177,202,185,124,15,252,212,191,18,78,169,51,85,146,85,38,167,26,204,105,165,1,187,218,96,56,109,28,145,226,95,184,140,161,197,220,248,193,92,192,252,102,152,65,217,116,214,37,249,200,129,187,208,204,187 };
    byte_vec_t pk { 4,238,189,3,207,119,185,195,170,157,134,166,20,98,63,108,182,228,239,33,137,189,162,142,52,86,185,214,196,61,120,114,87,154,101,216,118,168,141,76,198,54,115,12,90,0,210,129,128,27,43,66,168,175,86,61,210,169,127,52,94,251,192,11,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 246 ") {
    byte_vec_t msg { 196,227,130,66 };
    byte_vec_t sig { 211,163,165,232,221,196,47,236,240,51,104,161,149,159,187,98,199,185,237,97,59,187,21,17,180,25,226,151,31,57,153,94,52,67,135,162,131,2,183,210,65,108,204,159,105,209,28,15,189,16,61,126,91,15,52,90,116,57,216,231,54,180,180,217 };
    byte_vec_t pk { 2,167,49,175,234,148,200,102,212,222,217,105,64,14,87,87,100,231,99,137,177,119,179,1,109,233,198,236,54,122,188,45,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 246 ") {
    byte_vec_t msg { 32,112,109,238 };
    byte_vec_t sig { 92,93,165,22,186,182,229,175,9,120,218,213,211,80,72,53,102,135,137,210,197,137,24,165,40,79,44,15,98,48,128,155,61,249,45,222,214,195,167,149,200,156,120,89,67,58,16,41,163,66,83,58,132,176,115,78,30,235,198,29,24,225,216,250 };
    byte_vec_t pk { 3,44,103,190,198,48,53,248,196,177,96,205,194,121,173,219,217,98,227,185,249,71,229,224,171,185,31,39,241,231,81,115,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 247 ") {
    byte_vec_t msg { 78,129,204,29 };
    byte_vec_t sig { 12,39,95,65,78,179,15,133,105,137,103,78,213,201,201,192,63,93,90,157,155,226,73,204,58,223,176,126,11,201,167,79,173,208,234,151,36,1,39,186,195,245,250,46,117,37,77,110,133,241,164,122,56,77,217,34,23,151,151,121,252,68,22,192 };
    byte_vec_t pk { 4,184,174,9,255,53,169,244,4,100,45,176,159,62,241,188,123,129,63,155,44,9,152,135,213,4,138,55,219,132,95,58,61,175,150,234,71,51,242,69,206,152,103,136,250,51,235,173,56,105,162,21,253,60,36,89,133,254,161,16,196,161,139,200,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 247 ") {
    byte_vec_t msg { 113,144,141,92 };
    byte_vec_t sig { 227,244,195,141,44,218,33,63,71,62,139,229,148,166,14,182,160,96,164,56,205,8,122,122,196,238,68,2,81,152,186,36,165,190,204,106,43,131,39,142,198,161,202,244,70,186,179,106,94,178,135,3,120,185,169,226,92,17,174,224,146,24,67,9 };
    byte_vec_t pk { 4,226,197,81,84,17,232,113,182,188,110,132,169,205,9,147,73,254,82,58,96,5,127,36,151,187,66,110,121,159,14,185,67,155,148,154,44,196,17,71,59,80,130,132,225,18,127,47,113,119,88,3,71,243,183,211,89,215,1,60,229,117,74,134,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 247 ") {
    byte_vec_t msg { 116,166,20,104 };
    byte_vec_t sig { 192,102,157,6,75,229,71,95,204,143,147,225,184,125,16,48,78,173,241,193,156,175,167,210,121,119,177,103,24,9,18,147,232,220,120,45,96,7,89,222,252,187,25,125,158,69,9,191,8,79,69,16,20,35,144,187,8,171,70,126,171,188,10,210 };
    byte_vec_t pk { 3,3,172,146,110,194,198,177,146,176,38,212,222,212,43,69,198,147,173,246,136,226,21,190,127,32,205,126,215,56,2,16,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 247 ") {
    byte_vec_t msg { 198,68,8,236 };
    byte_vec_t sig { 66,193,101,247,186,74,200,79,26,176,147,99,127,92,26,137,191,57,64,5,242,165,194,198,246,67,103,96,16,207,1,137,62,136,65,234,233,124,222,172,247,164,241,98,75,252,91,221,209,12,228,59,109,56,156,91,55,37,62,213,42,15,37,202 };
    byte_vec_t pk { 3,195,105,62,1,83,55,198,217,5,132,207,180,206,88,44,47,254,175,120,10,235,213,204,204,111,69,51,170,196,173,67,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 248 ") {
    byte_vec_t msg { 216,236,132,47 };
    byte_vec_t sig { 5,77,127,99,78,211,217,32,207,182,103,123,207,56,28,20,175,91,79,98,197,226,83,99,191,123,29,87,28,29,196,201,222,189,214,161,54,231,73,31,226,41,165,45,30,114,18,112,77,9,145,12,98,152,81,29,58,241,115,0,153,61,34,224 };
    byte_vec_t pk { 4,42,159,88,70,139,28,61,131,91,78,159,235,15,102,14,149,226,133,90,164,254,12,192,239,108,179,133,241,189,250,130,32,71,70,173,129,68,164,126,243,177,244,114,249,73,124,53,169,86,178,7,143,113,77,82,25,15,39,54,184,70,145,250,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 248 ") {
    byte_vec_t msg { 39,240,223,66 };
    byte_vec_t sig { 179,10,112,102,236,59,207,24,206,1,183,224,127,198,18,16,116,154,30,90,72,123,215,253,159,212,20,70,220,221,7,151,57,174,14,14,180,103,133,177,250,91,223,29,98,62,239,200,98,240,230,149,61,82,31,102,46,129,165,226,140,181,225,109 };
    byte_vec_t pk { 4,117,200,124,223,117,38,118,160,230,143,149,120,117,34,26,6,14,213,234,186,100,143,202,222,186,254,134,84,55,97,68,14,4,115,244,19,26,126,91,63,117,132,170,71,119,45,255,84,156,151,213,218,43,195,23,217,217,67,115,151,97,197,56,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 248 ") {
    byte_vec_t msg { 143,146,143,129 };
    byte_vec_t sig { 70,14,170,200,170,237,95,23,124,105,170,184,86,65,172,119,201,132,216,217,167,74,16,198,233,107,156,32,31,162,49,30,17,193,120,38,137,53,60,4,223,6,2,64,218,83,23,55,188,250,208,56,63,113,211,149,15,130,149,231,175,136,215,234 };
    byte_vec_t pk { 2,189,133,3,176,200,224,106,189,17,167,169,35,236,85,220,195,36,150,174,77,91,68,68,24,248,94,213,199,94,79,65,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 248 ") {
    byte_vec_t msg { 118,112,56,80 };
    byte_vec_t sig { 87,121,195,57,135,17,30,35,2,201,207,99,90,67,176,113,185,71,13,27,6,93,207,245,138,103,149,133,181,99,204,121,191,67,227,76,166,115,188,124,175,167,183,36,181,210,95,197,142,75,114,156,187,245,201,222,7,250,140,166,148,147,155,11 };
    byte_vec_t pk { 2,187,233,205,224,165,134,182,95,179,254,183,86,231,46,21,115,46,28,67,128,11,133,90,109,59,137,232,26,197,101,15,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 249 ") {
    byte_vec_t msg { 116,100,18,227 };
    byte_vec_t sig { 95,114,94,204,0,219,175,122,18,151,214,134,38,195,162,63,31,63,67,40,188,123,226,105,67,34,117,171,45,11,9,132,66,135,205,4,227,155,155,188,148,154,254,78,132,111,48,212,170,72,52,83,87,32,218,126,177,189,208,247,82,143,167,30 };
    byte_vec_t pk { 4,229,199,211,133,229,222,248,157,119,169,2,235,39,255,207,66,97,56,42,200,199,197,92,190,122,75,57,156,99,195,137,143,162,190,15,78,227,152,121,213,174,54,16,8,77,83,254,38,44,201,63,123,112,141,168,71,99,210,141,73,97,156,102,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 249 ") {
    byte_vec_t msg { 166,1,52,57 };
    byte_vec_t sig { 211,5,178,75,156,210,144,73,212,57,42,219,189,47,112,71,153,198,33,184,103,122,107,5,252,84,112,194,166,130,53,179,47,248,30,74,100,37,43,178,200,93,148,114,130,96,173,127,3,217,156,237,136,153,180,143,114,88,157,242,90,193,197,37 };
    byte_vec_t pk { 4,23,132,187,0,60,93,9,16,160,220,203,101,243,120,167,135,254,171,51,233,174,211,160,77,60,216,53,249,83,40,14,242,248,65,89,127,157,178,196,91,2,54,241,130,153,40,40,58,34,98,141,67,158,53,73,52,25,20,110,157,118,162,198,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 249 ") {
    byte_vec_t msg { 111,46,151,202 };
    byte_vec_t sig { 147,172,74,125,87,58,211,216,177,27,246,57,152,51,98,22,72,60,69,85,25,163,179,129,182,144,59,235,59,144,230,195,45,135,163,27,64,95,20,195,125,35,108,70,53,157,87,70,51,229,160,39,194,179,164,253,118,8,180,169,228,72,197,70 };
    byte_vec_t pk { 2,194,40,74,218,225,82,152,138,26,187,53,191,142,67,245,238,120,202,84,184,230,14,113,115,38,155,186,210,240,79,119,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 249 ") {
    byte_vec_t msg { 92,37,27,173 };
    byte_vec_t sig { 203,137,122,120,157,136,163,10,214,211,233,0,247,128,3,193,192,29,12,240,124,154,240,9,110,183,189,107,211,183,26,23,166,201,47,234,154,143,244,138,253,214,204,118,114,234,184,52,46,237,242,177,21,31,201,183,32,26,78,172,33,89,45,162 };
    byte_vec_t pk { 2,13,167,192,153,160,118,221,52,42,146,233,160,203,153,129,147,130,60,31,69,95,163,183,128,46,174,97,155,228,57,178,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 250 ") {
    byte_vec_t msg { 127,204,76,131 };
    byte_vec_t sig { 138,65,93,200,201,186,20,131,194,12,213,88,210,208,201,40,190,23,59,217,220,107,21,53,23,23,175,230,11,126,167,245,58,100,95,55,75,142,57,111,221,28,138,12,215,130,52,191,58,241,142,132,19,151,41,236,227,232,56,42,177,31,134,60 };
    byte_vec_t pk { 4,102,179,33,185,53,34,93,62,182,188,68,57,130,8,100,98,186,10,106,16,195,8,52,129,55,230,70,55,50,221,72,125,75,238,223,147,192,80,217,27,19,146,196,138,186,242,105,195,34,199,71,247,32,20,164,49,72,33,105,93,96,219,235,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 250 ") {
    byte_vec_t msg { 84,29,121,115 };
    byte_vec_t sig { 112,47,201,121,38,155,124,127,202,197,128,32,2,76,243,218,105,13,95,248,244,126,14,23,98,43,166,2,19,103,248,67,120,55,203,19,106,177,104,4,150,183,129,181,64,154,161,33,58,8,174,2,154,212,82,85,148,91,80,61,65,114,172,220 };
    byte_vec_t pk { 4,217,80,228,227,204,193,7,135,113,37,232,5,162,105,250,93,39,149,215,201,251,86,26,129,250,206,140,192,198,228,67,129,69,164,127,30,27,224,68,110,31,93,240,225,137,243,140,218,137,107,158,246,116,78,84,17,118,196,211,232,114,241,111,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 250 ") {
    byte_vec_t msg { 200,54,46,138 };
    byte_vec_t sig { 35,167,132,31,18,111,172,181,176,20,187,182,41,4,45,135,229,245,217,24,193,153,41,196,159,76,157,68,81,38,131,11,244,28,119,183,52,125,203,36,125,110,44,129,4,44,189,15,175,66,197,12,55,17,58,14,133,172,246,238,175,179,194,91 };
    byte_vec_t pk { 3,172,234,223,147,151,175,155,160,241,154,138,21,247,113,185,110,28,104,213,98,47,210,246,235,23,102,69,64,27,156,230,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 250 ") {
    byte_vec_t msg { 175,5,231,91 };
    byte_vec_t sig { 117,66,215,26,75,91,59,242,245,236,174,199,248,200,235,29,55,202,195,80,105,112,25,131,197,52,218,4,184,55,85,85,55,191,139,254,196,194,20,174,10,236,167,197,138,89,49,46,66,27,246,159,43,228,111,132,72,156,221,208,80,61,137,77 };
    byte_vec_t pk { 2,43,122,216,167,179,168,119,249,169,176,63,207,247,91,251,39,174,6,93,78,144,166,194,126,4,242,234,238,25,58,34,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 251 ") {
    byte_vec_t msg { 0,173,164,9 };
    byte_vec_t sig { 252,116,77,233,145,103,171,228,118,117,67,84,206,46,59,241,247,64,137,172,177,88,54,151,167,62,222,218,86,145,2,71,116,16,107,226,93,7,139,98,105,128,126,156,66,180,105,50,11,192,113,188,217,12,141,60,54,18,166,113,172,176,93,96 };
    byte_vec_t pk { 4,9,98,41,3,135,155,239,33,234,112,233,166,29,184,142,96,83,178,154,231,254,148,174,18,207,110,57,133,86,184,168,215,140,244,120,10,104,164,237,17,37,206,236,45,182,103,220,207,96,82,215,50,233,219,179,52,59,206,214,136,163,86,55,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 251 ") {
    byte_vec_t msg { 233,216,99,105 };
    byte_vec_t sig { 192,121,232,173,113,38,13,0,85,122,226,254,164,46,233,149,234,162,225,200,55,255,115,114,224,114,36,155,225,122,233,62,44,2,178,193,16,211,20,236,174,143,67,203,45,41,128,81,165,47,225,189,207,48,230,178,41,101,84,20,0,202,52,220 };
    byte_vec_t pk { 4,87,140,94,34,151,135,210,222,132,204,242,202,45,116,135,248,44,10,249,95,218,116,133,6,223,254,217,90,10,126,208,40,15,107,92,225,62,184,113,68,194,241,239,41,72,200,120,88,42,2,193,244,185,127,66,173,94,180,120,75,179,117,235,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 251 ") {
    byte_vec_t msg { 249,131,249,16 };
    byte_vec_t sig { 108,213,70,32,141,131,138,122,1,133,26,53,242,81,234,88,120,196,83,213,82,218,197,245,186,251,61,45,19,172,50,171,150,78,150,35,106,226,127,208,244,236,241,69,7,164,203,112,87,177,4,4,56,103,35,169,5,75,65,114,237,203,150,168 };
    byte_vec_t pk { 3,108,68,239,197,187,58,231,48,92,240,208,123,243,216,178,64,75,123,229,14,21,117,135,124,4,230,241,212,211,47,200,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 251 ") {
    byte_vec_t msg { 76,128,47,168 };
    byte_vec_t sig { 123,253,146,58,232,192,11,57,5,123,181,162,34,1,155,37,123,34,168,174,221,70,206,75,113,14,122,184,97,236,31,21,107,30,10,138,155,203,95,116,36,219,177,143,67,56,61,55,50,53,167,173,248,73,193,52,5,201,24,234,224,228,190,230 };
    byte_vec_t pk { 3,241,12,79,144,7,26,33,214,131,251,16,52,120,107,102,107,67,229,4,0,72,172,22,26,159,188,131,213,87,30,168,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 252 ") {
    byte_vec_t msg { 240,253,18,60 };
    byte_vec_t sig { 165,107,120,242,234,225,250,230,207,131,120,115,168,239,205,214,184,90,143,133,159,5,109,24,19,20,100,44,77,189,75,39,115,40,38,27,244,35,212,3,102,37,61,143,232,245,147,101,168,49,98,67,53,146,46,95,34,60,155,49,170,213,76,122 };
    byte_vec_t pk { 4,43,37,157,195,91,241,242,246,237,218,213,120,150,156,60,110,166,241,38,220,227,246,81,193,120,70,166,236,86,126,11,187,255,194,21,201,149,93,240,10,72,162,230,250,185,212,168,211,127,164,93,13,94,91,181,246,247,63,53,109,140,101,42,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 252 ") {
    byte_vec_t msg { 93,247,80,72 };
    byte_vec_t sig { 38,213,187,63,59,134,95,15,135,252,130,57,229,199,173,169,200,156,140,135,40,120,87,228,228,133,125,25,84,41,29,246,235,86,32,61,79,227,208,195,221,211,6,121,100,101,15,138,237,184,25,54,69,143,169,226,196,130,61,141,127,90,146,216 };
    byte_vec_t pk { 4,93,168,219,169,154,245,40,24,3,134,122,1,60,146,200,220,140,35,141,4,100,47,145,114,215,94,40,113,142,63,140,28,90,230,193,39,227,228,207,43,205,103,116,188,91,8,73,62,196,21,72,236,218,6,244,51,4,151,106,213,174,19,127,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 252 ") {
    byte_vec_t msg { 121,234,136,133 };
    byte_vec_t sig { 108,246,63,175,21,72,42,152,190,45,122,60,63,116,196,234,250,82,252,196,178,76,154,24,103,177,174,220,57,196,195,195,15,185,9,11,253,254,45,251,107,182,171,227,85,226,56,186,80,118,50,0,54,67,149,10,12,220,33,60,234,2,18,19 };
    byte_vec_t pk { 3,245,39,67,79,103,113,176,54,199,193,170,228,165,58,52,145,43,247,185,41,9,148,98,250,6,168,176,49,95,142,30,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 252 ") {
    byte_vec_t msg { 138,47,165,133 };
    byte_vec_t sig { 244,230,89,214,9,190,152,21,202,176,133,212,232,71,228,41,128,60,40,179,220,144,42,12,71,64,198,84,46,64,187,228,115,10,41,4,194,165,232,208,83,219,128,18,79,6,184,53,83,197,72,7,39,196,5,179,212,80,2,203,131,223,155,110 };
    byte_vec_t pk { 2,230,121,228,227,40,248,187,146,83,39,64,139,243,72,116,185,126,58,138,224,253,221,58,60,242,160,191,192,64,153,203,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 253 ") {
    byte_vec_t msg { 0,90,2,121 };
    byte_vec_t sig { 215,180,198,56,226,37,50,71,76,227,183,62,149,54,11,89,34,12,118,203,208,217,115,201,50,150,12,142,55,24,250,168,195,185,5,235,129,157,14,159,190,93,64,150,253,251,248,209,214,178,113,129,251,213,172,254,137,173,126,169,163,103,56,12 };
    byte_vec_t pk { 4,184,138,55,192,69,155,210,4,48,45,231,158,218,226,122,229,222,71,180,72,61,8,189,229,201,123,49,62,20,96,144,99,79,28,246,200,28,60,114,78,117,126,173,6,187,253,54,25,140,242,70,209,106,52,34,112,157,172,139,140,31,9,126,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 253 ") {
    byte_vec_t msg { 93,17,184,79 };
    byte_vec_t sig { 97,19,145,190,32,170,39,132,79,136,188,116,191,123,141,141,26,110,145,219,155,93,93,150,21,150,158,117,173,234,171,148,174,89,107,79,195,179,217,97,167,85,73,98,109,116,29,111,132,191,80,188,228,150,192,96,26,144,144,57,229,192,175,237 };
    byte_vec_t pk { 4,133,222,189,38,99,188,119,94,239,95,11,200,66,205,0,119,146,116,105,225,231,158,252,67,113,240,64,154,239,106,184,107,132,75,151,71,191,8,22,216,42,205,158,62,63,47,88,64,1,25,228,203,216,227,59,167,161,79,63,250,183,192,34,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 253 ") {
    byte_vec_t msg { 50,44,64,108 };
    byte_vec_t sig { 205,160,207,227,128,9,98,71,4,52,33,87,140,205,248,172,241,210,6,188,7,179,124,251,41,226,204,217,146,64,255,64,176,19,187,152,20,157,159,166,212,254,207,174,75,187,204,111,89,144,98,4,214,193,160,151,98,151,61,70,95,123,85,213 };
    byte_vec_t pk { 3,218,186,231,150,204,240,33,204,41,159,222,170,165,94,80,21,49,216,131,91,48,254,164,238,253,43,141,131,253,255,20,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 253 ") {
    byte_vec_t msg { 112,63,23,184 };
    byte_vec_t sig { 54,134,113,140,227,178,41,68,156,99,9,154,226,119,237,42,0,131,176,155,173,20,87,65,230,74,53,184,128,136,141,63,4,146,192,13,156,143,101,169,232,31,209,99,222,88,15,11,18,6,7,28,31,43,97,174,15,135,139,212,99,146,125,130 };
    byte_vec_t pk { 3,64,162,173,118,106,40,151,208,166,122,65,59,13,163,140,183,170,223,101,149,86,127,238,191,64,152,253,210,193,177,71,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 254 ") {
    byte_vec_t msg { 65,87,141,107 };
    byte_vec_t sig { 81,72,5,204,60,117,224,65,89,137,157,113,233,124,149,93,184,220,127,180,113,8,222,249,243,244,47,201,177,84,62,25,167,243,40,229,154,118,198,158,28,61,101,210,2,23,124,143,10,197,177,84,4,42,39,159,139,0,148,245,125,202,97,25 };
    byte_vec_t pk { 4,208,48,3,184,19,112,117,35,42,130,47,217,184,1,74,204,19,219,186,213,145,227,44,175,240,40,180,196,64,173,177,55,206,111,54,234,156,9,44,146,56,25,235,21,192,207,150,121,5,142,97,17,255,98,22,88,125,70,185,4,100,211,66,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 254 ") {
    byte_vec_t msg { 222,38,189,22 };
    byte_vec_t sig { 175,255,184,22,43,133,151,81,23,48,208,98,204,252,71,251,182,194,190,191,87,191,230,143,12,250,76,208,209,76,249,250,248,57,229,166,206,229,94,57,17,78,96,92,200,137,49,153,237,165,197,63,238,47,72,204,226,92,189,200,221,211,26,110 };
    byte_vec_t pk { 4,154,178,225,160,206,139,187,129,194,186,102,88,103,208,224,199,52,212,252,53,34,218,57,160,226,167,108,53,29,25,108,206,217,46,0,248,102,128,109,230,190,198,129,58,71,168,204,159,9,134,47,93,131,71,99,54,124,188,132,245,137,56,116,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 254 ") {
    byte_vec_t msg { 223,75,168,63 };
    byte_vec_t sig { 105,17,188,5,49,71,92,240,91,5,237,150,47,185,249,22,208,8,104,221,80,91,11,250,79,83,180,146,165,42,174,151,118,2,88,24,141,86,241,34,139,40,24,243,72,74,223,229,52,168,79,124,155,183,181,83,33,0,84,169,253,101,122,114 };
    byte_vec_t pk { 3,128,167,143,14,225,103,196,38,98,119,59,4,216,207,150,208,13,208,21,251,194,48,133,232,213,12,162,251,69,232,74,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 254 ") {
    byte_vec_t msg { 225,6,13,120 };
    byte_vec_t sig { 62,180,43,66,131,189,205,17,65,26,17,183,146,166,140,203,110,106,122,156,191,101,23,129,101,251,191,120,240,111,110,80,244,61,2,172,176,41,129,27,94,73,176,152,20,224,116,41,71,145,197,166,107,17,53,119,96,93,157,125,165,189,226,85 };
    byte_vec_t pk { 3,99,133,235,181,56,245,76,98,1,84,76,193,116,136,83,65,25,109,196,39,17,238,89,50,59,226,180,139,38,129,101,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 255 ") {
    byte_vec_t msg { 212,37,222,81 };
    byte_vec_t sig { 107,187,21,21,214,184,12,193,21,58,7,97,88,189,174,136,61,45,116,94,243,228,236,160,78,82,195,12,9,46,179,51,78,121,199,200,5,10,217,154,124,226,218,47,155,90,227,26,243,242,193,213,49,3,174,30,85,226,139,172,28,158,184,16 };
    byte_vec_t pk { 4,112,105,138,172,61,151,0,30,52,189,132,22,78,126,157,218,251,151,126,248,172,222,239,128,96,116,185,105,224,47,172,105,93,75,225,147,82,209,62,128,23,140,151,61,100,196,179,194,72,105,172,190,182,186,87,249,103,16,114,239,185,143,224,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 255 ") {
    byte_vec_t msg { 201,105,249,47 };
    byte_vec_t sig { 181,71,148,109,139,42,38,90,164,103,28,209,178,62,31,106,160,126,198,10,63,119,221,74,43,164,213,197,72,90,51,189,214,96,216,209,61,97,155,128,178,133,74,156,26,1,106,130,189,106,124,63,252,44,142,234,175,188,58,106,33,35,168,99 };
    byte_vec_t pk { 4,59,86,67,113,227,253,217,232,221,246,214,192,224,99,119,89,73,28,88,210,112,169,213,45,85,49,184,193,120,36,203,95,119,231,125,223,45,225,248,22,205,93,107,41,52,213,78,24,201,252,69,89,217,241,102,175,194,96,109,5,152,214,132,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 255 ") {
    byte_vec_t msg { 33,207,43,29 };
    byte_vec_t sig { 151,158,11,0,178,29,24,59,233,171,177,122,197,37,250,141,50,213,14,184,78,134,229,103,25,145,93,145,98,82,133,109,74,22,2,192,68,42,79,90,244,245,189,178,112,57,119,53,109,36,91,244,209,111,167,154,238,71,206,17,51,104,188,159 };
    byte_vec_t pk { 3,120,17,129,209,224,77,137,71,73,101,112,178,22,54,232,111,49,131,16,200,124,131,91,93,94,205,153,77,207,221,34,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 255 ") {
    byte_vec_t msg { 221,177,190,111 };
    byte_vec_t sig { 96,48,146,149,28,160,70,228,216,15,201,34,173,147,99,134,183,219,49,123,212,238,196,145,241,87,17,204,21,26,49,182,33,247,162,117,186,2,58,6,45,133,226,54,253,113,217,232,94,67,54,204,132,82,173,62,81,27,52,0,228,73,15,157 };
    byte_vec_t pk { 2,212,106,240,244,146,0,71,57,155,117,79,70,43,149,216,156,178,108,52,35,110,200,185,160,163,171,247,26,80,134,66,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 256 ") {
    byte_vec_t msg { 205,218,136,68 };
    byte_vec_t sig { 243,231,163,240,106,29,200,234,229,106,61,196,13,65,209,239,202,161,29,26,55,50,87,88,175,176,68,97,109,93,140,60,85,232,45,162,40,29,191,9,55,101,191,76,16,228,41,153,51,143,111,59,2,138,6,69,133,8,83,218,30,82,222,87 };
    byte_vec_t pk { 4,153,169,45,223,81,171,181,172,21,217,226,146,65,35,100,225,48,120,114,42,140,235,14,28,139,33,98,194,238,64,86,237,193,5,1,92,239,135,50,197,158,125,224,216,225,28,12,48,65,73,56,99,5,110,192,178,224,111,60,33,245,155,246,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 256 ") {
    byte_vec_t msg { 20,207,52,55 };
    byte_vec_t sig { 202,58,103,88,106,72,13,42,61,170,76,237,247,180,175,87,176,243,69,241,39,221,6,65,67,191,72,65,122,190,88,47,64,234,99,46,163,232,121,29,149,246,47,147,155,40,107,99,124,194,151,49,164,196,180,132,87,1,231,115,216,158,139,219 };
    byte_vec_t pk { 4,132,49,217,128,96,139,249,252,17,240,201,247,143,0,231,69,33,234,88,228,113,186,240,164,0,37,168,59,48,234,178,187,218,132,189,179,196,195,40,163,27,95,121,183,233,152,73,106,247,99,240,112,122,85,139,223,139,234,27,141,170,106,142,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 256 ") {
    byte_vec_t msg { 155,50,187,185 };
    byte_vec_t sig { 151,45,243,22,217,5,5,76,189,177,188,173,152,184,113,222,179,89,108,190,168,143,5,117,186,56,37,38,96,162,41,155,49,40,214,53,252,127,215,10,40,209,200,164,180,85,149,217,229,67,163,114,193,135,74,154,40,238,14,16,5,54,83,173 };
    byte_vec_t pk { 3,139,253,85,118,95,30,35,185,91,32,228,50,181,184,98,158,101,153,59,195,197,209,134,68,124,44,208,184,115,213,156,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 256 ") {
    byte_vec_t msg { 217,94,213,115 };
    byte_vec_t sig { 11,203,80,59,23,252,72,252,101,13,13,73,219,20,139,4,224,243,19,55,175,92,78,105,73,133,156,230,22,159,228,109,14,44,155,210,45,55,146,52,24,230,233,2,81,5,46,58,201,10,155,187,3,9,80,183,10,73,22,75,113,51,90,23 };
    byte_vec_t pk { 2,52,132,94,123,97,247,246,182,154,215,173,53,86,123,138,60,53,70,114,90,192,177,22,113,82,202,86,154,251,129,165,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 257 ") {
    byte_vec_t msg { 200,164,68,164 };
    byte_vec_t sig { 161,96,161,247,160,24,128,235,22,42,48,176,163,115,139,184,29,253,6,62,36,185,87,234,159,82,190,73,214,199,242,235,53,204,90,187,117,162,142,7,178,84,17,194,10,98,173,32,242,106,87,74,106,165,204,71,170,119,15,99,130,119,156,95 };
    byte_vec_t pk { 4,105,66,11,12,163,80,2,83,55,248,231,101,169,229,18,227,28,102,93,88,70,205,158,135,60,0,30,39,234,132,182,220,191,52,127,202,247,54,69,71,194,164,52,127,190,157,196,176,130,34,86,241,201,73,72,169,216,219,218,160,157,248,73,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 257 ") {
    byte_vec_t msg { 219,128,149,29 };
    byte_vec_t sig { 83,231,156,43,156,143,65,146,144,59,222,225,46,8,220,217,194,244,83,217,78,129,139,66,39,172,125,151,195,113,253,182,55,252,31,75,63,162,228,3,200,42,147,124,176,109,224,31,223,148,40,107,163,12,49,208,47,44,99,6,28,10,140,144 };
    byte_vec_t pk { 4,69,243,133,83,159,97,21,193,247,85,135,169,25,127,215,42,15,212,19,186,105,75,173,194,117,136,220,201,135,165,126,113,39,244,92,143,128,27,73,221,160,213,199,10,221,131,166,188,10,210,175,186,178,120,82,207,18,137,243,55,122,186,99,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 257 ") {
    byte_vec_t msg { 19,245,220,87 };
    byte_vec_t sig { 240,9,5,179,225,30,194,30,160,155,103,212,119,179,183,65,144,70,169,203,132,32,110,49,67,181,138,33,8,11,9,63,65,175,127,0,186,188,46,32,50,63,85,164,248,46,240,9,192,220,173,45,34,242,88,237,247,114,216,241,205,30,104,57 };
    byte_vec_t pk { 2,211,173,196,113,154,185,32,147,134,67,31,182,123,247,51,116,170,183,40,231,91,131,37,43,225,15,157,46,242,46,39,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 257 ") {
    byte_vec_t msg { 76,114,226,104 };
    byte_vec_t sig { 64,116,29,28,192,244,0,176,212,246,98,83,158,50,126,45,37,173,8,37,238,40,190,193,195,65,197,116,102,10,6,233,221,117,13,84,191,64,64,124,76,134,91,111,172,103,112,95,46,251,23,171,195,200,158,16,181,237,242,192,44,203,146,163 };
    byte_vec_t pk { 3,70,169,230,80,223,28,139,168,145,145,12,217,117,110,73,249,135,94,160,255,127,110,32,182,241,75,107,131,227,163,27,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 258 ") {
    byte_vec_t msg { 139,59,95,36 };
    byte_vec_t sig { 146,185,157,125,218,68,110,220,221,63,77,145,2,131,121,45,143,47,14,252,54,208,137,137,36,121,70,14,50,216,168,64,60,239,165,246,249,110,161,167,165,245,254,239,216,248,218,49,102,238,81,42,128,255,46,128,236,44,197,19,117,20,108,104 };
    byte_vec_t pk { 4,93,229,209,57,209,184,82,170,228,14,181,122,111,29,214,178,117,104,182,140,232,111,40,155,148,46,238,178,4,222,198,45,151,36,16,30,106,60,87,48,252,149,122,137,200,42,90,234,236,206,228,174,144,190,240,45,48,47,166,223,99,155,136,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 258 ") {
    byte_vec_t msg { 255,82,78,226 };
    byte_vec_t sig { 75,50,248,251,19,123,237,191,24,145,57,38,254,101,61,82,18,194,94,21,143,247,242,42,43,10,240,177,77,242,3,48,28,48,23,29,225,197,82,217,163,189,123,143,235,125,176,222,9,88,218,22,112,226,232,57,27,115,149,74,125,177,6,53 };
    byte_vec_t pk { 4,231,177,125,217,39,181,118,114,172,143,217,74,224,55,21,66,182,26,29,130,235,63,46,110,125,18,199,134,153,196,209,130,13,219,204,242,230,12,253,49,139,247,155,130,87,174,217,40,129,245,52,185,119,10,249,135,207,125,37,236,64,21,184,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 258 ") {
    byte_vec_t msg { 249,163,77,44 };
    byte_vec_t sig { 229,237,52,216,159,207,209,43,206,26,75,127,155,249,49,0,38,35,151,193,238,141,118,27,121,230,165,142,173,66,209,22,141,218,202,117,195,97,225,9,106,203,189,232,86,179,110,15,235,68,30,128,145,203,28,200,220,45,83,223,216,179,79,172 };
    byte_vec_t pk { 3,174,119,129,211,39,3,243,83,239,16,186,63,59,150,15,79,26,213,163,254,87,240,141,245,255,210,27,110,111,112,89,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 258 ") {
    byte_vec_t msg { 199,89,197,107 };
    byte_vec_t sig { 149,24,240,61,101,107,19,209,76,99,103,7,54,36,35,208,237,150,48,238,225,39,89,119,255,40,31,26,48,108,44,111,82,76,221,219,214,177,81,196,244,1,169,123,134,176,221,187,107,98,235,63,130,116,107,151,160,160,174,174,58,20,50,215 };
    byte_vec_t pk { 3,197,218,213,161,93,121,165,169,91,54,1,48,82,84,58,53,78,222,54,126,212,41,53,167,246,118,130,207,133,68,114,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 259 ") {
    byte_vec_t msg { 105,115,47,223 };
    byte_vec_t sig { 192,89,135,74,12,57,174,139,254,147,29,122,53,29,113,239,136,164,90,140,69,154,154,144,191,101,15,235,248,67,125,11,19,157,70,204,244,78,23,218,9,15,53,86,110,5,23,170,224,254,152,21,234,100,196,162,138,58,132,108,220,252,41,25 };
    byte_vec_t pk { 4,110,152,58,117,32,235,119,150,156,85,156,159,223,236,217,62,107,13,29,212,82,223,216,238,5,61,58,163,12,78,176,72,172,175,141,205,7,112,156,239,153,15,114,135,77,162,166,242,22,32,162,172,111,40,66,117,145,24,51,157,69,112,92,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 259 ") {
    byte_vec_t msg { 96,2,134,234 };
    byte_vec_t sig { 2,194,143,42,23,80,101,254,145,16,165,154,210,135,57,169,15,125,126,208,206,108,96,192,61,90,101,183,128,111,203,191,170,80,132,86,80,229,132,159,93,222,165,160,117,108,13,71,134,242,22,55,178,152,246,87,141,233,72,84,42,21,178,243 };
    byte_vec_t pk { 4,116,114,124,7,195,226,180,237,113,140,154,196,83,232,162,143,80,221,71,108,106,41,18,169,121,229,116,208,249,233,27,175,67,204,58,31,103,222,172,243,68,22,162,113,32,21,219,166,52,141,15,45,123,187,222,63,222,159,20,220,130,159,91,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 259 ") {
    byte_vec_t msg { 253,47,232,120 };
    byte_vec_t sig { 6,14,42,117,62,1,56,106,40,103,140,25,34,18,172,208,82,6,236,31,253,34,224,22,176,13,124,152,230,232,57,135,123,127,33,158,231,66,73,66,134,83,226,125,62,227,232,123,190,202,214,60,103,22,162,214,184,113,153,171,7,245,147,79 };
    byte_vec_t pk { 2,201,125,1,71,108,211,103,43,175,19,155,170,118,41,178,201,145,179,126,102,150,55,184,32,24,52,53,42,196,189,237,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 259 ") {
    byte_vec_t msg { 7,36,86,39 };
    byte_vec_t sig { 182,133,119,91,72,195,100,176,124,191,100,48,238,154,34,88,2,89,113,179,126,182,23,247,59,172,35,187,200,6,236,223,181,197,81,73,4,234,31,73,44,166,87,26,29,210,188,179,110,128,235,68,130,83,15,113,207,146,0,38,125,125,85,9 };
    byte_vec_t pk { 2,206,4,112,155,196,6,91,129,28,87,206,210,144,237,13,64,235,104,219,176,64,171,227,229,49,101,132,101,80,221,199,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 260 ") {
    byte_vec_t msg { 63,39,92,203 };
    byte_vec_t sig { 93,127,211,91,50,174,71,67,193,17,90,144,227,42,153,194,219,219,137,92,128,129,218,79,157,26,212,192,19,166,28,201,105,162,134,155,237,254,35,249,76,8,139,243,108,221,108,137,8,143,62,0,55,220,26,4,161,136,18,187,15,124,197,206 };
    byte_vec_t pk { 4,197,126,71,48,199,60,121,67,35,89,216,11,212,247,46,255,110,129,55,134,192,38,76,116,211,159,236,133,184,79,69,181,250,168,183,8,242,164,213,224,144,154,219,97,136,253,246,227,140,237,23,95,182,108,101,35,169,40,69,202,235,144,73,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 260 ") {
    byte_vec_t msg { 56,138,166,154 };
    byte_vec_t sig { 201,230,203,84,73,114,103,164,199,124,38,74,146,92,138,183,22,170,4,181,36,131,107,100,131,253,202,119,190,48,69,6,235,193,93,62,19,126,181,80,160,20,75,237,64,244,55,192,115,110,121,88,187,18,58,169,182,220,141,75,144,30,192,92 };
    byte_vec_t pk { 4,11,23,227,254,123,206,109,24,200,59,235,93,38,124,224,116,60,35,119,8,210,43,76,160,81,86,75,87,24,224,102,57,250,82,27,1,86,73,140,227,232,59,219,148,59,34,94,35,174,22,238,29,134,81,163,66,137,44,127,84,198,28,244,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 260 ") {
    byte_vec_t msg { 28,167,238,242 };
    byte_vec_t sig { 155,222,128,149,191,21,246,185,201,179,88,108,163,103,4,143,45,197,201,193,8,135,207,113,19,64,41,74,134,48,48,232,230,136,150,11,153,212,227,14,107,247,107,27,186,67,154,3,103,142,191,83,56,211,133,31,206,60,19,156,245,189,113,95 };
    byte_vec_t pk { 3,110,62,169,83,79,117,222,37,213,221,113,112,214,190,19,193,55,145,30,43,21,224,9,209,34,225,2,125,221,229,144,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 260 ") {
    byte_vec_t msg { 172,77,172,172 };
    byte_vec_t sig { 218,221,23,203,29,165,164,145,248,229,12,211,1,105,44,225,87,186,34,19,95,151,198,167,2,28,81,72,193,178,132,132,183,103,89,193,102,234,43,106,96,165,157,4,176,203,41,36,118,164,162,244,136,60,48,67,79,67,235,252,87,194,141,55 };
    byte_vec_t pk { 2,42,8,42,201,148,165,144,168,250,78,244,144,213,171,210,187,219,220,162,214,31,76,236,222,101,153,112,40,241,252,67,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 261 ") {
    byte_vec_t msg { 147,77,166,179 };
    byte_vec_t sig { 58,157,57,191,66,189,162,221,134,80,182,199,156,214,62,42,41,88,0,1,148,145,216,225,47,199,200,243,198,111,163,43,110,230,102,128,41,21,50,1,127,178,118,121,171,195,144,11,176,62,12,24,50,222,228,71,150,9,251,46,102,0,235,89 };
    byte_vec_t pk { 4,111,124,181,130,172,236,35,190,234,187,135,43,104,212,100,151,94,244,1,216,86,36,47,129,106,85,18,152,99,209,173,32,12,148,24,21,28,23,64,246,186,94,244,237,90,187,55,185,90,71,16,11,151,172,163,84,152,192,28,123,116,239,57,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 261 ") {
    byte_vec_t msg { 111,40,169,66 };
    byte_vec_t sig { 233,4,150,186,57,252,24,176,251,109,8,170,77,52,234,249,253,51,148,24,76,149,235,207,87,241,72,7,36,184,104,27,241,34,21,56,13,159,40,182,17,180,194,33,101,131,120,64,196,51,5,239,85,189,104,244,130,54,103,234,246,33,26,169 };
    byte_vec_t pk { 4,125,46,75,78,26,152,19,223,240,195,98,21,232,118,215,89,74,105,73,132,228,160,53,12,49,77,151,79,49,74,131,42,140,210,234,209,130,23,131,148,24,84,206,165,106,196,129,49,71,96,23,131,239,237,149,84,54,26,171,248,94,75,233,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 261 ") {
    byte_vec_t msg { 124,166,224,180 };
    byte_vec_t sig { 4,164,210,139,179,93,66,146,143,194,214,125,23,65,116,226,101,34,73,223,207,131,77,16,146,181,191,48,96,48,76,170,234,55,179,9,221,217,234,7,170,65,133,42,4,174,16,233,34,93,99,53,4,224,58,26,245,0,79,15,22,139,78,44 };
    byte_vec_t pk { 3,134,190,23,113,172,218,204,222,22,239,22,66,114,138,85,15,216,82,170,19,24,141,91,147,100,59,199,41,80,196,105,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 261 ") {
    byte_vec_t msg { 194,69,245,102 };
    byte_vec_t sig { 231,137,114,82,67,83,10,174,179,244,12,171,225,167,241,212,231,135,22,142,90,88,104,24,215,221,76,197,110,201,82,196,99,211,235,220,10,13,222,232,202,4,44,33,232,176,58,182,192,201,236,152,59,245,213,36,253,72,111,176,140,205,175,206 };
    byte_vec_t pk { 2,199,250,137,4,129,103,90,139,59,53,254,216,189,182,103,243,111,210,13,160,182,254,179,190,76,39,123,151,56,98,164,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 262 ") {
    byte_vec_t msg { 121,231,240,156 };
    byte_vec_t sig { 32,176,62,161,20,43,106,222,137,1,34,137,39,238,215,138,83,153,116,227,38,112,36,39,13,211,196,21,142,92,252,75,48,52,164,152,3,45,163,179,186,168,111,78,23,41,141,154,103,17,56,129,46,78,154,15,218,187,34,11,154,194,156,109 };
    byte_vec_t pk { 4,29,175,145,217,90,251,252,210,87,114,5,124,194,123,53,24,22,82,54,158,236,89,49,20,168,156,120,188,219,101,163,210,251,182,139,169,57,3,146,26,37,44,201,240,13,104,83,128,247,91,162,238,91,175,5,80,105,168,213,237,225,189,120,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 262 ") {
    byte_vec_t msg { 244,87,211,185 };
    byte_vec_t sig { 194,17,127,117,170,188,1,143,86,209,112,135,224,236,90,55,115,54,199,10,187,168,183,141,116,31,56,243,208,130,26,234,97,100,82,47,201,205,233,108,5,191,149,87,16,205,129,249,80,181,154,46,114,68,44,121,213,147,6,44,223,230,137,5 };
    byte_vec_t pk { 4,131,209,247,71,67,231,153,52,229,227,43,228,204,233,229,178,150,226,74,243,216,94,140,157,157,228,80,13,115,197,246,47,100,190,45,140,226,222,244,178,242,43,119,30,16,245,176,205,11,12,139,81,159,172,55,152,68,32,11,147,47,75,4,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 262 ") {
    byte_vec_t msg { 191,253,206,199 };
    byte_vec_t sig { 100,13,64,129,81,255,33,202,164,28,100,152,122,1,62,71,197,241,205,104,158,216,34,94,221,170,6,21,165,107,57,72,141,85,247,111,50,27,234,187,225,92,226,39,147,252,59,206,63,117,91,38,9,237,24,79,103,34,218,47,111,84,87,137 };
    byte_vec_t pk { 2,54,22,154,112,10,68,172,151,162,230,214,30,230,92,193,112,106,13,220,248,254,195,2,119,227,28,45,44,228,79,22,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 262 ") {
    byte_vec_t msg { 24,40,16,236 };
    byte_vec_t sig { 150,67,151,139,184,19,224,112,199,250,174,23,108,131,2,52,200,130,102,213,235,101,81,254,84,13,187,62,157,143,85,118,100,163,138,76,184,92,206,202,250,250,59,105,246,246,194,160,204,169,33,144,223,8,43,203,254,239,150,211,225,0,84,45 };
    byte_vec_t pk { 2,134,239,155,71,120,240,87,246,25,67,111,21,82,57,228,82,95,167,82,251,163,76,42,65,214,90,125,234,58,16,201,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 263 ") {
    byte_vec_t msg { 225,221,178,159 };
    byte_vec_t sig { 185,34,84,36,104,46,119,50,171,188,100,126,206,44,116,186,190,251,133,159,247,221,203,9,100,167,18,55,38,78,11,104,15,158,176,152,7,237,247,246,199,41,15,254,18,211,36,240,71,244,244,218,54,38,140,211,216,144,119,23,79,196,245,147 };
    byte_vec_t pk { 4,38,53,89,203,219,106,222,135,169,150,75,113,172,96,65,19,18,144,201,68,27,179,223,17,250,71,44,22,74,234,142,110,22,218,176,39,148,73,195,27,197,187,140,24,187,15,175,245,235,91,165,215,114,249,135,114,59,41,175,234,57,16,240,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 263 ") {
    byte_vec_t msg { 78,97,228,137 };
    byte_vec_t sig { 67,143,247,35,75,141,42,33,33,166,244,234,25,237,171,228,2,141,112,72,71,115,181,217,75,220,98,51,153,121,200,101,124,28,56,222,115,214,218,188,212,108,208,252,249,167,183,132,54,123,107,43,131,254,136,76,117,145,10,88,118,90,35,110 };
    byte_vec_t pk { 4,165,179,67,187,213,246,158,33,112,247,61,168,69,199,24,222,157,174,133,233,91,242,91,197,9,58,123,170,105,16,220,253,70,20,111,145,24,207,8,163,202,116,112,42,81,223,206,60,129,210,89,198,103,202,208,205,173,204,225,35,58,14,38,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 263 ") {
    byte_vec_t msg { 4,47,73,155 };
    byte_vec_t sig { 198,114,109,193,211,199,0,90,104,255,65,12,142,8,87,252,171,217,127,122,65,119,86,62,89,118,203,116,213,17,219,62,72,248,37,170,184,245,184,170,164,128,145,20,93,8,70,209,43,218,10,59,180,180,255,244,215,202,28,167,125,153,117,174 };
    byte_vec_t pk { 3,115,100,244,226,13,130,88,102,151,15,237,112,154,48,249,210,241,41,129,64,34,198,113,152,90,134,114,132,61,2,121,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 263 ") {
    byte_vec_t msg { 63,76,245,199 };
    byte_vec_t sig { 58,25,231,33,151,255,185,78,28,85,237,163,137,237,210,253,78,49,133,174,134,222,252,143,227,239,77,92,75,229,46,80,13,1,54,119,132,122,242,232,198,38,188,201,53,60,254,213,249,86,36,38,180,164,60,154,177,64,189,214,144,100,206,234 };
    byte_vec_t pk { 3,139,204,138,143,19,234,156,66,120,248,117,3,109,236,187,102,211,171,41,188,34,10,136,40,29,185,14,157,203,199,111,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 264 ") {
    byte_vec_t msg { 185,194,48,201 };
    byte_vec_t sig { 30,212,167,48,115,235,108,206,109,116,237,250,158,158,67,143,141,164,175,157,80,71,9,61,80,76,254,180,254,133,135,10,159,253,249,108,231,82,214,203,253,248,81,60,51,77,112,168,141,196,89,84,157,251,32,83,132,237,223,201,194,154,148,202 };
    byte_vec_t pk { 4,88,24,90,165,51,152,154,56,139,49,53,19,80,102,125,125,219,195,196,49,145,49,32,248,19,155,20,135,2,3,157,79,114,98,75,66,127,83,22,92,39,203,250,109,121,203,150,188,240,217,64,81,63,101,16,21,29,245,236,102,143,69,111,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 264 ") {
    byte_vec_t msg { 205,174,184,88 };
    byte_vec_t sig { 72,218,69,160,77,230,209,217,64,0,16,85,78,209,126,247,144,190,237,185,80,56,98,181,119,14,44,167,47,137,245,157,73,216,147,57,194,32,21,121,145,239,218,26,209,56,185,66,182,141,225,193,206,46,247,148,49,174,92,69,88,211,7,89 };
    byte_vec_t pk { 4,58,187,4,25,197,206,2,169,115,26,60,249,148,217,199,221,252,238,33,162,10,59,244,111,130,200,172,230,42,210,165,134,76,7,249,75,233,211,93,173,198,231,210,163,145,239,100,227,114,87,246,70,126,11,33,34,28,17,73,139,202,192,45,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 264 ") {
    byte_vec_t msg { 12,93,207,198 };
    byte_vec_t sig { 218,54,114,66,168,92,108,176,66,198,187,178,172,223,98,73,224,231,123,117,57,47,18,218,45,100,38,59,70,203,19,212,38,178,24,129,235,197,116,22,4,235,44,149,149,212,83,57,92,102,96,119,218,79,185,54,79,73,86,195,184,45,180,242 };
    byte_vec_t pk { 3,208,155,107,170,64,39,179,97,133,112,134,229,168,76,142,49,97,154,144,43,38,4,213,19,24,85,93,127,254,236,50,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 264 ") {
    byte_vec_t msg { 244,148,151,234 };
    byte_vec_t sig { 121,41,200,119,175,0,247,170,226,44,253,171,218,208,149,233,185,118,203,142,233,65,84,42,51,150,185,18,108,23,114,192,55,80,73,177,28,222,190,151,199,169,107,37,104,78,205,69,60,195,138,153,252,49,238,66,249,215,179,143,215,47,105,254 };
    byte_vec_t pk { 2,243,106,166,226,239,65,219,139,13,35,248,24,187,19,178,97,75,97,145,235,149,195,5,201,30,237,187,255,254,248,58,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 265 ") {
    byte_vec_t msg { 88,204,91,5 };
    byte_vec_t sig { 186,221,16,244,155,49,144,228,218,143,17,204,239,84,169,57,184,172,90,184,244,178,230,210,228,122,143,177,251,21,249,50,74,136,187,47,23,73,214,237,3,85,134,1,2,148,101,224,209,125,45,18,48,9,64,0,188,190,215,26,172,202,62,122 };
    byte_vec_t pk { 4,9,83,47,42,187,45,225,80,68,45,104,136,105,247,2,91,124,89,146,238,147,124,185,35,241,50,42,158,226,5,61,115,115,240,44,1,62,206,250,166,131,112,199,103,29,243,29,178,216,83,80,9,220,78,227,40,190,124,59,247,51,33,226,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 265 ") {
    byte_vec_t msg { 237,131,87,202 };
    byte_vec_t sig { 115,41,32,6,224,27,45,195,114,95,207,172,33,171,63,186,151,236,60,247,181,98,72,72,161,136,220,185,9,211,255,224,101,235,140,157,34,75,226,126,224,0,148,166,240,17,151,182,222,252,6,64,241,58,39,37,158,37,172,22,87,84,112,128 };
    byte_vec_t pk { 4,83,216,138,121,57,162,165,241,160,251,68,175,173,14,14,248,190,179,27,92,55,241,101,217,69,13,184,16,183,4,237,109,109,57,42,148,49,89,46,21,16,109,57,130,34,20,137,83,10,95,69,230,201,141,199,131,78,251,114,229,98,54,211,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 265 ") {
    byte_vec_t msg { 191,214,170,63 };
    byte_vec_t sig { 183,52,8,117,21,187,156,70,144,28,235,162,171,189,85,248,168,61,229,34,58,105,128,143,138,85,39,87,36,154,232,144,224,32,121,93,46,177,179,249,54,147,104,77,251,215,65,174,127,186,130,189,138,230,252,35,106,217,135,25,79,198,171,84 };
    byte_vec_t pk { 3,172,110,2,169,7,63,217,244,189,28,217,205,71,247,193,123,166,46,68,10,179,211,52,245,127,96,21,178,19,160,49,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 265 ") {
    byte_vec_t msg { 109,141,219,66 };
    byte_vec_t sig { 239,52,186,47,214,218,223,6,95,119,71,129,211,85,205,219,69,8,164,82,206,234,245,100,13,88,214,251,120,193,134,155,231,16,246,139,56,23,168,113,55,15,27,166,152,126,63,98,102,127,212,32,84,75,63,231,249,58,166,195,106,252,238,48 };
    byte_vec_t pk { 3,126,151,185,104,48,208,137,60,226,87,83,227,120,6,205,78,195,167,189,140,25,156,7,70,24,198,105,55,87,198,55,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 266 ") {
    byte_vec_t msg { 7,44,153,172 };
    byte_vec_t sig { 35,96,109,1,217,225,38,135,141,122,80,209,226,73,71,85,218,143,33,227,132,87,200,169,15,195,202,140,60,20,210,122,53,79,193,42,181,212,223,124,128,25,50,46,132,90,48,244,117,101,213,128,150,177,177,4,219,59,213,247,30,64,185,164 };
    byte_vec_t pk { 4,181,125,73,114,222,181,66,254,156,34,62,197,138,100,47,144,19,1,217,158,93,71,204,139,83,83,219,122,198,12,215,166,89,127,4,107,59,111,214,175,1,252,39,252,186,31,77,22,196,193,23,251,174,153,116,94,182,25,180,151,232,166,112,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 266 ") {
    byte_vec_t msg { 150,76,204,1 };
    byte_vec_t sig { 60,173,229,179,48,208,197,11,148,104,245,89,41,109,234,182,85,42,114,116,231,99,130,196,22,194,102,21,23,120,90,145,68,27,63,106,222,31,213,170,111,205,237,53,251,23,154,64,148,52,66,237,34,144,38,73,115,114,202,81,72,239,47,167 };
    byte_vec_t pk { 4,142,253,222,125,97,213,58,16,101,149,11,25,206,78,149,113,255,123,212,39,136,244,131,97,36,185,120,207,214,248,39,173,111,226,177,64,12,227,150,158,118,227,154,103,59,42,24,46,107,150,12,107,204,205,3,40,31,35,231,74,242,236,199,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 266 ") {
    byte_vec_t msg { 135,39,38,243 };
    byte_vec_t sig { 133,124,31,237,106,94,131,62,202,134,169,51,21,184,237,155,226,204,34,22,84,203,70,95,179,191,76,66,77,23,68,114,141,73,28,179,114,83,171,49,145,18,213,205,56,252,232,15,120,178,99,97,135,142,115,169,133,241,242,170,66,48,119,171 };
    byte_vec_t pk { 2,170,78,87,58,242,217,123,170,49,66,209,55,62,167,226,28,42,55,130,74,30,71,206,71,60,206,170,202,169,6,188,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 266 ") {
    byte_vec_t msg { 60,228,109,27 };
    byte_vec_t sig { 173,96,200,170,199,246,216,199,115,34,199,141,194,52,239,247,73,63,250,247,41,233,180,174,223,142,193,55,231,191,70,56,46,88,252,162,92,143,113,158,211,78,154,99,160,40,24,54,63,196,79,80,174,117,142,177,240,7,58,198,99,18,84,134 };
    byte_vec_t pk { 2,38,223,71,201,93,230,44,236,117,33,252,138,177,16,163,1,234,59,55,30,56,188,38,58,157,134,193,59,45,31,36,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 267 ") {
    byte_vec_t msg { 174,229,87,236 };
    byte_vec_t sig { 195,105,52,177,114,16,152,194,127,160,123,47,51,186,199,42,96,175,209,174,231,37,39,99,7,212,43,206,23,253,165,58,132,216,248,65,0,197,97,132,31,65,102,53,132,118,71,235,24,227,231,50,15,52,141,192,251,122,75,5,71,190,253,35 };
    byte_vec_t pk { 4,239,160,52,12,71,191,74,46,183,180,73,249,161,43,81,191,104,93,27,74,140,241,243,217,63,230,57,7,145,213,32,168,3,193,236,245,86,192,96,216,14,31,228,183,231,225,150,74,252,153,102,91,134,174,136,110,166,221,235,207,249,231,236,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 267 ") {
    byte_vec_t msg { 197,233,134,53 };
    byte_vec_t sig { 146,126,16,105,242,149,251,65,81,124,182,232,198,6,249,216,16,57,152,115,158,188,205,139,167,182,29,123,140,252,43,4,105,181,199,130,234,234,139,177,100,223,238,201,254,171,48,233,41,195,5,241,74,245,2,174,38,26,165,236,249,110,235,103 };
    byte_vec_t pk { 4,160,218,92,168,228,129,246,241,53,45,163,159,137,198,247,7,158,31,172,246,30,22,255,57,134,128,154,152,169,114,46,179,199,73,186,21,173,130,158,23,171,34,62,57,176,159,135,173,46,15,96,231,68,88,15,20,132,78,112,29,73,71,136,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 267 ") {
    byte_vec_t msg { 42,241,115,107 };
    byte_vec_t sig { 226,164,34,213,93,211,198,48,107,25,8,103,144,127,173,14,193,38,3,154,191,33,252,133,135,154,21,58,57,62,196,69,187,149,131,104,134,56,163,252,112,104,95,146,178,203,150,192,85,250,136,241,21,93,66,121,66,79,135,35,206,146,9,24 };
    byte_vec_t pk { 3,121,229,62,1,0,197,142,192,71,233,96,0,217,68,69,23,185,139,180,183,28,56,10,184,15,182,97,217,73,28,245,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 267 ") {
    byte_vec_t msg { 66,100,101,96 };
    byte_vec_t sig { 48,163,175,196,107,199,95,234,115,56,244,235,71,170,215,191,83,213,168,93,155,84,226,75,222,160,141,66,91,61,220,65,103,249,246,33,48,157,216,151,242,36,242,79,28,250,78,224,27,48,128,192,131,13,146,152,114,157,66,59,159,178,237,60 };
    byte_vec_t pk { 3,28,191,65,96,223,211,218,61,133,156,83,84,130,83,241,128,213,170,237,209,110,43,10,182,130,182,161,108,144,61,111,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 268 ") {
    byte_vec_t msg { 140,251,77,243 };
    byte_vec_t sig { 150,209,71,58,163,68,132,71,33,204,243,24,53,222,125,91,9,86,20,60,79,45,23,92,197,161,35,173,104,236,199,226,31,236,247,57,103,17,117,154,137,115,228,46,10,232,112,30,70,9,47,125,118,170,55,138,131,79,254,1,253,8,221,218 };
    byte_vec_t pk { 4,184,240,194,186,229,174,209,143,204,225,113,227,38,121,71,33,223,83,18,48,47,172,152,194,169,28,195,194,84,200,168,193,105,144,53,62,26,126,0,34,52,190,160,50,72,163,34,151,157,160,154,131,132,1,222,198,166,83,218,11,124,89,178,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 268 ") {
    byte_vec_t msg { 255,212,15,120 };
    byte_vec_t sig { 14,98,76,213,191,137,144,210,47,190,16,33,55,244,162,47,152,80,56,19,77,227,3,79,56,88,121,247,83,150,65,111,36,124,181,81,37,139,202,67,35,229,60,23,19,134,91,74,111,0,230,194,177,231,111,122,85,113,147,225,226,169,107,191 };
    byte_vec_t pk { 4,57,28,235,171,108,241,137,37,210,14,57,79,174,192,240,78,228,83,1,127,100,121,28,39,121,213,32,77,231,5,183,126,224,18,115,132,117,5,194,213,19,133,254,158,109,8,150,156,72,223,104,221,59,120,125,50,50,13,20,201,134,49,155,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 268 ") {
    byte_vec_t msg { 49,157,165,227 };
    byte_vec_t sig { 82,118,116,243,7,148,143,194,56,172,127,226,238,164,117,106,196,67,88,51,165,102,162,108,15,155,143,235,245,221,52,126,149,222,188,227,41,81,214,178,46,163,103,105,63,103,116,162,244,224,239,236,89,160,40,154,129,202,249,97,189,186,219,83 };
    byte_vec_t pk { 2,39,199,166,15,114,243,55,194,193,140,96,0,180,0,134,173,247,120,141,97,35,41,76,92,170,154,71,25,210,255,193,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 268 ") {
    byte_vec_t msg { 120,78,136,140 };
    byte_vec_t sig { 188,10,68,201,46,34,241,245,251,226,153,2,121,178,190,237,216,31,199,7,61,18,37,18,142,1,189,39,72,56,109,25,185,29,153,33,194,247,120,82,92,149,55,133,180,68,105,45,155,26,239,54,54,61,130,152,208,211,190,199,63,68,193,56 };
    byte_vec_t pk { 3,80,75,135,79,37,5,39,77,221,249,92,132,207,38,236,155,229,223,23,98,207,59,143,119,192,224,252,202,13,47,8,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 269 ") {
    byte_vec_t msg { 75,39,163,223 };
    byte_vec_t sig { 41,84,116,51,168,189,65,61,122,75,73,199,125,114,150,161,53,159,118,90,156,249,209,64,209,71,210,224,202,116,100,131,39,141,33,186,160,137,34,235,138,229,245,121,125,158,39,130,164,100,196,237,165,142,91,154,80,164,30,104,29,196,189,31 };
    byte_vec_t pk { 4,111,133,70,44,186,87,118,226,109,112,28,129,144,20,186,110,187,67,73,40,251,35,201,61,139,214,104,76,153,230,150,140,145,105,255,214,186,90,167,243,32,62,3,78,231,5,58,180,111,169,102,31,107,11,11,175,165,105,133,93,30,55,170,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 269 ") {
    byte_vec_t msg { 44,79,29,78 };
    byte_vec_t sig { 2,136,15,0,214,165,227,231,188,191,242,237,159,91,9,141,80,37,122,224,114,170,188,13,177,49,57,193,61,249,204,15,43,35,88,221,0,150,67,112,98,251,212,150,61,61,158,149,225,0,84,18,67,236,175,85,29,36,53,106,91,30,219,90 };
    byte_vec_t pk { 4,131,153,1,91,191,72,242,27,34,177,189,42,179,243,51,239,126,93,238,28,194,117,231,158,1,208,67,223,170,125,200,246,25,27,24,201,247,244,34,49,41,127,128,200,162,18,204,2,174,69,12,193,120,17,242,158,72,184,242,7,241,123,228,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 269 ") {
    byte_vec_t msg { 172,35,95,149 };
    byte_vec_t sig { 142,50,70,219,78,179,153,104,24,5,177,90,4,202,232,6,240,44,45,12,106,221,55,34,128,38,244,48,220,213,114,26,36,248,39,160,250,224,201,229,96,131,188,170,40,222,98,21,108,103,49,91,54,13,107,107,192,105,164,201,82,113,129,99 };
    byte_vec_t pk { 3,36,243,193,123,116,23,169,105,203,220,56,1,6,204,205,40,193,197,15,78,191,53,24,211,59,25,24,6,254,141,245,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 269 ") {
    byte_vec_t msg { 160,99,181,108 };
    byte_vec_t sig { 53,185,194,94,236,193,201,23,144,1,235,250,74,118,224,254,234,182,195,29,211,14,95,104,165,49,103,142,64,8,91,229,128,36,36,45,123,228,219,239,195,162,79,117,69,216,232,131,89,101,101,203,22,146,78,132,177,3,123,165,150,4,223,63 };
    byte_vec_t pk { 2,201,32,26,18,58,29,225,98,93,2,247,253,0,13,101,223,153,58,224,100,177,228,152,138,247,196,41,156,106,87,82,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 270 ") {
    byte_vec_t msg { 23,199,141,71 };
    byte_vec_t sig { 208,48,148,127,220,58,241,153,27,95,165,171,242,209,78,254,38,228,98,46,44,56,216,91,95,76,234,41,200,10,150,155,216,39,98,95,214,136,158,81,183,16,146,253,0,152,216,51,246,248,22,168,26,28,47,16,15,16,109,148,211,114,66,250 };
    byte_vec_t pk { 4,96,9,25,212,181,121,141,86,129,18,236,232,228,106,226,255,31,174,192,48,19,192,40,17,55,190,80,7,189,58,49,105,151,95,235,33,183,123,180,133,14,245,9,19,9,50,79,227,98,190,170,89,222,236,250,97,37,74,144,44,228,195,227,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 270 ") {
    byte_vec_t msg { 16,34,244,168 };
    byte_vec_t sig { 54,156,129,230,239,154,46,83,229,194,111,148,186,81,49,178,3,72,19,247,169,68,167,223,176,33,204,250,74,49,147,86,238,61,51,200,148,102,57,57,55,235,85,148,101,97,243,115,37,87,222,83,48,36,186,81,212,189,12,180,213,201,138,232 };
    byte_vec_t pk { 4,171,97,219,26,53,124,185,29,115,171,140,96,204,77,15,156,232,225,111,24,86,254,240,118,101,70,248,161,167,166,230,112,136,195,203,82,216,88,111,190,46,119,110,219,125,255,66,193,168,30,79,104,174,11,17,16,117,186,168,19,3,171,129,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 270 ") {
    byte_vec_t msg { 61,147,77,208 };
    byte_vec_t sig { 53,101,206,133,233,117,61,44,39,156,3,183,114,4,215,157,168,213,205,113,242,104,221,244,58,105,225,166,61,106,95,133,59,93,196,66,93,212,109,78,138,61,183,66,17,152,121,63,189,235,47,139,189,131,152,218,153,139,158,216,252,81,158,167 };
    byte_vec_t pk { 2,98,118,16,33,233,214,245,189,17,37,235,206,5,196,245,158,243,189,40,56,23,143,140,184,152,39,8,89,249,27,201,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 270 ") {
    byte_vec_t msg { 212,55,201,255 };
    byte_vec_t sig { 227,75,76,203,27,223,20,197,148,237,250,187,205,96,154,177,125,155,140,52,103,240,134,102,153,28,183,178,228,200,219,218,148,125,45,86,55,42,65,166,99,173,126,19,215,238,190,230,146,116,73,34,152,183,0,54,250,146,213,166,169,169,162,75 };
    byte_vec_t pk { 2,230,133,207,66,251,207,199,129,122,235,60,135,145,101,240,140,162,20,88,50,215,71,76,144,1,158,110,70,76,26,246,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 271 ") {
    byte_vec_t msg { 13,109,34,77 };
    byte_vec_t sig { 118,104,114,61,209,246,68,102,50,168,242,181,0,244,219,191,147,81,58,148,172,133,179,247,76,63,44,212,0,63,90,158,73,219,42,25,206,6,125,46,21,4,251,207,100,88,224,221,150,74,118,251,107,69,69,104,138,65,77,137,39,68,163,194 };
    byte_vec_t pk { 4,205,203,124,225,2,74,51,85,245,138,106,27,137,121,237,145,135,112,137,123,138,201,169,104,75,1,4,249,102,196,48,132,201,95,46,115,92,216,117,127,88,65,243,196,169,12,236,6,23,35,243,26,254,114,251,107,66,170,178,148,53,209,204,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 271 ") {
    byte_vec_t msg { 32,17,4,236 };
    byte_vec_t sig { 160,29,76,23,197,204,93,77,76,225,102,127,174,149,249,122,137,188,5,246,130,243,161,110,222,211,220,138,229,79,182,106,188,96,212,45,15,188,10,27,0,245,133,234,252,160,52,7,121,225,236,32,84,150,251,111,148,14,134,83,130,87,39,29 };
    byte_vec_t pk { 4,4,196,88,96,162,200,246,100,206,102,210,110,137,238,114,36,194,253,28,131,216,78,69,161,123,159,240,173,18,216,93,212,49,53,45,225,53,103,253,132,127,6,53,87,211,88,125,113,124,37,146,200,16,231,52,6,27,167,244,169,206,239,211,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 271 ") {
    byte_vec_t msg { 148,83,239,206 };
    byte_vec_t sig { 69,80,127,38,118,214,201,10,200,43,34,66,84,122,132,32,187,134,188,198,89,62,42,0,243,251,179,247,226,138,15,194,164,87,181,140,76,185,98,172,32,229,190,39,193,74,68,101,29,161,24,231,240,13,95,231,90,221,156,226,160,115,61,250 };
    byte_vec_t pk { 3,26,120,2,47,222,155,55,82,110,245,242,185,162,225,149,12,210,71,194,159,218,44,68,100,120,153,154,35,171,2,241,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 271 ") {
    byte_vec_t msg { 57,160,246,59 };
    byte_vec_t sig { 215,3,76,48,50,136,105,160,154,175,123,214,219,150,148,127,216,104,177,164,9,244,53,135,154,208,226,57,179,177,96,198,44,50,199,99,252,42,249,4,93,182,11,175,46,186,162,103,115,57,16,172,69,146,62,180,54,206,118,252,219,116,220,6 };
    byte_vec_t pk { 2,217,148,39,114,86,144,149,112,105,98,142,76,24,70,183,10,50,255,165,239,13,62,143,131,121,133,22,148,146,7,19,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 272 ") {
    byte_vec_t msg { 40,44,165,103 };
    byte_vec_t sig { 225,156,31,185,56,247,89,225,109,163,89,195,163,102,233,10,128,252,243,71,102,24,215,196,44,62,83,85,74,238,197,147,21,5,186,98,227,188,243,155,202,17,11,49,201,79,80,173,255,88,142,161,106,152,104,19,230,75,222,248,55,51,250,253 };
    byte_vec_t pk { 4,206,19,169,242,42,99,43,161,78,231,129,91,110,25,193,185,241,68,77,176,66,57,53,201,236,219,115,127,18,192,236,224,77,110,37,168,190,142,143,1,183,100,59,140,76,185,225,240,163,129,64,7,240,133,239,243,122,155,224,45,63,59,225,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 272 ") {
    byte_vec_t msg { 124,90,61,221 };
    byte_vec_t sig { 139,201,229,158,179,219,10,129,214,77,114,181,147,219,53,46,25,249,98,187,29,186,119,111,207,88,118,232,78,13,208,62,27,32,154,250,126,59,104,229,253,211,21,0,221,255,95,123,216,230,166,17,69,107,216,6,191,36,230,162,97,21,92,251 };
    byte_vec_t pk { 4,122,113,202,216,209,107,137,166,235,97,97,133,51,191,42,31,89,19,14,15,101,31,55,76,12,231,24,114,19,154,84,50,114,52,177,194,91,71,108,16,12,145,137,236,42,23,168,35,217,214,176,56,18,227,159,69,27,68,56,214,123,175,180,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 272 ") {
    byte_vec_t msg { 155,14,21,61 };
    byte_vec_t sig { 11,158,48,211,204,84,11,222,71,91,108,214,98,239,85,4,160,158,55,89,131,126,85,120,105,223,149,210,35,80,107,27,52,146,99,45,32,63,32,18,89,138,210,201,203,105,124,155,165,187,239,215,126,98,238,2,54,94,41,59,132,167,84,187 };
    byte_vec_t pk { 2,204,12,121,23,97,241,130,58,155,30,123,176,29,53,163,243,16,233,34,230,132,164,22,24,180,85,212,171,43,46,33,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 272 ") {
    byte_vec_t msg { 177,204,158,212 };
    byte_vec_t sig { 64,98,165,174,247,92,82,3,40,54,155,116,33,118,152,207,118,52,174,122,50,13,4,157,236,113,111,227,41,134,62,211,211,126,29,247,77,214,25,145,141,48,166,138,207,240,235,194,87,17,39,94,27,176,36,229,252,105,7,38,235,161,242,194 };
    byte_vec_t pk { 3,174,33,181,22,181,85,68,230,166,175,52,75,195,29,155,188,181,128,127,68,50,51,65,123,96,163,230,189,202,189,213,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 273 ") {
    byte_vec_t msg { 173,161,237,212 };
    byte_vec_t sig { 158,83,201,252,134,180,67,34,214,168,21,167,205,134,79,36,119,217,76,90,32,244,246,249,157,127,234,221,3,235,216,67,180,50,197,5,21,49,127,15,166,200,69,43,59,163,186,215,99,2,85,150,104,109,117,112,114,51,118,253,235,77,96,161 };
    byte_vec_t pk { 4,174,108,130,0,199,200,4,102,214,139,11,113,25,174,184,205,160,199,69,142,158,139,123,222,60,225,0,184,111,192,114,117,209,48,188,223,196,133,238,221,109,23,244,237,35,237,221,223,99,142,180,221,90,104,46,175,192,19,196,112,139,60,57,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 273 ") {
    byte_vec_t msg { 216,126,102,178 };
    byte_vec_t sig { 143,24,94,123,181,42,12,201,110,35,86,182,79,14,239,65,4,70,198,233,59,11,226,214,27,105,255,249,184,56,119,110,1,224,6,99,87,224,73,114,210,124,238,200,56,225,36,88,171,131,130,251,243,50,157,182,235,156,195,129,217,208,231,235 };
    byte_vec_t pk { 4,171,185,33,21,116,51,157,201,93,118,196,174,253,180,82,150,93,45,68,160,46,52,121,219,207,202,182,61,214,253,94,130,23,50,23,121,15,24,194,83,105,244,100,191,210,66,253,192,131,89,19,70,241,158,36,51,18,242,19,16,211,109,179,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 273 ") {
    byte_vec_t msg { 100,59,133,171 };
    byte_vec_t sig { 135,50,126,130,46,200,58,49,119,52,132,173,213,142,208,26,35,54,200,4,119,54,35,38,38,160,141,65,167,242,107,76,38,131,229,133,71,9,23,222,73,70,241,53,241,254,129,136,189,166,207,241,165,136,83,40,100,230,154,101,134,44,34,84 };
    byte_vec_t pk { 2,24,146,29,133,198,26,219,15,224,228,6,253,138,56,94,18,225,231,164,192,5,66,249,58,65,102,24,103,58,240,79,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 273 ") {
    byte_vec_t msg { 175,52,187,142 };
    byte_vec_t sig { 102,84,248,156,102,44,14,87,248,56,5,31,180,243,3,82,161,177,68,4,202,56,185,111,181,177,222,245,79,99,150,44,81,89,105,36,201,63,175,175,232,225,102,125,214,118,77,160,213,131,132,50,172,12,25,172,226,174,200,166,155,215,120,18 };
    byte_vec_t pk { 2,40,151,211,107,127,126,100,69,209,211,244,251,32,30,90,133,90,85,177,14,111,78,50,235,195,145,216,179,16,77,20,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 274 ") {
    byte_vec_t msg { 211,43,190,160 };
    byte_vec_t sig { 181,169,5,198,218,227,186,132,226,195,135,164,235,107,121,100,119,189,39,219,70,125,243,211,71,218,201,189,97,110,31,113,39,58,21,83,94,164,25,234,42,86,177,164,46,130,38,145,117,168,94,150,17,200,107,211,230,243,232,189,173,106,105,244 };
    byte_vec_t pk { 4,240,226,108,122,222,189,128,76,71,79,60,47,204,196,39,116,26,53,158,221,161,197,205,204,141,60,21,155,216,248,98,28,244,13,138,84,130,228,216,115,42,156,216,79,50,139,129,72,151,225,240,123,230,39,227,45,23,33,183,196,211,213,73,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 274 ") {
    byte_vec_t msg { 200,125,31,218 };
    byte_vec_t sig { 185,170,52,88,54,0,120,240,198,104,124,82,109,206,190,202,40,211,231,123,186,217,54,145,206,225,252,16,68,32,56,218,208,107,39,11,65,192,151,231,23,134,199,73,35,141,127,40,66,191,241,148,119,22,192,247,167,37,12,185,203,141,201,180 };
    byte_vec_t pk { 4,93,153,163,130,253,131,89,169,209,156,188,152,93,226,132,71,198,81,221,70,125,215,174,126,176,17,2,32,187,173,112,210,64,211,159,79,117,74,18,231,4,198,247,241,166,250,41,103,126,17,108,230,128,221,151,110,28,235,34,5,204,188,67,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 274 ") {
    byte_vec_t msg { 132,163,143,9 };
    byte_vec_t sig { 171,135,73,240,29,149,230,41,211,213,36,209,222,155,201,202,32,240,102,154,132,43,225,146,179,211,25,29,201,194,47,15,89,69,26,88,107,174,75,66,23,45,254,136,182,122,50,234,56,19,46,149,226,194,46,191,38,222,152,161,42,116,115,4 };
    byte_vec_t pk { 2,225,157,123,43,82,11,221,219,96,145,212,194,151,247,184,81,252,53,108,78,254,145,24,54,71,47,230,8,72,208,173,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 274 ") {
    byte_vec_t msg { 57,175,130,82 };
    byte_vec_t sig { 64,151,46,242,58,23,144,98,167,10,14,20,203,128,102,95,39,212,171,80,4,249,82,59,15,77,121,21,108,139,33,30,194,49,234,29,226,114,123,77,7,79,116,221,1,105,9,0,152,84,4,144,12,57,37,238,55,54,201,47,83,109,190,203 };
    byte_vec_t pk { 3,31,187,28,121,7,189,30,238,15,236,226,38,101,26,171,88,83,157,87,2,218,48,198,245,215,50,163,200,5,189,99,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 275 ") {
    byte_vec_t msg { 54,15,63,114 };
    byte_vec_t sig { 83,246,14,44,80,167,168,83,118,198,47,188,243,45,161,0,83,0,6,20,101,139,102,196,182,32,34,59,247,1,217,0,53,165,149,41,165,95,4,241,158,9,89,193,29,202,102,216,166,8,149,249,200,73,123,215,184,26,143,195,52,163,56,28 };
    byte_vec_t pk { 4,164,26,72,252,135,112,117,41,193,236,163,163,113,19,65,158,232,243,83,82,170,53,250,171,188,144,2,34,220,145,115,29,205,33,16,217,49,165,98,175,39,223,2,145,115,63,227,56,116,94,45,117,185,245,202,94,121,249,146,67,79,147,207,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 275 ") {
    byte_vec_t msg { 94,236,244,172 };
    byte_vec_t sig { 136,93,136,33,2,254,190,13,63,189,156,123,32,93,204,231,219,188,58,113,3,37,216,189,215,123,209,10,42,60,134,182,33,155,183,223,226,226,208,222,218,132,10,184,25,18,199,214,86,189,138,4,204,19,54,15,243,108,130,21,61,188,212,29 };
    byte_vec_t pk { 4,11,244,27,215,105,2,228,195,99,178,116,62,81,76,120,64,127,28,53,144,103,146,185,11,90,25,22,29,69,67,9,231,94,111,215,62,38,234,42,139,50,119,160,134,246,71,239,220,186,214,105,232,75,94,173,179,137,238,227,192,109,242,156,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 275 ") {
    byte_vec_t msg { 217,169,81,134 };
    byte_vec_t sig { 172,18,100,128,75,100,185,87,127,204,191,224,184,110,237,52,149,7,78,61,176,117,77,72,133,74,166,30,3,175,64,192,76,38,203,28,69,223,119,170,208,10,251,59,49,135,33,75,190,157,98,100,176,198,235,156,95,58,252,23,171,56,201,229 };
    byte_vec_t pk { 3,175,158,46,140,30,212,173,236,225,3,51,166,247,126,25,242,54,188,34,174,155,16,228,154,39,197,217,82,250,52,76,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 275 ") {
    byte_vec_t msg { 249,207,156,128 };
    byte_vec_t sig { 85,35,10,36,58,167,13,16,95,7,117,5,243,230,192,241,99,80,108,167,159,180,129,231,183,157,141,233,182,84,225,236,78,37,6,47,223,10,102,55,216,209,158,25,164,136,221,4,156,108,22,117,109,224,72,176,21,52,199,196,147,23,57,156 };
    byte_vec_t pk { 3,250,161,155,13,27,88,126,223,181,122,131,169,34,241,127,149,50,56,163,236,81,253,55,8,181,249,212,205,75,242,157,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 276 ") {
    byte_vec_t msg { 86,18,211,46 };
    byte_vec_t sig { 3,183,249,201,207,209,45,5,209,124,58,73,222,56,25,224,50,179,217,177,240,238,34,102,162,162,112,14,14,112,169,164,10,113,128,14,103,99,195,38,114,31,27,248,26,57,148,141,241,131,59,139,3,136,195,107,27,40,244,148,179,105,90,202 };
    byte_vec_t pk { 4,189,166,3,27,8,219,75,82,202,159,25,239,163,157,165,11,156,128,225,179,202,159,45,70,23,219,216,138,41,201,135,157,192,53,190,181,237,125,224,165,172,104,212,25,160,58,248,33,239,26,200,136,59,147,188,39,210,131,79,178,37,231,46,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 276 ") {
    byte_vec_t msg { 231,99,10,97 };
    byte_vec_t sig { 118,228,102,21,167,35,154,98,84,144,100,131,22,45,89,197,51,194,117,80,88,207,204,122,1,80,6,4,235,30,76,230,230,21,139,219,28,118,202,21,103,178,148,64,15,53,177,246,172,194,149,83,103,230,69,87,152,202,32,177,80,44,41,57 };
    byte_vec_t pk { 4,29,92,30,202,237,175,137,214,85,155,128,44,71,2,184,34,106,185,170,141,234,239,230,23,222,250,149,8,230,21,163,182,222,104,190,100,205,217,153,173,254,35,95,186,101,229,183,52,58,111,18,99,119,7,200,255,182,38,5,190,245,19,68,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 276 ") {
    byte_vec_t msg { 22,68,33,78 };
    byte_vec_t sig { 238,145,73,220,31,42,62,163,246,111,189,117,205,148,248,209,200,135,125,63,159,250,95,186,147,214,250,194,125,15,21,28,124,190,241,105,108,120,22,179,157,219,9,44,175,126,103,146,146,106,238,201,249,17,80,218,82,108,140,113,31,92,127,3 };
    byte_vec_t pk { 3,167,161,37,79,87,194,243,160,254,204,11,46,226,123,65,76,57,216,22,249,54,226,186,255,241,145,252,57,114,238,225,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 276 ") {
    byte_vec_t msg { 93,194,165,37 };
    byte_vec_t sig { 237,110,243,163,107,93,214,16,169,196,175,55,96,130,77,199,17,215,39,127,111,36,12,40,211,121,186,255,73,186,121,41,228,203,65,57,24,253,28,63,64,59,226,247,222,174,172,179,111,115,247,38,74,150,169,87,169,15,143,58,28,106,65,92 };
    byte_vec_t pk { 3,195,98,176,102,79,30,235,60,20,141,172,129,243,96,81,10,39,107,132,16,228,227,122,13,146,231,137,187,175,54,126,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 277 ") {
    byte_vec_t msg { 63,143,140,38 };
    byte_vec_t sig { 195,102,216,178,10,31,141,239,199,239,240,108,198,183,79,187,198,92,97,226,170,2,86,62,165,33,159,136,67,180,4,197,137,78,249,10,235,202,182,234,150,16,143,112,160,59,59,180,220,166,132,254,46,152,194,31,36,252,188,153,149,5,71,118 };
    byte_vec_t pk { 4,142,5,167,233,68,125,55,242,244,58,27,146,104,60,96,135,92,4,91,26,46,145,231,15,160,21,50,213,106,106,22,144,13,89,244,187,88,105,154,138,13,169,180,203,183,65,17,165,76,94,109,223,155,51,83,89,121,41,50,108,100,211,112,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 277 ") {
    byte_vec_t msg { 92,19,123,121 };
    byte_vec_t sig { 76,170,19,45,47,198,128,215,110,151,115,66,77,60,189,115,65,140,137,43,110,11,153,19,93,169,180,231,53,144,85,145,143,74,22,138,52,10,90,217,115,189,187,242,145,0,244,48,84,177,85,86,174,5,90,38,45,179,115,53,49,196,72,43 };
    byte_vec_t pk { 4,77,6,138,214,14,217,85,234,35,236,236,89,161,119,159,27,212,52,5,254,109,105,207,43,79,97,201,157,99,236,7,195,89,66,183,146,3,239,252,197,164,226,56,142,137,246,82,231,13,221,4,39,191,128,16,221,151,46,127,87,66,172,67,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 277 ") {
    byte_vec_t msg { 237,22,250,94 };
    byte_vec_t sig { 113,67,138,160,208,2,240,39,179,61,36,45,67,72,235,211,203,125,97,70,12,121,16,182,188,122,16,217,213,231,65,121,74,94,195,118,50,89,55,4,241,66,221,17,106,196,134,171,19,220,71,250,217,10,108,249,140,20,111,117,232,196,156,253 };
    byte_vec_t pk { 3,158,96,50,252,44,18,129,13,255,219,146,183,219,169,252,210,228,224,74,89,214,166,81,238,248,234,133,168,246,25,8,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 277 ") {
    byte_vec_t msg { 28,9,81,82 };
    byte_vec_t sig { 199,21,7,216,148,113,228,177,211,61,63,9,58,135,22,93,171,109,146,76,176,152,87,79,52,165,171,253,23,252,191,174,53,138,172,115,231,113,52,54,134,217,35,184,181,150,171,53,194,41,45,168,247,236,222,182,194,230,114,22,40,27,211,39 };
    byte_vec_t pk { 2,0,46,158,2,41,9,100,126,40,130,170,93,30,177,151,139,103,240,34,103,96,231,202,119,142,66,118,241,196,167,231,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 278 ") {
    byte_vec_t msg { 199,136,163,227 };
    byte_vec_t sig { 45,197,158,18,63,45,48,135,185,117,190,202,36,112,82,117,110,124,114,108,4,48,229,26,142,181,78,38,39,10,236,57,115,32,105,0,245,187,163,30,41,4,17,30,99,211,66,87,106,34,239,116,240,148,40,223,216,77,186,253,43,26,174,91 };
    byte_vec_t pk { 4,141,81,123,40,228,250,91,24,68,67,70,148,151,73,66,170,251,213,229,30,98,71,158,82,161,44,180,181,83,236,62,65,51,70,46,91,171,153,121,50,102,8,85,107,43,91,61,212,153,108,7,5,112,37,240,44,44,183,20,13,173,235,249,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 278 ") {
    byte_vec_t msg { 101,37,203,200 };
    byte_vec_t sig { 111,239,112,111,138,145,102,220,185,14,30,223,185,161,167,105,2,234,85,242,168,157,245,102,251,65,175,195,186,229,81,188,132,33,98,123,101,255,50,120,173,171,11,122,145,135,203,35,152,132,154,87,97,82,24,100,154,9,168,92,80,31,10,175 };
    byte_vec_t pk { 4,220,253,85,147,110,207,205,205,27,238,241,206,76,10,100,172,207,185,22,89,225,28,147,170,244,114,15,187,208,2,73,4,172,36,220,104,39,127,10,249,209,197,141,47,127,155,180,178,210,184,8,108,134,232,1,95,95,77,82,19,26,156,217,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 278 ") {
    byte_vec_t msg { 192,6,230,245 };
    byte_vec_t sig { 189,73,44,186,217,95,115,17,59,197,19,204,68,243,15,83,199,27,220,82,35,96,186,133,120,14,231,16,222,195,131,74,155,162,137,235,5,211,103,86,96,22,78,77,159,104,203,15,103,88,162,89,59,68,104,42,156,172,191,40,194,183,150,143 };
    byte_vec_t pk { 3,80,230,234,173,164,158,58,97,60,202,26,149,40,187,133,139,219,69,14,146,33,6,171,23,81,161,153,218,60,197,100,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 278 ") {
    byte_vec_t msg { 202,247,237,47 };
    byte_vec_t sig { 96,132,65,55,61,9,73,147,70,125,196,190,194,30,193,8,137,246,43,223,191,100,173,147,113,130,138,160,226,133,49,126,194,243,178,227,194,118,61,64,198,6,54,62,213,130,213,120,42,244,221,145,243,145,61,220,155,94,132,70,11,147,82,231 };
    byte_vec_t pk { 3,102,193,125,242,45,64,99,116,239,172,178,200,159,37,250,255,142,46,226,234,142,154,180,201,115,18,76,14,252,254,141,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 279 ") {
    byte_vec_t msg { 190,177,111,7 };
    byte_vec_t sig { 122,206,111,42,220,222,234,10,127,154,8,132,193,206,64,39,13,65,48,145,170,90,145,108,61,39,249,76,225,32,220,150,47,53,148,72,197,117,193,170,159,1,108,10,48,24,0,113,153,76,31,18,218,46,44,246,163,38,43,141,185,93,112,121 };
    byte_vec_t pk { 4,178,63,236,224,158,220,36,17,122,47,101,85,153,114,30,68,245,48,142,214,116,58,181,216,125,176,103,210,149,151,240,156,203,129,248,236,74,4,135,230,22,130,245,223,1,240,229,167,8,153,164,79,199,214,90,212,213,6,73,47,210,39,213,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 279 ") {
    byte_vec_t msg { 43,41,154,114 };
    byte_vec_t sig { 54,178,218,179,54,167,189,166,194,20,24,59,216,171,160,12,88,61,179,39,187,62,211,68,30,88,33,235,92,195,206,229,62,237,19,17,128,243,127,242,54,86,239,25,173,93,69,171,57,217,50,197,242,92,9,6,74,163,58,236,196,145,37,243 };
    byte_vec_t pk { 4,80,171,50,106,226,89,164,248,96,57,23,166,24,98,37,242,23,46,231,174,103,203,137,215,108,130,56,49,179,210,159,57,143,84,4,195,163,217,14,244,131,16,216,14,224,176,230,142,117,101,238,203,145,172,86,31,148,148,89,167,138,135,182,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 279 ") {
    byte_vec_t msg { 245,90,227,158 };
    byte_vec_t sig { 44,200,117,108,23,206,179,211,206,111,229,184,247,58,88,19,141,64,116,142,254,196,151,103,225,61,4,65,195,201,97,146,224,63,236,226,128,4,107,171,144,165,124,218,192,182,102,114,135,153,103,93,201,219,69,241,89,95,121,45,18,240,60,24 };
    byte_vec_t pk { 2,122,101,217,242,115,3,167,140,94,188,35,221,186,132,15,165,107,217,75,103,203,134,128,76,89,93,3,192,71,43,99,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 279 ") {
    byte_vec_t msg { 171,26,218,110 };
    byte_vec_t sig { 148,146,216,216,216,19,225,126,137,21,217,232,94,199,42,174,78,63,183,171,85,190,217,115,254,136,110,166,102,79,252,149,11,214,4,50,208,84,218,75,155,95,19,221,97,88,70,54,131,125,225,47,206,26,61,157,47,226,26,197,185,201,170,153 };
    byte_vec_t pk { 2,138,40,75,86,22,123,83,41,4,156,195,105,171,203,72,165,116,221,191,74,134,246,240,216,248,210,78,140,31,191,8,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 280 ") {
    byte_vec_t msg { 126,208,35,25 };
    byte_vec_t sig { 13,23,60,231,218,41,226,239,47,8,88,192,224,155,214,43,187,232,7,181,80,140,16,99,27,206,11,222,189,99,188,9,23,99,132,14,85,107,246,69,140,59,124,252,208,128,183,147,28,113,8,189,235,199,79,146,176,235,177,7,49,107,172,31 };
    byte_vec_t pk { 4,236,8,97,59,234,98,117,85,63,42,159,253,2,28,49,52,238,178,140,58,60,81,102,120,121,127,106,87,222,13,117,168,241,89,40,201,254,62,199,164,160,235,20,60,41,157,135,104,148,217,235,71,239,134,40,136,232,24,71,128,20,166,234,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 280 ") {
    byte_vec_t msg { 40,6,229,188 };
    byte_vec_t sig { 166,164,212,108,8,56,251,97,249,66,41,118,80,60,139,176,168,80,67,161,201,218,84,248,153,202,153,155,243,54,120,66,36,246,97,94,58,218,58,155,149,34,236,90,58,167,42,171,81,130,243,80,148,12,89,236,166,214,215,189,2,182,72,241 };
    byte_vec_t pk { 4,191,216,7,250,190,210,4,192,82,132,102,142,249,82,199,117,196,157,92,107,71,55,11,31,8,5,159,94,91,174,71,161,214,209,154,98,6,168,191,155,28,61,80,47,178,143,168,70,232,216,116,117,148,246,158,231,121,196,210,52,180,139,252,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 280 ") {
    byte_vec_t msg { 152,231,61,10 };
    byte_vec_t sig { 78,38,125,106,47,11,82,150,112,161,230,89,77,126,138,78,222,26,176,87,80,84,185,42,2,124,141,109,83,192,95,182,188,250,129,83,78,167,143,200,134,68,25,104,139,44,224,208,134,213,125,114,1,224,161,17,75,163,175,162,254,194,97,104 };
    byte_vec_t pk { 2,241,136,203,173,17,43,11,117,120,247,48,11,219,59,122,3,241,61,140,166,202,113,165,72,169,14,163,60,39,151,82,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 280 ") {
    byte_vec_t msg { 131,12,164,169 };
    byte_vec_t sig { 129,44,102,78,154,106,176,51,159,204,72,60,224,252,26,225,144,132,101,245,58,106,100,126,46,226,253,224,159,99,95,156,196,155,34,243,219,151,142,176,98,165,179,159,46,43,130,192,167,16,239,51,78,102,218,194,154,81,62,67,165,57,133,65 };
    byte_vec_t pk { 2,151,76,68,97,94,171,53,133,90,225,165,116,68,35,60,199,38,12,246,193,88,148,214,60,243,79,158,200,108,73,249,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 281 ") {
    byte_vec_t msg { 90,164,11,78 };
    byte_vec_t sig { 137,14,184,117,89,169,113,17,69,190,32,232,248,242,249,107,1,131,168,10,18,45,169,176,43,13,227,73,231,86,254,22,0,55,243,37,228,162,117,147,127,196,122,2,21,214,184,133,69,146,93,20,61,122,53,30,121,9,202,153,88,133,6,133 };
    byte_vec_t pk { 4,64,204,206,178,29,19,105,252,31,179,86,244,66,15,95,133,69,140,134,88,175,161,219,1,67,157,172,161,249,43,90,41,71,219,1,152,235,15,31,148,184,184,89,162,123,198,77,30,115,39,198,36,36,145,161,93,56,5,69,15,25,214,53,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 281 ") {
    byte_vec_t msg { 188,200,40,9 };
    byte_vec_t sig { 12,84,129,85,219,21,217,47,65,187,84,129,125,39,210,241,24,248,49,193,238,216,53,129,239,139,204,249,122,0,78,2,255,146,44,193,193,141,229,3,141,225,110,125,111,224,74,90,105,176,27,145,9,162,236,194,76,31,8,205,120,70,137,39 };
    byte_vec_t pk { 4,218,39,160,198,130,134,42,39,169,117,165,90,83,14,43,49,26,220,86,78,141,80,200,56,76,252,0,48,112,164,21,87,14,48,116,171,245,233,7,70,89,141,94,66,92,169,246,150,149,116,90,48,203,62,213,239,1,48,183,244,209,72,177,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 281 ") {
    byte_vec_t msg { 151,100,191,242 };
    byte_vec_t sig { 177,123,112,21,95,228,164,56,33,109,217,126,71,161,232,91,49,105,100,37,167,62,183,158,46,18,239,179,32,129,157,226,45,82,156,119,6,129,22,245,93,220,178,77,71,136,86,45,39,22,83,31,148,181,241,95,23,89,245,47,24,218,51,117 };
    byte_vec_t pk { 2,188,227,118,19,199,230,48,163,240,138,82,50,171,16,226,62,51,224,1,165,125,148,224,143,74,171,165,209,113,78,127,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 281 ") {
    byte_vec_t msg { 176,151,11,1 };
    byte_vec_t sig { 173,51,193,227,6,176,244,119,67,58,68,133,189,134,40,210,227,64,225,232,234,37,82,250,79,121,44,95,93,235,40,207,100,164,175,215,45,64,92,227,93,57,79,60,6,142,180,39,53,86,89,162,104,195,188,234,249,219,205,32,32,204,244,159 };
    byte_vec_t pk { 3,65,185,95,226,66,97,245,19,69,216,146,65,189,154,88,202,0,124,27,193,198,179,104,177,249,148,236,224,116,231,61,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 282 ") {
    byte_vec_t msg { 77,146,160,129 };
    byte_vec_t sig { 156,237,112,76,92,253,20,10,181,165,94,153,220,59,240,227,197,169,53,102,178,187,84,160,69,49,185,71,131,34,205,131,46,28,180,183,13,236,82,248,24,143,6,6,76,248,205,188,71,9,1,17,217,193,96,46,168,75,175,200,164,176,203,110 };
    byte_vec_t pk { 4,148,184,135,232,184,32,2,7,241,207,112,98,58,80,151,15,31,173,173,80,118,238,204,33,226,218,202,152,29,132,230,143,230,61,201,97,44,22,137,118,45,105,209,205,84,189,98,11,132,180,241,85,83,155,184,7,110,148,81,5,123,187,206,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 282 ") {
    byte_vec_t msg { 38,95,104,246 };
    byte_vec_t sig { 116,63,105,85,61,38,94,232,32,160,86,245,25,165,196,99,20,49,187,202,95,3,18,122,32,69,88,147,156,42,130,71,12,100,104,57,98,249,93,131,84,206,246,107,177,249,153,185,96,247,95,154,206,142,222,210,45,91,1,151,68,183,96,157 };
    byte_vec_t pk { 4,146,151,243,177,110,97,201,231,193,219,192,124,54,42,197,180,124,25,167,109,178,24,161,26,236,168,151,217,218,94,177,16,161,61,102,122,62,155,109,0,175,241,68,77,202,180,34,144,212,160,196,166,183,155,109,126,173,210,208,209,140,135,58,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 282 ") {
    byte_vec_t msg { 147,103,58,214 };
    byte_vec_t sig { 61,193,75,226,195,95,64,22,184,144,90,68,103,125,243,235,188,61,221,80,199,229,176,110,32,26,219,219,182,110,129,89,195,253,51,211,155,197,199,150,75,57,189,90,10,99,27,67,23,249,44,69,195,201,217,49,65,66,68,64,99,179,159,170 };
    byte_vec_t pk { 3,100,136,112,211,43,174,190,133,247,151,210,85,150,30,146,8,98,243,9,89,122,222,68,25,102,17,225,195,159,208,255,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 282 ") {
    byte_vec_t msg { 31,205,211,10 };
    byte_vec_t sig { 53,98,89,232,119,246,54,88,85,184,29,128,127,76,115,150,167,209,89,62,179,97,221,236,119,105,76,159,88,33,112,146,51,54,219,9,116,59,175,65,202,245,64,245,208,32,31,237,86,28,136,19,125,13,101,196,131,45,24,26,199,118,51,106 };
    byte_vec_t pk { 2,229,230,50,118,251,64,166,195,252,42,5,160,107,109,58,249,157,120,236,194,236,7,172,114,171,118,154,118,218,244,197,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 283 ") {
    byte_vec_t msg { 14,180,128,187 };
    byte_vec_t sig { 216,170,180,39,20,37,74,190,69,147,87,110,50,165,176,98,214,152,222,175,109,138,138,22,21,214,181,233,24,150,68,58,88,101,244,254,36,58,159,196,243,236,74,190,114,59,224,243,20,225,235,200,165,108,247,139,30,166,217,89,91,215,252,228 };
    byte_vec_t pk { 4,46,34,47,74,126,194,75,251,53,20,100,190,252,61,226,56,63,28,113,177,241,168,0,10,17,13,82,44,125,227,94,211,108,185,117,52,211,84,113,227,185,173,133,219,123,51,2,138,241,72,152,64,19,20,221,145,149,64,219,235,132,65,213,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 283 ") {
    byte_vec_t msg { 195,152,54,249 };
    byte_vec_t sig { 121,6,66,97,49,10,237,157,130,130,60,202,21,163,62,61,229,73,190,123,108,10,10,37,135,16,83,90,222,39,3,156,47,89,123,197,80,246,220,6,202,47,129,86,251,165,155,193,134,146,119,74,72,51,30,58,113,131,173,163,5,151,203,63 };
    byte_vec_t pk { 4,148,136,160,193,182,98,120,119,85,21,79,244,116,45,67,175,144,123,111,214,134,207,203,7,168,161,110,69,202,91,173,105,144,93,196,64,143,63,182,177,68,180,180,27,2,36,10,66,192,168,232,114,46,13,195,143,71,255,116,210,206,46,230,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 283 ") {
    byte_vec_t msg { 151,189,81,50 };
    byte_vec_t sig { 33,98,70,184,216,210,162,8,27,132,206,119,158,40,226,204,236,95,131,79,101,168,114,220,213,39,140,46,87,124,2,155,176,22,24,84,135,146,253,40,23,129,255,50,243,91,238,60,108,209,222,15,50,120,9,104,245,49,152,152,190,125,91,185 };
    byte_vec_t pk { 3,139,153,161,251,61,218,2,79,80,192,163,170,171,120,242,49,154,21,142,78,120,104,18,37,62,87,37,118,82,213,193,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 283 ") {
    byte_vec_t msg { 237,247,57,33 };
    byte_vec_t sig { 108,100,247,180,140,182,105,45,189,196,239,172,227,91,144,47,14,193,87,59,186,162,161,161,176,120,102,216,154,26,140,162,185,214,184,56,146,235,70,206,211,189,82,205,54,214,3,127,175,193,49,252,249,212,252,155,210,149,50,19,41,178,142,214 };
    byte_vec_t pk { 2,60,239,243,220,101,27,14,33,52,177,250,102,63,54,43,201,184,58,246,115,66,254,111,18,255,41,23,248,118,53,165,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 284 ") {
    byte_vec_t msg { 57,178,242,65 };
    byte_vec_t sig { 71,99,120,115,247,88,38,82,47,69,120,37,64,47,52,7,6,225,185,178,165,17,96,109,150,107,110,188,172,193,245,233,88,212,82,38,1,213,199,134,51,132,74,35,79,42,208,61,47,122,249,15,232,49,130,247,239,83,173,251,223,214,92,49 };
    byte_vec_t pk { 4,181,77,5,201,225,120,172,118,95,35,164,7,99,188,176,90,71,248,210,3,61,13,0,176,74,188,53,4,192,44,91,64,34,251,2,221,117,7,104,198,94,202,155,57,234,113,229,254,109,144,8,157,139,151,143,156,176,77,150,64,148,238,234,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 284 ") {
    byte_vec_t msg { 64,149,4,60 };
    byte_vec_t sig { 238,109,220,39,77,140,111,61,0,244,251,182,210,42,231,136,144,19,176,59,177,127,138,107,118,120,149,162,113,216,56,156,125,76,235,218,132,191,152,158,181,96,73,113,136,210,121,112,211,172,172,148,118,230,14,222,92,79,82,213,122,237,255,248 };
    byte_vec_t pk { 4,13,103,13,74,145,117,85,27,51,246,71,57,225,204,43,205,200,153,47,224,158,66,225,148,20,59,181,149,238,20,169,240,112,154,60,128,127,141,100,155,22,135,19,87,166,218,204,196,28,18,12,157,72,90,28,208,228,235,151,55,24,253,32,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 284 ") {
    byte_vec_t msg { 128,12,245,117 };
    byte_vec_t sig { 47,94,224,188,157,242,133,67,162,98,203,237,112,182,21,161,241,143,198,58,132,223,53,125,180,113,117,105,253,143,61,75,92,213,218,166,246,204,153,10,26,127,123,44,14,199,30,218,199,2,176,35,154,175,49,202,21,118,52,237,221,155,70,86 };
    byte_vec_t pk { 3,148,67,25,138,174,72,240,133,203,22,10,215,71,141,247,17,179,136,43,79,5,172,217,62,54,93,125,28,87,110,77,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 284 ") {
    byte_vec_t msg { 1,171,206,10 };
    byte_vec_t sig { 81,127,67,215,50,16,166,134,8,104,68,25,44,167,214,158,71,90,147,74,166,109,63,20,32,152,136,196,195,163,69,136,65,39,67,224,9,191,49,193,196,95,98,3,150,227,71,218,157,181,207,93,231,167,72,48,25,54,118,245,165,251,17,242 };
    byte_vec_t pk { 3,52,37,234,127,35,156,36,58,143,246,155,205,122,157,145,142,204,26,7,1,33,24,133,63,32,119,89,145,96,137,188,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 285 ") {
    byte_vec_t msg { 136,209,162,42 };
    byte_vec_t sig { 155,112,154,152,192,92,0,87,110,77,77,120,171,187,177,239,180,129,147,242,10,215,156,226,185,227,203,1,6,58,16,189,100,139,171,69,234,137,183,131,210,122,243,9,142,150,242,220,175,102,118,202,17,169,250,204,230,50,223,75,238,230,48,170 };
    byte_vec_t pk { 4,70,103,134,159,213,194,251,47,44,195,138,58,10,125,149,135,136,219,23,201,60,102,250,161,244,63,148,159,234,188,229,195,37,112,240,118,125,208,207,150,114,132,101,89,119,125,209,224,31,134,93,45,36,130,155,221,126,122,131,195,143,54,156,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 285 ") {
    byte_vec_t msg { 245,63,184,11 };
    byte_vec_t sig { 138,4,193,115,124,242,126,111,81,3,200,219,173,3,118,245,45,140,73,76,199,0,33,158,224,94,238,106,7,64,28,102,234,28,42,180,136,240,108,91,65,128,96,17,65,224,203,112,196,2,4,21,38,82,235,186,107,74,205,175,120,250,189,106 };
    byte_vec_t pk { 4,170,118,180,249,233,124,93,121,150,207,190,126,236,204,15,252,204,60,82,55,119,189,2,252,108,160,15,5,84,55,233,73,86,55,65,162,151,176,205,243,109,248,195,29,74,73,146,218,8,156,53,147,238,206,157,213,172,183,3,210,41,85,52,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 285 ") {
    byte_vec_t msg { 108,205,253,91 };
    byte_vec_t sig { 120,65,100,161,192,45,193,206,87,128,61,117,79,61,233,182,70,20,187,183,162,103,158,237,192,192,6,252,59,109,247,227,204,226,251,178,232,86,215,133,148,144,65,250,36,3,200,2,21,71,236,130,157,226,142,237,167,90,228,161,58,99,164,242 };
    byte_vec_t pk { 2,217,173,183,153,235,242,114,41,117,120,194,95,139,251,42,86,144,233,234,165,92,61,203,111,222,163,252,41,176,161,158,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 285 ") {
    byte_vec_t msg { 57,130,17,188 };
    byte_vec_t sig { 73,57,59,67,0,107,252,85,8,4,100,84,179,8,214,19,142,29,155,154,148,224,77,168,100,63,211,124,251,219,197,132,80,128,19,21,97,225,64,160,136,150,163,145,173,35,239,234,99,124,42,216,211,18,201,84,159,237,90,161,228,224,8,4 };
    byte_vec_t pk { 3,90,7,248,40,159,88,27,249,117,179,235,252,40,203,129,245,8,192,189,163,27,125,56,43,30,6,197,184,63,95,143,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 286 ") {
    byte_vec_t msg { 17,7,208,23 };
    byte_vec_t sig { 131,98,177,182,47,99,10,237,96,85,137,164,69,57,48,136,40,132,248,80,100,234,119,121,43,93,74,154,11,42,49,83,138,143,158,79,166,58,191,79,236,21,131,158,81,188,90,60,187,148,128,195,40,85,123,176,187,126,206,216,252,80,139,116 };
    byte_vec_t pk { 4,15,206,252,6,2,58,30,87,87,113,80,244,54,15,112,109,110,136,222,195,234,226,44,215,149,231,82,168,197,74,246,138,203,251,14,81,172,183,102,9,188,124,41,251,246,14,102,34,50,42,154,19,126,125,252,162,249,208,247,193,217,248,39,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 286 ") {
    byte_vec_t msg { 24,114,70,135 };
    byte_vec_t sig { 154,103,214,84,123,104,181,191,164,180,122,162,213,0,13,185,80,31,146,183,224,128,126,82,162,5,181,42,183,71,121,220,168,179,234,181,203,233,133,203,139,177,61,233,246,138,134,60,105,222,185,49,164,47,182,121,182,69,231,60,57,97,162,29 };
    byte_vec_t pk { 4,199,92,34,222,235,134,77,54,196,40,6,211,137,85,135,136,18,37,104,66,64,1,93,74,146,228,146,228,34,208,61,144,12,162,159,122,219,6,64,214,112,18,141,177,126,142,80,50,115,59,15,47,116,149,28,196,248,226,79,144,96,198,131,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 286 ") {
    byte_vec_t msg { 248,77,156,196 };
    byte_vec_t sig { 141,41,233,89,58,30,125,95,133,68,58,151,187,180,146,40,59,206,191,118,182,191,126,169,22,195,245,118,166,118,66,188,185,82,80,71,32,95,131,255,137,20,220,153,254,143,247,226,62,223,138,133,71,89,165,29,26,112,249,39,49,232,212,26 };
    byte_vec_t pk { 2,35,98,241,139,193,171,82,243,59,162,186,105,24,25,34,136,68,240,236,176,197,55,63,42,28,21,239,71,221,173,125,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 286 ") {
    byte_vec_t msg { 214,21,30,158 };
    byte_vec_t sig { 121,77,121,90,150,213,49,206,220,182,110,105,150,248,214,147,129,249,139,77,26,107,75,114,117,16,116,16,15,211,19,10,221,166,190,69,204,137,241,210,130,163,17,82,183,39,121,92,148,40,226,144,212,81,194,26,23,237,159,206,254,20,211,15 };
    byte_vec_t pk { 3,72,172,251,137,137,180,182,96,221,205,14,216,191,40,184,147,115,222,248,168,120,143,94,26,51,127,12,160,106,32,74,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 287 ") {
    byte_vec_t msg { 60,94,226,33 };
    byte_vec_t sig { 130,150,47,252,237,191,254,60,157,218,17,31,211,113,40,245,57,222,24,228,67,235,37,2,225,123,85,131,204,165,140,79,194,43,91,175,16,98,128,219,92,116,217,148,53,112,133,72,16,130,39,222,30,123,125,158,69,21,204,21,104,171,58,88 };
    byte_vec_t pk { 4,186,78,22,20,94,24,129,84,195,220,195,96,210,25,189,3,50,174,236,80,254,121,76,246,194,90,238,253,148,89,18,104,13,227,126,94,45,151,247,235,224,143,180,0,5,1,182,39,224,73,136,238,177,212,193,65,183,5,219,243,168,107,5,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 287 ") {
    byte_vec_t msg { 234,178,161,177 };
    byte_vec_t sig { 98,153,168,221,90,118,210,113,13,127,87,72,90,175,113,33,118,80,223,33,30,100,131,134,204,40,51,161,163,230,234,249,16,41,16,83,67,19,165,208,41,130,165,119,227,211,38,82,28,42,224,71,4,73,187,207,40,201,39,112,60,233,24,96 };
    byte_vec_t pk { 4,168,135,136,88,133,184,93,161,145,10,246,18,179,76,198,50,65,154,117,138,170,38,72,130,136,198,238,203,93,101,208,48,26,34,81,16,64,217,172,64,250,92,31,198,130,198,64,7,40,45,217,184,198,194,154,155,117,66,91,230,223,54,110,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 287 ") {
    byte_vec_t msg { 54,240,84,110 };
    byte_vec_t sig { 86,230,137,224,10,98,184,229,49,213,63,105,25,207,70,127,82,69,107,143,30,232,237,202,244,180,61,58,40,230,240,228,21,237,29,171,102,74,59,141,185,174,105,25,120,22,214,172,103,54,175,187,57,5,161,252,240,110,188,83,29,217,251,200 };
    byte_vec_t pk { 2,4,104,193,50,15,81,44,67,233,212,244,197,134,155,130,229,28,109,30,81,143,214,139,20,70,200,163,53,216,19,189,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 287 ") {
    byte_vec_t msg { 255,38,167,200 };
    byte_vec_t sig { 204,251,194,25,142,226,193,66,234,18,17,173,13,83,91,2,164,109,139,88,249,141,175,143,34,54,40,220,145,200,14,55,77,64,72,40,245,168,192,27,113,202,158,156,158,103,252,167,249,121,253,107,228,195,121,50,164,77,245,166,178,7,100,49 };
    byte_vec_t pk { 3,113,196,201,135,129,173,41,153,6,124,99,183,1,73,38,53,204,26,185,52,62,139,102,255,139,0,99,71,166,99,92,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 288 ") {
    byte_vec_t msg { 106,111,13,215 };
    byte_vec_t sig { 169,179,98,188,239,74,3,231,28,120,131,127,30,213,10,28,15,151,15,209,151,108,175,49,200,87,44,182,48,184,84,3,18,212,227,166,11,147,210,27,35,135,109,229,210,131,194,229,64,178,254,168,137,81,190,202,105,115,199,129,229,66,117,232 };
    byte_vec_t pk { 4,100,129,40,59,115,141,247,37,137,9,39,54,226,43,28,87,242,79,198,119,170,255,60,204,59,29,116,183,92,239,222,54,229,111,146,142,156,24,129,202,212,34,124,121,124,68,175,167,230,86,75,137,226,130,70,83,220,40,96,168,254,59,109,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 288 ") {
    byte_vec_t msg { 4,34,48,119 };
    byte_vec_t sig { 145,161,30,149,19,75,189,88,118,207,28,36,34,9,122,89,224,82,149,113,85,177,1,237,107,247,223,113,89,17,174,47,140,144,197,116,181,68,60,81,148,67,171,208,99,219,9,158,198,40,75,28,53,165,243,137,249,98,9,120,65,118,180,144 };
    byte_vec_t pk { 4,56,87,18,170,129,188,25,49,64,255,39,187,246,118,94,153,87,218,111,217,24,240,38,135,80,167,193,142,40,162,70,69,254,235,120,62,250,205,183,138,217,42,255,165,174,45,213,72,78,87,227,56,224,119,23,181,4,225,124,34,91,38,44,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 288 ") {
    byte_vec_t msg { 156,191,242,8 };
    byte_vec_t sig { 195,10,164,10,131,110,208,150,114,157,242,233,105,232,237,122,207,89,36,185,46,45,137,73,253,130,126,197,122,24,215,25,22,123,134,101,109,7,31,69,79,134,48,32,187,238,156,235,160,22,167,194,213,82,179,79,35,35,114,87,71,167,191,227 };
    byte_vec_t pk { 2,184,204,16,22,179,27,11,42,48,203,144,152,152,120,144,5,6,58,221,222,252,167,205,12,98,186,156,112,15,19,117,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 288 ") {
    byte_vec_t msg { 143,73,251,203 };
    byte_vec_t sig { 186,117,63,213,116,105,87,136,55,134,220,225,13,192,229,24,59,121,11,59,2,91,187,222,176,177,180,41,116,60,251,138,209,75,14,132,151,33,249,193,45,16,10,90,158,157,184,231,33,251,220,94,79,166,43,199,37,59,176,233,91,80,115,149 };
    byte_vec_t pk { 2,74,79,20,165,133,240,140,185,191,12,12,181,137,177,242,143,100,150,145,29,250,194,231,195,169,56,249,46,176,210,98,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 289 ") {
    byte_vec_t msg { 53,238,80,11 };
    byte_vec_t sig { 180,88,20,167,30,228,157,216,76,35,108,177,31,23,114,172,97,56,95,31,242,229,159,69,54,210,156,150,104,51,107,154,135,78,96,30,29,176,247,223,112,196,75,103,142,110,204,90,157,35,116,142,187,195,128,232,126,23,85,23,45,220,35,105 };
    byte_vec_t pk { 4,113,150,220,119,148,23,61,96,27,60,142,248,70,105,57,148,18,131,37,197,37,221,205,243,201,35,78,234,163,15,117,154,22,163,212,125,23,101,132,165,61,0,86,82,169,167,19,110,210,72,28,249,200,254,175,164,120,186,47,17,234,69,139,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 289 ") {
    byte_vec_t msg { 182,210,166,233 };
    byte_vec_t sig { 108,122,25,110,49,127,103,196,173,43,33,241,247,53,57,149,114,64,30,190,134,104,21,206,165,108,137,138,126,64,216,98,28,149,76,3,241,45,165,140,28,170,6,13,255,63,203,155,168,200,99,237,243,93,20,184,148,35,42,240,195,110,195,74 };
    byte_vec_t pk { 4,101,220,226,241,3,232,145,238,112,178,6,110,233,250,142,32,250,74,187,217,104,233,185,201,27,22,179,180,109,8,46,91,88,129,204,197,30,154,183,97,71,227,196,213,187,22,163,135,125,80,172,253,240,87,5,238,48,236,142,120,211,47,249,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 289 ") {
    byte_vec_t msg { 60,0,187,130 };
    byte_vec_t sig { 40,185,79,190,45,31,43,181,238,91,53,159,34,31,128,33,18,200,39,28,100,128,180,149,60,129,109,77,38,66,226,27,76,150,56,24,1,208,164,96,0,157,93,240,68,120,15,105,181,239,170,119,16,189,145,202,177,82,162,158,104,168,205,195 };
    byte_vec_t pk { 2,171,235,44,179,185,133,70,36,151,65,76,231,209,253,52,219,125,88,13,213,240,148,31,61,110,243,108,135,124,28,164,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 289 ") {
    byte_vec_t msg { 227,231,143,19 };
    byte_vec_t sig { 181,116,66,197,230,74,232,86,51,254,108,206,222,137,130,188,252,23,7,234,57,175,224,1,8,118,198,95,235,115,180,189,250,58,38,176,143,4,3,33,45,32,222,171,35,210,71,196,37,89,22,164,29,3,200,11,19,58,138,218,84,100,239,45 };
    byte_vec_t pk { 2,73,182,221,226,154,19,200,71,156,58,194,151,173,166,95,41,183,126,24,192,36,181,93,19,119,37,142,248,207,127,106,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 290 ") {
    byte_vec_t msg { 243,70,123,35 };
    byte_vec_t sig { 65,49,211,95,208,225,64,15,214,120,149,13,235,20,234,152,219,19,221,102,103,80,72,36,1,115,25,108,55,81,232,166,147,155,100,195,19,213,137,171,150,138,152,145,83,110,231,120,140,44,44,59,184,84,224,117,238,204,167,144,128,224,127,11 };
    byte_vec_t pk { 4,6,34,184,211,107,190,220,72,250,17,62,248,51,50,150,178,253,93,0,186,96,133,128,104,174,174,142,87,153,115,162,177,206,156,209,82,36,217,202,194,55,112,182,5,90,70,60,192,99,196,2,165,66,217,213,6,87,252,90,233,143,245,92,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 290 ") {
    byte_vec_t msg { 17,226,112,112 };
    byte_vec_t sig { 130,194,36,242,24,205,7,87,241,119,244,76,37,233,141,167,86,168,243,41,147,86,140,2,105,125,254,65,29,155,176,34,134,253,209,89,192,33,243,64,118,148,30,233,177,156,67,46,198,8,7,238,23,215,78,127,86,201,215,39,38,74,170,158 };
    byte_vec_t pk { 4,182,237,239,253,226,150,59,11,61,217,82,169,100,179,62,29,191,225,119,198,193,19,167,102,160,21,217,149,241,223,49,112,202,181,175,247,219,181,177,113,112,254,247,184,25,150,255,89,139,65,42,84,77,217,13,153,76,137,146,18,105,56,21,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 290 ") {
    byte_vec_t msg { 26,135,113,131 };
    byte_vec_t sig { 6,236,37,228,151,151,246,201,74,127,205,88,132,215,97,171,188,217,113,47,136,26,240,4,82,248,155,51,47,208,145,97,66,245,47,88,219,24,97,255,197,236,248,251,104,148,46,160,253,113,143,111,181,138,135,163,150,57,19,38,251,5,159,209 };
    byte_vec_t pk { 3,215,195,112,135,93,137,200,60,56,226,84,174,102,170,19,211,77,59,138,61,233,54,183,157,251,38,252,75,54,7,235,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 290 ") {
    byte_vec_t msg { 232,105,20,240 };
    byte_vec_t sig { 55,244,47,14,30,200,99,35,246,234,181,244,152,224,211,224,137,219,58,119,255,253,147,209,2,124,198,44,105,48,32,248,93,216,13,217,11,88,171,40,10,94,175,138,243,213,87,65,156,75,231,15,119,76,147,203,166,124,53,72,208,179,198,174 };
    byte_vec_t pk { 3,104,56,76,35,134,155,72,19,66,22,207,232,165,110,250,93,168,187,9,128,125,185,52,131,232,71,205,201,97,152,156,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 291 ") {
    byte_vec_t msg { 124,211,249,46 };
    byte_vec_t sig { 187,93,211,80,241,52,185,170,18,209,6,225,60,76,67,189,167,159,139,211,71,228,221,155,239,253,45,9,67,161,188,153,109,233,217,17,78,46,200,110,22,96,132,104,18,56,123,30,156,70,179,137,209,139,192,59,31,247,86,125,73,29,173,63 };
    byte_vec_t pk { 4,155,216,145,216,227,33,228,198,39,191,110,196,207,33,31,122,199,235,210,235,36,207,196,124,228,41,219,137,248,33,189,120,92,6,20,181,151,251,145,162,242,234,10,244,128,165,19,9,204,5,72,225,169,112,63,166,72,60,252,120,107,25,61,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 291 ") {
    byte_vec_t msg { 41,248,72,202 };
    byte_vec_t sig { 245,107,154,97,124,253,134,18,101,20,124,121,44,70,215,254,61,57,130,158,13,221,209,165,80,239,107,212,245,225,67,166,73,60,63,148,62,232,211,194,180,133,164,147,43,131,247,96,121,44,180,46,39,123,156,168,180,162,137,41,147,93,23,160 };
    byte_vec_t pk { 4,125,219,209,174,200,131,45,253,108,148,171,61,196,147,131,95,42,184,45,173,159,58,253,146,94,185,47,220,102,148,35,135,224,167,208,234,91,83,179,255,65,178,127,158,52,218,7,78,146,86,24,53,105,18,233,66,228,103,100,88,165,210,97,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 291 ") {
    byte_vec_t msg { 61,78,46,124 };
    byte_vec_t sig { 86,211,93,253,63,161,17,34,215,25,199,163,118,122,158,101,103,8,62,213,220,163,127,233,83,150,120,71,168,18,234,229,31,148,212,38,28,209,65,186,163,220,109,19,255,120,65,233,240,236,99,133,247,50,218,58,230,20,99,6,168,35,128,214 };
    byte_vec_t pk { 2,48,175,240,222,78,54,107,119,169,11,65,212,75,41,180,189,186,177,178,110,248,231,10,90,43,3,92,64,91,64,69,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 291 ") {
    byte_vec_t msg { 112,77,207,111 };
    byte_vec_t sig { 22,12,19,59,10,15,209,187,66,108,20,76,158,148,167,131,166,235,73,179,47,5,49,117,209,116,231,202,109,168,106,11,193,39,162,79,239,155,5,154,251,146,187,82,130,23,118,122,202,43,205,50,127,40,238,168,120,15,234,215,47,194,58,214 };
    byte_vec_t pk { 2,106,57,211,240,131,124,212,150,14,10,241,3,1,175,68,249,234,0,118,180,223,104,135,149,64,58,162,25,217,69,242,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 292 ") {
    byte_vec_t msg { 225,114,137,77 };
    byte_vec_t sig { 203,34,60,239,254,223,229,240,1,34,74,204,249,51,96,209,240,228,175,207,75,83,124,152,186,231,93,243,233,98,135,95,5,176,204,95,182,238,188,37,179,10,30,115,220,1,252,72,248,62,168,127,150,151,93,229,96,62,197,231,53,205,128,118 };
    byte_vec_t pk { 4,35,23,102,35,117,22,111,51,113,215,198,144,109,159,26,118,76,86,115,234,148,103,90,116,191,144,239,165,126,163,200,26,244,14,219,63,22,215,153,90,189,41,88,102,255,5,136,21,206,57,130,81,76,49,181,49,204,88,245,57,121,35,178,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 292 ") {
    byte_vec_t msg { 37,78,86,183 };
    byte_vec_t sig { 107,6,113,173,249,88,67,82,255,157,37,61,230,233,201,154,209,186,232,158,201,180,143,185,1,104,255,40,115,102,36,49,231,31,82,73,2,131,123,162,123,43,101,200,190,195,179,158,19,236,128,158,195,172,19,131,226,123,146,128,176,32,131,18 };
    byte_vec_t pk { 4,177,42,134,218,181,76,114,186,225,232,17,64,46,243,34,84,167,26,239,112,53,21,231,34,137,209,216,137,207,237,245,204,138,54,232,54,101,202,207,4,193,44,189,81,158,19,73,52,111,170,135,247,212,159,79,33,156,138,213,57,216,196,35,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 292 ") {
    byte_vec_t msg { 15,209,234,239 };
    byte_vec_t sig { 252,162,75,211,121,63,108,249,77,78,126,80,29,14,21,77,50,75,227,38,149,0,106,55,55,155,91,165,133,241,95,24,215,82,3,110,186,109,148,76,186,242,190,43,134,252,240,246,14,233,99,96,16,189,53,196,149,133,191,216,179,221,253,13 };
    byte_vec_t pk { 3,44,57,195,8,37,225,19,57,38,128,212,30,25,130,69,2,165,207,15,1,253,236,140,19,48,206,67,229,147,90,206,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 292 ") {
    byte_vec_t msg { 54,86,116,203 };
    byte_vec_t sig { 115,224,114,29,234,227,222,4,148,124,190,148,141,165,130,218,211,75,69,103,34,179,73,238,101,31,243,83,187,246,39,192,123,223,201,22,194,242,109,70,225,155,63,79,39,128,159,138,15,165,70,89,138,201,240,185,141,238,57,200,45,51,210,239 };
    byte_vec_t pk { 2,33,45,118,208,229,180,128,249,237,199,169,140,231,158,203,4,217,64,6,17,141,24,241,4,166,121,27,84,127,43,139,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 293 ") {
    byte_vec_t msg { 125,42,170,115 };
    byte_vec_t sig { 239,225,78,92,249,172,95,61,195,63,68,221,201,186,254,255,155,144,101,133,198,186,207,29,193,140,39,219,218,149,187,214,197,26,78,3,162,30,216,65,132,109,182,66,142,246,139,84,103,106,12,25,222,82,108,212,25,101,98,79,159,11,9,88 };
    byte_vec_t pk { 4,2,193,26,61,60,68,194,165,69,3,122,80,176,86,20,121,198,3,44,197,210,23,108,47,20,214,72,52,5,178,125,51,136,161,111,141,213,218,245,174,152,221,228,111,201,183,207,13,205,249,87,52,176,90,141,190,25,219,138,169,12,25,18,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 293 ") {
    byte_vec_t msg { 36,56,220,39 };
    byte_vec_t sig { 14,59,52,161,224,46,33,244,165,93,8,200,16,176,213,51,7,73,177,174,115,133,107,121,28,242,18,108,167,119,26,216,132,64,176,151,192,149,229,202,160,218,240,36,195,165,124,71,160,31,51,139,244,252,134,254,8,25,237,86,57,173,250,237 };
    byte_vec_t pk { 4,78,16,92,3,96,250,199,127,187,15,134,9,227,119,221,113,12,56,118,27,236,233,162,55,72,161,233,92,34,25,131,74,76,35,252,123,220,69,147,90,30,56,175,134,167,208,94,138,160,194,12,221,132,145,183,125,62,39,175,63,149,52,215,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 293 ") {
    byte_vec_t msg { 38,37,55,248 };
    byte_vec_t sig { 233,112,128,65,216,85,22,210,227,79,203,216,111,85,48,85,150,24,34,77,66,65,36,5,39,40,11,175,229,106,151,10,59,81,83,204,158,163,170,175,218,18,196,68,135,68,127,142,195,149,82,28,253,37,17,172,122,195,191,201,184,28,191,224 };
    byte_vec_t pk { 2,103,162,117,185,92,19,149,248,207,237,255,52,253,142,35,5,72,147,44,159,210,87,62,141,202,8,129,13,65,253,196,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 293 ") {
    byte_vec_t msg { 110,87,18,69 };
    byte_vec_t sig { 143,95,78,176,79,196,134,26,66,219,206,196,238,6,17,80,255,139,3,127,6,220,134,216,204,199,238,155,238,199,199,12,161,87,210,238,245,64,241,204,198,122,200,68,172,134,36,228,144,130,146,193,184,206,95,226,75,6,27,248,229,255,95,247 };
    byte_vec_t pk { 3,247,162,24,177,8,175,58,98,25,17,71,186,100,187,96,148,37,111,21,49,196,33,23,46,180,39,165,171,34,199,194,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 294 ") {
    byte_vec_t msg { 67,197,72,220 };
    byte_vec_t sig { 241,89,5,164,138,5,129,23,226,9,199,40,140,111,102,20,50,153,68,205,12,255,62,239,127,132,118,23,36,195,172,99,215,199,239,17,7,159,230,255,151,20,46,39,176,147,84,182,22,159,208,189,59,86,2,69,207,3,181,145,80,50,197,228 };
    byte_vec_t pk { 4,245,148,233,179,82,175,250,50,7,88,217,87,83,207,5,80,229,239,245,85,160,84,244,65,200,116,50,163,6,186,78,149,250,181,202,89,16,171,152,63,104,103,53,170,10,22,239,193,177,253,113,75,118,190,84,27,157,108,203,197,175,239,115,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 294 ") {
    byte_vec_t msg { 53,185,230,119 };
    byte_vec_t sig { 177,160,209,205,213,61,144,0,112,103,5,110,130,93,128,200,140,203,181,124,120,221,129,117,220,62,105,63,29,206,236,233,206,146,180,144,179,241,40,163,245,243,172,68,33,144,3,50,194,57,160,254,178,35,62,0,24,100,192,152,65,170,87,19 };
    byte_vec_t pk { 4,44,188,63,113,209,207,117,211,73,29,233,122,15,174,41,82,242,36,160,254,57,145,5,149,71,38,233,115,231,1,19,126,59,10,5,156,42,141,21,11,230,190,255,181,236,10,162,79,29,39,23,76,46,216,199,73,185,206,178,133,189,92,91,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 294 ") {
    byte_vec_t msg { 109,231,240,14 };
    byte_vec_t sig { 112,80,2,33,208,96,212,13,157,196,13,81,146,98,241,80,121,98,38,63,253,255,8,21,48,84,86,135,152,227,85,207,197,198,226,192,169,25,183,133,134,70,224,97,174,149,61,250,82,77,204,90,81,119,176,181,233,28,169,123,67,175,146,121 };
    byte_vec_t pk { 2,170,66,5,58,246,215,62,99,100,248,82,55,75,201,206,132,134,51,50,33,108,16,3,91,79,1,64,174,254,228,57,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 294 ") {
    byte_vec_t msg { 24,98,5,241 };
    byte_vec_t sig { 103,88,195,190,246,35,164,162,203,30,245,68,241,181,48,249,97,190,142,133,250,193,111,71,109,109,136,166,6,7,14,141,204,58,255,60,235,84,54,86,248,246,240,194,169,9,41,174,16,252,187,2,37,212,171,205,194,71,224,161,237,142,247,144 };
    byte_vec_t pk { 2,191,51,199,67,47,174,1,147,4,11,45,242,128,111,180,141,23,183,108,30,128,145,165,34,92,178,182,104,207,201,85,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 295 ") {
    byte_vec_t msg { 215,105,231,193 };
    byte_vec_t sig { 165,107,4,15,111,171,225,10,196,126,118,116,158,111,180,193,14,6,114,89,47,232,133,38,165,181,44,158,167,26,214,125,229,43,42,42,240,248,34,59,90,40,195,223,165,229,78,233,103,98,231,71,31,226,132,20,186,138,154,126,85,77,79,41 };
    byte_vec_t pk { 4,41,25,241,234,240,22,49,151,175,184,242,132,80,38,121,211,215,94,24,215,26,142,220,146,6,183,80,176,21,155,88,7,213,104,27,207,78,251,107,222,53,173,16,172,53,215,145,46,1,131,231,8,20,130,146,65,116,89,248,223,24,175,90,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 295 ") {
    byte_vec_t msg { 128,156,72,1 };
    byte_vec_t sig { 233,189,1,74,142,193,53,52,13,226,203,155,47,11,88,24,173,38,142,140,121,78,230,199,114,163,156,184,152,77,50,156,251,108,0,218,7,74,42,159,119,89,162,197,54,13,115,222,63,116,216,67,31,88,86,171,96,196,163,169,255,115,93,180 };
    byte_vec_t pk { 4,145,73,145,16,32,164,139,217,20,40,19,42,84,85,197,130,79,154,197,49,51,186,149,228,251,40,228,210,181,33,240,76,77,114,130,148,185,155,243,118,152,176,14,205,234,247,116,70,160,126,109,228,68,198,169,91,170,58,195,121,246,236,185,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 295 ") {
    byte_vec_t msg { 68,143,244,103 };
    byte_vec_t sig { 110,207,76,116,239,145,70,201,43,54,153,74,85,227,126,79,186,251,135,83,167,202,33,107,90,44,33,209,154,19,183,26,236,33,27,9,136,160,54,174,72,143,136,149,150,93,173,218,107,139,220,178,112,39,128,214,190,155,175,135,88,107,235,212 };
    byte_vec_t pk { 2,140,247,34,20,103,118,235,98,109,127,19,247,149,180,48,175,150,182,187,5,187,201,246,157,145,122,249,99,180,230,92,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 295 ") {
    byte_vec_t msg { 21,16,120,216 };
    byte_vec_t sig { 142,18,94,88,93,220,54,250,75,55,28,80,65,218,85,179,29,195,135,190,148,155,64,82,20,109,240,179,245,98,105,23,39,224,118,58,204,50,252,179,176,135,139,174,26,113,28,64,134,0,50,80,95,176,126,86,225,106,5,16,152,177,184,131 };
    byte_vec_t pk { 3,135,175,127,181,208,182,155,178,214,232,32,41,180,255,149,53,42,125,232,145,100,114,196,160,234,20,231,18,160,212,160,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 296 ") {
    byte_vec_t msg { 228,137,187,86 };
    byte_vec_t sig { 140,64,231,35,100,106,19,51,171,54,247,16,2,148,45,205,224,187,225,110,202,221,16,21,175,164,15,74,61,195,96,64,69,100,206,78,92,127,225,67,249,214,228,94,54,207,199,210,128,142,101,124,62,167,44,111,135,197,67,241,77,195,243,32 };
    byte_vec_t pk { 4,53,204,184,11,228,36,179,134,96,42,246,161,107,29,93,91,159,17,98,74,158,90,229,32,147,30,204,24,141,120,9,225,202,249,209,104,233,16,201,244,80,177,10,231,68,222,23,108,242,220,227,177,201,16,220,208,202,37,37,166,105,252,228,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 296 ") {
    byte_vec_t msg { 90,12,220,37 };
    byte_vec_t sig { 186,172,242,206,55,175,54,238,79,125,136,68,85,2,212,249,110,93,226,152,19,121,93,58,64,183,4,43,198,49,130,231,57,71,255,197,197,243,136,137,165,169,32,183,5,102,49,242,13,245,240,96,27,188,139,180,120,120,242,39,105,56,22,156 };
    byte_vec_t pk { 4,86,200,42,9,199,184,249,122,52,113,14,173,33,164,52,16,162,75,209,70,213,251,153,119,252,100,243,153,74,57,62,38,84,112,240,158,81,70,34,84,255,173,147,80,80,50,165,108,11,190,212,254,126,254,111,162,105,59,153,209,142,41,223,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 296 ") {
    byte_vec_t msg { 222,98,222,145 };
    byte_vec_t sig { 138,124,138,233,4,166,5,38,152,70,0,194,228,209,24,87,33,5,78,123,102,49,176,229,61,8,226,157,196,71,73,250,37,244,111,189,5,120,96,191,180,203,108,202,254,91,79,7,110,242,9,111,60,121,44,107,7,117,93,114,113,167,38,146 };
    byte_vec_t pk { 2,105,174,35,61,216,105,240,73,158,82,49,206,172,60,98,73,122,97,8,234,249,94,80,39,232,146,86,108,82,124,206,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 296 ") {
    byte_vec_t msg { 103,186,17,234 };
    byte_vec_t sig { 127,255,205,35,179,137,22,205,124,98,240,160,172,139,168,0,95,240,0,65,147,53,22,138,78,33,91,132,160,23,186,95,72,2,34,28,203,175,208,175,45,130,90,143,32,8,172,231,186,165,35,127,148,99,122,98,144,161,28,160,27,15,139,54 };
    byte_vec_t pk { 2,245,250,201,165,154,183,177,214,26,159,247,151,71,147,30,174,65,36,173,3,65,66,218,196,246,239,155,220,62,43,247,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 297 ") {
    byte_vec_t msg { 112,199,220,233 };
    byte_vec_t sig { 66,206,94,183,12,104,69,193,162,11,194,183,189,197,107,160,177,109,18,91,152,201,3,63,140,49,173,233,241,183,138,227,12,63,194,187,205,4,247,249,146,87,178,119,93,192,202,238,241,213,178,171,243,16,135,95,52,240,99,144,174,16,102,42 };
    byte_vec_t pk { 4,35,76,166,212,48,56,69,89,18,185,164,110,76,127,1,164,212,135,196,104,206,98,239,51,61,72,7,247,119,182,72,100,206,168,49,160,2,171,254,213,161,174,176,68,201,161,171,127,163,65,202,12,168,45,134,6,75,65,229,146,140,129,30,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 297 ") {
    byte_vec_t msg { 147,34,253,26 };
    byte_vec_t sig { 9,135,127,84,56,45,175,40,239,144,147,60,47,41,27,77,252,124,206,72,133,0,36,64,143,175,145,94,105,123,144,125,204,98,25,106,127,253,172,253,2,108,189,116,61,56,212,135,51,236,9,185,213,21,178,138,130,23,161,206,38,156,77,110 };
    byte_vec_t pk { 4,149,102,136,136,159,33,224,102,190,157,174,216,250,152,124,58,139,171,55,223,187,175,171,197,43,64,120,128,13,33,115,164,192,82,210,221,6,112,236,215,108,170,73,119,243,228,231,210,157,199,232,6,41,45,27,23,40,250,106,120,211,86,28,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 297 ") {
    byte_vec_t msg { 227,205,129,134 };
    byte_vec_t sig { 122,130,159,253,111,161,50,26,172,198,189,36,53,25,8,157,84,150,186,202,188,178,224,37,79,109,53,2,11,98,0,70,61,168,245,176,75,161,126,20,199,57,126,126,175,134,20,65,110,255,188,225,216,149,146,200,149,209,131,199,108,191,12,115 };
    byte_vec_t pk { 3,140,64,251,135,227,108,151,6,24,14,96,191,92,91,52,96,214,241,71,12,128,157,70,191,198,200,77,184,95,63,80,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 297 ") {
    byte_vec_t msg { 42,211,45,170 };
    byte_vec_t sig { 38,75,117,81,252,115,242,55,111,106,10,156,189,226,12,197,18,163,7,36,224,44,29,131,234,158,48,198,211,194,254,133,51,95,215,171,179,235,113,219,26,178,232,216,140,226,30,153,172,17,76,169,244,180,196,179,239,47,1,117,41,210,173,80 };
    byte_vec_t pk { 2,230,4,92,193,240,199,134,236,148,250,179,49,83,197,5,249,154,194,86,32,20,61,125,139,189,98,214,61,182,210,123,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 298 ") {
    byte_vec_t msg { 119,97,66,254 };
    byte_vec_t sig { 76,188,10,63,123,238,107,209,102,58,124,39,191,0,8,198,136,45,24,118,223,191,127,23,176,137,66,60,54,9,178,17,50,228,32,168,175,108,97,208,238,198,229,152,119,194,228,224,27,167,232,24,64,205,24,208,190,223,72,197,79,76,167,29 };
    byte_vec_t pk { 4,35,84,239,248,215,254,6,111,240,155,202,135,178,237,216,27,66,16,83,208,121,253,245,122,97,196,107,109,28,117,115,200,160,147,254,24,243,159,174,92,6,108,48,52,39,157,167,165,28,96,167,60,219,6,64,205,45,174,35,30,222,40,72,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 298 ") {
    byte_vec_t msg { 188,67,254,119 };
    byte_vec_t sig { 183,193,104,104,89,186,131,3,230,203,116,250,243,124,76,213,109,189,239,35,37,173,25,66,73,131,166,166,94,133,206,220,83,46,209,149,87,109,34,117,8,214,53,197,251,22,71,118,183,35,239,67,53,124,9,239,136,139,105,151,113,12,253,106 };
    byte_vec_t pk { 4,20,154,208,15,133,139,41,127,4,198,135,55,252,165,199,29,16,206,225,95,234,90,235,36,64,55,35,202,236,81,183,210,74,230,70,216,170,137,5,59,46,36,137,54,208,199,21,57,149,17,197,18,57,8,147,194,144,11,42,183,211,42,59,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 298 ") {
    byte_vec_t msg { 236,19,195,151 };
    byte_vec_t sig { 244,185,230,221,215,23,68,8,171,107,166,145,153,92,151,26,158,253,149,88,7,93,100,74,36,121,54,86,30,0,104,40,91,34,82,106,211,191,106,30,196,180,139,157,254,108,34,45,94,196,215,55,149,100,64,127,76,0,156,193,184,51,63,35 };
    byte_vec_t pk { 3,253,2,154,15,195,225,170,168,140,225,94,9,194,110,169,212,234,194,59,192,241,13,129,227,251,132,199,139,237,233,1,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 298 ") {
    byte_vec_t msg { 240,62,189,177 };
    byte_vec_t sig { 236,21,179,72,206,208,159,250,56,83,163,243,169,74,199,163,193,18,187,67,27,39,136,67,224,194,156,160,10,46,93,198,147,69,106,62,151,116,253,254,122,17,37,180,169,151,121,121,146,167,173,19,18,40,156,111,121,30,243,25,137,36,137,216 };
    byte_vec_t pk { 2,29,211,230,206,35,48,79,160,236,82,201,154,60,139,48,84,93,122,30,174,137,125,242,191,25,131,67,59,128,78,238,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 299 ") {
    byte_vec_t msg { 180,33,92,100 };
    byte_vec_t sig { 219,234,104,60,73,216,194,67,66,16,113,229,16,190,183,171,8,253,134,57,118,57,76,38,22,209,180,108,160,55,225,183,239,219,162,175,111,115,117,100,212,242,132,23,70,63,177,218,101,179,88,194,146,102,12,125,128,114,63,181,3,190,80,89 };
    byte_vec_t pk { 4,118,224,162,71,112,54,56,195,11,118,167,85,136,204,28,92,239,178,8,49,168,242,6,95,255,154,52,225,226,9,80,68,32,34,41,149,28,191,37,185,21,232,78,15,210,139,224,131,159,8,80,117,126,25,67,134,108,126,17,141,167,169,94,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 299 ") {
    byte_vec_t msg { 189,95,229,158 };
    byte_vec_t sig { 17,205,42,74,161,8,213,54,222,159,132,124,29,155,77,29,208,198,118,5,102,65,80,48,90,210,174,233,123,251,5,26,205,47,213,39,89,205,160,80,217,28,121,236,10,10,104,104,217,186,62,113,15,231,102,44,160,218,53,109,164,251,135,154 };
    byte_vec_t pk { 4,128,168,138,207,87,215,105,127,74,181,141,158,103,216,25,132,147,74,99,141,28,159,227,251,207,88,161,84,203,119,151,28,55,183,38,131,145,24,49,149,58,160,141,129,184,253,118,17,115,93,29,210,162,165,61,215,68,203,170,249,173,227,118,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 299 ") {
    byte_vec_t msg { 24,148,80,170 };
    byte_vec_t sig { 126,34,187,187,254,118,80,243,113,144,113,68,118,191,125,215,156,43,96,70,128,151,140,61,202,143,58,30,105,218,245,34,213,224,137,54,89,43,25,199,147,72,241,197,127,64,34,38,88,13,30,136,11,61,36,126,217,151,240,228,249,213,240,151 };
    byte_vec_t pk { 2,180,88,122,119,20,15,66,91,65,166,120,34,175,51,212,231,149,20,14,210,123,153,75,39,75,43,45,230,160,25,39,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 299 ") {
    byte_vec_t msg { 193,140,13,184 };
    byte_vec_t sig { 82,45,159,220,116,195,247,119,104,169,32,59,94,3,208,187,188,40,122,28,45,214,139,202,205,4,117,204,16,100,2,204,157,39,150,206,247,73,218,243,218,24,162,221,71,133,221,139,75,84,141,206,213,57,61,158,66,48,27,189,7,150,67,131 };
    byte_vec_t pk { 3,161,144,207,102,100,41,178,79,95,160,189,147,221,120,174,161,24,193,1,207,2,124,230,61,101,199,159,102,117,203,189,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 300 ") {
    byte_vec_t msg { 255,147,9,79 };
    byte_vec_t sig { 232,229,98,27,242,51,250,186,58,65,207,244,50,199,216,37,58,34,190,171,190,201,114,22,227,190,81,101,19,58,216,183,77,209,163,213,174,170,44,194,178,108,25,143,45,221,62,252,16,243,101,137,138,173,174,38,181,216,131,112,20,86,79,167 };
    byte_vec_t pk { 4,230,69,187,24,35,232,119,7,123,128,125,236,20,107,244,224,205,46,170,17,81,153,91,201,150,59,188,22,63,133,82,6,36,67,168,176,15,45,216,57,132,112,44,181,170,154,121,58,250,220,209,94,77,178,48,249,68,169,152,214,1,161,234,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 300 ") {
    byte_vec_t msg { 136,160,83,22 };
    byte_vec_t sig { 135,55,129,233,132,216,10,232,197,114,225,28,187,63,65,34,187,160,44,223,26,210,140,2,78,176,74,204,206,126,73,230,190,55,128,2,248,197,135,170,88,28,238,217,156,181,81,58,230,170,108,250,128,213,243,4,240,162,142,113,113,176,214,183 };
    byte_vec_t pk { 4,237,229,251,69,151,213,32,255,56,221,98,245,223,219,194,193,103,101,195,203,167,107,235,130,232,65,246,37,180,68,43,150,64,182,178,62,235,238,133,44,118,43,226,50,149,2,122,34,36,102,255,77,108,30,129,157,101,16,157,42,243,111,208,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 300 ") {
    byte_vec_t msg { 169,196,70,66 };
    byte_vec_t sig { 65,58,102,177,241,61,129,90,254,123,205,185,18,107,116,128,1,77,136,31,61,156,234,86,101,70,106,91,112,104,226,44,173,130,77,94,125,101,38,22,228,78,63,5,151,220,109,117,99,243,53,179,252,154,109,56,239,160,146,149,83,184,134,75 };
    byte_vec_t pk { 2,247,52,100,177,153,125,247,112,163,193,146,14,122,1,250,96,157,88,58,34,39,113,29,69,193,152,162,242,236,47,100,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 300 ") {
    byte_vec_t msg { 136,203,0,90 };
    byte_vec_t sig { 209,47,15,135,59,18,171,236,99,225,45,29,119,153,71,79,217,48,91,216,252,103,13,45,120,212,22,193,168,230,120,16,183,255,167,60,51,174,138,187,241,13,87,47,133,182,181,91,36,121,57,230,239,211,115,194,3,10,123,141,0,107,255,42 };
    byte_vec_t pk { 2,66,5,6,143,240,129,182,164,82,131,34,31,74,30,172,235,78,72,203,247,30,249,237,153,227,209,4,109,63,143,89,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 301 ") {
    byte_vec_t msg { 226,129,140,184 };
    byte_vec_t sig { 204,193,131,75,200,35,0,101,12,241,155,62,67,83,55,214,24,208,228,76,132,157,52,85,5,56,0,255,193,140,114,185,131,64,64,215,84,209,232,40,234,111,23,211,76,137,72,30,250,209,72,181,252,26,217,91,71,91,95,24,134,69,51,72 };
    byte_vec_t pk { 4,13,176,170,142,55,152,12,32,168,167,14,114,152,171,193,91,250,178,53,224,32,148,55,199,43,120,238,142,103,168,119,214,143,191,50,206,147,91,198,166,199,113,173,191,1,174,168,57,47,149,38,26,242,90,185,215,99,190,54,6,234,187,191,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 301 ") {
    byte_vec_t msg { 42,204,182,102 };
    byte_vec_t sig { 241,196,28,31,74,27,122,251,151,246,30,216,75,93,182,119,114,106,171,235,190,160,162,221,41,228,252,139,201,243,143,172,28,70,128,139,228,142,0,246,156,138,225,35,226,55,196,31,135,8,248,57,72,124,232,242,69,145,250,173,253,73,94,92 };
    byte_vec_t pk { 4,13,175,164,128,188,10,86,101,110,191,81,3,1,110,7,26,100,101,45,85,106,112,48,203,244,252,192,49,59,22,235,213,192,193,10,168,10,9,46,42,241,197,108,154,35,76,150,155,148,91,243,162,86,207,48,5,160,110,114,102,228,128,9,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 301 ") {
    byte_vec_t msg { 85,27,120,245 };
    byte_vec_t sig { 38,250,221,113,248,152,82,62,91,84,35,141,204,202,46,67,163,51,238,184,92,199,175,73,80,159,233,21,114,119,179,211,196,50,149,93,160,243,205,200,194,197,37,144,109,208,189,7,177,131,193,186,191,102,188,229,143,142,69,196,252,134,38,80 };
    byte_vec_t pk { 2,4,252,223,117,60,22,196,137,219,247,241,188,220,219,234,155,12,66,208,189,185,104,36,103,97,142,218,118,36,204,163,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 301 ") {
    byte_vec_t msg { 203,252,40,185 };
    byte_vec_t sig { 190,92,232,35,107,133,226,199,232,140,53,252,204,24,144,58,226,221,46,11,62,147,76,34,194,177,154,227,37,152,53,208,173,229,201,229,11,70,69,33,124,221,245,203,32,196,220,246,89,113,134,105,50,244,245,181,44,236,162,12,232,156,161,166 };
    byte_vec_t pk { 3,5,67,23,68,177,145,25,165,20,200,183,2,43,178,154,212,229,206,171,53,113,104,13,156,34,105,218,225,243,178,88,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 302 ") {
    byte_vec_t msg { 124,28,21,49 };
    byte_vec_t sig { 138,243,122,31,33,155,201,22,141,57,57,245,175,213,190,67,48,115,85,190,254,66,141,119,32,45,176,238,66,41,141,180,38,123,223,86,0,127,243,6,193,174,232,0,66,46,30,201,72,168,175,69,11,80,118,145,164,194,162,140,170,166,165,48 };
    byte_vec_t pk { 4,15,114,185,231,87,185,253,114,23,237,45,233,151,255,180,97,77,116,210,180,71,212,238,69,98,230,143,243,66,93,163,118,133,228,248,116,42,37,43,164,60,14,132,196,196,159,69,237,129,207,73,117,130,198,54,186,234,248,93,155,238,98,54,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 302 ") {
    byte_vec_t msg { 235,170,224,6 };
    byte_vec_t sig { 179,89,68,244,177,74,66,12,129,194,103,206,208,0,98,216,163,119,66,154,186,213,81,173,69,114,220,103,117,119,163,252,110,179,50,40,117,27,5,95,81,16,254,168,229,32,212,168,81,23,199,57,232,235,120,241,77,46,33,97,168,54,38,66 };
    byte_vec_t pk { 4,47,201,54,134,133,11,86,83,194,154,199,8,160,59,125,9,239,219,116,157,244,68,34,230,19,92,234,228,47,18,186,109,146,105,211,197,44,248,71,134,192,79,246,179,155,12,253,87,162,38,17,25,231,154,148,233,176,93,3,117,219,68,28,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 302 ") {
    byte_vec_t msg { 233,121,10,66 };
    byte_vec_t sig { 102,55,99,195,117,198,97,116,112,35,209,29,104,23,118,174,163,32,202,64,104,196,7,49,24,14,44,208,153,252,91,119,167,191,231,157,200,9,62,227,145,143,126,40,215,22,162,224,27,199,232,77,188,204,186,183,124,173,98,156,213,71,104,104 };
    byte_vec_t pk { 2,190,152,57,100,98,113,254,79,26,96,168,174,59,142,149,225,92,51,39,230,77,125,196,118,50,105,226,215,190,44,4,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 302 ") {
    byte_vec_t msg { 53,203,188,178 };
    byte_vec_t sig { 232,109,90,164,72,157,1,193,192,124,189,76,118,57,20,96,224,190,197,2,85,170,187,55,246,118,99,52,149,182,203,47,182,122,63,69,234,68,35,157,26,131,50,255,146,57,77,93,135,212,71,24,91,234,72,198,69,70,207,184,228,62,186,61 };
    byte_vec_t pk { 2,90,90,168,197,27,100,230,175,115,31,99,67,201,143,102,4,98,40,214,11,155,85,207,102,231,94,210,174,120,94,122,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 303 ") {
    byte_vec_t msg { 39,252,5,128 };
    byte_vec_t sig { 233,167,91,83,32,166,172,189,86,87,13,185,198,206,130,37,123,229,193,141,120,105,233,179,6,17,75,202,135,18,161,116,184,104,225,189,125,111,6,211,96,66,91,210,22,166,114,161,174,110,105,154,171,93,146,228,85,15,134,127,58,108,252,62 };
    byte_vec_t pk { 4,167,31,142,24,150,73,55,160,142,218,104,203,126,217,207,51,230,229,215,239,146,238,100,107,17,232,71,238,57,122,175,44,96,155,94,67,95,50,13,143,122,111,75,249,22,42,138,215,199,202,41,227,50,160,207,78,157,74,53,170,123,117,65,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 303 ") {
    byte_vec_t msg { 17,130,139,124 };
    byte_vec_t sig { 200,69,151,169,125,41,78,111,5,94,44,239,45,32,102,177,146,168,200,130,108,229,235,255,87,84,34,133,177,159,216,56,46,147,32,246,199,179,93,197,124,49,147,48,171,193,84,7,178,51,212,74,209,25,238,185,222,101,187,189,9,37,241,242 };
    byte_vec_t pk { 4,37,17,218,122,186,159,241,40,52,217,0,186,120,204,79,88,78,4,32,198,149,4,227,171,44,3,202,176,120,248,183,49,69,86,118,8,254,241,219,238,63,245,102,157,124,122,20,140,172,190,139,255,178,67,161,133,4,47,102,243,123,140,73,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 303 ") {
    byte_vec_t msg { 134,239,253,9 };
    byte_vec_t sig { 72,96,245,60,175,76,225,245,217,200,110,147,48,150,17,175,6,107,23,63,112,97,144,147,82,207,75,152,220,73,207,229,128,201,40,49,58,95,187,71,175,195,170,135,63,127,107,255,74,48,114,72,34,147,206,178,183,9,20,64,17,25,196,45 };
    byte_vec_t pk { 2,27,88,90,101,19,95,145,233,90,86,15,154,125,27,4,23,57,116,254,87,132,45,199,244,92,62,48,19,121,125,124,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 303 ") {
    byte_vec_t msg { 190,121,142,255 };
    byte_vec_t sig { 18,164,224,24,87,213,139,153,128,100,205,139,146,176,208,1,38,242,190,114,209,217,196,15,169,57,71,143,193,91,37,94,163,192,250,17,85,218,61,7,209,161,162,121,3,138,159,139,136,60,192,153,190,22,109,102,45,76,187,216,50,157,46,197 };
    byte_vec_t pk { 3,41,30,197,188,1,223,135,204,236,107,245,240,82,36,200,215,90,136,30,148,3,39,117,8,105,103,91,217,97,243,142,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 304 ") {
    byte_vec_t msg { 164,32,199,192 };
    byte_vec_t sig { 110,14,180,25,230,62,252,112,201,52,247,124,21,185,34,4,172,182,198,151,138,73,102,5,161,115,110,56,184,115,184,123,212,96,130,221,32,250,114,54,204,191,220,109,85,12,105,183,51,185,252,155,119,134,236,24,233,56,112,165,177,196,31,123 };
    byte_vec_t pk { 4,127,129,158,23,168,186,189,70,212,137,210,15,174,58,209,191,214,145,121,196,17,154,157,199,72,239,56,233,184,102,149,41,169,229,147,223,215,43,247,119,148,173,32,254,28,116,92,202,190,98,139,107,198,125,86,33,122,139,70,144,23,10,22,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 304 ") {
    byte_vec_t msg { 57,195,125,116 };
    byte_vec_t sig { 168,91,144,88,17,244,151,107,50,144,21,248,178,22,236,138,73,20,140,229,63,93,98,25,234,40,0,141,139,97,138,132,17,34,184,180,203,107,120,238,187,146,104,29,231,228,181,32,54,195,0,184,254,107,77,255,59,182,18,84,233,161,29,4 };
    byte_vec_t pk { 4,25,155,241,244,47,157,114,63,143,188,98,182,103,113,92,150,74,166,222,68,234,13,19,174,104,73,141,149,199,168,120,242,51,173,157,85,152,167,252,5,165,222,41,244,111,44,222,230,23,188,242,215,243,134,225,34,176,129,65,175,219,209,122,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 304 ") {
    byte_vec_t msg { 167,133,24,124 };
    byte_vec_t sig { 51,149,198,69,51,231,201,114,202,243,9,29,254,22,159,130,96,125,206,54,170,232,5,150,31,31,131,3,65,105,234,221,208,19,198,91,84,241,243,229,253,76,155,99,254,223,207,84,165,251,227,238,19,236,112,162,28,163,46,234,198,219,2,224 };
    byte_vec_t pk { 3,123,248,135,180,147,36,108,125,63,235,119,62,162,67,28,142,255,236,130,23,160,8,191,114,115,14,238,150,163,246,196,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 304 ") {
    byte_vec_t msg { 202,98,159,46 };
    byte_vec_t sig { 32,25,130,161,94,166,116,0,186,54,251,32,52,225,123,66,116,6,97,55,153,213,28,102,107,30,36,243,82,193,105,91,5,177,157,44,20,113,138,54,130,139,48,117,34,51,82,61,220,222,76,217,227,251,251,217,213,115,173,44,184,208,105,211 };
    byte_vec_t pk { 3,24,0,165,29,120,103,162,99,134,167,197,191,175,17,134,241,191,203,217,160,157,134,51,207,93,213,138,101,14,59,119,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 305 ") {
    byte_vec_t msg { 100,115,200,90 };
    byte_vec_t sig { 126,95,117,133,65,226,93,33,43,215,68,71,223,25,144,74,123,166,166,45,145,230,111,26,136,22,65,156,100,154,92,20,239,120,224,160,162,248,236,38,36,35,75,235,243,181,106,26,9,38,58,182,216,219,59,102,200,248,27,96,254,142,201,82 };
    byte_vec_t pk { 4,10,152,243,104,127,65,36,151,90,129,156,255,17,23,215,177,44,174,226,162,240,20,53,53,233,226,6,176,229,94,40,41,129,7,219,5,82,54,215,76,46,104,4,213,132,49,214,205,104,3,42,165,125,21,63,151,63,35,24,9,157,27,55,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 305 ") {
    byte_vec_t msg { 68,191,2,76 };
    byte_vec_t sig { 216,182,26,171,27,244,146,139,107,160,82,189,197,37,180,161,117,227,245,135,48,3,204,142,51,92,71,193,96,241,71,126,119,31,6,98,232,81,45,196,43,135,243,43,31,67,194,203,67,223,149,231,23,64,97,148,113,61,52,147,174,22,91,143 };
    byte_vec_t pk { 4,189,20,89,9,5,19,90,83,102,206,130,201,218,183,127,13,244,115,173,177,163,129,122,119,87,220,128,124,215,160,59,60,67,64,150,222,127,2,141,208,82,234,61,72,130,107,34,165,195,157,196,133,7,44,10,218,224,142,10,163,20,134,176,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 305 ") {
    byte_vec_t msg { 150,220,211,225 };
    byte_vec_t sig { 175,128,196,238,251,103,181,1,140,65,109,102,142,87,142,80,82,127,197,217,164,117,122,52,28,200,97,13,97,214,130,96,235,115,148,229,102,93,72,169,157,14,43,237,214,231,253,166,142,82,51,34,74,106,174,135,168,122,13,161,174,82,204,90 };
    byte_vec_t pk { 2,143,39,179,238,157,16,120,139,168,54,61,254,219,191,205,199,161,107,79,244,79,230,203,96,53,13,185,196,22,26,113,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 305 ") {
    byte_vec_t msg { 253,32,237,49 };
    byte_vec_t sig { 135,221,170,189,21,170,246,97,38,157,238,13,166,206,224,237,2,97,250,24,28,108,82,10,224,189,210,113,220,152,251,229,202,253,71,225,118,224,157,203,75,48,151,46,116,124,202,101,22,75,71,62,80,230,121,84,99,137,24,45,160,173,111,5 };
    byte_vec_t pk { 2,170,13,222,106,99,142,189,231,0,177,37,29,146,168,234,145,229,48,122,90,222,211,16,233,243,114,146,226,135,181,215,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 306 ") {
    byte_vec_t msg { 130,3,172,219 };
    byte_vec_t sig { 33,13,164,18,168,28,192,109,200,192,152,215,103,234,105,250,25,158,133,212,151,93,186,9,101,194,20,225,198,245,76,183,219,185,149,134,192,134,243,199,179,85,79,138,197,11,130,63,211,239,37,8,213,131,180,64,109,133,105,25,201,212,52,110 };
    byte_vec_t pk { 4,231,188,84,243,206,159,11,137,131,191,96,38,114,52,74,6,214,5,154,224,53,50,138,167,81,46,144,89,173,14,202,161,175,195,237,201,79,200,180,200,223,163,57,105,34,182,206,117,107,147,137,103,172,78,243,22,34,218,98,228,109,253,213,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 306 ") {
    byte_vec_t msg { 3,183,149,107 };
    byte_vec_t sig { 90,52,127,20,83,26,122,218,186,234,8,109,32,255,132,86,103,26,45,117,62,192,67,173,81,27,43,41,177,90,196,44,227,232,98,34,6,99,94,193,79,226,100,188,255,130,88,19,130,40,248,55,55,176,114,81,174,10,198,97,164,61,137,217 };
    byte_vec_t pk { 4,235,19,150,91,28,243,86,226,2,43,113,225,215,34,130,252,108,136,192,54,143,2,234,221,175,157,73,193,89,156,3,230,1,65,33,170,198,120,244,240,149,212,3,62,136,1,202,199,143,167,167,14,79,30,178,254,146,146,51,200,30,158,92,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 306 ") {
    byte_vec_t msg { 45,158,168,33 };
    byte_vec_t sig { 86,157,93,119,47,34,109,51,47,48,202,163,133,84,19,87,218,78,144,62,123,117,57,95,255,74,9,53,137,17,202,197,221,23,43,201,73,139,8,58,236,118,61,18,78,37,93,197,9,170,193,200,42,10,39,8,97,88,150,193,90,80,3,230 };
    byte_vec_t pk { 2,159,178,253,122,109,89,199,183,142,131,237,170,34,184,125,177,152,14,23,213,232,247,249,153,103,42,239,92,132,127,19,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 306 ") {
    byte_vec_t msg { 93,229,36,150 };
    byte_vec_t sig { 246,247,117,36,97,207,248,231,151,247,82,236,154,36,232,254,164,40,210,13,243,189,61,13,125,93,245,106,69,174,0,145,67,192,106,142,88,209,94,159,243,146,236,130,196,4,145,168,228,44,252,116,16,91,183,44,185,81,217,250,155,78,252,225 };
    byte_vec_t pk { 2,52,119,233,168,160,241,140,193,35,33,192,105,87,68,84,84,14,37,113,200,245,211,252,204,166,234,54,135,184,232,238,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 307 ") {
    byte_vec_t msg { 60,169,167,183 };
    byte_vec_t sig { 32,125,111,37,244,192,94,170,43,253,52,220,240,87,88,25,20,19,191,200,190,81,71,157,228,168,112,82,63,99,30,214,109,143,157,236,115,22,102,151,227,27,149,133,183,178,69,101,239,4,232,78,138,207,202,119,30,30,199,30,88,82,43,161 };
    byte_vec_t pk { 4,40,102,46,110,149,155,97,144,15,109,50,18,155,128,190,159,118,127,170,208,193,197,101,16,61,30,44,28,52,149,162,89,254,119,174,3,90,70,223,138,192,191,46,1,7,165,229,58,138,130,37,200,208,190,68,37,237,113,187,171,156,91,56,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 307 ") {
    byte_vec_t msg { 98,113,80,98 };
    byte_vec_t sig { 172,203,25,72,208,100,172,108,208,226,93,160,207,64,110,171,19,187,63,195,174,226,239,124,242,103,47,195,161,250,64,196,5,92,208,15,17,73,0,72,142,192,148,67,149,13,233,72,240,16,205,115,8,126,127,159,103,232,176,124,233,244,130,185 };
    byte_vec_t pk { 4,237,218,142,95,105,159,88,199,8,224,73,176,140,26,192,150,186,189,141,98,175,218,232,245,7,39,143,34,10,149,221,86,152,34,240,252,29,192,171,95,125,42,212,82,230,83,181,75,241,150,43,120,127,196,115,143,222,18,231,142,42,238,241,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 307 ") {
    byte_vec_t msg { 233,82,41,66 };
    byte_vec_t sig { 180,39,127,15,208,77,135,1,255,32,152,169,220,193,62,176,42,89,204,252,41,60,193,225,241,253,20,169,221,44,218,85,230,104,14,159,24,193,245,167,159,160,208,87,221,212,218,50,196,57,12,204,72,52,198,103,158,174,2,41,252,147,187,87 };
    byte_vec_t pk { 2,48,122,207,9,85,157,210,60,79,78,35,223,194,198,221,247,50,92,72,20,47,153,115,136,83,116,5,246,4,103,108,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 307 ") {
    byte_vec_t msg { 92,237,42,109 };
    byte_vec_t sig { 64,24,235,154,107,86,158,210,120,199,163,78,213,5,184,169,111,107,165,52,95,78,36,109,80,22,59,200,51,175,219,113,245,142,124,81,149,10,120,77,1,62,108,10,109,122,55,77,51,98,163,90,101,54,113,5,130,169,70,90,130,71,42,77 };
    byte_vec_t pk { 2,116,27,99,64,209,157,89,112,8,144,113,35,108,5,78,219,70,193,205,101,51,83,100,137,197,149,224,60,132,252,9,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 308 ") {
    byte_vec_t msg { 183,61,43,63 };
    byte_vec_t sig { 246,129,219,32,173,148,254,95,129,252,163,113,156,169,103,111,85,111,177,39,105,195,48,71,97,161,153,250,203,26,84,8,102,42,195,222,169,202,84,55,117,19,166,223,251,209,169,115,38,128,237,224,90,231,63,248,22,1,69,87,48,98,184,246 };
    byte_vec_t pk { 4,151,4,221,138,185,126,253,25,12,5,100,205,130,10,107,71,200,155,13,153,77,191,147,11,164,56,190,98,201,124,111,20,255,158,162,163,19,67,216,48,135,7,34,105,16,214,186,14,157,86,211,64,19,44,134,47,162,79,140,10,197,14,22,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 308 ") {
    byte_vec_t msg { 240,136,120,234 };
    byte_vec_t sig { 144,51,20,162,127,238,251,212,210,248,183,222,164,118,39,77,27,100,76,9,134,121,128,172,57,18,230,44,15,45,37,92,96,205,120,202,22,115,225,108,33,144,239,208,93,65,151,148,90,134,74,164,50,193,202,192,192,32,234,111,7,196,179,24 };
    byte_vec_t pk { 4,99,228,161,37,79,129,229,181,3,121,190,95,91,125,213,22,92,70,182,228,229,35,116,248,184,150,80,136,136,123,186,44,114,42,131,36,179,57,36,177,221,220,67,19,17,86,42,5,122,31,29,182,245,233,75,165,170,103,48,237,54,149,217,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 308 ") {
    byte_vec_t msg { 199,41,143,62 };
    byte_vec_t sig { 241,211,11,210,109,121,56,229,172,98,165,241,192,54,145,198,77,203,39,4,23,85,9,99,152,212,22,29,248,59,55,109,68,45,157,130,145,181,120,61,199,226,76,213,72,106,190,189,72,8,159,35,145,64,29,2,184,237,59,148,47,108,220,49 };
    byte_vec_t pk { 3,11,218,118,25,90,186,226,8,138,79,70,71,122,34,133,134,137,95,29,176,35,131,122,136,127,216,1,85,177,12,173,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 308 ") {
    byte_vec_t msg { 106,67,207,241 };
    byte_vec_t sig { 201,31,65,205,131,227,21,0,42,24,119,92,54,165,48,132,80,89,173,88,223,206,18,110,181,220,167,18,206,49,119,202,27,92,122,86,150,35,179,114,21,140,182,114,60,156,178,124,105,100,20,121,63,164,70,119,131,58,14,141,87,119,167,254 };
    byte_vec_t pk { 2,161,219,178,90,72,71,23,49,84,88,87,236,125,95,174,191,148,124,183,128,248,7,193,50,219,18,48,142,187,221,213,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 309 ") {
    byte_vec_t msg { 146,107,119,81 };
    byte_vec_t sig { 32,61,195,76,183,69,113,231,159,97,101,107,151,13,249,237,105,116,186,104,188,3,48,57,218,63,110,71,35,183,134,247,215,146,213,195,184,37,139,14,241,186,236,69,48,207,113,43,133,121,2,139,249,203,139,16,3,228,207,201,119,91,9,2 };
    byte_vec_t pk { 4,221,148,24,175,240,105,198,102,200,158,32,17,10,159,62,10,159,0,111,218,236,104,151,11,254,206,105,47,132,239,145,185,155,189,187,4,152,87,167,162,159,223,241,162,217,167,54,6,104,90,242,189,132,61,112,76,45,182,45,77,238,127,76,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 309 ") {
    byte_vec_t msg { 240,207,211,45 };
    byte_vec_t sig { 11,28,249,171,124,92,84,57,95,242,153,20,142,232,89,217,56,205,51,213,120,86,19,220,18,108,195,95,222,93,128,102,145,223,67,177,164,105,246,39,37,10,180,127,190,102,83,22,117,43,149,34,48,174,233,131,243,133,151,159,216,162,30,119 };
    byte_vec_t pk { 4,52,150,192,42,5,173,219,39,143,181,97,210,42,96,170,111,62,61,156,35,20,25,219,178,216,243,193,205,19,53,79,249,124,200,215,102,37,79,117,146,81,30,193,40,160,32,122,104,16,196,65,56,147,157,174,126,176,119,253,99,33,120,207,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 309 ") {
    byte_vec_t msg { 227,54,35,93 };
    byte_vec_t sig { 142,232,29,238,136,184,51,74,179,224,99,45,210,230,63,220,189,125,240,115,234,73,41,123,199,63,58,216,63,44,139,90,172,112,4,32,120,17,9,24,208,169,130,239,146,247,187,189,244,77,143,56,112,114,238,134,168,148,249,82,250,85,136,48 };
    byte_vec_t pk { 2,66,235,24,246,214,78,207,180,194,153,31,15,209,5,163,18,99,131,131,132,147,236,153,52,197,168,71,165,183,96,95,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 309 ") {
    byte_vec_t msg { 175,49,160,50 };
    byte_vec_t sig { 233,165,73,183,222,141,225,117,56,145,101,155,212,49,36,234,240,59,112,95,126,181,188,69,9,188,86,9,126,30,254,201,201,245,71,248,231,219,163,206,195,118,131,146,87,177,59,245,108,58,216,150,172,160,251,41,103,227,152,42,99,226,1,68 };
    byte_vec_t pk { 2,255,179,205,240,196,48,128,99,153,254,146,149,99,25,217,11,176,213,109,63,78,81,50,246,109,128,42,204,67,152,73,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 310 ") {
    byte_vec_t msg { 182,45,53,143 };
    byte_vec_t sig { 181,133,123,12,225,44,70,3,48,21,138,116,126,86,132,215,149,72,62,185,44,68,196,214,211,28,211,192,223,211,252,251,139,65,53,65,54,229,87,84,16,106,102,10,129,159,84,230,72,76,5,220,134,79,156,204,109,2,244,18,99,41,114,203 };
    byte_vec_t pk { 4,2,197,89,255,191,209,231,188,147,213,136,178,235,54,26,214,6,238,183,62,78,170,139,61,121,1,195,75,42,253,174,112,116,3,232,219,42,142,113,54,211,208,100,186,208,118,92,217,124,87,169,174,105,201,207,81,203,102,129,249,210,136,133,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 310 ") {
    byte_vec_t msg { 125,136,53,186 };
    byte_vec_t sig { 44,206,37,198,22,168,71,203,108,186,20,159,75,200,135,225,174,15,126,136,70,44,168,79,76,69,192,235,112,132,159,0,201,144,161,190,52,170,216,242,174,138,94,58,222,147,79,31,6,40,105,12,127,216,101,164,73,28,242,200,48,108,12,230 };
    byte_vec_t pk { 4,69,255,29,59,188,186,176,17,137,217,193,183,174,215,227,228,42,0,220,108,2,9,228,10,101,233,196,98,160,5,75,59,157,67,180,40,5,123,175,175,31,22,124,253,144,233,153,5,101,96,104,86,140,37,98,145,91,106,36,179,117,53,253,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 310 ") {
    byte_vec_t msg { 226,32,43,208 };
    byte_vec_t sig { 98,0,59,1,125,83,46,97,102,143,43,86,159,214,237,41,109,137,152,231,140,4,41,59,180,29,111,153,239,191,12,48,218,10,211,200,75,188,231,231,14,26,46,110,123,33,22,193,63,2,40,144,155,253,152,204,50,91,219,126,138,122,86,170 };
    byte_vec_t pk { 2,62,242,118,252,148,60,90,179,199,21,56,231,246,117,88,41,215,189,141,198,31,181,30,48,219,123,224,176,61,14,50,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 310 ") {
    byte_vec_t msg { 107,218,152,226 };
    byte_vec_t sig { 77,99,208,41,86,64,33,228,156,153,23,203,77,97,94,3,210,27,70,250,253,77,54,191,247,27,45,98,180,132,129,164,80,193,237,173,228,90,97,166,72,124,166,104,249,148,45,28,137,225,218,125,73,248,58,202,233,238,2,229,199,92,66,212 };
    byte_vec_t pk { 3,218,244,52,30,47,246,224,174,99,69,135,103,39,120,102,81,147,147,3,65,93,223,46,182,5,247,181,126,134,106,170,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 311 ") {
    byte_vec_t msg { 223,6,15,73 };
    byte_vec_t sig { 186,140,254,64,187,131,187,51,200,111,6,9,194,190,153,182,127,49,167,125,132,220,65,133,213,181,158,153,24,5,153,35,80,203,177,218,253,73,117,244,207,240,194,213,123,230,30,6,58,178,246,18,151,75,215,1,93,112,146,52,136,91,68,122 };
    byte_vec_t pk { 4,204,72,24,98,81,77,253,124,202,123,60,137,88,154,99,148,250,155,102,6,223,178,204,150,235,101,128,36,228,92,214,32,84,236,16,61,89,203,186,143,32,13,236,207,161,42,198,106,234,183,150,142,139,205,179,224,158,227,195,231,23,5,74,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 311 ") {
    byte_vec_t msg { 79,129,209,161 };
    byte_vec_t sig { 176,19,188,165,27,202,244,118,184,171,86,47,98,128,74,67,182,228,60,156,29,49,142,218,200,194,114,132,96,127,166,41,237,155,3,188,1,70,50,23,196,114,104,215,206,102,203,197,209,112,215,142,128,97,162,141,233,190,55,52,21,187,56,180 };
    byte_vec_t pk { 4,225,211,59,88,3,79,13,176,171,93,25,63,36,98,226,189,189,107,187,25,246,167,255,197,82,238,79,222,198,70,120,195,215,11,57,160,87,142,170,255,96,182,67,140,20,110,168,80,16,178,209,188,232,103,54,71,181,87,219,62,198,217,223,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 311 ") {
    byte_vec_t msg { 227,21,52,249 };
    byte_vec_t sig { 94,20,45,176,92,65,203,192,61,110,113,147,46,21,45,43,89,246,77,91,108,215,212,71,147,194,102,206,233,3,48,111,174,117,159,183,247,45,39,247,147,161,122,172,37,56,13,29,63,162,51,24,251,121,220,113,160,131,220,220,20,2,229,218 };
    byte_vec_t pk { 3,171,217,187,163,152,188,52,73,158,227,154,156,62,30,191,143,189,162,226,197,35,61,161,158,142,40,127,197,236,82,200,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 311 ") {
    byte_vec_t msg { 181,21,252,207 };
    byte_vec_t sig { 41,36,212,21,14,104,137,191,53,57,79,87,124,182,187,10,129,251,139,131,169,10,171,155,251,24,110,152,100,150,245,224,35,82,86,68,251,72,51,244,231,252,249,64,3,180,14,210,143,38,225,129,34,60,19,230,253,191,159,123,29,24,39,67 };
    byte_vec_t pk { 3,81,99,206,48,149,206,90,87,80,65,244,127,240,91,194,134,39,212,145,101,154,2,90,110,158,102,213,198,75,40,14,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 312 ") {
    byte_vec_t msg { 252,34,160,119 };
    byte_vec_t sig { 241,62,108,7,217,213,4,184,190,145,134,147,98,214,95,165,229,60,67,105,179,244,52,127,48,7,53,215,248,228,220,174,182,111,83,186,228,255,113,132,248,90,180,104,50,78,83,179,56,11,242,98,198,252,166,103,92,192,107,235,123,91,141,227 };
    byte_vec_t pk { 4,196,116,235,16,218,74,22,97,232,123,186,94,0,105,94,102,69,80,98,243,87,244,61,36,176,250,248,175,136,137,238,45,113,192,82,129,198,60,39,183,113,7,195,31,64,24,203,148,177,2,0,231,53,232,86,67,26,98,130,56,210,229,146,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 312 ") {
    byte_vec_t msg { 85,191,126,103 };
    byte_vec_t sig { 89,177,70,162,141,126,33,154,47,141,112,140,108,231,80,76,54,214,147,10,242,209,148,136,75,183,51,83,154,2,235,224,121,246,37,250,160,76,10,254,95,238,37,17,97,44,1,109,22,229,151,79,30,33,234,27,96,147,71,52,70,14,211,182 };
    byte_vec_t pk { 4,62,32,137,109,46,92,28,167,97,109,20,122,250,194,247,222,157,96,135,55,59,27,217,27,111,158,179,215,253,131,93,112,242,168,146,199,131,194,226,93,125,46,131,170,248,59,214,38,81,220,17,46,112,123,160,227,64,216,78,124,148,71,150,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 312 ") {
    byte_vec_t msg { 57,224,179,185 };
    byte_vec_t sig { 144,73,195,148,113,221,49,2,140,247,197,5,237,178,70,150,231,194,225,210,178,30,182,196,175,161,133,240,225,98,72,66,141,104,47,202,104,173,245,238,177,62,8,33,47,57,144,149,36,23,81,161,171,43,221,184,107,27,114,135,67,86,239,132 };
    byte_vec_t pk { 3,125,177,62,212,84,223,45,166,217,130,108,121,237,219,31,73,95,234,175,115,249,66,44,22,55,32,72,187,166,87,3,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 312 ") {
    byte_vec_t msg { 4,154,74,240 };
    byte_vec_t sig { 200,91,192,150,78,30,81,178,214,110,169,83,224,133,216,215,205,23,200,127,230,232,235,15,11,78,101,81,34,187,137,182,132,148,71,98,44,156,4,228,71,248,39,24,130,253,121,71,16,222,205,21,209,31,6,198,242,224,107,251,205,182,248,108 };
    byte_vec_t pk { 2,22,219,169,97,78,225,185,183,189,121,84,180,95,31,153,117,10,184,44,215,214,90,116,69,86,160,163,51,95,217,218,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 313 ") {
    byte_vec_t msg { 35,222,255,34 };
    byte_vec_t sig { 108,1,49,228,165,41,109,140,223,34,36,204,11,250,7,7,177,208,131,28,210,24,194,254,196,88,70,150,243,34,40,0,18,227,186,27,208,22,7,217,221,159,184,254,245,84,142,9,24,156,33,201,52,134,234,120,122,35,86,252,192,38,138,19 };
    byte_vec_t pk { 4,189,226,180,168,77,192,185,175,192,157,43,227,93,20,164,151,157,206,136,23,177,38,156,168,124,112,217,76,246,26,38,38,154,153,118,212,0,37,241,226,19,75,193,207,106,81,120,75,107,29,190,115,91,214,3,46,151,145,125,204,170,101,38,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 313 ") {
    byte_vec_t msg { 244,194,216,41 };
    byte_vec_t sig { 23,229,248,242,76,50,46,29,8,120,184,189,181,244,87,17,100,204,86,65,66,31,71,110,212,239,58,185,59,93,226,140,188,255,75,101,223,183,244,76,42,181,242,27,120,126,136,89,99,32,168,193,70,182,166,3,174,79,229,85,177,54,17,34 };
    byte_vec_t pk { 4,173,175,139,224,52,31,244,126,183,237,81,181,242,95,226,23,15,46,144,31,187,228,35,57,183,112,14,63,224,81,59,99,136,102,148,215,80,182,28,216,160,2,85,164,254,209,1,169,150,138,88,79,158,186,252,208,196,80,101,15,203,124,211,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 313 ") {
    byte_vec_t msg { 127,194,141,164 };
    byte_vec_t sig { 86,71,9,118,112,175,99,231,29,192,168,96,74,101,246,70,178,132,209,111,220,106,135,198,180,19,216,221,139,1,29,195,80,125,29,106,18,1,6,20,155,179,176,107,224,164,83,224,199,36,82,62,62,57,134,25,114,100,253,138,231,48,36,88 };
    byte_vec_t pk { 2,185,242,167,63,29,67,76,177,129,240,101,49,144,124,37,220,0,27,205,118,72,62,130,152,12,38,27,214,252,193,162,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 313 ") {
    byte_vec_t msg { 33,158,43,130 };
    byte_vec_t sig { 2,77,237,33,183,226,145,7,224,171,243,40,161,1,251,106,87,189,96,22,35,116,71,244,167,57,202,197,203,69,235,77,128,147,254,179,124,42,97,9,106,110,37,107,251,86,169,143,107,70,154,247,29,47,20,238,172,74,17,2,89,80,48,249 };
    byte_vec_t pk { 2,98,244,77,69,92,186,190,220,195,172,116,209,99,90,150,72,93,131,139,108,115,184,79,45,130,1,148,216,40,12,26,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 314 ") {
    byte_vec_t msg { 83,229,196,123 };
    byte_vec_t sig { 56,112,60,75,161,218,136,160,51,12,24,206,161,154,90,147,142,9,10,226,130,171,134,11,185,55,52,240,188,132,39,214,66,53,37,209,175,239,150,36,141,158,23,130,164,70,72,238,36,134,232,202,206,247,164,253,250,81,116,27,91,71,221,171 };
    byte_vec_t pk { 4,225,207,70,186,110,181,210,65,190,226,248,65,218,42,40,61,247,216,169,193,148,73,213,24,0,1,146,136,219,198,101,39,157,17,127,148,17,132,33,217,254,211,102,54,243,145,190,68,107,118,161,68,208,37,32,81,153,99,13,152,19,223,29,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 314 ") {
    byte_vec_t msg { 125,247,221,163 };
    byte_vec_t sig { 163,172,205,166,16,70,203,176,166,174,247,120,16,70,71,102,123,226,76,23,57,212,56,208,135,153,133,136,92,84,95,68,29,203,186,188,246,241,148,170,124,166,253,245,196,117,140,106,219,58,125,40,218,143,134,98,147,106,116,252,106,135,200,192 };
    byte_vec_t pk { 4,79,155,44,39,253,167,24,231,140,39,190,179,134,31,164,244,82,24,99,126,75,118,18,22,81,255,149,251,93,175,225,94,145,9,63,216,181,228,161,15,203,128,180,145,77,88,134,11,109,143,152,237,139,121,226,1,212,19,33,69,199,12,120,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 314 ") {
    byte_vec_t msg { 17,197,23,194 };
    byte_vec_t sig { 92,30,241,157,153,59,187,189,63,101,50,184,244,92,154,85,38,227,187,224,42,146,102,65,190,18,178,214,236,206,116,230,153,227,214,200,52,158,41,18,74,154,222,133,70,39,128,151,213,176,179,139,254,195,206,138,162,213,188,44,217,88,114,173 };
    byte_vec_t pk { 2,19,104,233,8,55,143,91,97,35,167,101,201,63,10,164,206,49,201,8,90,69,167,149,226,103,133,18,183,239,197,180,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 314 ") {
    byte_vec_t msg { 45,64,240,166 };
    byte_vec_t sig { 201,72,147,58,90,239,121,229,46,83,255,102,39,24,202,56,156,143,62,41,137,11,95,250,33,38,246,140,174,138,251,50,217,46,196,70,180,207,204,237,252,179,209,69,51,46,214,227,28,32,1,50,95,32,249,254,236,59,170,119,121,15,231,144 };
    byte_vec_t pk { 3,240,219,138,254,83,174,128,120,0,4,199,137,233,202,203,99,195,191,248,21,181,117,196,247,73,58,121,43,169,85,176,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 315 ") {
    byte_vec_t msg { 205,5,248,203 };
    byte_vec_t sig { 33,132,160,198,120,38,249,187,23,84,32,146,100,164,65,69,212,242,174,45,5,52,160,77,35,164,182,54,197,239,153,220,185,192,81,168,215,85,130,65,183,61,68,221,107,187,138,40,161,140,109,119,73,85,251,98,179,234,39,228,219,129,184,243 };
    byte_vec_t pk { 4,145,78,80,90,30,102,3,168,6,212,38,224,116,225,226,68,165,226,4,67,27,253,91,9,152,10,241,203,85,190,43,97,209,122,200,16,120,111,81,27,28,27,245,105,38,97,89,103,128,20,241,49,226,99,235,26,71,101,187,183,97,123,12,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 315 ") {
    byte_vec_t msg { 94,109,193,60 };
    byte_vec_t sig { 250,131,133,9,215,184,113,61,160,100,253,73,222,242,2,171,146,95,130,2,225,51,228,117,218,194,154,94,40,171,181,174,225,58,200,168,101,127,197,170,62,166,2,111,137,97,52,124,184,200,137,139,54,112,135,249,129,242,203,89,145,181,32,73 };
    byte_vec_t pk { 4,235,206,220,58,109,67,114,103,224,119,127,192,177,221,215,201,80,117,69,164,242,125,214,78,13,243,126,210,219,230,178,42,3,171,193,132,79,46,144,57,58,203,187,61,112,27,202,234,21,147,123,92,209,196,51,154,75,103,51,180,108,33,4,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 315 ") {
    byte_vec_t msg { 75,213,229,234 };
    byte_vec_t sig { 162,237,136,123,83,25,154,30,129,244,37,219,251,161,3,31,214,67,47,179,153,36,0,68,154,174,66,159,199,34,125,163,221,80,176,209,184,65,7,206,14,120,115,59,15,53,240,202,102,162,21,75,233,84,128,250,210,247,169,236,137,107,16,42 };
    byte_vec_t pk { 3,203,91,151,200,197,48,60,109,177,149,152,170,6,108,214,150,136,183,151,253,91,28,255,202,125,105,25,169,153,59,77,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 315 ") {
    byte_vec_t msg { 251,173,73,248 };
    byte_vec_t sig { 167,73,91,235,190,163,99,104,246,243,197,249,221,184,248,36,181,78,163,23,24,99,233,252,57,226,76,123,24,177,43,125,42,185,83,55,26,212,245,86,199,164,237,186,207,35,1,126,94,9,104,90,30,22,239,159,9,158,45,73,132,47,57,21 };
    byte_vec_t pk { 3,229,3,188,24,4,189,94,63,193,106,236,226,204,28,89,212,233,86,110,44,64,51,124,240,185,201,100,184,142,202,82,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 316 ") {
    byte_vec_t msg { 190,187,59,189 };
    byte_vec_t sig { 173,143,244,34,156,83,150,109,187,140,10,157,242,44,34,204,6,81,210,248,250,120,185,45,69,244,180,129,28,2,151,121,34,95,185,81,129,180,108,205,197,157,61,55,243,161,55,250,76,218,101,211,226,42,20,244,208,64,61,201,85,191,19,184 };
    byte_vec_t pk { 4,183,110,220,153,1,116,181,52,221,25,44,150,48,47,115,128,190,69,177,99,230,58,211,77,116,230,123,116,136,84,223,20,151,90,151,193,225,178,104,167,50,177,164,226,203,63,95,255,5,21,186,17,199,56,102,149,41,74,244,45,22,36,111,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 316 ") {
    byte_vec_t msg { 115,221,22,130 };
    byte_vec_t sig { 242,44,168,209,218,251,95,27,20,21,9,238,218,40,8,42,207,16,72,191,66,47,95,126,109,215,115,255,25,91,3,177,173,107,221,116,187,15,159,254,79,239,22,41,100,25,174,179,127,167,240,156,78,232,46,13,199,241,26,155,0,157,111,231 };
    byte_vec_t pk { 4,229,170,40,178,55,60,110,109,91,56,68,32,81,244,122,20,112,244,72,100,170,119,157,117,183,165,248,174,137,241,143,129,15,83,107,236,114,193,242,45,129,50,35,232,89,68,205,97,229,73,156,105,239,5,173,102,252,188,233,58,199,54,54,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 316 ") {
    byte_vec_t msg { 65,218,209,106 };
    byte_vec_t sig { 103,254,141,144,148,46,248,253,217,22,173,67,124,117,255,225,74,138,11,141,223,171,179,247,104,177,160,169,44,28,232,220,255,174,5,11,179,205,5,19,207,23,203,241,85,22,186,71,156,32,91,68,138,125,210,203,124,193,138,154,16,209,116,198 };
    byte_vec_t pk { 3,203,115,251,50,171,247,193,100,2,1,109,247,241,183,161,25,15,100,0,147,102,48,37,13,142,86,26,33,80,24,20,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 316 ") {
    byte_vec_t msg { 159,174,160,207 };
    byte_vec_t sig { 127,205,154,100,61,245,48,188,170,210,179,77,26,43,201,115,87,73,243,171,213,128,86,239,98,155,16,89,115,45,77,175,0,127,106,112,235,71,30,163,29,118,115,51,184,103,206,210,68,247,165,241,51,230,153,181,132,167,218,253,197,30,132,91 };
    byte_vec_t pk { 3,246,254,98,23,13,131,203,145,179,226,31,247,47,137,35,245,47,15,139,237,247,208,188,142,178,68,28,235,204,55,207,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 317 ") {
    byte_vec_t msg { 24,240,54,154 };
    byte_vec_t sig { 106,231,12,0,243,214,89,109,30,106,236,151,235,106,94,6,90,180,114,81,11,48,105,242,133,210,174,86,225,111,231,62,100,249,55,65,87,224,76,145,245,193,115,94,239,219,254,22,141,6,11,245,20,250,148,228,96,205,119,97,130,66,221,243 };
    byte_vec_t pk { 4,226,150,93,45,15,43,134,36,67,230,111,125,63,38,144,146,182,79,114,11,163,72,54,31,136,106,185,250,78,61,236,244,239,163,10,63,72,225,179,105,192,45,232,206,232,205,71,159,120,231,37,139,213,163,73,171,119,10,79,77,55,78,35,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 317 ") {
    byte_vec_t msg { 45,223,70,254 };
    byte_vec_t sig { 214,242,181,108,165,15,101,224,112,100,243,171,220,103,231,248,132,131,60,238,72,91,153,188,214,248,111,1,80,171,104,75,77,233,176,51,125,132,47,105,253,45,213,113,156,106,224,234,96,28,248,34,36,94,131,176,203,91,204,25,118,193,118,59 };
    byte_vec_t pk { 4,240,28,239,40,74,196,148,20,29,209,139,71,162,194,146,126,212,154,0,53,216,160,114,99,182,34,66,10,172,43,14,80,143,123,7,1,79,93,53,230,223,135,147,174,12,246,189,58,136,200,231,30,64,93,183,196,67,157,59,79,56,119,185,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 317 ") {
    byte_vec_t msg { 212,206,210,229 };
    byte_vec_t sig { 228,167,75,159,31,61,134,118,77,242,238,32,55,243,9,237,96,225,221,15,26,220,133,211,117,250,49,11,252,134,196,55,234,101,108,253,56,179,108,18,203,11,125,163,67,60,57,173,225,168,154,85,134,163,138,86,81,235,203,35,27,152,159,252 };
    byte_vec_t pk { 2,139,60,128,242,108,165,65,38,22,57,104,211,93,168,214,139,153,203,91,163,56,152,170,22,108,31,37,64,95,105,114,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 317 ") {
    byte_vec_t msg { 56,79,35,103 };
    byte_vec_t sig { 4,252,109,116,90,86,252,245,25,21,80,196,121,238,37,175,127,173,134,110,148,176,52,95,39,138,202,16,188,101,245,49,206,210,120,201,25,44,154,80,232,108,132,66,221,143,162,102,218,56,210,107,42,210,178,46,181,238,184,87,32,171,20,174 };
    byte_vec_t pk { 3,73,159,51,174,176,4,0,48,177,232,128,129,132,148,133,229,90,76,83,108,148,191,170,188,8,48,121,142,14,165,138,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 318 ") {
    byte_vec_t msg { 119,132,224,231 };
    byte_vec_t sig { 3,223,102,34,108,18,193,51,115,10,16,177,186,163,201,30,1,117,246,73,180,149,231,105,139,72,122,161,70,245,231,200,23,239,0,206,185,26,227,24,175,104,11,225,219,7,73,110,88,206,175,207,18,140,173,180,11,36,28,206,135,164,4,39 };
    byte_vec_t pk { 4,138,178,81,144,96,54,87,46,251,109,51,199,79,141,122,37,26,238,65,123,243,150,196,45,235,231,173,28,112,103,25,69,96,17,245,228,43,240,183,88,223,141,186,109,102,7,84,2,80,231,125,55,51,140,0,75,11,182,10,14,90,11,41,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 318 ") {
    byte_vec_t msg { 19,5,14,30 };
    byte_vec_t sig { 228,196,166,124,153,69,177,123,16,162,129,44,159,77,184,139,18,68,46,191,181,126,33,47,135,80,66,135,226,76,213,128,204,27,159,127,20,134,82,135,6,95,197,133,22,178,73,152,10,185,82,235,98,8,242,252,85,81,204,123,124,89,111,149 };
    byte_vec_t pk { 4,241,52,25,218,172,241,200,110,16,187,126,160,143,133,5,27,213,131,11,240,88,182,118,65,79,189,127,128,189,221,130,112,137,24,217,129,8,103,219,80,209,150,241,100,132,199,17,30,116,238,187,43,104,231,144,167,178,161,125,253,237,77,102,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 318 ") {
    byte_vec_t msg { 182,229,97,197 };
    byte_vec_t sig { 211,186,104,49,6,172,223,198,78,59,110,132,158,176,107,232,189,35,59,25,114,47,2,95,147,142,231,92,31,64,227,245,119,55,254,128,196,134,76,84,205,72,57,35,140,31,78,163,117,52,227,114,196,243,227,120,215,27,30,239,183,89,12,204 };
    byte_vec_t pk { 3,169,103,48,234,51,107,243,75,177,28,185,215,196,193,118,215,185,44,199,137,7,125,140,219,175,160,66,29,91,4,100,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 318 ") {
    byte_vec_t msg { 121,67,86,171 };
    byte_vec_t sig { 163,100,239,11,93,219,196,124,8,228,149,137,43,241,94,122,84,5,182,78,78,185,205,242,47,4,209,126,221,79,150,197,244,241,116,180,54,127,56,213,197,56,32,47,105,143,163,124,206,111,99,166,237,244,1,104,113,91,117,111,251,236,244,157 };
    byte_vec_t pk { 2,160,15,239,25,107,217,54,231,31,43,112,212,119,27,121,66,77,122,65,120,227,73,226,154,241,235,211,203,167,138,162,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 319 ") {
    byte_vec_t msg { 243,118,49,241 };
    byte_vec_t sig { 4,48,114,124,188,114,189,102,18,72,169,242,13,6,128,139,254,2,156,200,178,187,84,3,72,160,237,6,194,226,147,7,203,223,242,47,177,3,237,77,201,152,144,219,147,119,119,246,113,223,254,105,185,247,79,205,125,204,46,46,26,216,29,160 };
    byte_vec_t pk { 4,162,141,109,152,79,96,200,223,128,32,131,36,211,190,195,150,142,91,10,131,56,7,154,136,184,105,217,139,68,94,96,187,108,254,251,129,105,126,45,49,31,154,61,162,36,143,68,25,52,192,125,154,99,28,27,142,189,146,63,111,13,108,1,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 319 ") {
    byte_vec_t msg { 220,246,190,4 };
    byte_vec_t sig { 54,123,251,242,29,148,239,48,23,160,208,37,76,20,240,176,113,50,109,193,85,54,237,51,121,192,64,122,51,55,63,206,241,196,23,221,135,27,218,253,140,193,255,167,195,93,87,106,65,46,35,182,195,58,138,171,202,148,79,227,54,94,174,166 };
    byte_vec_t pk { 4,157,119,248,57,168,221,2,171,90,126,178,120,11,198,192,33,10,170,88,196,53,196,218,187,147,20,223,166,49,195,72,138,169,153,115,136,138,180,51,181,139,156,237,79,119,141,138,218,186,192,195,253,14,66,221,131,126,221,128,69,68,83,183,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 319 ") {
    byte_vec_t msg { 240,162,100,211 };
    byte_vec_t sig { 167,40,214,210,13,8,111,203,244,64,163,4,32,182,204,188,119,220,108,139,70,9,151,243,59,201,84,167,114,230,221,168,42,12,255,152,10,32,46,59,238,123,44,92,78,106,99,253,8,159,85,221,63,31,250,161,161,23,100,147,83,16,60,108 };
    byte_vec_t pk { 3,220,136,77,78,201,185,84,210,71,58,146,124,196,189,118,75,114,253,119,220,64,45,211,199,136,240,13,44,67,199,6,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 319 ") {
    byte_vec_t msg { 198,183,31,16 };
    byte_vec_t sig { 77,62,212,105,229,141,170,254,246,223,162,199,223,132,92,246,107,7,112,84,161,208,68,213,113,124,33,102,20,1,187,216,148,186,134,67,210,55,151,121,90,26,56,73,219,183,195,48,253,210,192,62,95,167,128,68,84,199,22,113,139,60,242,231 };
    byte_vec_t pk { 2,203,74,215,78,36,41,102,47,204,228,146,125,255,158,64,128,144,224,28,179,102,0,186,81,162,170,160,145,255,208,148,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 320 ") {
    byte_vec_t msg { 199,222,74,217 };
    byte_vec_t sig { 63,35,115,128,71,193,197,83,88,148,149,44,224,175,84,107,21,51,56,242,207,188,34,45,146,184,18,91,232,28,129,175,213,161,140,154,180,18,69,228,234,23,70,76,246,46,180,212,81,177,98,221,246,9,218,39,206,27,179,31,124,210,243,45 };
    byte_vec_t pk { 4,190,11,9,46,90,188,40,215,115,197,64,28,28,71,224,246,166,139,61,19,159,79,186,142,171,114,239,46,34,57,211,225,212,88,168,36,125,123,235,239,199,46,224,108,102,58,11,92,185,19,105,249,196,227,152,170,213,183,135,132,218,29,209,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 320 ") {
    byte_vec_t msg { 145,113,181,17 };
    byte_vec_t sig { 224,186,181,40,152,205,154,183,237,89,58,158,245,90,42,42,198,144,74,11,137,56,144,39,203,127,116,202,244,89,159,172,157,151,234,208,125,180,204,25,57,0,220,57,190,132,101,78,177,250,25,133,120,149,115,235,25,108,196,29,231,27,66,109 };
    byte_vec_t pk { 4,221,100,97,199,139,40,151,1,111,26,185,60,252,26,232,184,231,197,2,69,137,145,91,182,101,181,36,141,90,152,160,27,188,247,247,199,68,197,51,122,122,218,151,28,187,185,55,43,75,114,88,162,232,93,14,132,52,22,234,125,109,93,210,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 320 ") {
    byte_vec_t msg { 17,16,62,54 };
    byte_vec_t sig { 124,175,218,38,86,252,189,0,236,111,14,42,55,136,184,219,48,93,227,169,180,10,57,227,180,248,242,130,185,30,13,117,61,5,129,44,125,138,62,62,239,127,47,6,42,186,184,128,13,89,73,65,77,45,200,137,197,229,250,219,182,130,51,124 };
    byte_vec_t pk { 2,23,82,131,86,51,247,33,53,226,252,213,208,207,226,66,62,20,161,107,81,195,123,193,78,62,209,22,185,57,169,228,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 320 ") {
    byte_vec_t msg { 154,131,146,224 };
    byte_vec_t sig { 120,54,137,252,249,54,178,169,187,187,157,118,112,229,187,178,115,17,50,150,85,190,239,229,74,7,112,57,14,145,138,219,108,154,13,70,104,35,16,110,205,148,43,211,163,233,31,199,95,48,20,233,38,56,223,76,235,25,92,107,203,148,20,80 };
    byte_vec_t pk { 2,50,170,136,82,193,14,26,11,232,161,94,4,48,200,87,126,164,149,196,26,190,13,215,251,214,41,203,4,151,140,158,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 321 ") {
    byte_vec_t msg { 154,108,233,108 };
    byte_vec_t sig { 188,25,25,41,192,212,194,198,0,181,175,141,194,181,55,134,176,155,176,100,198,0,50,72,35,181,120,14,201,127,201,51,74,149,207,153,204,109,250,191,232,177,119,73,71,154,120,138,163,110,89,209,188,233,50,14,49,246,132,164,70,136,226,90 };
    byte_vec_t pk { 4,134,82,16,11,249,128,51,165,211,58,200,72,237,211,79,157,115,229,33,57,166,145,252,171,23,115,7,152,70,57,67,119,224,247,249,241,82,4,95,21,134,63,189,51,9,49,12,213,191,89,245,218,184,252,50,119,34,130,28,75,173,199,160,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 321 ") {
    byte_vec_t msg { 99,8,215,148 };
    byte_vec_t sig { 211,154,124,135,114,194,2,20,63,158,223,138,61,20,254,37,186,76,250,224,178,246,55,139,1,140,107,27,69,71,10,159,57,202,67,7,219,30,147,26,246,60,151,88,53,178,110,72,219,136,55,248,48,13,251,88,192,20,62,111,91,250,225,68 };
    byte_vec_t pk { 4,81,72,153,177,213,137,215,211,87,209,203,196,200,214,86,226,94,69,82,161,82,200,189,221,67,33,140,237,241,62,164,202,234,46,159,87,116,223,131,39,174,101,199,171,221,51,19,177,24,98,163,154,156,155,39,201,242,173,16,110,85,11,114,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 321 ") {
    byte_vec_t msg { 96,25,203,10 };
    byte_vec_t sig { 55,236,245,135,177,15,238,115,248,175,192,203,129,201,23,225,60,25,2,142,61,13,243,181,11,174,131,21,160,15,5,115,158,82,89,85,43,225,122,228,147,27,40,84,100,85,98,228,118,211,248,215,180,18,111,169,227,16,102,213,108,85,228,105 };
    byte_vec_t pk { 2,250,101,91,73,112,99,94,93,24,72,114,162,139,52,231,48,246,232,244,145,55,244,26,33,57,89,152,85,206,207,176,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 321 ") {
    byte_vec_t msg { 6,117,87,240 };
    byte_vec_t sig { 107,51,122,94,123,81,196,198,53,247,61,191,125,150,8,74,70,100,73,32,23,111,206,209,183,34,39,135,6,48,107,205,152,231,190,92,215,123,109,42,27,132,34,36,12,243,166,109,99,177,188,251,134,158,51,196,214,200,61,172,217,227,60,98 };
    byte_vec_t pk { 3,252,231,159,26,18,13,50,19,120,217,192,70,20,110,134,57,110,44,219,2,70,103,125,172,120,31,114,126,142,106,66,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 322 ") {
    byte_vec_t msg { 182,126,26,152 };
    byte_vec_t sig { 144,75,236,66,111,52,58,29,235,112,1,111,32,224,97,189,114,196,52,160,30,131,39,158,167,91,169,192,12,147,9,235,126,194,97,233,159,126,18,131,239,105,194,140,214,224,12,236,166,191,110,78,194,0,191,180,88,53,141,97,88,123,163,244 };
    byte_vec_t pk { 4,25,222,199,19,105,72,170,103,168,222,155,61,241,88,98,229,139,160,151,172,146,47,215,20,35,198,248,20,26,45,161,5,235,222,198,13,138,123,171,10,86,248,128,244,99,136,251,136,65,173,175,86,7,106,180,51,52,65,39,222,219,231,36,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 322 ") {
    byte_vec_t msg { 236,143,172,34 };
    byte_vec_t sig { 165,44,234,166,111,181,235,1,161,114,182,185,64,85,191,167,207,235,37,127,204,81,250,62,2,149,241,109,180,37,228,156,186,64,84,161,134,151,169,206,96,68,120,70,110,75,122,52,37,143,65,35,164,92,180,212,54,179,42,211,61,243,95,94 };
    byte_vec_t pk { 4,185,96,231,120,41,252,236,21,18,134,39,191,254,56,8,148,229,189,156,124,205,7,100,119,241,47,49,247,248,70,170,212,235,178,91,59,255,83,66,123,250,131,138,244,207,86,142,187,178,94,229,182,143,17,32,16,165,248,142,164,224,15,86,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 322 ") {
    byte_vec_t msg { 167,84,253,138 };
    byte_vec_t sig { 240,157,214,229,151,42,108,16,78,234,211,67,6,250,136,242,15,28,61,196,253,40,87,237,207,112,223,127,0,142,65,90,255,79,44,116,46,240,251,217,245,232,99,143,241,68,208,45,43,83,193,239,235,164,103,116,184,23,54,200,117,167,185,76 };
    byte_vec_t pk { 2,194,220,55,215,99,117,125,125,138,181,131,243,140,236,150,208,59,68,183,234,123,221,128,65,15,202,35,130,40,4,84,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 322 ") {
    byte_vec_t msg { 63,233,38,63 };
    byte_vec_t sig { 242,27,165,161,19,153,232,93,158,228,137,17,135,22,229,148,248,166,217,28,53,4,123,48,175,68,214,234,31,5,51,120,9,76,135,235,66,70,217,32,252,201,245,145,195,87,22,23,176,237,226,249,157,126,45,229,251,66,127,87,107,54,59,174 };
    byte_vec_t pk { 2,189,42,54,200,0,100,168,228,179,69,18,243,198,134,40,212,174,38,76,193,55,148,250,5,108,71,156,223,255,210,31,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 323 ") {
    byte_vec_t msg { 91,36,251,131 };
    byte_vec_t sig { 140,160,86,222,149,6,65,3,183,73,7,92,78,178,210,60,29,14,73,187,4,32,117,215,181,78,82,4,167,57,44,211,214,57,168,61,68,193,223,136,90,34,119,225,153,252,18,41,79,20,192,30,116,63,106,0,174,88,67,52,169,131,130,81 };
    byte_vec_t pk { 4,8,77,202,187,215,18,40,244,15,25,86,13,44,159,105,167,98,95,233,56,112,116,196,52,152,57,197,178,137,242,69,247,210,239,89,57,168,91,69,230,255,218,21,92,129,241,182,47,183,209,189,233,91,239,254,242,89,123,16,103,43,146,28,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 323 ") {
    byte_vec_t msg { 15,240,103,70 };
    byte_vec_t sig { 4,208,230,251,131,110,186,208,43,77,125,28,139,86,20,194,174,245,94,127,166,209,162,71,170,169,164,219,145,37,192,51,145,182,204,242,139,19,222,71,239,8,163,24,114,11,162,164,4,223,199,1,63,145,79,63,93,216,248,119,48,16,107,221 };
    byte_vec_t pk { 4,178,50,32,208,18,159,78,85,135,168,15,37,124,129,232,134,104,141,213,146,53,18,102,146,249,149,175,250,138,82,135,253,139,95,58,60,28,152,164,21,116,73,76,37,240,49,53,15,69,91,164,48,186,252,96,189,111,165,228,46,186,203,110,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 323 ") {
    byte_vec_t msg { 215,163,73,81 };
    byte_vec_t sig { 212,154,213,145,100,70,115,61,201,121,34,145,237,45,36,235,79,27,146,215,5,88,94,20,174,251,195,165,63,57,152,117,5,142,85,207,25,209,249,88,206,154,181,91,50,26,1,11,100,49,133,86,99,26,172,201,218,189,154,232,106,238,115,156 };
    byte_vec_t pk { 3,85,248,106,138,106,84,237,225,38,95,97,134,221,21,53,5,60,72,29,137,184,41,238,9,131,235,233,103,195,125,11,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 323 ") {
    byte_vec_t msg { 95,59,150,90 };
    byte_vec_t sig { 28,28,94,91,194,158,165,153,108,40,48,195,221,35,12,38,74,230,181,250,218,171,94,46,180,41,215,25,121,95,207,119,217,164,151,232,220,1,100,203,71,225,223,163,123,147,250,83,86,218,45,204,187,56,85,72,67,108,69,177,182,79,164,117 };
    byte_vec_t pk { 3,208,33,200,26,156,106,140,211,82,187,78,115,228,148,236,54,73,15,126,159,64,204,241,36,75,226,234,102,72,40,104,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 324 ") {
    byte_vec_t msg { 167,116,189,11 };
    byte_vec_t sig { 252,99,178,216,213,121,145,129,175,203,36,17,120,215,146,74,112,195,162,27,108,104,64,250,144,55,52,253,217,214,65,144,20,96,195,183,159,244,227,130,111,100,222,101,3,1,245,228,207,60,48,119,109,105,225,238,129,175,180,229,109,192,151,195 };
    byte_vec_t pk { 4,65,40,229,76,132,135,41,177,82,67,161,223,179,239,114,36,63,220,149,82,26,66,181,253,220,94,18,32,237,230,55,152,207,177,2,139,101,41,48,97,240,190,195,173,252,47,76,178,93,71,218,235,229,4,125,7,5,198,137,96,188,92,228,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 324 ") {
    byte_vec_t msg { 60,71,205,93 };
    byte_vec_t sig { 244,38,85,76,169,124,211,196,171,110,89,118,194,172,195,14,112,202,195,39,8,125,161,173,96,80,150,186,141,190,209,105,221,44,63,185,210,0,113,230,159,76,253,35,134,73,210,104,239,3,170,2,149,240,68,226,47,2,23,227,234,233,245,219 };
    byte_vec_t pk { 4,36,18,182,17,170,134,124,159,145,180,125,191,36,0,151,168,135,130,11,17,105,177,253,24,106,134,248,247,192,101,84,140,114,220,8,142,13,142,92,105,194,84,189,194,188,37,97,226,78,12,9,10,153,91,64,68,10,160,188,90,147,18,118,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 324 ") {
    byte_vec_t msg { 97,84,211,4 };
    byte_vec_t sig { 85,214,124,18,156,23,132,228,12,88,44,123,26,0,35,210,245,176,128,134,18,29,21,215,232,29,1,66,216,230,136,235,136,189,221,218,233,240,83,185,71,144,37,147,68,120,237,65,85,30,216,6,126,230,2,99,178,178,35,5,95,116,194,44 };
    byte_vec_t pk { 2,163,104,169,134,186,237,37,228,113,8,171,45,182,19,68,50,173,95,104,58,222,146,81,204,181,64,15,8,158,54,72,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 324 ") {
    byte_vec_t msg { 104,198,151,175 };
    byte_vec_t sig { 249,135,163,46,145,210,205,123,215,180,174,35,137,125,8,105,194,130,181,2,85,89,174,252,206,107,150,13,223,156,111,61,69,159,204,122,147,189,78,130,172,98,121,146,158,176,171,249,52,26,181,207,248,14,176,218,210,203,171,40,156,185,35,40 };
    byte_vec_t pk { 3,47,129,222,181,212,44,42,238,207,153,37,34,10,14,88,82,177,21,139,91,60,49,180,178,162,246,84,135,79,6,168,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 325 ") {
    byte_vec_t msg { 90,230,27,233 };
    byte_vec_t sig { 73,196,222,245,158,185,2,245,74,136,39,156,10,226,46,130,207,158,102,177,197,109,177,29,213,51,150,163,75,244,175,97,242,113,136,69,14,15,239,157,142,104,144,106,230,39,40,7,152,244,66,209,127,222,226,170,83,195,134,245,226,190,14,228 };
    byte_vec_t pk { 4,55,78,78,140,117,43,196,26,35,1,175,114,149,69,136,81,205,205,247,26,245,248,174,215,147,91,243,106,29,213,96,27,196,102,121,57,124,236,228,20,241,23,153,218,198,50,85,225,220,131,167,253,22,99,135,148,110,139,218,247,116,38,89,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 325 ") {
    byte_vec_t msg { 71,82,145,107 };
    byte_vec_t sig { 215,125,232,246,237,228,122,30,18,42,194,8,71,236,6,43,124,79,185,249,21,46,224,204,221,196,151,173,85,38,10,59,105,241,196,202,160,106,142,151,250,89,13,143,152,19,111,213,115,103,134,203,183,55,48,126,198,108,180,33,73,187,31,203 };
    byte_vec_t pk { 4,222,80,130,97,143,78,239,138,37,243,122,64,192,173,164,233,107,238,68,174,27,80,183,189,86,28,149,45,115,16,234,138,12,173,161,236,25,57,172,156,187,29,230,151,45,172,114,27,204,247,234,0,23,221,7,174,37,212,113,247,79,19,217,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 325 ") {
    byte_vec_t msg { 127,232,234,30 };
    byte_vec_t sig { 62,173,23,157,216,77,100,2,34,31,35,81,16,111,201,4,60,209,80,20,20,78,20,162,255,229,199,100,104,28,226,56,225,20,235,154,18,119,123,217,211,238,87,148,158,38,149,6,86,178,8,158,43,125,5,19,135,130,160,51,180,126,125,147 };
    byte_vec_t pk { 3,212,229,6,33,1,97,147,107,218,206,246,81,52,76,219,165,87,78,115,148,215,227,184,188,219,191,242,255,138,5,137,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 325 ") {
    byte_vec_t msg { 114,88,126,116 };
    byte_vec_t sig { 208,252,152,139,230,200,238,227,2,220,163,167,99,126,167,200,6,10,122,126,234,37,185,162,52,123,164,50,163,111,222,228,24,51,208,1,134,88,145,202,240,28,243,0,165,40,153,49,29,250,226,11,171,62,79,222,220,34,19,199,225,31,243,149 };
    byte_vec_t pk { 2,125,168,41,188,170,195,220,228,20,210,57,138,132,119,196,47,13,114,64,248,65,24,113,218,45,117,254,65,213,177,35,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 326 ") {
    byte_vec_t msg { 150,99,25,180 };
    byte_vec_t sig { 156,177,10,183,138,162,26,20,249,153,252,2,166,51,51,171,253,9,38,63,42,170,114,176,236,151,36,138,244,130,186,35,53,146,141,1,125,163,194,108,3,18,65,144,231,68,72,69,168,249,111,36,35,158,23,101,189,176,123,168,129,64,162,69 };
    byte_vec_t pk { 4,179,195,65,177,52,18,53,236,189,57,43,60,176,246,246,23,114,212,0,123,121,157,56,12,41,104,39,215,105,17,76,106,58,26,230,12,187,70,163,102,126,166,185,185,6,98,70,125,149,211,132,27,88,230,149,243,38,218,146,191,252,129,101,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 326 ") {
    byte_vec_t msg { 208,59,68,137 };
    byte_vec_t sig { 8,108,80,221,167,182,26,37,117,108,248,219,137,200,159,0,246,121,66,201,251,41,47,14,91,222,21,126,136,147,52,254,101,195,198,74,221,242,59,206,239,159,109,97,101,180,5,97,96,141,166,52,215,203,117,163,246,81,142,39,69,132,55,217 };
    byte_vec_t pk { 4,126,160,165,234,176,160,30,244,73,92,107,207,251,92,80,178,218,225,107,28,175,145,143,67,100,146,129,34,77,106,93,75,238,136,148,166,134,156,141,152,14,56,164,41,164,93,180,206,164,208,223,179,199,40,128,141,25,197,48,2,10,247,254,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 326 ") {
    byte_vec_t msg { 196,156,152,135 };
    byte_vec_t sig { 50,170,148,209,181,21,63,32,153,210,191,139,32,69,66,55,118,74,38,85,27,218,69,63,133,158,92,67,101,124,57,113,233,243,86,86,245,103,35,91,126,130,214,178,59,232,146,121,228,13,225,234,2,64,242,13,174,182,245,251,236,36,39,108 };
    byte_vec_t pk { 2,242,32,47,22,146,161,120,231,8,232,208,139,130,123,223,139,186,150,93,80,48,171,78,132,176,74,78,235,182,75,166,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 326 ") {
    byte_vec_t msg { 13,212,41,20 };
    byte_vec_t sig { 90,161,22,78,242,216,238,97,238,29,60,238,117,187,236,204,89,234,89,28,63,209,234,174,245,140,205,88,7,89,175,85,117,173,184,136,141,108,78,116,235,182,138,150,120,50,153,215,20,49,165,102,171,199,29,81,202,19,187,75,57,21,219,228 };
    byte_vec_t pk { 2,128,198,104,144,231,220,165,90,38,124,151,185,48,191,159,42,163,93,143,199,19,237,114,66,43,177,70,174,184,10,111,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 327 ") {
    byte_vec_t msg { 147,85,234,214 };
    byte_vec_t sig { 137,62,229,186,251,66,200,167,188,0,34,86,135,243,25,43,83,251,251,162,21,158,120,2,140,21,31,51,186,9,240,100,92,114,89,221,74,42,49,221,203,158,214,60,84,56,182,153,191,184,61,179,55,186,48,230,120,193,143,40,220,45,206,87 };
    byte_vec_t pk { 4,158,180,27,152,205,248,60,204,199,1,191,112,241,242,126,188,176,82,115,124,12,164,235,92,167,136,255,49,190,252,165,145,220,207,10,221,20,154,22,160,60,241,0,43,255,251,45,239,240,192,94,241,119,206,83,8,10,37,247,99,232,101,119,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 327 ") {
    byte_vec_t msg { 73,54,76,126 };
    byte_vec_t sig { 136,1,86,172,60,221,27,70,93,117,83,134,7,236,76,171,75,1,254,48,229,56,99,11,169,113,137,240,16,107,126,126,235,239,156,148,63,234,168,187,122,76,186,40,106,17,147,118,26,231,106,56,122,203,202,179,207,97,104,17,96,42,193,65 };
    byte_vec_t pk { 4,130,88,200,42,2,160,254,229,177,165,237,249,84,158,55,169,18,57,225,107,73,32,170,239,247,225,71,197,81,83,91,18,36,21,248,124,120,28,31,189,92,76,41,237,104,41,203,29,149,209,72,80,163,191,123,154,71,206,142,40,51,240,118,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 327 ") {
    byte_vec_t msg { 5,18,100,251 };
    byte_vec_t sig { 52,53,222,239,189,20,95,78,73,223,29,111,63,10,91,0,236,128,130,141,76,52,135,239,253,138,106,190,41,251,193,184,81,210,44,197,104,88,105,38,211,25,131,202,99,147,235,86,124,246,153,191,137,221,116,1,233,16,238,107,230,132,124,239 };
    byte_vec_t pk { 3,156,81,33,124,90,228,35,113,170,118,104,10,226,203,32,169,179,105,206,148,47,55,10,239,214,254,11,241,218,35,196,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 327 ") {
    byte_vec_t msg { 173,33,181,237 };
    byte_vec_t sig { 104,117,79,1,148,139,93,119,104,28,176,206,219,57,160,12,47,149,190,153,151,60,121,121,136,238,105,199,35,90,6,213,196,55,12,234,241,60,222,2,232,89,224,85,52,21,234,147,44,13,137,209,10,135,28,169,79,225,218,211,136,45,82,139 };
    byte_vec_t pk { 2,157,14,2,62,71,34,95,209,14,44,209,187,7,202,33,241,108,203,144,92,118,166,193,30,192,237,237,131,108,7,198,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 328 ") {
    byte_vec_t msg { 224,27,120,246 };
    byte_vec_t sig { 192,25,41,17,246,28,244,44,46,159,72,168,50,165,45,191,161,191,244,70,201,13,57,175,252,71,222,24,71,44,72,40,65,147,103,243,240,115,200,97,73,145,171,201,95,215,131,158,79,244,26,168,32,147,82,211,47,147,177,209,81,153,21,209 };
    byte_vec_t pk { 4,114,189,51,59,138,37,174,107,215,194,122,67,247,228,142,144,23,197,142,96,10,249,104,250,13,220,140,99,123,172,106,243,46,248,101,85,180,7,143,109,97,214,250,92,27,174,14,143,38,154,69,112,139,244,242,55,78,113,233,3,147,47,87,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 328 ") {
    byte_vec_t msg { 34,50,24,108 };
    byte_vec_t sig { 137,159,181,164,232,186,219,198,203,27,113,104,104,25,244,142,8,186,156,124,188,196,72,91,215,10,26,209,192,23,213,14,215,141,33,41,235,87,39,144,16,93,177,183,208,214,62,150,173,253,48,214,184,94,189,129,241,243,47,210,29,73,197,6 };
    byte_vec_t pk { 4,175,132,159,32,182,198,126,104,187,207,14,191,244,172,183,4,78,179,49,82,242,26,138,15,1,156,60,116,121,72,186,180,182,100,148,203,193,246,239,27,15,132,9,128,63,57,41,220,199,233,214,9,34,159,244,216,58,241,7,239,225,187,200,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 328 ") {
    byte_vec_t msg { 20,254,176,83 };
    byte_vec_t sig { 214,188,231,176,212,51,139,250,252,51,57,147,68,32,100,247,11,166,49,14,24,34,79,210,119,20,2,212,45,6,43,117,154,33,10,230,90,29,253,24,172,86,25,166,200,95,242,170,52,47,49,251,17,194,142,4,18,202,96,125,201,228,137,191 };
    byte_vec_t pk { 2,217,253,80,212,38,92,175,175,145,146,61,80,70,70,54,37,138,225,17,231,168,63,18,90,211,158,97,193,56,208,98,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 328 ") {
    byte_vec_t msg { 11,196,32,73 };
    byte_vec_t sig { 113,231,52,245,210,31,128,38,117,89,160,98,141,90,87,243,51,202,192,83,229,70,223,141,67,94,195,224,237,124,80,44,57,124,248,211,22,201,56,106,251,90,67,238,48,109,39,50,238,143,69,179,252,249,27,178,233,244,200,213,243,92,146,240 };
    byte_vec_t pk { 2,74,103,40,104,141,198,3,214,196,1,133,220,181,138,75,167,240,170,189,222,56,143,1,170,130,224,194,38,160,108,107,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 329 ") {
    byte_vec_t msg { 97,141,51,125 };
    byte_vec_t sig { 144,171,250,174,114,163,89,87,206,164,13,171,194,153,251,203,181,255,229,25,82,130,142,153,51,124,71,244,24,163,49,66,75,205,111,204,215,201,184,125,157,242,128,172,21,142,130,9,53,250,250,86,151,69,81,231,61,218,216,78,222,180,46,236 };
    byte_vec_t pk { 4,32,51,166,144,178,81,178,29,200,13,150,1,133,58,34,125,193,252,242,30,200,248,186,178,226,223,91,213,47,135,192,142,173,4,39,115,65,215,69,135,29,254,227,67,149,37,61,180,165,79,188,48,12,252,205,192,133,147,11,114,143,212,14,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 329 ") {
    byte_vec_t msg { 209,120,193,8 };
    byte_vec_t sig { 74,120,28,236,98,32,160,121,202,148,205,45,104,56,209,253,61,136,168,177,14,6,148,145,142,160,160,92,27,25,155,191,103,119,140,233,29,178,176,253,203,82,38,242,32,97,135,152,220,30,4,164,125,51,52,65,119,158,155,199,55,133,62,140 };
    byte_vec_t pk { 4,48,27,254,124,223,7,210,107,52,13,18,177,111,138,175,120,60,138,235,49,210,203,221,62,207,45,238,35,69,182,114,166,219,178,111,91,198,57,109,71,231,81,31,123,40,68,61,228,123,252,22,16,105,133,14,173,103,24,205,182,224,184,105,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 329 ") {
    byte_vec_t msg { 210,244,168,111 };
    byte_vec_t sig { 104,43,29,71,206,162,230,195,7,71,91,123,110,105,190,125,165,59,43,39,222,179,236,75,160,14,89,6,39,115,80,124,224,121,216,65,123,11,196,171,200,167,128,56,30,108,124,48,121,192,163,210,203,117,151,228,243,62,178,149,104,242,201,238 };
    byte_vec_t pk { 2,210,68,6,92,144,107,42,22,11,206,143,131,139,3,204,100,110,232,239,77,205,102,212,224,176,228,28,113,10,150,52,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 329 ") {
    byte_vec_t msg { 51,253,9,225 };
    byte_vec_t sig { 218,141,226,29,127,178,14,84,197,90,125,254,61,205,210,213,162,153,77,135,48,171,174,151,140,27,234,72,28,136,105,248,220,98,193,144,67,172,151,52,233,133,171,113,211,220,149,61,93,99,3,77,233,167,211,181,135,210,114,19,132,111,185,73 };
    byte_vec_t pk { 2,107,236,45,243,210,209,254,104,4,181,84,87,129,101,144,155,103,36,131,124,19,243,17,38,198,10,169,74,173,202,98,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 330 ") {
    byte_vec_t msg { 48,199,233,253 };
    byte_vec_t sig { 199,160,121,45,93,81,78,212,172,221,241,13,237,77,99,215,138,15,96,52,121,156,210,36,7,67,113,207,106,38,237,58,172,242,149,166,123,228,126,82,20,93,49,198,241,192,32,50,254,122,165,100,82,179,124,34,237,83,147,142,96,51,155,190 };
    byte_vec_t pk { 4,205,95,172,246,74,178,251,206,192,222,214,231,114,106,227,193,37,47,18,31,253,74,85,153,173,41,69,156,204,252,240,177,231,102,29,168,91,170,231,121,185,225,233,17,53,104,67,51,40,230,18,155,60,43,63,37,111,245,106,35,122,185,119,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 330 ") {
    byte_vec_t msg { 32,144,144,157 };
    byte_vec_t sig { 117,197,205,151,62,240,168,56,44,177,131,106,165,41,179,190,121,193,155,107,41,76,44,201,247,47,23,254,189,173,43,200,43,137,67,253,172,3,26,86,110,227,22,199,13,6,119,100,120,169,155,140,3,239,245,49,74,19,209,216,167,182,31,136 };
    byte_vec_t pk { 4,236,16,98,39,70,79,166,246,132,1,177,137,126,25,48,96,64,27,70,84,113,205,212,125,119,46,21,104,250,179,138,13,242,149,148,57,223,169,93,32,74,250,168,209,40,189,162,61,34,51,12,163,1,201,161,147,204,217,78,167,174,106,14,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 330 ") {
    byte_vec_t msg { 116,30,125,231 };
    byte_vec_t sig { 3,71,156,162,21,147,61,232,47,127,135,147,183,55,146,222,163,13,160,42,202,3,124,65,83,121,25,193,215,7,126,149,19,221,172,215,130,163,149,234,222,139,123,191,126,153,144,115,202,157,33,230,0,98,216,40,229,132,182,89,13,6,253,130 };
    byte_vec_t pk { 2,128,241,34,237,9,100,50,233,182,129,188,24,168,100,156,179,60,213,17,109,195,80,225,104,70,16,112,199,191,236,31,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 330 ") {
    byte_vec_t msg { 105,158,214,122 };
    byte_vec_t sig { 84,254,165,15,176,223,190,182,112,136,156,130,245,23,33,201,56,249,102,158,200,120,182,103,165,189,148,184,182,218,12,35,105,35,124,131,224,173,57,246,60,172,24,66,42,165,105,19,169,206,248,26,96,152,143,17,198,112,183,81,213,186,164,153 };
    byte_vec_t pk { 2,74,71,74,212,215,18,104,193,71,26,27,176,22,5,133,202,229,43,222,144,53,203,50,80,65,157,111,231,75,53,35,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 331 ") {
    byte_vec_t msg { 196,196,5,107 };
    byte_vec_t sig { 71,177,182,95,1,115,251,63,147,32,168,236,179,92,239,89,23,99,231,135,89,247,218,165,210,187,90,164,73,155,40,85,161,97,59,86,188,187,167,174,230,69,112,113,93,102,50,159,49,226,174,112,241,233,248,207,106,49,75,94,249,129,66,79 };
    byte_vec_t pk { 4,111,75,46,246,169,80,130,250,125,33,145,173,245,51,22,255,140,187,61,223,240,244,166,69,59,78,146,124,187,1,73,22,57,225,108,44,27,134,171,71,209,103,165,41,190,231,82,205,86,85,192,228,68,89,190,109,59,38,208,202,208,59,146,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 331 ") {
    byte_vec_t msg { 196,21,15,81 };
    byte_vec_t sig { 93,156,204,150,19,19,173,179,122,190,244,215,155,90,66,106,142,76,115,188,24,84,108,220,95,13,154,84,149,112,186,19,110,240,157,36,234,153,16,28,100,39,183,183,31,171,45,88,52,180,96,92,96,181,182,40,95,154,28,153,231,234,155,180 };
    byte_vec_t pk { 4,125,41,107,169,128,126,244,177,93,254,248,83,154,196,61,224,149,133,161,28,141,57,88,213,247,73,213,239,205,26,185,135,77,190,114,179,168,190,182,151,6,143,246,66,194,58,35,108,97,194,156,44,65,170,96,82,173,7,73,193,143,242,154,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 331 ") {
    byte_vec_t msg { 63,8,187,76 };
    byte_vec_t sig { 124,32,217,244,102,177,230,169,184,46,201,4,137,163,69,130,96,109,77,116,13,83,181,146,83,220,169,209,92,183,88,101,26,147,197,189,191,57,175,109,242,95,4,33,43,208,176,228,247,147,57,196,21,228,24,17,215,174,8,200,226,177,197,49 };
    byte_vec_t pk { 2,231,159,166,89,237,107,131,173,144,76,185,10,163,216,242,213,238,168,156,64,236,180,246,97,203,27,38,16,228,69,234,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 331 ") {
    byte_vec_t msg { 179,45,174,48 };
    byte_vec_t sig { 77,132,7,100,89,140,131,150,60,5,183,103,26,132,172,56,249,45,216,201,15,200,193,39,85,15,87,136,253,44,147,154,239,93,211,211,125,237,61,206,110,86,8,124,102,217,136,37,171,211,68,248,126,190,255,190,230,255,110,11,193,9,18,140 };
    byte_vec_t pk { 3,130,255,110,194,228,2,196,108,225,129,139,125,61,244,94,174,68,4,58,204,245,142,232,4,124,146,20,184,128,76,135,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 332 ") {
    byte_vec_t msg { 14,149,220,65 };
    byte_vec_t sig { 188,52,76,40,115,111,142,223,51,252,241,173,193,168,95,60,82,190,15,187,42,12,46,119,249,224,112,246,62,28,219,226,146,208,28,31,58,50,40,246,255,12,123,129,82,21,163,20,112,167,85,76,25,223,244,37,36,60,18,190,213,100,17,77 };
    byte_vec_t pk { 4,109,83,8,84,167,79,101,22,148,229,4,188,80,239,195,57,223,224,230,51,9,57,228,69,173,146,5,186,77,93,134,210,199,164,64,141,52,69,130,194,169,166,157,153,2,79,144,133,119,181,155,92,19,25,7,109,52,228,227,72,204,103,179,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 332 ") {
    byte_vec_t msg { 116,40,156,0 };
    byte_vec_t sig { 158,131,151,174,191,200,89,120,132,51,10,229,214,173,135,246,117,73,42,137,136,236,62,176,141,23,252,137,197,205,117,171,200,65,108,158,103,124,255,194,107,48,125,54,97,246,63,102,183,245,227,32,163,54,38,37,37,1,252,218,8,55,207,106 };
    byte_vec_t pk { 4,247,252,132,127,161,196,141,138,228,77,52,132,121,216,135,138,56,187,237,246,175,188,9,96,17,55,197,178,114,73,111,109,245,115,156,199,166,56,213,254,14,96,206,89,216,213,71,0,87,42,214,219,86,112,171,139,120,58,61,61,234,165,96,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 332 ") {
    byte_vec_t msg { 158,60,198,114 };
    byte_vec_t sig { 189,151,100,161,205,180,151,212,120,100,239,248,9,95,18,86,87,44,139,68,167,50,5,200,170,148,158,17,222,75,223,68,236,215,6,112,107,91,198,233,124,200,170,16,159,93,246,110,75,227,158,9,36,134,218,109,162,109,245,5,247,110,29,108 };
    byte_vec_t pk { 3,198,246,189,82,39,223,229,164,79,51,157,14,233,150,180,235,120,1,34,131,44,131,144,199,227,245,110,54,201,111,158,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 332 ") {
    byte_vec_t msg { 184,193,156,243 };
    byte_vec_t sig { 53,28,63,19,106,57,190,250,131,154,48,14,185,188,47,73,164,206,162,136,179,60,184,132,180,0,15,132,134,137,110,160,63,245,230,60,254,219,191,190,102,37,82,174,59,38,216,216,78,109,14,247,100,84,173,223,158,171,13,113,201,198,20,113 };
    byte_vec_t pk { 2,20,97,221,22,155,125,35,69,218,99,62,36,200,68,166,211,189,56,108,183,205,164,47,35,52,33,97,69,91,192,99,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 333 ") {
    byte_vec_t msg { 160,139,114,225 };
    byte_vec_t sig { 145,45,179,0,150,207,58,188,181,131,95,35,29,173,24,56,173,120,220,86,251,196,193,161,86,222,76,190,232,239,64,144,21,125,224,47,9,165,241,203,100,129,147,177,49,18,58,190,54,177,131,69,82,76,144,30,121,189,100,110,248,155,63,23 };
    byte_vec_t pk { 4,48,212,129,59,236,5,136,121,66,162,70,240,172,82,47,140,8,242,65,174,228,192,176,201,40,203,1,159,139,91,112,231,95,192,149,74,254,77,116,125,210,251,6,175,201,188,13,141,136,29,236,226,165,100,181,100,97,51,144,100,131,186,224,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 333 ") {
    byte_vec_t msg { 18,166,156,70 };
    byte_vec_t sig { 134,253,65,69,130,67,159,140,89,144,90,144,83,163,20,120,253,224,126,127,152,189,119,165,42,159,97,201,18,90,167,144,50,254,100,36,146,161,173,44,196,139,237,195,28,164,75,20,170,216,138,48,157,186,35,171,214,228,164,254,123,48,115,44 };
    byte_vec_t pk { 4,112,230,149,186,64,36,67,100,121,45,255,212,94,148,109,199,121,96,251,235,47,57,251,220,128,13,172,250,51,205,186,211,233,39,4,131,34,126,99,242,52,230,4,107,120,200,74,224,172,208,42,130,31,1,22,201,63,220,209,96,160,102,156,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 333 ") {
    byte_vec_t msg { 139,94,42,53 };
    byte_vec_t sig { 97,21,154,58,175,14,35,25,247,175,84,14,214,241,147,75,234,77,71,21,246,0,217,146,180,171,196,112,21,190,71,33,77,116,251,176,190,94,216,207,63,171,68,126,42,163,80,192,55,195,214,211,104,93,43,174,103,3,130,176,32,0,15,194 };
    byte_vec_t pk { 3,86,129,5,220,101,65,16,220,255,51,151,36,129,188,0,189,227,112,21,19,176,0,169,186,9,46,139,194,142,117,43,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 333 ") {
    byte_vec_t msg { 88,244,29,45 };
    byte_vec_t sig { 133,113,129,116,87,243,248,171,190,69,141,214,240,50,170,51,146,223,45,28,148,173,61,205,68,64,97,42,51,140,179,36,197,253,78,9,195,140,93,172,89,31,234,160,32,106,222,155,46,39,94,112,199,199,240,110,161,220,74,136,124,95,207,227 };
    byte_vec_t pk { 3,61,154,3,43,82,146,13,207,22,2,211,56,238,173,17,226,250,242,105,85,17,53,12,94,98,136,208,36,241,234,95,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 334 ") {
    byte_vec_t msg { 220,93,166,240 };
    byte_vec_t sig { 123,204,168,227,160,122,175,194,65,94,203,158,68,154,199,141,196,122,196,188,205,88,208,44,52,145,75,178,73,171,174,200,108,34,97,212,45,50,66,36,101,79,193,238,4,141,228,40,12,143,79,165,77,128,97,38,3,236,150,184,213,118,77,252 };
    byte_vec_t pk { 4,1,92,139,14,100,246,114,46,247,210,3,15,97,231,94,233,135,121,163,88,211,244,170,54,71,0,24,209,95,155,141,121,90,90,174,242,33,108,57,54,192,210,61,222,85,113,247,216,53,244,87,141,160,196,35,206,171,223,4,17,100,82,175,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 334 ") {
    byte_vec_t msg { 30,23,118,14 };
    byte_vec_t sig { 165,197,66,80,101,2,158,224,192,178,183,106,41,43,14,180,251,73,178,222,28,93,103,77,13,156,94,13,246,72,226,109,139,122,89,47,151,203,85,17,14,180,52,116,137,138,156,42,244,95,246,39,171,163,98,150,49,73,80,107,54,12,136,8 };
    byte_vec_t pk { 4,167,4,178,76,202,141,203,69,168,76,246,211,113,98,134,89,98,32,94,115,130,208,80,22,83,125,162,132,195,35,52,252,222,153,50,158,137,24,161,220,7,69,211,150,254,139,69,186,71,125,196,107,134,167,184,135,188,167,182,174,10,126,58,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 334 ") {
    byte_vec_t msg { 18,50,189,77 };
    byte_vec_t sig { 247,214,108,220,175,29,209,218,89,84,213,44,223,236,26,54,25,170,216,167,236,26,133,75,55,144,225,58,14,117,146,31,212,185,186,197,137,43,230,129,68,95,19,142,243,107,81,88,197,140,106,252,249,246,110,243,156,25,222,91,121,213,37,118 };
    byte_vec_t pk { 2,9,3,25,86,124,8,156,196,65,109,132,187,215,216,28,127,230,87,52,29,56,45,169,66,243,224,21,203,221,241,31,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 334 ") {
    byte_vec_t msg { 28,201,219,19 };
    byte_vec_t sig { 139,49,22,55,41,222,211,136,59,11,34,49,41,38,138,170,67,245,191,190,226,30,39,161,228,166,231,231,193,243,52,72,107,199,213,246,192,7,116,190,105,99,126,230,157,220,103,207,208,219,57,146,253,150,182,69,165,88,83,6,36,135,121,107 };
    byte_vec_t pk { 2,157,156,201,34,14,43,80,43,194,45,44,137,156,57,198,38,249,222,15,167,115,227,237,245,248,22,145,112,183,164,132,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 335 ") {
    byte_vec_t msg { 127,80,4,105 };
    byte_vec_t sig { 227,211,241,11,51,240,203,14,54,62,75,142,160,168,214,137,210,157,47,249,102,192,252,140,178,13,11,176,229,54,76,227,188,55,249,5,118,254,253,113,229,243,90,15,77,117,135,212,230,239,97,152,223,177,44,85,123,253,192,1,117,176,37,31 };
    byte_vec_t pk { 4,249,71,149,113,31,158,26,112,73,161,61,88,179,177,77,241,16,249,232,85,75,107,30,247,108,232,29,216,24,61,187,118,89,44,101,1,91,74,218,179,8,75,254,79,113,48,208,181,153,76,35,102,127,152,103,224,212,206,95,180,236,68,101,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 335 ") {
    byte_vec_t msg { 142,32,12,72 };
    byte_vec_t sig { 103,106,188,48,177,3,106,249,245,237,143,26,160,44,161,30,205,122,122,62,29,117,72,68,232,123,200,7,121,122,110,31,44,153,159,20,234,63,55,107,76,230,218,123,169,221,180,28,110,84,253,186,113,186,27,135,253,145,83,76,141,213,55,52 };
    byte_vec_t pk { 4,236,120,143,32,148,66,206,234,56,158,126,239,7,138,175,181,42,115,3,9,19,30,191,18,37,209,56,177,237,173,235,84,65,180,8,193,0,7,15,202,167,171,241,226,25,230,196,211,77,255,141,169,245,249,89,61,34,206,222,48,73,243,4,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 335 ") {
    byte_vec_t msg { 45,27,134,174 };
    byte_vec_t sig { 67,211,219,15,119,166,143,121,93,95,159,178,128,70,216,44,232,113,240,199,124,220,98,227,19,99,246,138,122,35,140,156,139,27,73,160,184,238,88,4,126,25,130,120,184,252,214,134,100,115,92,122,236,58,98,110,128,140,249,72,99,234,200,212 };
    byte_vec_t pk { 2,31,7,211,66,62,76,67,26,128,251,241,75,158,197,218,164,218,139,211,234,221,159,126,218,113,31,0,101,225,95,228,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 335 ") {
    byte_vec_t msg { 101,89,117,100 };
    byte_vec_t sig { 219,123,75,90,221,135,192,205,222,10,162,211,23,183,118,17,130,249,56,136,86,118,193,68,94,178,117,110,174,193,247,238,218,62,139,16,61,250,226,140,218,238,110,44,47,4,87,111,7,219,27,29,229,18,113,148,194,27,37,56,216,199,210,198 };
    byte_vec_t pk { 2,107,54,137,230,101,83,123,60,85,220,155,180,204,252,11,147,195,138,135,203,105,104,128,126,143,166,176,182,0,178,134,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 336 ") {
    byte_vec_t msg { 130,46,247,95 };
    byte_vec_t sig { 69,159,202,159,136,79,171,251,200,38,209,88,87,160,65,152,21,63,186,141,13,154,196,78,96,78,213,34,216,212,82,6,162,105,150,30,236,137,165,246,203,171,62,65,99,251,164,202,69,223,95,234,67,117,149,35,112,93,238,107,47,54,120,195 };
    byte_vec_t pk { 4,145,251,247,165,77,17,219,157,2,231,78,2,185,66,235,190,145,68,3,196,118,29,41,109,142,232,229,194,237,240,175,69,213,122,185,131,248,115,243,158,144,120,211,100,240,35,152,24,143,146,74,177,63,224,197,123,169,49,67,118,173,175,203,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 336 ") {
    byte_vec_t msg { 25,56,121,206 };
    byte_vec_t sig { 67,39,130,101,147,210,7,231,171,218,2,84,153,196,116,144,173,61,218,111,168,123,168,139,206,95,236,197,219,162,229,139,106,151,94,243,98,104,36,75,78,90,16,166,230,218,125,145,101,248,147,89,239,85,161,87,149,149,200,82,194,184,126,60 };
    byte_vec_t pk { 4,242,221,31,219,166,176,163,226,1,73,81,152,17,112,57,103,127,246,191,96,61,233,116,65,82,233,192,190,164,249,183,122,197,219,96,9,209,246,162,47,153,115,158,60,123,87,30,236,54,119,6,246,148,175,91,76,3,148,118,202,3,73,253,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 336 ") {
    byte_vec_t msg { 235,229,176,9 };
    byte_vec_t sig { 19,49,166,255,117,124,27,73,140,131,161,20,81,103,228,110,233,213,203,64,154,40,206,238,165,185,95,196,164,151,240,18,6,133,188,246,171,238,85,205,251,160,250,199,202,212,179,186,15,254,123,151,241,221,186,168,208,249,232,129,161,53,175,97 };
    byte_vec_t pk { 2,230,61,237,25,192,207,254,100,160,230,191,153,254,104,176,220,5,153,190,185,126,248,203,157,223,226,138,123,182,118,81,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 336 ") {
    byte_vec_t msg { 116,206,62,242 };
    byte_vec_t sig { 73,230,10,112,142,144,95,28,159,253,112,244,225,92,210,186,170,129,236,211,217,63,196,153,152,101,250,186,158,210,208,40,59,223,216,79,66,200,18,48,47,81,13,229,105,40,91,63,220,31,146,97,83,104,122,134,30,72,64,38,216,208,206,181 };
    byte_vec_t pk { 2,233,63,191,64,55,41,129,67,130,139,162,90,137,159,55,129,67,177,45,77,83,138,103,15,112,252,123,141,96,228,234,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 337 ") {
    byte_vec_t msg { 149,212,17,120 };
    byte_vec_t sig { 176,69,27,31,201,19,229,30,53,51,37,210,95,134,95,54,172,35,147,9,121,171,116,46,122,187,166,190,240,221,129,217,34,196,103,33,52,246,129,217,30,216,35,136,158,27,94,212,240,172,33,168,222,4,131,24,168,19,3,249,202,89,216,45 };
    byte_vec_t pk { 4,239,206,72,148,75,133,171,179,97,249,110,103,1,216,2,230,56,253,252,170,192,50,161,9,248,245,85,112,122,44,55,13,6,217,92,186,83,115,132,190,204,159,189,93,214,238,140,125,195,166,3,200,215,86,174,225,209,15,14,217,101,1,240,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 337 ") {
    byte_vec_t msg { 121,198,150,22 };
    byte_vec_t sig { 157,243,240,148,201,216,110,209,53,4,92,57,81,246,110,233,15,229,174,158,156,50,105,44,222,233,242,237,110,244,22,148,135,121,51,154,131,237,88,160,205,216,15,30,69,16,13,227,208,14,229,18,175,57,131,242,177,11,215,92,242,45,178,63 };
    byte_vec_t pk { 4,98,21,157,34,202,190,29,19,251,125,179,190,111,77,5,234,88,222,168,77,19,244,164,101,8,168,172,172,136,151,25,176,113,134,245,70,59,83,84,134,200,5,185,178,170,164,58,150,187,136,21,181,186,245,62,128,224,128,92,179,7,3,7,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 337 ") {
    byte_vec_t msg { 116,19,223,78 };
    byte_vec_t sig { 161,53,72,246,143,215,200,90,153,199,0,191,27,233,17,199,88,239,93,222,89,106,103,241,22,23,227,94,54,188,57,102,148,169,135,96,227,161,254,188,111,95,137,5,205,161,186,72,14,177,14,57,57,73,159,153,168,142,47,177,72,162,76,214 };
    byte_vec_t pk { 2,25,37,244,76,174,137,230,91,76,82,88,67,230,110,35,118,241,12,179,81,209,145,117,99,153,21,81,178,111,139,146,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 337 ") {
    byte_vec_t msg { 10,251,67,56 };
    byte_vec_t sig { 89,235,98,101,249,20,134,253,122,122,183,66,200,243,249,122,236,148,213,131,218,149,199,197,72,75,64,80,236,247,150,251,243,126,151,132,209,252,235,240,105,66,141,204,243,36,218,21,244,224,204,33,207,208,92,240,9,114,162,137,138,235,32,204 };
    byte_vec_t pk { 3,232,249,229,179,128,251,142,116,250,169,99,79,156,247,76,188,214,250,97,196,31,89,124,199,154,239,91,1,85,104,66,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 338 ") {
    byte_vec_t msg { 145,133,11,237 };
    byte_vec_t sig { 136,203,203,97,235,98,213,198,113,227,195,155,188,185,176,177,153,226,66,207,192,203,248,79,70,199,212,171,173,65,45,173,9,143,74,238,16,71,60,247,201,252,194,33,192,146,176,244,160,93,157,101,169,147,206,8,64,55,183,98,66,76,156,197 };
    byte_vec_t pk { 4,20,192,155,152,15,39,161,89,165,91,112,209,166,239,218,48,87,32,151,165,205,50,168,125,220,134,71,221,108,72,95,22,207,244,230,117,237,111,191,136,101,58,81,11,230,143,202,45,205,87,136,186,171,165,249,162,40,115,222,211,106,196,126,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 338 ") {
    byte_vec_t msg { 9,171,249,12 };
    byte_vec_t sig { 143,97,95,72,209,204,186,83,100,12,170,212,92,195,254,39,6,179,225,28,151,76,126,0,198,171,220,74,179,226,21,181,255,85,175,250,101,185,48,210,247,62,230,228,24,109,126,158,29,196,223,210,248,153,215,170,157,184,22,0,244,212,59,248 };
    byte_vec_t pk { 4,4,56,252,77,103,33,42,229,33,202,149,55,129,190,211,24,40,101,3,93,138,125,198,151,210,206,136,222,115,155,84,108,85,102,51,3,147,87,89,0,230,195,188,145,245,51,50,246,193,103,9,230,73,251,197,175,26,234,29,248,218,192,176,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 338 ") {
    byte_vec_t msg { 125,2,37,91 };
    byte_vec_t sig { 121,72,16,86,21,56,232,124,32,31,182,193,113,34,16,19,117,247,229,178,70,80,21,203,125,208,59,89,9,0,169,50,231,17,236,106,125,109,237,56,113,242,158,178,96,53,227,193,190,166,126,161,82,80,163,3,189,178,214,107,168,245,47,8 };
    byte_vec_t pk { 3,16,32,119,177,9,98,213,60,141,7,54,80,174,90,54,166,124,94,108,197,180,42,60,82,27,150,96,49,172,94,131,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 338 ") {
    byte_vec_t msg { 214,126,219,235 };
    byte_vec_t sig { 36,183,171,167,162,110,119,81,244,25,191,205,36,7,192,115,14,68,107,246,159,33,180,231,128,27,19,71,54,182,50,136,107,93,115,204,180,172,0,1,226,218,58,163,6,245,144,244,163,179,92,62,224,18,140,167,155,138,244,207,55,83,163,81 };
    byte_vec_t pk { 2,156,153,8,41,201,233,215,37,158,177,223,192,66,198,77,67,82,252,34,17,153,138,176,236,99,125,201,166,142,227,166,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 339 ") {
    byte_vec_t msg { 76,195,159,251 };
    byte_vec_t sig { 87,53,29,44,141,76,50,180,207,159,57,143,155,50,177,72,111,85,189,234,60,220,244,60,117,233,147,49,69,166,212,154,138,38,211,66,81,124,189,251,112,33,115,172,20,22,60,97,228,110,164,57,217,165,209,73,114,196,68,118,61,162,71,211 };
    byte_vec_t pk { 4,26,87,71,219,156,134,198,191,240,36,253,162,174,186,203,229,168,154,214,8,169,201,198,178,112,117,252,118,123,3,76,66,89,205,139,185,195,126,141,40,57,81,21,181,210,232,140,127,109,2,36,191,159,171,105,169,91,71,105,208,59,16,205,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 339 ") {
    byte_vec_t msg { 159,41,223,194 };
    byte_vec_t sig { 189,227,57,15,124,231,194,90,111,58,185,81,46,1,127,194,93,17,82,190,38,152,48,129,225,12,253,67,124,182,236,170,143,13,225,14,163,4,17,176,166,235,149,21,247,200,217,234,81,120,11,64,61,239,135,36,109,223,53,182,76,113,237,19 };
    byte_vec_t pk { 4,116,178,160,226,24,113,98,229,220,26,92,42,144,200,14,98,208,12,86,78,66,20,232,21,9,54,24,220,9,152,10,108,127,212,77,138,242,173,54,119,29,138,96,133,168,136,204,140,250,121,204,143,38,116,148,117,118,239,221,233,126,137,134,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 339 ") {
    byte_vec_t msg { 71,61,180,109 };
    byte_vec_t sig { 106,126,44,87,41,58,215,48,228,217,186,182,26,88,29,1,183,164,84,21,170,80,153,186,244,182,240,241,206,23,6,143,214,236,30,193,19,218,175,137,31,235,98,89,73,24,250,171,76,209,102,217,181,59,96,188,126,188,240,2,126,55,82,148 };
    byte_vec_t pk { 2,58,241,71,167,136,208,77,243,138,253,223,63,22,57,192,9,142,128,51,80,143,39,217,211,189,159,146,166,158,199,173,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 339 ") {
    byte_vec_t msg { 115,180,57,199 };
    byte_vec_t sig { 42,107,104,156,201,144,102,19,168,132,249,251,188,111,128,176,63,253,156,196,183,175,83,82,26,76,238,188,89,114,107,13,120,63,119,17,184,95,45,68,105,235,116,207,133,111,140,126,234,143,131,39,235,251,169,101,51,136,171,46,249,123,170,28 };
    byte_vec_t pk { 3,74,167,178,24,116,109,125,227,193,5,130,139,0,213,133,125,150,229,132,235,18,231,148,251,100,36,80,104,161,210,119,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 340 ") {
    byte_vec_t msg { 182,222,252,61 };
    byte_vec_t sig { 184,63,237,36,63,246,54,185,104,120,227,52,205,117,45,212,86,14,41,150,248,69,225,32,110,137,250,108,22,237,33,49,0,203,196,141,92,201,253,145,31,169,23,156,115,70,236,66,97,92,152,87,11,81,52,72,154,92,244,184,201,207,242,113 };
    byte_vec_t pk { 4,143,87,30,3,155,181,102,223,166,251,201,191,126,9,59,32,223,252,238,216,203,79,214,145,4,104,176,49,14,179,197,101,105,49,239,91,57,134,18,173,127,150,174,60,238,120,120,142,179,89,149,153,48,52,44,247,238,82,227,79,48,142,152,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 340 ") {
    byte_vec_t msg { 136,167,83,208 };
    byte_vec_t sig { 67,147,47,237,164,179,212,78,139,244,253,59,62,81,96,5,202,76,12,107,85,37,223,8,42,113,161,233,67,98,88,165,157,160,130,75,16,46,233,31,125,110,190,208,14,140,77,133,42,172,172,33,130,119,195,206,159,34,96,22,209,38,167,101 };
    byte_vec_t pk { 4,33,51,168,162,233,61,29,28,103,30,101,177,55,65,34,195,246,84,184,192,188,10,109,29,125,148,99,222,161,51,140,69,42,115,11,105,231,195,202,221,1,84,121,234,72,64,242,103,2,171,149,82,231,112,150,223,230,167,221,136,175,231,93,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 340 ") {
    byte_vec_t msg { 53,87,209,15 };
    byte_vec_t sig { 30,247,72,142,47,97,116,108,231,126,55,130,193,48,99,55,225,62,116,222,161,34,93,48,61,133,61,147,243,130,199,141,248,219,191,193,108,46,231,169,175,229,77,59,95,101,255,10,255,223,253,194,16,38,192,34,3,29,109,149,124,27,249,178 };
    byte_vec_t pk { 2,237,252,162,4,198,103,224,90,13,251,112,58,60,217,141,123,137,118,200,148,75,171,174,46,237,231,250,76,247,55,7,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 340 ") {
    byte_vec_t msg { 240,101,139,218 };
    byte_vec_t sig { 254,241,95,25,180,26,180,101,9,53,148,230,47,73,108,166,46,17,222,3,89,215,217,126,175,81,252,177,2,185,92,17,200,42,233,206,113,255,68,239,188,188,35,93,95,10,82,186,120,10,207,255,84,115,162,204,83,14,137,104,17,40,246,205 };
    byte_vec_t pk { 3,191,178,167,209,51,165,134,28,97,203,134,219,63,161,29,142,195,121,130,28,210,246,200,247,136,208,253,175,35,244,145,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 341 ") {
    byte_vec_t msg { 108,108,159,67 };
    byte_vec_t sig { 210,199,93,219,24,157,171,65,98,211,72,31,199,23,74,17,81,23,201,151,244,4,58,255,227,189,125,8,195,175,117,67,210,137,162,161,171,165,166,193,157,200,42,176,102,74,253,194,99,147,23,230,176,218,231,59,38,155,35,124,155,230,66,140 };
    byte_vec_t pk { 4,26,249,116,153,48,25,42,234,244,93,16,201,18,88,37,104,148,90,220,173,50,30,165,28,107,57,122,143,143,212,12,97,218,102,94,39,117,178,40,84,100,169,3,239,73,57,200,44,26,222,162,132,253,64,144,146,69,175,160,139,235,225,137,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 341 ") {
    byte_vec_t msg { 17,59,232,226 };
    byte_vec_t sig { 135,188,234,250,83,243,122,104,255,148,102,53,193,29,95,49,129,219,7,254,170,20,109,225,199,187,84,89,124,167,32,126,40,237,59,83,212,213,0,130,99,253,211,184,99,103,71,86,69,189,170,200,238,211,82,229,235,245,73,21,209,70,101,245 };
    byte_vec_t pk { 4,227,140,164,247,170,165,83,24,103,20,12,2,174,146,70,196,9,245,217,79,193,244,136,140,17,42,41,132,228,150,139,23,194,87,106,145,220,86,240,124,81,250,1,5,134,86,180,61,164,42,232,8,146,123,27,221,251,167,145,100,144,215,92,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 341 ") {
    byte_vec_t msg { 190,122,129,117 };
    byte_vec_t sig { 10,9,46,144,11,13,168,148,1,206,77,28,90,102,45,183,241,159,156,38,45,41,100,118,230,42,140,198,129,129,89,92,173,163,184,45,26,106,147,103,33,217,1,83,79,175,165,80,45,123,8,241,60,65,238,203,220,239,252,101,83,122,221,213 };
    byte_vec_t pk { 3,66,222,168,129,255,90,211,130,0,49,252,196,173,38,181,93,38,146,104,162,163,226,28,89,232,74,129,108,230,140,17,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 341 ") {
    byte_vec_t msg { 236,77,16,176 };
    byte_vec_t sig { 104,188,9,36,207,122,110,58,217,167,253,191,180,34,67,254,38,232,187,73,137,116,44,188,50,92,74,196,210,31,24,183,25,59,2,12,111,10,137,77,249,236,188,5,123,187,33,238,76,85,155,239,126,142,15,4,58,252,58,242,208,67,3,109 };
    byte_vec_t pk { 2,175,12,84,196,128,98,82,82,37,124,61,33,207,232,64,58,188,149,250,112,34,42,177,196,91,127,196,69,3,84,112,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 342 ") {
    byte_vec_t msg { 49,122,41,128 };
    byte_vec_t sig { 128,70,42,162,32,206,114,163,7,226,231,115,205,211,209,200,245,21,23,181,104,103,192,45,115,7,184,143,90,86,245,113,107,215,210,103,106,117,225,204,46,61,65,248,255,13,7,191,103,218,212,242,207,70,63,240,176,86,36,61,240,190,219,229 };
    byte_vec_t pk { 4,126,106,227,12,6,139,44,60,183,36,119,33,186,153,70,182,35,84,214,179,102,231,187,214,212,156,0,88,25,49,32,251,177,163,3,53,168,126,194,10,251,111,207,42,236,60,248,203,189,160,88,213,83,58,218,50,128,113,78,154,60,56,68,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 342 ") {
    byte_vec_t msg { 153,167,27,78 };
    byte_vec_t sig { 79,99,98,97,77,249,76,233,30,3,75,127,38,21,50,4,251,47,114,250,155,209,221,52,137,68,144,125,222,163,133,225,72,227,178,30,108,149,80,229,170,234,182,134,64,7,133,241,55,37,225,226,160,165,118,222,93,197,154,163,49,102,83,126 };
    byte_vec_t pk { 4,23,142,25,169,39,185,149,79,27,11,196,64,239,20,132,154,244,25,56,51,73,177,148,162,57,9,70,162,247,208,183,115,124,64,107,243,125,236,101,175,143,111,78,162,71,97,17,248,62,154,81,153,210,87,198,71,140,52,173,65,182,32,209,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 342 ") {
    byte_vec_t msg { 245,154,156,52 };
    byte_vec_t sig { 43,223,79,201,206,33,196,117,132,52,226,118,87,153,205,217,241,152,68,58,21,2,245,192,251,165,75,111,74,101,178,255,209,161,189,18,239,53,168,238,154,145,110,168,121,168,64,28,122,144,99,38,117,24,81,228,18,153,126,179,230,152,86,124 };
    byte_vec_t pk { 2,86,60,62,251,25,20,55,69,114,239,85,158,67,249,9,137,145,173,1,171,123,143,27,88,135,145,230,164,46,123,102,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 342 ") {
    byte_vec_t msg { 230,50,187,124 };
    byte_vec_t sig { 210,81,147,99,194,20,232,152,179,92,96,49,144,145,128,94,33,53,91,167,37,21,72,74,7,160,253,245,145,73,237,255,11,100,38,230,246,31,121,94,109,182,132,143,46,70,225,79,227,57,57,179,194,142,146,193,63,79,243,45,223,134,41,159 };
    byte_vec_t pk { 3,13,162,61,30,34,171,96,66,156,41,136,21,174,145,4,64,243,116,159,147,255,176,248,15,206,83,19,97,16,228,74,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 343 ") {
    byte_vec_t msg { 39,205,40,208 };
    byte_vec_t sig { 188,214,168,7,190,243,196,93,224,74,145,213,107,1,186,50,145,79,89,233,217,104,191,224,116,14,228,55,136,221,197,160,51,215,208,77,76,76,130,49,162,218,63,56,3,151,107,104,245,27,83,55,155,104,152,245,220,88,116,244,246,105,240,181 };
    byte_vec_t pk { 4,126,122,190,23,143,65,11,179,237,241,57,184,146,215,0,75,190,187,159,97,9,206,145,92,213,203,243,77,59,157,44,137,16,14,54,204,221,83,247,224,104,240,152,130,137,41,149,173,121,16,240,214,49,196,243,135,82,247,171,65,136,100,22,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 343 ") {
    byte_vec_t msg { 57,168,38,185 };
    byte_vec_t sig { 22,250,223,194,144,147,34,203,87,226,206,240,9,88,220,127,33,200,208,48,202,37,238,1,245,194,133,142,93,60,56,101,49,42,234,153,65,129,47,254,30,107,255,242,156,98,5,113,29,224,47,156,237,25,134,10,228,89,19,76,227,66,51,246 };
    byte_vec_t pk { 4,109,41,138,11,254,17,155,160,13,218,217,38,190,161,154,222,171,80,74,54,111,18,89,72,128,128,239,26,218,196,16,39,140,180,189,177,191,25,88,56,215,179,1,50,157,7,171,152,123,235,115,11,206,17,70,127,215,3,147,216,21,230,111,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 343 ") {
    byte_vec_t msg { 132,169,38,103 };
    byte_vec_t sig { 138,194,54,133,145,99,169,87,7,219,13,246,185,111,177,223,188,175,253,73,167,123,10,83,181,123,240,46,113,35,138,108,60,132,133,3,1,229,41,141,26,20,205,111,138,92,69,54,175,69,227,47,175,133,245,54,93,37,217,198,117,33,109,90 };
    byte_vec_t pk { 3,193,11,191,151,125,99,154,189,17,33,12,170,49,36,249,35,92,106,206,26,132,74,141,137,153,31,205,23,74,231,80,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 343 ") {
    byte_vec_t msg { 216,15,114,149 };
    byte_vec_t sig { 175,159,135,92,77,52,73,241,126,116,212,139,254,165,3,77,106,22,243,109,226,23,109,139,132,123,119,115,48,188,63,53,185,190,86,178,78,58,75,97,121,106,58,20,118,196,55,234,217,218,221,15,33,142,14,44,132,25,219,24,12,114,96,19 };
    byte_vec_t pk { 3,110,121,103,112,145,136,110,36,35,220,15,23,178,58,16,185,107,8,47,189,223,55,143,170,160,16,173,78,251,65,194,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 344 ") {
    byte_vec_t msg { 178,72,49,19 };
    byte_vec_t sig { 33,191,191,15,118,165,212,164,115,230,250,205,20,204,114,70,230,89,231,55,226,118,231,191,11,222,193,3,66,177,85,219,59,78,226,15,46,0,216,73,249,143,82,17,211,235,35,248,138,24,167,107,120,142,243,252,53,24,111,244,132,37,224,253 };
    byte_vec_t pk { 4,196,176,120,255,70,19,207,111,247,13,63,60,255,108,228,124,117,240,178,74,76,29,185,81,109,55,208,85,96,49,176,219,203,19,249,225,62,157,39,83,236,176,54,247,141,5,52,52,117,224,9,241,91,226,9,187,81,219,216,65,75,54,132,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 344 ") {
    byte_vec_t msg { 130,164,244,164 };
    byte_vec_t sig { 56,47,33,245,9,125,64,179,84,118,193,116,113,101,146,218,117,34,114,167,3,170,99,82,90,186,82,237,7,96,184,162,67,161,117,203,222,186,156,181,219,42,133,229,59,216,102,109,208,90,91,3,17,1,40,180,211,236,234,42,84,213,162,82 };
    byte_vec_t pk { 4,234,240,178,154,93,23,12,95,203,94,235,77,69,211,25,201,177,186,84,172,142,158,177,192,174,98,228,152,93,96,186,78,253,225,100,62,141,185,51,24,127,70,217,111,96,136,68,48,70,106,103,238,37,247,81,25,173,240,93,217,122,18,220,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 344 ") {
    byte_vec_t msg { 81,46,33,91 };
    byte_vec_t sig { 251,203,223,27,49,29,219,45,46,144,178,181,155,254,209,244,244,164,168,27,222,35,239,16,97,188,52,165,0,20,37,75,230,30,178,14,92,95,72,155,109,128,12,205,81,85,197,59,67,225,98,76,133,123,6,18,170,134,171,232,112,118,10,153 };
    byte_vec_t pk { 3,218,162,214,249,238,101,56,30,174,38,66,35,239,227,247,22,228,186,107,243,245,140,186,164,175,138,65,188,176,18,10,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 344 ") {
    byte_vec_t msg { 174,185,237,101 };
    byte_vec_t sig { 91,127,136,173,143,32,184,158,223,130,162,202,206,6,1,150,159,189,201,22,8,81,47,107,79,9,40,75,108,64,252,78,57,54,103,132,53,180,99,127,159,231,103,106,247,161,215,201,36,200,130,185,99,189,94,137,164,84,162,53,241,228,115,196 };
    byte_vec_t pk { 3,220,84,108,238,54,86,251,32,117,98,127,193,36,152,83,108,82,194,235,56,51,71,62,58,169,193,65,67,146,209,31,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 345 ") {
    byte_vec_t msg { 116,124,161,6 };
    byte_vec_t sig { 51,187,5,244,146,32,45,29,194,34,230,245,186,208,100,117,141,120,27,155,104,136,91,121,12,121,185,211,89,186,151,193,138,67,250,5,179,10,218,88,52,132,162,92,0,44,198,185,250,11,84,34,78,170,217,34,112,136,149,165,0,173,224,241 };
    byte_vec_t pk { 4,199,235,137,206,10,57,25,0,217,145,112,4,253,131,159,85,116,22,223,230,108,246,17,141,89,111,242,138,144,148,242,255,39,7,43,239,180,217,79,248,40,246,165,74,126,205,242,143,179,75,153,128,87,29,216,228,51,46,137,95,9,157,248,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 345 ") {
    byte_vec_t msg { 181,150,37,187 };
    byte_vec_t sig { 139,53,117,206,177,132,13,91,181,31,226,190,227,13,89,126,126,117,7,185,152,58,161,222,19,2,112,50,46,158,142,200,97,246,202,120,220,191,90,57,48,124,3,174,230,170,70,200,143,41,182,144,66,129,202,214,47,138,247,26,202,153,40,2 };
    byte_vec_t pk { 4,136,147,213,183,198,242,207,225,227,253,108,248,20,220,252,155,250,250,230,45,10,79,166,120,222,164,176,136,53,217,243,84,238,211,254,34,24,21,180,253,250,237,240,133,25,205,177,4,171,149,127,36,243,194,62,97,24,121,46,126,156,237,88,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 345 ") {
    byte_vec_t msg { 101,148,216,105 };
    byte_vec_t sig { 34,159,46,139,94,175,146,37,138,229,49,208,237,251,61,83,97,35,45,65,80,114,244,254,201,208,7,30,82,191,172,160,206,74,11,91,201,229,51,234,26,161,241,122,71,27,248,86,73,20,47,198,221,122,184,211,92,210,69,95,13,103,251,137 };
    byte_vec_t pk { 3,78,247,94,198,4,216,212,163,214,139,0,70,177,126,191,217,35,159,210,122,139,98,165,56,225,84,96,210,134,134,169,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 345 ") {
    byte_vec_t msg { 32,121,31,6 };
    byte_vec_t sig { 50,240,83,230,250,95,36,27,223,120,13,118,64,224,158,227,126,68,14,211,148,235,248,189,115,222,202,66,75,59,142,7,103,243,129,86,178,151,204,78,73,194,20,41,160,87,29,158,130,231,42,197,64,169,59,10,242,244,182,149,99,2,3,7 };
    byte_vec_t pk { 2,133,92,227,62,35,231,50,240,250,196,230,8,199,203,190,91,148,171,33,171,143,226,116,142,195,223,9,32,155,91,194,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 346 ") {
    byte_vec_t msg { 90,147,181,25 };
    byte_vec_t sig { 61,94,216,39,156,54,230,111,132,137,170,97,25,153,208,252,142,208,79,72,46,8,68,130,23,41,177,193,4,110,205,110,136,174,162,161,165,99,203,223,159,100,37,230,118,222,10,99,119,162,228,91,35,202,23,239,171,241,12,140,121,21,54,210 };
    byte_vec_t pk { 4,249,224,50,111,241,179,125,49,179,46,3,193,38,94,228,74,103,100,152,120,103,242,8,188,82,209,189,95,0,194,30,125,251,24,174,106,10,180,125,167,138,79,242,129,83,211,238,96,65,228,212,143,96,214,18,46,199,202,63,127,130,7,5,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 346 ") {
    byte_vec_t msg { 68,192,6,17 };
    byte_vec_t sig { 171,86,116,238,5,155,153,52,165,116,144,130,196,225,202,230,182,188,78,18,204,48,212,132,192,143,49,119,59,56,199,158,253,216,224,5,141,68,39,252,34,234,101,66,150,3,241,105,31,37,24,150,227,147,92,57,24,224,251,112,70,49,163,32 };
    byte_vec_t pk { 4,130,216,180,38,171,52,253,7,88,171,253,19,142,198,70,247,121,206,226,201,111,186,41,70,12,196,85,36,172,200,89,147,181,247,61,189,75,66,43,47,10,215,76,78,2,205,114,110,204,95,17,84,202,202,221,192,91,32,73,0,25,170,16,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 346 ") {
    byte_vec_t msg { 174,218,75,220 };
    byte_vec_t sig { 32,217,224,162,213,66,224,200,60,18,82,173,236,38,133,127,250,235,93,97,105,170,127,251,147,248,192,50,12,68,199,189,164,173,77,93,156,220,156,11,59,161,121,156,111,65,99,86,184,98,146,96,82,192,103,91,190,213,166,252,39,7,126,194 };
    byte_vec_t pk { 3,64,85,249,132,221,205,121,194,117,198,231,36,232,44,141,142,189,150,90,122,155,84,88,158,180,131,214,217,76,200,211,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 346 ") {
    byte_vec_t msg { 14,251,106,35 };
    byte_vec_t sig { 216,108,134,37,64,216,114,2,155,32,78,40,230,110,184,39,40,55,41,121,16,145,213,3,24,13,19,199,83,135,1,163,116,204,198,19,209,139,232,208,77,26,119,158,76,134,39,109,150,160,203,113,176,17,214,27,64,176,97,165,158,245,246,47 };
    byte_vec_t pk { 2,31,20,10,137,174,92,220,167,26,211,93,167,39,65,254,13,85,200,181,52,59,47,127,89,175,94,230,51,91,236,186,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 347 ") {
    byte_vec_t msg { 118,86,230,75 };
    byte_vec_t sig { 237,185,47,254,126,203,138,50,178,242,105,216,15,52,204,23,118,240,124,21,78,7,85,121,179,81,254,74,245,211,169,106,65,5,82,98,222,50,77,129,155,72,159,204,13,96,214,78,34,170,56,126,172,194,169,97,201,128,196,63,179,172,153,215 };
    byte_vec_t pk { 4,20,56,218,59,15,110,161,137,227,189,170,157,129,169,184,41,198,48,225,120,13,33,238,252,63,169,178,167,238,10,115,145,216,226,48,90,61,47,132,225,254,56,55,182,155,146,142,92,254,178,95,182,134,195,243,51,190,147,124,142,221,2,225,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 347 ") {
    byte_vec_t msg { 242,2,55,245 };
    byte_vec_t sig { 190,205,210,145,115,79,32,220,252,247,105,3,107,223,213,154,218,138,217,201,58,222,52,191,64,31,88,164,231,87,110,98,38,79,56,178,164,17,88,226,251,159,211,87,34,217,145,185,252,139,77,218,89,239,239,211,9,98,92,221,10,228,147,255 };
    byte_vec_t pk { 4,140,132,110,73,227,201,133,108,253,50,93,144,87,162,169,63,127,146,202,51,193,241,13,92,168,60,95,151,0,110,142,86,43,174,122,159,89,119,85,100,47,217,101,70,244,138,84,107,131,50,132,74,80,39,227,88,5,137,138,8,47,154,0,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 347 ") {
    byte_vec_t msg { 229,40,199,252 };
    byte_vec_t sig { 30,177,49,87,164,61,121,22,37,167,144,178,120,150,53,111,74,48,107,250,17,225,78,118,103,240,185,47,41,101,6,23,177,18,57,98,7,96,156,144,99,152,196,1,131,102,101,97,233,53,64,64,217,172,7,55,30,121,171,139,24,47,207,146 };
    byte_vec_t pk { 3,83,110,10,133,93,112,82,80,57,44,224,47,199,113,99,88,8,126,192,224,5,5,14,112,61,34,129,66,105,28,128,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 347 ") {
    byte_vec_t msg { 237,238,168,87 };
    byte_vec_t sig { 130,11,226,155,67,250,88,113,0,50,221,11,109,30,155,69,37,184,53,55,164,152,190,194,141,54,119,40,108,94,24,151,219,237,7,30,35,254,58,170,93,233,150,194,84,109,7,10,203,55,16,8,1,206,79,132,33,48,199,194,14,133,137,120 };
    byte_vec_t pk { 2,160,225,7,24,229,132,38,85,181,127,165,178,63,176,92,202,103,219,241,235,34,182,76,214,191,234,41,63,203,26,222,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 348 ") {
    byte_vec_t msg { 236,36,199,12 };
    byte_vec_t sig { 60,136,77,93,190,10,142,81,115,146,66,25,249,63,167,164,181,104,239,179,24,68,211,216,217,203,30,87,159,139,201,0,190,140,146,211,118,61,240,252,78,102,89,88,153,80,189,250,67,106,12,209,35,186,155,148,42,227,163,162,42,55,196,246 };
    byte_vec_t pk { 4,12,80,34,61,137,231,193,232,87,123,139,18,81,144,42,251,236,81,245,215,6,65,233,55,46,8,43,15,202,85,252,217,18,201,58,108,104,147,127,122,211,42,235,32,90,172,131,116,117,254,181,154,39,139,233,165,131,169,140,56,104,26,111,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 348 ") {
    byte_vec_t msg { 231,230,19,196 };
    byte_vec_t sig { 22,241,106,103,159,176,215,238,169,76,132,134,30,4,13,42,44,72,134,201,91,18,44,135,146,154,214,242,108,44,55,248,205,98,122,22,152,15,194,64,187,153,186,14,180,5,58,9,147,67,155,220,201,168,55,125,63,120,123,105,27,157,116,200 };
    byte_vec_t pk { 4,179,3,212,162,226,238,162,242,255,67,104,200,138,19,139,0,10,20,249,157,51,148,166,58,82,51,246,97,207,201,190,156,81,34,211,219,57,71,254,153,222,118,162,53,37,3,33,72,5,143,161,106,1,77,25,84,171,222,234,100,128,108,105,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 348 ") {
    byte_vec_t msg { 112,128,30,214 };
    byte_vec_t sig { 3,72,51,22,150,14,253,106,42,150,14,2,110,54,102,90,158,133,189,218,4,54,157,255,119,122,119,159,47,227,234,127,188,186,114,33,159,3,139,133,152,75,220,160,165,148,185,42,49,38,171,7,116,6,8,238,225,101,236,32,239,54,220,216 };
    byte_vec_t pk { 2,44,66,244,156,97,234,31,111,25,117,132,129,228,196,169,210,131,44,134,244,246,89,63,151,185,76,104,6,93,48,117,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 348 ") {
    byte_vec_t msg { 189,169,84,104 };
    byte_vec_t sig { 104,203,101,244,5,199,59,57,230,207,4,109,53,241,95,60,32,157,111,96,138,241,56,31,67,55,82,17,203,10,154,85,255,85,231,226,61,104,7,189,186,219,106,111,145,42,104,85,234,138,103,68,147,196,169,116,212,63,161,63,246,9,228,244 };
    byte_vec_t pk { 2,21,169,230,243,25,191,184,59,98,68,230,68,194,75,217,197,216,175,162,162,159,50,160,182,174,181,254,100,138,82,176,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 349 ") {
    byte_vec_t msg { 251,15,184,192 };
    byte_vec_t sig { 179,247,21,243,203,2,64,114,140,200,148,237,27,135,11,216,153,245,106,172,156,143,175,128,210,238,181,233,224,31,26,38,196,173,115,126,236,46,57,29,226,72,207,145,11,243,83,189,241,201,22,238,201,62,245,65,208,78,140,27,31,155,27,117 };
    byte_vec_t pk { 4,247,111,219,94,224,188,148,94,22,104,229,123,53,21,225,162,35,40,220,45,123,65,139,59,177,95,205,1,153,56,20,75,247,166,166,11,36,172,23,182,124,74,15,105,101,81,89,45,4,38,56,97,67,196,211,69,156,191,44,72,141,35,141,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 349 ") {
    byte_vec_t msg { 9,72,18,44 };
    byte_vec_t sig { 218,67,44,178,91,110,156,121,55,233,230,164,63,123,47,218,180,199,111,204,9,145,100,66,82,115,47,152,23,82,131,233,163,171,232,55,40,248,213,42,178,232,95,180,125,197,194,154,101,198,114,158,187,195,90,147,149,51,165,114,249,34,91,228 };
    byte_vec_t pk { 4,9,213,237,208,58,14,63,96,14,185,13,5,207,73,135,208,0,207,188,170,67,48,246,239,84,165,205,50,251,113,36,121,86,27,167,132,88,12,117,222,35,236,30,35,168,1,110,184,97,181,108,39,243,80,234,43,85,222,108,192,58,165,95,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 349 ") {
    byte_vec_t msg { 13,81,47,206 };
    byte_vec_t sig { 80,168,106,199,106,154,214,65,229,132,43,235,80,89,251,62,206,248,185,254,237,251,181,169,69,40,136,3,243,133,117,240,61,240,108,84,199,164,56,120,7,188,34,39,64,41,230,99,198,164,76,151,94,78,165,39,151,7,246,91,44,181,117,1 };
    byte_vec_t pk { 3,178,235,186,47,92,10,69,186,25,148,14,237,2,194,80,84,99,167,122,223,216,53,88,53,254,155,237,176,74,202,195,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 349 ") {
    byte_vec_t msg { 157,222,193,219 };
    byte_vec_t sig { 161,243,196,155,68,127,200,103,238,203,24,140,153,83,184,52,149,246,228,84,212,239,146,203,168,188,234,121,80,127,106,226,245,164,89,126,18,94,19,140,37,229,49,157,181,156,242,69,113,89,228,62,68,7,148,244,61,199,159,169,56,102,15,63 };
    byte_vec_t pk { 2,242,187,199,118,49,146,253,111,28,42,45,198,127,236,233,0,144,21,114,87,161,159,163,148,54,224,170,60,197,23,32,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 350 ") {
    byte_vec_t msg { 83,242,41,169 };
    byte_vec_t sig { 103,212,113,54,59,81,215,164,240,237,214,55,178,41,110,149,79,119,164,56,183,215,46,151,187,84,210,9,210,86,38,33,117,182,130,217,122,70,235,177,253,96,103,77,94,186,110,220,232,75,225,52,69,120,199,22,250,66,80,200,210,108,63,51 };
    byte_vec_t pk { 4,19,187,199,18,32,235,0,0,66,42,204,147,6,159,178,131,115,204,84,175,130,219,103,231,27,230,241,206,39,166,58,253,242,102,101,142,13,171,107,106,94,152,62,94,198,198,225,51,55,61,222,88,62,37,202,175,56,32,175,106,134,209,175,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 350 ") {
    byte_vec_t msg { 63,79,132,203 };
    byte_vec_t sig { 188,207,15,168,127,228,225,12,253,124,92,62,174,24,169,151,201,229,62,189,33,67,94,107,175,95,16,254,114,67,38,117,248,84,25,155,61,67,137,131,97,198,28,75,48,219,237,254,35,70,43,161,18,132,208,176,149,95,196,86,152,181,55,34 };
    byte_vec_t pk { 4,188,132,226,205,192,141,106,219,84,153,240,41,150,105,236,150,170,227,240,85,16,31,151,230,52,95,24,126,222,252,92,216,7,187,194,76,187,255,174,244,132,23,208,171,63,13,212,137,194,228,27,204,137,221,246,217,191,209,228,77,83,223,224,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 350 ") {
    byte_vec_t msg { 11,40,149,63 };
    byte_vec_t sig { 162,60,28,98,149,63,14,172,40,157,60,106,235,37,245,34,171,246,114,73,17,246,190,167,101,71,254,52,10,2,158,243,244,78,204,79,225,228,195,5,240,109,163,34,190,27,66,175,42,180,252,22,76,191,54,75,220,96,167,149,140,95,107,186 };
    byte_vec_t pk { 2,163,228,160,248,150,231,123,195,229,82,181,0,102,212,103,113,48,178,172,243,91,79,14,93,143,235,140,119,4,218,178,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 350 ") {
    byte_vec_t msg { 80,247,124,208 };
    byte_vec_t sig { 194,103,128,138,213,69,59,168,219,83,221,55,158,239,245,137,26,227,241,148,107,118,154,102,34,136,86,199,131,52,140,16,128,9,191,35,113,59,147,229,166,223,105,107,10,63,194,205,110,180,169,108,34,228,188,231,83,38,213,104,161,29,222,89 };
    byte_vec_t pk { 2,173,49,19,38,231,115,172,28,55,101,250,252,33,165,12,253,221,30,99,16,230,132,56,80,87,97,116,176,196,124,14,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 351 ") {
    byte_vec_t msg { 186,248,40,59 };
    byte_vec_t sig { 141,155,41,92,6,54,83,176,118,42,35,89,70,7,39,236,73,94,160,169,145,238,93,77,142,85,165,23,184,106,0,180,53,157,79,189,176,69,46,186,15,179,146,104,141,0,74,233,157,120,26,21,53,134,142,27,134,8,117,247,129,71,10,32 };
    byte_vec_t pk { 4,110,205,91,114,106,122,56,176,95,250,158,122,161,153,6,144,183,147,115,101,237,101,81,11,103,110,38,10,255,84,190,40,185,187,81,228,245,72,103,79,162,151,17,148,51,20,140,176,54,170,120,98,13,105,189,234,55,153,38,156,0,190,66,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 351 ") {
    byte_vec_t msg { 175,56,108,19 };
    byte_vec_t sig { 236,13,164,134,71,175,49,116,210,118,31,243,190,246,87,177,237,62,186,242,74,126,41,108,131,192,234,210,39,187,160,174,151,192,160,39,175,151,121,103,110,8,33,214,123,209,231,245,124,253,125,97,128,7,109,197,248,25,86,41,104,112,233,163 };
    byte_vec_t pk { 4,168,104,136,8,175,190,241,74,168,210,13,126,231,54,86,68,38,60,243,162,210,236,141,77,178,111,177,2,174,138,118,174,179,164,226,33,203,192,226,57,57,170,64,207,180,45,161,187,146,158,114,175,101,134,92,24,175,251,124,211,47,12,25,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 351 ") {
    byte_vec_t msg { 190,163,181,174 };
    byte_vec_t sig { 180,114,49,101,56,26,172,149,28,59,64,70,186,137,20,236,176,115,42,239,5,233,231,31,93,53,209,104,124,61,126,163,180,212,211,154,96,50,98,62,111,147,123,69,83,23,140,87,224,121,200,166,164,163,207,193,168,183,48,20,212,232,168,192 };
    byte_vec_t pk { 3,134,32,179,197,44,189,19,45,243,46,185,117,3,48,128,16,128,63,212,115,140,195,177,178,146,126,158,206,252,51,250,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 351 ") {
    byte_vec_t msg { 216,194,129,221 };
    byte_vec_t sig { 251,141,163,4,242,58,150,102,194,246,179,114,129,96,148,189,250,72,24,39,209,101,11,0,99,184,34,106,75,169,181,226,21,251,20,212,245,56,96,2,179,77,240,35,9,125,45,236,232,165,147,36,255,17,32,222,62,200,69,44,126,163,69,45 };
    byte_vec_t pk { 2,145,124,213,222,126,48,203,178,42,167,146,98,140,36,19,228,192,7,91,149,14,171,104,41,71,61,115,198,85,92,107,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 352 ") {
    byte_vec_t msg { 255,72,253,217 };
    byte_vec_t sig { 185,228,82,183,20,167,14,230,10,103,56,179,200,27,91,40,216,126,250,187,237,145,30,105,235,52,146,190,179,211,24,254,105,176,183,142,24,181,149,33,167,21,173,49,30,192,32,17,70,83,127,238,130,48,183,229,184,222,69,189,5,195,119,75 };
    byte_vec_t pk { 4,165,31,161,77,185,98,123,74,120,41,164,105,153,45,113,166,117,235,238,48,205,210,97,255,18,179,162,138,127,226,251,82,63,153,203,31,191,70,245,174,205,241,80,238,107,191,251,232,236,145,40,93,236,13,67,124,1,107,240,229,214,124,224,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 352 ") {
    byte_vec_t msg { 133,72,88,96 };
    byte_vec_t sig { 165,73,39,74,224,230,173,81,20,45,138,186,248,64,66,110,172,134,60,133,168,40,223,170,223,62,68,76,252,114,90,255,96,92,18,34,62,45,163,200,2,153,121,250,73,73,165,125,88,128,58,120,139,93,8,98,18,113,141,19,17,33,208,235 };
    byte_vec_t pk { 4,198,250,22,168,26,180,194,204,246,142,155,210,142,37,38,177,10,194,206,187,224,19,79,91,92,62,132,22,42,31,127,163,201,57,125,153,76,120,170,253,24,204,177,203,138,136,186,151,179,78,163,87,4,41,143,231,129,105,46,72,220,228,200,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 352 ") {
    byte_vec_t msg { 226,26,87,18 };
    byte_vec_t sig { 61,86,88,88,68,96,92,222,216,159,68,232,191,181,216,8,41,145,67,99,13,79,51,52,187,218,54,175,27,56,104,58,45,53,235,126,99,248,31,240,147,113,210,84,20,137,107,119,32,82,238,225,239,40,92,201,82,211,105,235,122,67,85,12 };
    byte_vec_t pk { 2,167,241,166,213,197,78,253,13,28,172,5,100,112,202,95,188,214,26,107,232,246,183,37,135,211,108,252,195,186,216,103,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 352 ") {
    byte_vec_t msg { 85,99,228,165 };
    byte_vec_t sig { 202,37,194,39,116,60,22,153,164,151,229,124,142,243,39,6,241,172,36,241,54,85,77,169,119,202,164,74,96,53,44,201,99,247,26,246,146,37,77,36,0,165,50,87,77,50,15,15,251,56,138,4,96,64,252,104,10,132,248,102,177,120,115,241 };
    byte_vec_t pk { 3,154,236,17,28,203,198,42,215,148,164,250,169,155,44,110,196,204,109,151,19,222,87,4,119,218,21,201,121,87,23,144,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 353 ") {
    byte_vec_t msg { 101,64,207,68 };
    byte_vec_t sig { 76,149,104,218,118,48,145,176,99,245,58,175,167,34,118,108,57,160,129,74,44,62,187,150,124,95,48,121,195,25,112,80,219,111,6,25,11,173,37,164,53,46,226,246,222,192,193,211,216,62,164,137,21,133,50,22,116,143,110,216,16,145,75,253 };
    byte_vec_t pk { 4,99,174,28,211,12,25,152,180,80,139,55,30,96,60,78,139,173,172,235,247,98,250,33,194,194,222,13,96,1,167,24,166,192,54,32,186,47,20,146,195,131,221,18,201,33,168,29,191,213,233,67,111,89,130,148,73,209,93,181,128,27,243,157,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 353 ") {
    byte_vec_t msg { 89,51,88,234 };
    byte_vec_t sig { 19,100,247,18,202,64,241,114,56,113,177,43,247,106,223,119,243,22,35,183,27,71,40,88,19,32,79,73,78,57,204,171,121,74,156,9,19,253,172,191,128,92,140,176,158,15,69,33,93,167,120,28,208,231,193,52,186,204,248,208,255,37,157,11 };
    byte_vec_t pk { 4,43,49,22,197,127,172,116,144,194,237,120,1,63,45,150,215,120,154,82,215,27,23,57,12,228,197,114,5,242,183,179,126,49,83,59,3,166,45,90,242,99,118,82,51,200,240,27,161,76,197,66,205,235,132,255,235,182,40,154,20,43,46,213,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 353 ") {
    byte_vec_t msg { 137,172,58,6 };
    byte_vec_t sig { 143,142,5,124,188,51,200,241,224,75,86,24,20,79,129,135,167,98,192,76,116,189,48,190,84,226,243,206,77,253,26,18,207,152,220,75,66,41,13,121,79,130,51,183,227,155,137,96,36,151,53,12,165,201,208,112,29,158,240,113,165,209,191,0 };
    byte_vec_t pk { 2,92,239,247,123,163,26,88,69,144,132,117,5,239,216,241,100,221,140,25,53,218,201,193,187,118,173,211,127,124,184,234,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 353 ") {
    byte_vec_t msg { 35,72,199,49 };
    byte_vec_t sig { 71,42,228,86,129,113,220,229,199,35,20,99,255,22,35,38,47,20,243,96,126,34,191,191,70,141,5,1,2,36,232,120,138,119,164,174,153,155,77,11,9,202,144,57,115,255,145,107,209,59,50,248,188,45,78,190,56,80,19,155,201,74,20,185 };
    byte_vec_t pk { 3,16,32,127,82,103,247,92,79,36,2,144,196,252,44,231,80,94,192,60,239,212,31,245,1,118,123,222,213,71,198,227,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 354 ") {
    byte_vec_t msg { 23,39,224,177 };
    byte_vec_t sig { 88,208,76,37,24,135,118,168,174,125,110,119,49,129,15,205,94,74,162,182,250,40,213,64,5,76,5,157,180,27,34,226,84,122,34,241,184,15,125,9,54,170,129,178,92,173,252,132,221,94,182,57,207,34,148,238,198,203,191,25,24,176,218,5 };
    byte_vec_t pk { 4,123,176,51,56,92,42,26,77,95,242,207,240,203,55,188,207,156,203,42,222,215,241,76,7,108,208,37,10,234,32,204,44,208,237,40,247,62,107,240,81,54,92,79,1,82,34,253,12,150,9,99,159,122,228,55,214,76,205,225,206,220,229,184,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 354 ") {
    byte_vec_t msg { 7,17,87,14 };
    byte_vec_t sig { 138,220,233,36,146,20,143,185,20,166,195,100,240,70,184,204,165,22,50,3,154,52,16,221,213,210,49,18,141,225,222,192,12,159,141,2,167,102,92,36,31,49,203,219,49,2,151,234,146,142,11,250,215,200,236,200,94,48,99,205,140,63,236,250 };
    byte_vec_t pk { 4,108,26,223,232,74,30,208,1,92,45,160,229,5,130,117,234,253,88,49,145,190,210,251,47,16,231,5,97,115,161,74,51,30,235,132,181,185,233,66,169,58,114,125,100,6,119,5,103,237,245,204,128,127,197,255,81,104,44,161,72,128,159,47,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 354 ") {
    byte_vec_t msg { 158,177,45,77 };
    byte_vec_t sig { 32,110,164,135,85,145,147,51,207,208,90,108,75,232,53,60,25,167,12,36,157,101,3,86,214,250,231,0,237,30,145,140,250,93,120,251,97,18,2,114,56,234,125,12,13,147,77,240,114,182,26,20,9,57,203,56,194,175,215,33,44,103,176,242 };
    byte_vec_t pk { 2,200,10,174,171,18,207,144,17,161,50,252,22,38,147,89,74,130,88,144,118,210,132,102,172,61,125,233,50,67,207,126,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 354 ") {
    byte_vec_t msg { 50,30,221,181 };
    byte_vec_t sig { 160,194,102,48,60,234,114,231,228,183,182,44,68,238,152,238,151,245,99,244,174,207,141,214,101,84,230,53,42,16,149,78,140,70,171,181,107,74,108,4,202,1,163,95,192,176,142,71,175,210,210,106,189,140,141,127,59,186,231,244,131,152,238,245 };
    byte_vec_t pk { 3,192,215,190,247,247,116,192,30,216,149,202,199,10,153,127,68,114,246,245,112,53,55,187,245,148,128,70,203,119,228,152,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 355 ") {
    byte_vec_t msg { 92,28,129,213 };
    byte_vec_t sig { 42,126,146,91,198,44,56,203,120,12,174,31,194,240,55,108,168,101,95,235,118,209,219,48,107,50,59,149,120,116,146,14,101,127,93,138,250,250,64,122,73,240,151,252,207,6,132,196,3,231,34,234,183,133,111,183,107,28,16,150,206,58,130,151 };
    byte_vec_t pk { 4,247,115,62,108,183,79,217,18,121,68,80,180,220,152,74,31,223,50,204,12,238,214,121,155,16,188,149,200,241,140,30,10,14,126,131,59,49,106,40,162,56,225,29,71,1,190,30,48,145,152,74,17,110,147,225,183,153,53,44,103,76,198,225,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 355 ") {
    byte_vec_t msg { 169,224,140,51 };
    byte_vec_t sig { 120,253,114,189,224,36,143,105,36,174,164,228,167,5,248,99,187,219,99,242,5,239,245,226,54,46,77,200,205,94,164,235,175,104,35,119,81,7,158,249,47,132,208,136,48,81,56,68,253,52,5,221,68,56,10,80,221,235,136,40,56,41,223,214 };
    byte_vec_t pk { 4,23,133,242,21,223,203,194,245,165,95,86,53,150,46,92,168,66,155,39,142,14,5,37,158,81,163,171,90,16,71,183,48,87,181,140,205,77,21,13,148,134,51,92,100,83,113,183,130,227,44,69,150,59,38,19,216,217,85,143,215,202,86,117,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 355 ") {
    byte_vec_t msg { 251,112,0,135 };
    byte_vec_t sig { 162,75,236,0,11,202,126,10,18,192,16,53,123,182,135,26,72,160,230,19,108,118,128,192,138,244,69,98,112,179,30,86,154,157,1,0,41,88,3,96,231,183,143,185,176,171,104,189,212,245,246,211,244,233,28,4,25,2,16,135,226,140,209,12 };
    byte_vec_t pk { 2,44,227,40,199,198,75,223,142,252,207,149,207,49,112,172,31,130,22,49,192,92,63,255,97,146,69,11,133,180,67,15,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 355 ") {
    byte_vec_t msg { 111,35,136,140 };
    byte_vec_t sig { 126,168,60,80,216,46,132,197,89,24,133,234,186,191,173,105,108,162,73,145,194,94,208,10,27,180,68,127,63,230,46,203,189,137,95,108,151,14,137,174,184,183,154,184,137,202,52,88,96,97,207,235,59,36,20,246,173,141,105,122,127,122,107,68 };
    byte_vec_t pk { 3,195,162,196,48,167,155,229,40,93,235,135,74,245,136,235,103,177,126,99,6,161,21,121,239,53,247,177,134,189,241,149,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 356 ") {
    byte_vec_t msg { 139,227,255,122 };
    byte_vec_t sig { 201,229,199,73,58,131,175,199,144,122,20,136,15,86,44,208,91,194,163,48,111,114,145,137,52,4,1,59,147,88,88,202,3,33,238,63,19,192,59,230,98,85,159,10,211,125,5,36,182,193,193,13,251,82,28,244,116,19,65,89,41,68,5,89 };
    byte_vec_t pk { 4,109,22,124,150,97,2,56,237,78,79,197,74,166,252,138,75,22,231,111,29,226,111,143,15,56,81,143,195,151,118,120,125,131,137,12,179,98,72,118,238,3,228,9,64,212,211,239,70,89,228,89,149,160,225,26,48,177,87,137,188,217,152,45,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 356 ") {
    byte_vec_t msg { 141,10,99,27 };
    byte_vec_t sig { 63,97,7,13,218,173,60,34,86,6,58,225,206,113,254,82,140,102,179,249,132,250,202,246,133,19,196,248,1,107,35,51,29,86,57,189,5,24,44,104,192,63,222,153,166,190,19,111,179,189,12,73,22,82,111,197,13,139,18,253,229,65,177,75 };
    byte_vec_t pk { 4,227,112,25,29,15,84,78,21,184,18,37,199,1,25,39,251,186,44,27,44,185,199,13,229,136,12,9,45,70,149,149,152,186,70,132,237,4,102,219,41,35,194,121,255,162,192,223,63,129,128,147,123,31,36,199,69,78,43,142,67,156,71,178,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 356 ") {
    byte_vec_t msg { 225,152,232,17 };
    byte_vec_t sig { 224,212,124,255,188,15,174,27,170,15,11,117,124,226,109,123,150,175,41,37,165,228,139,23,98,169,249,51,252,122,26,225,55,208,237,128,158,203,154,9,160,251,61,93,239,11,136,8,10,87,63,49,253,151,223,238,166,186,92,22,93,52,115,66 };
    byte_vec_t pk { 3,240,24,219,178,190,156,37,203,40,193,188,91,60,149,136,78,125,16,102,156,16,105,133,47,208,113,92,190,90,145,107,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 356 ") {
    byte_vec_t msg { 60,81,4,185 };
    byte_vec_t sig { 253,255,115,255,73,168,74,148,13,210,19,190,142,193,171,42,140,146,137,123,59,217,234,5,220,3,44,221,45,73,151,83,228,196,86,175,101,75,56,219,126,75,240,100,229,192,232,176,178,77,213,65,158,171,106,19,218,18,107,193,178,41,184,42 };
    byte_vec_t pk { 3,168,21,83,35,60,70,138,111,76,219,91,121,190,237,115,226,237,15,244,249,108,69,37,167,219,142,130,133,248,177,173,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 357 ") {
    byte_vec_t msg { 49,175,153,218 };
    byte_vec_t sig { 73,198,128,221,128,76,128,229,153,179,99,164,129,125,167,77,28,52,56,4,116,29,80,166,232,151,181,101,216,240,170,157,94,217,217,6,164,177,13,122,73,13,7,196,27,98,12,108,124,23,195,141,30,231,174,152,6,59,145,183,14,27,186,76 };
    byte_vec_t pk { 4,238,77,82,19,83,223,151,143,136,19,245,175,21,225,2,99,2,118,63,253,232,215,132,167,125,19,110,183,187,217,46,164,153,238,66,53,170,21,90,65,240,29,92,149,170,108,182,140,26,250,6,42,223,160,33,171,124,199,55,33,245,54,180,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 357 ") {
    byte_vec_t msg { 208,182,203,232 };
    byte_vec_t sig { 145,102,131,244,237,26,123,102,74,52,164,69,243,191,214,158,181,53,208,56,88,220,83,248,213,199,237,102,6,104,166,172,86,12,33,249,142,136,172,197,128,59,86,95,94,39,240,81,83,40,20,240,197,94,96,111,100,157,100,204,230,141,86,95 };
    byte_vec_t pk { 4,32,123,101,253,31,152,193,116,12,99,220,24,45,186,213,176,195,23,111,12,173,201,188,123,239,76,80,153,44,46,9,40,155,153,51,57,6,217,171,139,92,156,47,170,71,235,171,180,239,40,65,157,55,136,107,153,47,205,180,125,221,10,100,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 357 ") {
    byte_vec_t msg { 82,192,157,63 };
    byte_vec_t sig { 96,40,183,10,2,186,202,157,148,196,143,87,140,158,170,83,31,52,48,161,75,129,244,57,198,125,16,70,165,216,198,213,114,83,54,153,131,214,154,208,209,116,8,1,132,133,200,61,51,143,234,190,243,7,31,103,55,241,41,53,0,56,95,40 };
    byte_vec_t pk { 3,229,4,176,216,148,112,189,66,171,165,193,170,155,130,32,243,63,114,89,193,69,54,19,143,234,69,116,135,88,6,17,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 357 ") {
    byte_vec_t msg { 49,96,165,179 };
    byte_vec_t sig { 142,13,189,102,109,84,233,5,76,196,92,218,98,18,224,3,207,144,100,134,210,82,66,88,182,177,43,11,76,52,64,100,16,80,153,79,74,162,159,243,207,4,214,136,205,78,202,106,243,149,203,251,217,60,255,64,222,53,11,73,148,201,222,54 };
    byte_vec_t pk { 3,80,75,44,184,151,255,246,134,195,144,153,49,61,207,165,16,192,190,124,226,192,173,149,112,116,149,232,58,226,171,191,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 358 ") {
    byte_vec_t msg { 171,15,234,14 };
    byte_vec_t sig { 80,199,47,188,52,147,36,215,9,161,170,10,73,239,35,47,136,172,194,219,23,183,193,149,75,197,25,32,82,129,77,63,81,15,52,154,216,102,164,42,202,240,148,178,154,72,83,75,209,236,200,29,2,185,239,250,9,105,252,14,135,192,239,251 };
    byte_vec_t pk { 4,22,186,18,50,103,128,124,49,123,177,148,187,180,141,133,190,117,229,202,244,159,60,225,252,4,162,177,138,211,138,158,187,152,102,226,218,113,24,145,68,81,21,27,135,244,149,206,87,149,121,205,199,101,17,134,35,96,79,52,217,144,133,16,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 358 ") {
    byte_vec_t msg { 118,149,46,247 };
    byte_vec_t sig { 165,36,55,146,4,19,127,46,137,211,80,37,230,87,167,50,87,130,254,201,93,12,219,74,128,22,191,137,186,148,91,24,155,72,205,216,183,42,212,96,20,181,203,187,145,253,161,128,249,71,164,62,112,220,4,150,195,248,192,193,99,139,54,81 };
    byte_vec_t pk { 4,29,204,56,113,44,130,235,149,143,82,56,32,58,7,234,220,168,255,99,121,224,78,184,236,212,51,3,148,20,87,128,214,170,70,245,174,239,58,116,68,30,158,51,214,48,5,221,40,186,28,107,155,122,60,225,134,55,209,52,61,152,19,150,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 358 ") {
    byte_vec_t msg { 186,130,73,11 };
    byte_vec_t sig { 223,196,184,208,60,223,219,6,203,23,192,228,5,153,4,149,134,129,246,247,255,3,116,90,129,39,200,43,180,123,16,73,212,47,207,39,234,48,120,223,67,204,215,188,239,150,107,236,141,199,162,163,220,207,92,135,142,2,70,169,48,77,55,150 };
    byte_vec_t pk { 3,127,240,80,107,81,90,4,38,230,35,191,133,236,145,14,80,75,243,166,175,40,50,50,80,74,171,39,254,119,192,121,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 358 ") {
    byte_vec_t msg { 63,91,158,64 };
    byte_vec_t sig { 85,37,142,1,179,193,219,202,94,125,31,158,106,92,151,225,149,178,239,37,27,8,125,123,86,63,85,219,91,61,247,128,168,59,85,36,98,3,67,24,223,56,160,81,124,202,90,140,253,250,79,251,207,182,117,85,221,99,9,52,195,21,134,37 };
    byte_vec_t pk { 3,102,143,125,119,66,13,46,1,52,109,234,41,231,232,39,228,17,28,122,10,182,12,74,163,156,222,248,64,45,56,188,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 359 ") {
    byte_vec_t msg { 221,70,219,86 };
    byte_vec_t sig { 166,124,43,241,230,20,108,75,110,45,35,145,46,69,173,103,0,104,59,21,144,174,143,92,224,216,243,6,186,139,244,203,252,97,161,206,181,211,211,159,218,102,16,234,193,182,54,189,116,241,200,122,3,246,76,220,55,201,57,99,16,170,117,84 };
    byte_vec_t pk { 4,241,250,198,71,225,50,255,145,219,221,111,214,178,160,131,235,79,16,242,162,53,183,12,144,184,85,168,205,227,61,46,11,46,147,232,116,28,89,42,200,19,153,220,232,90,91,165,75,102,218,137,235,112,224,123,27,13,43,186,7,254,191,221,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 359 ") {
    byte_vec_t msg { 82,217,67,197 };
    byte_vec_t sig { 91,210,8,202,246,164,189,130,14,253,210,142,30,101,137,100,166,53,59,152,81,229,205,11,251,57,251,15,209,205,3,195,127,35,172,213,41,120,123,178,37,38,143,91,121,212,180,236,240,105,70,111,212,36,252,75,136,251,114,77,20,87,4,58 };
    byte_vec_t pk { 4,64,124,116,37,183,53,137,91,98,244,148,109,209,68,55,224,104,142,222,16,54,42,198,4,236,83,151,197,254,134,153,199,132,238,179,186,139,86,177,49,111,28,215,71,130,210,1,175,22,225,40,64,187,253,144,124,112,185,227,176,215,30,52,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 359 ") {
    byte_vec_t msg { 220,250,188,178 };
    byte_vec_t sig { 133,102,174,145,17,56,46,194,170,63,41,57,64,161,170,199,53,133,47,125,70,96,120,104,182,34,127,178,12,37,79,144,249,25,121,120,46,203,165,112,125,204,129,62,228,77,173,254,100,90,176,71,196,90,130,139,209,138,157,166,215,139,19,219 };
    byte_vec_t pk { 3,62,99,252,61,254,160,237,243,214,128,170,48,249,65,64,90,108,174,56,79,96,217,167,233,222,135,39,9,208,227,128,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 359 ") {
    byte_vec_t msg { 160,158,98,11 };
    byte_vec_t sig { 101,140,121,196,195,242,70,7,139,92,96,27,161,43,101,146,67,136,22,179,254,254,102,77,121,228,248,106,251,116,24,81,138,226,52,102,55,123,22,220,255,198,125,243,108,72,55,175,130,186,219,35,68,206,198,245,17,105,21,42,217,137,175,50 };
    byte_vec_t pk { 3,75,75,72,196,249,39,9,230,172,164,117,177,81,214,80,21,138,6,73,195,156,114,250,93,105,178,51,113,192,185,38,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 360 ") {
    byte_vec_t msg { 169,236,131,232 };
    byte_vec_t sig { 186,76,216,55,140,216,23,26,78,208,229,171,136,202,190,219,127,168,10,151,113,22,57,4,198,150,135,11,253,235,8,252,123,111,116,178,251,12,0,48,121,228,228,56,52,39,238,83,46,25,227,170,239,114,217,55,253,116,143,170,133,235,247,131 };
    byte_vec_t pk { 4,209,6,112,218,144,12,52,38,150,178,74,249,201,194,63,58,111,86,115,249,81,2,125,52,92,245,138,6,25,199,10,244,85,15,227,198,190,219,116,224,11,43,86,34,144,153,81,75,85,183,81,226,158,112,32,121,161,189,107,126,180,238,20,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 360 ") {
    byte_vec_t msg { 179,235,148,222 };
    byte_vec_t sig { 155,128,74,31,225,162,114,228,193,145,200,232,216,45,219,160,136,71,202,43,161,143,166,108,41,163,200,127,92,60,37,79,52,65,72,194,212,130,203,185,145,110,115,100,137,145,97,166,96,74,63,221,43,22,232,109,214,132,234,101,79,117,249,27 };
    byte_vec_t pk { 4,4,29,202,49,69,178,91,209,89,48,108,119,60,44,119,185,210,229,69,113,251,14,113,126,65,133,30,162,206,235,225,151,123,54,114,87,249,71,101,67,96,45,136,103,83,146,53,95,245,127,89,3,191,190,14,170,239,102,252,213,78,172,38,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 360 ") {
    byte_vec_t msg { 227,85,179,35 };
    byte_vec_t sig { 75,37,103,2,19,6,86,236,42,60,28,164,227,81,249,185,246,108,69,39,75,74,238,236,57,2,211,27,47,49,196,41,42,227,99,224,248,174,212,239,205,178,37,143,150,243,91,117,37,107,237,77,161,107,211,123,47,121,105,19,178,66,50,52 };
    byte_vec_t pk { 3,29,60,115,183,183,85,192,133,254,10,255,134,23,85,234,223,59,94,155,219,225,192,1,196,252,100,27,120,142,89,161,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 360 ") {
    byte_vec_t msg { 246,231,186,88 };
    byte_vec_t sig { 62,76,212,106,240,199,10,91,83,143,106,16,242,41,206,52,132,77,134,150,214,119,63,57,18,236,174,198,133,125,155,149,109,45,241,174,204,111,189,121,35,7,128,213,209,48,255,172,199,130,75,108,1,249,107,39,57,58,119,60,171,2,84,169 };
    byte_vec_t pk { 3,241,92,98,146,217,71,189,171,84,57,171,132,125,16,72,105,59,159,190,130,159,86,53,15,153,98,176,184,29,137,9,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 361 ") {
    byte_vec_t msg { 56,252,211,80 };
    byte_vec_t sig { 130,22,129,228,246,210,149,19,216,6,103,236,154,43,13,169,247,26,172,194,80,91,202,13,217,106,19,22,202,137,167,207,14,21,74,249,23,133,170,211,173,56,18,170,33,163,89,230,227,65,40,52,17,128,212,169,49,8,135,86,128,132,169,8 };
    byte_vec_t pk { 4,242,123,237,71,19,148,61,119,211,60,19,131,171,122,205,186,34,106,50,96,153,214,166,92,30,178,194,57,19,115,226,211,95,26,222,130,27,179,115,108,238,101,214,128,58,39,119,50,0,142,186,55,173,211,134,182,192,198,21,161,179,77,87,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 361 ") {
    byte_vec_t msg { 152,59,46,236 };
    byte_vec_t sig { 76,67,239,132,166,131,208,213,250,58,7,70,29,127,7,176,124,89,181,55,252,41,150,180,10,39,66,144,24,219,14,106,39,184,169,63,51,104,20,34,54,131,104,104,175,212,32,41,139,223,80,171,90,49,28,67,18,137,184,132,31,28,181,200 };
    byte_vec_t pk { 4,249,148,12,206,136,8,135,113,70,69,133,145,182,29,22,118,3,12,237,90,195,164,251,82,148,60,181,166,207,184,190,213,133,76,110,23,19,187,199,185,160,164,185,193,53,83,103,172,245,30,142,214,139,191,114,36,187,135,5,15,224,133,156,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 361 ") {
    byte_vec_t msg { 170,70,138,60 };
    byte_vec_t sig { 201,248,245,157,239,105,68,166,96,148,61,107,197,37,139,35,35,87,4,220,104,156,225,133,6,185,145,211,138,155,77,58,32,255,229,73,147,199,12,130,143,72,144,3,100,130,123,118,45,186,138,82,27,3,20,152,60,28,109,174,165,56,161,94 };
    byte_vec_t pk { 3,78,62,113,186,178,231,32,102,199,122,195,64,142,237,109,41,217,48,96,112,194,95,200,22,98,204,128,155,114,66,82,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 361 ") {
    byte_vec_t msg { 93,19,227,18 };
    byte_vec_t sig { 230,235,61,143,167,50,203,28,114,148,80,162,234,5,115,4,151,220,8,32,154,43,99,228,180,36,130,116,121,97,162,24,198,5,25,143,250,195,55,137,116,124,185,114,164,170,102,107,94,46,218,245,156,176,213,124,230,117,43,21,66,73,67,0 };
    byte_vec_t pk { 2,48,187,15,132,126,138,112,50,139,185,143,239,43,248,214,112,77,4,36,16,84,40,47,40,13,181,197,73,79,100,174,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 362 ") {
    byte_vec_t msg { 74,115,123,27 };
    byte_vec_t sig { 245,178,116,187,39,81,10,201,142,171,33,12,21,190,222,182,5,163,166,229,171,154,248,4,84,46,182,97,131,170,210,104,247,144,102,227,11,112,225,90,202,12,62,164,213,60,152,187,10,113,169,149,77,47,195,161,190,81,193,221,149,157,198,206 };
    byte_vec_t pk { 4,41,209,193,201,35,197,255,219,125,203,40,163,18,229,170,237,134,184,241,135,85,113,135,14,246,173,161,68,181,117,57,205,40,130,173,177,34,142,252,134,130,2,49,48,230,244,9,99,23,96,243,218,36,17,224,201,184,147,73,0,12,129,125,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 362 ") {
    byte_vec_t msg { 186,206,107,164 };
    byte_vec_t sig { 204,160,200,253,46,98,81,77,196,151,199,114,39,204,178,202,171,87,202,245,151,48,64,223,169,185,178,209,129,118,229,178,97,76,60,99,144,148,2,183,27,82,253,11,142,130,225,139,246,176,86,97,225,225,221,216,167,142,42,82,11,93,41,137 };
    byte_vec_t pk { 4,224,77,247,132,43,169,31,218,92,135,11,202,140,170,220,5,65,106,236,84,129,61,30,62,37,195,79,234,53,132,65,21,110,78,199,210,14,242,28,72,63,238,116,97,140,184,203,255,174,153,196,52,149,98,35,238,157,19,55,160,61,48,133,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 362 ") {
    byte_vec_t msg { 147,120,73,30 };
    byte_vec_t sig { 221,84,131,123,241,74,182,83,132,14,78,140,37,78,117,133,88,224,64,31,211,114,181,144,231,66,118,248,29,57,194,209,240,207,242,247,25,126,89,16,25,104,246,86,122,238,48,137,83,66,191,10,200,91,156,67,233,26,191,56,176,61,74,108 };
    byte_vec_t pk { 2,254,193,206,19,136,5,110,29,237,233,54,206,157,32,174,246,189,46,43,166,199,244,134,191,224,93,188,156,111,163,238,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 362 ") {
    byte_vec_t msg { 164,107,65,177 };
    byte_vec_t sig { 178,178,110,177,210,27,66,23,161,248,99,32,207,26,82,209,92,159,147,210,199,193,26,96,130,226,120,69,185,194,24,100,171,115,83,230,121,148,226,23,158,36,155,130,248,200,81,93,149,67,10,185,103,96,144,66,178,247,36,67,162,110,73,196 };
    byte_vec_t pk { 3,201,142,149,67,163,191,9,175,160,242,214,169,62,155,98,179,171,90,103,247,84,249,87,226,230,148,195,171,165,232,17,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 363 ") {
    byte_vec_t msg { 79,59,11,113 };
    byte_vec_t sig { 237,156,179,61,58,146,170,104,200,18,144,189,163,146,157,221,182,83,126,154,47,199,133,220,45,115,169,239,77,183,226,55,150,195,166,211,56,229,6,84,247,119,220,241,49,75,218,182,88,120,127,59,62,106,139,204,55,26,173,97,201,227,165,165 };
    byte_vec_t pk { 4,148,90,81,38,61,1,233,142,158,232,141,51,158,22,48,125,156,114,24,17,36,202,225,178,189,119,23,227,130,222,229,232,88,226,190,208,116,190,202,228,66,89,239,107,212,29,38,22,212,127,64,35,149,194,226,155,248,36,151,215,27,102,255,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 363 ") {
    byte_vec_t msg { 216,225,98,62 };
    byte_vec_t sig { 99,255,181,200,250,23,147,162,35,141,235,151,23,152,39,140,243,106,159,192,76,16,89,174,157,134,253,67,31,52,29,60,75,172,232,130,44,221,235,196,76,201,54,231,153,191,183,136,111,20,107,161,133,213,21,126,41,199,56,109,0,74,40,218 };
    byte_vec_t pk { 4,64,140,117,199,142,68,95,108,138,198,230,129,254,181,200,194,62,131,217,203,145,208,236,238,15,59,182,74,241,241,72,19,129,114,15,222,176,253,136,46,157,83,166,171,6,9,163,220,201,150,82,95,211,6,180,71,98,194,52,161,124,61,210,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 363 ") {
    byte_vec_t msg { 64,95,42,114 };
    byte_vec_t sig { 248,136,165,148,249,21,131,232,109,86,131,71,179,70,226,45,237,87,30,68,71,84,27,121,174,47,217,73,195,224,66,69,209,223,199,57,177,249,157,69,202,14,104,186,34,230,175,226,84,55,191,230,210,154,8,10,84,117,232,6,22,47,134,106 };
    byte_vec_t pk { 2,194,102,8,66,253,209,169,158,251,65,90,26,210,171,163,232,39,22,52,140,182,97,127,199,70,66,233,146,54,63,175,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 363 ") {
    byte_vec_t msg { 203,164,198,159 };
    byte_vec_t sig { 26,232,12,11,162,249,246,55,70,88,46,198,10,154,152,54,125,79,45,21,54,249,194,183,167,111,69,129,175,96,159,120,40,202,116,214,65,103,92,233,151,83,56,132,11,84,44,232,126,107,151,244,70,144,2,161,21,121,129,67,118,73,247,68 };
    byte_vec_t pk { 3,77,128,12,38,221,167,179,13,8,29,132,226,120,12,246,104,147,2,56,234,231,151,32,15,92,75,237,105,32,184,141,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 364 ") {
    byte_vec_t msg { 202,214,85,215 };
    byte_vec_t sig { 140,122,218,164,18,111,134,3,216,192,141,0,126,138,214,176,118,234,155,172,18,206,200,128,131,119,117,175,47,89,185,105,136,87,250,35,166,255,5,74,29,130,111,167,34,236,74,60,48,201,204,118,202,86,159,106,172,115,165,6,173,246,110,170 };
    byte_vec_t pk { 4,25,84,176,48,60,236,20,55,111,178,255,88,20,111,33,239,251,111,255,185,87,72,158,165,137,213,189,253,113,139,68,191,156,234,128,242,30,189,94,120,189,111,136,223,56,158,3,12,120,211,227,167,4,46,74,156,149,218,236,240,29,71,193,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 364 ") {
    byte_vec_t msg { 101,118,40,80 };
    byte_vec_t sig { 11,152,230,232,89,50,131,0,89,241,91,197,148,212,139,242,199,58,66,20,192,130,107,222,172,158,23,36,171,212,49,98,220,108,64,214,255,79,157,100,88,204,199,235,27,56,174,62,179,104,211,13,72,63,154,113,251,238,187,43,4,83,247,9 };
    byte_vec_t pk { 4,116,145,198,198,154,33,87,206,240,40,106,54,54,176,97,116,90,218,93,3,202,97,91,209,154,188,131,23,112,68,155,121,197,237,5,197,214,33,114,59,178,148,79,113,28,196,21,224,89,181,35,156,14,41,193,149,30,240,146,56,223,147,166,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 364 ") {
    byte_vec_t msg { 154,111,69,69 };
    byte_vec_t sig { 11,124,169,101,171,84,26,231,47,166,110,75,154,159,154,84,201,147,141,186,82,105,242,245,160,178,58,246,21,201,134,184,143,179,76,116,131,37,119,216,185,119,9,125,207,201,29,93,138,223,175,68,5,53,178,71,67,172,214,164,216,91,231,42 };
    byte_vec_t pk { 2,0,193,244,177,17,254,192,115,250,93,16,255,123,216,231,24,125,182,195,179,64,129,161,99,54,187,167,115,160,154,90,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 364 ") {
    byte_vec_t msg { 141,186,163,23 };
    byte_vec_t sig { 8,110,82,104,241,78,69,237,220,164,216,4,224,7,157,19,82,245,14,175,17,220,184,68,6,83,109,85,75,181,122,207,238,212,186,181,214,9,66,189,215,37,144,125,142,131,175,199,13,170,34,67,185,207,154,65,78,134,225,170,72,214,44,50 };
    byte_vec_t pk { 2,110,28,95,241,82,178,214,8,112,36,86,242,172,244,229,201,143,121,49,136,236,226,80,184,115,40,129,216,119,154,59,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 365 ") {
    byte_vec_t msg { 45,97,148,143 };
    byte_vec_t sig { 86,16,62,91,223,223,211,182,192,96,34,25,203,123,112,4,122,196,5,198,132,53,143,37,245,235,110,196,98,202,249,253,109,42,157,112,128,110,62,167,226,184,78,111,87,95,88,22,110,102,197,25,184,187,168,249,146,14,253,11,133,250,7,16 };
    byte_vec_t pk { 4,86,149,165,99,58,11,205,182,75,224,77,226,62,247,52,48,137,15,220,236,187,157,39,18,19,155,228,214,127,190,189,68,159,50,13,253,253,89,204,141,231,58,173,106,104,31,74,240,97,223,240,235,19,147,63,55,253,70,217,135,181,211,97,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 365 ") {
    byte_vec_t msg { 3,221,218,254 };
    byte_vec_t sig { 113,160,134,17,195,100,149,186,225,51,140,196,43,207,140,42,52,196,32,45,182,29,241,0,160,31,8,115,188,214,117,81,139,121,238,123,14,86,233,143,161,199,100,180,170,200,36,10,17,6,14,153,237,133,97,202,109,191,83,115,73,34,224,254 };
    byte_vec_t pk { 4,123,31,7,194,92,85,47,238,100,80,222,40,4,36,85,36,42,34,131,159,193,150,186,54,221,249,75,98,240,164,44,73,5,26,143,246,197,195,161,155,48,250,189,97,246,63,111,239,165,17,153,3,166,179,213,239,97,100,219,105,27,54,41,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 365 ") {
    byte_vec_t msg { 125,215,138,41 };
    byte_vec_t sig { 174,152,113,216,222,70,1,253,11,75,109,185,120,62,144,29,242,161,203,66,49,99,83,144,198,185,230,109,245,177,23,97,129,5,32,242,246,166,28,209,57,173,25,104,75,142,112,128,242,119,29,88,188,187,32,156,215,118,129,166,21,122,104,254 };
    byte_vec_t pk { 3,134,17,159,231,192,11,199,23,111,22,160,148,46,120,90,139,211,80,138,247,210,172,208,57,75,188,95,250,0,188,138,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 365 ") {
    byte_vec_t msg { 254,10,72,103 };
    byte_vec_t sig { 95,232,163,235,105,14,30,144,109,67,210,182,125,155,60,228,60,251,207,57,228,234,180,61,100,118,172,166,211,144,152,156,181,52,189,167,192,217,39,46,73,145,34,36,243,31,109,68,2,62,114,245,46,153,221,82,161,14,125,51,136,142,107,225 };
    byte_vec_t pk { 2,41,217,174,233,23,235,97,20,2,141,66,220,180,11,58,144,211,5,101,220,28,218,36,34,138,152,27,111,236,240,203,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 366 ") {
    byte_vec_t msg { 92,80,109,227 };
    byte_vec_t sig { 138,95,69,198,219,170,204,63,240,113,69,34,233,147,140,37,138,148,70,136,223,54,82,226,27,181,237,156,163,154,136,45,32,16,248,0,11,58,42,185,131,214,7,220,110,85,164,219,114,232,141,177,62,224,196,60,210,123,80,26,227,105,177,193 };
    byte_vec_t pk { 4,19,210,255,159,20,19,25,149,141,100,208,213,218,79,251,181,48,194,46,195,134,244,50,40,177,16,166,92,99,177,215,92,127,196,99,173,56,29,60,240,155,254,78,196,65,80,7,118,210,62,218,157,237,86,144,186,120,91,85,61,134,62,186,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 366 ") {
    byte_vec_t msg { 160,6,107,44 };
    byte_vec_t sig { 41,6,199,192,3,13,144,196,56,55,3,53,186,27,244,173,18,2,35,137,234,90,97,132,38,175,227,199,47,252,3,208,58,50,187,204,253,123,13,215,107,99,230,239,217,162,188,120,176,101,218,62,34,70,208,27,102,226,147,111,83,68,217,176 };
    byte_vec_t pk { 4,8,199,184,188,245,132,231,35,160,78,253,114,201,66,9,150,70,47,207,147,59,194,176,168,167,106,39,22,40,180,43,191,162,151,137,248,128,50,4,158,185,146,91,212,145,188,61,131,58,235,41,105,119,39,188,119,211,63,139,13,171,231,190,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 366 ") {
    byte_vec_t msg { 223,112,225,40 };
    byte_vec_t sig { 88,196,252,136,4,111,239,217,249,79,131,154,186,205,190,148,162,132,104,214,119,154,118,185,149,198,89,102,18,170,121,125,205,213,253,129,115,115,23,65,246,88,85,250,190,206,33,244,130,213,194,35,203,203,73,201,144,216,46,234,228,75,57,45 };
    byte_vec_t pk { 2,46,131,144,134,224,24,228,171,58,102,54,203,64,1,145,221,61,48,181,15,65,169,151,153,194,106,69,10,107,181,241,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 366 ") {
    byte_vec_t msg { 168,36,156,14 };
    byte_vec_t sig { 89,192,61,131,142,63,54,151,140,227,53,78,25,44,109,26,97,102,192,87,202,216,255,9,128,152,30,220,213,17,86,61,224,119,75,144,127,185,205,192,221,127,170,36,93,199,86,160,2,36,0,225,90,129,229,26,121,105,34,27,60,190,45,199 };
    byte_vec_t pk { 3,219,166,244,95,171,43,60,35,104,15,232,240,3,136,97,150,138,5,90,237,214,167,75,207,42,217,233,158,109,119,180,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 367 ") {
    byte_vec_t msg { 67,107,88,116 };
    byte_vec_t sig { 132,115,225,160,180,32,159,162,165,220,17,222,33,62,126,65,52,211,168,17,27,125,125,168,67,126,230,188,225,65,12,244,58,173,133,124,152,100,70,150,105,33,206,167,29,39,191,148,251,157,72,94,134,176,250,158,92,182,67,133,160,104,231,92 };
    byte_vec_t pk { 4,226,146,2,136,159,241,112,196,88,9,181,133,234,183,105,92,77,130,190,25,203,165,99,116,77,161,123,9,21,147,188,53,91,75,62,135,54,193,156,175,160,234,13,232,27,144,125,158,122,153,162,38,32,84,6,232,20,90,7,244,79,90,159,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 367 ") {
    byte_vec_t msg { 18,146,88,99 };
    byte_vec_t sig { 45,20,27,174,248,243,164,55,151,189,254,108,197,159,234,214,149,41,119,178,8,185,82,62,58,84,28,90,184,199,139,251,143,17,104,230,65,80,107,31,80,3,0,109,23,103,100,195,10,192,195,196,137,57,35,179,213,178,123,26,64,112,143,81 };
    byte_vec_t pk { 4,7,124,213,153,164,85,211,60,89,29,92,9,237,108,116,178,176,115,153,229,190,164,123,138,255,202,173,193,237,1,85,118,46,115,97,43,217,99,2,202,169,237,254,108,31,218,97,75,70,212,126,240,117,138,23,146,5,209,36,246,76,159,138,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 367 ") {
    byte_vec_t msg { 26,143,165,221 };
    byte_vec_t sig { 204,157,23,169,55,68,122,119,221,22,214,96,124,163,18,184,60,195,203,16,135,200,35,53,91,223,96,81,93,88,87,174,162,109,85,215,73,41,254,174,73,93,161,225,7,47,65,62,172,89,151,71,243,234,14,42,238,31,131,120,200,192,49,215 };
    byte_vec_t pk { 3,150,39,245,251,210,41,214,186,170,191,73,168,24,177,74,86,35,136,254,110,156,13,116,37,203,120,64,71,208,129,152,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 367 ") {
    byte_vec_t msg { 61,29,119,36 };
    byte_vec_t sig { 212,205,17,242,248,117,130,175,57,210,97,147,199,154,214,224,194,167,92,65,142,240,204,80,99,60,206,75,65,112,255,70,51,134,82,22,104,176,18,77,5,5,191,35,151,110,26,209,7,222,10,42,164,176,235,92,11,80,0,136,240,36,230,82 };
    byte_vec_t pk { 2,171,175,119,100,31,75,19,135,147,17,91,88,116,172,185,165,4,126,239,92,53,218,144,56,83,60,111,32,208,224,87,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 368 ") {
    byte_vec_t msg { 102,74,73,187 };
    byte_vec_t sig { 224,227,126,231,239,185,216,138,130,157,32,4,93,172,224,154,88,51,150,237,64,40,150,181,221,31,152,77,56,197,120,251,102,62,254,6,5,228,246,134,7,99,70,81,55,166,252,103,60,178,158,121,236,228,18,242,133,20,251,20,63,58,182,10 };
    byte_vec_t pk { 4,2,49,206,132,177,13,88,44,33,230,32,104,123,20,129,99,101,193,148,33,69,211,1,137,92,84,49,180,34,10,187,46,81,228,10,142,0,168,253,241,221,46,67,239,27,119,107,17,89,192,63,201,97,236,225,192,228,87,89,88,242,183,170,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 368 ") {
    byte_vec_t msg { 240,141,130,65 };
    byte_vec_t sig { 95,171,80,209,184,201,15,173,31,243,126,209,31,105,45,104,179,128,96,187,173,181,40,73,76,14,235,222,180,141,78,168,95,129,206,34,143,168,186,125,174,80,57,225,108,111,133,96,88,106,12,2,230,150,39,118,204,216,162,250,253,38,43,50 };
    byte_vec_t pk { 4,185,137,6,93,39,2,153,213,67,191,88,81,16,11,151,177,238,151,43,41,93,133,68,122,23,165,27,196,158,9,62,226,228,65,222,122,161,39,98,140,5,223,81,91,237,104,176,222,114,78,237,209,167,12,161,167,211,89,200,111,127,234,238,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 368 ") {
    byte_vec_t msg { 242,14,41,118 };
    byte_vec_t sig { 91,140,252,247,179,178,232,215,157,89,242,16,233,93,224,77,151,62,118,222,226,161,209,245,28,48,10,120,214,211,226,219,170,54,145,140,53,207,172,195,253,110,170,61,238,122,234,215,88,196,243,178,23,193,196,74,123,230,125,239,31,134,55,35 };
    byte_vec_t pk { 2,151,144,26,178,84,147,157,104,10,93,195,192,47,215,44,28,141,83,52,100,226,249,240,194,54,192,206,191,127,143,139,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 368 ") {
    byte_vec_t msg { 152,179,100,95 };
    byte_vec_t sig { 132,69,25,235,185,33,60,59,237,13,148,101,19,2,18,142,77,104,188,204,152,75,34,244,67,20,142,206,213,153,250,38,245,129,98,82,189,64,202,252,108,120,40,166,176,35,224,212,191,157,14,174,23,121,113,147,42,23,32,49,90,158,50,24 };
    byte_vec_t pk { 3,166,118,183,254,172,199,165,46,41,176,4,90,249,165,43,229,217,125,189,5,166,158,239,164,248,225,181,38,244,226,73,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 369 ") {
    byte_vec_t msg { 22,249,111,48 };
    byte_vec_t sig { 106,164,205,210,3,206,6,64,212,6,174,235,61,94,144,127,174,211,139,197,133,246,221,215,63,90,48,92,30,185,81,85,137,51,156,145,191,181,87,102,195,223,26,40,82,190,191,11,204,218,105,33,198,59,138,152,248,220,166,29,166,4,110,25 };
    byte_vec_t pk { 4,62,255,23,109,5,59,222,57,226,42,226,129,3,84,157,105,64,37,244,112,115,212,35,182,194,255,147,228,45,179,246,17,182,107,192,228,89,0,28,131,88,174,50,55,58,90,74,175,206,45,253,224,40,3,163,120,30,165,158,122,155,149,29,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 369 ") {
    byte_vec_t msg { 52,17,27,139 };
    byte_vec_t sig { 240,31,87,206,195,126,200,64,110,243,30,172,213,201,122,169,130,40,3,156,185,32,255,115,37,45,164,231,171,255,231,77,199,19,169,126,32,227,206,126,155,194,27,246,45,214,132,105,191,111,231,157,163,61,215,178,108,218,135,60,98,32,47,244 };
    byte_vec_t pk { 4,184,205,11,44,21,6,208,56,173,241,25,130,174,222,114,5,222,236,235,80,238,217,204,137,150,111,81,236,81,253,214,87,119,249,19,120,18,3,220,48,190,103,46,90,82,231,114,251,146,32,61,35,124,162,209,24,247,186,26,219,75,31,163,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 369 ") {
    byte_vec_t msg { 164,237,153,236 };
    byte_vec_t sig { 41,191,233,86,234,72,131,124,245,202,65,47,0,201,134,154,152,6,131,11,134,153,108,31,44,30,182,44,247,174,159,109,21,112,189,104,25,104,63,230,111,123,130,114,35,12,130,188,180,236,83,145,207,10,50,119,233,82,81,191,127,216,78,84 };
    byte_vec_t pk { 3,94,66,121,18,230,90,162,198,6,150,170,24,133,34,236,8,81,216,221,101,29,189,109,195,241,95,231,230,241,217,148,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 369 ") {
    byte_vec_t msg { 217,124,147,129 };
    byte_vec_t sig { 189,90,46,163,6,234,148,12,177,227,9,159,251,35,169,127,247,146,43,103,112,27,193,47,94,229,91,32,19,71,173,143,102,75,84,244,180,238,244,182,211,205,105,23,248,108,206,129,142,56,80,208,127,90,161,208,140,65,20,174,17,87,67,183 };
    byte_vec_t pk { 3,34,142,214,245,132,18,128,60,253,216,224,166,199,154,193,106,178,200,172,88,154,93,159,172,189,197,138,116,197,102,102,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 370 ") {
    byte_vec_t msg { 92,125,217,181 };
    byte_vec_t sig { 105,121,97,115,102,5,7,165,47,47,82,205,137,107,28,228,126,102,65,84,31,52,89,105,92,7,252,86,205,137,51,147,124,176,35,40,65,143,132,153,192,185,29,39,168,139,191,128,25,55,99,168,178,53,150,57,197,69,82,120,97,20,124,46 };
    byte_vec_t pk { 4,133,193,108,179,169,112,220,44,95,83,173,237,208,252,167,52,145,91,93,46,1,218,80,181,167,173,206,25,101,14,174,221,111,124,250,233,254,242,174,124,187,246,23,196,74,45,240,231,84,112,244,216,207,150,81,80,103,116,81,77,210,230,118,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 370 ") {
    byte_vec_t msg { 87,28,119,50 };
    byte_vec_t sig { 119,242,213,255,26,199,192,3,123,176,205,22,65,53,159,210,157,77,237,155,24,52,251,152,67,77,162,13,182,79,34,141,178,139,51,69,88,194,167,196,231,163,188,200,20,190,60,192,44,0,134,177,98,195,58,162,33,75,208,159,21,104,122,221 };
    byte_vec_t pk { 4,9,222,114,206,36,160,187,119,55,97,159,114,8,95,227,86,183,200,65,86,239,107,237,200,157,64,215,104,133,5,53,98,168,61,9,111,139,57,235,80,116,105,168,46,174,233,151,96,15,136,251,189,94,27,139,170,58,86,24,88,204,156,192,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 370 ") {
    byte_vec_t msg { 209,65,160,146 };
    byte_vec_t sig { 9,213,246,244,98,130,109,26,245,198,13,102,53,226,44,197,149,238,216,75,184,215,168,211,251,100,215,160,152,86,8,246,86,0,223,173,91,156,194,13,146,217,246,50,144,173,80,144,36,82,103,200,224,58,121,98,44,215,61,143,116,46,25,104 };
    byte_vec_t pk { 2,249,94,120,12,204,102,163,93,31,229,184,57,228,242,105,84,159,201,71,46,194,187,232,134,184,219,72,6,0,132,58,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 370 ") {
    byte_vec_t msg { 218,160,158,153 };
    byte_vec_t sig { 221,162,115,115,213,6,191,58,86,192,3,160,22,140,170,74,7,60,15,76,195,241,149,170,184,229,113,252,213,85,142,78,115,191,12,160,241,60,46,253,46,217,87,131,246,91,184,210,173,158,206,236,84,122,231,2,92,16,84,53,175,183,254,6 };
    byte_vec_t pk { 3,66,229,187,203,212,73,26,189,191,116,104,249,111,99,137,21,182,45,137,106,143,74,245,201,45,74,130,84,2,138,128,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 371 ") {
    byte_vec_t msg { 250,174,102,24 };
    byte_vec_t sig { 19,233,119,0,139,74,119,192,43,15,57,133,145,89,159,53,100,182,95,249,6,130,138,120,30,201,107,98,62,63,170,147,96,77,163,143,117,95,22,230,24,65,171,53,92,225,71,203,132,182,182,218,201,144,214,251,43,5,16,123,14,118,182,125 };
    byte_vec_t pk { 4,221,197,44,225,91,4,187,17,19,232,135,137,231,225,44,2,169,13,169,221,190,149,221,162,143,5,121,184,212,206,199,136,159,88,34,237,245,147,128,233,217,90,122,96,150,114,54,246,3,70,220,204,201,160,77,162,43,102,30,195,19,87,105,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 371 ") {
    byte_vec_t msg { 25,113,166,234 };
    byte_vec_t sig { 111,39,254,37,50,151,149,155,247,24,85,228,49,250,156,207,69,175,175,69,235,244,53,115,27,234,197,70,85,71,254,148,189,140,212,241,118,18,18,153,57,24,77,255,116,201,101,227,51,29,58,171,152,142,56,235,48,94,209,141,111,62,0,89 };
    byte_vec_t pk { 4,36,60,50,246,196,201,231,38,255,141,197,135,26,137,20,133,124,240,10,30,65,132,8,194,7,98,179,244,74,252,183,74,119,173,200,84,136,7,194,242,174,129,55,175,45,30,133,185,68,230,98,64,12,167,60,90,29,88,101,188,206,48,22,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 371 ") {
    byte_vec_t msg { 223,199,239,51 };
    byte_vec_t sig { 144,228,171,90,0,226,181,190,187,60,103,81,68,85,229,111,208,208,191,73,186,169,177,145,94,253,93,14,92,140,162,119,106,255,249,38,178,120,215,25,113,21,217,191,189,60,151,17,50,75,192,239,12,93,202,125,55,193,161,156,97,181,137,139 };
    byte_vec_t pk { 3,105,155,203,96,94,131,92,189,219,77,233,85,3,167,231,46,173,98,217,56,23,31,174,15,211,161,180,247,197,38,32,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 371 ") {
    byte_vec_t msg { 197,65,71,65 };
    byte_vec_t sig { 126,123,155,53,151,172,20,144,151,124,151,22,47,45,65,253,4,102,69,107,156,152,69,97,2,67,222,26,3,213,46,231,232,59,1,190,100,156,11,135,25,50,50,48,222,182,159,228,187,102,238,12,242,139,80,20,119,139,56,164,234,218,64,144 };
    byte_vec_t pk { 2,110,7,122,93,180,183,230,33,198,78,167,209,96,227,92,44,93,44,211,164,247,96,78,196,109,157,148,106,216,160,19,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 372 ") {
    byte_vec_t msg { 180,4,223,168 };
    byte_vec_t sig { 26,97,100,98,121,84,101,164,205,129,241,34,24,65,131,36,56,147,211,86,191,83,44,86,122,38,149,77,28,147,228,169,92,8,203,21,47,182,251,145,96,181,112,96,223,85,201,163,224,240,95,36,8,30,238,125,225,181,51,46,222,236,5,108 };
    byte_vec_t pk { 4,51,232,212,24,30,107,8,2,49,217,38,165,185,72,76,13,255,186,72,246,231,98,10,30,186,50,99,197,53,243,95,204,122,11,224,195,229,122,251,73,46,52,59,204,219,97,76,231,125,208,195,170,208,208,163,112,128,0,53,58,28,154,209,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 372 ") {
    byte_vec_t msg { 36,84,83,115 };
    byte_vec_t sig { 86,145,24,159,211,195,178,206,227,113,64,0,14,44,138,226,135,63,219,202,116,231,181,243,191,214,199,228,61,8,140,6,192,135,96,73,75,211,147,62,151,84,2,168,35,75,235,77,4,105,33,197,179,204,83,168,35,8,46,155,7,9,254,137 };
    byte_vec_t pk { 4,250,181,47,33,126,88,12,3,179,56,212,181,250,76,76,208,38,197,126,104,28,252,14,214,193,184,39,53,14,157,204,244,138,199,182,196,32,204,63,21,206,109,110,205,11,248,23,230,204,178,64,83,49,126,167,4,9,244,189,221,180,72,179,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 372 ") {
    byte_vec_t msg { 147,2,174,153 };
    byte_vec_t sig { 164,195,207,249,122,109,218,158,32,229,166,132,183,228,174,194,152,129,33,234,246,91,220,28,171,157,142,9,200,29,167,103,167,108,12,30,33,232,89,149,119,238,21,247,177,250,74,61,153,3,228,219,205,12,183,147,254,135,68,113,111,155,241,72 };
    byte_vec_t pk { 2,178,22,86,253,10,243,102,166,74,97,243,12,31,175,249,83,69,21,47,29,117,74,162,242,183,197,7,196,39,153,173,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 372 ") {
    byte_vec_t msg { 186,164,106,161 };
    byte_vec_t sig { 97,163,6,180,52,138,225,255,193,47,66,219,248,26,120,173,107,24,174,178,83,164,79,46,134,52,132,146,192,38,21,104,244,204,255,48,100,28,172,65,145,18,178,68,226,222,160,201,201,185,141,59,116,176,113,183,100,132,178,191,224,51,167,89 };
    byte_vec_t pk { 3,20,197,48,86,186,204,163,1,0,170,44,86,30,141,7,111,138,196,190,158,239,176,102,68,92,253,216,0,193,128,105,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 373 ") {
    byte_vec_t msg { 182,73,113,157 };
    byte_vec_t sig { 25,123,30,47,114,10,238,51,49,146,158,253,255,155,77,114,166,1,19,231,194,170,168,98,19,34,95,119,241,201,214,223,149,44,20,88,2,122,172,80,253,179,191,151,127,81,117,199,216,57,110,147,149,139,40,112,232,231,43,154,125,10,176,187 };
    byte_vec_t pk { 4,210,93,80,116,49,252,8,11,203,5,233,164,48,117,142,158,118,113,71,112,15,78,121,249,49,167,4,209,34,73,47,75,147,52,166,114,233,217,108,222,15,104,38,97,186,182,104,182,221,167,141,215,176,53,9,73,239,118,108,221,236,12,212,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 373 ") {
    byte_vec_t msg { 250,110,59,121 };
    byte_vec_t sig { 183,47,94,13,80,50,221,62,71,186,32,34,189,58,163,110,64,251,218,2,49,55,60,129,86,90,237,231,163,22,100,168,117,33,42,221,240,114,130,217,186,4,132,42,66,44,203,48,36,5,16,242,155,35,159,219,131,227,192,108,102,104,232,23 };
    byte_vec_t pk { 4,227,211,7,69,217,189,70,87,167,89,74,215,223,220,212,109,107,234,8,232,143,95,152,78,84,254,165,157,84,172,235,95,163,20,2,53,169,20,6,33,236,232,135,86,184,88,119,181,197,107,174,12,196,1,156,61,209,196,223,99,106,45,241,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 373 ") {
    byte_vec_t msg { 101,61,70,189 };
    byte_vec_t sig { 40,170,131,174,116,252,203,154,27,223,3,12,243,248,110,106,129,216,251,242,14,138,216,63,242,219,48,148,154,37,246,64,59,55,203,95,79,128,178,253,107,74,120,177,218,116,173,5,50,31,196,140,11,106,193,122,163,172,47,31,147,101,158,68 };
    byte_vec_t pk { 3,20,136,224,71,244,208,116,104,134,78,185,102,162,251,232,209,32,15,136,167,242,87,155,96,228,186,99,203,80,6,121,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 373 ") {
    byte_vec_t msg { 181,207,17,126 };
    byte_vec_t sig { 206,167,205,102,10,101,178,185,254,122,224,58,244,158,119,250,27,92,181,15,136,142,206,31,35,211,20,59,132,91,35,121,239,35,221,54,111,223,114,20,206,61,255,25,26,87,185,0,198,86,64,188,98,124,194,239,101,125,162,76,44,212,73,157 };
    byte_vec_t pk { 3,197,215,195,196,213,112,133,4,29,219,116,114,220,205,247,250,161,23,128,193,109,235,32,82,149,138,91,99,145,9,100,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 374 ") {
    byte_vec_t msg { 97,148,245,181 };
    byte_vec_t sig { 189,185,53,24,255,35,207,250,188,203,188,15,233,41,90,111,117,206,32,113,146,255,254,190,111,87,195,62,66,186,19,254,213,85,132,4,173,143,43,17,89,119,123,124,190,54,199,76,7,9,51,101,174,218,162,186,91,90,56,247,57,89,99,53 };
    byte_vec_t pk { 4,77,200,95,112,208,227,99,203,59,8,212,184,151,84,15,140,21,25,132,154,156,58,10,41,96,72,251,15,139,127,187,164,68,142,132,116,219,255,87,81,254,231,148,197,0,181,191,160,104,220,84,7,199,190,3,255,130,89,246,58,223,19,247,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 374 ") {
    byte_vec_t msg { 221,203,218,197 };
    byte_vec_t sig { 102,69,11,168,106,248,68,150,193,173,236,28,219,194,119,24,70,91,50,84,125,61,248,11,91,28,230,128,152,188,99,45,234,223,191,220,151,148,96,59,199,171,219,90,24,232,238,202,108,146,237,233,203,210,163,236,150,217,167,32,113,238,245,233 };
    byte_vec_t pk { 4,41,58,74,78,246,199,131,175,222,110,37,176,224,42,89,241,152,116,164,58,64,186,118,255,91,44,130,67,99,121,37,183,168,187,85,68,246,84,203,117,182,230,194,247,82,189,153,45,90,51,113,6,33,234,196,10,191,60,11,115,17,240,174,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 374 ") {
    byte_vec_t msg { 252,77,154,21 };
    byte_vec_t sig { 153,2,68,16,7,179,37,94,5,36,82,97,105,150,158,0,237,63,245,119,24,196,99,172,65,232,159,57,96,58,252,232,233,233,99,4,120,111,101,218,58,115,112,82,139,87,42,204,247,225,238,130,31,65,55,39,148,171,10,25,76,95,187,107 };
    byte_vec_t pk { 3,65,227,135,238,84,150,220,242,81,167,206,2,226,200,112,247,62,242,252,255,11,31,126,241,119,103,75,191,113,168,229,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 374 ") {
    byte_vec_t msg { 53,208,140,22 };
    byte_vec_t sig { 174,148,205,172,120,197,101,169,79,78,97,114,194,240,27,147,11,186,231,104,55,173,249,69,38,234,217,153,218,224,80,146,242,97,144,58,69,158,143,224,169,58,186,40,229,131,238,158,14,107,24,197,104,146,54,180,14,158,75,92,30,28,165,120 };
    byte_vec_t pk { 2,92,203,86,22,31,216,21,41,229,23,56,39,90,32,175,140,61,130,216,13,234,142,28,136,172,54,145,99,123,190,106,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 375 ") {
    byte_vec_t msg { 92,82,252,165 };
    byte_vec_t sig { 188,210,206,62,164,27,180,5,166,195,200,150,123,93,228,209,52,170,90,76,154,153,157,226,60,21,26,187,226,10,68,217,45,195,201,125,237,184,47,125,96,205,248,169,118,232,211,198,52,123,96,224,211,31,139,73,124,43,126,39,125,131,53,45 };
    byte_vec_t pk { 4,161,151,193,1,117,70,226,159,28,111,220,217,29,213,255,5,40,130,83,188,100,59,157,242,134,242,225,47,112,16,226,48,45,73,149,128,43,77,2,162,215,239,85,11,65,7,58,72,1,56,172,247,77,215,188,94,54,189,35,93,166,98,178,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 375 ") {
    byte_vec_t msg { 127,152,250,139 };
    byte_vec_t sig { 240,38,195,21,160,116,255,7,77,70,162,250,125,226,255,99,246,195,203,35,33,202,208,55,123,209,174,149,216,74,56,75,111,96,242,122,31,24,120,236,33,227,124,158,127,185,186,29,33,179,171,94,17,138,232,92,142,221,48,13,59,131,34,233 };
    byte_vec_t pk { 4,208,182,162,222,178,170,13,130,171,6,45,26,136,30,250,190,197,77,171,20,228,37,26,95,58,210,213,13,105,25,21,136,220,107,210,62,24,87,230,59,132,28,239,125,42,203,154,225,75,182,107,51,176,116,14,190,96,233,154,36,30,173,131,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 375 ") {
    byte_vec_t msg { 20,245,35,245 };
    byte_vec_t sig { 78,68,112,89,186,222,149,64,136,45,176,49,211,7,64,98,75,219,171,153,17,20,132,122,17,62,144,165,2,147,73,59,70,48,178,68,217,54,119,17,55,62,228,219,73,62,75,136,28,253,192,32,65,203,129,18,74,32,193,35,196,64,113,13 };
    byte_vec_t pk { 3,182,221,76,205,56,164,121,121,81,174,210,24,97,70,89,68,37,230,46,13,65,55,189,219,232,211,76,233,181,225,110,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 375 ") {
    byte_vec_t msg { 14,134,52,45 };
    byte_vec_t sig { 202,167,221,30,211,148,212,127,235,191,186,143,169,181,226,9,79,184,26,255,9,232,232,100,226,138,173,34,74,194,229,76,91,35,111,204,38,3,156,175,63,203,240,8,55,135,134,239,6,80,138,233,219,184,192,154,127,36,170,214,163,111,12,118 };
    byte_vec_t pk { 2,222,96,33,119,241,181,136,77,189,33,146,245,48,140,144,242,161,88,162,160,222,153,213,93,44,232,172,64,5,204,161,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 376 ") {
    byte_vec_t msg { 97,253,35,176 };
    byte_vec_t sig { 191,56,251,148,201,89,35,244,243,95,43,138,106,43,87,170,115,236,199,151,98,183,59,196,234,92,116,13,79,32,211,159,207,168,217,162,42,198,146,34,147,203,132,185,218,10,124,19,71,80,138,177,74,13,250,29,196,35,216,26,167,30,232,69 };
    byte_vec_t pk { 4,23,3,193,104,59,52,212,118,197,161,136,230,209,82,212,41,237,156,172,42,213,141,130,231,63,188,255,252,85,204,9,83,17,199,17,184,56,147,220,9,218,138,75,118,186,18,91,182,153,228,212,180,196,126,157,10,225,158,243,253,115,219,124,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 376 ") {
    byte_vec_t msg { 234,29,26,236 };
    byte_vec_t sig { 13,40,108,65,164,107,24,192,130,238,247,50,51,15,194,195,49,61,140,153,241,148,175,132,36,242,172,162,240,181,12,181,99,252,103,70,188,48,62,127,142,122,63,128,0,214,206,50,229,244,4,218,32,15,104,175,212,168,105,27,138,209,246,187 };
    byte_vec_t pk { 4,89,127,106,194,26,24,61,200,14,138,144,74,110,179,208,159,204,250,63,89,187,35,220,102,158,149,174,101,238,99,197,135,180,7,146,240,55,131,123,191,92,94,225,151,238,235,112,77,224,10,56,116,136,7,29,218,101,94,189,90,27,66,76,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 376 ") {
    byte_vec_t msg { 241,120,92,135 };
    byte_vec_t sig { 144,191,145,6,30,242,95,118,186,206,1,126,224,132,98,65,27,205,239,152,50,68,47,26,30,213,43,235,180,99,48,46,142,10,147,177,151,37,129,11,74,157,68,102,169,101,104,226,103,176,5,77,52,237,69,120,78,41,158,170,195,215,234,98 };
    byte_vec_t pk { 3,76,168,126,176,169,237,197,222,219,239,199,12,211,103,141,127,88,92,144,224,121,219,113,76,169,230,3,42,117,100,222,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 376 ") {
    byte_vec_t msg { 184,2,178,108 };
    byte_vec_t sig { 3,95,200,112,44,71,131,80,45,33,57,110,99,178,61,143,237,187,2,199,11,137,239,165,218,13,87,80,84,201,67,183,193,200,11,75,120,12,124,152,166,23,193,47,227,191,196,22,186,192,73,21,160,128,53,174,138,31,206,189,73,131,221,63 };
    byte_vec_t pk { 3,64,207,138,107,49,113,239,53,118,189,231,185,219,133,50,35,138,225,128,91,243,35,23,99,59,129,161,180,100,155,102,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 377 ") {
    byte_vec_t msg { 193,142,98,152 };
    byte_vec_t sig { 251,147,53,95,110,100,9,123,15,163,79,17,118,53,83,237,140,204,99,163,169,216,34,233,5,230,170,96,116,20,150,26,247,165,202,150,230,186,151,160,111,198,143,43,246,174,176,17,58,157,156,131,79,24,7,174,243,114,108,29,195,75,55,253 };
    byte_vec_t pk { 4,80,30,113,197,42,224,14,206,119,169,84,105,58,54,187,52,136,254,166,244,150,25,91,112,39,131,131,101,162,182,170,97,199,218,236,206,171,197,244,157,24,84,64,78,48,42,226,36,5,162,56,233,190,20,90,213,27,28,85,91,97,14,31,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 377 ") {
    byte_vec_t msg { 163,200,246,2 };
    byte_vec_t sig { 14,122,100,198,40,192,189,242,55,220,234,140,75,0,69,118,27,226,198,5,138,140,216,141,119,40,182,4,248,111,227,138,22,81,103,164,133,172,252,98,206,195,167,133,19,87,115,51,166,201,242,31,43,156,28,37,22,193,255,151,226,100,105,96 };
    byte_vec_t pk { 4,70,161,128,51,242,14,17,252,44,90,120,201,206,160,27,194,130,186,59,191,242,211,92,226,68,45,234,85,49,238,55,55,5,54,175,21,67,25,165,35,19,154,128,175,201,248,129,192,63,14,181,227,37,155,72,62,154,57,121,90,173,76,220,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 377 ") {
    byte_vec_t msg { 161,9,56,207 };
    byte_vec_t sig { 67,53,137,239,242,30,206,164,23,213,166,128,75,143,239,68,229,248,96,86,111,22,210,25,69,71,113,211,126,141,57,246,125,94,210,228,83,207,10,85,231,146,9,196,147,130,72,147,144,238,216,89,244,196,9,214,6,121,51,115,204,126,232,168 };
    byte_vec_t pk { 2,10,21,144,103,91,205,57,99,3,215,91,41,177,41,158,127,93,191,197,19,198,9,120,59,79,162,39,129,232,92,241,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 377 ") {
    byte_vec_t msg { 196,125,247,88 };
    byte_vec_t sig { 252,133,87,181,77,177,109,116,175,2,124,70,219,35,82,90,188,28,41,34,69,45,18,124,29,250,225,167,53,115,219,44,238,181,40,13,150,91,98,7,164,48,110,162,4,171,251,11,106,130,137,252,165,217,20,84,85,44,192,140,123,80,119,116 };
    byte_vec_t pk { 3,129,235,183,135,3,98,241,222,37,209,104,246,179,138,216,146,133,111,144,218,190,160,53,234,26,57,104,40,153,185,200,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 378 ") {
    byte_vec_t msg { 2,139,35,121 };
    byte_vec_t sig { 152,102,139,21,10,138,176,232,182,153,217,11,40,130,38,133,158,154,133,240,246,2,108,9,233,235,168,85,206,210,48,172,169,205,33,207,104,102,238,43,129,203,239,166,52,120,68,153,47,51,4,115,90,49,90,67,48,103,162,140,214,24,120,217 };
    byte_vec_t pk { 4,166,51,51,15,91,229,83,4,168,209,136,74,192,81,87,188,246,219,196,70,21,221,168,20,180,190,71,231,35,184,174,134,175,126,242,226,102,216,105,124,72,200,10,73,236,123,127,107,238,49,128,220,3,101,24,99,64,95,212,15,123,192,8,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 378 ") {
    byte_vec_t msg { 168,73,220,62 };
    byte_vec_t sig { 120,86,57,53,223,123,165,76,39,76,189,64,104,245,183,127,84,74,158,45,177,135,154,109,64,90,0,67,115,236,228,230,140,252,15,176,167,196,55,49,100,82,161,109,149,110,172,247,18,77,50,56,243,38,39,244,211,247,143,134,78,129,84,41 };
    byte_vec_t pk { 4,163,183,136,63,247,25,42,3,46,36,124,167,164,126,68,29,97,24,70,148,241,164,84,227,56,17,171,113,69,108,169,183,242,19,119,160,181,156,220,37,162,211,238,158,62,76,78,176,177,128,191,244,50,50,114,142,87,150,83,228,33,211,177,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 378 ") {
    byte_vec_t msg { 202,183,128,132 };
    byte_vec_t sig { 187,245,171,110,244,29,12,185,162,97,4,50,152,130,76,187,95,216,142,173,183,180,161,240,187,252,225,159,70,54,4,190,232,183,151,200,106,156,72,43,158,90,185,155,138,65,185,182,211,172,35,100,80,187,117,206,204,61,161,184,0,26,110,111 };
    byte_vec_t pk { 3,123,188,121,103,17,52,132,57,145,109,124,19,6,81,58,167,232,25,35,219,249,64,98,191,106,193,153,104,65,97,95,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 378 ") {
    byte_vec_t msg { 67,56,172,250 };
    byte_vec_t sig { 149,124,222,49,18,134,194,6,217,209,190,166,128,242,52,27,38,156,64,182,61,229,236,144,157,48,247,53,238,23,233,61,247,231,245,85,214,109,83,199,28,127,87,193,217,187,56,85,151,207,249,182,76,117,144,34,20,161,65,50,249,236,19,44 };
    byte_vec_t pk { 2,240,236,96,159,155,135,3,124,9,240,123,83,161,247,72,44,229,7,83,105,180,204,72,216,164,194,47,17,55,9,146,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 379 ") {
    byte_vec_t msg { 11,191,183,138 };
    byte_vec_t sig { 112,77,91,44,112,244,78,105,145,217,204,23,241,78,58,178,109,255,60,96,13,116,193,105,161,29,37,220,83,134,150,183,205,155,125,113,224,36,105,143,197,119,208,207,248,114,153,182,102,131,112,89,71,137,160,222,73,53,160,163,170,35,111,189 };
    byte_vec_t pk { 4,166,54,201,191,188,229,41,145,100,17,71,250,93,205,66,171,81,99,214,186,47,1,95,15,3,236,42,165,246,52,172,61,121,33,22,96,11,205,202,142,29,136,235,216,17,194,141,180,32,32,204,89,177,166,35,35,189,152,20,174,34,133,69,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 379 ") {
    byte_vec_t msg { 208,240,202,183 };
    byte_vec_t sig { 224,109,149,198,212,72,60,146,190,141,205,175,28,76,239,89,146,226,97,64,11,239,107,45,30,134,81,114,244,228,48,34,239,116,172,194,92,141,42,47,91,165,167,145,126,180,169,127,200,189,140,1,127,37,51,122,156,145,157,217,80,72,33,31 };
    byte_vec_t pk { 4,172,95,25,31,135,31,190,240,151,120,170,55,155,176,199,191,6,202,119,18,155,81,248,57,19,73,139,76,224,87,22,93,26,129,255,171,205,151,223,41,207,136,141,90,159,105,91,72,234,1,74,196,236,4,224,67,252,139,192,127,221,20,110,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 379 ") {
    byte_vec_t msg { 178,118,78,164 };
    byte_vec_t sig { 112,131,101,36,185,81,73,47,57,238,36,3,40,222,247,165,29,133,182,161,70,14,25,91,138,210,9,197,66,1,18,107,71,229,106,246,99,57,106,168,219,233,153,99,41,241,1,134,107,80,126,212,76,193,70,18,146,30,123,228,155,116,77,186 };
    byte_vec_t pk { 2,160,236,253,153,85,21,221,157,39,230,33,88,88,121,115,28,235,255,32,22,229,74,26,168,171,191,77,217,112,7,112,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 379 ") {
    byte_vec_t msg { 9,206,105,204 };
    byte_vec_t sig { 219,96,77,114,27,212,16,19,70,222,12,205,123,174,103,114,229,159,200,128,135,134,241,237,20,56,149,136,188,38,69,120,59,130,194,115,62,22,179,217,205,220,231,8,190,6,54,13,41,74,153,64,145,92,146,214,126,31,137,43,187,72,60,206 };
    byte_vec_t pk { 2,9,226,202,181,135,150,12,223,44,193,228,125,229,140,253,200,113,246,154,213,157,145,30,241,250,226,161,226,171,194,234,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 380 ") {
    byte_vec_t msg { 160,210,181,159 };
    byte_vec_t sig { 166,47,104,18,203,50,150,85,142,118,161,149,252,166,245,25,129,96,151,161,238,232,234,76,76,217,29,66,185,195,14,236,182,122,151,193,120,27,63,93,165,19,20,164,105,31,109,203,62,22,35,94,4,180,254,19,58,147,195,158,137,100,172,197 };
    byte_vec_t pk { 4,140,87,2,86,111,24,133,253,66,150,72,187,238,140,158,234,236,199,108,4,97,123,98,116,111,142,184,70,2,202,54,167,72,234,20,230,200,91,126,0,197,101,30,137,122,181,21,150,187,180,8,7,132,207,168,89,66,69,250,91,31,248,205,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 380 ") {
    byte_vec_t msg { 171,6,144,116 };
    byte_vec_t sig { 21,190,214,45,38,113,192,62,148,106,76,198,40,64,59,148,94,173,183,120,187,147,208,173,58,98,93,241,44,177,22,139,223,149,97,224,203,16,187,85,89,179,228,181,228,153,88,68,101,105,17,159,164,8,152,15,195,25,126,194,67,98,8,121 };
    byte_vec_t pk { 4,145,82,120,211,241,20,179,107,169,58,63,23,163,216,235,163,145,239,72,8,192,65,15,242,151,20,91,75,1,144,18,138,147,125,24,157,188,243,242,196,211,213,36,157,139,67,174,242,87,85,63,23,144,91,87,232,223,56,58,255,159,170,92,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 380 ") {
    byte_vec_t msg { 230,159,109,171 };
    byte_vec_t sig { 232,51,233,8,7,222,79,72,155,217,115,50,63,15,22,138,1,76,76,153,53,180,206,54,191,8,235,200,179,60,160,205,244,148,240,250,31,77,5,7,200,152,25,22,202,158,98,213,236,142,26,219,160,16,101,97,178,112,96,53,207,253,66,96 };
    byte_vec_t pk { 3,233,99,38,2,23,16,213,112,111,181,30,250,148,136,156,151,77,26,94,192,55,103,95,50,80,165,84,240,248,173,108,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 380 ") {
    byte_vec_t msg { 97,229,204,164 };
    byte_vec_t sig { 47,109,218,124,48,85,243,162,206,217,226,246,65,132,198,72,233,121,111,110,201,213,141,232,8,120,146,69,109,215,71,102,109,163,179,218,142,197,205,169,243,3,213,51,193,117,74,67,156,246,9,112,32,213,169,172,189,47,136,136,251,198,59,181 };
    byte_vec_t pk { 3,218,206,45,193,65,8,85,181,43,62,140,176,5,7,37,126,62,244,92,5,47,140,200,130,199,217,145,79,159,25,217,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 381 ") {
    byte_vec_t msg { 227,67,186,140 };
    byte_vec_t sig { 230,37,157,236,136,229,11,58,14,89,248,254,146,189,24,59,107,206,184,13,174,133,161,149,202,35,221,193,226,106,111,115,156,235,116,0,244,68,104,4,130,107,6,78,207,244,60,252,221,125,222,108,214,56,234,122,201,162,130,134,158,19,136,5 };
    byte_vec_t pk { 4,51,54,159,39,23,24,208,145,95,249,177,165,79,140,141,237,246,144,57,120,209,60,87,250,29,26,115,108,21,114,48,192,88,194,176,149,242,169,33,94,203,173,180,98,210,130,11,71,153,180,204,81,165,46,46,137,61,114,103,39,246,11,3,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 381 ") {
    byte_vec_t msg { 197,136,116,183 };
    byte_vec_t sig { 45,238,95,64,159,219,42,100,197,135,81,7,196,122,118,17,201,93,112,241,94,102,224,158,174,32,90,206,199,78,125,58,51,34,217,58,230,16,216,100,145,127,176,70,9,130,88,32,189,49,27,69,172,116,42,22,175,147,134,227,234,212,188,153 };
    byte_vec_t pk { 4,222,122,195,115,101,68,37,193,203,165,248,145,18,12,55,38,82,244,113,58,87,106,48,34,178,145,221,164,191,177,93,31,9,255,118,101,47,116,247,178,67,243,0,224,5,202,143,162,223,0,70,41,74,121,156,141,170,71,188,196,179,81,250,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 381 ") {
    byte_vec_t msg { 141,211,227,14 };
    byte_vec_t sig { 36,138,58,157,31,138,228,102,204,15,32,102,66,74,168,121,1,0,203,55,38,109,138,135,89,140,67,230,114,9,122,166,205,248,176,98,25,87,171,190,207,25,133,136,193,250,36,98,223,134,138,217,8,211,32,176,96,160,187,40,165,144,131,116 };
    byte_vec_t pk { 2,100,109,167,251,25,35,131,178,157,198,253,57,136,69,242,141,106,164,253,134,174,112,233,137,97,123,144,29,154,51,211,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 381 ") {
    byte_vec_t msg { 93,213,78,205 };
    byte_vec_t sig { 244,137,50,121,167,29,84,102,171,195,210,176,1,162,92,32,25,171,165,35,53,119,109,5,107,57,171,242,115,187,76,218,141,246,198,11,232,97,191,20,189,142,111,97,71,217,196,29,60,2,81,178,220,2,86,197,195,117,197,206,113,215,101,233 };
    byte_vec_t pk { 3,255,145,27,78,219,202,229,234,76,60,11,193,252,219,247,210,222,254,247,230,229,179,97,1,225,184,138,187,174,76,246,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 382 ") {
    byte_vec_t msg { 201,197,106,62 };
    byte_vec_t sig { 68,21,134,132,251,226,154,71,72,94,222,61,186,100,139,60,100,87,137,132,96,167,5,17,52,99,87,222,7,217,167,19,93,219,171,209,50,195,16,198,210,40,44,238,100,192,190,67,68,212,56,80,242,17,45,51,32,194,49,82,192,13,145,139 };
    byte_vec_t pk { 4,106,89,108,193,240,94,99,114,150,16,2,211,135,215,71,67,48,198,147,70,96,195,8,134,165,97,158,227,125,129,63,5,221,235,153,151,135,59,121,7,36,89,81,69,130,41,126,177,117,78,187,117,83,128,71,243,91,64,200,76,158,3,204,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 382 ") {
    byte_vec_t msg { 237,149,219,18 };
    byte_vec_t sig { 212,30,128,251,234,254,215,109,195,140,87,116,180,164,56,87,134,220,173,198,48,250,164,151,113,114,164,48,190,135,103,169,64,130,221,112,180,231,219,224,139,156,56,182,21,75,144,210,16,84,46,24,49,106,224,168,168,46,194,42,159,246,240,117 };
    byte_vec_t pk { 4,131,232,53,177,171,207,29,44,174,88,110,88,11,99,104,48,21,131,110,169,106,168,80,2,40,68,110,239,117,15,228,129,170,105,149,120,200,26,174,87,148,67,133,137,230,75,215,190,133,145,67,68,84,43,82,252,146,33,62,89,164,12,19,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 382 ") {
    byte_vec_t msg { 253,21,44,204 };
    byte_vec_t sig { 30,90,125,63,58,199,48,225,108,18,174,253,24,189,184,22,101,123,15,58,80,111,213,237,157,226,250,42,14,73,47,40,39,40,185,238,189,247,113,70,19,56,79,125,93,104,148,127,83,113,126,106,222,58,122,214,51,46,236,238,231,224,191,211 };
    byte_vec_t pk { 3,45,35,94,142,165,127,7,245,133,3,196,117,188,241,205,9,228,225,173,201,80,51,179,206,143,149,148,16,20,138,215,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 382 ") {
    byte_vec_t msg { 61,39,57,4 };
    byte_vec_t sig { 141,184,145,77,246,207,221,166,204,174,157,161,103,60,49,156,185,80,56,215,126,108,34,28,13,5,129,206,193,121,206,50,11,216,245,60,134,159,97,196,22,224,43,86,152,45,110,183,119,209,191,100,159,93,251,141,244,93,86,76,219,79,32,124 };
    byte_vec_t pk { 3,104,184,68,203,206,86,99,213,37,149,237,116,232,122,59,221,173,57,105,90,108,142,223,101,106,97,45,0,92,65,198,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 383 ") {
    byte_vec_t msg { 8,34,77,105 };
    byte_vec_t sig { 174,226,221,225,195,24,38,40,40,203,199,209,133,230,68,93,34,246,7,250,155,201,198,55,133,62,168,81,155,80,210,16,133,101,75,93,96,160,140,157,210,57,109,178,67,124,0,229,192,75,57,180,207,142,189,203,128,156,13,209,5,169,211,232 };
    byte_vec_t pk { 4,25,134,79,30,13,241,116,183,142,87,179,13,184,84,221,212,162,209,86,240,220,10,138,25,47,116,214,237,222,48,84,253,99,158,64,200,247,253,65,48,46,254,153,65,35,59,79,131,82,175,25,199,219,254,227,13,61,149,91,116,56,238,58,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 383 ") {
    byte_vec_t msg { 180,162,2,243 };
    byte_vec_t sig { 194,2,69,200,252,155,107,119,192,72,76,133,127,53,22,74,138,185,45,63,197,28,13,238,121,220,142,32,209,22,194,133,71,146,141,148,20,148,200,221,87,9,86,131,129,223,55,73,88,93,205,8,47,42,140,79,80,216,181,100,114,5,140,30 };
    byte_vec_t pk { 4,65,9,86,204,13,102,59,140,245,4,197,243,188,160,52,232,89,224,204,186,101,42,39,222,218,120,229,175,234,236,92,65,143,57,164,127,74,165,204,190,29,229,29,214,79,197,122,235,62,8,190,53,97,49,174,196,233,204,55,90,131,138,156,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 383 ") {
    byte_vec_t msg { 183,51,152,87 };
    byte_vec_t sig { 31,203,66,91,68,241,114,230,76,90,248,124,55,212,187,210,87,45,200,227,28,6,199,157,161,220,252,176,191,154,122,119,10,248,255,33,41,120,222,115,114,143,226,137,131,57,244,213,246,152,252,108,5,186,62,22,10,126,194,128,199,116,92,97 };
    byte_vec_t pk { 2,129,230,77,14,149,43,215,57,218,74,78,11,56,140,122,221,236,8,119,99,2,192,6,90,9,68,216,50,94,231,157,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 383 ") {
    byte_vec_t msg { 207,18,253,45 };
    byte_vec_t sig { 41,61,69,6,63,208,61,126,184,79,72,76,70,69,218,147,101,110,70,24,63,215,171,12,146,174,37,181,248,237,159,81,75,230,170,66,162,69,147,111,36,141,193,214,129,136,105,3,103,114,103,41,131,180,160,17,183,127,156,171,156,231,122,173 };
    byte_vec_t pk { 2,243,131,78,52,230,129,231,79,230,207,104,115,199,61,222,90,13,42,41,17,255,94,166,48,195,4,62,92,41,130,216,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 384 ") {
    byte_vec_t msg { 71,226,68,250 };
    byte_vec_t sig { 186,26,110,84,31,142,64,54,13,87,53,156,194,104,147,70,1,236,169,113,49,52,174,5,6,146,47,8,251,69,143,9,190,115,146,74,48,236,39,247,115,192,38,25,151,191,117,36,19,237,186,230,89,107,69,3,200,204,195,74,25,68,141,32 };
    byte_vec_t pk { 4,181,76,138,64,201,52,29,204,142,252,7,112,212,12,194,110,212,118,246,131,225,49,155,34,253,44,44,191,182,215,109,14,212,20,11,250,8,67,117,243,9,249,223,153,48,87,25,126,91,116,159,118,104,87,42,145,227,132,170,164,145,49,120,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 384 ") {
    byte_vec_t msg { 3,118,249,159 };
    byte_vec_t sig { 126,128,246,169,136,45,180,237,115,101,172,99,28,67,222,151,245,140,26,46,220,40,254,75,217,148,8,85,89,241,44,37,83,85,128,188,195,124,207,112,179,239,80,119,35,203,27,166,101,203,46,16,75,17,164,140,13,132,136,218,134,107,171,232 };
    byte_vec_t pk { 4,139,154,95,144,133,55,187,112,152,87,67,161,73,144,196,76,109,243,201,228,98,199,91,207,80,21,99,179,236,66,215,40,42,228,156,237,67,157,175,71,210,167,244,77,72,131,113,133,201,250,191,44,230,215,114,194,73,223,143,227,78,98,38,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 384 ") {
    byte_vec_t msg { 63,111,26,197 };
    byte_vec_t sig { 89,212,174,98,115,94,96,194,107,106,205,110,216,13,197,50,42,15,224,241,198,58,134,34,235,81,231,7,158,160,136,229,25,50,207,163,216,143,213,185,58,96,238,174,22,115,200,151,105,209,187,229,6,217,219,236,138,136,24,155,118,20,115,138 };
    byte_vec_t pk { 3,185,21,201,239,106,217,6,108,249,254,233,51,242,19,29,21,237,101,47,229,61,78,8,164,146,183,242,238,94,226,106,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 384 ") {
    byte_vec_t msg { 238,166,239,202 };
    byte_vec_t sig { 167,62,192,105,110,186,105,76,2,44,147,181,181,161,30,227,235,84,104,105,180,35,106,241,50,253,161,252,63,76,68,185,219,103,26,96,85,248,170,108,134,209,27,252,192,81,169,136,52,82,103,151,149,180,168,161,4,164,120,246,37,40,32,94 };
    byte_vec_t pk { 2,121,148,0,150,143,135,10,216,184,144,187,110,242,223,20,180,4,255,153,105,80,167,89,186,196,87,233,178,136,105,112,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 385 ") {
    byte_vec_t msg { 166,127,215,198 };
    byte_vec_t sig { 189,74,186,27,189,220,78,198,104,171,217,221,21,159,199,12,213,109,223,72,3,77,53,63,235,78,63,11,243,100,176,56,228,147,85,167,169,56,209,105,180,24,64,77,174,54,252,250,229,81,178,206,197,69,219,87,188,149,139,133,109,176,86,200 };
    byte_vec_t pk { 4,251,122,231,217,218,4,4,78,78,238,212,50,224,178,58,92,126,53,23,62,242,111,203,35,29,36,231,184,233,11,19,168,145,165,185,73,249,183,128,212,213,68,45,218,192,90,211,47,38,151,14,223,110,236,38,214,155,174,241,208,55,158,226,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 385 ") {
    byte_vec_t msg { 92,227,145,255 };
    byte_vec_t sig { 89,147,73,68,162,8,213,245,191,62,7,157,112,218,155,101,200,243,243,66,138,134,203,251,6,57,252,71,54,114,131,205,73,195,166,177,205,16,232,104,121,52,232,90,198,185,77,30,161,201,232,138,31,188,185,47,238,160,243,189,195,163,251,86 };
    byte_vec_t pk { 4,126,9,136,54,80,226,131,163,254,80,176,154,100,118,224,44,196,146,98,121,243,193,115,239,166,174,105,98,234,100,147,33,179,224,19,248,213,86,215,167,2,252,30,195,138,126,155,117,75,232,136,33,205,205,106,137,35,39,223,18,17,42,23,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 385 ") {
    byte_vec_t msg { 29,111,29,106 };
    byte_vec_t sig { 24,153,186,52,139,247,132,238,133,149,233,169,78,150,191,226,179,51,210,124,180,159,210,183,250,47,100,209,201,170,233,1,199,75,96,106,183,213,30,125,167,65,162,187,139,95,68,54,255,233,213,190,73,68,138,249,66,20,157,152,95,71,158,119 };
    byte_vec_t pk { 2,153,117,92,181,103,230,234,209,28,123,139,186,125,140,102,185,254,32,193,102,199,138,231,129,126,174,29,247,224,202,141,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 385 ") {
    byte_vec_t msg { 159,243,12,22 };
    byte_vec_t sig { 131,116,147,182,6,48,120,231,122,189,168,58,130,49,78,117,219,189,219,56,155,144,191,179,46,183,173,71,80,6,36,128,251,31,226,171,36,9,89,246,106,248,240,142,114,67,150,3,162,22,58,146,114,122,144,234,3,103,123,150,106,74,184,21 };
    byte_vec_t pk { 3,91,37,6,217,34,236,247,54,6,3,139,78,102,201,37,208,99,12,137,166,181,109,223,128,180,157,210,0,179,34,31,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 386 ") {
    byte_vec_t msg { 231,239,154,44 };
    byte_vec_t sig { 253,214,216,7,184,69,74,209,120,78,210,42,120,110,206,99,21,37,118,20,57,37,253,231,11,45,161,153,156,191,78,46,80,232,5,23,65,127,180,235,224,2,49,233,230,174,238,176,237,76,102,239,76,80,106,157,107,235,64,141,63,56,3,246 };
    byte_vec_t pk { 4,79,123,208,123,200,120,60,245,97,246,234,34,52,150,189,88,58,136,66,155,57,165,180,245,64,255,33,96,18,97,151,92,125,235,38,230,102,34,113,107,110,12,177,188,100,154,217,198,10,97,62,19,93,113,175,34,139,53,31,208,177,145,149,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 386 ") {
    byte_vec_t msg { 33,72,115,91 };
    byte_vec_t sig { 23,224,23,210,128,37,148,234,179,208,114,5,123,145,1,179,93,188,45,123,20,37,79,29,216,135,195,19,16,192,162,248,237,71,20,143,129,224,96,67,215,158,108,148,129,240,151,217,99,172,120,79,110,26,220,223,98,23,162,59,244,140,29,218 };
    byte_vec_t pk { 4,194,34,86,90,178,125,90,105,231,24,84,154,14,195,59,235,241,40,76,14,167,7,44,158,180,142,168,102,237,139,183,32,194,77,166,184,72,75,154,22,200,165,29,47,184,55,165,206,127,9,113,84,44,160,40,12,162,103,105,128,129,87,116,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 386 ") {
    byte_vec_t msg { 217,217,185,55 };
    byte_vec_t sig { 122,28,120,105,16,85,92,40,139,63,198,111,37,43,188,138,41,246,247,175,200,117,25,90,13,219,190,7,11,198,186,89,124,228,112,112,129,88,13,94,159,47,49,199,109,234,226,125,66,159,161,225,92,104,224,230,242,246,153,72,65,147,149,97 };
    byte_vec_t pk { 3,229,175,24,146,203,180,28,157,142,13,126,42,197,183,164,155,66,44,216,168,28,167,164,231,156,150,137,207,204,11,12,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 386 ") {
    byte_vec_t msg { 120,121,99,169 };
    byte_vec_t sig { 84,155,242,173,170,22,15,253,123,198,140,195,102,207,101,219,143,136,169,17,62,158,88,245,5,130,179,250,99,101,58,90,218,231,82,73,155,29,140,17,146,23,163,87,53,34,110,132,195,45,126,249,136,246,7,23,35,45,191,207,136,210,44,48 };
    byte_vec_t pk { 2,23,107,102,52,144,165,231,121,12,6,56,26,21,179,14,227,153,168,244,179,73,21,241,6,97,70,11,1,128,188,28,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 387 ") {
    byte_vec_t msg { 25,76,168,23 };
    byte_vec_t sig { 151,135,114,87,178,240,105,126,127,219,246,127,181,129,89,82,114,231,82,42,66,148,238,144,192,22,44,32,235,87,98,184,158,195,23,61,33,37,73,163,94,140,169,123,49,58,208,90,241,193,104,170,67,4,135,69,42,85,9,207,60,108,44,247 };
    byte_vec_t pk { 4,95,200,135,196,135,45,185,125,129,178,169,50,177,139,31,56,227,40,167,14,136,108,195,167,154,65,45,232,152,198,29,207,240,15,128,134,51,69,249,15,155,54,1,68,241,168,33,44,180,154,20,180,6,202,146,52,168,81,197,156,79,55,235,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 387 ") {
    byte_vec_t msg { 103,30,11,243 };
    byte_vec_t sig { 94,87,102,150,228,66,246,216,82,206,95,160,28,92,60,61,148,205,147,213,71,13,104,193,24,113,225,98,27,102,117,72,7,220,200,178,107,27,48,29,216,113,22,220,101,58,20,254,7,145,149,72,167,122,88,144,101,24,220,47,130,72,175,142 };
    byte_vec_t pk { 4,93,190,87,214,167,69,168,15,85,160,201,173,41,249,255,226,216,130,103,145,213,145,212,29,14,27,77,239,202,100,191,153,17,146,8,28,70,130,132,6,131,32,7,145,119,177,198,214,246,15,208,180,202,101,183,88,1,205,95,1,233,74,119,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 387 ") {
    byte_vec_t msg { 166,73,62,55 };
    byte_vec_t sig { 148,220,85,218,40,99,129,243,137,137,127,7,251,143,79,141,36,204,96,227,124,192,41,0,37,56,16,198,24,13,79,229,251,161,180,78,225,228,61,50,49,58,253,8,255,169,205,93,228,2,70,211,33,77,144,239,66,124,125,145,168,185,185,82 };
    byte_vec_t pk { 3,14,231,242,4,143,3,243,194,249,142,42,203,65,111,130,52,105,109,13,16,156,178,247,117,172,165,104,164,68,230,169,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 387 ") {
    byte_vec_t msg { 208,37,27,176 };
    byte_vec_t sig { 245,126,82,59,94,41,167,165,34,63,78,123,26,105,11,204,187,207,178,111,129,138,92,86,154,40,234,115,103,237,45,59,26,240,165,104,243,174,235,112,27,148,255,254,175,92,108,176,54,154,20,0,6,226,47,76,192,74,160,24,81,33,184,212 };
    byte_vec_t pk { 2,13,13,15,38,30,214,222,119,19,112,0,85,103,30,61,155,11,114,155,31,43,222,218,174,148,206,39,87,0,207,248,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 388 ") {
    byte_vec_t msg { 181,130,96,122 };
    byte_vec_t sig { 163,95,100,156,41,219,139,195,12,109,152,54,147,166,86,155,117,171,171,81,178,251,15,54,222,55,111,168,119,232,99,214,220,9,212,201,224,168,64,7,152,75,170,74,2,117,185,222,209,228,50,118,127,249,74,156,250,110,92,3,183,2,81,41 };
    byte_vec_t pk { 4,107,88,147,64,81,110,119,182,29,21,74,28,54,231,173,202,151,160,114,127,250,186,244,173,204,244,103,113,62,59,103,53,224,187,2,71,91,2,233,102,139,115,229,227,235,87,226,174,92,19,45,61,255,189,83,110,53,196,0,220,183,146,112,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 388 ") {
    byte_vec_t msg { 12,64,236,208 };
    byte_vec_t sig { 67,146,221,243,226,253,13,32,132,99,159,0,61,83,31,203,147,193,129,108,234,51,73,244,89,163,58,75,34,229,228,86,204,78,48,163,212,163,12,152,122,225,254,4,99,67,98,159,112,48,149,63,96,4,247,93,168,254,58,226,210,83,104,25 };
    byte_vec_t pk { 4,155,101,187,32,165,205,85,255,245,212,51,159,231,92,4,162,25,217,118,185,200,176,183,24,233,161,32,232,89,146,164,250,214,110,20,243,253,56,18,200,105,56,39,234,1,23,83,212,241,226,99,236,186,211,188,86,72,252,242,142,14,225,181,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 388 ") {
    byte_vec_t msg { 210,106,163,74 };
    byte_vec_t sig { 120,80,196,172,233,149,159,72,200,168,51,118,168,224,44,238,186,34,89,205,102,70,198,81,234,86,99,210,149,218,44,80,18,137,249,222,205,26,26,136,204,113,56,163,84,202,157,11,155,66,21,3,254,117,247,32,49,165,52,249,70,222,38,130 };
    byte_vec_t pk { 2,195,171,73,209,5,239,105,205,57,42,206,94,85,167,141,92,104,71,205,137,227,204,224,242,51,170,68,32,227,147,102,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 388 ") {
    byte_vec_t msg { 253,195,253,226 };
    byte_vec_t sig { 164,51,178,44,225,106,84,192,164,86,191,105,184,119,99,102,191,174,179,206,89,210,106,125,31,112,7,251,128,163,119,216,25,168,182,56,13,141,95,117,161,3,157,249,190,135,229,117,139,208,138,138,126,216,234,13,219,194,114,73,59,215,248,46 };
    byte_vec_t pk { 2,94,89,158,157,28,189,207,89,41,140,228,60,7,225,177,47,88,128,195,152,43,178,32,64,192,68,220,22,73,209,189,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 389 ") {
    byte_vec_t msg { 91,222,88,252 };
    byte_vec_t sig { 179,79,108,86,74,82,146,249,100,74,40,134,29,136,165,69,206,152,128,140,7,232,219,30,181,75,41,3,101,193,77,27,80,203,108,226,14,236,195,238,141,163,169,176,74,125,220,170,98,200,127,35,126,183,19,146,4,96,222,135,142,211,69,142 };
    byte_vec_t pk { 4,241,163,46,253,164,63,192,136,206,235,36,232,181,154,7,208,77,160,217,4,169,117,56,20,130,15,204,11,120,146,23,146,31,227,227,190,198,81,194,54,69,0,210,233,163,47,187,133,166,42,105,116,105,94,247,1,158,93,4,48,27,117,128,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 389 ") {
    byte_vec_t msg { 125,138,43,222 };
    byte_vec_t sig { 59,219,167,169,28,166,32,51,215,10,16,46,125,80,148,101,165,134,100,156,141,64,156,41,244,7,85,171,108,254,114,14,242,190,235,154,47,234,53,214,123,246,35,2,114,75,191,255,67,166,60,235,236,194,209,138,127,220,74,252,189,19,242,141 };
    byte_vec_t pk { 4,37,153,183,254,36,128,141,31,164,13,97,120,148,205,202,42,220,185,25,194,226,11,126,99,194,198,134,228,170,140,243,96,160,114,208,103,221,52,173,92,161,209,233,137,14,112,149,33,15,247,135,152,5,59,21,140,105,248,253,246,43,11,217,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 389 ") {
    byte_vec_t msg { 68,251,178,17 };
    byte_vec_t sig { 199,97,27,205,176,203,171,9,122,236,232,192,23,172,69,126,250,233,245,55,89,186,0,148,242,164,86,122,29,124,169,55,81,238,136,102,105,143,89,170,1,214,121,63,186,132,100,96,218,84,107,233,141,224,41,7,70,124,148,121,34,20,171,66 };
    byte_vec_t pk { 2,109,75,184,63,95,92,0,114,163,22,3,29,242,14,54,177,72,156,116,39,164,29,36,167,237,156,219,176,238,141,223,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 389 ") {
    byte_vec_t msg { 44,34,172,36 };
    byte_vec_t sig { 159,80,99,4,28,49,125,228,232,255,111,52,239,166,103,52,241,183,223,158,253,27,192,222,137,91,159,149,45,249,170,88,10,9,57,214,186,213,251,33,23,29,13,77,71,5,122,107,84,223,20,4,183,117,31,105,128,158,248,247,89,154,254,23 };
    byte_vec_t pk { 2,194,104,24,60,34,157,125,64,29,126,42,16,49,142,11,28,181,153,219,65,37,171,162,181,25,121,111,171,55,246,154,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 390 ") {
    byte_vec_t msg { 145,9,117,96 };
    byte_vec_t sig { 165,150,144,16,242,89,29,194,175,90,199,137,58,201,120,93,122,177,111,86,214,45,118,212,21,116,218,110,151,69,88,63,34,118,244,10,63,149,111,230,6,142,225,46,237,8,81,188,114,250,91,161,90,225,125,72,138,165,226,189,165,90,107,79 };
    byte_vec_t pk { 4,63,110,222,1,194,102,254,229,7,140,197,127,243,206,253,79,166,232,82,249,169,139,130,196,189,12,255,211,227,161,39,172,140,6,152,180,70,116,137,99,249,131,51,171,60,158,144,20,232,44,203,241,198,123,36,115,20,242,19,35,101,70,241,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 390 ") {
    byte_vec_t msg { 228,93,99,253 };
    byte_vec_t sig { 180,105,191,197,69,195,154,233,90,110,224,225,227,112,139,13,75,202,230,103,56,253,158,55,80,132,62,18,177,194,164,89,4,77,121,144,212,145,207,1,10,12,48,117,48,52,116,244,38,21,219,186,35,231,81,18,136,28,190,205,142,148,203,240 };
    byte_vec_t pk { 4,65,70,8,159,208,52,136,24,30,40,199,49,169,235,128,242,169,1,54,185,214,78,180,8,163,68,23,128,206,190,59,144,121,198,242,246,61,64,236,87,34,219,102,225,245,33,112,167,164,56,87,148,240,94,246,22,98,2,149,68,155,94,77,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 390 ") {
    byte_vec_t msg { 162,29,201,205 };
    byte_vec_t sig { 207,87,95,54,247,80,184,251,99,60,83,175,60,212,177,154,167,246,153,190,108,132,50,187,193,164,214,204,162,39,254,217,97,173,25,10,167,139,202,159,213,249,119,210,64,120,92,93,222,243,174,194,26,157,253,64,76,249,4,178,208,233,229,85 };
    byte_vec_t pk { 2,172,125,107,68,34,127,101,98,14,255,123,224,150,84,124,248,209,143,186,212,145,12,183,53,227,232,112,210,149,212,76,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 390 ") {
    byte_vec_t msg { 63,253,63,33 };
    byte_vec_t sig { 215,193,167,139,97,233,51,104,141,19,199,223,94,17,110,241,27,69,177,89,166,27,27,158,127,73,119,130,13,45,216,226,6,241,33,226,185,1,28,27,180,218,14,202,244,96,35,102,145,83,83,219,126,141,43,54,167,5,46,243,76,78,80,187 };
    byte_vec_t pk { 2,132,32,156,12,146,176,119,173,64,131,68,238,230,214,48,252,177,177,244,224,222,16,173,252,188,36,95,213,204,111,109,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 391 ") {
    byte_vec_t msg { 60,167,232,171 };
    byte_vec_t sig { 39,8,3,187,85,200,233,137,151,87,47,223,249,101,229,13,63,181,147,7,66,202,101,91,163,180,23,72,1,70,109,94,227,154,230,19,176,41,183,194,204,230,201,27,193,119,93,38,45,89,242,186,250,166,148,116,244,251,50,211,101,209,182,98 };
    byte_vec_t pk { 4,129,119,47,130,129,45,108,52,230,22,254,124,81,235,170,222,22,169,126,222,221,24,91,143,78,85,45,109,211,85,253,201,18,230,76,127,238,150,76,137,5,90,183,80,87,1,45,125,114,128,66,141,118,163,179,75,127,237,125,83,131,47,86,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 391 ") {
    byte_vec_t msg { 67,100,249,180 };
    byte_vec_t sig { 38,71,14,234,52,146,201,6,108,190,204,228,216,129,162,176,114,113,143,246,123,244,174,70,95,47,46,217,30,175,140,182,6,85,189,209,132,54,89,255,252,15,11,194,100,129,242,130,143,157,245,103,48,118,100,167,160,81,180,31,226,213,23,209 };
    byte_vec_t pk { 4,73,213,167,76,21,226,232,253,65,57,222,23,73,190,10,33,112,238,45,145,185,80,151,232,22,81,128,14,90,213,93,55,248,118,111,29,239,255,203,140,50,188,219,238,231,208,232,244,162,156,77,178,99,174,114,15,144,246,235,4,210,149,128,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 391 ") {
    byte_vec_t msg { 6,122,32,204 };
    byte_vec_t sig { 231,122,137,32,108,59,77,133,89,184,190,226,200,236,90,224,212,221,228,183,142,124,189,188,148,166,43,2,128,249,82,201,50,125,138,186,84,225,16,92,73,169,119,46,199,247,112,16,12,168,140,63,0,71,121,113,9,76,31,86,129,25,135,117 };
    byte_vec_t pk { 2,69,42,15,199,254,250,193,141,70,89,176,3,106,110,254,203,45,97,27,195,197,255,225,69,103,75,170,133,5,209,1,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 391 ") {
    byte_vec_t msg { 205,192,23,29 };
    byte_vec_t sig { 144,105,15,93,154,156,183,49,179,135,212,187,227,155,36,190,85,203,194,34,55,192,252,85,0,148,36,83,226,98,2,238,125,236,64,100,157,44,108,112,4,15,234,219,218,183,92,58,135,17,225,19,12,5,52,191,75,87,40,236,21,74,68,61 };
    byte_vec_t pk { 2,191,242,27,46,84,179,248,122,164,62,102,179,0,187,182,237,132,148,228,107,139,85,185,61,70,189,219,74,151,12,178,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 392 ") {
    byte_vec_t msg { 179,234,22,207 };
    byte_vec_t sig { 210,93,53,193,219,253,91,147,87,88,4,82,247,225,192,146,215,105,136,168,138,244,197,203,124,199,131,252,70,41,172,88,180,127,231,42,230,226,47,224,42,4,79,101,245,54,122,130,237,174,132,117,60,228,88,153,3,225,64,194,20,53,144,45 };
    byte_vec_t pk { 4,237,249,124,97,197,102,164,254,208,41,244,238,94,135,47,23,16,158,141,63,169,122,238,168,136,98,91,25,211,44,240,13,111,33,9,83,9,160,139,244,51,7,58,209,216,73,81,100,234,214,186,104,56,234,138,83,248,239,252,130,41,218,68,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 392 ") {
    byte_vec_t msg { 174,9,179,248 };
    byte_vec_t sig { 188,7,211,109,147,29,223,221,2,16,110,239,15,194,12,10,255,224,130,3,102,5,10,56,210,226,17,80,204,127,195,203,175,36,58,84,204,171,196,140,210,144,40,144,22,211,214,178,250,68,170,146,86,174,46,216,117,40,91,147,98,87,40,76 };
    byte_vec_t pk { 4,9,52,69,15,185,117,30,12,15,24,7,251,167,2,154,251,172,51,121,247,129,190,242,102,227,127,146,254,249,51,15,153,214,191,19,206,48,144,1,208,87,82,218,171,19,153,193,132,100,29,145,249,64,117,89,222,216,223,121,221,188,16,193,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 392 ") {
    byte_vec_t msg { 9,222,253,107 };
    byte_vec_t sig { 180,66,240,206,176,240,203,51,121,150,63,176,135,167,69,172,125,4,103,224,186,103,104,28,252,170,65,188,154,186,205,1,195,107,193,165,78,144,125,87,131,194,252,61,66,222,129,90,21,121,95,166,89,241,72,214,243,23,126,70,119,103,174,197 };
    byte_vec_t pk { 3,17,244,133,74,94,58,35,156,54,146,19,30,149,94,23,97,183,47,159,116,189,119,111,95,140,97,29,54,163,215,11,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 392 ") {
    byte_vec_t msg { 141,155,29,70 };
    byte_vec_t sig { 221,16,31,201,239,35,44,174,21,85,206,41,47,55,121,48,26,30,61,179,218,237,70,61,210,78,219,226,182,80,225,109,206,202,25,144,29,240,52,132,29,242,20,86,159,185,99,63,78,211,206,79,61,242,163,107,33,251,100,184,219,161,234,176 };
    byte_vec_t pk { 2,242,5,41,240,99,249,11,0,180,104,25,151,76,240,197,49,41,58,44,49,23,124,58,241,137,68,58,21,130,58,27,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 393 ") {
    byte_vec_t msg { 183,138,54,43 };
    byte_vec_t sig { 143,121,48,233,94,60,172,232,32,86,200,77,86,116,60,160,158,8,29,244,159,79,151,135,56,252,187,211,110,174,142,59,220,26,153,193,180,68,41,154,205,190,231,19,140,114,73,14,181,63,154,198,89,8,97,189,174,29,126,92,200,196,90,202 };
    byte_vec_t pk { 4,62,172,31,59,201,106,252,166,217,172,64,198,62,205,115,38,170,20,179,82,14,22,39,59,233,209,103,85,106,188,218,102,47,74,97,242,219,179,112,118,113,88,36,99,15,175,44,180,11,58,214,122,87,2,196,136,202,25,186,197,64,135,204,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 393 ") {
    byte_vec_t msg { 63,66,220,75 };
    byte_vec_t sig { 147,59,25,147,101,224,119,244,182,40,122,237,154,119,210,184,124,70,133,217,240,37,125,63,139,125,97,98,181,21,188,142,89,235,81,249,188,33,12,226,212,9,211,238,200,119,39,164,161,249,70,199,123,85,149,66,181,210,219,250,189,199,208,50 };
    byte_vec_t pk { 4,190,123,190,67,79,19,169,0,124,67,212,93,122,44,81,63,253,147,153,205,115,236,59,89,28,55,88,195,35,230,193,112,196,171,94,184,213,223,193,37,174,251,72,162,86,45,230,212,93,221,106,153,194,21,203,189,190,108,58,182,178,45,132,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 393 ") {
    byte_vec_t msg { 110,231,244,151 };
    byte_vec_t sig { 247,162,28,150,67,205,135,130,32,223,95,214,134,30,86,61,242,123,158,183,210,242,205,19,203,145,67,67,201,192,119,238,203,185,66,133,133,181,84,249,122,4,98,179,209,126,164,14,174,100,22,37,47,234,166,40,251,35,221,58,80,197,203,18 };
    byte_vec_t pk { 2,254,104,111,12,184,217,245,134,172,211,40,222,228,13,201,194,184,129,242,154,252,69,181,173,186,235,135,133,3,87,87,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 393 ") {
    byte_vec_t msg { 172,111,147,128 };
    byte_vec_t sig { 38,10,67,212,88,101,171,236,67,199,82,74,63,129,116,254,49,110,251,9,137,24,20,8,67,217,202,85,162,189,16,176,203,26,202,98,118,155,77,34,162,61,86,129,172,116,126,149,189,131,138,196,165,149,69,63,73,59,5,225,0,210,188,78 };
    byte_vec_t pk { 2,95,127,157,97,224,102,31,122,169,251,72,56,88,43,102,252,36,125,186,83,66,128,217,32,176,198,18,69,16,132,198,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 394 ") {
    byte_vec_t msg { 162,170,6,165 };
    byte_vec_t sig { 215,75,157,27,76,111,206,125,208,185,68,90,181,148,150,244,47,234,119,217,178,2,69,201,177,27,118,184,251,77,122,76,234,70,93,143,120,24,221,86,133,57,127,137,191,204,79,204,201,63,2,186,156,187,46,127,159,10,243,178,85,196,238,219 };
    byte_vec_t pk { 4,162,228,92,131,156,149,243,36,216,102,122,108,103,15,17,141,117,69,121,37,174,135,231,19,224,5,180,116,40,127,71,229,129,55,187,171,38,142,157,104,194,66,74,167,174,128,216,147,111,148,2,11,72,79,174,157,81,109,213,18,86,19,12,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 394 ") {
    byte_vec_t msg { 83,186,218,9 };
    byte_vec_t sig { 189,162,123,59,207,250,92,29,103,162,97,224,169,64,219,124,156,218,180,231,45,185,44,2,2,137,19,240,5,206,58,4,220,142,168,32,193,35,104,250,250,48,138,131,30,46,53,145,217,217,254,186,116,1,106,231,134,52,151,181,216,215,169,156 };
    byte_vec_t pk { 4,164,170,201,73,136,44,142,167,38,154,55,137,126,186,246,213,243,10,95,154,95,147,142,115,190,134,29,162,217,63,204,245,240,216,67,245,185,11,107,148,248,178,62,185,130,232,183,165,42,110,174,9,207,162,54,111,126,247,147,157,64,60,115,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 394 ") {
    byte_vec_t msg { 119,125,50,88 };
    byte_vec_t sig { 189,198,107,246,182,70,241,17,31,176,74,200,238,84,222,124,49,239,173,141,15,117,231,190,176,141,169,4,239,32,47,123,229,67,156,226,104,172,156,101,136,14,215,161,34,186,195,15,131,66,133,63,150,239,56,54,161,119,191,172,58,138,60,238 };
    byte_vec_t pk { 3,239,82,204,106,115,1,7,187,120,191,77,244,183,85,110,58,157,21,229,74,137,204,30,213,170,14,218,242,19,249,231,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 394 ") {
    byte_vec_t msg { 197,230,7,198 };
    byte_vec_t sig { 49,168,170,164,119,12,213,230,90,88,165,59,98,116,73,63,213,248,229,78,231,61,193,125,2,54,134,212,38,183,55,68,137,16,7,99,75,169,117,101,169,93,252,247,48,107,115,255,87,122,249,10,70,70,249,232,12,121,204,120,87,85,93,14 };
    byte_vec_t pk { 3,103,80,103,207,77,165,209,208,169,14,139,187,45,107,73,234,227,130,29,0,70,210,248,56,59,33,117,61,230,241,65,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 395 ") {
    byte_vec_t msg { 149,116,128,77 };
    byte_vec_t sig { 179,24,243,48,178,52,28,72,240,182,84,210,81,151,213,98,216,122,76,24,230,12,110,149,176,115,28,132,251,206,103,148,190,160,219,227,93,155,252,90,144,239,127,173,208,27,39,72,1,11,61,89,89,97,222,63,27,103,161,143,46,5,38,6 };
    byte_vec_t pk { 4,151,97,228,45,1,90,229,221,146,114,193,171,111,183,121,3,119,247,125,247,93,4,204,146,42,209,22,155,76,116,242,3,182,174,150,61,14,88,202,204,177,140,171,184,71,89,167,206,94,146,27,131,9,170,151,210,128,150,126,21,20,114,221,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 395 ") {
    byte_vec_t msg { 34,31,144,245 };
    byte_vec_t sig { 171,5,36,37,106,60,54,128,44,128,8,65,166,184,168,255,14,22,97,25,19,147,79,31,31,15,102,52,156,87,226,110,252,218,204,183,33,36,241,202,27,232,41,135,30,10,219,150,184,121,244,255,62,199,122,234,133,221,201,55,99,130,229,123 };
    byte_vec_t pk { 4,199,97,162,176,15,78,159,213,130,171,10,164,112,81,3,72,74,1,195,43,215,46,128,169,197,0,158,227,239,9,176,16,147,134,97,18,194,14,165,237,114,229,181,121,51,112,253,197,194,228,109,250,44,12,121,215,252,66,57,253,96,184,216,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 395 ") {
    byte_vec_t msg { 8,6,48,74 };
    byte_vec_t sig { 31,139,171,200,208,238,19,19,211,85,80,135,38,238,168,166,37,34,137,222,159,10,37,224,186,53,71,136,49,58,208,155,251,212,118,12,34,230,188,115,80,205,45,32,192,93,8,42,186,213,218,65,114,242,109,241,41,140,118,153,109,149,40,170 };
    byte_vec_t pk { 2,190,73,25,251,11,141,146,249,241,38,250,76,145,251,111,68,186,213,27,157,124,81,176,163,7,97,73,153,42,87,145,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 395 ") {
    byte_vec_t msg { 46,227,185,176 };
    byte_vec_t sig { 83,12,196,46,39,181,248,90,193,134,53,124,253,225,222,231,62,14,31,105,177,64,81,207,146,125,196,239,245,87,90,110,251,229,184,143,195,188,165,71,155,87,0,0,58,137,147,141,148,6,96,2,229,148,30,184,42,86,100,61,176,165,247,107 };
    byte_vec_t pk { 2,150,180,196,67,143,230,83,171,136,57,98,142,94,103,127,42,47,125,25,93,10,74,0,200,50,188,104,67,187,81,226,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 396 ") {
    byte_vec_t msg { 196,249,177,68 };
    byte_vec_t sig { 63,130,2,249,177,105,171,117,82,2,151,121,31,74,68,7,44,63,231,89,249,10,209,77,109,122,57,93,52,250,37,12,123,120,99,144,184,143,12,90,125,167,18,116,252,235,184,45,65,82,155,39,196,25,142,159,160,141,181,99,124,146,158,85 };
    byte_vec_t pk { 4,165,123,89,191,80,222,198,79,153,45,40,175,218,220,125,64,63,182,209,231,237,114,177,243,235,22,228,70,55,36,159,162,215,176,214,103,128,176,115,44,201,206,199,45,114,15,231,255,218,134,32,118,1,80,232,19,236,165,37,204,203,171,175,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 396 ") {
    byte_vec_t msg { 120,62,99,171 };
    byte_vec_t sig { 57,36,147,248,200,142,187,246,24,179,107,135,114,71,74,20,96,227,199,224,155,132,169,19,69,240,86,208,119,177,87,78,36,159,196,139,221,43,69,183,246,19,195,153,113,113,192,239,90,213,105,154,107,194,129,34,156,80,190,4,195,146,203,132 };
    byte_vec_t pk { 4,231,214,121,144,38,184,251,46,148,16,76,106,246,178,85,217,35,45,128,182,58,30,227,195,26,64,43,138,40,97,41,232,192,207,57,116,185,108,67,116,227,69,56,195,210,247,86,117,37,36,184,223,119,104,204,56,52,210,187,94,101,61,169,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 396 ") {
    byte_vec_t msg { 152,42,135,210 };
    byte_vec_t sig { 53,140,72,125,100,148,239,246,79,170,94,209,152,217,53,2,251,100,181,151,93,67,225,139,108,151,20,251,12,134,182,254,202,223,73,226,70,139,9,133,103,40,39,12,115,202,129,90,247,213,45,219,127,0,0,63,168,235,49,33,83,49,5,191 };
    byte_vec_t pk { 3,186,19,224,222,182,110,108,122,63,208,9,190,114,26,207,127,202,1,40,13,43,224,131,2,241,42,197,74,143,179,139,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 396 ") {
    byte_vec_t msg { 131,218,150,221 };
    byte_vec_t sig { 27,241,27,219,252,241,162,27,29,180,219,186,105,3,100,231,155,175,35,106,102,38,183,197,56,190,62,141,64,23,208,109,35,23,68,100,227,61,47,209,139,76,242,206,146,83,120,177,62,26,231,61,68,234,108,26,57,118,239,225,167,233,45,118 };
    byte_vec_t pk { 3,111,32,42,20,176,43,102,171,169,221,231,217,128,53,66,139,142,163,17,122,4,129,200,111,231,120,216,218,116,34,57,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 397 ") {
    byte_vec_t msg { 130,45,177,139 };
    byte_vec_t sig { 93,52,52,84,216,37,12,21,255,198,164,159,56,204,251,221,65,36,47,123,90,233,106,67,81,74,237,115,88,208,7,190,74,102,38,207,37,0,54,230,93,13,218,28,60,88,179,80,243,148,84,172,47,252,139,163,127,170,50,138,171,109,235,101 };
    byte_vec_t pk { 4,111,249,136,163,33,27,225,207,17,121,202,51,117,106,117,215,204,241,197,45,228,150,46,34,133,123,175,119,82,163,12,242,22,101,148,135,218,92,99,129,79,187,174,251,91,107,118,145,25,20,185,222,131,147,172,238,142,190,195,240,227,205,105,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 397 ") {
    byte_vec_t msg { 2,124,3,194 };
    byte_vec_t sig { 166,249,22,226,218,86,191,127,6,2,13,201,252,74,209,233,139,188,8,206,37,2,50,178,92,182,253,181,197,249,55,22,99,215,122,178,244,115,42,178,191,99,251,33,85,226,69,199,53,8,158,80,120,142,204,8,114,38,231,146,48,161,45,105 };
    byte_vec_t pk { 4,138,33,72,96,77,139,246,215,35,167,252,231,164,101,224,22,139,107,138,132,11,252,122,107,167,133,98,229,70,134,180,164,204,225,17,224,170,102,48,158,124,217,197,216,139,132,38,148,142,125,42,226,255,14,254,119,215,1,140,151,28,70,51,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 397 ") {
    byte_vec_t msg { 241,233,104,103 };
    byte_vec_t sig { 18,152,199,233,10,108,219,39,100,199,184,83,80,2,93,150,17,65,93,166,23,4,242,200,204,159,125,55,48,225,170,132,230,17,225,108,0,47,21,191,237,186,25,84,110,64,185,225,34,213,97,90,48,97,246,25,134,65,253,240,190,61,115,66 };
    byte_vec_t pk { 2,140,80,22,104,134,200,182,234,69,31,223,135,160,6,160,238,228,104,22,170,103,200,166,197,247,37,254,211,198,213,223,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 397 ") {
    byte_vec_t msg { 127,165,226,181 };
    byte_vec_t sig { 88,83,5,64,73,109,157,25,50,128,212,38,85,29,242,56,15,106,228,115,176,63,94,98,112,98,120,215,242,97,98,193,75,38,108,203,109,72,175,213,68,153,134,99,118,18,166,134,2,202,222,81,215,75,44,68,193,91,215,66,90,53,78,7 };
    byte_vec_t pk { 3,140,239,81,191,100,15,244,253,121,189,184,252,113,61,131,24,170,117,25,197,163,41,213,248,91,181,96,28,114,233,222,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 398 ") {
    byte_vec_t msg { 199,160,143,32 };
    byte_vec_t sig { 252,125,200,215,66,209,253,242,150,50,122,178,123,65,170,70,121,254,215,9,243,37,157,194,141,172,152,247,26,171,110,92,139,102,60,252,113,9,76,116,76,255,163,199,57,196,218,166,31,120,123,95,234,160,60,101,200,144,134,177,81,56,118,37 };
    byte_vec_t pk { 4,208,246,59,1,215,251,56,140,204,255,224,198,232,199,86,59,156,89,153,44,157,98,146,39,107,81,167,13,83,216,4,93,222,70,20,240,0,84,50,214,156,219,216,4,167,208,183,157,59,56,69,241,135,103,154,144,224,43,217,126,79,243,28,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 398 ") {
    byte_vec_t msg { 234,239,18,156 };
    byte_vec_t sig { 35,114,157,204,196,58,24,33,152,18,68,244,208,145,112,147,175,198,103,47,186,226,221,14,201,47,62,169,202,226,46,107,112,107,234,224,56,106,242,150,198,113,149,112,160,181,117,35,24,163,180,140,221,110,81,84,236,56,191,35,211,237,50,235 };
    byte_vec_t pk { 4,211,88,240,49,0,30,127,42,230,249,12,205,237,120,35,99,112,248,235,189,240,9,126,127,12,14,155,154,138,191,147,92,250,62,198,33,97,102,145,129,156,75,6,130,214,8,38,4,113,14,23,191,237,9,201,207,65,95,245,4,135,246,215,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 398 ") {
    byte_vec_t msg { 159,208,246,25 };
    byte_vec_t sig { 198,121,105,245,42,143,165,104,243,232,30,38,216,103,184,238,166,231,66,121,8,124,254,76,207,27,150,119,63,5,107,34,135,182,103,165,144,79,108,251,86,136,72,178,181,105,74,59,98,175,242,8,181,192,206,217,132,60,57,52,34,206,85,100 };
    byte_vec_t pk { 2,231,118,110,143,169,97,223,177,208,212,22,94,119,14,196,84,179,33,212,203,86,78,34,184,132,71,47,66,172,68,9,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 398 ") {
    byte_vec_t msg { 32,177,111,196 };
    byte_vec_t sig { 91,187,141,167,205,228,41,197,65,149,180,32,252,189,197,159,27,41,35,155,159,198,3,100,36,88,219,29,102,151,16,224,108,183,172,105,115,188,110,237,247,18,35,84,231,82,234,25,171,142,215,166,232,54,112,120,134,178,68,90,8,132,157,237 };
    byte_vec_t pk { 2,41,153,252,187,10,110,159,234,167,210,85,246,193,146,168,37,100,1,188,75,120,203,31,155,32,204,241,139,188,40,114,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 399 ") {
    byte_vec_t msg { 210,117,31,29 };
    byte_vec_t sig { 45,0,214,118,204,95,105,231,231,22,54,200,116,188,43,205,209,239,129,191,54,169,125,246,24,140,40,12,40,190,34,132,227,183,2,79,141,157,51,5,2,177,55,72,60,150,89,174,237,77,119,137,224,207,97,252,81,191,36,253,244,93,112,70 };
    byte_vec_t pk { 4,89,189,152,75,11,154,13,211,201,11,243,137,193,183,100,197,145,142,38,13,238,226,211,187,28,59,250,173,233,84,165,148,152,91,104,44,135,59,36,126,247,77,29,179,173,2,55,107,33,6,88,75,197,41,204,153,240,128,131,192,251,112,225,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 399 ") {
    byte_vec_t msg { 57,28,26,71 };
    byte_vec_t sig { 207,32,36,196,2,196,218,82,8,104,43,125,124,230,172,134,106,15,47,18,93,91,237,226,132,119,25,134,195,21,90,248,2,137,212,171,200,76,196,43,69,35,17,11,227,48,240,203,172,148,249,145,112,37,255,236,171,71,154,24,173,196,252,174 };
    byte_vec_t pk { 4,81,152,124,16,204,80,158,116,142,255,94,74,74,1,167,138,14,75,224,118,66,75,228,58,93,143,126,255,199,129,54,237,103,211,12,124,174,21,16,105,25,24,147,82,5,193,118,49,234,32,191,101,253,106,3,9,168,255,167,37,180,215,227,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 399 ") {
    byte_vec_t msg { 154,95,171,70 };
    byte_vec_t sig { 190,182,231,255,158,77,47,66,194,166,239,117,167,38,136,12,156,211,57,239,32,59,87,54,184,147,102,91,112,214,145,245,181,208,112,142,52,222,157,190,163,185,207,218,255,99,148,3,224,47,149,85,234,135,42,222,29,86,181,114,102,188,179,51 };
    byte_vec_t pk { 3,236,49,181,98,185,151,66,207,201,68,45,132,245,180,205,200,234,92,17,141,112,151,20,28,67,25,149,174,47,29,76,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 399 ") {
    byte_vec_t msg { 6,46,189,240 };
    byte_vec_t sig { 42,14,115,86,29,59,218,33,162,152,224,22,38,53,183,147,72,216,225,41,137,203,42,79,21,51,121,163,113,72,236,59,226,169,25,213,170,25,41,245,163,39,60,47,238,48,190,110,17,111,95,140,119,187,215,91,95,2,79,7,54,5,203,132 };
    byte_vec_t pk { 2,212,207,5,115,143,71,220,185,157,177,44,44,156,144,104,159,51,137,59,189,203,10,63,88,87,139,86,183,245,110,53,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 400 ") {
    byte_vec_t msg { 147,3,94,220 };
    byte_vec_t sig { 4,80,226,244,143,133,27,207,187,64,90,132,206,20,125,158,238,130,252,127,212,59,127,224,20,61,102,212,42,228,53,253,96,9,25,172,241,143,187,141,7,193,23,217,19,97,221,9,220,87,248,17,171,55,239,73,135,200,223,47,84,104,26,182 };
    byte_vec_t pk { 4,174,197,67,83,61,117,8,223,254,197,207,212,233,132,238,72,196,26,74,151,187,118,138,44,131,119,225,77,103,15,176,144,39,70,123,217,82,65,136,217,100,112,22,184,141,124,210,133,124,164,151,10,251,173,67,144,102,89,104,122,143,216,104,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 400 ") {
    byte_vec_t msg { 3,222,165,244 };
    byte_vec_t sig { 38,6,220,13,211,96,35,240,172,149,10,47,168,103,42,188,109,163,218,233,55,140,57,157,234,243,146,174,251,129,166,2,211,11,250,35,199,230,10,99,222,213,140,157,133,200,38,112,231,242,4,210,61,59,110,177,86,152,85,148,234,107,177,2 };
    byte_vec_t pk { 4,22,81,84,59,224,233,86,206,30,114,2,243,65,147,185,75,72,80,156,37,2,156,1,228,101,0,12,167,69,247,81,237,221,166,66,126,185,117,215,134,230,118,138,181,199,7,3,60,134,2,100,15,194,181,223,161,69,133,42,6,209,127,186,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 400 ") {
    byte_vec_t msg { 248,149,40,23 };
    byte_vec_t sig { 197,49,85,233,9,218,230,99,94,65,43,34,244,107,38,38,203,35,166,55,217,8,5,73,60,155,162,205,153,35,82,212,108,202,184,58,97,198,164,109,81,105,244,92,144,250,138,117,51,176,131,254,232,162,94,1,154,211,93,27,19,217,93,114 };
    byte_vec_t pk { 3,229,94,61,29,96,203,198,222,37,1,53,158,242,14,127,39,90,92,70,228,134,217,106,241,202,69,226,188,85,86,63,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 400 ") {
    byte_vec_t msg { 197,127,172,84 };
    byte_vec_t sig { 99,8,102,9,129,181,122,21,191,242,43,113,52,36,169,66,136,16,230,159,188,181,247,122,152,56,80,140,108,247,56,246,46,108,154,202,171,174,237,247,159,110,56,62,203,253,2,41,186,105,45,165,51,128,114,219,201,94,14,138,33,106,244,139 };
    byte_vec_t pk { 3,248,178,243,46,150,173,98,195,177,209,75,242,19,107,184,231,199,40,174,122,77,137,158,33,1,101,214,222,204,198,3,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 401 ") {
    byte_vec_t msg { 140,99,123,3 };
    byte_vec_t sig { 145,95,59,203,226,44,105,246,123,196,201,53,178,122,155,38,224,189,131,143,139,72,97,43,13,221,152,22,110,37,79,199,88,210,202,2,230,24,42,100,140,75,173,0,138,216,126,198,202,195,223,207,128,103,126,100,129,7,189,173,109,175,214,145 };
    byte_vec_t pk { 4,9,1,245,207,136,165,99,36,215,224,130,42,97,30,86,246,125,115,172,4,43,19,140,211,24,161,149,132,176,247,96,41,16,197,172,44,162,229,94,121,54,214,234,184,53,136,243,41,204,240,13,46,152,229,89,21,81,243,223,4,28,239,2,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 401 ") {
    byte_vec_t msg { 221,198,145,203 };
    byte_vec_t sig { 14,116,9,219,29,227,243,194,111,132,59,179,142,186,97,57,189,109,188,161,164,31,169,251,29,136,23,66,59,244,120,78,96,85,72,112,193,182,57,250,254,49,123,154,27,118,36,57,60,201,31,174,244,232,45,99,132,38,123,70,47,251,211,143 };
    byte_vec_t pk { 4,190,24,234,169,123,192,11,46,57,233,182,118,167,22,80,122,23,240,124,102,227,102,39,76,213,246,243,84,146,168,249,55,11,229,104,27,169,170,69,9,209,254,174,12,70,112,15,91,151,124,206,194,122,109,79,241,7,133,57,182,77,230,66,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 401 ") {
    byte_vec_t msg { 16,217,178,93 };
    byte_vec_t sig { 148,73,231,185,233,135,13,20,178,184,60,22,244,14,173,83,201,136,245,107,124,36,223,189,182,202,137,132,95,135,197,20,76,129,113,243,246,178,58,103,100,35,151,142,41,73,147,33,218,133,125,138,4,129,175,54,237,235,135,210,149,79,111,213 };
    byte_vec_t pk { 2,113,51,182,234,104,217,176,217,201,247,139,128,56,6,0,182,126,149,221,242,63,18,9,236,207,29,203,197,126,111,240,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 401 ") {
    byte_vec_t msg { 193,249,94,20 };
    byte_vec_t sig { 161,174,97,201,25,168,119,220,160,230,32,152,20,238,30,82,80,197,138,85,143,222,231,200,182,12,12,237,111,241,60,20,62,71,100,221,47,213,240,104,65,135,237,8,141,193,73,73,52,66,26,247,243,31,40,97,34,93,124,199,161,65,220,20 };
    byte_vec_t pk { 3,198,6,184,238,222,165,188,194,199,64,16,58,231,77,122,55,220,35,110,199,219,199,51,23,150,46,234,127,167,209,108,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 402 ") {
    byte_vec_t msg { 223,154,169,235 };
    byte_vec_t sig { 136,225,231,121,37,55,134,63,191,86,186,57,91,201,243,225,109,245,8,247,18,77,84,144,25,13,132,95,88,153,147,249,163,90,118,153,131,43,113,248,67,112,227,197,43,29,72,241,185,161,247,130,131,227,253,97,212,173,91,218,62,46,60,47 };
    byte_vec_t pk { 4,158,180,246,39,90,211,49,121,189,66,122,105,103,217,130,108,210,238,9,47,201,109,67,235,245,253,48,248,138,124,233,61,172,51,60,244,195,10,15,105,240,253,5,67,134,60,248,141,212,102,55,92,133,238,109,200,218,35,222,222,123,17,62,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 402 ") {
    byte_vec_t msg { 213,196,30,27 };
    byte_vec_t sig { 2,180,136,171,142,87,140,141,211,199,234,158,136,111,156,29,237,37,212,28,190,71,241,150,218,30,82,138,243,68,6,224,14,155,254,141,157,102,196,181,88,81,108,132,159,129,132,30,176,112,106,70,120,13,98,35,127,86,40,16,176,245,40,117 };
    byte_vec_t pk { 4,120,43,216,139,19,232,108,31,28,178,180,176,40,113,139,204,88,168,132,115,56,12,94,44,234,125,62,151,39,76,174,72,255,62,166,171,59,177,116,194,95,119,177,174,178,68,28,207,14,207,87,97,237,96,196,126,19,131,222,62,223,23,177,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 402 ") {
    byte_vec_t msg { 246,196,88,228 };
    byte_vec_t sig { 44,64,145,63,69,45,139,118,63,202,202,127,164,216,112,215,179,69,101,45,23,77,56,180,63,17,138,127,153,240,255,12,107,51,82,86,150,152,231,37,114,193,182,137,244,60,223,75,208,34,161,247,144,87,215,238,154,245,170,194,108,180,161,66 };
    byte_vec_t pk { 3,154,101,224,231,61,139,27,115,230,29,250,52,139,100,232,10,136,42,88,224,228,33,164,235,97,112,213,202,105,4,187,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 402 ") {
    byte_vec_t msg { 241,42,104,210 };
    byte_vec_t sig { 159,138,36,179,131,25,214,19,18,59,60,161,158,112,164,121,38,159,218,254,159,99,201,160,137,93,178,125,57,80,38,125,137,177,184,253,192,216,29,178,9,150,103,124,206,128,109,158,4,171,28,132,63,192,118,230,228,87,189,224,92,140,232,56 };
    byte_vec_t pk { 2,157,106,77,82,44,252,175,233,233,105,142,207,158,104,249,145,135,134,231,188,117,2,203,158,116,30,221,146,94,133,68,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 403 ") {
    byte_vec_t msg { 4,130,36,39 };
    byte_vec_t sig { 22,169,55,189,153,212,69,158,196,119,232,179,90,184,207,130,170,121,240,152,119,187,84,82,144,244,56,169,76,46,241,208,117,8,78,9,128,29,233,79,176,225,132,156,225,215,54,35,83,72,193,230,196,94,253,172,235,84,195,114,211,220,117,54 };
    byte_vec_t pk { 4,75,147,95,139,165,243,203,238,4,152,199,72,228,177,73,69,46,4,12,46,152,121,153,7,144,250,75,89,180,9,39,253,18,239,39,88,154,141,137,135,89,15,205,44,8,71,33,59,93,3,75,71,11,211,50,146,94,87,123,129,65,178,248,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 403 ") {
    byte_vec_t msg { 8,174,99,233 };
    byte_vec_t sig { 0,252,144,22,191,187,162,32,32,100,1,111,150,59,93,246,43,11,133,32,181,42,30,210,178,13,61,13,17,30,184,245,227,180,153,27,185,229,167,47,103,237,185,220,212,112,143,91,63,49,217,176,143,216,75,22,122,236,242,179,25,143,112,218 };
    byte_vec_t pk { 4,239,167,22,45,27,234,247,224,129,63,15,149,231,144,98,61,89,200,138,208,102,92,147,23,93,100,111,64,81,214,38,24,207,33,95,110,226,40,158,49,170,217,237,48,158,81,243,215,19,244,53,140,158,78,198,84,124,114,242,208,34,242,126,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 403 ") {
    byte_vec_t msg { 36,196,81,206 };
    byte_vec_t sig { 131,224,137,104,59,105,193,154,45,7,151,168,85,153,241,181,70,47,105,240,43,126,125,251,32,59,88,3,124,211,99,144,219,26,164,157,195,67,28,4,100,226,201,225,195,118,201,162,187,220,85,138,166,57,15,172,55,9,232,82,192,65,228,214 };
    byte_vec_t pk { 2,200,126,216,232,63,225,170,111,161,250,119,208,145,97,190,134,47,112,135,88,33,56,56,166,19,211,101,121,151,216,177,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 403 ") {
    byte_vec_t msg { 0,101,111,104 };
    byte_vec_t sig { 140,238,176,91,185,113,111,54,171,78,92,35,220,206,56,47,93,153,25,107,175,120,14,225,65,59,150,215,133,238,190,181,1,242,52,38,124,154,135,184,235,45,114,85,145,135,190,154,205,189,55,239,37,18,208,43,223,100,230,168,112,218,113,18 };
    byte_vec_t pk { 2,255,254,9,130,164,167,64,51,48,183,14,221,207,27,217,205,71,161,151,86,215,0,71,13,30,133,122,168,155,154,99,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 404 ") {
    byte_vec_t msg { 156,166,44,77 };
    byte_vec_t sig { 157,29,96,47,104,98,100,63,232,220,67,151,116,35,58,151,186,101,35,213,150,11,54,6,249,28,215,9,238,159,183,37,211,110,182,237,212,211,107,35,131,26,21,53,141,95,53,54,106,54,97,143,89,203,250,146,173,99,237,123,229,114,61,208 };
    byte_vec_t pk { 4,98,178,168,38,173,58,254,238,27,88,146,164,120,244,212,208,196,178,176,147,26,134,127,231,107,240,177,227,21,90,167,226,26,194,22,109,42,95,36,180,238,226,1,98,177,36,81,197,224,230,163,98,234,219,236,78,123,253,154,131,0,206,192,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 404 ") {
    byte_vec_t msg { 23,81,231,69 };
    byte_vec_t sig { 82,177,65,205,243,35,188,176,87,226,13,101,170,103,176,49,71,90,69,177,78,208,223,21,77,96,105,191,218,198,179,211,157,47,165,46,57,199,113,1,29,168,190,40,149,33,224,95,52,117,31,77,148,253,160,113,122,202,207,207,70,44,183,38 };
    byte_vec_t pk { 4,72,98,17,252,36,224,148,109,152,194,196,4,115,133,12,124,91,86,180,201,216,175,7,149,45,107,108,123,183,121,135,2,219,4,202,100,209,70,212,99,33,27,101,119,151,126,174,57,60,119,149,121,16,66,97,190,4,208,36,54,99,150,95,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 404 ") {
    byte_vec_t msg { 145,185,139,103 };
    byte_vec_t sig { 68,2,75,84,240,144,39,164,132,221,172,107,48,99,77,134,28,29,113,48,58,70,252,166,175,199,5,34,124,186,154,45,230,140,182,87,216,26,252,110,226,164,183,52,91,124,208,90,155,121,22,168,98,121,108,117,222,218,116,68,43,99,214,70 };
    byte_vec_t pk { 3,33,70,179,199,27,193,132,102,12,222,0,136,86,43,158,221,61,43,229,35,236,149,167,16,242,90,207,99,131,75,14,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 404 ") {
    byte_vec_t msg { 74,192,167,103 };
    byte_vec_t sig { 13,251,51,206,33,171,215,255,52,162,143,71,115,136,119,29,195,172,237,105,143,7,233,241,181,207,91,68,197,120,185,8,154,146,89,159,163,26,39,83,151,254,105,104,123,16,235,52,193,173,61,240,58,243,112,115,176,223,11,187,202,73,148,235 };
    byte_vec_t pk { 2,113,123,246,2,104,104,58,50,36,135,164,64,116,15,10,1,247,64,52,6,22,100,195,162,88,145,3,69,33,135,95,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 405 ") {
    byte_vec_t msg { 24,186,134,62 };
    byte_vec_t sig { 19,227,104,241,57,95,237,129,150,133,173,3,32,131,120,89,62,178,28,231,80,139,70,96,7,196,110,230,175,228,238,148,46,115,13,156,48,77,231,117,11,159,84,98,175,101,16,220,120,2,59,252,212,171,236,79,170,194,178,135,202,148,23,94 };
    byte_vec_t pk { 4,113,145,72,11,106,203,191,75,136,80,85,217,200,159,133,140,80,206,111,73,31,210,250,107,13,34,182,183,117,202,31,64,155,139,86,116,39,44,121,144,97,204,164,140,121,35,249,127,98,198,101,230,18,66,250,177,83,67,81,116,208,41,53,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 405 ") {
    byte_vec_t msg { 132,162,61,246 };
    byte_vec_t sig { 13,195,202,179,54,46,50,89,61,206,120,138,54,84,103,179,151,28,125,205,85,37,19,142,38,45,201,255,99,153,121,186,146,110,63,206,36,90,101,26,117,81,234,62,59,111,144,195,27,98,148,61,240,181,28,101,54,123,143,65,183,183,193,37 };
    byte_vec_t pk { 4,60,198,173,196,225,174,162,94,238,63,194,12,245,72,214,102,21,237,131,33,175,229,140,51,248,157,170,196,128,207,13,112,114,130,52,59,147,10,208,62,194,35,137,220,200,24,170,248,36,71,166,252,217,164,7,116,32,12,246,246,189,173,136,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 405 ") {
    byte_vec_t msg { 67,172,33,3 };
    byte_vec_t sig { 14,189,252,134,131,135,27,209,162,70,148,135,199,52,23,182,99,199,125,114,246,143,236,169,31,161,68,30,223,211,176,29,149,195,242,105,84,209,112,180,203,98,3,105,235,162,190,29,115,76,66,9,122,74,151,136,40,74,18,18,238,6,27,95 };
    byte_vec_t pk { 2,224,170,103,90,191,220,53,228,132,222,26,107,5,53,189,85,32,162,82,85,243,129,177,41,220,49,148,105,71,85,172,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 405 ") {
    byte_vec_t msg { 189,216,134,3 };
    byte_vec_t sig { 181,78,81,139,14,158,116,236,122,212,151,134,33,47,81,123,130,2,128,127,112,229,148,227,54,177,74,122,25,223,47,121,204,43,21,91,5,96,138,146,159,180,167,56,179,239,82,210,181,105,95,83,4,193,120,18,237,63,104,183,106,241,38,138 };
    byte_vec_t pk { 2,151,71,166,19,226,117,28,12,28,74,95,232,149,41,65,220,85,38,124,89,177,118,102,144,185,14,51,212,42,254,59,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 406 ") {
    byte_vec_t msg { 66,80,36,9 };
    byte_vec_t sig { 134,239,160,243,188,40,158,21,196,32,249,243,234,56,98,128,22,25,203,171,84,191,47,2,81,236,143,69,164,218,177,176,242,182,181,168,72,53,189,206,28,23,231,153,248,53,127,170,43,67,152,206,201,147,174,8,44,194,252,33,101,139,145,128 };
    byte_vec_t pk { 4,209,74,76,161,97,58,158,117,68,27,86,154,47,25,153,236,191,120,232,254,174,69,27,28,13,25,220,26,178,234,49,183,68,58,237,25,177,28,228,143,145,53,104,199,180,141,130,170,146,50,22,26,102,55,146,79,167,38,205,139,42,166,59,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 406 ") {
    byte_vec_t msg { 232,136,68,5 };
    byte_vec_t sig { 205,28,59,68,74,26,121,49,236,98,32,85,82,228,51,231,206,124,232,77,124,5,140,196,70,100,23,46,51,182,129,227,147,64,105,71,60,244,142,68,68,73,109,29,123,117,189,216,30,204,207,134,38,189,130,247,17,93,77,101,138,46,110,85 };
    byte_vec_t pk { 4,237,114,54,216,66,94,132,72,212,187,80,228,246,106,208,34,241,35,220,14,132,156,69,77,134,223,75,128,98,185,167,14,174,225,116,31,249,116,197,126,69,134,130,52,59,49,179,232,209,156,103,164,174,208,40,209,53,169,224,235,216,188,196,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 406 ") {
    byte_vec_t msg { 85,62,207,80 };
    byte_vec_t sig { 70,21,70,157,163,46,218,112,221,22,28,198,103,74,150,161,54,137,42,22,120,99,34,213,36,125,143,156,192,31,198,254,94,21,50,227,113,8,2,213,193,118,30,204,244,223,100,63,108,20,147,62,199,227,69,193,48,253,160,161,92,190,126,21 };
    byte_vec_t pk { 3,15,91,151,62,145,248,195,139,212,2,110,15,37,133,73,137,233,15,180,197,191,64,82,196,187,93,182,139,229,113,128,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 406 ") {
    byte_vec_t msg { 14,86,104,240 };
    byte_vec_t sig { 45,59,58,212,87,153,135,175,205,251,84,7,224,94,237,202,181,198,125,61,247,228,185,44,82,10,217,8,214,241,105,122,157,31,134,197,194,220,215,220,137,213,18,246,43,57,163,183,155,76,116,252,14,207,147,163,119,199,193,189,48,178,227,226 };
    byte_vec_t pk { 3,210,49,149,97,237,66,229,150,206,244,70,139,237,105,90,233,189,134,127,145,247,0,141,33,44,43,23,218,182,224,18,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 407 ") {
    byte_vec_t msg { 151,120,240,125 };
    byte_vec_t sig { 8,39,184,99,102,133,214,244,112,151,34,125,253,181,61,250,243,73,122,227,30,45,199,153,169,56,8,144,63,0,29,52,27,138,108,198,193,243,200,181,128,105,61,82,104,232,253,120,193,1,163,44,227,41,193,244,47,224,137,50,185,243,151,246 };
    byte_vec_t pk { 4,214,246,121,54,46,228,235,233,118,62,76,84,7,178,125,45,77,77,129,14,248,52,51,86,240,198,214,11,253,201,144,114,204,8,150,64,62,58,49,196,198,15,80,143,243,197,229,146,92,144,36,169,123,143,28,167,229,99,131,56,148,181,19,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 407 ") {
    byte_vec_t msg { 213,226,244,33 };
    byte_vec_t sig { 161,47,233,184,161,4,3,73,27,31,61,126,189,17,45,255,74,18,138,60,77,184,191,78,217,108,240,46,146,173,224,30,64,104,111,61,65,146,197,152,182,235,229,110,62,186,85,84,253,126,203,183,35,245,230,237,110,89,217,53,57,69,200,91 };
    byte_vec_t pk { 4,143,232,177,110,138,116,146,136,0,167,166,21,104,224,52,167,198,45,59,89,4,73,3,139,237,175,18,14,149,75,97,132,151,64,97,104,224,221,204,200,150,6,208,242,17,126,162,127,4,114,247,149,184,12,129,202,113,136,37,139,162,81,215,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 407 ") {
    byte_vec_t msg { 15,241,213,231 };
    byte_vec_t sig { 233,198,119,97,104,78,165,244,19,90,70,218,24,152,120,242,50,248,26,154,1,166,75,7,45,108,244,161,55,193,213,22,21,32,2,5,122,127,30,56,204,21,182,7,207,215,217,23,68,133,217,108,242,41,30,190,109,169,126,230,37,76,139,6 };
    byte_vec_t pk { 3,1,84,8,139,142,23,206,225,111,33,113,152,6,1,133,47,70,114,33,233,155,29,35,102,41,132,75,124,94,40,58,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 407 ") {
    byte_vec_t msg { 255,117,131,103 };
    byte_vec_t sig { 166,206,32,142,43,106,126,251,134,106,177,106,116,137,199,0,14,60,29,235,227,22,123,108,23,32,252,250,115,33,158,214,134,179,13,231,59,87,189,108,117,134,70,207,197,177,26,180,179,55,126,31,110,28,11,227,82,184,25,147,150,39,47,29 };
    byte_vec_t pk { 3,125,140,248,132,237,150,235,32,2,44,130,186,187,150,188,241,37,231,48,115,122,219,130,161,73,96,82,22,104,243,3,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 408 ") {
    byte_vec_t msg { 236,140,4,246 };
    byte_vec_t sig { 11,104,35,22,144,121,179,191,111,246,168,67,12,101,102,148,248,142,129,139,82,230,122,81,173,210,115,211,140,36,64,207,83,228,236,59,171,121,202,2,42,198,36,74,151,215,103,71,141,79,239,181,116,225,130,75,240,130,157,137,72,185,166,96 };
    byte_vec_t pk { 4,195,81,142,155,21,225,197,29,221,119,2,186,81,93,209,98,8,217,70,204,181,124,223,53,38,15,111,137,193,137,62,55,224,98,215,55,169,19,39,109,236,117,79,71,175,25,137,112,107,196,8,248,227,132,55,203,1,101,103,18,47,63,122,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 408 ") {
    byte_vec_t msg { 117,146,21,37 };
    byte_vec_t sig { 25,134,171,107,10,183,52,104,97,49,169,171,185,166,123,12,117,228,247,229,173,180,198,97,46,129,74,92,12,49,158,19,175,135,18,207,124,154,238,29,178,84,246,215,18,201,144,224,93,53,0,249,165,49,210,61,193,224,101,215,108,178,106,242 };
    byte_vec_t pk { 4,5,239,118,187,114,6,145,195,5,24,29,137,146,157,15,195,229,166,182,140,54,10,4,61,146,48,238,215,254,65,53,221,229,11,89,177,42,151,128,153,95,175,45,85,167,30,134,249,111,227,21,185,80,44,251,77,114,173,131,20,161,240,195,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 408 ") {
    byte_vec_t msg { 140,67,228,204 };
    byte_vec_t sig { 214,234,162,83,107,228,237,215,173,43,239,170,100,14,193,223,84,196,10,119,40,0,9,203,250,11,154,244,106,13,119,167,60,190,251,241,197,0,32,79,121,191,212,17,192,123,253,12,251,154,159,150,251,103,121,83,8,113,91,142,185,98,13,43 };
    byte_vec_t pk { 3,243,237,172,249,224,103,120,181,235,249,148,36,168,246,1,2,115,240,221,93,248,97,54,90,69,10,37,8,210,145,204,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 408 ") {
    byte_vec_t msg { 126,179,1,224 };
    byte_vec_t sig { 129,49,145,230,99,14,251,164,4,67,32,33,152,45,85,58,131,248,24,16,127,245,180,165,66,119,79,113,44,149,189,59,104,17,148,236,92,65,250,1,220,26,102,72,125,1,213,66,117,179,255,43,218,48,145,89,123,3,120,142,53,52,209,185 };
    byte_vec_t pk { 2,33,80,71,243,185,51,152,162,55,139,127,225,82,201,42,132,88,214,218,252,237,172,170,147,113,150,175,220,109,129,178,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 409 ") {
    byte_vec_t msg { 236,209,213,194 };
    byte_vec_t sig { 195,174,49,126,254,232,121,25,181,182,235,249,39,125,49,220,155,194,136,5,215,240,143,167,4,57,95,123,189,67,216,114,240,21,45,96,108,169,59,3,54,167,112,112,81,125,155,71,125,6,140,139,31,158,122,86,169,4,146,159,33,240,61,192 };
    byte_vec_t pk { 4,75,213,223,39,8,127,91,158,77,222,118,100,115,2,84,144,66,110,219,88,69,161,62,128,198,141,171,97,238,90,195,37,14,37,31,20,159,8,44,134,254,5,85,189,162,135,34,157,194,168,202,119,159,27,197,248,167,65,155,121,50,174,73,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 409 ") {
    byte_vec_t msg { 253,5,125,29 };
    byte_vec_t sig { 109,73,76,23,138,86,34,141,132,172,253,11,113,51,88,232,66,43,140,39,75,168,171,52,159,188,186,226,13,147,223,244,134,162,86,27,28,92,74,243,166,198,49,132,106,6,17,82,43,143,84,207,41,210,19,202,22,20,104,143,67,237,35,83 };
    byte_vec_t pk { 4,175,189,233,11,107,50,133,245,186,178,227,191,48,149,80,91,81,241,246,208,175,99,135,4,157,55,239,140,136,238,198,41,160,184,31,228,19,204,78,109,134,63,140,241,227,248,192,205,152,137,92,218,203,35,38,149,219,182,90,215,162,54,33,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 409 ") {
    byte_vec_t msg { 120,15,5,184 };
    byte_vec_t sig { 86,147,10,155,105,87,126,2,100,241,39,39,195,144,57,11,96,154,186,137,59,27,247,113,253,238,117,42,34,36,32,92,29,8,55,50,246,245,233,72,116,7,133,141,146,80,171,251,100,164,188,41,215,158,112,203,18,212,255,137,84,110,94,28 };
    byte_vec_t pk { 3,72,29,136,210,58,152,132,154,13,0,1,45,156,93,220,109,164,206,205,115,35,185,161,46,221,3,251,1,194,74,207,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 409 ") {
    byte_vec_t msg { 241,234,153,11 };
    byte_vec_t sig { 151,82,191,68,245,175,248,240,90,153,84,115,208,221,209,155,191,22,128,146,35,227,43,122,73,162,100,70,216,160,212,228,13,164,184,57,102,44,49,185,183,70,39,69,17,12,32,28,58,223,184,140,134,129,177,211,222,106,254,55,150,69,78,141 };
    byte_vec_t pk { 3,129,236,189,48,233,210,147,229,249,118,166,198,20,96,171,99,28,190,155,12,8,252,17,108,227,64,107,198,52,199,222,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 410 ") {
    byte_vec_t msg { 204,235,67,199 };
    byte_vec_t sig { 5,156,20,162,142,126,199,191,7,114,62,80,108,230,242,10,20,147,179,133,82,234,131,173,249,39,129,147,218,253,6,10,44,154,189,23,8,86,18,97,49,13,176,138,94,80,70,13,154,251,54,72,133,144,48,222,201,164,93,37,188,104,177,59 };
    byte_vec_t pk { 4,58,107,108,131,176,114,22,234,164,51,245,157,197,28,76,11,192,4,89,17,178,6,146,45,233,129,159,97,170,115,177,75,26,64,36,204,206,134,223,69,213,228,80,240,176,149,22,198,90,250,249,116,196,13,21,85,4,92,217,17,51,134,152,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 410 ") {
    byte_vec_t msg { 96,35,17,53 };
    byte_vec_t sig { 21,59,224,127,161,176,50,93,233,40,226,87,225,76,253,128,181,84,184,152,255,91,28,238,58,169,27,11,229,76,189,187,37,62,126,81,50,190,82,17,36,38,74,79,253,15,213,248,90,60,110,159,25,93,36,211,207,118,198,206,251,53,28,95 };
    byte_vec_t pk { 4,63,45,87,117,224,3,45,237,29,46,124,78,11,30,228,209,157,91,136,14,244,76,131,227,46,32,205,18,185,45,164,93,101,88,52,218,64,29,116,217,104,214,218,42,68,134,81,38,161,102,39,55,49,102,18,191,239,2,241,131,107,110,225,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 410 ") {
    byte_vec_t msg { 69,93,20,84 };
    byte_vec_t sig { 245,189,116,163,199,99,125,250,139,34,44,251,128,83,134,93,131,218,175,54,75,106,52,105,227,218,158,203,247,15,20,112,159,103,59,230,213,248,76,72,7,43,73,106,172,72,248,190,2,86,95,139,126,206,133,66,67,223,34,37,212,34,106,246 };
    byte_vec_t pk { 2,69,120,18,48,46,44,24,216,27,238,153,124,13,63,154,104,223,130,241,178,160,104,146,218,169,128,76,190,129,185,170,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 410 ") {
    byte_vec_t msg { 244,53,218,99 };
    byte_vec_t sig { 245,190,59,124,68,28,131,254,207,208,31,39,184,242,236,82,248,32,255,77,213,213,45,174,91,111,46,190,84,192,101,54,210,232,164,20,78,196,247,232,92,137,154,161,97,112,249,154,100,60,172,27,103,208,133,144,133,54,156,223,203,10,20,178 };
    byte_vec_t pk { 2,92,242,171,230,154,12,33,243,145,56,25,124,158,57,50,30,117,96,164,192,170,116,117,126,20,220,9,168,100,40,45,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 411 ") {
    byte_vec_t msg { 226,174,215,30 };
    byte_vec_t sig { 132,83,152,242,191,253,15,36,50,130,77,4,243,153,67,175,21,50,149,116,78,126,39,101,214,220,29,28,36,0,37,27,10,64,126,211,94,87,119,217,94,116,115,164,192,54,251,180,94,91,215,54,21,204,255,242,85,115,54,92,84,205,131,197 };
    byte_vec_t pk { 4,151,143,144,246,249,109,109,62,249,33,188,218,90,81,59,232,61,123,149,185,236,250,149,69,182,28,232,35,27,44,202,28,194,163,164,41,8,38,242,185,235,42,112,24,156,211,200,70,165,164,51,214,79,131,80,128,215,23,55,75,57,34,18,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 411 ") {
    byte_vec_t msg { 184,1,164,240 };
    byte_vec_t sig { 87,212,95,182,109,249,84,96,208,222,251,78,187,226,144,182,119,222,158,185,122,21,121,66,45,247,42,145,15,27,120,63,8,91,131,248,14,254,116,97,102,114,42,239,97,51,26,140,29,149,134,36,99,144,88,141,99,213,121,211,182,221,107,23 };
    byte_vec_t pk { 4,41,181,234,16,161,58,141,192,86,49,15,14,123,124,251,59,19,72,30,208,92,198,42,166,236,63,58,120,227,207,214,68,12,11,122,171,234,198,133,138,20,159,214,26,98,153,125,201,78,250,13,35,242,121,59,28,174,203,143,103,125,0,237,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 411 ") {
    byte_vec_t msg { 68,196,247,5 };
    byte_vec_t sig { 126,145,228,76,252,40,127,59,85,126,175,129,254,197,60,101,197,253,174,148,206,128,86,204,200,39,53,194,33,179,213,243,215,215,161,249,38,228,5,182,34,123,45,210,234,165,33,132,238,72,211,105,65,105,111,244,140,224,60,207,134,198,129,65 };
    byte_vec_t pk { 3,170,218,222,20,239,10,28,85,218,142,243,173,190,180,126,235,18,221,30,29,203,57,131,140,92,166,2,240,63,37,171,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 411 ") {
    byte_vec_t msg { 9,173,117,126 };
    byte_vec_t sig { 122,20,18,132,88,245,7,14,150,243,199,12,127,6,135,243,148,58,199,37,248,188,50,145,102,38,58,78,82,59,21,66,241,192,118,135,177,228,108,37,152,31,113,217,176,68,179,23,86,3,43,204,252,194,212,113,101,183,136,165,126,187,166,244 };
    byte_vec_t pk { 3,248,29,136,36,18,152,16,206,187,112,64,59,114,36,154,103,102,38,72,158,27,90,203,87,214,251,141,48,212,172,143,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 412 ") {
    byte_vec_t msg { 143,240,227,144 };
    byte_vec_t sig { 225,75,48,2,94,139,162,241,87,184,68,232,152,221,55,237,94,209,213,134,93,229,129,187,219,76,130,213,18,13,252,123,34,164,120,147,153,60,235,227,157,44,73,154,85,79,146,33,224,99,0,84,111,67,76,203,229,190,81,137,20,227,114,33 };
    byte_vec_t pk { 4,106,106,151,61,74,127,179,84,65,81,230,32,61,114,38,131,91,161,180,78,10,224,70,188,65,62,135,248,114,214,13,18,222,240,8,145,229,211,198,174,84,221,25,36,118,18,133,62,106,75,146,97,138,138,218,99,145,143,86,241,136,43,180,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 412 ") {
    byte_vec_t msg { 199,148,65,187 };
    byte_vec_t sig { 194,56,8,127,185,149,183,183,56,234,120,131,91,151,90,7,149,32,89,203,93,254,194,71,233,173,82,94,62,42,157,173,180,115,248,54,228,220,226,186,92,139,210,27,82,200,24,247,202,244,101,252,175,25,169,40,240,189,92,227,154,149,233,245 };
    byte_vec_t pk { 4,14,124,164,66,205,124,121,229,181,153,145,160,237,236,99,99,116,62,171,152,48,67,76,121,235,193,214,163,86,15,93,117,241,178,100,182,61,42,220,215,76,217,214,142,141,13,146,235,131,239,255,194,138,191,15,198,126,61,247,206,198,19,28,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 412 ") {
    byte_vec_t msg { 25,63,216,221 };
    byte_vec_t sig { 211,210,94,193,153,101,219,196,138,11,234,2,42,152,212,118,176,243,117,54,54,247,149,159,123,175,48,175,199,230,81,21,230,141,63,100,75,123,60,151,236,247,161,12,155,17,111,130,178,156,239,178,164,116,61,201,37,114,100,21,188,5,212,231 };
    byte_vec_t pk { 3,75,201,193,63,4,109,159,136,81,48,219,233,165,201,79,159,37,62,208,27,71,233,128,99,167,122,87,161,232,24,52,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 412 ") {
    byte_vec_t msg { 229,62,141,1 };
    byte_vec_t sig { 144,235,6,86,172,185,125,214,125,185,16,190,190,72,4,187,172,57,12,134,57,223,95,115,219,213,187,242,224,67,73,39,226,132,233,152,66,44,251,15,175,234,188,183,148,175,107,249,78,193,21,202,208,55,203,26,78,242,236,207,71,178,41,39 };
    byte_vec_t pk { 3,97,117,42,156,238,3,173,62,206,76,34,80,190,129,31,144,52,28,206,167,232,158,117,162,149,174,173,4,53,146,17,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 413 ") {
    byte_vec_t msg { 218,21,46,100 };
    byte_vec_t sig { 67,177,125,236,10,199,159,134,106,1,89,243,230,164,79,68,232,166,13,211,237,104,167,104,228,143,200,131,128,23,241,224,81,118,173,31,227,35,168,205,122,57,148,143,112,201,11,245,35,135,184,65,75,29,68,16,86,69,176,145,234,16,222,0 };
    byte_vec_t pk { 4,209,62,104,209,7,116,86,111,200,189,123,243,94,94,64,245,150,223,215,115,118,228,71,141,50,33,157,141,99,111,182,91,160,51,234,173,120,39,69,23,173,73,91,247,39,199,212,147,159,77,222,201,45,52,74,159,126,224,116,10,61,47,120,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 413 ") {
    byte_vec_t msg { 140,102,94,194 };
    byte_vec_t sig { 129,224,43,24,71,119,151,174,47,73,128,190,170,150,45,192,237,226,118,44,77,18,130,229,131,220,135,125,233,15,170,119,155,98,187,162,139,50,158,156,88,120,212,83,22,98,45,198,178,233,43,8,187,196,141,211,249,166,67,222,98,196,13,66 };
    byte_vec_t pk { 4,253,205,75,113,76,227,198,44,143,145,219,177,31,91,37,160,231,198,52,87,216,30,186,142,25,44,161,37,33,223,59,180,19,143,173,97,192,108,168,47,175,14,79,40,252,34,158,38,112,126,107,44,122,229,115,206,15,68,239,245,18,250,90,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 413 ") {
    byte_vec_t msg { 56,209,26,188 };
    byte_vec_t sig { 149,90,40,139,70,21,174,144,167,60,200,39,215,161,243,245,97,5,167,245,125,11,187,127,47,201,3,53,221,111,57,129,56,248,200,151,68,221,25,45,147,87,75,10,160,47,142,244,142,65,154,31,83,61,183,180,83,46,42,129,149,122,197,18 };
    byte_vec_t pk { 2,31,113,162,229,40,224,153,36,135,213,134,69,132,103,2,94,130,166,128,126,75,151,217,187,18,225,82,77,116,107,76,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 413 ") {
    byte_vec_t msg { 187,227,248,145 };
    byte_vec_t sig { 227,10,26,182,147,79,54,13,25,36,126,105,41,89,216,81,80,12,139,179,173,119,189,31,91,87,22,171,148,28,112,215,54,180,151,1,217,87,98,194,145,236,245,17,239,223,206,129,51,85,222,228,13,125,231,239,17,178,145,72,150,173,192,250 };
    byte_vec_t pk { 2,123,114,48,158,10,252,164,49,30,178,200,110,178,182,228,87,211,118,34,59,87,15,225,167,152,245,135,112,25,197,68,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 414 ") {
    byte_vec_t msg { 29,253,219,164 };
    byte_vec_t sig { 122,241,27,186,72,141,75,133,110,131,205,52,159,85,18,101,171,96,108,180,84,60,245,146,58,62,93,89,155,231,56,75,144,187,195,244,255,161,14,184,124,89,255,188,221,20,117,202,70,140,206,122,196,196,26,94,184,228,125,220,242,55,238,26 };
    byte_vec_t pk { 4,4,69,30,93,240,253,203,73,251,88,25,10,236,12,254,106,173,125,189,71,208,168,2,147,171,214,112,146,42,238,40,154,38,34,42,250,99,67,184,205,36,207,181,57,67,7,137,196,100,219,116,17,64,169,47,210,143,243,85,109,141,231,225,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 414 ") {
    byte_vec_t msg { 54,237,105,4 };
    byte_vec_t sig { 29,28,186,237,146,204,226,189,103,172,190,163,232,35,156,77,73,160,246,93,54,228,206,244,118,113,9,231,67,146,177,142,244,68,47,30,180,235,92,31,70,252,84,243,178,233,37,43,234,110,6,244,136,208,54,156,23,171,214,163,70,162,117,143 };
    byte_vec_t pk { 4,161,52,6,111,204,139,234,112,3,106,113,253,86,96,189,23,73,36,61,188,44,142,97,1,150,14,105,173,255,89,129,153,9,208,120,74,60,119,215,129,151,90,232,17,140,103,180,205,219,248,19,172,105,224,33,39,144,147,72,82,104,149,225,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 414 ") {
    byte_vec_t msg { 15,82,183,13 };
    byte_vec_t sig { 240,22,13,255,230,183,31,15,156,118,17,235,156,152,120,234,212,169,7,166,108,8,11,112,38,246,37,197,153,223,112,27,139,104,189,30,221,203,188,100,31,237,45,25,110,226,136,88,185,187,185,52,66,93,41,125,195,50,8,186,12,138,246,126 };
    byte_vec_t pk { 2,232,94,65,239,12,83,127,163,182,223,102,135,15,2,202,8,224,207,116,219,180,246,9,58,67,189,15,253,196,114,136,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 414 ") {
    byte_vec_t msg { 108,251,74,69 };
    byte_vec_t sig { 174,18,232,85,147,57,19,253,161,156,198,189,100,160,213,238,245,227,15,160,130,122,251,222,249,139,31,247,242,189,70,223,163,145,120,125,71,205,107,234,13,7,94,125,72,4,233,31,156,237,53,248,116,13,135,87,183,176,58,186,193,29,39,207 };
    byte_vec_t pk { 2,196,0,21,69,9,193,255,215,243,163,248,197,210,212,17,242,159,210,217,1,28,89,45,27,80,110,13,49,34,192,117,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 415 ") {
    byte_vec_t msg { 64,220,191,15 };
    byte_vec_t sig { 3,44,205,45,92,169,32,25,214,207,157,168,108,90,33,45,112,78,236,57,151,107,62,135,155,54,255,1,45,115,134,242,211,66,218,145,245,198,109,115,128,186,123,134,160,50,59,155,97,22,212,235,131,151,80,143,18,2,252,188,183,233,85,251 };
    byte_vec_t pk { 4,186,239,94,227,62,151,243,133,60,243,173,128,254,124,55,137,158,161,239,194,45,215,79,120,130,201,238,228,116,152,67,55,16,115,251,26,195,34,234,39,115,38,108,152,240,221,84,79,178,28,131,203,23,51,107,163,164,80,62,76,136,115,3,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 415 ") {
    byte_vec_t msg { 239,241,34,66 };
    byte_vec_t sig { 139,65,115,203,103,4,139,127,36,59,4,157,211,72,95,141,227,228,248,242,24,168,12,240,225,239,127,32,204,236,169,234,14,126,208,38,120,165,25,9,105,60,177,240,186,168,99,249,195,204,208,34,186,160,223,245,133,154,122,39,70,103,27,132 };
    byte_vec_t pk { 4,113,114,146,20,254,123,53,21,200,241,136,100,241,139,236,14,75,220,26,102,28,158,177,74,233,117,126,191,45,87,132,235,53,17,228,82,46,90,200,132,141,19,141,79,200,171,224,42,208,149,243,13,181,150,170,67,174,34,54,232,112,105,14,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 415 ") {
    byte_vec_t msg { 94,157,27,26 };
    byte_vec_t sig { 16,49,12,145,118,110,237,129,229,4,57,103,54,110,10,95,247,199,164,185,108,132,136,116,83,114,184,211,62,150,161,170,161,41,90,106,19,201,242,13,190,26,54,251,182,235,14,33,210,207,44,127,118,30,17,140,162,94,39,170,35,27,56,234 };
    byte_vec_t pk { 2,229,159,97,6,83,93,92,144,69,244,90,119,152,140,90,24,126,128,23,233,102,73,181,125,115,187,44,188,255,222,25,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 415 ") {
    byte_vec_t msg { 123,30,214,200 };
    byte_vec_t sig { 166,168,157,163,231,19,8,136,234,247,120,131,198,157,64,22,210,33,213,25,74,239,208,254,192,67,232,176,229,27,52,141,210,25,97,226,34,242,35,41,0,46,23,52,255,79,232,31,131,94,5,187,169,194,231,92,50,253,255,209,205,154,157,9 };
    byte_vec_t pk { 2,194,14,101,183,64,8,202,76,146,247,130,91,190,26,168,202,51,43,62,99,238,40,40,25,0,47,81,248,2,179,85,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 416 ") {
    byte_vec_t msg { 166,149,121,239 };
    byte_vec_t sig { 129,189,151,38,50,107,143,119,14,110,254,133,62,225,119,189,10,137,60,93,164,253,92,67,15,86,174,83,156,171,193,201,199,211,64,230,183,234,255,13,167,99,215,251,92,153,101,112,88,219,188,211,27,249,46,195,77,102,198,88,134,161,253,25 };
    byte_vec_t pk { 4,14,148,10,210,52,225,57,205,155,162,200,37,116,11,14,5,222,25,7,105,192,81,136,183,231,203,247,104,62,252,154,109,206,236,146,254,136,118,251,22,168,245,182,33,230,95,216,178,208,73,252,250,236,146,153,176,158,195,40,199,122,217,199,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 416 ") {
    byte_vec_t msg { 211,16,239,229 };
    byte_vec_t sig { 215,89,20,166,8,1,177,110,35,181,6,35,86,91,7,89,190,158,240,125,54,113,125,248,16,136,20,10,65,79,139,227,78,146,242,9,118,169,138,143,246,63,157,199,8,203,72,237,19,124,217,167,208,250,137,232,63,45,93,137,176,15,88,84 };
    byte_vec_t pk { 4,250,213,114,220,118,25,39,223,231,175,90,42,184,83,180,245,154,67,125,249,24,205,118,251,192,244,81,92,250,123,165,67,105,241,177,24,236,163,82,248,15,82,239,107,85,240,20,177,111,101,112,102,52,6,205,35,129,88,255,64,46,198,31,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 416 ") {
    byte_vec_t msg { 207,54,27,27 };
    byte_vec_t sig { 73,157,169,95,44,173,134,255,89,180,219,198,41,38,23,51,130,63,139,164,133,101,187,51,252,135,65,209,110,9,166,148,46,212,90,149,9,135,171,117,79,140,150,119,36,11,82,42,125,188,0,253,11,72,64,221,152,160,148,106,167,137,49,113 };
    byte_vec_t pk { 3,223,126,166,217,155,56,93,65,83,90,45,63,144,191,26,170,237,169,132,101,174,51,153,64,192,55,235,66,192,112,122,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 416 ") {
    byte_vec_t msg { 59,165,89,243 };
    byte_vec_t sig { 166,242,25,4,136,152,116,203,6,85,102,82,242,223,252,208,135,90,209,37,242,43,111,44,44,33,125,229,35,205,125,91,114,26,110,166,2,124,176,47,161,225,161,120,144,141,231,94,48,3,79,115,57,206,169,109,106,27,64,200,222,47,126,233 };
    byte_vec_t pk { 2,16,168,172,178,59,198,71,204,152,238,39,3,31,242,13,216,99,106,75,184,74,132,131,140,195,149,214,210,232,211,233,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 417 ") {
    byte_vec_t msg { 138,177,91,99 };
    byte_vec_t sig { 128,240,120,105,4,182,220,18,228,141,71,249,73,177,71,60,199,231,242,32,184,18,143,131,67,98,158,254,36,4,42,233,5,36,67,143,163,0,105,115,251,230,57,43,191,65,174,24,29,170,242,1,70,164,64,251,86,191,44,222,246,163,227,34 };
    byte_vec_t pk { 4,58,190,210,91,245,127,176,70,111,236,87,21,157,9,174,76,73,46,141,106,45,26,221,224,59,39,95,128,71,177,26,80,164,148,195,37,97,143,2,235,85,232,192,192,30,157,9,90,214,176,98,77,45,236,34,239,140,218,136,136,229,122,218,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 417 ") {
    byte_vec_t msg { 251,76,129,183 };
    byte_vec_t sig { 172,229,239,38,88,68,135,12,50,205,242,66,212,101,3,128,242,124,206,147,197,19,219,153,174,206,61,19,84,10,171,255,82,190,113,52,84,108,230,197,20,88,142,122,117,77,196,139,210,121,160,79,43,43,71,148,51,7,171,196,127,218,49,74 };
    byte_vec_t pk { 4,30,213,37,101,34,219,133,149,48,169,207,3,20,185,60,112,221,50,178,146,236,41,45,84,5,18,85,230,35,91,252,254,221,48,249,57,210,78,172,49,40,227,248,123,55,20,165,47,111,104,200,42,161,154,124,137,72,191,246,223,19,146,212,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 417 ") {
    byte_vec_t msg { 146,137,120,119 };
    byte_vec_t sig { 194,228,79,113,165,119,79,158,24,164,177,132,7,22,28,105,153,91,17,161,25,104,213,150,255,171,113,16,79,62,91,110,129,153,249,127,16,201,233,44,251,77,239,87,178,195,108,205,19,139,60,54,233,188,1,213,27,112,254,64,251,19,229,243 };
    byte_vec_t pk { 2,114,204,33,100,216,54,160,89,237,100,136,171,45,234,228,34,146,170,118,194,9,82,97,200,177,14,199,41,43,148,90,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 417 ") {
    byte_vec_t msg { 186,30,4,42 };
    byte_vec_t sig { 37,128,245,201,230,227,120,50,20,151,149,218,181,62,104,50,229,209,190,93,159,51,64,38,193,55,182,70,255,74,3,255,211,203,110,246,70,90,106,232,227,201,234,232,67,141,153,89,49,1,249,199,196,6,108,46,236,49,123,77,224,88,13,165 };
    byte_vec_t pk { 2,116,183,253,200,173,212,91,164,32,147,111,138,110,126,100,134,142,2,155,130,165,236,206,154,236,175,166,225,79,161,27,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 418 ") {
    byte_vec_t msg { 22,46,76,66 };
    byte_vec_t sig { 158,30,192,11,8,13,71,238,247,222,93,2,221,129,48,216,47,106,228,21,212,252,212,95,75,173,199,118,105,185,44,214,193,3,139,57,233,201,105,212,58,133,253,181,104,227,131,3,202,81,134,206,229,18,245,195,121,158,249,250,179,182,130,56 };
    byte_vec_t pk { 4,182,144,206,114,114,76,120,228,194,52,234,148,156,209,1,79,248,175,132,172,220,201,74,193,74,45,56,137,210,145,70,187,241,157,223,202,211,70,90,177,241,62,133,120,95,52,110,66,29,128,9,209,236,76,145,54,135,205,110,112,154,10,89,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 418 ") {
    byte_vec_t msg { 168,197,73,94 };
    byte_vec_t sig { 249,203,32,94,188,185,8,128,129,86,122,95,195,199,47,139,91,75,32,227,220,188,246,63,182,171,64,193,89,47,156,150,172,108,17,67,82,139,41,48,243,34,153,42,195,78,14,148,63,52,193,42,94,165,119,110,26,33,136,50,7,19,161,3 };
    byte_vec_t pk { 4,109,103,46,147,95,117,174,109,86,176,96,6,119,105,173,153,66,61,241,234,159,221,82,79,64,36,170,179,4,151,238,145,165,241,163,146,0,238,156,143,101,234,96,137,0,249,115,48,28,152,123,73,190,121,132,235,54,49,190,15,207,149,172,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 418 ") {
    byte_vec_t msg { 194,25,181,178 };
    byte_vec_t sig { 230,131,73,53,194,87,185,217,235,91,76,149,28,108,53,181,115,84,121,166,211,250,142,183,207,180,200,215,254,61,90,198,176,92,157,255,128,195,170,80,234,232,67,185,11,5,170,26,82,40,163,52,107,161,180,223,40,177,125,184,118,55,88,114 };
    byte_vec_t pk { 3,105,252,174,214,202,123,75,120,25,251,227,51,158,115,218,211,189,217,46,33,62,169,143,87,21,124,198,205,75,202,19,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 418 ") {
    byte_vec_t msg { 250,75,204,206 };
    byte_vec_t sig { 254,245,167,131,227,225,162,144,205,55,229,59,219,24,125,195,3,117,10,17,240,238,52,45,18,54,90,109,153,253,145,198,5,213,148,6,58,14,183,3,220,16,83,73,137,31,145,74,146,226,213,158,170,128,40,178,208,31,239,154,220,50,207,172 };
    byte_vec_t pk { 2,244,32,66,230,8,115,240,187,167,83,3,241,105,34,87,254,30,29,192,65,58,127,118,116,178,163,11,179,150,50,27,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 419 ") {
    byte_vec_t msg { 120,27,13,71 };
    byte_vec_t sig { 67,8,99,19,47,242,91,192,161,86,239,114,188,51,253,37,196,87,106,168,53,71,167,44,106,107,102,127,117,12,123,155,208,247,46,182,81,41,57,151,25,100,83,189,221,131,126,130,56,58,43,43,123,208,2,215,150,30,1,56,157,197,119,144 };
    byte_vec_t pk { 4,206,191,2,143,84,107,177,210,241,43,142,197,254,9,147,45,136,116,142,184,167,216,49,97,99,195,96,54,13,173,176,10,233,100,49,41,70,17,72,175,243,246,143,152,86,109,214,175,158,125,50,167,239,25,248,183,179,32,247,211,99,85,86,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 419 ") {
    byte_vec_t msg { 223,17,46,87 };
    byte_vec_t sig { 199,61,154,158,216,60,96,91,131,55,247,183,41,15,79,65,246,7,50,201,61,93,163,215,243,97,66,218,99,160,117,110,72,247,171,38,147,117,21,179,70,56,63,226,77,42,185,153,114,69,198,219,100,34,64,251,250,166,239,246,11,65,125,147 };
    byte_vec_t pk { 4,168,150,151,207,102,71,92,44,191,46,178,116,125,143,51,19,203,246,208,205,119,218,209,189,217,214,90,254,139,80,221,15,23,67,40,58,37,174,229,20,173,162,151,121,171,179,194,15,239,145,102,194,173,168,50,247,222,188,252,194,39,101,114,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 419 ") {
    byte_vec_t msg { 73,12,160,37 };
    byte_vec_t sig { 39,77,131,14,125,159,179,117,150,188,172,84,63,50,155,92,89,245,105,204,213,236,222,70,187,52,33,111,163,236,235,227,28,93,242,240,17,238,37,57,18,128,203,28,195,70,192,69,241,92,228,38,16,207,128,169,155,35,102,152,117,56,215,113 };
    byte_vec_t pk { 3,46,52,14,147,126,197,21,39,64,253,79,157,89,36,50,86,13,10,29,62,109,201,243,166,219,239,57,40,71,30,47,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 419 ") {
    byte_vec_t msg { 45,29,126,117 };
    byte_vec_t sig { 162,185,136,176,22,218,179,215,126,85,93,210,195,168,219,129,191,56,250,176,246,39,9,233,26,160,216,81,110,53,147,170,202,162,132,97,49,155,251,24,46,222,77,182,95,169,231,208,13,153,152,127,9,1,41,143,105,46,6,86,151,190,235,243 };
    byte_vec_t pk { 2,70,230,53,231,105,22,219,163,134,20,24,41,156,206,246,68,97,142,186,162,244,94,174,164,13,44,178,243,74,250,7,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 420 ") {
    byte_vec_t msg { 254,203,155,189 };
    byte_vec_t sig { 64,187,225,91,231,61,244,226,3,53,230,135,90,44,168,3,113,77,82,244,52,238,228,245,115,229,83,112,104,209,118,110,40,43,78,12,46,178,233,144,126,202,46,215,213,83,190,84,123,180,253,108,80,82,94,112,197,212,90,157,163,161,128,100 };
    byte_vec_t pk { 4,233,48,84,231,121,15,114,71,112,77,114,38,109,142,154,113,189,15,85,110,111,11,119,113,252,246,199,136,44,225,133,211,90,142,20,81,71,248,165,183,18,6,26,242,127,189,99,1,67,236,111,229,42,20,226,185,134,17,57,53,109,79,63,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 420 ") {
    byte_vec_t msg { 23,211,109,140 };
    byte_vec_t sig { 209,29,28,145,98,237,12,232,99,227,156,82,172,88,116,58,28,117,71,147,160,217,27,143,239,117,130,204,89,16,138,200,40,87,105,166,140,127,29,79,20,59,63,69,231,215,141,89,36,242,181,198,27,113,204,134,200,248,184,72,91,74,166,110 };
    byte_vec_t pk { 4,244,13,198,112,115,74,70,58,49,239,177,133,194,113,250,33,191,203,242,58,171,7,207,190,63,65,169,222,28,130,150,10,208,246,254,242,56,122,170,68,21,231,95,202,122,64,34,105,56,66,58,207,19,208,71,9,154,202,6,197,13,92,4,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 420 ") {
    byte_vec_t msg { 231,103,222,170 };
    byte_vec_t sig { 230,170,9,216,40,102,239,181,62,232,147,213,61,91,17,240,13,50,151,53,110,2,88,204,112,238,98,217,230,59,3,162,49,54,110,183,205,221,139,108,147,167,168,207,151,45,74,207,189,44,232,94,129,30,219,208,164,65,139,53,86,66,153,73 };
    byte_vec_t pk { 2,128,144,35,61,91,37,255,249,158,66,233,76,30,218,118,83,221,66,254,25,18,101,57,240,7,86,21,178,89,12,235,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 420 ") {
    byte_vec_t msg { 119,146,235,126 };
    byte_vec_t sig { 105,197,237,48,174,144,192,116,165,219,90,185,131,20,25,231,100,71,146,220,16,21,47,72,33,90,80,133,121,132,28,57,88,227,137,160,125,57,233,212,194,40,89,226,226,39,148,51,220,223,22,184,34,62,170,5,115,233,95,49,198,192,132,119 };
    byte_vec_t pk { 3,202,175,174,251,114,59,104,255,129,106,169,250,149,13,31,132,219,134,52,109,76,113,142,108,193,53,147,82,118,135,25,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 421 ") {
    byte_vec_t msg { 138,123,59,93 };
    byte_vec_t sig { 175,250,40,158,242,172,52,9,166,216,166,30,88,9,197,217,139,171,24,93,182,38,19,21,41,234,114,4,55,32,220,183,100,213,127,32,187,205,231,251,246,14,5,197,114,152,238,20,56,40,144,25,212,217,164,91,56,197,14,59,98,141,213,208 };
    byte_vec_t pk { 4,236,32,1,65,97,89,10,80,162,65,100,141,197,218,37,250,198,61,211,145,216,138,4,242,155,20,116,109,133,38,29,96,23,26,129,202,209,35,224,233,172,216,23,51,184,63,79,117,165,38,16,79,4,189,82,141,190,193,59,168,75,193,147,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 421 ") {
    byte_vec_t msg { 225,199,144,96 };
    byte_vec_t sig { 64,216,39,90,96,108,183,189,133,106,122,170,156,25,181,93,147,186,154,183,11,85,238,142,246,251,239,176,253,218,40,212,222,233,247,180,187,157,251,51,191,36,39,103,201,83,75,206,250,149,24,131,124,6,113,112,165,92,117,175,65,7,19,188 };
    byte_vec_t pk { 4,125,144,21,4,132,34,46,134,253,112,42,247,76,181,164,172,41,217,243,62,250,214,114,15,44,35,187,41,73,57,216,66,35,120,61,150,131,73,167,191,37,97,130,143,93,202,181,160,211,79,6,57,195,153,45,100,18,222,161,81,137,11,213,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 421 ") {
    byte_vec_t msg { 42,165,200,237 };
    byte_vec_t sig { 152,179,35,216,67,127,203,82,20,70,8,96,141,198,188,59,20,179,37,56,184,54,171,247,200,153,154,93,64,165,190,237,196,104,114,192,142,159,39,67,28,163,165,38,129,183,198,238,165,223,28,151,212,199,191,51,38,47,209,67,229,181,38,130 };
    byte_vec_t pk { 3,32,45,93,37,94,90,176,180,226,161,107,242,73,73,117,48,152,181,109,70,240,250,57,250,137,113,213,248,47,49,168,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 421 ") {
    byte_vec_t msg { 231,209,131,168 };
    byte_vec_t sig { 48,31,205,73,90,46,119,146,38,91,217,208,253,181,53,87,174,138,136,14,59,30,152,223,198,246,245,233,97,236,157,46,90,243,166,11,219,158,79,172,168,0,74,39,87,69,219,68,110,57,57,21,139,172,30,249,167,141,216,160,106,201,216,47 };
    byte_vec_t pk { 2,79,104,233,99,148,235,24,179,144,147,224,44,33,155,194,138,186,220,117,179,210,195,0,232,225,216,173,54,67,206,119,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 422 ") {
    byte_vec_t msg { 226,233,238,123 };
    byte_vec_t sig { 191,94,199,236,96,124,139,70,96,20,224,18,111,105,248,49,143,58,67,92,197,146,62,10,1,109,61,2,125,229,66,144,214,72,103,118,108,14,201,200,198,7,209,233,108,101,43,136,141,223,79,62,19,184,35,172,28,130,61,181,165,118,151,26 };
    byte_vec_t pk { 4,118,206,206,183,8,43,154,227,101,13,246,159,166,149,85,2,151,6,142,180,60,80,159,231,216,38,206,114,88,152,245,109,97,6,64,20,33,71,104,255,49,142,141,231,170,58,41,45,123,105,64,239,142,244,39,206,59,172,216,149,1,210,147,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 422 ") {
    byte_vec_t msg { 158,30,201,30 };
    byte_vec_t sig { 248,151,244,208,237,53,178,125,196,38,252,65,5,203,99,213,246,50,51,22,37,138,206,223,113,211,22,115,101,196,8,63,228,238,52,196,86,128,204,58,102,45,172,47,80,114,29,86,21,247,160,66,224,191,14,147,201,187,248,146,248,170,96,90 };
    byte_vec_t pk { 4,122,198,127,14,35,181,243,45,96,161,246,40,20,23,114,125,83,206,240,150,23,69,5,20,250,59,75,60,219,162,107,79,220,40,215,114,88,60,219,166,107,223,236,44,156,27,181,205,160,228,203,45,125,225,0,59,17,234,169,148,105,146,3,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 422 ") {
    byte_vec_t msg { 132,233,16,153 };
    byte_vec_t sig { 255,185,201,226,201,171,78,190,21,52,52,159,236,154,144,79,251,180,131,1,223,236,205,73,36,63,43,110,246,61,11,240,5,101,81,138,39,53,74,157,171,95,3,42,114,170,73,162,235,222,61,47,108,69,141,189,165,46,127,134,129,229,0,196 };
    byte_vec_t pk { 3,78,228,12,44,158,180,36,14,85,112,207,251,235,60,188,157,108,173,182,255,97,214,226,49,241,251,205,159,140,11,224,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 422 ") {
    byte_vec_t msg { 145,245,31,105 };
    byte_vec_t sig { 18,219,90,76,184,208,90,212,199,217,14,73,150,149,226,225,142,172,251,137,81,68,19,169,179,1,137,212,35,221,110,236,64,12,254,25,6,54,96,210,146,236,132,236,135,97,115,181,235,205,179,147,212,55,50,72,57,175,186,209,241,96,241,216 };
    byte_vec_t pk { 3,226,247,181,237,133,49,71,246,210,111,27,92,135,252,56,31,19,118,179,166,59,181,56,170,78,6,218,134,82,103,190,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 423 ") {
    byte_vec_t msg { 1,85,162,183 };
    byte_vec_t sig { 19,44,184,220,108,91,22,83,162,37,154,241,122,241,131,2,1,226,239,208,241,168,13,110,19,101,138,183,59,96,201,253,162,128,29,7,200,244,90,251,50,227,53,99,109,181,113,232,169,111,174,29,71,217,24,72,247,115,246,173,245,35,137,184 };
    byte_vec_t pk { 4,213,150,176,231,77,165,14,82,64,225,210,216,87,207,11,163,103,53,162,222,151,157,154,141,103,15,240,51,70,72,192,108,197,241,112,74,68,47,41,134,34,31,86,204,183,146,213,11,115,69,19,199,85,151,200,93,104,252,111,230,62,214,131,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 423 ") {
    byte_vec_t msg { 44,229,31,133 };
    byte_vec_t sig { 78,10,112,178,182,21,157,130,43,176,240,156,37,96,241,150,91,71,129,79,236,157,87,224,99,184,249,84,111,87,221,126,165,16,177,4,206,73,119,160,71,170,100,147,136,39,142,242,9,250,35,190,227,186,173,42,64,170,171,223,181,91,246,132 };
    byte_vec_t pk { 4,65,24,69,178,221,60,196,134,167,90,98,227,112,178,215,47,60,156,39,250,221,51,244,227,18,14,187,196,26,119,135,89,217,179,119,156,188,188,99,24,31,89,176,197,27,136,151,63,255,179,44,223,243,224,191,20,241,237,218,254,9,10,34,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 423 ") {
    byte_vec_t msg { 118,230,84,176 };
    byte_vec_t sig { 227,255,183,157,95,215,85,170,110,59,245,55,133,116,126,160,168,126,169,37,238,82,227,87,165,35,230,56,24,229,171,244,170,135,174,60,45,227,16,119,252,122,178,71,166,93,136,20,171,169,6,170,45,109,57,223,114,122,78,221,254,90,26,82 };
    byte_vec_t pk { 2,24,112,62,58,128,210,67,252,210,113,178,87,70,63,59,4,151,0,30,68,71,231,239,96,183,114,248,239,201,217,126,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 423 ") {
    byte_vec_t msg { 99,253,137,130 };
    byte_vec_t sig { 198,228,112,81,254,50,126,227,139,124,114,219,11,179,106,178,145,177,174,60,30,76,249,27,60,119,22,96,219,187,150,194,38,44,199,45,115,221,205,135,66,145,167,64,209,71,187,64,199,141,94,144,109,45,39,64,35,215,7,33,240,29,206,78 };
    byte_vec_t pk { 2,126,71,129,252,119,153,249,254,91,114,79,174,85,86,56,230,88,39,77,200,134,165,148,241,206,135,122,127,254,197,53,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 424 ") {
    byte_vec_t msg { 224,247,168,44 };
    byte_vec_t sig { 170,240,96,204,157,8,108,40,140,196,60,193,206,129,89,172,158,102,56,187,17,145,226,84,9,111,13,150,74,200,120,248,150,82,64,161,132,174,12,238,32,133,216,233,155,183,93,60,128,123,53,173,28,18,1,22,180,97,70,195,130,0,88,85 };
    byte_vec_t pk { 4,231,123,10,200,159,48,66,81,215,179,199,138,8,92,101,72,160,124,137,50,86,157,84,53,39,142,116,22,2,174,154,205,121,229,33,234,156,249,158,243,166,77,105,89,11,34,155,206,237,196,50,196,248,230,57,64,105,23,217,8,140,124,99,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 424 ") {
    byte_vec_t msg { 106,90,202,38 };
    byte_vec_t sig { 221,109,91,193,129,190,225,253,249,69,107,11,228,166,229,26,96,35,188,49,5,66,93,199,16,54,64,39,193,235,178,127,130,218,130,90,248,153,63,7,59,61,194,117,176,166,58,245,244,203,188,207,103,83,92,115,155,99,118,208,187,249,201,116 };
    byte_vec_t pk { 4,131,149,76,189,255,141,159,23,254,3,35,117,61,67,64,97,54,140,140,145,104,53,132,220,229,12,48,103,237,90,208,205,57,253,47,228,102,7,36,197,164,125,87,90,65,63,58,211,209,114,169,223,16,219,96,74,79,32,69,54,47,107,221,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 424 ") {
    byte_vec_t msg { 190,81,207,60 };
    byte_vec_t sig { 125,203,56,230,90,227,120,241,124,202,158,54,136,133,150,182,24,170,127,47,61,49,124,205,8,13,252,94,169,132,134,99,18,42,59,228,96,94,108,216,7,38,246,114,215,125,15,137,179,218,72,105,135,112,65,107,146,132,125,227,26,61,173,152 };
    byte_vec_t pk { 3,23,215,253,205,213,176,56,129,246,65,101,9,2,177,115,245,215,154,240,134,143,60,123,244,39,120,80,156,149,103,6,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 424 ") {
    byte_vec_t msg { 130,65,118,221 };
    byte_vec_t sig { 76,66,120,255,121,86,19,186,183,190,54,198,238,88,111,94,38,206,152,235,62,72,23,190,95,103,154,215,22,96,195,145,33,102,155,191,34,8,169,198,27,160,146,187,168,70,58,140,42,133,77,13,37,250,180,138,248,226,29,235,116,107,138,7 };
    byte_vec_t pk { 2,131,126,42,133,226,147,155,97,177,246,75,188,192,238,239,186,101,161,77,239,249,128,190,99,161,162,141,152,228,84,95,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 425 ") {
    byte_vec_t msg { 213,235,57,247 };
    byte_vec_t sig { 156,241,29,68,68,139,172,17,104,204,127,15,110,176,148,4,227,7,75,93,220,118,95,217,48,242,227,181,10,205,97,211,18,36,63,6,52,228,199,15,253,67,133,93,210,22,14,202,55,116,73,154,121,144,180,49,101,184,210,185,69,0,199,176 };
    byte_vec_t pk { 4,43,141,46,203,167,88,177,241,11,21,210,187,44,145,37,144,31,89,225,121,63,238,101,159,18,192,170,137,190,109,221,189,82,110,6,23,21,162,84,105,70,175,68,156,7,68,171,30,30,226,236,124,123,178,144,175,211,151,150,199,115,177,240,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 425 ") {
    byte_vec_t msg { 183,217,224,239 };
    byte_vec_t sig { 214,209,77,12,138,100,7,168,205,70,120,124,160,147,4,78,17,118,96,217,20,169,166,249,154,114,122,90,61,198,39,127,140,141,89,10,16,178,31,120,129,2,95,91,130,173,57,115,99,185,32,5,130,117,181,190,178,17,102,43,103,93,168,81 };
    byte_vec_t pk { 4,108,106,153,186,85,85,118,53,142,191,94,191,51,207,79,131,182,66,189,182,187,253,4,40,14,84,129,166,28,83,12,55,1,101,191,6,58,198,87,99,213,137,208,203,164,79,172,194,102,19,158,167,123,248,210,220,251,38,186,224,158,162,178,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 425 ") {
    byte_vec_t msg { 44,158,76,122 };
    byte_vec_t sig { 160,103,137,88,151,255,18,133,93,147,104,106,216,143,131,25,143,44,218,227,141,227,11,144,162,83,154,136,127,155,173,78,134,76,71,81,114,160,128,89,24,12,34,60,117,40,30,37,155,116,143,50,20,128,224,35,102,41,60,19,241,138,1,194 };
    byte_vec_t pk { 3,48,113,36,48,107,191,133,131,136,112,55,160,8,73,150,132,242,160,18,188,205,176,221,254,174,155,255,164,106,58,130,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 425 ") {
    byte_vec_t msg { 203,154,255,47 };
    byte_vec_t sig { 205,242,62,77,190,130,239,194,242,81,226,252,170,180,47,209,142,201,179,110,20,182,132,144,236,255,200,50,119,41,71,87,0,141,71,76,2,189,104,2,110,61,20,8,51,62,15,231,106,91,75,29,195,112,135,53,210,59,207,87,229,211,166,57 };
    byte_vec_t pk { 2,126,0,193,251,212,129,137,196,100,113,242,63,182,126,77,58,71,10,191,233,210,139,113,205,167,151,27,63,205,56,100,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 426 ") {
    byte_vec_t msg { 56,202,115,221 };
    byte_vec_t sig { 168,177,217,2,106,172,141,129,15,63,160,234,239,204,243,112,57,1,151,6,173,157,153,250,16,28,180,234,46,21,58,189,40,84,197,228,202,112,184,71,164,203,6,247,161,86,60,1,147,75,111,180,108,184,108,50,243,189,216,221,152,196,239,162 };
    byte_vec_t pk { 4,154,119,48,221,106,24,129,98,181,21,218,54,220,255,212,51,130,21,62,106,207,247,78,215,170,36,179,209,16,148,58,253,51,195,232,186,7,87,198,130,249,97,121,20,208,99,223,25,205,54,88,155,0,221,51,6,143,176,32,21,15,188,133,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 426 ") {
    byte_vec_t msg { 11,11,231,83 };
    byte_vec_t sig { 18,32,137,59,214,156,173,109,180,12,118,102,21,73,52,233,110,66,136,50,34,248,62,151,155,152,126,230,163,159,246,7,8,47,204,201,220,252,231,207,177,199,203,178,183,80,182,155,151,10,28,18,6,169,49,73,125,113,34,38,255,91,126,33 };
    byte_vec_t pk { 4,43,139,245,236,13,26,202,115,11,224,237,208,173,65,44,115,136,108,212,122,203,175,73,207,61,15,164,201,206,154,162,24,106,115,144,86,90,23,215,252,45,112,99,149,138,162,16,105,109,208,207,187,117,130,196,14,161,161,109,207,123,40,23,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 426 ") {
    byte_vec_t msg { 5,71,99,50 };
    byte_vec_t sig { 201,85,212,107,12,166,62,57,101,45,193,25,61,251,237,226,190,41,208,137,224,42,178,168,35,113,11,202,96,221,245,76,233,194,5,243,222,144,94,79,13,199,149,180,141,99,207,56,54,21,75,84,54,232,104,232,47,149,75,164,182,81,96,130 };
    byte_vec_t pk { 3,143,160,242,169,10,82,5,135,235,55,59,89,189,185,171,72,171,190,255,191,40,153,64,178,80,242,189,128,167,177,31,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 426 ") {
    byte_vec_t msg { 158,215,187,147 };
    byte_vec_t sig { 15,226,92,157,192,92,37,44,52,83,212,36,113,15,37,95,16,108,122,20,100,87,175,125,6,60,204,116,136,149,33,232,9,194,66,69,156,192,40,163,132,115,223,86,99,175,29,27,89,142,230,252,20,130,143,185,234,72,219,68,158,237,114,209 };
    byte_vec_t pk { 3,46,38,250,202,249,81,55,122,246,192,243,126,235,206,202,48,98,27,79,49,136,85,183,51,152,245,248,153,135,39,212,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 427 ") {
    byte_vec_t msg { 197,97,234,69 };
    byte_vec_t sig { 147,39,248,239,95,249,132,8,158,0,128,167,72,1,130,189,195,212,170,75,187,163,28,238,254,25,128,183,132,186,199,188,208,142,91,111,225,27,52,183,138,134,236,115,247,166,35,97,34,70,49,187,8,75,123,208,144,53,61,239,147,188,252,127 };
    byte_vec_t pk { 4,248,98,226,109,39,166,68,34,186,120,125,207,144,68,122,234,105,151,82,227,61,16,75,120,77,75,231,220,253,130,74,239,117,14,45,68,68,209,118,251,159,227,59,228,203,55,138,141,58,99,182,233,240,161,27,45,111,149,127,72,241,213,165,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 427 ") {
    byte_vec_t msg { 228,44,229,203 };
    byte_vec_t sig { 91,123,6,222,126,78,77,143,145,151,182,118,225,139,75,224,37,51,36,218,239,189,127,229,33,154,80,59,248,57,116,169,83,40,168,225,245,22,146,148,243,164,21,156,176,234,151,0,200,47,234,92,229,115,13,127,229,22,152,229,234,43,57,240 };
    byte_vec_t pk { 4,70,218,27,135,163,198,170,122,12,0,115,33,55,228,205,59,245,171,11,46,24,101,133,150,62,6,189,98,144,41,65,67,25,251,79,60,138,226,137,251,3,202,51,163,227,178,9,61,62,107,203,202,237,151,236,215,230,130,83,86,235,251,86,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 427 ") {
    byte_vec_t msg { 56,68,73,27 };
    byte_vec_t sig { 242,126,125,165,84,0,139,29,111,240,96,17,0,161,175,36,43,57,162,71,5,166,99,97,162,43,48,41,221,82,66,229,171,250,153,94,84,54,52,139,90,105,123,2,251,211,85,188,9,254,90,174,168,134,215,167,92,38,204,195,207,215,152,105 };
    byte_vec_t pk { 3,4,70,124,79,207,122,47,15,101,195,240,92,151,247,245,255,82,126,176,199,232,56,244,142,130,52,194,195,80,77,136,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 427 ") {
    byte_vec_t msg { 92,73,244,148 };
    byte_vec_t sig { 124,201,123,254,151,175,69,225,204,218,196,127,170,119,7,79,66,42,233,246,97,227,145,120,87,216,192,77,41,237,49,250,115,251,217,202,129,98,148,40,147,134,192,173,191,248,26,61,94,30,46,211,253,112,23,178,198,71,36,98,124,217,102,186 };
    byte_vec_t pk { 3,255,62,215,211,63,236,116,163,26,13,151,48,212,176,194,238,100,180,152,183,158,205,160,32,145,197,253,219,144,170,37,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 428 ") {
    byte_vec_t msg { 184,126,58,98 };
    byte_vec_t sig { 150,91,33,127,140,85,142,12,230,87,138,47,191,130,45,235,191,177,96,241,146,125,189,69,30,236,203,135,3,152,124,227,150,106,133,115,130,179,198,216,61,115,90,164,140,89,6,35,45,90,20,241,37,107,251,60,95,7,107,120,142,186,180,25 };
    byte_vec_t pk { 4,28,73,62,224,1,100,17,79,233,36,33,15,96,245,216,247,19,226,45,7,12,133,0,143,10,236,44,104,230,217,249,48,58,132,201,194,129,189,58,55,162,97,60,18,94,75,61,245,87,173,84,34,21,227,68,11,51,205,244,225,217,218,173,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 428 ") {
    byte_vec_t msg { 165,255,9,222 };
    byte_vec_t sig { 129,32,109,144,104,143,178,145,205,192,67,174,31,215,85,201,247,187,46,204,179,238,118,58,5,137,222,93,248,23,150,141,227,19,131,145,25,185,60,3,239,57,56,9,223,7,76,5,186,133,223,247,199,239,44,151,3,12,10,88,25,164,191,32 };
    byte_vec_t pk { 4,68,167,228,128,230,79,208,76,150,38,198,10,230,23,206,234,234,238,193,112,222,26,72,201,27,8,170,229,184,17,246,148,168,189,142,193,177,36,45,53,225,202,71,30,63,1,243,91,128,8,244,140,98,224,85,14,59,1,62,232,34,1,22,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 428 ") {
    byte_vec_t msg { 3,172,246,164 };
    byte_vec_t sig { 210,6,103,132,151,130,166,45,231,70,104,33,100,150,104,15,135,124,214,64,167,236,80,137,67,124,221,23,217,73,175,221,45,111,244,114,179,11,69,11,106,34,151,24,169,96,73,208,146,29,80,206,122,39,223,253,255,149,25,200,198,84,239,184 };
    byte_vec_t pk { 2,115,194,0,81,113,13,203,169,23,44,184,81,70,87,26,72,83,201,243,59,155,107,119,73,163,9,27,132,149,80,119,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 428 ") {
    byte_vec_t msg { 147,81,110,4 };
    byte_vec_t sig { 176,37,154,127,156,245,60,248,126,179,46,161,34,25,116,59,131,16,60,177,43,228,29,223,197,164,0,100,184,193,37,164,250,251,206,165,190,187,131,15,141,145,3,61,62,219,8,25,149,211,56,173,46,241,114,2,218,127,58,5,112,118,99,220 };
    byte_vec_t pk { 3,246,16,36,27,75,62,192,15,35,136,181,126,140,176,165,252,5,174,204,184,208,253,70,194,154,219,142,147,117,131,163,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 429 ") {
    byte_vec_t msg { 102,25,34,235 };
    byte_vec_t sig { 41,190,181,31,163,249,226,182,37,102,160,253,47,168,27,28,174,132,126,146,29,30,108,254,172,114,21,7,254,206,177,207,46,236,194,123,91,161,237,59,248,172,3,76,13,174,175,62,197,2,113,119,4,242,190,155,137,161,238,54,62,181,249,55 };
    byte_vec_t pk { 4,16,166,64,213,152,101,96,89,145,240,202,90,49,81,33,119,74,3,44,79,241,224,255,117,100,101,228,252,88,228,63,37,162,186,226,220,27,111,67,140,3,182,146,26,249,59,239,115,198,213,140,21,149,52,165,168,156,218,236,219,95,155,150,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 429 ") {
    byte_vec_t msg { 194,243,75,150 };
    byte_vec_t sig { 13,195,15,187,141,241,80,226,211,167,11,212,208,238,44,42,206,233,56,34,239,193,132,146,25,250,249,31,130,119,47,58,65,47,81,216,212,164,184,22,12,228,214,89,81,115,113,195,2,158,252,251,91,245,17,17,74,188,186,51,29,61,219,58 };
    byte_vec_t pk { 4,176,107,178,44,137,118,24,71,165,196,150,213,217,176,28,100,52,249,204,77,113,119,58,166,112,238,109,18,9,183,126,159,29,63,233,69,142,73,174,98,172,60,108,198,78,212,153,254,251,89,200,83,157,36,198,76,85,125,6,254,102,36,204,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 429 ") {
    byte_vec_t msg { 239,1,105,120 };
    byte_vec_t sig { 40,225,111,76,5,206,86,119,155,79,176,128,157,234,67,43,90,239,237,251,3,94,110,164,36,63,101,80,73,55,131,251,221,76,84,86,113,230,39,198,1,83,211,148,254,96,195,49,89,124,89,83,234,62,138,39,219,4,11,231,210,14,87,222 };
    byte_vec_t pk { 3,147,255,46,177,120,50,190,0,85,126,235,252,101,5,239,253,92,218,185,137,72,156,99,78,61,130,27,201,56,88,132,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 429 ") {
    byte_vec_t msg { 129,50,154,190 };
    byte_vec_t sig { 234,104,91,163,229,34,146,217,140,136,62,80,222,77,61,41,205,39,30,86,24,213,85,251,52,83,168,153,55,16,253,173,55,167,146,58,104,14,135,11,163,185,169,125,86,108,171,105,142,198,186,162,51,42,6,24,252,232,22,120,158,183,130,252 };
    byte_vec_t pk { 3,188,235,95,185,176,57,123,250,87,34,120,75,73,49,5,202,177,214,248,64,171,72,5,82,161,26,10,13,214,124,226,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 430 ") {
    byte_vec_t msg { 49,149,179,224 };
    byte_vec_t sig { 193,186,149,42,153,40,113,4,230,222,62,165,11,72,76,111,36,132,128,106,25,120,47,86,22,51,247,85,201,177,91,10,50,20,247,32,188,209,229,179,106,192,78,188,188,173,126,9,155,86,86,145,233,141,175,164,49,181,160,117,94,163,184,205 };
    byte_vec_t pk { 4,76,98,193,58,188,155,40,60,143,12,254,147,235,64,34,129,37,58,180,225,180,128,24,76,92,56,160,149,162,68,169,76,69,97,179,62,59,237,76,114,170,210,30,10,147,24,209,217,70,108,99,199,61,176,179,60,4,224,27,38,22,157,57,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 430 ") {
    byte_vec_t msg { 14,52,214,226 };
    byte_vec_t sig { 48,87,178,250,243,30,177,214,32,166,238,77,203,142,14,239,108,174,92,206,68,12,175,97,215,15,107,181,134,109,81,177,54,178,104,3,60,82,156,50,44,62,147,169,142,121,116,10,25,234,214,104,61,32,122,216,78,119,14,244,159,163,156,214 };
    byte_vec_t pk { 4,156,212,146,131,146,161,247,119,202,63,80,218,64,60,191,38,31,168,233,253,163,175,173,190,69,83,206,63,182,235,249,236,144,203,199,81,28,92,123,172,243,159,196,99,135,23,18,67,167,49,229,200,114,142,212,3,236,163,179,84,170,106,211,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 430 ") {
    byte_vec_t msg { 89,158,121,128 };
    byte_vec_t sig { 82,149,64,166,34,193,233,27,177,187,68,51,177,189,194,164,125,234,156,191,44,254,170,129,115,161,58,221,67,8,177,108,35,128,7,3,162,147,78,75,207,243,159,209,101,103,116,108,208,99,3,222,209,205,146,233,220,32,121,144,181,111,71,73 };
    byte_vec_t pk { 2,240,109,93,143,22,139,253,137,142,27,136,96,125,184,25,30,178,96,245,213,71,44,59,102,25,237,80,3,230,215,234,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 430 ") {
    byte_vec_t msg { 88,47,248,51 };
    byte_vec_t sig { 240,171,201,219,123,203,91,217,182,193,161,53,2,254,96,125,4,170,65,217,179,23,118,131,90,146,19,3,96,143,239,168,51,33,253,104,133,222,164,58,142,182,19,20,176,67,18,204,106,104,209,45,107,39,43,208,107,60,206,158,72,47,151,242 };
    byte_vec_t pk { 3,116,146,29,217,111,146,81,207,226,7,64,136,143,158,122,216,124,198,68,3,86,44,198,249,175,176,73,159,100,128,206,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 431 ") {
    byte_vec_t msg { 129,29,178,130 };
    byte_vec_t sig { 79,246,122,68,186,38,90,210,110,97,102,47,230,23,92,217,178,41,237,59,169,219,144,178,62,149,171,214,57,132,25,204,64,41,7,245,188,212,18,70,105,65,58,57,55,18,231,63,227,86,90,136,239,39,195,33,36,249,109,223,121,6,178,132 };
    byte_vec_t pk { 4,247,1,212,212,29,67,192,138,66,67,128,73,28,129,246,88,169,211,173,61,97,119,194,84,89,157,98,173,239,255,134,227,158,54,254,163,32,193,182,41,17,170,22,136,39,94,224,239,24,22,28,209,39,72,226,217,137,79,17,64,231,138,131,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 431 ") {
    byte_vec_t msg { 227,14,190,31 };
    byte_vec_t sig { 94,72,248,34,20,236,180,6,45,162,176,59,159,138,129,206,239,96,16,114,93,89,80,125,68,153,73,252,86,181,193,95,109,236,142,70,134,19,161,85,151,182,44,174,246,158,85,65,237,240,217,216,250,168,107,95,42,58,254,139,236,245,208,58 };
    byte_vec_t pk { 4,241,57,166,25,5,243,161,123,154,245,74,148,144,210,228,82,123,107,72,170,208,88,60,212,177,238,240,244,207,231,3,221,151,117,65,46,77,185,43,114,173,176,17,108,100,122,241,2,228,232,57,78,83,243,133,68,120,228,237,143,244,91,19,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 431 ") {
    byte_vec_t msg { 140,149,182,116 };
    byte_vec_t sig { 91,37,244,83,69,226,189,110,178,26,227,103,190,169,199,91,221,51,58,216,39,25,233,232,17,122,196,199,54,124,55,224,231,241,35,209,17,129,37,73,194,232,220,251,87,77,219,2,70,84,177,232,12,55,238,197,137,74,232,127,3,175,143,32 };
    byte_vec_t pk { 3,18,148,24,174,9,112,145,203,155,248,133,26,197,104,53,44,75,97,5,10,18,32,114,90,33,123,136,88,188,32,144,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 431 ") {
    byte_vec_t msg { 164,156,140,253 };
    byte_vec_t sig { 253,147,181,13,24,24,80,120,244,200,227,22,1,188,101,19,77,70,223,19,12,204,5,90,230,89,211,224,11,191,220,255,99,224,117,228,109,114,183,247,122,200,14,31,109,52,86,40,174,112,250,228,105,33,243,13,204,61,77,64,246,77,72,199 };
    byte_vec_t pk { 2,48,150,111,212,125,156,91,46,202,106,135,103,200,142,151,222,22,111,251,225,193,67,106,56,62,227,21,218,62,133,125,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 432 ") {
    byte_vec_t msg { 11,20,97,123 };
    byte_vec_t sig { 85,106,135,227,111,177,168,70,213,198,38,183,190,252,123,138,30,26,80,244,222,245,124,64,251,150,207,24,51,222,101,216,122,104,238,124,246,171,150,57,20,5,255,94,0,40,238,97,125,95,53,201,166,190,157,128,80,240,35,73,239,54,172,230 };
    byte_vec_t pk { 4,202,230,188,238,98,133,63,175,52,56,231,196,161,24,110,125,185,234,69,21,193,3,219,158,25,87,240,179,209,243,173,97,3,50,29,126,89,210,86,7,174,226,26,95,155,229,137,238,122,237,177,113,85,132,2,14,16,209,129,242,37,182,79,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 432 ") {
    byte_vec_t msg { 156,117,119,150 };
    byte_vec_t sig { 225,166,93,42,113,17,126,159,77,189,55,153,112,34,124,229,245,251,152,102,153,88,58,163,66,250,224,204,44,87,198,138,6,209,35,129,128,50,240,157,139,72,109,255,198,127,112,106,80,4,151,120,192,139,252,110,33,43,175,110,96,101,114,210 };
    byte_vec_t pk { 4,93,123,238,5,0,145,14,132,10,4,185,206,248,254,153,22,129,22,160,51,166,146,86,5,152,37,15,133,234,199,198,146,31,101,181,250,46,176,51,172,184,219,185,67,67,210,173,1,23,94,207,206,25,50,193,226,72,153,218,124,199,161,57,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 432 ") {
    byte_vec_t msg { 56,9,174,123 };
    byte_vec_t sig { 254,81,151,31,214,50,109,190,114,72,229,22,87,169,165,149,167,193,141,58,16,254,175,251,80,165,123,158,54,95,64,157,37,50,161,158,118,82,123,222,250,11,246,63,91,89,77,235,195,25,35,236,173,71,188,112,132,214,107,85,47,63,163,58 };
    byte_vec_t pk { 2,202,224,106,43,151,10,123,173,79,226,69,224,12,194,114,230,126,141,208,159,92,211,102,245,224,203,103,171,164,223,105,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 432 ") {
    byte_vec_t msg { 56,60,255,92 };
    byte_vec_t sig { 34,201,203,126,176,86,238,181,27,184,145,147,237,208,253,35,89,201,121,32,113,41,142,224,222,3,55,24,47,5,196,167,160,238,139,197,152,19,203,92,230,43,169,254,55,150,146,20,196,244,121,47,255,9,135,12,77,25,201,71,208,175,150,223 };
    byte_vec_t pk { 2,129,200,214,247,108,92,167,170,16,236,74,171,207,142,41,237,107,171,117,10,6,151,112,72,52,187,11,50,13,177,91,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 433 ") {
    byte_vec_t msg { 30,251,44,233 };
    byte_vec_t sig { 153,68,247,226,34,123,79,168,56,217,244,134,71,11,229,139,254,230,253,16,1,71,98,238,100,51,45,136,50,192,245,110,46,34,172,60,19,89,247,157,103,46,95,167,47,55,19,192,1,108,225,3,224,202,119,2,193,28,229,212,195,135,19,219 };
    byte_vec_t pk { 4,12,113,190,5,182,102,172,2,53,77,176,52,105,145,217,207,8,184,41,7,43,185,199,8,21,90,232,54,27,208,87,3,247,161,139,184,86,91,249,45,70,32,16,30,195,187,28,84,154,45,78,9,107,220,170,15,46,3,226,206,153,213,58,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 433 ") {
    byte_vec_t msg { 211,241,162,177 };
    byte_vec_t sig { 222,107,164,149,219,4,2,203,136,110,116,251,120,74,44,228,29,98,109,20,14,121,129,202,66,121,238,38,133,7,36,148,10,108,49,167,66,50,84,80,213,188,17,106,175,157,164,69,99,35,121,60,218,237,27,182,44,101,209,12,51,87,41,118 };
    byte_vec_t pk { 4,195,59,207,157,243,46,148,137,71,162,81,113,227,153,42,161,225,192,217,250,87,163,236,169,35,141,169,73,76,193,106,235,61,226,200,208,234,221,84,17,103,190,148,195,82,208,147,109,2,13,177,45,222,112,179,90,243,186,15,226,172,161,190,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 433 ") {
    byte_vec_t msg { 10,236,53,42 };
    byte_vec_t sig { 227,82,62,254,139,49,213,4,70,149,222,177,49,197,226,3,49,195,195,126,159,234,43,243,119,21,63,94,222,244,38,165,175,220,60,44,188,12,206,161,110,74,215,37,52,164,22,234,210,15,42,9,151,199,196,81,151,191,0,242,213,153,74,246 };
    byte_vec_t pk { 2,142,163,183,246,144,241,127,146,36,191,36,99,15,44,223,43,186,37,50,109,52,77,63,37,145,14,124,24,90,247,172,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 433 ") {
    byte_vec_t msg { 137,140,79,67 };
    byte_vec_t sig { 105,210,195,232,185,77,177,173,122,149,94,247,140,253,36,73,214,193,56,102,145,125,4,74,140,49,169,123,84,188,34,24,165,46,230,40,100,18,233,205,79,193,12,16,109,83,24,30,147,206,69,114,122,183,144,95,123,84,144,148,152,48,89,134 };
    byte_vec_t pk { 3,169,202,176,30,29,34,38,68,52,174,208,10,213,54,238,77,125,152,230,236,149,209,156,140,208,87,27,62,217,169,62,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 434 ") {
    byte_vec_t msg { 152,48,59,167 };
    byte_vec_t sig { 228,79,14,155,14,192,224,204,248,122,162,100,204,28,116,112,73,37,32,236,166,208,23,170,167,251,31,184,194,22,113,197,96,43,77,74,73,209,88,49,46,238,255,232,168,231,9,123,151,245,25,152,232,66,159,206,47,231,18,185,37,96,155,199 };
    byte_vec_t pk { 4,51,202,135,185,205,132,208,240,7,111,187,255,227,233,43,165,218,245,169,104,158,236,136,7,40,95,130,5,137,84,45,218,129,114,115,138,107,9,200,224,185,9,215,219,84,41,20,89,89,67,153,22,192,66,255,189,74,245,104,56,79,232,49,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 434 ") {
    byte_vec_t msg { 231,118,195,38 };
    byte_vec_t sig { 1,55,77,115,128,93,176,119,223,94,33,234,135,45,86,53,95,202,64,94,156,15,58,222,210,120,141,111,47,35,227,62,198,3,5,166,119,234,177,113,107,188,210,124,72,229,135,77,179,197,247,0,114,209,117,202,86,77,115,141,93,39,126,167 };
    byte_vec_t pk { 4,32,34,113,253,186,82,150,222,94,93,32,154,140,106,240,50,188,10,161,216,80,113,107,7,15,147,45,252,65,178,196,94,151,161,54,4,15,109,96,221,17,23,75,207,134,230,161,165,212,10,248,62,103,171,196,90,78,129,170,166,245,152,161,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 434 ") {
    byte_vec_t msg { 182,52,57,48 };
    byte_vec_t sig { 187,16,40,238,36,87,26,254,100,177,161,164,113,236,195,213,64,24,39,7,111,125,131,174,136,67,36,165,92,137,206,122,44,88,221,78,192,183,197,116,145,103,139,199,40,20,60,209,154,211,157,238,32,197,64,166,56,166,158,14,198,120,239,174 };
    byte_vec_t pk { 2,8,115,98,99,207,57,110,235,129,149,128,152,242,233,119,214,29,85,200,82,70,114,207,141,54,59,166,36,93,59,12,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 434 ") {
    byte_vec_t msg { 229,150,92,80 };
    byte_vec_t sig { 46,64,27,60,191,147,69,78,20,155,70,180,200,199,159,132,98,70,90,191,74,111,63,57,100,118,63,112,44,110,155,0,206,139,166,14,67,157,104,216,115,225,102,207,12,31,106,5,103,42,67,85,203,83,175,169,183,171,237,79,229,1,87,27 };
    byte_vec_t pk { 2,146,192,222,123,165,196,204,14,129,66,57,214,95,39,242,132,208,91,174,45,53,23,212,80,230,110,116,148,174,98,70,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 435 ") {
    byte_vec_t msg { 59,20,59,192 };
    byte_vec_t sig { 135,25,171,146,217,181,128,196,93,215,106,6,174,226,226,19,11,79,201,19,182,21,78,87,59,52,156,7,177,186,221,87,6,32,29,79,23,102,250,148,55,88,117,216,81,176,115,177,215,36,99,147,66,241,228,13,83,184,124,209,151,183,192,153 };
    byte_vec_t pk { 4,146,4,245,243,69,120,222,148,107,51,123,173,120,174,121,155,47,183,118,79,92,6,131,85,125,169,228,154,137,182,84,139,180,109,60,95,85,113,193,59,208,5,70,89,88,138,3,169,198,102,247,106,11,114,254,75,56,193,42,129,155,211,2,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 435 ") {
    byte_vec_t msg { 87,80,72,25 };
    byte_vec_t sig { 139,182,159,107,14,209,8,221,29,87,207,163,128,165,186,219,242,249,48,209,6,39,52,221,129,87,90,185,20,9,9,74,157,17,203,3,120,14,253,167,211,231,167,124,2,247,208,104,0,212,239,22,143,60,129,149,170,206,134,37,246,55,251,54 };
    byte_vec_t pk { 4,81,251,142,234,225,7,109,114,80,85,55,132,243,19,173,62,151,119,123,204,184,216,50,217,10,216,134,195,237,90,48,52,196,114,159,170,119,143,9,215,209,57,178,7,5,191,137,104,65,66,220,13,87,123,111,30,229,7,2,144,175,88,169,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 435 ") {
    byte_vec_t msg { 195,233,184,225 };
    byte_vec_t sig { 109,244,62,215,122,159,134,85,252,119,97,59,123,60,182,98,98,55,72,13,213,196,113,72,250,41,33,156,236,104,189,178,45,136,188,111,221,84,180,75,61,196,142,206,107,122,151,199,199,236,192,103,116,233,94,128,157,193,240,192,209,91,127,21 };
    byte_vec_t pk { 2,71,96,119,38,51,152,143,28,82,201,142,218,8,114,186,105,105,28,95,49,177,219,41,104,148,237,39,69,188,44,9,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 435 ") {
    byte_vec_t msg { 176,245,103,169 };
    byte_vec_t sig { 249,39,22,223,218,93,93,102,79,68,79,243,132,1,82,212,126,250,105,130,174,207,71,204,163,69,133,44,232,4,199,112,246,72,210,209,210,178,25,104,114,52,199,170,49,97,141,142,253,96,212,222,52,102,72,50,124,171,42,35,75,11,181,77 };
    byte_vec_t pk { 2,184,9,222,74,252,162,206,215,236,87,209,3,255,211,244,154,38,187,85,188,157,1,137,97,246,71,223,144,135,130,229,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 436 ") {
    byte_vec_t msg { 124,28,236,244 };
    byte_vec_t sig { 180,255,96,0,151,229,210,177,228,165,30,212,113,227,44,28,191,228,161,191,158,132,195,79,199,33,107,16,131,89,40,105,1,90,241,90,148,232,40,12,181,252,121,108,6,178,191,183,248,52,46,108,16,121,171,62,15,168,68,25,91,77,212,217 };
    byte_vec_t pk { 4,93,154,59,21,27,216,22,50,42,74,245,229,3,107,9,156,208,224,142,27,172,17,224,67,103,223,23,95,120,188,46,135,225,96,50,45,170,172,57,52,161,145,80,96,215,121,125,52,135,5,52,104,137,137,77,155,221,93,123,134,255,160,101,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 436 ") {
    byte_vec_t msg { 140,151,222,187 };
    byte_vec_t sig { 9,114,52,206,232,82,115,243,89,216,254,123,172,15,51,221,191,90,62,74,0,138,242,103,149,206,212,37,86,153,4,136,143,41,217,181,168,116,218,33,162,34,165,113,155,242,187,232,60,234,71,50,87,109,186,21,2,36,147,48,236,186,177,7 };
    byte_vec_t pk { 4,45,123,136,101,218,57,106,115,68,191,248,42,111,222,65,218,246,51,161,35,212,196,130,168,94,228,142,234,44,55,169,66,37,213,76,73,172,140,95,2,214,117,79,119,8,67,180,207,252,167,225,134,160,52,30,223,48,0,129,2,112,173,24,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 436 ") {
    byte_vec_t msg { 211,165,88,6 };
    byte_vec_t sig { 18,178,224,85,194,243,160,6,134,194,16,114,219,185,90,255,59,2,249,62,254,131,152,244,69,35,166,129,77,54,63,65,34,116,192,202,209,210,74,161,121,158,113,250,231,62,211,234,107,12,133,103,4,215,28,236,181,115,51,137,255,238,160,19 };
    byte_vec_t pk { 2,239,152,214,178,3,152,250,231,40,242,9,231,72,180,253,11,112,233,84,67,75,172,12,187,136,206,133,49,198,1,26,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 436 ") {
    byte_vec_t msg { 45,124,190,6 };
    byte_vec_t sig { 63,167,130,160,56,57,66,176,125,50,134,11,72,58,50,155,96,139,207,17,83,89,151,203,205,49,58,29,1,138,245,216,145,197,73,217,187,19,104,53,104,47,148,34,222,206,161,7,248,114,183,66,72,105,204,58,121,9,86,50,164,229,231,144 };
    byte_vec_t pk { 3,99,124,217,209,173,8,119,127,129,37,33,31,20,108,190,74,1,33,139,42,76,234,205,169,92,175,192,236,44,123,231,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 437 ") {
    byte_vec_t msg { 28,165,116,111 };
    byte_vec_t sig { 63,89,2,11,67,25,165,78,117,4,207,255,249,217,114,170,16,70,206,4,127,90,35,250,194,173,185,225,122,205,116,39,245,80,130,97,148,175,114,212,38,82,145,235,130,186,106,236,120,81,203,254,243,111,190,209,90,221,110,190,113,254,154,68 };
    byte_vec_t pk { 4,87,234,55,125,215,250,133,140,166,176,221,145,121,107,124,247,143,126,177,149,23,178,74,8,220,32,236,240,32,84,159,114,242,153,118,63,229,44,25,163,197,223,219,41,11,102,56,192,185,159,214,192,231,113,231,52,21,195,105,89,48,154,124,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 437 ") {
    byte_vec_t msg { 220,1,77,113 };
    byte_vec_t sig { 198,210,0,107,65,168,124,154,50,238,62,35,17,69,178,225,205,206,199,228,186,236,219,136,203,3,190,254,102,230,184,238,94,218,125,173,244,135,39,253,115,37,171,104,21,233,140,188,84,15,30,181,127,2,76,253,154,46,3,170,236,38,196,95 };
    byte_vec_t pk { 4,184,149,111,35,32,67,113,188,225,174,193,114,219,124,69,246,146,85,126,61,19,48,54,71,177,106,75,151,199,78,235,22,26,103,201,47,219,134,35,125,117,132,212,249,135,222,26,35,88,3,160,46,48,17,249,124,150,47,75,188,164,197,37,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 437 ") {
    byte_vec_t msg { 47,176,114,158 };
    byte_vec_t sig { 154,219,0,188,116,149,168,79,52,216,152,150,58,87,65,126,65,111,216,5,162,113,110,254,251,147,161,116,65,80,55,77,25,13,33,98,148,70,217,91,176,217,248,218,251,61,24,233,247,69,197,230,47,32,89,236,154,5,232,117,216,32,234,94 };
    byte_vec_t pk { 3,247,33,180,120,100,11,117,74,230,126,99,179,109,82,114,215,240,204,252,22,142,12,105,113,133,18,121,35,26,157,237,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 437 ") {
    byte_vec_t msg { 12,121,142,60 };
    byte_vec_t sig { 134,29,226,211,176,210,211,190,229,130,45,108,161,13,96,115,120,144,111,145,194,176,22,119,135,11,108,4,4,127,76,120,84,182,68,129,102,173,175,106,16,51,167,252,247,163,133,37,250,180,156,163,26,127,178,181,122,203,205,141,123,51,193,150 };
    byte_vec_t pk { 3,21,128,192,226,155,167,49,8,210,107,245,162,20,103,149,133,112,253,204,138,76,7,13,92,170,140,31,183,124,108,97,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 438 ") {
    byte_vec_t msg { 157,49,198,57 };
    byte_vec_t sig { 216,233,36,207,76,204,77,0,85,172,112,146,56,130,70,23,48,252,147,121,241,172,167,201,201,207,187,94,119,58,219,243,95,145,60,252,115,4,77,157,205,115,0,184,50,84,17,227,182,206,225,115,5,32,80,253,194,134,90,120,246,129,158,70 };
    byte_vec_t pk { 4,75,175,245,130,210,71,5,51,40,221,85,23,138,137,202,97,231,166,136,236,103,55,104,92,2,117,64,107,49,109,149,51,186,100,1,46,18,120,197,163,211,122,110,135,205,189,17,138,140,216,101,210,80,207,9,9,155,194,134,15,51,254,244,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 438 ") {
    byte_vec_t msg { 234,163,140,0 };
    byte_vec_t sig { 2,17,191,186,113,0,70,12,34,208,206,110,211,209,15,106,8,23,252,147,189,61,230,93,41,144,180,249,16,236,154,187,12,134,83,188,225,229,221,203,48,114,109,156,101,112,2,188,77,176,187,95,190,114,9,225,165,209,179,221,208,206,237,137 };
    byte_vec_t pk { 4,9,193,1,176,70,242,227,225,136,100,42,83,122,25,86,189,7,226,68,246,176,116,127,6,160,122,223,209,34,190,253,250,253,93,217,143,217,188,172,94,155,48,59,215,170,170,227,87,198,200,21,231,117,78,82,171,190,141,131,39,178,114,195,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 438 ") {
    byte_vec_t msg { 105,81,105,109 };
    byte_vec_t sig { 60,7,150,164,213,131,6,248,230,15,225,59,124,78,84,183,65,39,106,136,80,249,121,32,21,197,156,47,196,39,99,37,34,248,221,128,61,251,191,242,185,151,42,209,194,178,18,205,97,2,243,151,27,34,196,47,252,230,135,224,204,118,21,29 };
    byte_vec_t pk { 2,16,149,68,131,109,142,214,30,183,57,43,133,57,37,139,77,231,154,101,204,237,238,55,33,50,34,133,14,59,61,69,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 438 ") {
    byte_vec_t msg { 212,43,40,236 };
    byte_vec_t sig { 6,228,220,231,153,230,253,227,92,226,92,5,32,192,251,186,82,91,69,143,139,6,28,119,35,172,200,15,8,57,24,187,112,49,3,100,54,72,128,83,141,120,234,49,87,48,143,138,178,226,200,39,27,184,161,236,200,99,195,206,73,33,143,1 };
    byte_vec_t pk { 2,88,201,1,221,27,147,46,139,0,118,108,32,108,102,234,213,98,31,55,24,109,144,232,114,54,82,213,34,242,254,134,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 439 ") {
    byte_vec_t msg { 96,233,83,88 };
    byte_vec_t sig { 171,251,185,164,79,176,23,30,176,93,165,205,211,115,26,49,224,178,139,209,175,252,92,177,161,137,132,160,16,21,82,143,230,51,244,46,108,15,251,44,197,223,87,28,12,164,134,24,253,128,49,17,233,195,5,206,174,101,51,151,114,186,242,25 };
    byte_vec_t pk { 4,29,68,114,155,248,75,47,252,83,137,115,152,255,117,63,240,205,141,90,147,20,145,105,181,21,70,236,57,122,27,182,11,87,215,212,200,22,126,142,202,199,217,148,206,78,36,171,67,90,94,225,206,61,47,238,159,115,159,69,40,148,25,157,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 439 ") {
    byte_vec_t msg { 180,108,141,77 };
    byte_vec_t sig { 114,11,157,51,148,237,9,210,142,206,57,57,218,11,197,25,81,45,72,34,81,23,98,224,35,213,135,172,7,194,141,184,198,206,188,229,233,96,156,177,140,132,72,185,213,254,102,152,145,96,246,149,206,145,219,14,236,109,19,29,50,161,125,94 };
    byte_vec_t pk { 4,71,85,140,112,50,121,77,59,102,93,13,72,239,31,52,234,228,99,250,165,4,158,18,31,240,164,246,79,130,82,220,182,12,94,105,18,229,153,76,61,103,135,56,50,36,234,89,4,218,47,183,115,88,55,118,205,27,245,184,246,161,32,64,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 439 ") {
    byte_vec_t msg { 108,53,145,3 };
    byte_vec_t sig { 170,228,206,10,194,187,11,196,136,186,60,26,133,237,208,106,173,226,81,151,166,101,121,28,242,79,122,127,57,59,243,198,218,210,229,36,100,118,143,64,49,47,211,69,42,97,7,237,231,36,32,251,227,132,219,17,120,34,200,14,242,6,49,85 };
    byte_vec_t pk { 3,240,156,227,29,64,67,151,168,214,173,144,26,222,19,70,238,197,103,243,255,169,89,77,182,173,181,103,27,122,126,164,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 439 ") {
    byte_vec_t msg { 178,235,17,39 };
    byte_vec_t sig { 159,94,86,117,184,56,252,213,31,49,101,2,65,247,52,32,94,75,226,40,170,220,130,255,76,231,173,236,128,22,47,176,42,206,154,248,105,136,166,109,27,230,82,77,171,233,107,37,252,110,189,171,63,4,184,50,4,49,28,79,89,163,26,72 };
    byte_vec_t pk { 3,230,81,187,111,158,123,57,238,210,167,129,7,199,117,192,19,76,186,43,214,231,90,85,185,222,63,189,65,113,250,80,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 440 ") {
    byte_vec_t msg { 197,88,165,130 };
    byte_vec_t sig { 168,202,167,63,224,116,102,108,24,74,191,12,69,98,76,204,49,165,13,101,150,42,129,85,167,37,248,186,116,206,220,123,17,109,182,162,157,123,214,24,173,132,190,153,102,55,154,6,43,5,148,201,70,188,143,3,145,132,163,216,119,88,248,81 };
    byte_vec_t pk { 4,204,198,149,31,235,98,129,8,89,57,144,138,55,76,199,206,146,21,152,57,219,1,240,120,66,88,62,147,16,220,108,249,174,95,114,36,240,243,242,120,105,108,69,160,210,1,65,223,94,5,106,243,170,115,107,192,64,8,110,159,75,151,12,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 440 ") {
    byte_vec_t msg { 148,82,23,118 };
    byte_vec_t sig { 164,23,199,177,106,149,37,140,97,146,130,28,131,68,83,182,82,211,21,3,194,195,245,234,39,80,173,45,98,223,157,182,215,44,254,165,170,136,48,249,169,241,222,78,195,128,101,136,247,92,195,196,129,192,59,154,1,223,35,194,18,21,230,136 };
    byte_vec_t pk { 4,164,176,150,33,40,164,176,27,59,233,146,3,170,140,141,24,184,191,142,219,154,237,192,66,39,98,127,4,104,127,10,82,243,78,213,21,184,32,254,208,200,82,37,56,152,169,134,215,188,186,90,38,76,166,171,13,163,133,64,224,134,142,78,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 440 ") {
    byte_vec_t msg { 236,247,39,217 };
    byte_vec_t sig { 90,105,13,85,56,102,78,193,24,134,243,204,104,132,18,28,200,180,156,3,57,14,114,141,45,180,197,106,40,54,179,90,102,153,0,135,55,92,236,196,209,127,228,23,244,15,137,175,46,204,195,163,246,137,78,87,176,187,29,41,132,121,212,97 };
    byte_vec_t pk { 2,89,217,59,7,252,69,36,7,153,164,167,156,20,143,97,30,214,16,219,136,138,148,149,94,124,187,142,214,44,215,128,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 440 ") {
    byte_vec_t msg { 82,195,12,228 };
    byte_vec_t sig { 47,170,92,144,224,184,239,201,23,85,227,40,18,59,242,187,44,161,75,152,81,29,65,33,7,150,228,177,32,135,149,186,125,120,231,154,57,53,54,202,116,55,127,88,173,45,98,33,198,5,58,133,134,168,79,122,40,212,247,4,120,145,29,239 };
    byte_vec_t pk { 3,174,1,254,146,66,25,168,23,134,1,18,25,167,33,164,69,185,149,158,151,86,171,60,133,99,117,216,66,231,124,58,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 441 ") {
    byte_vec_t msg { 120,170,6,132 };
    byte_vec_t sig { 25,223,135,166,255,26,74,235,71,233,194,54,33,17,228,173,222,3,144,11,177,123,236,191,88,70,127,198,180,250,196,105,23,183,56,241,254,128,248,70,33,115,71,43,232,124,139,207,43,227,50,228,189,241,66,183,187,214,103,252,37,53,172,172 };
    byte_vec_t pk { 4,223,147,132,2,1,36,37,232,190,237,211,156,123,134,89,161,1,135,113,48,178,113,196,194,159,98,66,184,207,5,39,205,83,68,43,86,84,12,123,127,47,133,163,89,92,75,249,243,29,77,130,127,235,82,114,224,254,217,139,194,146,129,177,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 441 ") {
    byte_vec_t msg { 162,149,169,107 };
    byte_vec_t sig { 86,162,172,64,230,30,221,146,167,94,163,205,35,140,128,42,119,87,136,74,189,52,80,62,76,72,142,81,92,229,224,155,195,188,128,39,57,8,188,209,13,47,16,206,167,35,148,185,14,172,228,36,138,76,116,191,127,121,102,173,232,196,62,83 };
    byte_vec_t pk { 4,170,188,121,229,127,28,226,118,51,240,4,112,238,137,45,220,106,79,12,180,34,161,156,103,25,56,138,225,116,102,153,21,120,81,205,151,19,66,247,44,242,191,158,68,144,84,104,143,216,112,230,66,175,152,159,159,42,223,200,55,202,164,150,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 441 ") {
    byte_vec_t msg { 197,55,210,198 };
    byte_vec_t sig { 52,134,166,96,180,229,93,82,60,136,201,132,211,13,220,245,223,125,63,160,95,201,104,95,35,4,134,19,165,115,25,153,132,149,236,219,78,226,40,200,222,177,58,169,194,71,141,88,92,94,56,188,100,57,251,242,23,36,52,4,33,210,130,78 };
    byte_vec_t pk { 3,96,62,226,241,109,16,45,41,127,234,144,99,37,211,223,94,137,51,149,191,28,187,208,13,38,241,166,221,231,42,76,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 441 ") {
    byte_vec_t msg { 224,177,184,136 };
    byte_vec_t sig { 8,8,24,137,212,157,70,116,15,22,177,177,134,94,40,134,120,224,1,2,12,75,252,58,81,19,20,141,58,85,173,46,228,66,158,101,253,6,91,207,125,26,30,80,13,32,35,19,224,33,130,252,60,69,172,126,176,87,130,14,219,216,7,51 };
    byte_vec_t pk { 3,102,22,116,17,234,160,109,29,29,176,80,87,204,146,112,154,230,143,107,175,48,60,215,17,191,112,246,83,192,73,194,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 442 ") {
    byte_vec_t msg { 151,246,102,179 };
    byte_vec_t sig { 20,61,240,40,124,248,189,107,233,141,105,137,10,48,63,140,40,121,199,20,91,48,109,68,166,187,219,17,143,156,169,4,190,91,235,6,38,255,249,93,214,222,31,229,247,223,119,133,19,125,50,204,45,172,93,113,153,20,216,51,34,138,239,26 };
    byte_vec_t pk { 4,69,150,193,195,134,96,251,165,229,94,175,164,231,191,143,69,157,63,244,67,177,206,137,56,216,28,166,180,96,166,240,147,157,240,14,205,64,38,146,36,58,240,147,58,1,51,51,13,98,144,160,68,170,154,167,150,225,64,86,131,147,108,187,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 442 ") {
    byte_vec_t msg { 188,99,112,138 };
    byte_vec_t sig { 25,25,140,36,140,93,171,155,79,127,10,143,23,0,252,196,18,114,36,13,59,27,61,43,44,150,58,47,65,78,25,201,186,115,82,205,162,126,188,27,158,110,122,87,30,252,13,131,6,173,189,66,63,200,141,240,26,135,206,111,220,220,10,11 };
    byte_vec_t pk { 4,149,181,111,176,108,254,97,210,174,241,144,213,107,184,236,127,45,212,107,40,184,147,155,229,187,4,24,177,161,0,123,205,137,230,106,131,125,239,11,41,17,221,12,40,24,201,92,89,84,150,62,78,179,159,202,64,10,125,51,144,184,186,9,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 442 ") {
    byte_vec_t msg { 19,116,113,255 };
    byte_vec_t sig { 56,2,7,29,19,129,57,9,136,118,182,207,36,185,225,237,167,20,51,237,142,200,97,125,224,126,147,30,49,194,21,114,195,107,99,197,184,235,150,188,41,62,1,190,140,99,165,96,79,105,8,167,218,85,244,178,46,215,13,203,75,74,170,251 };
    byte_vec_t pk { 3,246,154,41,246,216,36,134,11,156,254,171,230,169,78,70,5,102,98,103,78,254,70,155,28,147,42,94,107,220,183,53,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 442 ") {
    byte_vec_t msg { 213,179,219,249 };
    byte_vec_t sig { 89,183,30,12,78,50,34,91,42,182,84,20,184,22,81,187,191,141,41,243,235,139,124,208,148,238,214,13,84,163,18,235,156,224,118,118,56,110,6,138,69,161,255,77,127,224,205,47,111,180,124,167,116,130,38,63,19,96,52,199,102,156,232,180 };
    byte_vec_t pk { 3,143,39,247,154,147,56,217,225,65,25,35,78,79,196,238,80,245,252,5,3,20,67,77,67,86,52,9,172,48,177,50,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 443 ") {
    byte_vec_t msg { 17,238,116,210 };
    byte_vec_t sig { 92,124,59,159,41,110,194,150,153,176,231,165,84,14,195,52,216,191,87,186,210,0,157,68,105,142,32,118,246,31,218,205,193,192,125,231,121,115,175,93,177,160,99,140,215,157,225,191,227,210,11,40,90,149,83,58,54,126,145,177,207,51,205,75 };
    byte_vec_t pk { 4,38,145,59,24,124,62,65,181,130,111,247,185,113,85,218,156,140,36,215,9,216,167,127,203,159,211,245,117,180,175,101,244,81,235,129,160,183,222,79,240,55,225,70,250,178,45,176,212,39,241,254,248,170,62,224,216,198,134,227,153,7,15,158,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 443 ") {
    byte_vec_t msg { 239,233,239,46 };
    byte_vec_t sig { 29,14,12,122,212,109,218,49,210,145,229,170,59,147,89,224,2,102,134,228,100,153,72,243,247,195,132,196,101,66,57,135,134,131,208,230,109,8,88,173,164,82,28,238,207,144,168,138,242,67,96,64,245,190,24,44,220,215,239,246,39,193,140,68 };
    byte_vec_t pk { 4,121,180,34,7,116,87,223,188,33,204,143,1,17,226,228,221,56,188,16,190,165,49,226,131,24,246,63,15,172,41,31,29,142,34,40,241,208,216,198,85,42,16,173,40,94,186,137,18,80,238,202,190,162,132,37,192,104,94,15,63,251,163,34,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 443 ") {
    byte_vec_t msg { 214,126,240,131 };
    byte_vec_t sig { 89,138,148,111,30,61,14,242,151,4,45,20,243,38,24,138,39,197,195,171,151,143,107,48,47,240,57,10,121,254,96,196,113,32,169,111,53,158,254,26,30,248,195,176,76,176,153,183,72,239,31,246,102,216,26,227,135,37,111,9,199,161,113,202 };
    byte_vec_t pk { 2,111,119,83,207,83,123,102,112,224,135,116,253,86,38,98,133,211,181,14,184,18,125,59,14,167,28,200,96,75,41,108,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 443 ") {
    byte_vec_t msg { 92,72,37,219 };
    byte_vec_t sig { 22,193,32,47,24,72,160,155,94,249,70,193,126,173,151,226,166,18,146,74,55,69,73,117,20,178,117,197,214,56,173,7,76,18,110,110,10,38,226,158,190,155,1,5,170,212,207,9,174,42,34,12,8,105,38,75,200,65,54,64,208,26,92,232 };
    byte_vec_t pk { 3,128,47,141,154,115,159,36,40,44,177,16,146,201,162,30,205,136,230,80,194,94,201,120,5,118,98,226,63,26,77,130,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 444 ") {
    byte_vec_t msg { 39,104,192,63 };
    byte_vec_t sig { 45,79,142,178,109,168,216,162,182,27,134,173,66,176,214,186,145,0,117,216,249,196,222,151,58,101,25,138,47,158,33,109,108,205,205,119,254,5,82,11,236,155,181,74,42,118,188,79,118,84,56,211,220,139,145,33,180,88,14,25,177,183,40,77 };
    byte_vec_t pk { 4,4,142,88,180,73,47,68,111,35,190,102,112,37,108,46,157,152,133,121,46,186,180,137,227,162,241,61,217,55,17,151,222,119,28,178,168,215,127,108,22,176,96,19,199,182,22,203,24,203,114,29,200,42,36,45,122,158,110,225,242,94,72,54,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 444 ") {
    byte_vec_t msg { 147,246,22,192 };
    byte_vec_t sig { 130,94,215,101,100,157,240,251,213,72,232,90,26,171,248,4,74,130,116,149,212,168,196,83,121,191,16,240,27,254,160,215,3,252,44,234,115,144,177,158,225,6,229,243,106,67,157,219,192,12,53,222,30,182,28,164,205,203,42,8,45,203,177,73 };
    byte_vec_t pk { 4,26,21,100,65,141,236,43,115,252,135,233,77,40,12,14,189,155,17,90,161,73,229,213,234,104,184,213,164,74,139,41,177,6,210,119,209,201,16,5,172,115,32,251,242,4,193,21,83,243,255,80,214,187,67,126,239,47,39,96,143,133,56,186,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 444 ") {
    byte_vec_t msg { 4,90,215,48 };
    byte_vec_t sig { 75,101,40,43,178,36,236,186,133,176,57,213,35,93,199,223,133,66,239,182,42,89,127,74,6,175,248,8,251,17,167,213,196,175,88,51,113,133,184,178,184,54,18,204,252,169,81,50,242,14,250,104,52,72,2,128,21,2,240,250,236,85,176,226 };
    byte_vec_t pk { 3,51,91,61,190,197,42,127,74,64,196,246,50,203,131,213,175,191,121,166,75,54,233,58,95,197,25,238,60,239,99,126,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 444 ") {
    byte_vec_t msg { 195,246,62,208 };
    byte_vec_t sig { 158,241,85,61,108,59,133,9,200,206,144,106,39,235,179,30,117,78,181,137,250,106,106,78,246,209,32,29,152,65,201,121,17,219,238,82,135,78,62,234,184,158,132,219,143,212,112,79,120,129,121,51,88,144,88,192,42,196,22,191,52,71,85,238 };
    byte_vec_t pk { 2,146,6,64,194,83,152,140,143,203,143,35,150,255,253,163,81,22,82,9,24,34,85,72,18,151,159,255,172,201,45,208,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 445 ") {
    byte_vec_t msg { 217,127,127,187 };
    byte_vec_t sig { 179,115,51,235,43,41,132,251,159,61,214,189,84,189,101,12,61,53,196,87,229,224,102,82,14,223,223,103,191,143,92,166,51,237,192,64,47,65,43,44,197,72,83,86,185,52,82,239,62,196,103,136,186,4,241,54,101,32,93,120,42,175,168,114 };
    byte_vec_t pk { 4,41,119,175,74,235,40,13,28,117,222,93,14,112,250,220,87,45,161,37,189,138,125,1,75,117,188,217,39,52,244,27,212,139,179,249,76,215,90,155,152,99,124,76,43,102,135,42,97,76,227,254,56,123,226,148,207,7,246,184,245,187,126,86,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 445 ") {
    byte_vec_t msg { 226,111,247,169 };
    byte_vec_t sig { 162,139,112,53,135,231,133,163,102,1,250,187,118,186,55,59,152,11,154,17,223,241,21,131,112,228,101,117,23,110,7,129,58,179,239,24,184,202,92,252,198,15,204,73,76,237,251,234,1,169,179,15,55,123,196,136,53,45,246,113,138,12,86,40 };
    byte_vec_t pk { 4,110,144,78,36,113,146,96,176,22,108,130,121,103,115,168,94,80,141,60,191,74,172,220,107,206,208,172,34,16,117,156,77,176,103,161,45,70,240,186,97,189,128,30,99,63,30,65,252,210,139,84,2,254,227,248,123,240,214,194,144,98,228,243,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 445 ") {
    byte_vec_t msg { 24,183,121,33 };
    byte_vec_t sig { 64,136,34,247,43,54,247,29,138,203,212,216,63,26,133,116,217,56,191,181,17,26,76,69,80,193,238,112,106,62,98,115,108,205,153,98,212,163,247,63,69,152,34,150,140,216,101,163,21,121,87,34,79,222,225,218,174,74,206,221,23,255,43,215 };
    byte_vec_t pk { 3,32,119,62,49,176,161,147,39,136,20,73,107,237,251,34,210,105,241,2,244,244,110,155,183,131,47,131,103,254,91,215,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 445 ") {
    byte_vec_t msg { 34,205,43,175 };
    byte_vec_t sig { 156,61,154,182,142,218,134,95,130,90,64,102,203,182,15,218,214,139,233,23,112,231,204,218,151,180,203,234,171,219,79,170,231,54,100,174,176,8,116,118,253,240,141,11,27,33,104,182,194,22,145,170,79,163,137,179,187,105,145,77,223,9,119,238 };
    byte_vec_t pk { 2,202,3,192,4,20,134,113,139,191,112,60,216,31,37,140,146,127,37,211,182,129,110,0,209,8,93,105,41,136,48,101,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 446 ") {
    byte_vec_t msg { 233,115,59,205 };
    byte_vec_t sig { 32,36,97,112,9,88,151,226,10,34,240,121,164,221,81,132,55,203,8,140,208,221,101,237,209,215,10,105,159,214,203,186,135,237,247,130,53,162,253,11,81,250,77,34,231,30,128,26,43,103,234,29,55,180,244,232,127,4,39,11,151,151,190,181 };
    byte_vec_t pk { 4,244,84,29,105,76,211,116,151,13,132,53,134,108,80,127,167,66,153,195,85,201,226,93,220,116,177,55,27,132,92,206,141,41,85,63,243,67,187,177,179,20,188,240,93,181,59,47,31,14,247,104,22,130,160,92,24,154,115,40,112,14,164,21,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 446 ") {
    byte_vec_t msg { 76,184,24,38 };
    byte_vec_t sig { 234,39,186,172,244,246,36,30,222,89,152,76,77,60,85,161,230,96,165,75,58,164,15,162,190,136,124,244,213,33,204,43,190,248,209,149,214,169,248,207,34,79,85,214,92,14,208,158,28,206,247,73,205,203,128,232,200,68,97,67,3,142,168,86 };
    byte_vec_t pk { 4,77,149,188,123,147,173,95,19,1,220,95,152,6,130,225,53,229,54,187,134,74,162,226,23,97,142,225,17,36,78,64,189,97,180,55,239,108,128,23,28,23,156,82,76,243,51,62,147,186,222,149,146,204,113,186,79,45,100,167,153,145,237,238,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 446 ") {
    byte_vec_t msg { 151,114,183,254 };
    byte_vec_t sig { 144,174,122,236,107,164,158,67,40,231,130,108,192,127,117,59,203,195,145,173,13,186,229,176,105,251,149,27,108,212,54,153,202,161,27,159,249,52,220,137,77,57,78,22,56,160,222,94,140,200,152,157,89,195,0,202,149,66,226,250,180,86,69,56 };
    byte_vec_t pk { 2,246,195,50,88,130,71,101,152,146,198,220,10,28,50,174,51,31,195,25,150,45,203,109,82,48,97,188,183,127,189,137,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 446 ") {
    byte_vec_t msg { 150,25,76,135 };
    byte_vec_t sig { 118,23,113,8,195,143,167,167,50,12,20,28,178,2,139,7,45,246,170,57,55,106,210,46,1,68,76,149,235,36,126,37,63,53,34,206,207,17,187,86,241,147,169,99,111,188,208,240,72,254,144,239,199,11,5,29,28,103,95,55,88,61,43,159 };
    byte_vec_t pk { 3,12,163,153,56,107,49,25,198,79,62,122,76,27,47,153,34,152,74,86,197,23,100,104,107,237,54,41,66,49,240,104,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 447 ") {
    byte_vec_t msg { 66,26,118,154 };
    byte_vec_t sig { 75,234,188,125,135,101,220,102,168,149,240,126,43,239,218,7,172,206,174,137,70,103,78,226,225,220,29,136,230,51,151,75,51,145,85,202,223,79,22,160,99,49,28,77,165,14,106,119,236,225,220,139,147,184,197,120,46,167,100,175,153,26,158,161 };
    byte_vec_t pk { 4,226,119,113,158,49,140,102,8,239,23,53,94,159,123,189,142,46,141,226,82,173,208,87,196,151,27,228,247,102,10,172,20,215,217,147,242,236,226,225,76,103,34,177,0,98,219,117,156,152,212,7,227,23,121,164,134,115,183,197,34,139,92,29,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 447 ") {
    byte_vec_t msg { 176,205,42,66 };
    byte_vec_t sig { 71,15,27,169,187,106,108,77,180,89,208,213,129,19,38,126,17,178,103,76,87,14,152,207,88,187,160,123,130,125,136,23,147,28,83,215,48,211,230,4,7,75,69,192,45,159,223,14,131,104,63,174,79,197,231,139,250,166,166,165,38,238,13,244 };
    byte_vec_t pk { 4,244,125,182,47,88,96,186,87,191,22,8,156,98,142,64,58,91,52,213,248,135,36,120,246,255,84,125,70,253,163,119,195,21,166,55,119,12,65,125,252,161,51,27,126,82,224,26,53,68,168,10,19,98,91,100,104,169,239,91,166,250,253,86,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 447 ") {
    byte_vec_t msg { 157,80,119,60 };
    byte_vec_t sig { 73,34,165,163,178,129,61,58,108,28,152,169,49,83,6,201,139,167,182,151,185,53,212,143,64,53,249,48,168,92,238,41,137,51,255,42,6,59,33,89,239,210,104,39,67,14,197,181,39,198,190,118,102,133,199,158,209,163,112,228,164,166,49,88 };
    byte_vec_t pk { 3,126,204,77,154,192,107,231,177,87,94,204,116,76,6,94,118,91,166,150,12,86,115,6,207,34,236,43,61,142,128,112,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 447 ") {
    byte_vec_t msg { 59,32,96,92 };
    byte_vec_t sig { 117,235,28,4,189,188,226,164,191,172,4,74,63,117,154,34,55,182,232,178,98,14,131,115,74,147,107,198,213,76,224,217,47,153,168,19,24,30,83,150,245,173,182,174,55,237,184,42,98,223,49,9,161,160,248,118,34,209,181,134,130,94,114,0 };
    byte_vec_t pk { 2,94,14,254,218,56,98,36,162,247,251,16,53,74,131,82,204,78,186,78,70,60,124,130,187,66,207,41,148,112,92,56,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 448 ") {
    byte_vec_t msg { 12,62,130,83 };
    byte_vec_t sig { 171,74,182,233,113,83,149,168,184,100,234,64,166,207,91,205,51,172,244,245,234,219,149,116,208,169,82,99,203,218,171,160,93,124,125,69,52,137,151,134,91,79,220,108,115,218,231,239,158,39,241,125,164,125,8,254,133,216,233,131,203,23,167,131 };
    byte_vec_t pk { 4,62,144,112,42,184,143,11,103,58,63,220,119,167,87,58,72,119,157,68,17,104,228,60,122,184,117,118,151,31,55,63,92,141,41,67,220,15,186,78,44,206,166,36,94,75,124,45,147,232,68,217,156,72,21,99,152,145,7,3,254,16,46,227,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 448 ") {
    byte_vec_t msg { 173,107,93,235 };
    byte_vec_t sig { 5,250,100,106,200,142,195,80,5,185,236,201,214,97,140,156,216,7,111,18,154,228,235,198,71,53,197,127,130,214,242,241,138,152,231,128,82,114,95,89,249,97,150,239,96,73,233,16,179,23,166,231,72,9,9,194,73,136,101,107,167,40,185,215 };
    byte_vec_t pk { 4,239,85,158,153,225,242,240,8,0,16,210,11,225,41,222,252,36,142,212,90,100,146,252,51,139,249,195,193,100,239,30,69,131,225,34,4,197,76,74,153,214,99,70,20,126,1,133,214,94,244,104,45,172,121,225,187,16,253,224,87,102,47,253,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 448 ") {
    byte_vec_t msg { 68,121,99,254 };
    byte_vec_t sig { 187,228,112,124,163,4,29,216,33,117,96,131,149,231,60,193,235,182,111,47,180,20,101,49,49,78,61,208,34,227,123,168,107,216,56,35,185,74,188,249,132,159,123,214,158,221,23,245,220,145,220,215,236,8,65,226,101,32,86,253,53,41,200,86 };
    byte_vec_t pk { 3,229,109,163,144,181,48,220,56,191,149,44,104,64,206,163,181,79,71,172,112,64,106,38,184,32,25,212,117,85,208,76,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 448 ") {
    byte_vec_t msg { 113,187,145,21 };
    byte_vec_t sig { 153,181,207,154,207,164,165,68,121,120,71,156,42,232,154,227,128,241,50,135,153,132,86,130,153,170,207,165,225,214,103,47,61,51,208,68,103,152,203,245,54,29,21,209,43,177,24,119,202,51,65,25,86,96,44,85,19,171,249,227,170,227,253,220 };
    byte_vec_t pk { 3,129,190,174,114,5,250,69,155,208,91,155,171,131,41,212,87,94,83,195,250,240,125,35,255,123,197,157,66,148,226,16,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 449 ") {
    byte_vec_t msg { 220,27,119,130 };
    byte_vec_t sig { 132,146,211,199,151,7,60,173,230,93,214,118,15,113,145,180,215,58,148,228,31,114,241,219,251,245,14,229,110,23,97,91,150,50,252,253,146,63,33,156,118,229,160,162,90,201,19,15,194,54,99,58,202,50,53,44,153,35,196,88,13,208,75,27 };
    byte_vec_t pk { 4,141,243,161,153,250,36,86,139,178,27,168,98,111,156,31,175,217,120,91,84,204,84,75,66,246,67,204,112,62,154,127,174,5,179,234,192,5,57,148,199,220,154,49,36,136,92,118,62,50,192,213,162,19,173,127,128,48,50,7,15,18,77,181,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 449 ") {
    byte_vec_t msg { 7,25,31,189 };
    byte_vec_t sig { 213,69,26,57,121,116,30,217,156,165,169,5,228,46,154,240,20,170,98,66,66,255,32,151,150,195,33,166,224,93,122,76,235,109,141,8,63,227,254,189,118,92,125,199,156,155,70,205,98,82,238,213,83,26,95,156,117,106,141,229,32,63,67,233 };
    byte_vec_t pk { 4,77,246,187,40,176,73,166,9,253,70,123,53,222,128,211,55,51,175,130,31,251,78,237,143,119,233,34,54,169,36,40,126,94,117,58,210,173,169,70,44,65,62,67,94,40,160,154,42,195,175,40,232,243,58,213,96,203,212,107,237,133,214,200,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 449 ") {
    byte_vec_t msg { 211,21,214,123 };
    byte_vec_t sig { 19,217,225,37,15,182,252,206,45,160,9,164,13,220,178,79,243,17,141,83,147,82,98,166,117,97,79,248,164,107,38,177,9,17,71,172,186,52,173,106,31,191,172,232,66,136,118,31,69,175,108,173,62,208,34,112,114,58,89,41,200,0,233,163 };
    byte_vec_t pk { 2,55,212,39,121,69,131,184,71,54,131,252,208,199,249,185,68,153,87,89,58,135,62,170,63,78,32,118,242,224,131,169,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 449 ") {
    byte_vec_t msg { 167,45,14,152 };
    byte_vec_t sig { 119,78,95,68,125,0,14,208,207,105,45,55,237,213,105,20,240,67,182,48,130,28,165,34,185,161,200,198,16,112,12,159,132,62,143,192,201,242,92,193,224,254,243,53,253,201,53,159,183,137,71,81,228,24,135,4,87,126,123,123,85,248,26,80 };
    byte_vec_t pk { 2,202,91,29,212,81,100,39,89,37,80,65,49,161,116,9,113,38,138,214,170,185,108,244,54,5,140,16,33,43,206,106,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 450 ") {
    byte_vec_t msg { 209,82,148,212 };
    byte_vec_t sig { 117,131,181,152,224,245,187,143,235,224,43,15,193,219,124,174,206,254,73,95,111,65,120,56,107,189,30,254,56,126,153,55,26,58,45,75,191,186,12,105,67,75,6,55,120,94,31,119,166,180,224,15,195,0,98,92,52,76,221,41,108,39,208,156 };
    byte_vec_t pk { 4,128,188,242,135,47,167,111,173,174,140,5,82,125,134,2,163,130,174,29,184,205,90,227,229,199,127,204,37,30,91,234,44,58,6,64,73,134,33,0,105,252,116,244,234,5,44,153,194,100,48,211,34,174,31,189,58,222,205,127,222,63,182,2,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 450 ") {
    byte_vec_t msg { 138,103,226,69 };
    byte_vec_t sig { 69,91,44,74,198,138,150,106,125,68,191,127,213,216,55,157,246,93,141,223,173,81,65,32,144,152,104,237,207,242,184,216,141,215,159,77,160,195,72,238,1,62,252,5,162,225,165,56,15,210,119,159,170,81,234,89,161,204,18,173,94,185,201,254 };
    byte_vec_t pk { 4,59,50,198,105,254,92,4,92,79,175,112,99,14,57,68,86,121,133,65,124,129,83,19,135,165,193,194,72,242,73,85,43,204,228,1,20,247,97,132,136,80,178,54,203,19,225,213,58,169,107,104,207,41,220,175,231,255,40,149,214,14,242,85,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 450 ") {
    byte_vec_t msg { 115,216,122,100 };
    byte_vec_t sig { 177,148,150,209,159,244,9,172,95,42,171,72,150,246,68,213,13,107,214,41,10,34,138,104,243,65,68,234,138,34,233,253,25,145,176,185,158,122,96,242,85,199,14,114,192,19,41,13,169,201,171,23,58,119,243,219,167,254,182,106,211,172,113,231 };
    byte_vec_t pk { 3,180,43,96,82,147,38,123,47,207,98,239,223,0,232,223,130,5,104,133,175,44,218,16,126,245,239,202,15,250,17,102,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 450 ") {
    byte_vec_t msg { 175,117,240,98 };
    byte_vec_t sig { 230,57,68,197,110,25,64,73,126,221,9,125,79,15,239,151,250,206,233,27,63,122,151,189,187,45,22,158,114,165,178,7,51,94,38,165,120,199,147,177,114,138,167,6,86,91,36,203,184,2,242,21,103,73,1,245,54,154,0,248,79,191,157,174 };
    byte_vec_t pk { 3,253,138,4,116,15,61,124,67,205,60,2,88,96,4,38,106,152,67,200,138,6,21,100,238,8,16,21,64,151,50,78,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 451 ") {
    byte_vec_t msg { 86,206,58,92 };
    byte_vec_t sig { 40,137,51,167,235,179,148,198,251,191,29,183,75,229,177,53,212,166,130,135,139,60,229,14,165,115,91,44,8,160,64,16,82,89,47,254,151,241,17,40,66,73,41,74,84,18,145,78,165,46,134,103,76,149,216,150,178,79,25,109,92,188,122,134 };
    byte_vec_t pk { 4,249,43,235,73,200,169,159,45,15,83,113,169,221,111,32,123,28,166,168,185,226,204,90,44,248,135,44,196,125,116,232,38,194,38,197,160,10,69,220,154,229,72,117,195,117,58,219,160,94,205,69,97,17,1,193,189,181,50,83,111,150,6,144,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 451 ") {
    byte_vec_t msg { 226,181,197,2 };
    byte_vec_t sig { 65,23,235,180,213,236,107,44,155,179,252,178,247,252,19,22,2,159,34,240,207,132,185,190,26,184,125,61,243,209,128,102,155,14,240,147,69,124,162,53,202,94,57,114,29,161,43,124,5,122,101,138,60,41,187,210,64,225,226,215,17,156,29,28 };
    byte_vec_t pk { 4,9,193,101,194,215,146,104,250,140,178,165,37,28,195,80,51,112,236,118,170,9,174,158,89,28,166,137,163,210,208,143,231,176,44,143,37,166,50,174,18,135,220,93,177,191,58,163,158,232,48,51,4,38,24,251,186,139,204,46,126,14,183,133,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 451 ") {
    byte_vec_t msg { 134,223,229,173 };
    byte_vec_t sig { 115,42,107,206,171,144,246,102,140,4,189,8,59,7,247,90,254,245,232,234,176,55,204,217,68,186,16,77,193,250,171,112,103,20,90,14,163,116,223,166,9,147,0,111,22,102,14,254,35,87,113,254,172,51,159,151,153,206,138,242,132,30,12,245 };
    byte_vec_t pk { 2,38,15,69,0,118,190,45,53,13,230,161,135,160,107,198,80,139,232,60,207,192,171,240,137,65,66,154,180,51,89,247,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 451 ") {
    byte_vec_t msg { 246,43,118,120 };
    byte_vec_t sig { 195,215,102,156,228,183,155,120,159,126,108,155,242,100,129,181,247,212,206,142,44,100,12,200,87,102,219,115,16,201,133,25,65,14,193,83,197,250,186,47,112,45,167,180,91,58,25,24,204,21,65,125,96,123,111,18,51,247,98,145,188,54,171,38 };
    byte_vec_t pk { 2,43,125,201,130,144,87,122,255,211,128,132,121,31,92,139,99,211,59,196,107,241,75,36,42,175,58,198,226,236,195,133,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 452 ") {
    byte_vec_t msg { 177,200,180,162 };
    byte_vec_t sig { 95,165,37,71,11,247,135,26,135,10,233,48,238,238,143,107,121,153,77,252,253,201,23,156,164,176,98,251,53,79,130,204,157,94,127,219,174,121,204,108,20,57,231,35,147,114,205,41,79,114,120,141,65,116,122,129,87,27,47,201,225,44,105,222 };
    byte_vec_t pk { 4,63,6,124,182,188,92,15,50,163,57,78,59,38,233,173,168,236,60,177,131,113,174,49,58,160,138,138,235,212,168,158,33,125,137,138,28,233,226,164,236,193,50,227,56,115,18,106,136,156,122,178,68,142,23,119,13,184,149,108,115,188,67,129,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 452 ") {
    byte_vec_t msg { 207,21,7,77 };
    byte_vec_t sig { 4,165,128,184,245,197,243,129,229,84,143,54,104,60,140,75,8,19,140,92,136,116,166,60,156,42,58,178,82,12,57,220,171,188,159,58,231,102,230,56,35,117,36,216,32,70,150,221,142,176,106,65,87,194,182,207,26,139,228,184,0,46,191,72 };
    byte_vec_t pk { 4,111,94,151,15,116,107,81,39,77,252,107,231,42,144,56,224,238,235,251,246,255,58,168,19,200,17,27,52,219,127,148,89,230,199,213,137,236,130,210,155,163,80,109,178,244,251,255,228,146,143,199,30,173,56,178,130,7,73,143,119,201,21,127,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 452 ") {
    byte_vec_t msg { 120,168,10,4 };
    byte_vec_t sig { 223,59,197,161,125,121,9,222,175,58,252,10,9,122,138,253,32,74,238,80,24,10,142,227,255,223,146,43,14,145,95,247,142,79,168,89,52,43,21,203,226,124,207,157,67,24,10,2,56,91,251,94,48,103,158,234,245,186,239,128,118,197,249,27 };
    byte_vec_t pk { 3,205,217,5,99,84,119,25,128,153,190,4,174,216,222,124,246,191,55,253,74,122,93,31,3,126,77,134,41,165,42,25,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 452 ") {
    byte_vec_t msg { 229,17,74,96 };
    byte_vec_t sig { 132,206,37,204,142,122,168,52,225,204,164,138,219,197,243,225,46,64,46,162,220,93,112,231,212,128,6,102,189,200,18,195,210,102,20,208,50,35,203,255,138,14,152,218,199,129,74,0,93,84,174,140,254,82,69,7,9,196,19,34,102,70,104,102 };
    byte_vec_t pk { 3,28,225,27,52,112,166,110,134,49,91,31,80,134,181,103,197,12,122,85,85,135,130,112,233,87,0,141,165,92,237,82,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 453 ") {
    byte_vec_t msg { 1,166,236,106 };
    byte_vec_t sig { 149,28,51,121,0,101,107,65,241,71,30,127,37,112,154,57,155,88,61,201,246,26,216,74,138,30,190,21,117,206,51,25,215,73,143,184,83,67,48,209,54,211,220,123,247,252,85,40,27,177,150,233,243,75,155,53,87,151,160,182,245,112,100,55 };
    byte_vec_t pk { 4,87,9,11,12,193,163,58,238,116,163,235,89,43,219,156,28,129,140,182,237,30,95,159,31,88,234,248,216,117,237,35,181,248,221,66,39,193,166,224,116,195,229,91,225,205,63,107,172,61,24,171,249,71,176,251,44,96,45,17,241,72,95,193,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 453 ") {
    byte_vec_t msg { 206,232,21,174 };
    byte_vec_t sig { 240,153,182,25,129,25,20,228,54,145,156,97,44,136,158,118,30,138,34,74,87,98,208,137,162,213,44,133,222,155,16,180,171,44,32,149,148,91,180,132,165,149,198,220,51,173,34,248,50,203,187,210,250,207,4,14,231,156,209,244,192,8,101,218 };
    byte_vec_t pk { 4,152,236,36,181,156,252,137,212,67,125,155,156,0,200,197,95,99,72,72,55,47,77,75,46,22,20,122,63,180,74,94,71,10,180,55,239,225,34,194,164,122,32,91,31,7,38,209,111,175,65,200,171,228,51,53,129,232,192,184,55,200,180,0,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 453 ") {
    byte_vec_t msg { 41,234,178,46 };
    byte_vec_t sig { 211,234,211,59,101,82,238,97,72,152,187,241,19,231,219,223,209,96,141,215,242,214,40,246,7,7,231,17,207,174,142,72,197,8,130,13,121,206,106,207,230,109,157,22,58,37,77,8,203,9,96,153,5,82,135,44,61,120,42,209,188,81,157,77 };
    byte_vec_t pk { 2,190,4,211,178,20,146,95,143,234,90,82,102,166,113,29,102,49,186,255,19,216,117,132,46,196,219,38,64,237,227,100,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 453 ") {
    byte_vec_t msg { 34,147,104,87 };
    byte_vec_t sig { 131,244,135,190,207,83,168,39,231,156,217,12,158,76,137,98,111,188,63,179,185,181,78,177,44,140,75,145,174,153,2,24,141,2,158,127,153,104,128,38,33,154,84,171,251,200,241,42,140,34,205,134,105,254,85,27,37,82,96,123,26,252,88,7 };
    byte_vec_t pk { 2,162,0,128,128,101,105,119,94,165,119,112,175,239,143,253,217,90,216,6,205,0,76,177,155,123,170,234,102,149,42,127,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 454 ") {
    byte_vec_t msg { 197,89,173,97 };
    byte_vec_t sig { 226,225,194,2,63,63,120,165,73,164,193,107,161,51,241,29,168,228,145,24,185,69,72,126,98,44,176,24,16,84,112,53,248,17,137,4,52,114,190,253,3,144,47,196,180,75,241,151,215,214,81,86,158,242,16,9,87,164,52,247,207,65,120,177 };
    byte_vec_t pk { 4,155,61,247,40,167,5,85,83,124,132,58,174,249,203,82,59,34,87,63,82,200,129,61,15,25,213,26,101,74,198,2,170,116,148,186,157,243,167,65,222,166,255,173,35,118,175,93,225,89,173,203,214,209,100,148,99,20,135,49,124,237,24,83,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 454 ") {
    byte_vec_t msg { 239,154,45,6 };
    byte_vec_t sig { 220,84,241,155,114,116,64,1,201,20,100,92,247,21,253,20,66,222,52,182,41,169,100,36,85,134,225,216,222,32,111,247,208,34,52,1,194,148,60,225,140,113,199,133,107,151,254,182,133,86,156,190,106,14,68,81,9,202,184,55,164,154,33,251 };
    byte_vec_t pk { 4,34,45,130,226,136,41,34,190,214,85,28,100,253,184,49,105,19,134,35,250,154,82,114,33,141,74,123,217,189,115,42,7,93,249,189,167,108,169,15,149,193,191,170,55,165,30,156,213,172,47,137,171,225,56,204,82,253,59,29,108,182,64,166,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 454 ") {
    byte_vec_t msg { 196,211,215,171 };
    byte_vec_t sig { 93,38,162,221,78,123,102,134,36,148,171,111,210,216,63,184,76,220,230,200,66,108,218,85,194,153,194,13,58,223,15,128,199,6,87,56,105,153,17,97,221,111,168,66,58,49,191,156,4,68,228,104,67,39,189,239,117,39,255,16,61,105,162,26 };
    byte_vec_t pk { 2,166,176,247,185,66,164,212,5,188,114,93,37,214,194,144,72,142,242,7,17,63,32,224,255,104,219,153,15,204,41,7,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 454 ") {
    byte_vec_t msg { 202,198,24,121 };
    byte_vec_t sig { 134,47,77,146,70,63,130,67,63,139,192,238,239,169,76,16,177,190,166,158,244,79,140,33,198,143,32,37,57,230,216,242,83,182,165,6,104,150,126,17,104,159,97,216,206,199,243,130,70,81,119,178,113,60,185,87,195,171,10,31,57,24,225,29 };
    byte_vec_t pk { 3,120,47,109,45,35,63,166,29,25,42,111,51,110,170,113,121,85,149,93,247,239,81,67,85,67,204,15,102,172,110,130,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 455 ") {
    byte_vec_t msg { 54,162,158,10 };
    byte_vec_t sig { 202,88,180,35,181,98,113,61,120,135,92,43,190,100,25,226,148,226,203,216,151,88,35,127,3,179,205,31,26,33,31,139,5,222,80,207,87,30,12,110,121,24,53,27,217,112,12,231,78,182,42,60,134,57,95,28,65,34,115,64,78,62,121,191 };
    byte_vec_t pk { 4,129,126,198,211,203,141,173,85,189,144,21,149,192,213,97,41,104,41,126,75,15,1,153,119,181,153,75,183,157,108,247,100,166,71,31,65,205,137,56,229,178,214,197,33,109,1,236,71,79,70,245,81,65,102,48,10,102,58,252,220,47,33,130,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 455 ") {
    byte_vec_t msg { 213,31,77,245 };
    byte_vec_t sig { 144,39,125,78,180,230,117,205,254,45,223,116,192,144,93,76,232,203,29,110,246,170,238,141,48,183,68,142,45,225,82,59,22,230,43,201,146,101,45,15,159,65,150,17,115,151,249,73,97,58,121,176,235,242,67,208,215,18,150,45,47,230,200,125 };
    byte_vec_t pk { 4,23,83,63,159,206,193,236,32,119,247,245,90,251,253,206,126,4,210,106,186,24,128,17,254,156,148,163,72,121,50,185,147,180,188,163,1,206,53,75,108,104,54,65,147,18,89,167,188,26,62,226,253,98,17,60,183,213,251,85,97,147,173,35,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 455 ") {
    byte_vec_t msg { 229,223,13,175 };
    byte_vec_t sig { 142,247,35,143,112,148,46,7,55,38,58,156,193,158,223,83,179,209,3,178,12,12,203,13,253,212,102,17,39,86,89,76,38,141,245,176,191,184,44,157,239,22,222,66,188,42,178,59,177,72,29,112,87,180,185,79,103,142,76,123,202,64,47,19 };
    byte_vec_t pk { 3,216,81,8,22,226,51,40,181,162,102,196,145,90,166,217,71,141,120,191,141,245,229,127,44,62,243,38,184,141,69,186,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 455 ") {
    byte_vec_t msg { 240,100,71,250 };
    byte_vec_t sig { 242,160,174,98,216,202,79,72,234,38,228,24,28,8,106,156,2,67,208,212,225,214,202,44,159,20,121,129,148,82,77,80,40,168,140,6,235,34,45,3,24,220,139,232,127,247,231,32,96,249,240,196,251,3,221,121,176,123,94,190,70,33,12,249 };
    byte_vec_t pk { 3,97,85,46,212,143,57,53,242,152,56,186,16,106,26,74,72,214,172,108,247,126,48,38,37,189,201,117,190,218,152,102,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 456 ") {
    byte_vec_t msg { 47,176,185,148 };
    byte_vec_t sig { 187,228,231,152,6,8,61,248,194,198,7,145,94,188,239,234,22,216,196,23,168,227,156,83,213,213,183,43,85,240,43,130,45,179,109,237,145,67,235,48,233,242,169,226,248,70,59,63,61,133,1,83,132,111,126,205,100,249,87,63,134,90,42,240 };
    byte_vec_t pk { 4,104,154,133,114,79,124,162,21,89,47,235,63,34,148,220,229,40,51,95,181,151,143,25,252,172,49,9,76,147,20,52,198,60,184,166,227,182,94,242,86,104,11,141,177,112,181,96,132,204,121,105,188,28,85,181,44,145,5,203,22,50,78,139,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 456 ") {
    byte_vec_t msg { 144,142,120,154 };
    byte_vec_t sig { 223,28,89,210,191,226,83,174,237,59,75,104,42,173,185,68,130,75,0,36,8,251,36,63,57,224,250,184,203,124,123,99,225,148,53,65,10,5,181,165,234,239,214,255,47,126,112,21,60,62,160,191,26,235,2,40,129,189,52,234,100,18,28,145 };
    byte_vec_t pk { 4,144,212,235,94,5,250,175,204,96,215,224,118,8,30,163,114,179,110,228,119,123,10,38,32,102,2,211,75,196,119,150,133,61,56,47,198,115,117,238,144,57,235,9,161,93,179,37,101,112,48,5,6,138,207,26,232,158,31,73,116,81,217,234,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 456 ") {
    byte_vec_t msg { 146,98,205,160 };
    byte_vec_t sig { 85,92,127,16,22,122,226,146,54,120,211,199,128,139,198,27,16,184,0,18,199,159,181,57,150,178,55,177,209,207,93,248,39,174,159,120,31,176,210,47,234,155,89,70,179,87,7,148,188,144,2,68,187,113,157,30,73,67,2,137,5,9,46,249 };
    byte_vec_t pk { 3,65,160,193,226,31,208,183,132,248,168,213,225,219,164,136,10,1,172,36,248,177,157,222,48,198,178,194,150,26,202,47,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 456 ") {
    byte_vec_t msg { 208,37,7,97 };
    byte_vec_t sig { 63,246,86,240,137,221,128,163,121,32,140,76,186,34,164,81,90,9,177,76,24,89,243,221,83,94,166,41,115,71,162,63,46,199,44,139,88,17,161,20,164,131,49,53,139,187,111,70,146,91,27,115,53,102,255,217,127,99,101,102,126,166,58,32 };
    byte_vec_t pk { 3,8,198,213,220,171,75,4,146,1,246,43,255,89,126,24,42,247,113,88,237,182,163,114,246,172,23,175,244,170,133,133,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 457 ") {
    byte_vec_t msg { 235,247,132,118 };
    byte_vec_t sig { 179,32,50,110,220,146,224,50,17,132,30,85,176,182,221,63,148,245,190,30,242,218,238,12,24,64,13,118,47,193,66,162,3,238,84,92,122,211,31,254,168,68,4,84,119,41,8,217,199,188,239,245,131,238,101,62,90,112,15,149,134,106,30,158 };
    byte_vec_t pk { 4,83,18,147,242,150,90,59,158,246,199,222,70,114,3,169,109,243,156,101,237,50,206,46,23,21,190,163,188,235,66,245,101,216,107,158,16,61,240,172,155,89,188,241,219,52,47,13,17,145,200,113,48,249,170,67,66,159,152,137,122,116,44,147,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 457 ") {
    byte_vec_t msg { 9,127,57,225 };
    byte_vec_t sig { 145,246,22,127,193,19,33,98,75,36,17,27,156,255,235,81,198,213,161,107,136,36,171,51,113,192,213,58,157,13,55,36,98,255,87,151,44,21,208,33,30,4,79,228,156,23,30,26,229,96,117,138,210,100,88,180,48,125,46,84,157,102,44,26 };
    byte_vec_t pk { 4,178,11,35,149,186,97,164,247,114,109,149,236,252,179,191,228,155,6,1,95,117,235,58,118,71,116,34,23,196,44,151,246,183,67,178,225,177,25,150,147,169,100,205,209,7,70,70,228,167,109,214,36,54,130,126,116,214,124,229,223,188,159,14,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 457 ") {
    byte_vec_t msg { 242,218,170,150 };
    byte_vec_t sig { 92,192,56,167,155,19,133,14,229,75,236,114,81,46,166,179,165,157,207,180,198,144,88,180,100,50,170,112,187,226,117,191,223,177,46,82,165,59,161,57,102,188,61,16,147,13,154,108,231,247,118,46,240,177,188,221,58,10,29,23,36,198,57,141 };
    byte_vec_t pk { 3,18,170,179,19,34,21,240,99,164,31,166,208,187,175,108,208,129,245,136,163,190,31,16,130,85,195,154,138,98,63,44,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 457 ") {
    byte_vec_t msg { 5,208,116,110 };
    byte_vec_t sig { 217,84,96,36,194,2,52,6,89,234,43,157,67,176,213,56,60,198,103,231,56,84,235,35,190,108,206,49,237,217,176,141,33,253,90,4,22,61,222,190,220,100,191,37,136,4,153,173,19,149,102,75,94,68,114,212,64,12,137,234,99,130,251,215 };
    byte_vec_t pk { 3,148,240,236,128,177,224,112,206,154,251,7,56,44,155,182,88,187,149,215,176,231,40,118,244,133,247,146,106,34,246,242,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 458 ") {
    byte_vec_t msg { 220,76,18,232 };
    byte_vec_t sig { 227,220,123,202,22,125,72,29,37,195,178,165,26,50,239,179,108,69,22,7,190,90,164,146,61,75,242,199,81,192,101,177,33,179,46,85,205,35,238,144,84,112,111,192,218,215,244,159,72,68,42,202,22,174,239,231,67,106,139,176,136,154,141,212 };
    byte_vec_t pk { 4,163,110,53,101,181,191,99,172,183,184,193,230,73,85,3,30,176,32,94,202,34,56,12,159,88,75,74,222,92,66,112,210,133,27,76,24,93,246,192,91,206,168,74,223,141,91,13,34,93,192,170,28,233,206,211,108,55,230,168,92,253,151,36,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 458 ") {
    byte_vec_t msg { 58,226,15,47 };
    byte_vec_t sig { 106,36,186,82,23,68,57,117,89,41,11,217,81,171,103,191,149,55,175,60,207,29,70,224,56,239,21,109,151,231,8,152,56,154,225,47,140,180,45,40,213,249,162,226,162,111,41,33,37,233,228,17,171,194,143,119,247,206,72,214,255,134,124,91 };
    byte_vec_t pk { 4,239,234,93,139,120,232,246,28,210,157,153,8,48,206,167,183,49,159,146,3,69,48,172,49,83,196,95,118,112,135,232,140,0,78,93,239,140,233,88,122,131,212,88,106,116,42,20,61,250,97,163,62,205,105,200,82,194,46,110,209,114,83,219,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 458 ") {
    byte_vec_t msg { 135,99,254,75 };
    byte_vec_t sig { 6,46,247,26,159,236,216,86,62,203,211,201,232,83,195,190,214,254,28,104,42,222,223,171,235,105,240,204,214,180,135,79,68,51,191,28,75,242,41,188,24,91,120,22,83,210,109,10,26,228,99,233,104,230,103,163,238,215,216,255,31,87,255,94 };
    byte_vec_t pk { 3,231,36,182,33,93,229,253,104,183,17,26,161,1,175,60,40,25,43,213,110,204,117,144,241,204,24,28,131,245,29,29,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 458 ") {
    byte_vec_t msg { 150,83,102,27 };
    byte_vec_t sig { 162,244,55,210,109,48,186,127,17,169,127,37,91,1,209,116,52,113,249,126,195,32,21,0,27,134,14,195,154,176,175,209,234,27,233,16,51,3,171,59,98,236,227,200,221,86,189,207,61,151,199,56,133,132,165,108,125,116,119,219,27,80,57,241 };
    byte_vec_t pk { 2,246,99,106,117,50,25,160,129,82,230,20,156,169,141,178,250,110,50,238,37,85,43,91,184,149,218,109,168,202,126,95,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 459 ") {
    byte_vec_t msg { 56,161,158,125 };
    byte_vec_t sig { 118,224,172,203,205,82,123,53,224,198,90,121,126,0,159,122,8,0,127,195,63,4,108,25,34,229,245,141,133,33,63,159,187,48,180,78,72,177,192,75,104,140,39,197,188,5,127,115,139,67,38,236,179,132,176,70,114,115,25,67,204,193,65,155 };
    byte_vec_t pk { 4,205,126,66,60,120,250,161,180,181,46,153,116,163,23,222,127,123,155,196,230,141,73,224,23,201,145,40,135,39,129,9,230,4,37,40,58,11,211,0,229,203,130,113,195,150,235,192,214,255,106,157,196,66,44,169,75,124,60,59,140,44,58,192,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 459 ") {
    byte_vec_t msg { 42,232,44,163 };
    byte_vec_t sig { 119,212,125,108,175,251,100,1,158,252,63,112,253,157,203,21,103,81,94,252,51,138,55,38,186,76,166,38,64,212,62,167,81,204,170,5,253,92,145,158,250,79,32,138,215,21,98,88,33,213,40,60,222,156,187,133,152,2,197,163,49,106,203,97 };
    byte_vec_t pk { 4,111,6,6,195,217,68,65,236,157,70,235,130,34,150,133,171,252,100,28,13,246,230,179,248,212,107,225,209,5,189,250,161,11,31,134,81,77,106,28,166,84,142,209,7,206,1,176,140,247,211,58,125,129,65,66,195,205,52,127,51,243,33,96,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 459 ") {
    byte_vec_t msg { 173,154,206,115 };
    byte_vec_t sig { 244,62,56,53,233,189,207,84,110,128,188,145,65,209,57,99,43,52,82,146,75,1,50,18,162,100,252,199,151,194,62,88,66,154,91,85,159,198,1,185,123,218,231,43,117,63,217,8,217,10,175,148,156,245,138,28,241,183,153,147,119,151,232,12 };
    byte_vec_t pk { 3,95,109,130,64,90,77,243,223,192,96,234,45,92,62,134,49,139,15,147,157,83,146,1,190,90,236,64,98,171,186,47,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 459 ") {
    byte_vec_t msg { 97,121,176,143 };
    byte_vec_t sig { 208,242,58,189,63,185,28,242,164,121,1,12,167,217,249,110,110,12,164,35,14,49,213,233,216,179,226,23,62,123,2,170,95,47,28,99,143,65,154,192,95,92,9,220,200,44,152,60,129,217,234,103,49,204,250,102,158,234,106,133,66,251,48,175 };
    byte_vec_t pk { 3,44,194,217,43,182,143,14,137,32,193,183,32,210,235,31,71,121,23,251,53,22,47,107,197,156,52,29,221,66,201,242,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 460 ") {
    byte_vec_t msg { 86,122,193,43 };
    byte_vec_t sig { 216,190,244,15,254,213,57,52,48,114,246,75,241,20,163,112,194,230,196,80,85,193,247,35,38,232,55,171,15,201,51,30,182,29,78,22,189,65,32,65,2,144,231,136,47,58,70,57,101,18,192,172,41,202,141,250,111,212,5,226,115,149,187,122 };
    byte_vec_t pk { 4,16,14,137,110,24,30,120,17,139,107,104,217,67,204,238,214,159,153,213,97,5,34,156,23,205,139,194,178,11,94,246,121,219,8,88,100,153,141,205,213,27,58,178,5,37,162,124,112,103,245,174,76,18,33,17,102,38,202,254,73,192,108,54,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 460 ") {
    byte_vec_t msg { 148,27,157,109 };
    byte_vec_t sig { 53,84,183,49,178,228,152,191,173,32,12,136,73,4,27,92,24,13,106,155,8,187,11,75,254,101,125,69,59,20,201,92,164,185,41,119,247,111,11,26,146,68,206,78,65,211,157,235,128,190,186,72,27,244,220,209,179,193,21,255,43,165,155,89 };
    byte_vec_t pk { 4,111,136,171,2,212,110,113,117,0,28,91,75,233,75,225,154,49,192,207,8,208,146,161,70,139,206,255,227,32,46,50,36,177,118,5,162,86,69,160,188,221,162,246,172,2,30,10,3,109,35,213,173,92,224,128,118,164,131,218,174,8,83,219,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 460 ") {
    byte_vec_t msg { 169,159,63,8 };
    byte_vec_t sig { 165,132,50,197,185,14,239,25,99,202,129,97,141,158,224,75,208,55,97,171,59,81,245,248,227,9,112,157,237,108,10,88,58,118,212,132,124,235,65,85,181,33,131,19,12,146,202,17,187,25,74,180,86,114,1,125,20,135,169,151,167,141,24,233 };
    byte_vec_t pk { 2,139,25,206,196,53,41,32,156,14,224,72,227,135,212,21,74,154,179,205,38,90,150,12,176,165,116,106,50,227,84,51,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 460 ") {
    byte_vec_t msg { 66,252,193,194 };
    byte_vec_t sig { 179,105,147,214,153,179,118,251,99,26,5,38,142,150,57,164,157,15,109,88,30,244,52,1,98,229,248,138,181,18,177,63,148,135,72,18,2,185,131,240,248,60,201,231,86,103,24,33,231,9,94,117,241,244,214,111,239,18,77,173,15,158,109,177 };
    byte_vec_t pk { 2,255,186,65,67,47,222,93,31,40,121,212,21,229,171,167,139,31,39,103,20,211,113,246,83,246,128,130,223,5,176,34,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 461 ") {
    byte_vec_t msg { 30,53,139,70 };
    byte_vec_t sig { 41,204,195,82,167,170,30,14,97,21,83,60,7,75,200,60,79,106,240,178,124,41,151,86,39,227,42,56,212,131,71,226,214,86,196,55,53,15,170,64,206,165,197,69,137,252,231,93,236,97,113,178,97,183,172,61,23,202,157,10,21,145,27,177 };
    byte_vec_t pk { 4,186,112,43,12,65,67,17,37,93,110,153,54,85,206,44,89,45,9,220,154,163,188,105,25,246,211,221,75,204,172,31,5,109,31,17,29,138,110,54,123,36,71,212,113,255,164,198,217,63,69,230,171,130,123,213,173,214,110,64,54,243,61,217,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 461 ") {
    byte_vec_t msg { 81,139,13,10 };
    byte_vec_t sig { 124,127,163,161,103,47,184,35,240,193,164,200,91,139,6,54,231,159,31,169,220,172,147,109,69,246,176,64,195,219,174,60,120,123,131,141,147,248,249,6,224,45,210,68,87,87,252,233,95,102,44,1,117,9,40,210,144,236,231,228,119,255,150,38 };
    byte_vec_t pk { 4,110,173,241,130,66,130,104,253,66,19,104,140,236,206,186,224,145,225,125,194,110,153,11,192,119,73,176,26,198,163,99,42,177,193,218,226,77,43,131,87,101,27,104,175,198,244,190,220,149,25,66,204,158,210,150,6,5,105,176,67,148,49,45,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 461 ") {
    byte_vec_t msg { 153,179,138,106 };
    byte_vec_t sig { 234,255,172,76,166,179,229,139,108,13,207,248,135,253,65,145,174,103,14,11,125,16,67,54,169,193,229,215,153,247,230,106,245,24,12,28,162,1,21,109,204,183,106,14,225,23,114,93,102,40,46,212,80,84,177,235,129,9,20,246,28,62,201,118 };
    byte_vec_t pk { 2,156,205,174,61,201,35,38,3,16,109,42,180,17,72,231,168,162,227,31,109,144,190,7,242,83,100,138,20,69,242,185,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 461 ") {
    byte_vec_t msg { 91,139,38,111 };
    byte_vec_t sig { 250,30,64,80,251,212,103,141,218,9,50,170,217,127,84,159,217,218,234,161,170,41,85,130,129,92,144,213,246,253,156,199,0,67,152,226,11,146,85,109,171,251,180,73,179,30,98,148,58,89,140,253,67,230,147,188,163,116,212,147,57,82,16,105 };
    byte_vec_t pk { 3,235,149,151,233,83,204,121,197,79,62,194,76,243,0,16,114,0,239,160,223,141,138,252,121,249,178,46,210,79,8,45,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 462 ") {
    byte_vec_t msg { 36,10,108,215 };
    byte_vec_t sig { 251,67,90,145,48,40,254,7,116,167,54,123,231,156,19,206,6,216,25,249,121,233,199,153,167,1,134,128,150,16,168,74,40,19,53,239,115,152,123,0,29,0,60,178,119,165,52,148,53,125,147,95,55,98,178,35,140,226,2,156,58,21,95,45 };
    byte_vec_t pk { 4,120,129,149,97,231,215,149,49,70,86,178,26,73,75,201,23,102,149,224,56,207,133,8,198,57,6,252,93,188,83,246,24,118,75,114,242,22,155,209,69,238,63,78,92,98,3,230,231,227,137,197,72,36,103,49,165,11,116,178,97,249,132,163,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 462 ") {
    byte_vec_t msg { 84,114,114,188 };
    byte_vec_t sig { 175,226,89,164,238,42,110,44,148,56,4,41,11,33,13,85,218,182,81,208,183,11,11,177,17,135,83,34,166,184,53,145,166,25,146,237,121,13,68,15,17,142,114,27,27,22,181,186,60,109,233,184,192,93,32,140,153,19,132,226,205,217,227,88 };
    byte_vec_t pk { 4,73,225,81,32,157,188,6,213,240,123,16,201,46,89,214,108,5,69,168,237,107,87,30,221,115,165,73,185,199,87,233,222,203,70,37,51,201,179,14,176,114,219,188,195,227,130,195,145,212,189,156,58,237,60,114,3,10,89,115,194,78,121,224,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 462 ") {
    byte_vec_t msg { 206,94,44,135 };
    byte_vec_t sig { 3,131,138,118,173,107,115,115,156,74,64,49,100,40,166,131,140,53,26,132,50,149,14,126,138,209,73,204,172,129,10,79,252,46,249,37,111,127,223,63,228,192,226,234,218,255,186,83,186,150,166,40,61,250,208,154,165,11,102,154,122,123,194,10 };
    byte_vec_t pk { 2,9,21,36,174,113,207,185,172,181,206,63,181,10,158,191,217,174,182,140,37,14,214,202,175,235,202,68,223,244,126,136,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 462 ") {
    byte_vec_t msg { 21,10,30,196 };
    byte_vec_t sig { 30,52,205,75,147,38,37,189,3,54,70,155,229,70,172,107,85,11,70,5,0,105,1,170,29,13,171,28,20,90,43,191,135,111,94,182,238,85,73,4,157,141,225,63,238,137,11,173,208,202,199,64,240,140,68,5,94,74,38,200,123,222,97,197 };
    byte_vec_t pk { 2,8,56,66,237,218,4,98,35,188,10,137,195,217,124,86,103,44,237,75,84,134,132,209,30,190,94,22,193,215,239,11,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 463 ") {
    byte_vec_t msg { 43,185,161,88 };
    byte_vec_t sig { 61,175,150,87,21,220,144,2,14,87,39,88,207,173,58,38,254,228,236,217,190,77,230,232,186,157,100,129,104,62,53,103,0,180,9,243,13,39,127,2,202,152,227,165,124,37,15,52,248,194,158,8,40,100,14,38,90,189,33,83,87,238,162,117 };
    byte_vec_t pk { 4,236,14,130,223,175,170,208,129,63,131,246,85,107,238,194,123,172,14,102,24,4,13,51,238,25,143,42,18,70,160,84,108,10,116,40,67,171,127,178,25,61,241,151,244,134,65,190,90,80,219,243,80,118,223,183,89,221,65,171,149,137,191,201,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 463 ") {
    byte_vec_t msg { 197,187,19,106 };
    byte_vec_t sig { 243,39,103,108,175,129,192,186,227,107,46,135,51,0,19,77,110,158,48,60,83,253,57,97,127,202,219,137,136,35,45,12,205,20,16,173,237,186,220,79,131,104,251,27,163,168,246,69,185,166,186,106,73,206,253,169,142,206,14,122,53,152,187,11 };
    byte_vec_t pk { 4,208,212,131,130,228,164,6,68,195,179,175,10,87,227,161,57,212,72,139,45,141,210,109,135,112,122,156,251,184,236,48,236,241,175,106,130,181,23,167,4,142,8,253,206,64,204,29,201,70,5,185,77,46,209,138,243,243,92,107,74,153,67,151,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 463 ") {
    byte_vec_t msg { 194,255,17,90 };
    byte_vec_t sig { 164,97,70,165,239,233,159,59,187,56,232,18,165,123,222,225,26,123,51,249,177,210,45,4,117,181,7,44,4,230,106,173,93,37,0,243,180,158,1,122,81,108,245,82,205,171,116,137,177,239,42,200,132,69,146,251,156,189,252,127,245,87,189,4 };
    byte_vec_t pk { 2,74,182,192,106,190,177,160,113,207,36,43,123,204,187,131,100,218,227,25,137,148,37,210,61,255,4,185,218,170,139,96,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 463 ") {
    byte_vec_t msg { 28,228,178,208 };
    byte_vec_t sig { 215,90,102,246,35,245,4,106,216,164,224,240,49,200,221,38,202,170,218,151,145,110,14,107,142,173,214,250,64,51,227,231,69,173,163,79,32,89,214,244,90,109,42,196,80,148,240,85,3,6,192,157,22,195,150,182,171,147,124,17,163,220,189,180 };
    byte_vec_t pk { 3,4,10,138,160,83,110,117,67,41,113,183,188,210,56,125,33,87,181,113,33,242,215,17,253,92,54,55,128,138,67,42,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 464 ") {
    byte_vec_t msg { 86,191,203,50 };
    byte_vec_t sig { 107,99,90,10,89,131,99,184,19,88,151,157,114,8,43,6,41,189,238,154,246,133,18,105,41,221,126,98,11,239,174,106,194,146,77,29,131,189,204,250,182,96,27,2,140,237,250,41,115,156,76,174,165,97,96,131,103,112,125,103,204,109,0,94 };
    byte_vec_t pk { 4,165,8,252,151,131,58,162,186,167,146,137,8,75,44,238,231,47,62,223,178,14,241,173,80,29,43,95,35,45,10,166,3,33,191,60,84,98,197,66,78,167,11,120,110,144,26,81,80,244,114,219,114,13,249,130,16,144,164,158,223,22,87,237,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 464 ") {
    byte_vec_t msg { 105,25,143,103 };
    byte_vec_t sig { 37,239,124,215,90,252,144,227,138,61,224,156,199,202,47,130,136,171,181,18,35,128,234,113,247,16,88,100,246,204,141,43,149,1,239,136,243,166,52,19,182,103,110,193,109,153,58,140,156,81,9,151,49,253,61,110,61,184,144,180,118,121,187,97 };
    byte_vec_t pk { 4,134,247,41,79,103,106,200,31,199,125,237,193,239,54,230,226,10,115,96,104,226,70,23,10,253,163,18,50,170,55,215,165,146,150,36,139,51,254,56,45,242,4,65,175,250,202,100,114,147,45,249,36,196,150,32,26,65,172,15,43,126,212,190,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 464 ") {
    byte_vec_t msg { 142,189,169,18 };
    byte_vec_t sig { 197,141,176,38,163,189,168,10,21,250,92,18,54,62,6,11,117,67,247,85,185,113,123,233,92,154,254,142,92,15,107,235,187,127,180,83,145,25,221,15,67,25,143,201,227,159,124,220,241,42,128,215,25,123,230,172,245,50,49,75,31,144,236,156 };
    byte_vec_t pk { 2,4,166,163,71,138,236,15,248,54,2,45,247,199,68,116,70,212,121,168,15,113,128,125,14,100,38,53,52,34,4,95,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 464 ") {
    byte_vec_t msg { 107,51,174,191 };
    byte_vec_t sig { 142,135,83,247,54,82,154,6,154,217,136,163,197,124,238,131,167,47,2,217,55,108,69,225,165,83,17,22,225,10,169,193,202,196,59,162,221,212,77,44,44,34,245,158,229,125,168,123,48,70,190,251,169,92,131,192,225,73,160,46,244,91,227,92 };
    byte_vec_t pk { 3,240,172,223,108,24,217,248,222,169,140,129,56,101,228,108,158,130,60,206,52,203,238,170,171,82,105,196,235,158,214,157,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 465 ") {
    byte_vec_t msg { 188,125,68,91 };
    byte_vec_t sig { 81,157,190,142,212,14,54,182,225,105,161,6,251,216,131,251,144,7,254,72,251,115,180,68,147,52,19,246,238,112,243,157,187,171,133,68,153,184,98,123,114,158,140,53,72,92,112,239,154,74,185,128,155,131,36,124,252,167,146,253,104,168,247,99 };
    byte_vec_t pk { 4,210,187,32,172,93,159,3,38,155,97,73,187,48,202,235,28,197,9,36,153,179,119,215,188,196,66,247,61,48,166,254,207,254,201,88,58,230,46,126,36,32,38,10,51,48,79,215,83,231,175,208,128,132,253,81,51,153,104,166,42,5,138,226,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 465 ") {
    byte_vec_t msg { 128,102,194,95 };
    byte_vec_t sig { 71,27,185,215,98,191,253,176,130,12,104,2,189,250,176,201,138,90,4,194,183,16,23,215,172,245,67,83,96,147,127,91,14,60,56,237,79,105,248,144,199,66,13,6,121,178,3,113,47,15,102,108,69,234,90,213,161,48,16,123,86,166,45,235 };
    byte_vec_t pk { 4,168,147,43,95,11,94,167,233,221,136,137,54,75,125,212,21,182,19,23,175,107,3,233,56,143,134,122,196,118,89,19,250,243,47,38,186,145,241,199,11,211,143,41,9,185,132,25,211,179,44,76,106,189,240,106,92,94,66,175,191,36,172,121,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 465 ") {
    byte_vec_t msg { 170,234,237,30 };
    byte_vec_t sig { 199,139,206,28,98,105,59,236,22,86,133,193,249,116,120,80,79,233,3,146,92,211,97,253,133,198,0,37,7,30,158,14,232,208,85,161,218,134,164,122,140,57,58,150,198,210,52,139,152,238,173,181,168,131,153,59,139,247,215,27,198,93,61,32 };
    byte_vec_t pk { 2,17,179,87,229,69,243,108,41,52,130,145,102,180,45,109,118,44,13,9,31,40,111,86,149,68,139,19,125,111,39,117,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 465 ") {
    byte_vec_t msg { 167,106,233,215 };
    byte_vec_t sig { 201,13,21,225,222,197,139,190,149,164,45,23,59,43,160,126,103,179,253,180,248,247,47,123,135,217,251,144,240,246,83,87,208,240,7,29,62,114,48,15,38,248,12,195,106,212,157,204,92,88,132,231,183,75,108,254,84,246,47,198,29,145,226,110 };
    byte_vec_t pk { 3,79,214,79,53,106,74,57,54,88,184,96,47,227,217,115,172,171,85,157,232,159,104,205,121,211,93,59,197,191,121,176,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 466 ") {
    byte_vec_t msg { 254,218,29,46 };
    byte_vec_t sig { 95,170,32,171,70,67,184,168,183,223,209,210,97,12,157,122,150,219,188,131,22,62,251,166,118,15,48,134,0,30,28,48,196,58,90,72,202,133,211,237,98,12,171,255,212,179,7,187,166,74,10,51,48,40,44,107,176,72,188,184,255,66,254,89 };
    byte_vec_t pk { 4,235,155,1,41,141,149,70,160,231,145,116,236,56,176,183,19,52,62,5,172,177,183,198,132,21,219,193,6,105,105,217,235,186,137,85,132,218,145,37,133,22,57,236,189,50,30,111,44,253,109,131,81,104,186,126,21,139,194,61,98,161,45,57,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 466 ") {
    byte_vec_t msg { 25,81,36,89 };
    byte_vec_t sig { 91,87,151,8,6,220,225,94,138,221,229,14,52,94,180,84,142,13,244,207,31,115,229,213,238,183,126,14,192,24,124,67,219,104,75,175,1,8,248,109,238,34,76,86,30,49,236,215,181,209,231,214,142,197,129,246,3,183,155,183,176,15,150,167 };
    byte_vec_t pk { 4,209,34,97,164,93,40,26,197,163,21,234,46,150,156,226,183,106,218,39,193,1,145,25,146,211,43,31,132,6,34,248,13,244,13,34,145,1,230,216,6,120,30,102,174,107,154,160,29,170,49,47,145,233,140,234,178,193,24,203,137,237,215,208,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 466 ") {
    byte_vec_t msg { 134,166,73,94 };
    byte_vec_t sig { 92,182,147,228,240,234,121,148,211,178,238,45,65,18,72,66,221,41,112,178,194,159,11,112,247,148,230,250,128,104,243,234,197,171,84,211,56,209,139,243,149,213,61,21,46,112,73,62,222,194,204,157,195,29,28,67,56,43,245,85,200,141,26,236 };
    byte_vec_t pk { 2,174,155,8,31,1,95,44,194,187,100,74,242,54,248,164,143,19,226,129,235,189,51,147,59,62,97,51,76,134,29,77,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 466 ") {
    byte_vec_t msg { 40,137,68,239 };
    byte_vec_t sig { 100,28,101,73,233,41,97,59,204,21,204,83,12,76,132,158,240,148,113,24,35,234,36,121,89,53,221,250,211,235,197,238,91,144,119,213,255,212,219,139,64,129,209,72,252,38,105,171,34,128,184,25,81,122,86,177,71,21,187,27,134,49,77,160 };
    byte_vec_t pk { 3,207,83,68,47,168,152,199,155,57,244,221,70,115,170,8,185,171,222,93,233,2,47,144,161,0,44,88,14,234,201,246,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 467 ") {
    byte_vec_t msg { 173,229,97,244 };
    byte_vec_t sig { 122,19,41,149,157,154,7,70,171,146,11,108,130,199,250,3,226,89,0,82,13,105,51,110,205,80,75,225,148,45,222,195,171,207,139,248,153,16,229,37,32,118,134,40,98,94,29,232,27,133,44,138,227,235,166,168,44,86,35,199,56,137,107,70 };
    byte_vec_t pk { 4,86,12,189,72,136,65,207,62,77,209,29,34,101,17,106,227,193,191,61,35,186,43,217,137,237,15,100,238,27,96,184,132,40,29,166,166,5,167,81,219,50,69,210,89,146,7,229,189,94,82,24,182,53,209,47,8,192,14,43,218,98,52,24,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 467 ") {
    byte_vec_t msg { 92,47,226,124 };
    byte_vec_t sig { 190,63,57,16,50,183,68,29,122,246,224,72,164,141,199,200,7,168,62,71,229,209,152,194,77,255,19,26,255,231,93,112,75,245,169,6,134,18,57,125,237,206,122,33,224,150,152,167,157,179,124,243,155,18,89,153,199,94,100,241,154,221,61,32 };
    byte_vec_t pk { 4,85,75,219,27,229,43,187,18,141,210,101,193,1,68,224,110,226,49,38,92,169,64,142,131,213,139,66,229,34,86,176,106,221,247,241,63,102,172,117,118,41,225,2,6,91,124,231,22,50,73,132,17,134,125,29,181,156,55,136,139,233,20,185,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 467 ") {
    byte_vec_t msg { 35,133,253,120 };
    byte_vec_t sig { 172,189,189,117,232,79,144,91,148,125,210,3,138,223,245,202,102,32,47,51,164,26,45,89,11,174,101,81,164,241,226,15,240,165,142,205,68,102,59,237,186,217,75,103,171,58,140,90,201,125,78,227,74,7,3,2,106,152,203,140,59,208,244,119 };
    byte_vec_t pk { 3,113,200,4,248,54,201,162,24,115,163,97,71,166,53,47,239,53,60,13,199,228,185,10,84,203,101,79,198,16,102,27,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 467 ") {
    byte_vec_t msg { 57,128,114,15 };
    byte_vec_t sig { 147,102,64,44,64,221,116,171,136,204,226,187,156,54,119,115,29,195,158,122,30,171,9,102,146,180,231,146,213,20,227,118,182,192,125,222,41,25,182,61,0,120,37,105,4,209,251,45,214,49,168,142,244,138,56,81,126,94,128,130,71,16,36,109 };
    byte_vec_t pk { 2,107,108,231,127,149,226,210,33,153,60,228,67,41,118,222,41,182,138,9,247,122,189,83,251,15,255,24,141,202,38,182,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 468 ") {
    byte_vec_t msg { 131,133,254,69 };
    byte_vec_t sig { 133,84,45,103,30,85,31,153,53,240,88,53,156,208,54,181,84,101,93,15,172,113,71,230,50,133,47,225,67,250,93,45,123,138,211,209,78,47,136,183,46,90,79,130,7,143,220,193,224,52,215,254,113,153,76,114,18,249,84,199,211,166,253,150 };
    byte_vec_t pk { 4,246,73,55,203,3,115,51,133,88,1,203,116,140,186,149,123,225,25,102,10,42,69,131,143,18,131,107,195,44,220,54,250,86,124,247,2,65,196,191,45,118,136,67,86,22,79,206,65,173,60,33,77,179,42,83,229,81,45,127,35,118,13,191,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 468 ") {
    byte_vec_t msg { 37,181,187,214 };
    byte_vec_t sig { 59,115,112,6,125,103,104,251,198,164,42,40,190,181,123,133,116,112,97,215,157,60,86,231,197,203,53,167,138,120,43,196,14,95,96,79,183,102,56,128,38,154,14,177,73,227,63,8,219,178,111,187,28,14,26,255,2,229,3,134,202,11,186,189 };
    byte_vec_t pk { 4,153,52,23,172,78,30,219,30,209,225,196,82,254,38,195,67,137,77,67,161,216,114,18,113,196,230,147,180,107,54,120,38,203,1,163,221,251,60,70,19,190,41,214,248,83,220,161,166,160,184,186,27,21,132,127,39,152,99,108,165,224,85,152,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 468 ") {
    byte_vec_t msg { 171,204,89,129 };
    byte_vec_t sig { 9,56,65,0,64,151,85,47,73,5,76,64,18,130,136,212,180,76,52,224,137,198,69,238,115,12,93,22,161,59,89,237,97,90,50,192,126,9,157,154,198,120,43,217,17,213,188,217,236,194,196,189,112,227,200,218,111,29,224,0,65,52,87,211 };
    byte_vec_t pk { 2,2,188,206,221,249,30,121,0,148,175,20,150,81,60,10,221,117,155,31,89,166,131,251,245,65,237,182,60,233,194,109,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 468 ") {
    byte_vec_t msg { 212,1,86,177 };
    byte_vec_t sig { 133,231,185,133,181,95,41,90,143,155,8,249,136,42,179,42,45,27,43,198,112,104,214,62,253,182,7,121,202,18,77,169,209,209,101,119,29,145,204,84,236,54,126,80,22,2,14,145,57,6,197,41,148,250,201,27,19,252,236,215,61,88,109,225 };
    byte_vec_t pk { 3,207,139,98,120,30,19,133,198,216,141,94,245,215,60,193,4,130,192,12,153,120,210,31,146,206,65,179,74,16,151,10,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 469 ") {
    byte_vec_t msg { 238,112,9,183 };
    byte_vec_t sig { 190,249,218,207,109,148,254,116,82,39,190,56,205,46,136,227,238,30,51,79,170,125,33,108,118,33,58,169,47,187,83,85,198,177,71,248,35,179,119,206,85,171,171,210,221,242,180,58,219,20,252,99,115,57,146,37,2,218,203,39,226,81,250,150 };
    byte_vec_t pk { 4,86,103,44,45,21,227,88,171,238,207,219,34,143,109,138,182,84,219,90,228,161,97,14,62,234,94,28,166,99,206,86,43,18,24,39,245,241,148,247,147,6,248,120,106,119,199,249,65,27,233,76,210,63,75,248,154,196,59,190,79,147,74,215,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 469 ") {
    byte_vec_t msg { 222,188,232,143 };
    byte_vec_t sig { 149,152,90,49,154,112,233,214,87,23,227,71,70,21,173,249,110,50,194,201,79,56,200,33,63,240,163,166,151,130,54,20,46,169,3,70,224,171,47,92,155,141,31,10,218,217,253,230,10,226,65,179,85,148,34,92,200,82,255,225,96,191,156,225 };
    byte_vec_t pk { 4,166,246,100,196,91,25,11,244,14,31,68,66,185,246,144,222,97,141,230,208,230,6,116,185,86,82,134,104,86,95,97,234,71,207,7,187,97,187,91,207,181,180,138,44,9,231,226,97,21,129,213,143,213,225,78,102,24,105,194,118,247,168,173,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 469 ") {
    byte_vec_t msg { 239,33,209,38 };
    byte_vec_t sig { 98,126,15,155,163,44,164,175,201,178,68,74,80,120,95,231,16,75,127,10,212,110,112,215,199,230,128,30,87,121,111,200,169,60,121,224,144,17,33,168,120,215,157,0,43,250,46,115,50,245,231,198,220,56,124,226,220,149,93,156,84,252,120,24 };
    byte_vec_t pk { 2,136,21,91,173,199,92,100,139,180,41,25,39,69,180,9,246,195,72,153,182,188,154,1,96,205,15,42,120,255,34,146,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 469 ") {
    byte_vec_t msg { 151,122,125,236 };
    byte_vec_t sig { 124,112,224,252,40,86,107,222,43,243,131,174,201,80,164,91,242,140,110,20,116,107,203,248,166,121,90,53,123,58,103,251,127,245,31,53,46,173,114,0,187,198,206,114,127,227,77,171,229,124,22,211,143,247,168,228,54,24,157,220,218,155,207,119 };
    byte_vec_t pk { 2,34,166,17,116,100,113,191,145,192,91,170,162,224,94,249,224,3,142,21,89,2,153,95,8,225,100,12,253,39,50,151,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 470 ") {
    byte_vec_t msg { 149,161,236,34 };
    byte_vec_t sig { 120,59,93,51,99,52,93,247,79,59,202,242,224,240,46,183,40,147,69,205,45,136,97,141,225,145,138,96,206,11,169,60,209,25,40,23,218,139,177,71,167,178,11,6,193,1,242,44,213,194,174,226,140,149,143,161,81,249,192,216,181,159,195,14 };
    byte_vec_t pk { 4,222,11,250,27,106,188,235,78,135,251,82,135,214,145,228,114,197,99,250,235,114,70,252,78,213,131,211,194,74,75,141,101,171,142,46,153,204,213,89,204,194,209,118,236,140,152,183,66,190,140,149,73,9,171,25,119,251,81,77,19,53,204,174,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 470 ") {
    byte_vec_t msg { 188,144,75,37 };
    byte_vec_t sig { 45,236,53,172,34,225,158,247,247,227,94,179,180,175,78,119,151,155,227,46,172,199,188,7,103,47,221,54,49,8,173,30,240,136,214,200,57,221,14,118,4,5,21,237,57,248,140,18,237,53,43,0,22,41,0,170,183,17,88,139,79,223,177,72 };
    byte_vec_t pk { 4,210,229,50,98,106,26,109,83,179,88,16,93,85,62,166,249,112,183,240,203,66,106,121,131,136,144,142,118,13,254,66,107,174,46,244,148,117,130,237,183,99,48,84,207,147,61,230,152,4,166,171,56,11,77,246,145,89,102,170,162,202,142,198,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 470 ") {
    byte_vec_t msg { 70,33,253,114 };
    byte_vec_t sig { 236,117,189,97,79,205,37,152,247,72,23,249,214,33,133,44,15,178,154,165,93,156,252,39,98,193,117,54,253,122,70,46,127,219,141,95,12,178,58,86,231,196,56,211,55,161,213,71,197,56,23,103,75,97,104,79,31,105,39,10,120,235,250,48 };
    byte_vec_t pk { 3,203,104,17,36,76,10,212,188,25,117,96,166,206,217,11,149,114,54,174,45,200,124,210,89,168,20,179,222,29,9,149,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 470 ") {
    byte_vec_t msg { 62,138,158,161 };
    byte_vec_t sig { 226,48,142,155,121,134,62,224,233,165,200,115,125,30,68,124,98,83,84,189,110,63,219,208,143,111,190,8,233,157,222,171,11,41,140,185,205,148,135,147,156,79,112,34,103,76,67,194,41,148,41,165,229,136,56,188,51,16,182,15,98,216,136,23 };
    byte_vec_t pk { 2,137,223,98,67,64,41,166,191,247,198,140,155,177,248,166,41,219,189,58,60,74,206,252,246,26,0,135,215,155,143,18,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 471 ") {
    byte_vec_t msg { 164,92,2,198 };
    byte_vec_t sig { 87,85,10,66,8,89,2,222,141,157,143,87,246,95,196,94,49,165,12,83,167,135,19,171,223,194,44,226,110,243,196,196,182,68,227,178,133,253,248,187,167,191,52,52,243,141,58,106,167,122,132,184,112,154,21,216,119,10,122,63,224,198,61,188 };
    byte_vec_t pk { 4,173,20,178,187,112,209,255,132,35,135,19,124,90,58,149,254,127,54,106,219,228,103,101,241,203,154,241,116,177,79,204,18,109,136,61,112,0,117,110,46,38,175,103,223,241,174,227,24,121,94,129,97,82,3,26,136,140,119,241,38,31,158,72,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 471 ") {
    byte_vec_t msg { 35,31,146,146 };
    byte_vec_t sig { 199,158,6,146,22,37,235,42,42,5,36,9,72,88,227,159,94,221,154,144,168,20,130,82,109,202,196,239,195,3,107,248,177,216,86,172,69,164,82,225,208,210,132,103,87,237,199,160,130,215,104,186,230,122,96,72,165,174,106,35,209,6,216,224 };
    byte_vec_t pk { 4,200,62,185,238,70,183,107,87,199,50,205,187,52,91,19,185,176,93,221,19,194,29,90,65,57,49,20,213,40,122,189,154,27,124,230,144,60,67,128,45,9,250,127,18,21,211,252,233,248,243,189,62,145,42,205,230,110,117,135,28,61,64,215,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 471 ") {
    byte_vec_t msg { 21,50,204,46 };
    byte_vec_t sig { 78,232,64,133,34,44,181,113,28,181,213,251,80,236,125,43,18,79,76,232,51,251,125,237,8,146,150,102,18,213,210,138,32,226,113,120,201,94,137,144,35,142,42,167,56,163,4,0,207,24,72,170,187,168,186,179,240,137,254,62,184,28,243,0 };
    byte_vec_t pk { 2,128,69,36,239,88,175,126,54,120,232,99,70,219,37,216,23,223,109,200,87,64,159,36,129,254,113,88,90,104,238,201,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 471 ") {
    byte_vec_t msg { 180,183,196,192 };
    byte_vec_t sig { 194,166,21,161,74,78,112,217,5,241,91,157,53,168,108,144,195,164,28,249,122,181,245,221,122,16,5,183,47,185,1,49,79,44,64,45,4,78,1,7,75,88,35,116,154,123,186,133,82,100,223,167,197,232,27,64,41,180,87,101,237,35,93,198 };
    byte_vec_t pk { 2,59,101,181,226,137,244,26,55,83,45,67,34,35,177,104,46,251,61,141,15,188,196,168,78,245,78,74,197,37,105,86,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 472 ") {
    byte_vec_t msg { 139,85,105,144 };
    byte_vec_t sig { 2,149,7,26,90,185,9,24,204,227,62,101,95,98,172,164,154,150,102,178,211,240,102,94,233,9,231,243,218,104,183,114,80,241,133,179,64,57,41,243,156,206,117,160,124,255,232,243,124,103,203,209,165,240,186,58,46,139,188,171,35,55,172,107 };
    byte_vec_t pk { 4,244,231,31,235,100,183,24,228,53,106,133,14,185,124,47,48,65,243,53,35,1,49,22,14,203,81,64,246,25,154,209,128,80,98,27,222,151,174,86,119,57,113,255,171,171,6,209,67,119,18,56,8,204,162,250,114,216,36,210,202,231,239,235,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 472 ") {
    byte_vec_t msg { 76,201,16,85 };
    byte_vec_t sig { 176,156,219,254,141,182,101,248,45,171,230,93,148,244,92,8,244,142,230,61,99,88,16,155,243,74,97,195,109,154,212,225,205,222,51,182,3,49,158,51,108,26,154,133,220,169,230,155,82,166,29,173,216,119,117,66,73,58,220,106,158,0,79,47 };
    byte_vec_t pk { 4,79,171,169,212,156,159,164,167,243,35,123,188,200,251,7,149,86,245,164,254,178,111,50,16,191,213,108,175,75,92,3,37,121,97,161,57,227,36,46,240,41,9,178,67,50,5,194,137,70,224,181,150,220,33,188,43,3,89,68,151,208,115,143,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 472 ") {
    byte_vec_t msg { 225,16,159,1 };
    byte_vec_t sig { 152,38,6,14,139,150,48,229,76,40,177,54,60,46,194,106,56,78,25,170,58,169,89,21,244,232,111,32,112,113,155,94,47,106,208,46,10,149,147,1,152,94,60,153,56,155,152,132,59,171,51,158,21,214,114,31,181,74,186,232,100,243,31,250 };
    byte_vec_t pk { 2,146,158,170,138,151,29,175,252,245,19,58,203,105,126,154,162,47,178,85,74,185,216,246,245,107,209,77,115,225,2,22,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 472 ") {
    byte_vec_t msg { 75,81,131,155 };
    byte_vec_t sig { 27,232,1,137,173,136,106,61,236,36,51,139,245,18,28,96,226,111,150,40,41,184,248,113,34,190,157,217,28,85,202,1,54,119,160,181,162,205,55,150,33,157,157,213,143,153,92,195,151,85,68,119,183,110,92,175,100,54,38,84,10,175,57,208 };
    byte_vec_t pk { 3,197,216,58,46,121,146,109,14,76,55,233,195,87,254,74,168,17,236,166,12,118,170,2,54,200,147,25,67,204,15,87,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 473 ") {
    byte_vec_t msg { 41,13,223,248 };
    byte_vec_t sig { 173,159,47,92,100,91,69,180,208,95,121,154,188,105,192,247,33,100,203,148,158,212,212,208,34,198,222,33,232,10,92,54,229,145,216,62,172,166,83,242,147,15,135,233,95,47,201,45,221,255,104,136,235,146,26,181,212,6,140,243,116,195,238,71 };
    byte_vec_t pk { 4,4,67,29,78,166,71,234,79,90,226,179,249,230,136,244,39,224,233,55,166,123,177,117,121,116,118,30,157,170,58,100,229,192,171,41,4,87,28,245,13,85,84,14,77,88,36,208,52,31,115,159,74,15,131,78,70,149,245,221,12,123,123,145,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 473 ") {
    byte_vec_t msg { 51,178,234,68 };
    byte_vec_t sig { 4,74,183,171,154,157,25,60,210,154,105,15,34,213,153,34,84,22,65,103,76,171,79,155,36,231,170,200,129,1,118,69,92,68,36,223,131,165,26,64,53,149,69,48,228,42,80,212,5,233,13,118,49,86,28,105,10,16,249,209,59,217,33,63 };
    byte_vec_t pk { 4,104,16,248,153,215,6,177,140,187,233,208,104,86,110,15,229,200,40,20,94,207,200,142,47,236,108,23,132,111,242,134,8,184,37,80,8,52,2,61,249,224,169,48,37,2,119,127,0,127,51,91,101,191,113,188,228,48,32,189,189,125,64,70,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 473 ") {
    byte_vec_t msg { 85,92,120,98 };
    byte_vec_t sig { 78,205,22,182,142,128,63,135,129,91,42,204,185,110,197,177,28,78,211,17,150,75,179,239,133,220,70,78,48,196,61,193,192,87,168,228,212,213,140,73,202,35,164,200,247,217,24,192,46,12,181,78,134,233,62,144,108,118,10,46,105,253,113,17 };
    byte_vec_t pk { 3,41,113,202,227,186,48,45,137,183,40,174,180,243,47,189,84,6,137,153,52,72,219,186,17,119,6,57,231,98,19,71,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 473 ") {
    byte_vec_t msg { 149,216,143,89 };
    byte_vec_t sig { 152,132,36,159,158,220,125,122,188,144,196,142,149,16,142,39,38,95,135,201,28,239,28,1,36,131,113,166,0,217,117,94,207,13,163,53,31,102,48,63,222,55,229,192,136,64,210,167,16,15,47,19,97,197,223,146,165,107,114,85,64,45,245,83 };
    byte_vec_t pk { 3,90,1,247,240,35,64,155,131,57,235,216,40,158,46,83,30,50,35,134,227,103,163,43,202,215,230,245,104,85,96,133,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 474 ") {
    byte_vec_t msg { 155,114,178,88 };
    byte_vec_t sig { 252,54,127,44,139,233,13,172,64,0,217,51,24,226,241,18,115,91,245,1,161,215,175,217,29,207,108,142,18,157,171,68,32,224,14,112,32,173,123,252,100,184,62,14,247,66,175,41,182,115,15,168,166,118,246,24,217,182,115,73,21,62,195,58 };
    byte_vec_t pk { 4,23,134,146,32,77,188,38,1,168,165,102,130,169,197,9,239,210,141,65,109,254,209,111,162,58,250,157,183,55,70,126,238,8,146,37,101,116,9,196,227,190,174,5,89,76,241,162,168,113,125,111,117,108,71,108,188,141,116,205,152,53,169,59,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 474 ") {
    byte_vec_t msg { 21,73,38,104 };
    byte_vec_t sig { 241,243,112,110,158,75,90,94,238,225,3,113,228,29,136,86,215,40,151,204,227,214,166,57,164,227,247,203,203,211,247,219,254,205,123,19,146,198,202,208,18,212,72,32,242,197,100,27,47,242,3,167,50,28,220,157,11,30,214,85,8,129,37,107 };
    byte_vec_t pk { 4,23,48,69,133,66,71,16,57,2,6,248,124,31,186,224,120,11,251,118,120,233,189,213,82,209,188,197,86,126,214,33,179,243,174,8,176,60,35,186,115,191,195,99,59,9,90,53,9,253,77,165,224,92,241,61,67,160,122,100,16,109,227,187,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 474 ") {
    byte_vec_t msg { 49,58,46,39 };
    byte_vec_t sig { 161,217,5,129,131,125,206,115,112,77,3,122,231,118,189,174,129,176,237,152,212,219,197,34,43,118,104,190,227,45,171,52,187,123,54,52,148,18,190,16,111,188,84,53,104,196,242,195,60,76,194,95,239,249,239,185,232,112,174,196,87,210,24,21 };
    byte_vec_t pk { 2,40,85,239,31,93,175,2,169,185,23,57,164,106,105,117,34,25,24,249,170,7,174,108,117,177,181,222,103,186,133,142,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 474 ") {
    byte_vec_t msg { 237,87,210,135 };
    byte_vec_t sig { 219,143,250,57,6,92,166,68,130,36,64,69,3,91,101,129,152,139,215,31,244,83,122,142,155,72,169,253,228,174,195,234,51,79,252,105,211,93,167,85,168,169,184,230,19,67,166,133,238,36,36,89,224,216,244,234,103,0,49,136,70,242,168,143 };
    byte_vec_t pk { 2,217,148,58,9,126,42,171,57,255,2,193,131,233,160,207,124,173,31,144,192,152,10,183,171,238,166,137,21,105,69,152,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 475 ") {
    byte_vec_t msg { 227,46,133,20 };
    byte_vec_t sig { 53,159,202,239,242,35,229,31,8,216,246,170,52,58,2,26,32,186,196,140,54,199,26,210,99,211,30,233,198,79,176,170,79,37,202,96,104,204,5,114,217,13,175,76,24,154,92,118,200,84,211,150,72,34,200,220,183,251,204,37,179,44,219,51 };
    byte_vec_t pk { 4,152,4,173,236,154,145,118,200,190,221,100,127,51,74,188,91,13,41,218,88,249,52,205,69,108,239,27,150,207,14,127,218,218,140,113,240,39,229,29,136,210,17,203,210,92,94,187,169,3,141,39,112,245,22,154,112,11,191,255,70,186,94,171,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 475 ") {
    byte_vec_t msg { 105,56,108,229 };
    byte_vec_t sig { 41,69,247,73,228,27,69,115,241,209,60,141,69,78,133,143,102,224,110,147,75,57,45,252,7,119,17,62,88,7,19,35,134,126,62,70,129,139,185,31,231,6,74,74,77,11,207,10,229,44,47,4,206,163,239,65,66,241,128,220,4,69,185,148 };
    byte_vec_t pk { 4,97,252,164,30,4,8,18,179,208,207,191,248,135,154,127,240,120,180,146,212,112,236,171,202,80,38,98,173,101,173,73,254,145,37,102,62,151,185,156,205,22,61,154,20,242,106,210,105,44,116,144,163,156,69,124,114,253,60,208,13,40,105,181,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 475 ") {
    byte_vec_t msg { 13,25,193,112 };
    byte_vec_t sig { 154,68,31,163,132,58,173,224,34,100,153,143,142,124,212,121,189,34,7,11,127,51,125,153,182,222,127,180,195,98,146,36,167,59,4,235,174,2,229,75,126,181,180,16,17,220,43,239,242,177,102,169,80,222,139,251,200,3,15,37,145,147,245,207 };
    byte_vec_t pk { 3,60,254,184,1,11,71,10,169,203,192,0,34,55,192,233,161,196,54,40,124,171,53,146,239,78,88,84,9,72,9,176,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 475 ") {
    byte_vec_t msg { 40,245,31,6 };
    byte_vec_t sig { 232,147,54,52,226,242,45,84,83,198,165,79,85,216,144,212,10,43,151,216,254,232,151,12,211,119,96,73,87,220,147,110,77,153,88,199,169,68,124,254,139,155,148,76,158,79,16,107,192,194,41,239,114,43,160,150,49,128,66,233,71,147,164,38 };
    byte_vec_t pk { 3,77,172,252,37,206,120,20,137,162,175,65,197,37,201,63,184,85,136,25,61,83,53,141,160,71,61,246,191,147,39,155,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 476 ") {
    byte_vec_t msg { 216,238,21,127 };
    byte_vec_t sig { 208,37,33,123,85,244,102,28,159,236,67,0,203,61,124,43,39,28,16,189,179,60,135,182,155,88,107,37,111,81,81,71,209,172,5,12,234,95,203,94,198,35,53,184,23,131,12,116,3,178,58,163,210,66,34,15,122,252,151,138,88,132,109,167 };
    byte_vec_t pk { 4,88,54,17,242,13,149,2,54,133,2,171,233,23,178,246,167,91,164,50,97,127,194,139,182,12,127,164,17,124,0,125,130,34,135,189,26,28,71,183,137,90,236,203,162,184,46,30,87,132,15,31,66,176,187,77,226,214,195,149,51,190,193,132,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 476 ") {
    byte_vec_t msg { 138,146,237,114 };
    byte_vec_t sig { 191,164,245,114,107,176,207,171,135,169,174,134,33,90,187,62,162,163,143,15,121,67,118,97,177,42,194,224,40,247,123,241,65,88,210,58,23,148,150,198,242,174,28,101,112,55,241,126,29,242,44,65,25,59,59,83,204,116,90,229,172,202,55,57 };
    byte_vec_t pk { 4,85,216,204,194,254,8,218,153,16,68,52,56,6,57,151,96,213,98,186,22,29,177,207,94,222,173,216,216,36,180,111,64,188,69,36,48,17,136,3,186,221,238,50,242,35,165,205,146,63,211,182,93,210,164,225,226,38,163,237,216,105,90,43,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 476 ") {
    byte_vec_t msg { 120,200,49,36 };
    byte_vec_t sig { 44,160,109,161,17,107,196,216,250,83,49,146,112,174,39,180,234,59,36,23,167,138,247,249,122,81,112,23,241,241,157,187,3,177,48,205,234,105,46,167,134,79,236,141,142,150,209,73,127,4,50,184,129,85,82,157,217,78,200,176,4,224,245,27 };
    byte_vec_t pk { 2,232,205,177,201,26,125,75,182,215,122,234,98,125,158,73,143,180,65,185,89,107,167,167,122,0,38,54,100,156,208,221,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 476 ") {
    byte_vec_t msg { 203,14,245,175 };
    byte_vec_t sig { 121,135,41,115,142,91,204,179,166,51,148,42,189,86,16,189,99,106,122,102,252,65,83,3,107,46,145,70,231,236,232,245,212,222,213,17,229,153,108,206,185,198,255,152,125,46,97,123,109,74,210,64,14,130,247,27,188,220,66,225,24,72,217,44 };
    byte_vec_t pk { 2,150,112,216,197,94,250,149,230,64,167,40,38,99,91,3,99,109,238,62,74,239,84,155,9,190,240,50,67,10,196,53,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 477 ") {
    byte_vec_t msg { 83,201,204,31 };
    byte_vec_t sig { 211,150,67,179,170,204,51,210,122,119,194,206,18,191,168,174,158,102,72,199,2,171,33,18,38,228,238,133,199,31,229,222,113,18,177,66,115,142,12,167,13,10,101,189,246,24,90,170,176,166,208,50,189,34,193,27,130,119,166,185,137,244,136,190 };
    byte_vec_t pk { 4,143,222,38,62,3,218,229,125,232,82,46,125,18,164,169,89,125,116,161,241,18,102,165,62,253,47,48,176,149,209,167,247,23,236,240,25,22,99,236,253,247,53,55,65,110,59,33,213,5,128,135,184,231,38,234,223,235,14,128,214,7,193,126,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 477 ") {
    byte_vec_t msg { 59,66,214,235 };
    byte_vec_t sig { 147,79,66,255,165,54,196,38,42,172,8,68,66,235,123,136,204,237,26,172,55,109,37,247,142,255,195,204,23,109,195,75,134,242,112,4,130,99,255,148,55,63,2,135,207,166,142,221,225,255,61,201,42,6,79,152,127,252,43,53,242,16,105,64 };
    byte_vec_t pk { 4,243,122,18,185,102,4,186,251,18,239,31,241,152,122,169,171,137,242,77,204,216,187,117,44,198,6,39,59,68,101,96,114,143,18,210,239,54,131,14,123,15,103,184,30,226,61,15,38,89,26,199,1,38,64,173,1,147,98,122,218,191,68,40,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 477 ") {
    byte_vec_t msg { 46,200,80,59 };
    byte_vec_t sig { 69,56,102,137,240,244,122,214,176,69,169,101,239,252,188,140,227,246,24,233,44,60,48,27,137,68,187,70,51,60,24,43,85,74,90,93,172,146,91,15,11,229,209,154,152,100,47,120,149,42,248,226,92,96,121,176,107,194,27,32,243,194,19,63 };
    byte_vec_t pk { 3,45,115,221,99,167,255,244,55,235,180,195,3,155,42,232,95,253,52,26,214,64,237,42,59,252,123,9,10,191,107,212,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 477 ") {
    byte_vec_t msg { 190,17,9,188 };
    byte_vec_t sig { 19,134,136,248,74,64,107,60,142,192,247,140,194,125,187,79,232,34,166,24,172,10,4,193,191,222,117,140,49,63,24,178,99,208,77,82,23,29,114,73,121,209,222,219,93,83,67,130,48,16,192,242,138,109,204,62,173,186,135,0,245,220,232,195 };
    byte_vec_t pk { 2,59,157,173,113,248,245,85,206,200,153,239,206,114,251,241,210,234,3,209,88,76,147,244,24,217,106,143,69,51,159,79,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 478 ") {
    byte_vec_t msg { 49,32,230,239 };
    byte_vec_t sig { 189,32,88,123,127,125,9,45,238,13,26,68,160,170,37,119,92,228,141,29,175,249,144,152,248,29,163,41,216,74,142,82,8,245,248,13,250,189,209,51,4,181,3,253,38,31,51,62,215,153,6,24,227,106,206,153,108,22,58,220,149,201,3,23 };
    byte_vec_t pk { 4,20,22,231,237,107,181,211,88,182,248,122,100,229,96,106,246,147,158,144,142,9,148,177,56,101,25,206,253,73,8,31,60,158,195,112,24,34,97,222,73,221,78,72,116,141,114,184,104,171,195,126,23,254,187,10,224,155,85,198,167,93,86,73,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 478 ") {
    byte_vec_t msg { 145,21,119,87 };
    byte_vec_t sig { 136,162,175,58,43,80,193,253,210,66,231,232,60,101,255,196,14,62,147,146,80,132,170,56,99,66,7,233,57,211,94,217,149,27,43,3,199,169,148,105,87,175,245,123,120,116,34,60,51,140,167,133,126,10,147,102,133,175,120,174,90,199,5,219 };
    byte_vec_t pk { 4,89,140,109,25,39,136,115,9,170,19,215,190,234,59,20,145,132,159,27,35,192,14,240,21,52,67,182,206,107,225,113,169,16,136,34,187,66,8,21,204,44,38,126,41,97,204,88,194,229,225,96,61,237,211,67,194,200,221,84,135,44,78,111,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 478 ") {
    byte_vec_t msg { 38,130,100,138 };
    byte_vec_t sig { 108,62,148,143,115,91,82,92,161,151,167,70,120,85,108,227,63,224,231,135,21,81,249,63,46,131,231,184,216,211,91,211,112,85,49,70,31,168,163,79,218,53,171,5,130,120,89,103,66,183,138,146,225,24,123,72,128,83,41,232,235,181,3,163 };
    byte_vec_t pk { 3,128,235,84,192,62,180,134,99,141,122,210,219,149,42,224,74,189,153,157,202,141,40,252,139,43,181,115,175,55,147,220,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 478 ") {
    byte_vec_t msg { 253,183,90,148 };
    byte_vec_t sig { 240,95,171,186,35,44,177,15,31,15,193,12,169,167,75,169,164,163,103,172,236,72,131,160,152,14,109,108,203,202,156,28,187,22,169,110,244,215,233,200,100,116,166,39,213,28,11,44,11,101,243,59,137,228,169,199,152,68,111,96,11,89,197,215 };
    byte_vec_t pk { 2,120,250,18,79,249,174,91,50,165,34,147,47,2,148,169,38,74,104,20,207,110,217,194,139,157,115,224,224,25,56,27,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 479 ") {
    byte_vec_t msg { 163,2,85,14 };
    byte_vec_t sig { 242,3,23,41,97,78,42,99,103,234,108,51,242,203,102,113,246,131,237,225,229,36,146,127,58,15,149,125,8,232,185,25,156,11,191,69,72,85,105,23,229,172,175,125,99,223,18,11,64,38,105,83,157,224,231,237,191,153,157,131,76,80,88,237 };
    byte_vec_t pk { 4,1,79,19,124,69,164,4,45,68,216,197,141,104,43,198,143,170,174,187,0,66,237,120,211,212,143,200,54,86,134,216,250,194,167,181,3,41,158,249,165,197,75,85,58,86,212,244,44,231,101,204,179,101,93,234,23,6,88,129,115,69,129,39,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 479 ") {
    byte_vec_t msg { 2,97,136,153 };
    byte_vec_t sig { 240,25,250,246,44,72,143,200,183,103,58,250,64,166,254,55,122,128,66,14,210,218,22,183,79,112,141,202,88,249,106,34,51,190,248,53,211,59,230,154,129,77,138,90,168,87,153,222,89,50,180,117,92,18,203,40,78,147,105,234,72,91,83,36 };
    byte_vec_t pk { 4,76,171,108,197,140,5,34,95,211,95,12,153,255,195,151,164,75,124,119,137,56,160,104,157,150,222,144,218,103,158,73,2,253,28,198,175,249,30,139,30,65,34,144,91,30,245,152,67,114,111,209,106,221,167,5,88,132,93,16,58,105,64,18,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 479 ") {
    byte_vec_t msg { 21,120,216,224 };
    byte_vec_t sig { 116,235,226,234,210,168,133,203,16,251,65,49,97,106,237,236,106,219,241,125,92,109,148,119,52,3,14,54,120,189,240,84,4,50,57,217,30,210,186,12,231,94,71,155,90,107,147,159,196,181,162,251,130,197,52,214,133,201,95,178,50,1,125,84 };
    byte_vec_t pk { 3,47,234,109,223,198,186,134,156,156,115,36,139,71,150,86,175,162,75,215,47,77,212,15,134,242,6,65,173,198,28,157,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 479 ") {
    byte_vec_t msg { 109,7,104,253 };
    byte_vec_t sig { 229,241,190,43,106,143,223,15,117,102,101,37,28,19,15,202,185,115,201,188,54,216,165,113,171,84,131,104,162,198,250,56,164,93,193,73,69,94,25,208,138,27,248,131,14,199,164,141,201,43,87,224,165,233,171,210,127,43,214,143,80,228,83,182 };
    byte_vec_t pk { 2,39,81,207,243,88,179,237,135,75,193,9,119,246,207,108,48,202,204,81,224,7,109,192,255,247,124,202,156,188,234,201,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 480 ") {
    byte_vec_t msg { 102,66,75,36 };
    byte_vec_t sig { 80,41,212,5,18,7,179,124,49,243,14,230,129,22,8,155,185,70,2,44,15,86,62,53,19,22,121,127,162,23,225,127,121,245,167,205,7,50,241,161,148,111,10,241,209,216,55,41,91,169,97,146,183,21,87,138,101,76,45,179,89,225,31,211 };
    byte_vec_t pk { 4,108,133,85,55,226,17,160,222,224,228,53,57,70,27,219,74,218,203,20,38,49,82,37,254,165,18,192,18,52,171,33,74,78,182,190,122,211,244,19,175,37,160,162,237,164,145,90,136,129,71,219,72,123,205,223,128,147,48,140,138,13,82,144,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 480 ") {
    byte_vec_t msg { 99,221,213,108 };
    byte_vec_t sig { 34,81,152,167,234,240,119,71,7,193,238,37,2,58,111,84,253,97,47,87,146,242,220,42,246,19,73,121,47,137,208,4,123,219,178,253,15,5,9,137,130,227,80,150,45,146,159,60,234,238,165,133,2,140,206,94,6,157,245,169,19,141,170,113 };
    byte_vec_t pk { 4,23,1,100,220,229,196,157,173,4,208,148,191,140,243,68,137,38,44,213,40,81,111,185,66,0,13,78,255,230,130,96,99,118,130,161,220,29,91,14,72,49,78,224,28,55,144,164,147,193,147,123,24,236,215,45,125,1,154,24,123,136,140,104,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 480 ") {
    byte_vec_t msg { 130,132,140,29 };
    byte_vec_t sig { 199,132,87,61,6,66,217,63,154,28,21,194,108,159,219,206,24,252,51,194,126,201,149,158,171,22,28,118,103,138,175,199,158,210,190,215,106,13,45,163,137,64,128,236,187,176,141,220,148,201,149,252,178,81,207,55,77,16,178,85,138,25,107,253 };
    byte_vec_t pk { 2,105,82,107,172,116,102,124,234,92,221,41,56,187,120,86,173,159,142,239,41,130,157,36,126,161,12,222,3,202,137,213,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 480 ") {
    byte_vec_t msg { 226,141,234,74 };
    byte_vec_t sig { 206,177,129,59,148,233,64,54,162,33,217,39,26,37,11,6,141,84,245,27,117,55,23,3,232,3,169,54,181,39,23,213,179,4,177,5,88,161,58,81,250,196,141,205,243,66,181,135,59,97,83,113,89,141,88,131,157,106,55,254,34,45,235,156 };
    byte_vec_t pk { 2,73,30,197,224,91,100,159,245,27,214,112,221,22,125,42,137,71,54,133,64,156,222,69,188,32,5,194,187,86,187,238,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 481 ") {
    byte_vec_t msg { 15,80,102,222 };
    byte_vec_t sig { 144,62,3,13,108,236,76,36,234,7,105,216,234,26,150,18,91,136,103,134,22,214,184,40,210,171,125,207,162,32,215,149,220,60,71,17,62,42,169,35,63,159,123,60,142,166,183,11,243,140,111,230,21,237,121,64,17,8,236,246,113,32,134,103 };
    byte_vec_t pk { 4,19,235,107,229,148,111,105,140,173,216,159,14,36,217,75,239,253,67,11,61,91,183,228,165,101,230,201,76,180,81,149,4,89,74,77,196,138,161,200,60,97,13,29,228,56,170,35,142,97,91,193,172,69,102,128,115,57,87,8,34,136,149,31,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 481 ") {
    byte_vec_t msg { 203,9,182,186 };
    byte_vec_t sig { 176,199,238,57,164,68,217,121,154,169,21,203,184,250,239,1,44,118,166,155,141,238,25,78,250,150,123,24,92,133,185,225,60,223,149,211,172,249,1,19,238,236,0,35,234,174,183,59,182,85,230,45,207,198,197,29,1,252,135,51,147,155,14,18 };
    byte_vec_t pk { 4,100,187,135,204,115,111,188,114,171,211,37,116,185,36,174,251,120,148,41,218,151,220,5,72,26,77,160,143,219,82,187,117,58,179,70,236,94,20,39,129,211,49,33,162,235,57,7,207,31,36,25,249,94,199,141,37,50,224,81,165,62,8,93,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 481 ") {
    byte_vec_t msg { 47,146,252,77 };
    byte_vec_t sig { 105,120,96,120,72,89,24,110,145,189,1,182,12,160,138,64,193,47,56,0,35,168,184,120,138,34,111,160,53,84,50,144,52,29,137,136,83,57,85,155,93,253,147,202,17,189,137,104,84,37,43,201,17,161,254,10,185,240,34,10,1,154,45,86 };
    byte_vec_t pk { 3,10,214,195,152,164,247,14,160,88,121,191,172,245,23,2,32,17,58,84,13,167,57,3,212,42,149,20,111,204,196,185,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 481 ") {
    byte_vec_t msg { 246,187,31,164 };
    byte_vec_t sig { 9,104,149,108,249,169,71,28,85,180,214,142,171,119,243,17,66,151,150,9,145,35,236,12,157,95,139,202,92,68,194,146,93,89,204,109,178,235,211,244,213,86,152,83,224,108,236,166,166,159,255,211,78,184,168,195,66,249,222,78,210,86,92,208 };
    byte_vec_t pk { 3,36,134,233,175,38,227,46,27,108,200,190,74,251,2,253,96,31,62,229,135,180,120,96,69,148,141,162,48,204,107,223,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 482 ") {
    byte_vec_t msg { 76,255,244,32 };
    byte_vec_t sig { 227,215,193,105,218,183,253,71,219,168,244,243,6,40,17,177,39,6,99,201,223,120,247,203,55,150,179,58,127,104,36,209,50,116,210,108,141,15,111,67,46,185,101,242,201,184,252,205,146,32,244,185,175,146,8,81,4,228,91,126,195,175,11,171 };
    byte_vec_t pk { 4,84,147,251,93,215,157,65,205,29,217,243,176,142,245,180,57,127,149,91,254,210,228,75,133,15,216,160,162,248,206,195,13,238,37,57,231,7,120,66,92,57,208,250,14,212,145,77,102,169,64,107,192,13,133,221,41,172,33,69,173,149,146,38,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 482 ") {
    byte_vec_t msg { 44,209,139,223 };
    byte_vec_t sig { 50,191,110,90,206,183,254,174,212,178,14,174,250,18,201,192,183,48,218,14,106,172,179,86,239,228,232,49,185,123,129,24,101,71,179,225,74,31,245,119,148,247,183,38,166,40,251,142,50,140,150,187,144,29,241,94,254,41,156,208,179,9,41,244 };
    byte_vec_t pk { 4,44,80,157,87,77,89,38,208,93,107,86,193,196,156,123,10,176,192,192,225,22,9,70,240,41,168,189,143,77,163,43,219,122,39,123,106,113,228,246,77,242,39,89,63,96,94,55,96,102,248,188,235,185,121,189,60,224,45,97,36,36,101,250,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 482 ") {
    byte_vec_t msg { 90,145,150,231 };
    byte_vec_t sig { 10,10,18,45,252,191,7,146,52,181,105,4,92,120,135,130,175,60,17,147,154,171,243,244,239,110,117,18,148,45,65,87,81,19,24,147,222,96,238,2,6,182,88,176,234,80,16,117,27,170,163,200,163,140,99,101,45,60,108,99,67,26,228,202 };
    byte_vec_t pk { 2,116,247,15,192,148,180,171,154,233,239,251,130,236,255,210,44,100,46,202,3,233,60,13,107,130,201,90,46,222,42,113,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 482 ") {
    byte_vec_t msg { 242,89,168,125 };
    byte_vec_t sig { 116,50,202,248,100,0,59,26,56,128,146,62,197,169,254,18,43,14,147,80,190,244,207,140,166,94,10,21,249,80,241,207,64,157,115,53,65,131,10,93,89,181,216,151,131,132,27,48,17,151,156,148,142,116,141,128,4,40,219,105,152,65,140,71 };
    byte_vec_t pk { 3,237,235,152,74,23,115,197,14,98,130,166,123,76,28,240,191,52,126,112,181,137,244,106,83,199,37,90,227,27,238,161,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 483 ") {
    byte_vec_t msg { 110,71,68,210 };
    byte_vec_t sig { 87,234,50,223,212,167,162,233,153,101,48,167,92,19,73,132,22,105,121,86,185,182,221,147,109,160,249,151,129,237,65,247,166,111,66,188,254,254,61,229,206,139,33,150,73,99,14,56,232,247,132,229,253,70,38,14,213,47,155,167,171,141,109,225 };
    byte_vec_t pk { 4,193,253,23,45,139,39,181,124,5,54,24,94,75,181,164,139,196,30,207,148,136,30,185,118,46,226,115,97,134,254,23,194,142,156,163,54,91,22,228,76,238,130,188,202,255,168,82,237,67,193,105,165,68,76,120,206,92,20,111,157,238,130,87,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 483 ") {
    byte_vec_t msg { 100,77,152,106 };
    byte_vec_t sig { 144,44,93,98,234,40,144,110,173,27,196,85,6,208,75,32,223,93,223,184,72,213,162,37,145,95,239,79,45,138,225,100,227,115,12,94,154,189,31,57,146,46,95,58,64,163,93,67,52,79,240,224,253,154,128,193,186,16,154,207,134,120,212,136 };
    byte_vec_t pk { 4,244,204,43,61,150,186,101,231,8,240,21,29,198,81,229,173,215,221,35,81,135,188,38,8,187,164,176,86,71,71,185,3,83,84,176,110,150,254,11,54,51,241,218,191,15,174,192,25,255,124,74,254,15,2,188,88,23,149,138,88,179,68,137,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 483 ") {
    byte_vec_t msg { 106,252,191,40 };
    byte_vec_t sig { 19,53,132,113,126,145,48,27,50,219,11,107,160,110,231,22,137,198,54,210,83,228,249,7,67,147,85,28,129,118,212,1,48,106,43,47,213,82,247,25,169,84,52,235,71,27,167,105,204,68,224,169,228,168,51,113,45,42,251,150,201,187,0,133 };
    byte_vec_t pk { 2,46,249,129,190,213,118,84,63,29,10,162,18,105,202,96,229,99,136,50,150,147,113,46,209,55,31,61,199,243,126,42,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 483 ") {
    byte_vec_t msg { 37,199,243,173 };
    byte_vec_t sig { 242,12,253,102,72,129,55,115,37,243,106,243,82,216,253,243,148,52,202,133,44,151,230,4,10,85,88,16,79,79,78,150,99,182,232,241,52,201,72,202,162,196,6,114,185,198,47,33,27,24,77,167,202,121,18,42,94,154,70,80,79,167,99,3 };
    byte_vec_t pk { 2,91,118,126,239,77,91,45,103,46,62,146,159,207,182,227,67,202,8,103,119,169,59,221,129,86,216,71,47,86,118,167,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 484 ") {
    byte_vec_t msg { 53,168,88,110 };
    byte_vec_t sig { 131,197,5,127,216,128,85,172,179,2,161,236,158,251,140,66,151,92,11,163,46,191,161,185,64,39,85,185,203,79,129,199,245,204,87,120,145,172,87,114,202,60,225,243,59,145,37,173,185,110,227,172,220,254,18,184,129,91,30,156,251,201,3,124 };
    byte_vec_t pk { 4,189,172,86,123,143,184,58,253,99,249,41,71,208,87,242,157,124,211,186,130,237,19,123,223,192,115,54,66,106,232,94,88,214,89,14,108,97,207,179,163,28,61,206,127,178,60,155,87,85,133,37,117,121,174,109,187,185,13,100,53,239,68,154,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 484 ") {
    byte_vec_t msg { 62,55,171,142 };
    byte_vec_t sig { 128,160,243,61,173,179,217,204,243,71,237,123,154,192,191,176,25,96,52,254,220,135,202,243,10,139,18,214,64,139,2,28,102,65,189,171,78,22,184,68,101,56,208,254,110,136,25,2,243,219,225,232,174,76,137,161,52,222,98,177,233,54,139,186 };
    byte_vec_t pk { 4,129,122,50,128,100,206,74,241,124,180,203,28,108,105,28,18,18,168,20,65,146,103,30,106,50,69,217,12,0,91,214,93,112,227,182,90,66,247,205,255,32,71,96,144,10,210,68,113,168,244,211,94,196,63,219,237,169,139,7,255,25,198,113,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 484 ") {
    byte_vec_t msg { 151,143,112,47 };
    byte_vec_t sig { 68,40,254,0,14,36,65,60,112,112,161,77,188,81,246,171,47,204,8,8,207,202,195,158,108,95,138,192,92,171,49,200,176,230,55,86,121,204,177,87,141,23,210,62,240,110,241,126,37,74,23,188,40,34,134,238,68,173,83,190,81,16,45,8 };
    byte_vec_t pk { 3,85,15,85,158,94,47,253,131,194,158,81,239,37,174,104,85,47,69,68,165,86,242,195,7,62,156,76,240,81,233,181,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 484 ") {
    byte_vec_t msg { 208,219,111,48 };
    byte_vec_t sig { 76,96,181,230,97,174,118,223,204,10,247,226,95,214,195,64,170,226,19,72,223,246,227,209,199,218,3,14,168,145,143,206,151,178,35,217,34,161,183,25,136,23,182,219,33,23,251,169,208,247,163,169,31,119,60,225,158,229,28,63,66,141,205,53 };
    byte_vec_t pk { 3,18,178,205,135,86,213,33,31,118,184,17,26,115,174,20,134,115,133,131,13,10,178,12,44,88,180,33,48,56,41,55,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 485 ") {
    byte_vec_t msg { 143,91,159,66 };
    byte_vec_t sig { 243,136,193,69,102,65,139,160,179,21,76,176,80,239,191,140,132,160,228,35,29,131,2,57,92,63,116,92,43,174,182,216,233,211,199,81,253,153,140,72,140,116,16,202,165,21,105,251,80,89,46,74,37,82,3,92,9,74,90,209,214,255,122,253 };
    byte_vec_t pk { 4,231,43,185,142,143,155,47,170,91,232,197,7,210,36,133,10,46,193,10,17,201,72,66,73,118,32,47,22,187,108,21,77,127,66,71,124,138,150,48,248,165,99,77,103,35,207,246,46,7,126,232,197,123,125,101,223,170,88,109,103,127,163,173,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 485 ") {
    byte_vec_t msg { 252,37,115,70 };
    byte_vec_t sig { 230,216,25,179,227,106,105,118,143,255,61,218,254,36,248,159,83,91,207,253,115,6,232,47,117,243,149,6,107,155,186,29,134,152,65,216,196,239,99,176,134,129,207,136,158,111,118,122,176,107,225,5,155,117,116,145,54,75,245,146,135,60,176,137 };
    byte_vec_t pk { 4,134,131,193,24,238,197,243,51,232,174,186,227,83,171,65,56,48,62,124,179,23,238,18,61,38,118,90,226,79,109,163,51,195,43,81,175,207,85,8,137,114,5,254,204,211,18,71,170,152,183,8,58,90,25,112,151,111,240,122,55,192,75,104,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 485 ") {
    byte_vec_t msg { 118,89,206,114 };
    byte_vec_t sig { 150,141,71,99,150,13,85,4,108,157,18,152,115,240,31,206,113,92,2,207,246,231,72,214,14,214,177,11,74,206,52,80,14,193,108,148,130,150,234,224,166,158,120,45,33,178,96,141,243,71,213,226,82,109,125,253,157,77,147,82,221,249,87,240 };
    byte_vec_t pk { 3,39,188,132,3,233,178,143,181,237,252,100,80,137,211,88,251,154,0,210,17,89,198,22,248,144,206,85,116,230,11,232,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 485 ") {
    byte_vec_t msg { 174,246,231,11 };
    byte_vec_t sig { 250,136,223,242,194,140,90,58,139,206,183,15,59,122,14,230,62,45,166,156,117,11,114,63,3,204,46,231,1,111,177,90,213,135,22,57,200,244,188,1,82,110,221,134,57,114,238,195,247,140,237,59,49,187,188,56,11,13,249,153,31,96,141,135 };
    byte_vec_t pk { 3,21,231,182,214,211,194,223,184,239,120,7,223,24,202,63,230,136,87,93,160,23,200,26,237,237,220,155,57,254,37,90,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 486 ") {
    byte_vec_t msg { 222,116,87,10 };
    byte_vec_t sig { 143,121,224,40,104,237,236,126,115,139,142,159,58,10,46,179,245,249,147,79,220,233,183,220,98,11,1,172,130,138,233,156,44,209,40,104,9,235,140,211,198,65,90,186,227,148,40,20,214,153,253,30,148,82,99,210,16,233,31,26,159,246,205,2 };
    byte_vec_t pk { 4,30,133,55,133,88,119,214,144,82,36,182,233,217,168,199,79,254,50,108,188,178,239,70,201,181,153,206,30,106,85,67,162,217,165,7,21,45,117,0,112,103,207,188,189,187,72,6,177,7,69,0,90,220,53,221,14,1,110,134,210,104,164,191,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 486 ") {
    byte_vec_t msg { 63,95,254,250 };
    byte_vec_t sig { 221,170,152,254,204,3,0,47,254,56,66,109,29,202,120,116,15,47,156,147,254,165,160,77,185,88,4,89,171,62,242,220,122,90,9,133,84,115,39,250,220,17,215,176,46,248,86,62,199,140,171,161,63,99,62,255,191,35,138,127,4,19,249,33 };
    byte_vec_t pk { 4,179,166,214,228,123,227,27,150,78,116,56,7,128,62,204,110,143,172,167,188,223,165,122,90,100,30,48,174,42,245,182,133,9,178,183,109,71,252,88,71,26,191,90,206,249,148,237,194,212,69,180,82,33,32,214,57,141,178,164,113,63,217,165,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 486 ") {
    byte_vec_t msg { 160,67,27,154 };
    byte_vec_t sig { 53,20,102,14,190,87,58,115,251,228,3,180,152,35,76,246,87,147,11,187,102,249,174,87,189,43,188,34,113,181,200,193,206,100,200,225,95,79,197,123,83,28,184,85,249,57,203,96,8,110,43,175,155,53,175,204,62,31,77,189,217,40,122,144 };
    byte_vec_t pk { 3,46,158,166,158,163,148,197,129,81,100,7,25,31,160,37,122,69,6,63,244,182,82,36,163,9,242,134,64,29,205,96,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 486 ") {
    byte_vec_t msg { 67,95,179,204 };
    byte_vec_t sig { 46,17,150,14,59,79,124,181,238,168,75,111,89,119,82,153,135,187,166,66,136,194,147,246,46,212,96,57,177,24,107,175,1,231,112,19,209,174,73,199,143,58,165,190,93,25,137,123,185,48,20,219,242,49,144,58,118,33,213,55,195,235,52,116 };
    byte_vec_t pk { 2,46,34,252,181,241,92,21,12,150,15,251,107,125,219,207,197,21,126,72,47,139,217,235,51,164,127,100,200,194,71,87,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 487 ") {
    byte_vec_t msg { 232,247,204,226 };
    byte_vec_t sig { 22,228,128,8,158,237,138,79,247,108,17,99,196,8,43,239,90,23,88,120,64,176,42,124,216,210,12,157,252,225,2,176,9,15,124,7,50,252,223,65,1,214,101,177,254,53,181,221,153,23,226,14,34,148,214,202,22,63,2,140,99,124,188,246 };
    byte_vec_t pk { 4,87,72,4,147,168,68,118,22,40,136,248,47,182,235,46,250,198,170,203,91,239,18,41,138,64,157,88,224,53,118,70,132,73,45,74,7,204,111,213,96,170,30,12,165,51,56,21,200,210,211,212,96,109,124,236,69,45,153,228,109,240,174,174,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 487 ") {
    byte_vec_t msg { 83,126,238,4 };
    byte_vec_t sig { 199,6,34,170,239,160,162,58,115,239,94,234,25,9,62,172,99,112,0,240,247,146,246,12,227,46,125,152,49,23,39,197,10,190,243,105,252,68,103,3,53,79,4,16,167,81,22,86,146,41,206,95,250,42,17,131,222,23,29,149,171,23,23,119 };
    byte_vec_t pk { 4,132,77,24,83,84,31,159,4,199,202,254,118,229,33,146,155,237,182,223,49,72,23,166,32,213,217,119,34,48,50,135,232,223,167,50,121,79,159,250,31,114,203,52,61,232,43,201,248,212,106,227,223,54,183,71,177,9,64,55,138,56,247,211,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 487 ") {
    byte_vec_t msg { 245,176,237,64 };
    byte_vec_t sig { 146,154,99,53,42,27,224,143,36,189,126,61,18,82,195,88,128,73,106,105,183,113,33,104,10,213,234,153,102,2,246,68,206,118,151,229,217,104,50,61,127,58,153,210,76,110,10,229,249,210,102,78,176,174,55,56,166,211,50,220,0,84,11,87 };
    byte_vec_t pk { 2,202,70,161,70,39,91,8,211,167,243,130,43,63,28,200,229,220,159,180,125,202,181,1,221,16,253,249,51,45,238,66,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 487 ") {
    byte_vec_t msg { 116,14,98,138 };
    byte_vec_t sig { 71,21,21,146,117,196,28,212,100,132,133,36,163,158,35,134,130,247,61,21,75,95,213,65,18,126,91,171,24,4,15,177,39,136,118,204,189,199,46,158,84,208,207,162,145,48,162,64,147,93,34,45,37,42,145,115,178,11,4,150,206,127,13,221 };
    byte_vec_t pk { 2,43,33,66,243,68,41,65,153,246,65,181,9,172,88,213,147,52,106,236,73,157,115,85,205,100,215,143,52,81,37,46,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 488 ") {
    byte_vec_t msg { 71,27,252,234 };
    byte_vec_t sig { 249,153,48,194,157,177,107,243,210,129,80,194,148,82,40,107,217,114,61,132,254,113,215,142,179,167,132,79,115,40,216,165,200,3,182,217,95,187,166,97,81,173,66,17,160,154,55,66,101,44,136,97,164,221,77,248,146,237,206,56,254,151,69,154 };
    byte_vec_t pk { 4,231,160,150,189,173,142,194,6,253,199,51,212,226,139,152,244,240,34,174,128,94,240,238,251,239,63,90,205,247,162,238,197,36,43,42,14,62,242,218,46,162,217,231,35,113,60,130,232,20,41,22,242,192,217,39,137,127,42,162,188,169,12,52,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 488 ") {
    byte_vec_t msg { 96,58,75,192 };
    byte_vec_t sig { 119,91,151,40,63,59,70,189,142,206,91,205,210,32,133,72,235,135,7,189,12,135,183,10,250,116,131,53,39,43,250,220,4,215,111,179,115,41,97,239,30,205,152,166,45,56,89,241,52,249,21,30,201,24,245,26,239,24,197,189,91,51,203,156 };
    byte_vec_t pk { 4,178,122,216,180,169,139,197,104,19,235,66,207,134,95,191,164,229,28,236,2,226,125,236,100,143,234,218,234,125,125,189,82,159,92,71,47,143,251,178,73,35,214,36,70,241,247,114,173,146,239,248,245,99,232,83,91,9,226,105,82,213,156,68,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 488 ") {
    byte_vec_t msg { 142,246,55,176 };
    byte_vec_t sig { 36,66,116,105,80,109,158,73,222,98,143,137,75,32,145,2,198,119,11,191,61,114,241,57,14,164,35,182,178,92,49,237,107,69,248,80,181,70,141,152,128,178,10,48,196,35,79,0,165,165,120,146,93,246,245,57,58,21,229,135,99,38,60,127 };
    byte_vec_t pk { 3,173,63,216,96,132,57,184,145,163,242,195,32,22,11,204,252,81,255,148,251,29,25,21,3,94,103,171,254,106,78,104,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 488 ") {
    byte_vec_t msg { 204,97,246,208 };
    byte_vec_t sig { 114,87,37,230,209,210,51,123,18,122,13,81,179,53,231,149,209,14,226,101,20,6,213,22,136,117,19,140,25,50,184,102,66,45,250,104,233,185,35,167,26,17,79,85,174,201,210,177,181,49,87,18,219,69,235,115,12,170,157,16,236,122,242,249 };
    byte_vec_t pk { 2,171,106,24,220,37,47,176,232,211,75,165,132,226,178,218,68,104,190,147,148,162,42,175,222,77,129,171,50,192,255,151,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 489 ") {
    byte_vec_t msg { 20,229,49,11 };
    byte_vec_t sig { 107,194,111,236,7,237,134,207,94,120,252,173,85,181,89,126,51,147,232,240,56,114,163,235,201,7,80,188,74,83,80,74,202,8,229,221,5,123,9,164,207,158,80,65,227,118,183,140,166,4,136,236,41,27,40,30,122,11,147,15,125,174,224,151 };
    byte_vec_t pk { 4,189,25,162,5,94,160,196,68,113,47,101,102,129,83,39,79,163,100,66,166,76,102,158,16,63,168,123,102,109,109,207,211,242,237,102,241,7,179,34,201,122,54,214,233,36,136,185,14,42,79,73,194,224,186,88,95,4,185,198,221,246,25,138,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 489 ") {
    byte_vec_t msg { 161,212,138,61 };
    byte_vec_t sig { 22,244,254,66,93,51,182,241,233,52,171,199,48,3,58,98,42,90,123,111,1,83,180,63,201,204,155,102,78,101,187,238,109,117,109,92,60,86,228,188,135,122,200,216,65,243,135,21,242,48,46,234,22,96,85,27,102,198,132,94,15,40,123,249 };
    byte_vec_t pk { 4,101,101,77,112,89,199,17,93,228,87,7,172,167,201,87,254,205,222,7,116,76,212,1,71,159,53,230,240,244,116,132,15,72,241,31,189,152,162,203,153,67,225,157,191,37,143,163,7,172,73,10,125,30,1,45,69,39,175,78,205,117,100,122,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 489 ") {
    byte_vec_t msg { 130,88,163,223 };
    byte_vec_t sig { 253,142,207,160,127,146,60,27,80,91,209,27,63,98,61,34,83,42,211,247,78,56,25,184,250,43,135,163,207,2,186,126,114,55,149,226,88,254,124,22,156,134,94,76,79,141,150,61,46,141,195,150,134,73,35,27,39,90,213,54,93,217,191,146 };
    byte_vec_t pk { 3,253,59,124,234,146,210,139,242,234,234,119,112,173,58,141,191,118,77,115,149,185,92,167,44,175,52,114,165,196,0,251,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 489 ") {
    byte_vec_t msg { 31,40,107,235 };
    byte_vec_t sig { 25,23,187,193,62,169,61,227,82,242,216,95,31,253,78,255,223,127,145,19,129,139,220,11,107,105,233,213,195,164,195,149,244,108,185,157,99,44,229,90,45,182,20,114,241,38,171,146,255,153,164,121,8,179,33,0,243,56,153,119,157,31,196,234 };
    byte_vec_t pk { 3,91,231,107,80,51,248,146,158,214,158,220,191,240,250,6,217,219,152,52,3,95,239,169,168,232,230,179,11,219,238,205,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 490 ") {
    byte_vec_t msg { 110,20,52,179 };
    byte_vec_t sig { 153,69,181,9,199,111,91,112,186,183,168,116,167,108,125,167,44,133,68,12,152,246,7,1,67,123,222,105,70,239,54,222,209,245,201,54,117,135,86,15,95,24,142,57,206,143,201,225,172,47,195,101,86,82,213,112,49,57,108,53,76,39,34,44 };
    byte_vec_t pk { 4,115,162,53,250,116,61,222,34,85,89,54,21,146,168,188,140,88,68,213,209,246,179,159,212,79,9,118,34,23,165,219,46,37,150,94,234,161,254,25,205,77,102,8,9,253,98,80,192,163,240,239,138,198,0,75,111,233,150,149,48,100,91,52,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 490 ") {
    byte_vec_t msg { 23,103,160,4 };
    byte_vec_t sig { 58,189,25,162,82,152,48,119,126,135,63,230,136,36,39,157,240,200,77,157,188,174,167,198,231,83,85,61,56,147,153,195,6,107,116,177,78,6,177,88,233,135,105,199,131,176,179,52,79,253,75,36,218,166,100,30,126,14,229,111,151,81,20,131 };
    byte_vec_t pk { 4,222,24,112,226,82,175,197,47,211,27,52,144,135,26,120,44,99,162,78,55,162,152,186,252,167,170,162,236,248,247,190,221,20,161,145,81,204,201,69,177,147,139,226,3,64,223,35,20,5,170,229,123,190,117,114,137,243,131,20,46,108,155,148,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 490 ") {
    byte_vec_t msg { 64,55,218,118 };
    byte_vec_t sig { 176,123,43,24,243,40,163,143,191,54,36,161,15,43,117,173,148,81,241,149,209,67,52,36,5,52,232,250,166,119,130,226,239,4,169,176,230,143,61,134,225,161,67,143,37,139,38,85,149,172,11,202,155,193,48,92,43,33,28,68,161,225,35,120 };
    byte_vec_t pk { 3,123,58,131,18,42,237,169,41,41,78,69,37,88,165,27,19,120,159,14,68,121,155,183,26,88,202,179,152,60,209,79,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 490 ") {
    byte_vec_t msg { 250,19,118,67 };
    byte_vec_t sig { 238,13,49,137,43,32,116,21,155,115,249,76,200,225,66,184,41,169,16,58,66,91,189,15,130,33,102,122,124,97,15,191,145,105,149,196,116,48,132,201,1,195,167,176,108,103,91,126,128,183,227,41,66,236,197,226,140,76,177,49,175,236,199,154 };
    byte_vec_t pk { 3,240,17,101,223,253,131,142,222,183,49,219,103,210,232,189,226,163,191,181,159,171,153,157,163,8,151,223,186,206,167,125,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 491 ") {
    byte_vec_t msg { 171,150,46,46 };
    byte_vec_t sig { 55,141,35,195,222,25,243,48,143,149,22,33,3,116,171,221,243,254,22,122,11,248,220,186,72,8,25,40,26,4,107,37,2,167,80,251,127,216,42,244,100,228,176,210,157,66,184,123,34,234,63,93,176,232,152,155,26,46,132,172,183,141,55,175 };
    byte_vec_t pk { 4,177,102,60,60,102,47,111,171,118,32,177,247,55,40,149,102,146,251,96,150,131,192,72,131,180,113,173,73,30,87,245,173,146,209,138,27,112,48,121,186,157,139,172,10,190,68,139,112,24,62,250,233,254,83,73,38,193,23,179,144,9,14,111,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 491 ") {
    byte_vec_t msg { 30,93,189,108 };
    byte_vec_t sig { 139,67,55,245,154,79,51,114,60,221,176,38,77,128,59,32,192,59,53,9,120,52,111,120,187,156,253,148,114,136,207,75,110,45,186,148,182,44,15,151,157,184,68,99,94,121,50,172,209,170,203,44,228,140,212,193,80,48,200,93,27,101,142,123 };
    byte_vec_t pk { 4,85,219,201,140,150,220,54,56,134,42,192,236,132,227,56,156,137,214,215,74,248,116,184,5,103,94,0,135,138,51,165,88,94,200,163,177,119,237,155,226,50,150,17,33,37,40,176,133,109,11,112,235,130,239,165,33,43,210,121,54,45,14,43,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 491 ") {
    byte_vec_t msg { 196,38,204,25 };
    byte_vec_t sig { 178,114,60,23,67,151,245,154,136,134,162,72,48,86,118,218,65,93,67,0,203,64,56,118,196,56,166,249,181,232,162,158,177,253,254,24,209,191,219,150,252,12,84,48,49,138,165,72,234,62,70,147,6,195,127,250,90,81,76,27,248,110,216,41 };
    byte_vec_t pk { 2,59,9,80,96,102,132,86,98,78,97,186,148,99,128,56,142,169,164,132,216,254,105,38,18,241,3,251,154,41,191,33,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 491 ") {
    byte_vec_t msg { 41,63,87,154 };
    byte_vec_t sig { 184,252,25,122,28,239,151,107,138,194,48,2,103,14,204,18,60,27,118,112,149,168,39,59,33,131,57,92,211,176,150,211,180,147,71,97,137,44,205,25,36,61,244,163,237,146,28,24,231,226,167,234,123,124,215,255,3,25,8,239,83,23,160,114 };
    byte_vec_t pk { 2,241,60,53,100,121,199,126,136,229,230,232,60,61,72,161,146,152,11,146,145,0,169,225,31,114,250,92,204,11,156,251,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 492 ") {
    byte_vec_t msg { 59,150,54,227 };
    byte_vec_t sig { 139,163,239,71,64,249,236,76,69,242,156,93,152,123,117,213,225,213,183,87,162,20,55,127,205,41,255,59,201,53,187,179,3,106,220,152,110,37,140,203,102,130,215,1,180,194,242,65,149,235,134,67,72,138,67,150,86,93,38,113,153,243,248,116 };
    byte_vec_t pk { 4,96,224,166,53,58,148,211,249,45,21,36,233,17,124,25,182,8,239,32,33,65,255,52,185,137,218,8,255,52,66,21,33,252,67,255,123,200,71,46,6,212,165,252,136,245,210,230,120,127,232,176,35,108,169,232,37,27,147,255,196,113,118,120,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 492 ") {
    byte_vec_t msg { 21,111,79,65 };
    byte_vec_t sig { 115,171,179,55,96,103,76,45,94,157,97,15,253,112,103,64,48,148,198,177,244,223,51,219,82,6,11,193,194,122,181,206,20,198,63,87,130,8,133,170,162,100,93,20,161,80,33,12,224,216,201,30,116,111,3,151,221,104,139,157,107,129,130,54 };
    byte_vec_t pk { 4,111,126,58,71,144,212,100,191,209,165,154,64,50,86,194,104,42,88,136,116,193,183,29,250,109,25,47,75,75,1,151,161,19,55,164,1,231,99,205,4,4,59,254,209,1,71,16,122,98,98,49,110,39,31,235,151,238,194,171,179,77,7,190,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 492 ") {
    byte_vec_t msg { 13,118,48,132 };
    byte_vec_t sig { 31,134,160,15,201,39,33,71,151,156,241,195,54,78,239,94,55,101,201,119,201,212,246,181,190,76,111,221,141,110,159,95,148,80,215,152,139,150,167,156,47,214,139,216,79,55,253,127,209,43,33,185,167,27,17,21,23,248,162,22,224,128,152,91 };
    byte_vec_t pk { 2,213,69,192,68,1,217,28,207,36,213,122,22,69,70,145,194,95,238,36,199,53,64,203,89,118,76,54,166,73,6,35,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 492 ") {
    byte_vec_t msg { 90,128,10,212 };
    byte_vec_t sig { 201,166,181,36,28,158,91,79,92,196,137,151,154,247,12,150,58,86,95,194,77,64,128,17,231,13,0,246,111,29,30,220,122,158,159,118,218,81,243,170,224,205,24,81,162,193,134,117,3,134,78,1,43,136,226,133,21,84,181,4,45,71,197,69 };
    byte_vec_t pk { 3,136,60,133,171,198,64,20,150,174,17,108,132,59,170,253,24,159,217,90,170,112,22,209,236,75,100,101,182,245,181,47,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 493 ") {
    byte_vec_t msg { 244,189,94,14 };
    byte_vec_t sig { 64,105,43,46,93,80,87,113,120,11,170,23,29,227,12,139,74,75,126,197,187,59,177,133,121,52,61,109,143,242,65,25,108,82,188,70,9,4,221,19,247,232,187,236,250,207,40,40,210,185,240,84,144,1,120,16,28,236,91,151,54,84,89,98 };
    byte_vec_t pk { 4,141,103,72,176,210,86,213,98,113,179,143,171,65,87,108,231,195,159,74,128,90,192,117,185,205,17,107,198,37,212,202,183,21,198,1,230,131,75,232,45,232,208,126,30,190,115,254,5,251,14,38,144,0,139,250,4,234,70,89,227,187,252,16,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 493 ") {
    byte_vec_t msg { 38,95,90,91 };
    byte_vec_t sig { 79,143,77,57,195,185,137,206,60,146,255,225,218,202,89,95,87,236,106,180,208,28,229,161,255,212,247,227,27,234,62,138,89,60,27,138,192,145,143,20,57,192,108,143,215,186,13,33,211,70,235,251,49,145,60,99,193,23,25,59,123,73,87,36 };
    byte_vec_t pk { 4,115,183,88,227,191,65,15,100,86,200,64,104,113,117,82,160,211,17,175,95,64,206,140,226,96,89,180,72,141,215,74,69,82,240,21,184,136,147,193,157,130,137,177,94,197,180,155,90,121,188,115,54,17,199,209,69,229,57,31,222,111,61,201,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 493 ") {
    byte_vec_t msg { 160,196,88,222 };
    byte_vec_t sig { 122,18,179,107,157,227,203,181,201,227,108,114,10,67,71,36,222,58,172,89,40,46,96,221,80,140,233,64,54,122,122,14,17,164,81,1,53,111,48,146,31,109,68,168,64,69,65,21,15,121,94,58,160,166,78,246,108,146,72,201,230,150,77,117 };
    byte_vec_t pk { 2,168,180,217,245,88,72,197,46,51,27,231,209,146,20,192,64,159,117,229,219,94,172,6,135,248,110,224,112,137,146,183,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 493 ") {
    byte_vec_t msg { 139,227,177,207 };
    byte_vec_t sig { 254,9,195,151,42,130,254,146,62,43,159,165,64,208,226,112,233,142,220,219,20,16,23,220,36,114,234,78,34,16,80,11,199,110,242,16,75,150,102,201,134,140,148,64,206,216,177,14,187,159,1,18,122,119,191,168,184,207,188,56,189,93,200,204 };
    byte_vec_t pk { 2,227,24,34,137,134,116,17,154,34,59,72,106,186,125,157,0,23,55,112,180,178,211,56,202,54,131,12,222,25,114,163,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 494 ") {
    byte_vec_t msg { 43,27,135,186 };
    byte_vec_t sig { 172,134,35,128,194,141,162,150,131,157,223,253,217,175,130,130,15,29,116,114,128,86,141,130,66,96,119,79,1,42,34,20,67,155,237,91,109,108,103,228,169,164,254,234,240,147,19,52,68,187,208,117,76,89,23,115,123,129,143,164,134,208,26,186 };
    byte_vec_t pk { 4,83,66,131,60,204,86,17,191,239,50,227,20,100,198,56,148,196,103,142,184,208,226,95,177,226,242,240,248,2,71,253,155,149,172,19,195,194,47,40,58,2,184,25,204,76,68,84,73,121,241,69,238,24,56,57,72,132,138,153,198,108,45,103,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 494 ") {
    byte_vec_t msg { 240,85,77,50 };
    byte_vec_t sig { 217,46,68,192,113,215,123,129,245,7,234,97,226,212,163,72,30,110,223,213,221,54,32,90,164,212,253,160,227,135,168,237,113,107,245,212,108,172,90,170,89,160,168,39,248,254,142,103,60,123,157,251,167,191,170,114,218,140,181,63,240,203,168,19 };
    byte_vec_t pk { 4,204,6,226,6,191,251,150,126,34,184,58,124,168,191,247,190,171,236,1,8,92,153,93,156,20,84,161,74,217,7,207,50,86,80,97,106,78,93,249,134,66,120,216,91,244,83,213,115,113,63,102,71,57,184,229,184,237,40,23,154,205,60,208,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 494 ") {
    byte_vec_t msg { 27,32,129,32 };
    byte_vec_t sig { 54,25,98,163,55,84,89,130,20,56,175,238,153,170,176,134,61,171,83,31,17,91,4,34,158,247,46,92,169,210,218,128,91,150,67,64,59,156,99,13,199,82,167,181,32,178,165,212,3,107,218,108,107,154,235,190,94,15,9,88,134,222,2,13 };
    byte_vec_t pk { 3,193,122,151,175,98,6,71,187,235,175,18,230,19,253,107,26,234,69,55,18,43,216,199,221,104,32,167,134,138,58,137,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 494 ") {
    byte_vec_t msg { 189,103,210,244 };
    byte_vec_t sig { 150,46,75,180,242,5,171,142,98,141,119,126,186,99,159,233,181,201,44,110,203,84,204,92,193,85,134,179,65,114,144,51,80,6,194,93,59,255,198,109,139,110,135,109,38,54,236,85,116,14,161,110,144,39,124,217,140,249,153,82,116,96,246,130 };
    byte_vec_t pk { 2,221,213,230,116,252,33,221,253,83,153,161,255,52,55,17,7,86,248,165,7,47,214,167,125,70,143,43,89,75,183,124,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 495 ") {
    byte_vec_t msg { 180,61,144,113 };
    byte_vec_t sig { 105,105,95,175,34,144,220,41,195,104,1,184,31,48,13,113,71,183,179,196,146,219,171,44,94,147,108,120,184,115,210,30,193,147,203,253,54,176,58,166,184,183,194,240,148,29,121,207,149,15,161,115,153,128,63,49,114,184,220,195,159,225,171,57 };
    byte_vec_t pk { 4,48,25,201,232,105,175,29,67,138,9,124,49,139,93,194,153,124,40,219,109,209,208,136,169,55,85,14,148,196,38,244,187,81,82,94,129,1,172,149,215,253,108,54,208,140,0,29,72,194,11,43,226,92,54,143,229,149,207,31,251,169,1,123,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 495 ") {
    byte_vec_t msg { 50,15,99,18 };
    byte_vec_t sig { 63,88,252,132,219,220,179,182,41,140,70,219,118,27,30,118,80,219,18,203,108,15,210,122,42,168,71,247,98,112,132,2,171,143,241,0,80,96,28,215,193,154,127,102,234,162,79,36,44,222,153,3,77,20,124,21,154,227,8,247,29,188,206,96 };
    byte_vec_t pk { 4,227,81,165,95,17,208,12,251,51,181,155,8,60,9,97,246,137,142,89,28,127,69,113,180,210,184,251,17,58,165,129,148,130,8,45,150,153,188,62,133,252,242,61,122,239,156,193,63,6,180,1,7,137,48,179,246,209,243,53,173,23,154,254,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 495 ") {
    byte_vec_t msg { 65,207,17,62 };
    byte_vec_t sig { 3,246,101,169,145,254,19,3,180,138,153,17,206,143,84,132,22,231,33,108,181,128,236,248,225,109,74,30,166,161,150,217,227,100,99,10,137,249,69,180,198,234,60,196,26,165,7,36,221,6,2,73,171,224,114,235,201,253,0,213,248,232,112,203 };
    byte_vec_t pk { 3,44,120,216,130,4,110,105,62,117,101,204,199,130,89,202,104,175,31,241,39,208,60,217,95,150,74,71,177,252,53,130,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 495 ") {
    byte_vec_t msg { 149,8,63,221 };
    byte_vec_t sig { 52,48,75,106,23,173,122,155,122,119,145,209,8,142,137,191,175,146,29,88,132,23,60,110,47,9,155,26,148,235,78,163,55,158,128,120,130,14,94,161,127,103,240,42,189,238,169,230,7,201,9,147,198,159,203,245,219,147,245,37,84,193,162,174 };
    byte_vec_t pk { 3,3,171,10,187,102,6,139,35,48,14,131,6,117,115,34,179,211,49,208,182,95,65,64,102,122,238,120,157,48,59,46,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 496 ") {
    byte_vec_t msg { 154,61,11,8 };
    byte_vec_t sig { 193,170,145,183,77,204,102,221,54,224,53,12,29,219,230,131,45,103,213,224,72,146,59,236,55,129,45,37,14,85,249,152,191,167,247,249,176,67,9,37,34,237,114,230,137,27,74,99,47,146,140,160,111,168,71,89,242,248,224,241,227,92,106,146 };
    byte_vec_t pk { 4,33,228,118,206,205,181,17,210,202,208,105,91,236,250,116,167,170,188,222,118,51,90,39,79,168,206,74,43,199,128,114,167,118,116,213,223,92,8,32,62,162,243,243,130,79,247,98,204,207,37,27,217,19,125,206,209,128,152,143,17,116,167,172,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 496 ") {
    byte_vec_t msg { 208,243,190,229 };
    byte_vec_t sig { 120,132,191,254,5,185,198,181,96,66,240,18,180,8,102,188,200,147,226,79,139,68,238,172,82,112,67,28,226,147,178,137,17,21,174,225,21,182,213,123,9,69,80,62,77,100,142,71,81,165,99,223,156,218,76,162,150,57,163,87,182,156,19,184 };
    byte_vec_t pk { 4,176,171,90,248,37,210,196,118,25,178,15,109,255,100,178,58,33,87,83,219,205,92,41,79,178,181,75,92,143,163,19,61,240,27,0,201,17,204,137,215,118,68,40,56,220,112,148,161,144,193,94,84,248,32,160,231,215,111,104,83,93,170,33,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 496 ") {
    byte_vec_t msg { 166,142,11,156 };
    byte_vec_t sig { 9,63,58,79,231,162,204,164,174,205,61,57,112,122,190,221,24,132,226,158,189,247,215,173,65,20,2,77,155,11,15,52,11,189,58,218,142,74,123,89,96,46,67,241,217,126,158,184,103,174,158,60,12,34,203,116,197,231,198,128,34,98,124,167 };
    byte_vec_t pk { 2,31,56,128,242,101,191,105,93,100,3,149,56,181,249,27,61,194,107,133,102,71,1,125,9,25,73,76,201,214,88,99,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 496 ") {
    byte_vec_t msg { 15,150,85,56 };
    byte_vec_t sig { 135,168,140,68,15,120,47,240,158,168,177,120,132,184,65,182,92,146,176,166,24,33,139,141,145,172,201,202,121,58,18,38,247,154,33,217,25,190,102,194,14,127,243,166,139,86,17,88,226,253,169,225,23,88,190,195,12,98,200,81,246,98,103,104 };
    byte_vec_t pk { 3,159,9,87,26,108,69,26,70,87,157,107,71,227,166,211,33,107,142,85,76,223,89,125,153,216,242,37,65,231,3,251,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 497 ") {
    byte_vec_t msg { 62,82,214,29 };
    byte_vec_t sig { 231,14,158,43,246,53,98,31,233,91,128,169,77,48,124,74,14,228,212,80,87,150,195,33,200,146,86,66,57,215,46,133,252,223,127,60,219,16,161,168,209,96,157,225,142,250,63,96,200,21,111,111,91,48,96,228,215,11,222,160,202,39,110,33 };
    byte_vec_t pk { 4,34,207,48,193,80,5,83,54,30,182,81,192,178,218,222,226,51,127,111,106,33,38,223,1,112,252,104,131,39,136,173,88,5,78,255,159,212,149,70,180,124,152,185,13,188,169,169,228,220,85,39,78,0,225,37,120,40,42,182,156,206,226,113,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 497 ") {
    byte_vec_t msg { 17,18,212,190 };
    byte_vec_t sig { 117,181,77,69,240,45,31,5,215,90,137,217,47,72,79,203,9,205,147,98,153,252,242,241,189,171,73,116,13,115,183,42,136,190,38,2,31,127,188,108,196,155,172,244,34,177,248,182,188,219,174,233,158,16,195,18,84,185,23,193,110,57,212,193 };
    byte_vec_t pk { 4,192,36,234,195,79,18,178,84,15,244,104,1,221,164,97,243,200,117,189,13,97,8,159,104,131,126,94,16,175,70,244,237,42,59,122,255,173,84,109,203,137,52,5,143,124,73,24,132,174,170,19,90,239,240,119,62,211,154,1,223,86,107,240,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 497 ") {
    byte_vec_t msg { 73,177,163,55 };
    byte_vec_t sig { 216,254,110,3,226,216,206,36,37,167,205,204,238,5,78,140,126,96,142,182,190,44,245,49,85,115,125,5,99,190,83,5,110,39,194,84,148,101,186,205,218,153,61,251,37,249,67,33,88,132,209,135,225,231,132,231,56,124,78,114,155,38,222,111 };
    byte_vec_t pk { 3,126,236,91,133,152,154,48,125,121,79,123,179,231,133,211,207,122,48,138,150,150,43,194,152,193,154,225,70,43,169,54,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 497 ") {
    byte_vec_t msg { 17,249,155,63 };
    byte_vec_t sig { 115,76,8,114,57,159,38,126,196,251,138,154,240,83,191,160,52,229,153,0,169,64,238,154,86,137,218,251,0,97,127,186,241,242,2,73,179,40,21,127,18,215,121,217,140,64,67,6,177,69,62,12,218,48,103,31,251,68,16,120,86,168,211,74 };
    byte_vec_t pk { 2,38,227,199,122,26,64,183,177,205,130,164,83,169,152,32,231,142,24,33,204,182,165,134,153,236,229,79,219,208,52,25,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 498 ") {
    byte_vec_t msg { 21,28,61,211 };
    byte_vec_t sig { 203,91,229,8,156,78,230,215,111,74,34,49,57,209,182,121,112,236,176,222,222,174,148,63,245,24,201,233,250,54,241,144,185,226,131,154,123,204,156,145,52,215,234,127,184,248,175,37,239,94,78,48,6,202,151,112,25,121,126,69,61,34,68,237 };
    byte_vec_t pk { 4,18,127,168,212,92,7,27,205,109,235,192,118,27,60,40,86,148,232,93,164,103,106,96,25,220,46,192,93,32,17,190,147,134,192,254,235,27,218,23,21,169,155,224,91,18,221,57,234,213,10,29,94,15,124,120,197,72,36,184,17,192,27,216,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 498 ") {
    byte_vec_t msg { 70,11,134,79 };
    byte_vec_t sig { 227,133,206,113,230,119,204,121,111,87,204,101,63,51,197,213,182,52,129,96,56,150,241,175,72,128,12,179,127,13,253,217,155,227,177,226,217,103,106,172,145,255,57,91,176,2,64,151,119,54,41,182,198,4,108,102,142,7,151,49,42,245,191,152 };
    byte_vec_t pk { 4,253,82,175,18,56,184,190,249,84,112,113,143,44,152,98,91,45,228,86,6,226,53,137,190,4,55,50,0,75,118,83,127,22,117,45,60,132,89,121,42,155,124,153,111,11,232,244,102,12,165,251,55,167,42,7,43,235,236,5,200,79,40,208,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 498 ") {
    byte_vec_t msg { 112,150,54,85 };
    byte_vec_t sig { 100,96,21,67,53,244,187,31,37,121,245,171,15,120,66,8,105,217,176,58,194,170,164,69,27,111,124,140,11,81,45,193,24,74,135,191,153,195,93,232,177,83,235,53,38,100,118,86,1,246,124,147,212,54,46,94,187,149,215,206,12,9,150,218 };
    byte_vec_t pk { 2,125,95,130,150,55,224,225,45,18,116,174,41,167,96,150,158,201,80,143,25,72,201,251,31,39,174,229,124,0,7,252,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 498 ") {
    byte_vec_t msg { 98,85,35,27 };
    byte_vec_t sig { 40,203,4,115,39,24,171,26,37,220,107,171,18,253,189,222,11,109,4,40,92,251,171,233,100,137,219,168,246,127,1,111,130,183,39,132,174,90,171,4,46,251,91,140,88,219,103,227,211,172,75,155,12,43,71,35,165,69,46,22,255,185,48,248 };
    byte_vec_t pk { 3,42,166,138,224,97,0,35,89,186,12,55,91,141,3,27,72,64,91,72,129,43,41,103,156,147,137,210,138,97,201,229,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 499 ") {
    byte_vec_t msg { 159,249,167,152 };
    byte_vec_t sig { 6,148,251,62,196,232,237,65,141,157,229,222,11,14,171,210,140,111,54,42,224,234,73,27,91,157,69,203,253,215,194,120,1,17,167,168,252,103,208,174,126,111,27,45,202,237,68,42,97,228,130,164,100,61,165,182,230,211,49,191,235,1,108,174 };
    byte_vec_t pk { 4,50,198,50,20,229,172,214,118,196,249,89,53,71,171,180,108,169,235,89,54,160,215,99,56,193,218,22,193,32,234,55,56,84,143,63,3,227,65,55,218,57,105,197,38,17,110,26,88,17,149,227,131,190,55,210,133,139,98,85,134,223,207,63,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 499 ") {
    byte_vec_t msg { 117,21,96,56 };
    byte_vec_t sig { 20,31,253,195,218,191,62,161,26,19,192,153,162,14,74,6,239,62,19,106,168,37,2,160,57,230,123,245,182,63,221,126,49,54,121,254,119,163,7,76,42,21,211,171,239,227,69,255,213,122,198,156,221,73,110,196,87,63,133,191,152,205,231,47 };
    byte_vec_t pk { 4,60,43,213,25,28,46,124,101,128,10,73,96,75,8,93,127,146,152,51,38,215,244,96,63,63,2,8,93,83,45,173,43,184,4,24,14,12,193,143,64,91,37,164,225,234,96,149,140,182,79,55,92,70,155,99,99,74,202,79,185,251,143,147,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 499 ") {
    byte_vec_t msg { 239,17,152,100 };
    byte_vec_t sig { 181,198,19,193,115,51,147,243,159,173,129,28,75,200,58,92,184,29,77,64,136,195,15,81,4,52,40,253,126,173,71,5,227,24,73,220,160,33,36,151,215,29,147,177,147,43,167,15,209,2,95,71,188,161,26,121,247,171,234,168,135,111,120,68 };
    byte_vec_t pk { 3,45,67,210,127,38,25,174,70,79,92,235,162,48,62,40,181,135,34,173,208,184,179,50,124,163,209,216,211,57,130,2,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 499 ") {
    byte_vec_t msg { 229,126,9,1 };
    byte_vec_t sig { 183,224,112,99,165,125,180,121,246,84,175,62,10,93,161,184,168,188,202,60,182,211,37,144,255,149,227,146,102,116,233,217,92,189,114,226,122,107,58,28,191,176,33,136,165,76,135,83,87,6,66,46,231,59,253,32,241,249,187,212,200,59,38,143 };
    byte_vec_t pk { 3,142,131,85,222,62,129,56,230,2,222,173,106,121,252,51,132,228,232,24,73,209,60,90,123,40,235,192,106,147,141,208,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 500 ") {
    byte_vec_t msg { 26,104,7,67 };
    byte_vec_t sig { 88,183,146,146,178,159,62,167,136,94,83,95,91,253,87,35,153,165,60,229,134,41,254,92,144,73,24,212,236,10,11,228,88,206,28,217,129,116,29,23,99,125,216,102,74,101,157,216,114,20,200,209,57,55,14,113,38,245,153,33,80,237,131,189 };
    byte_vec_t pk { 4,159,2,138,97,96,223,140,80,230,173,99,199,34,191,244,52,58,248,169,240,120,45,97,221,98,147,207,137,115,200,172,222,87,225,237,190,75,109,77,5,215,146,179,60,108,206,255,56,151,151,253,121,152,133,215,66,134,139,26,205,103,180,210,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 500 ") {
    byte_vec_t msg { 102,82,249,250 };
    byte_vec_t sig { 205,74,163,130,233,158,142,191,191,157,144,224,11,151,111,76,56,14,91,241,125,239,130,112,53,234,29,30,135,167,234,95,132,52,226,206,8,254,67,199,242,59,24,6,147,25,167,41,72,179,167,243,252,19,12,252,75,101,52,85,250,123,89,247 };
    byte_vec_t pk { 4,83,221,184,209,133,138,169,52,246,75,177,71,50,54,49,237,34,99,188,157,62,6,201,12,234,237,221,6,234,13,240,199,202,69,209,49,125,233,115,236,71,153,45,170,155,195,136,145,217,68,78,140,68,160,112,131,66,207,87,233,253,53,103,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 500 ") {
    byte_vec_t msg { 47,235,180,154 };
    byte_vec_t sig { 59,8,9,108,172,49,83,131,45,54,247,99,89,111,145,72,154,47,28,206,252,202,57,48,184,94,21,34,34,97,188,253,86,21,117,182,217,69,4,121,201,131,164,36,23,93,207,196,35,132,228,77,176,111,130,15,199,249,200,206,73,191,38,112 };
    byte_vec_t pk { 3,248,63,51,180,178,55,209,74,104,128,148,168,131,235,115,18,40,227,239,16,33,159,63,88,243,48,150,98,112,159,219,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 500 ") {
    byte_vec_t msg { 221,152,70,3 };
    byte_vec_t sig { 47,11,162,7,67,226,186,205,189,135,15,78,208,71,229,59,207,112,5,22,31,58,128,0,61,0,185,236,89,13,69,206,211,179,74,183,150,73,148,131,5,201,47,242,172,192,185,27,84,32,32,69,145,152,84,134,194,9,8,116,25,176,206,34 };
    byte_vec_t pk { 2,153,122,64,118,13,54,47,106,130,166,34,9,198,97,201,110,21,128,19,178,14,64,64,179,97,9,174,81,242,130,199,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 501 ") {
    byte_vec_t msg { 47,115,121,213 };
    byte_vec_t sig { 203,101,141,72,32,2,185,41,36,182,246,161,177,84,117,116,107,6,240,54,77,130,168,134,75,80,218,39,145,241,159,182,145,147,4,180,28,48,26,103,9,117,248,66,53,2,228,62,154,216,224,232,125,37,126,69,143,43,205,78,1,210,144,122 };
    byte_vec_t pk { 4,164,81,169,133,165,82,232,19,206,255,90,37,116,165,151,234,168,97,63,204,221,39,137,133,73,159,104,31,116,157,225,65,79,190,255,115,191,6,199,165,173,90,50,174,147,51,21,239,56,57,254,201,233,239,255,62,120,3,79,114,170,72,209,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 501 ") {
    byte_vec_t msg { 190,201,152,213 };
    byte_vec_t sig { 107,56,7,237,152,170,255,22,166,4,105,57,135,155,241,123,118,54,167,10,204,166,35,229,169,83,253,103,20,19,226,68,34,12,175,59,122,110,183,133,176,236,39,34,203,187,17,48,100,157,95,139,56,249,249,35,9,196,151,102,1,84,176,179 };
    byte_vec_t pk { 4,62,19,79,25,192,210,245,30,14,247,188,178,20,55,77,146,177,146,145,47,114,77,90,246,36,186,137,165,254,227,177,179,4,17,23,135,66,163,69,29,238,15,168,117,247,5,121,167,136,161,163,128,250,122,183,5,233,170,142,72,194,180,14,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 501 ") {
    byte_vec_t msg { 151,201,19,179 };
    byte_vec_t sig { 248,156,172,125,74,114,131,29,29,124,70,73,224,46,42,189,189,229,86,224,82,37,177,55,241,173,93,154,130,42,148,56,36,199,78,46,106,150,242,18,208,152,107,125,170,250,195,181,17,138,193,65,213,205,138,83,4,174,68,78,191,127,236,173 };
    byte_vec_t pk { 3,15,170,170,140,0,59,51,250,157,181,138,70,236,30,57,62,203,177,80,108,181,169,240,196,59,96,72,24,27,203,79,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 501 ") {
    byte_vec_t msg { 216,30,123,106 };
    byte_vec_t sig { 184,86,3,19,40,100,244,192,86,159,220,52,0,214,103,196,204,145,39,0,66,171,124,233,215,182,58,22,80,2,231,0,162,161,78,206,213,207,107,96,245,174,209,107,96,48,166,130,112,84,213,219,230,184,238,71,71,8,216,172,55,68,56,40 };
    byte_vec_t pk { 2,168,30,97,240,53,89,70,207,160,87,118,48,82,58,94,35,15,133,253,176,199,173,249,197,194,183,253,149,30,44,124,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 502 ") {
    byte_vec_t msg { 170,125,25,169 };
    byte_vec_t sig { 100,113,188,31,207,255,125,119,58,206,235,155,75,19,162,54,86,237,226,53,13,91,235,238,13,184,78,251,10,177,213,13,109,95,246,153,163,169,150,111,100,132,163,19,213,171,25,223,208,81,132,109,121,71,180,168,35,108,22,33,210,244,85,87 };
    byte_vec_t pk { 4,18,159,187,18,222,136,68,117,235,4,27,152,225,227,128,241,98,51,107,214,21,221,57,210,140,32,195,15,177,199,76,249,70,255,244,126,209,118,115,250,185,131,136,255,234,119,46,26,2,79,161,98,87,68,227,184,220,95,169,51,226,174,89,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 502 ") {
    byte_vec_t msg { 105,29,89,215 };
    byte_vec_t sig { 244,162,85,241,78,51,194,176,176,130,136,112,196,47,128,164,64,219,22,220,140,170,170,45,174,47,49,213,9,216,255,93,208,123,20,107,172,141,197,120,60,88,98,134,227,56,86,33,252,130,55,251,169,132,41,10,176,202,133,241,113,27,81,192 };
    byte_vec_t pk { 4,236,203,51,97,35,126,81,225,157,215,212,183,17,138,7,24,72,3,161,5,104,156,50,36,170,188,146,103,197,30,169,26,81,247,199,31,54,194,118,67,168,95,61,116,16,101,227,68,109,252,229,162,105,233,70,235,55,62,65,79,102,164,20,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 502 ") {
    byte_vec_t msg { 125,131,25,54 };
    byte_vec_t sig { 70,79,50,161,114,64,39,59,31,144,253,134,232,211,216,203,31,105,182,128,3,182,114,38,168,128,141,90,128,206,21,86,208,221,7,226,17,187,194,139,16,79,205,8,72,20,97,47,119,200,174,115,121,197,255,162,38,210,64,39,152,94,127,136 };
    byte_vec_t pk { 3,211,214,62,128,75,238,183,191,73,145,223,66,2,157,92,17,20,243,113,91,177,146,241,116,37,1,37,106,41,20,243,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 502 ") {
    byte_vec_t msg { 30,248,66,230 };
    byte_vec_t sig { 225,191,56,161,3,137,210,227,59,23,99,128,112,96,48,232,98,29,221,87,39,152,25,197,226,33,128,226,117,245,232,42,99,248,120,117,61,89,82,88,114,227,236,101,38,241,2,145,8,253,221,154,92,57,84,21,155,90,202,15,27,126,248,53 };
    byte_vec_t pk { 3,215,199,94,83,193,198,252,134,219,242,220,142,139,180,33,91,2,66,127,112,106,89,131,71,42,70,54,99,178,50,116,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 503 ") {
    byte_vec_t msg { 43,29,55,84 };
    byte_vec_t sig { 139,209,83,90,125,32,102,236,103,198,190,189,24,191,179,190,230,116,131,123,250,78,17,30,126,106,66,246,94,46,196,20,80,215,77,206,42,137,62,230,105,90,90,56,11,192,239,108,81,175,230,96,116,9,160,246,175,158,112,38,204,109,49,37 };
    byte_vec_t pk { 4,125,183,54,161,171,0,236,179,222,215,150,119,234,57,196,148,96,82,226,34,113,27,57,238,244,103,100,143,225,252,221,162,95,190,226,154,181,52,20,190,148,112,221,228,129,236,51,20,218,149,69,136,92,116,93,68,116,36,221,236,237,65,80,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 503 ") {
    byte_vec_t msg { 81,121,241,39 };
    byte_vec_t sig { 36,229,176,108,98,68,54,37,213,130,218,39,220,89,103,72,56,50,127,205,131,226,107,50,159,28,52,50,37,118,1,158,111,53,212,65,42,161,13,101,245,164,74,194,195,227,152,24,241,38,108,152,34,132,173,2,132,127,17,195,214,30,252,88 };
    byte_vec_t pk { 4,62,6,35,47,180,150,255,182,137,74,68,129,173,229,200,118,220,225,32,56,22,255,164,0,110,108,74,116,91,174,246,7,205,255,31,237,241,238,86,167,231,131,47,2,172,61,89,148,124,109,96,194,112,114,90,248,27,121,126,99,185,205,37,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 503 ") {
    byte_vec_t msg { 184,123,87,227 };
    byte_vec_t sig { 194,98,236,36,171,191,234,253,15,82,1,217,217,70,26,22,164,108,175,152,86,5,176,77,17,186,91,13,238,209,193,143,136,233,93,87,47,226,242,31,139,74,39,192,131,26,203,222,80,250,47,185,140,129,139,209,229,174,55,250,47,209,81,80 };
    byte_vec_t pk { 3,203,251,71,130,56,196,168,207,243,45,84,44,15,32,190,210,73,128,189,183,87,123,32,153,199,115,119,16,12,105,46,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 503 ") {
    byte_vec_t msg { 90,241,9,69 };
    byte_vec_t sig { 65,233,171,240,73,114,98,71,149,160,2,225,134,110,143,95,192,214,129,128,233,1,78,114,110,114,124,235,54,241,120,30,151,146,211,251,19,55,187,161,111,4,34,35,6,195,144,249,163,179,23,182,100,200,240,19,109,202,175,10,139,213,192,153 };
    byte_vec_t pk { 3,254,112,139,125,174,105,58,90,245,199,1,202,47,17,207,143,21,220,189,118,108,33,34,111,46,216,218,213,8,110,34,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 504 ") {
    byte_vec_t msg { 175,83,186,150 };
    byte_vec_t sig { 4,78,227,247,26,31,63,224,213,121,39,99,227,93,35,222,131,130,201,253,71,16,12,78,21,67,9,104,103,248,193,201,182,71,225,7,193,129,86,52,145,121,112,103,79,219,39,102,194,0,235,25,60,90,147,142,235,30,189,162,0,212,89,248 };
    byte_vec_t pk { 4,206,231,146,63,16,171,44,110,12,205,100,184,250,55,20,240,26,177,3,182,23,66,106,84,93,114,140,194,43,0,209,120,55,234,46,220,67,104,47,61,213,139,22,240,230,170,183,250,188,71,49,99,116,19,241,8,87,18,132,51,207,148,126,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 504 ") {
    byte_vec_t msg { 116,6,188,148 };
    byte_vec_t sig { 64,179,46,193,150,136,243,36,44,179,100,236,77,9,71,187,156,139,89,49,109,44,238,238,228,85,227,121,191,42,90,116,205,117,212,66,237,174,129,132,231,174,190,106,201,112,62,150,62,158,213,77,244,83,61,128,58,219,10,103,96,17,60,65 };
    byte_vec_t pk { 4,232,65,12,249,20,223,31,140,132,39,47,118,170,183,164,146,166,10,184,36,194,195,12,46,3,209,232,232,245,72,55,147,146,210,197,250,195,231,52,237,192,242,191,175,173,75,42,189,110,38,88,20,24,126,111,134,171,57,200,46,58,103,132,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 504 ") {
    byte_vec_t msg { 71,149,83,162 };
    byte_vec_t sig { 147,232,28,91,62,33,163,242,180,58,249,119,52,204,240,2,244,62,43,158,40,12,214,232,185,191,203,109,239,144,105,87,250,34,172,153,23,129,228,243,65,101,90,55,162,154,137,245,122,253,61,214,95,105,187,181,182,10,195,71,193,154,68,45 };
    byte_vec_t pk { 3,125,109,74,8,86,5,171,186,38,41,190,39,61,227,20,180,183,43,53,163,186,51,125,51,250,95,236,19,168,9,136,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 504 ") {
    byte_vec_t msg { 113,53,173,84 };
    byte_vec_t sig { 221,228,69,166,49,103,15,10,205,30,244,190,85,151,119,46,88,182,140,165,2,18,33,229,211,159,98,238,38,117,154,104,172,120,166,46,230,48,157,89,162,104,242,157,79,102,132,102,62,125,243,73,170,152,69,124,208,77,159,165,90,137,44,196 };
    byte_vec_t pk { 3,228,46,227,145,33,30,24,243,165,80,210,3,185,106,255,104,3,111,85,155,199,184,240,41,161,55,6,142,161,182,84,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 505 ") {
    byte_vec_t msg { 126,73,117,19 };
    byte_vec_t sig { 149,228,215,85,168,126,177,8,6,20,88,171,193,176,228,3,225,8,46,157,33,208,135,5,242,55,154,225,242,24,248,239,167,243,172,3,111,75,209,109,7,155,228,194,254,197,217,99,106,29,49,62,11,133,164,252,192,100,96,120,240,114,204,44 };
    byte_vec_t pk { 4,26,232,255,162,15,113,108,68,90,231,247,70,66,207,4,222,91,62,92,233,200,125,88,243,122,221,22,79,136,177,162,174,136,100,126,31,243,217,126,255,149,105,68,193,88,21,161,38,38,67,29,184,141,127,83,207,7,139,99,142,254,133,213,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 505 ") {
    byte_vec_t msg { 215,30,191,219 };
    byte_vec_t sig { 80,177,194,124,131,130,207,15,226,89,102,88,164,167,40,14,113,114,40,136,145,222,50,21,157,245,216,223,255,159,7,90,210,90,37,218,48,231,210,116,37,135,50,82,102,29,253,78,245,100,156,52,160,199,69,136,194,228,87,161,59,194,181,42 };
    byte_vec_t pk { 4,132,3,83,0,114,99,232,18,197,117,180,247,36,47,53,89,246,163,244,129,213,49,188,60,31,69,132,24,132,38,193,194,183,192,181,184,189,58,236,164,52,189,124,60,152,203,45,121,157,50,74,86,141,240,195,200,111,56,109,94,252,48,121,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 505 ") {
    byte_vec_t msg { 34,24,214,136 };
    byte_vec_t sig { 77,120,21,6,29,11,150,187,131,50,236,96,42,147,100,248,156,209,129,188,1,129,33,26,249,104,136,158,164,43,69,169,14,126,157,115,183,78,199,100,205,160,32,154,153,242,218,147,210,165,53,104,100,70,129,182,188,252,81,163,226,31,181,175 };
    byte_vec_t pk { 2,171,35,255,31,195,138,15,204,54,42,209,216,13,75,108,75,13,233,105,112,159,52,120,17,186,232,15,77,186,255,242,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 505 ") {
    byte_vec_t msg { 138,194,5,202 };
    byte_vec_t sig { 17,51,3,0,243,244,170,193,228,180,55,208,235,225,192,12,124,55,253,156,9,204,116,107,181,184,213,207,214,50,65,46,201,19,175,43,223,253,129,91,185,63,122,120,138,242,81,205,115,236,216,213,155,194,94,110,130,214,232,108,182,149,129,169 };
    byte_vec_t pk { 2,112,156,87,179,207,40,112,225,145,174,207,138,231,5,204,68,166,39,0,2,213,12,30,171,56,234,27,48,191,92,105,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 506 ") {
    byte_vec_t msg { 91,111,19,187 };
    byte_vec_t sig { 189,165,90,152,198,191,138,200,100,146,158,150,71,243,81,78,97,62,124,151,196,21,110,14,4,88,153,231,109,5,60,76,225,246,68,7,150,193,31,82,78,232,174,87,48,81,127,243,216,253,243,54,124,132,4,254,125,235,94,43,158,233,27,8 };
    byte_vec_t pk { 4,221,33,250,59,147,144,169,100,140,0,179,235,58,65,126,3,93,252,199,251,118,41,235,173,87,111,148,215,114,90,163,41,90,89,22,115,201,252,221,196,67,244,202,108,161,255,97,162,222,220,244,198,52,134,1,36,18,124,224,240,50,85,160,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 506 ") {
    byte_vec_t msg { 127,31,97,94 };
    byte_vec_t sig { 80,85,230,63,0,232,216,172,206,41,53,88,136,159,121,217,56,46,235,87,94,125,208,95,96,255,104,106,23,68,43,178,154,31,231,40,56,198,253,5,79,228,98,250,188,72,152,205,52,207,183,75,39,9,154,59,242,62,9,153,114,240,2,109 };
    byte_vec_t pk { 4,191,25,151,155,164,214,153,30,73,188,198,130,158,192,201,179,92,52,159,80,74,66,14,161,75,194,129,215,136,224,134,105,14,250,45,165,136,18,148,232,79,189,62,134,212,232,176,181,85,205,101,151,250,143,132,209,146,32,72,204,190,20,59,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 506 ") {
    byte_vec_t msg { 0,69,248,241 };
    byte_vec_t sig { 223,64,113,63,223,32,33,127,38,250,79,217,137,214,134,146,174,128,24,180,14,252,129,62,212,116,77,251,6,9,70,99,241,94,250,91,2,238,54,120,130,2,203,177,133,218,80,217,239,47,79,129,218,157,37,133,46,96,153,180,175,173,222,161 };
    byte_vec_t pk { 2,121,21,150,61,82,123,39,245,109,99,78,159,52,37,74,154,176,254,94,113,6,221,134,56,148,219,171,255,70,15,240,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 506 ") {
    byte_vec_t msg { 162,47,197,173 };
    byte_vec_t sig { 108,206,74,247,167,149,190,194,227,46,165,195,236,64,12,197,104,222,161,194,37,128,38,233,46,72,215,200,188,42,157,223,36,200,142,52,247,124,244,136,55,18,65,100,196,4,113,5,211,143,140,251,48,55,138,109,216,218,43,95,47,21,143,119 };
    byte_vec_t pk { 2,95,178,226,189,249,218,60,211,226,231,113,248,193,43,27,20,131,252,22,245,193,74,134,0,170,248,32,131,93,34,224,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 507 ") {
    byte_vec_t msg { 70,205,139,239 };
    byte_vec_t sig { 109,112,34,109,132,64,229,168,198,100,4,232,251,199,169,126,243,86,47,13,213,185,232,210,197,174,26,84,201,217,51,69,133,209,5,241,3,176,33,120,40,12,148,219,239,48,197,188,29,22,193,73,236,136,208,245,116,9,11,117,198,59,147,68 };
    byte_vec_t pk { 4,169,43,73,107,198,189,103,123,120,118,56,95,223,114,191,57,59,104,192,124,10,4,136,102,93,36,130,151,18,208,55,56,210,206,122,218,219,44,18,109,158,125,147,223,119,196,174,61,70,10,221,105,167,255,36,89,170,224,6,235,84,47,212,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 507 ") {
    byte_vec_t msg { 211,3,178,96 };
    byte_vec_t sig { 125,167,214,17,93,37,93,194,115,208,57,198,210,153,175,27,25,83,30,38,13,29,119,171,91,229,126,198,117,218,249,243,109,40,8,202,32,55,32,252,200,169,62,88,73,49,68,215,83,65,93,148,111,87,134,71,51,17,2,164,117,243,137,65 };
    byte_vec_t pk { 4,118,192,152,246,86,186,193,152,120,187,198,14,222,210,233,212,7,123,254,225,15,122,165,102,243,89,0,200,113,185,84,157,124,148,200,106,209,37,24,38,137,91,71,177,92,53,130,202,172,44,192,157,43,158,57,13,69,255,211,54,211,85,1,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 507 ") {
    byte_vec_t msg { 49,192,0,131 };
    byte_vec_t sig { 44,62,89,149,135,148,1,31,167,145,173,149,250,228,60,116,69,80,116,186,251,97,164,196,61,8,235,13,135,253,71,190,42,245,78,246,102,178,75,138,81,218,202,74,66,32,164,184,35,102,103,76,183,99,78,79,213,223,197,221,117,185,194,188 };
    byte_vec_t pk { 2,241,145,68,28,161,212,66,203,175,27,210,184,55,237,56,234,136,26,26,194,161,168,52,137,90,252,206,167,219,147,111,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 507 ") {
    byte_vec_t msg { 109,3,176,137 };
    byte_vec_t sig { 94,150,193,65,75,233,193,136,142,175,45,83,145,42,169,184,68,116,220,170,42,186,127,120,238,207,157,218,154,219,167,249,45,192,73,155,138,224,221,75,7,216,159,106,21,53,108,222,21,124,220,137,87,228,159,178,236,236,139,243,94,246,166,152 };
    byte_vec_t pk { 3,218,162,192,205,51,202,68,36,143,71,78,139,94,35,52,223,72,192,38,141,32,12,199,216,197,95,243,134,176,171,49,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 508 ") {
    byte_vec_t msg { 129,90,221,24 };
    byte_vec_t sig { 178,101,194,245,231,180,65,220,161,199,108,133,240,156,140,208,121,230,159,114,249,195,240,70,147,138,242,165,64,17,100,121,172,69,222,67,210,104,148,174,17,156,23,246,17,166,236,9,89,246,195,29,183,192,231,43,36,13,51,243,172,164,46,107 };
    byte_vec_t pk { 4,103,209,79,168,52,101,204,237,81,110,192,138,254,108,184,89,133,25,29,183,137,85,121,6,121,144,190,248,183,124,105,86,91,7,77,148,238,66,109,90,224,249,104,61,68,94,74,149,103,16,146,255,154,223,52,70,132,220,107,68,117,36,131,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 508 ") {
    byte_vec_t msg { 219,10,135,192 };
    byte_vec_t sig { 152,191,141,41,251,136,161,55,191,227,250,83,56,194,17,0,22,132,139,173,190,199,126,211,43,51,238,75,200,119,61,30,128,226,251,116,204,108,26,233,48,215,231,150,217,136,14,139,185,159,28,250,251,111,100,249,204,205,200,116,93,58,22,117 };
    byte_vec_t pk { 4,71,51,249,173,12,239,152,189,221,3,167,99,141,129,139,227,134,82,131,193,236,212,139,191,195,123,115,197,208,32,148,185,164,107,147,219,218,148,40,200,130,247,181,97,222,80,202,33,51,208,177,81,100,140,145,45,178,31,109,152,65,1,25,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 508 ") {
    byte_vec_t msg { 36,20,74,159 };
    byte_vec_t sig { 28,131,53,151,163,1,46,102,52,230,229,211,91,144,140,209,240,109,66,193,124,247,159,64,48,253,119,8,230,162,162,99,143,13,210,243,36,78,0,65,88,13,56,132,2,127,46,234,21,173,241,195,113,173,138,220,228,228,214,64,230,139,41,51 };
    byte_vec_t pk { 3,206,194,233,255,26,44,8,15,254,152,141,155,85,113,196,175,168,202,60,11,190,237,224,74,214,214,221,111,163,174,29,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 508 ") {
    byte_vec_t msg { 234,53,156,16 };
    byte_vec_t sig { 227,167,162,176,48,35,131,161,199,76,150,128,236,231,123,209,23,95,212,0,79,119,93,45,22,233,29,16,164,199,241,145,130,189,81,255,193,29,35,224,80,41,242,88,219,72,110,2,194,221,167,6,205,50,238,93,185,90,253,226,166,168,168,147 };
    byte_vec_t pk { 3,8,105,35,59,31,69,150,157,19,119,171,18,167,235,10,156,125,108,142,225,68,126,168,54,4,165,63,254,124,195,41,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 509 ") {
    byte_vec_t msg { 169,125,180,20 };
    byte_vec_t sig { 179,234,173,17,147,173,11,250,216,143,34,160,68,28,7,240,136,170,166,61,244,212,13,107,68,135,213,139,254,206,7,244,154,236,58,210,220,25,148,115,120,66,225,144,85,189,255,168,203,207,64,11,140,228,235,142,213,51,41,177,161,173,175,88 };
    byte_vec_t pk { 4,53,237,77,67,218,157,210,180,126,247,193,255,41,190,132,236,124,5,167,213,211,171,135,230,201,122,30,127,43,26,22,107,84,175,208,154,69,161,129,199,182,232,99,107,215,204,219,168,201,25,108,253,221,216,210,127,155,209,75,157,100,183,60,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 509 ") {
    byte_vec_t msg { 32,61,127,13 };
    byte_vec_t sig { 206,24,15,80,139,241,238,88,123,149,223,223,250,34,138,108,53,153,100,69,114,66,176,190,187,132,250,127,145,147,120,93,9,116,165,48,175,208,25,104,108,113,183,22,78,160,130,117,135,251,86,163,25,172,201,23,32,41,145,204,1,58,69,240 };
    byte_vec_t pk { 4,170,115,150,60,217,91,86,215,73,69,92,189,189,115,134,63,46,10,35,165,107,160,60,212,116,34,138,55,121,179,149,176,161,149,238,227,221,200,250,115,136,150,45,207,141,206,214,178,150,28,36,54,177,129,20,212,199,139,105,29,29,19,132,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 509 ") {
    byte_vec_t msg { 223,95,61,182 };
    byte_vec_t sig { 21,230,78,123,41,153,83,196,39,218,90,3,189,61,44,227,70,130,222,6,2,92,162,23,72,157,131,150,81,36,196,192,54,39,209,206,207,37,182,68,49,176,252,251,86,30,43,138,199,209,41,23,133,75,229,113,148,231,152,7,137,71,165,161 };
    byte_vec_t pk { 3,137,223,24,58,5,236,26,78,239,240,209,196,66,196,9,196,39,224,55,193,4,119,63,191,169,191,108,234,135,1,119,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 509 ") {
    byte_vec_t msg { 55,45,104,250 };
    byte_vec_t sig { 105,216,210,131,157,246,177,249,38,3,135,47,121,54,174,147,115,153,233,7,28,125,59,111,78,175,105,45,216,202,28,52,220,9,7,135,47,148,145,215,189,125,121,129,73,7,229,170,116,109,80,150,102,238,226,52,36,203,38,165,92,222,183,251 };
    byte_vec_t pk { 2,136,134,43,8,138,194,146,127,38,117,250,61,144,191,41,211,99,221,33,14,28,94,240,234,211,255,208,100,198,40,200,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 510 ") {
    byte_vec_t msg { 240,11,240,68 };
    byte_vec_t sig { 184,203,179,246,47,20,248,213,78,126,59,218,20,75,0,64,248,169,183,14,218,132,162,37,31,61,177,56,228,151,84,194,150,248,23,252,114,236,51,223,105,44,206,255,141,139,39,110,207,243,181,195,233,37,134,49,231,61,127,6,62,253,190,117 };
    byte_vec_t pk { 4,94,100,222,0,163,69,195,53,96,190,89,235,86,31,83,235,146,12,45,111,183,166,169,41,158,168,188,206,229,180,55,211,202,202,202,153,235,61,6,165,106,156,54,200,108,115,245,15,77,55,91,168,209,249,228,134,150,159,148,196,49,59,96,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 510 ") {
    byte_vec_t msg { 203,57,80,154 };
    byte_vec_t sig { 29,177,238,70,225,142,182,47,244,169,179,37,99,71,238,24,2,15,176,251,159,173,33,238,235,138,176,121,71,63,174,172,231,172,22,44,86,199,1,202,245,58,163,124,214,231,57,61,193,66,30,145,143,201,41,67,174,249,177,88,46,38,250,198 };
    byte_vec_t pk { 4,112,91,83,124,94,255,62,137,73,205,102,154,11,191,171,81,74,66,210,183,18,218,192,153,99,253,52,92,170,107,191,116,186,141,8,212,145,11,220,30,43,246,172,81,67,16,113,113,98,194,197,138,130,228,158,148,225,251,166,98,25,216,17,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 510 ") {
    byte_vec_t msg { 161,251,241,37 };
    byte_vec_t sig { 16,40,72,69,167,244,222,191,250,121,20,176,53,254,21,18,108,183,2,229,33,240,125,83,246,159,222,19,109,0,239,194,118,78,223,107,42,20,132,186,185,193,136,132,113,53,249,63,169,196,105,141,192,236,83,215,59,4,115,9,183,71,33,227 };
    byte_vec_t pk { 2,184,136,222,228,203,7,35,21,111,57,18,77,81,223,192,155,95,57,163,252,30,79,140,93,199,142,32,86,87,181,48,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 510 ") {
    byte_vec_t msg { 184,173,21,65 };
    byte_vec_t sig { 121,5,99,185,177,77,88,200,244,139,7,175,99,50,153,187,222,58,247,20,23,196,68,182,60,65,248,191,252,10,98,176,219,42,236,24,61,121,81,148,103,128,12,156,159,213,126,184,0,16,142,47,99,151,199,44,215,8,243,222,104,71,212,52 };
    byte_vec_t pk { 2,82,69,66,55,108,173,212,33,246,235,231,235,135,243,254,189,13,189,135,12,86,193,0,83,62,15,220,143,72,175,245,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 511 ") {
    byte_vec_t msg { 198,97,113,98 };
    byte_vec_t sig { 34,167,206,19,26,80,134,202,129,59,121,97,205,236,65,43,248,133,194,31,94,95,100,118,0,168,96,90,46,218,232,213,12,25,187,86,228,233,136,86,229,144,42,231,188,1,180,200,37,28,17,130,139,56,119,12,227,199,145,191,53,20,215,235 };
    byte_vec_t pk { 4,185,38,141,96,64,230,62,229,16,150,129,108,57,10,239,52,105,159,18,157,246,74,62,178,93,47,196,231,197,37,213,190,252,131,95,88,34,240,17,98,29,22,105,154,93,222,163,253,145,191,229,165,67,128,70,129,226,164,20,128,174,231,125,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 511 ") {
    byte_vec_t msg { 221,233,217,38 };
    byte_vec_t sig { 113,50,238,3,253,206,100,126,88,84,128,115,93,69,191,60,37,44,27,163,156,239,146,210,13,118,38,184,126,176,80,245,236,58,173,159,222,65,104,182,49,156,143,53,149,180,101,120,46,8,142,241,6,146,198,89,240,124,130,190,89,106,132,6 };
    byte_vec_t pk { 4,188,170,115,139,127,9,36,85,19,253,220,197,150,83,6,136,101,142,167,213,22,155,144,161,225,140,20,174,29,13,100,204,42,157,12,27,247,42,255,179,221,87,248,251,241,27,223,29,17,85,78,237,84,30,47,189,169,233,10,74,243,188,76,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 511 ") {
    byte_vec_t msg { 38,140,2,87 };
    byte_vec_t sig { 212,86,169,169,11,248,20,142,174,117,237,244,58,198,164,174,251,196,207,109,181,133,103,168,77,138,188,172,63,52,36,229,208,10,135,67,29,253,211,93,221,140,46,161,115,151,53,215,224,199,71,120,199,232,187,204,151,40,211,118,84,118,175,180 };
    byte_vec_t pk { 3,164,226,45,109,33,120,92,237,118,16,202,5,86,22,6,112,234,69,123,55,147,254,157,223,172,177,190,155,104,1,0,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 511 ") {
    byte_vec_t msg { 170,244,136,248 };
    byte_vec_t sig { 95,49,213,26,84,135,162,36,13,89,186,176,0,159,216,154,197,147,27,8,254,170,47,218,251,48,210,225,48,230,177,13,110,208,217,161,53,250,148,62,212,105,16,75,166,12,44,96,42,112,1,251,156,235,195,191,227,176,52,109,25,48,115,91 };
    byte_vec_t pk { 2,135,207,90,141,40,95,94,210,23,28,11,133,51,210,139,45,196,243,99,245,220,120,212,233,179,63,130,222,146,66,178,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 512 ") {
    byte_vec_t msg { 73,136,65,228 };
    byte_vec_t sig { 26,101,241,60,175,241,88,227,164,139,222,79,213,63,143,236,112,73,160,152,33,151,243,121,96,208,51,45,23,235,173,160,44,245,75,26,170,79,54,134,224,197,181,42,38,91,121,139,10,175,194,162,255,15,169,144,106,190,144,252,254,224,94,217 };
    byte_vec_t pk { 4,94,214,248,222,64,246,74,195,120,168,160,6,75,145,244,201,245,51,7,225,224,103,237,234,65,67,65,100,59,52,68,180,32,67,145,215,116,0,42,101,144,186,72,188,47,120,65,224,133,213,15,214,153,78,186,208,158,145,200,86,241,240,60,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 512 ") {
    byte_vec_t msg { 106,120,131,122 };
    byte_vec_t sig { 238,160,230,205,20,160,97,68,220,149,72,117,86,179,133,117,71,34,99,4,221,59,87,122,33,156,186,98,255,24,193,210,78,33,216,29,66,18,244,55,102,60,67,226,110,45,68,180,111,30,8,253,34,105,19,138,255,184,52,198,142,91,25,163 };
    byte_vec_t pk { 4,120,218,93,72,220,94,93,110,26,215,21,106,253,44,99,72,29,42,18,14,60,232,124,194,87,42,194,154,255,245,217,53,162,189,7,185,121,129,212,18,93,74,74,226,204,225,165,124,18,120,143,43,229,76,123,59,10,176,34,106,223,239,185,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 512 ") {
    byte_vec_t msg { 140,203,176,7 };
    byte_vec_t sig { 250,79,39,188,172,242,237,104,59,120,13,166,215,149,199,226,177,167,147,4,126,190,53,47,207,106,186,140,178,62,228,225,124,58,102,225,75,74,240,145,171,19,149,85,168,197,169,137,70,111,108,19,142,130,75,98,24,126,59,90,163,209,64,107 };
    byte_vec_t pk { 2,94,32,165,209,52,174,38,85,226,235,36,232,139,121,180,26,225,42,79,25,133,104,7,150,139,132,217,149,119,63,56,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 512 ") {
    byte_vec_t msg { 78,237,10,251 };
    byte_vec_t sig { 61,53,98,70,51,64,79,244,190,188,144,89,189,159,157,139,97,3,156,162,194,121,161,225,191,54,124,82,245,124,105,29,15,117,63,250,92,98,186,174,6,4,190,215,132,48,106,7,30,58,129,138,49,80,10,93,227,174,205,216,178,187,6,248 };
    byte_vec_t pk { 3,162,38,81,138,160,189,236,249,24,129,177,49,204,173,60,156,115,12,55,255,8,90,106,196,72,183,211,155,86,213,161,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 513 ") {
    byte_vec_t msg { 39,210,15,220 };
    byte_vec_t sig { 141,15,226,79,144,0,252,26,78,35,155,22,71,132,65,56,199,91,164,26,86,92,27,191,216,195,38,45,4,124,91,180,141,20,39,65,42,50,155,97,122,27,133,84,219,173,68,43,29,166,170,74,32,17,209,51,204,129,199,38,86,33,31,202 };
    byte_vec_t pk { 4,79,13,163,181,63,153,174,8,113,137,220,134,29,78,162,105,57,195,144,90,150,63,30,12,207,157,91,81,50,95,39,93,154,177,136,92,2,133,236,249,247,87,139,122,140,186,10,84,195,108,225,212,27,24,114,209,245,88,134,40,148,152,166,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 513 ") {
    byte_vec_t msg { 113,148,198,78 };
    byte_vec_t sig { 219,188,218,155,250,39,203,219,203,247,118,193,169,74,254,181,253,150,3,146,182,136,11,192,97,43,222,40,69,54,162,200,34,227,77,97,139,242,105,99,15,238,92,32,155,15,70,131,32,76,61,58,121,102,43,130,156,73,14,24,17,1,95,236 };
    byte_vec_t pk { 4,208,252,171,12,31,104,242,154,119,131,174,236,16,13,131,110,215,102,181,194,245,157,176,179,57,176,50,51,254,127,168,231,134,136,97,16,255,125,219,142,178,204,141,44,69,3,209,38,202,142,133,19,121,251,72,15,232,191,137,242,90,77,131,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 513 ") {
    byte_vec_t msg { 3,89,129,139 };
    byte_vec_t sig { 18,168,99,36,244,5,55,134,236,25,234,221,15,219,158,77,203,120,243,222,220,160,4,182,230,93,29,102,65,217,153,37,90,156,131,78,197,73,201,180,108,57,242,230,50,123,28,8,160,245,36,140,168,30,252,165,91,51,19,36,133,176,4,51 };
    byte_vec_t pk { 3,88,154,144,252,112,47,231,212,59,42,68,123,142,33,140,243,161,37,156,121,21,184,237,205,130,121,2,73,60,90,252,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 513 ") {
    byte_vec_t msg { 185,113,189,20 };
    byte_vec_t sig { 180,17,38,40,234,208,170,202,233,6,219,52,2,197,44,165,126,180,164,168,55,143,230,229,11,236,57,198,212,242,195,153,73,47,96,98,1,71,48,74,128,170,7,101,153,98,124,33,87,28,75,194,175,190,236,29,75,57,19,206,104,17,157,11 };
    byte_vec_t pk { 2,153,38,119,244,84,204,83,136,117,73,78,101,228,192,236,137,189,251,67,80,218,214,249,43,136,98,101,197,88,97,30,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 514 ") {
    byte_vec_t msg { 197,189,16,128 };
    byte_vec_t sig { 190,37,5,118,166,35,202,137,187,83,46,156,109,116,194,71,167,10,13,60,217,31,180,223,4,59,196,15,209,234,210,209,249,65,204,42,151,226,81,188,92,221,201,25,182,239,128,115,10,177,62,187,55,169,55,11,180,110,170,101,166,202,46,113 };
    byte_vec_t pk { 4,251,37,79,121,200,245,117,124,162,4,232,85,65,249,207,147,220,92,7,178,104,82,161,181,0,119,38,139,204,200,195,95,149,147,100,144,56,78,31,157,27,127,111,181,245,6,110,95,60,6,96,194,228,175,38,215,253,95,9,41,55,91,190,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 514 ") {
    byte_vec_t msg { 48,123,172,146 };
    byte_vec_t sig { 40,136,97,149,241,71,99,107,227,215,14,147,88,182,206,152,80,139,54,249,243,140,141,63,5,226,10,22,192,236,215,27,1,221,204,111,3,88,214,192,200,244,214,242,147,200,90,197,220,30,20,63,194,108,158,203,127,38,195,69,102,27,190,232 };
    byte_vec_t pk { 4,40,81,30,103,221,209,60,109,91,76,151,148,5,106,91,248,187,240,151,30,101,213,205,158,69,44,102,180,67,224,189,104,205,199,195,80,115,4,243,114,219,161,236,107,187,57,128,24,134,31,25,52,188,132,18,146,201,155,45,70,28,80,140,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 514 ") {
    byte_vec_t msg { 130,109,16,133 };
    byte_vec_t sig { 134,199,232,58,66,88,93,233,90,53,30,181,77,135,222,161,99,188,66,157,86,184,222,12,88,76,196,131,188,50,66,247,155,21,42,62,147,1,131,114,195,42,45,172,156,180,63,15,207,45,95,66,177,216,5,46,153,135,20,244,202,41,82,89 };
    byte_vec_t pk { 2,90,169,28,228,84,213,16,206,8,209,28,4,64,138,61,153,226,89,185,45,145,211,73,7,230,240,187,75,188,113,215,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 514 ") {
    byte_vec_t msg { 156,182,233,172 };
    byte_vec_t sig { 32,234,120,221,135,223,159,141,105,35,67,45,77,242,155,231,240,7,106,192,26,59,195,230,27,233,52,224,187,40,216,118,151,53,123,131,185,245,221,247,246,24,38,152,235,226,23,61,94,126,34,99,146,231,182,156,82,119,98,96,196,183,69,199 };
    byte_vec_t pk { 2,254,53,209,181,114,44,191,244,140,252,143,185,79,46,241,95,166,127,95,58,169,164,174,213,162,202,220,151,189,151,21,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 515 ") {
    byte_vec_t msg { 217,11,156,66 };
    byte_vec_t sig { 150,175,81,163,184,35,23,132,221,246,185,186,26,153,66,212,19,38,230,41,179,37,56,108,86,240,2,47,161,255,5,246,24,46,223,168,191,145,59,131,200,133,137,73,151,3,44,97,1,44,101,22,58,29,209,27,192,20,213,108,212,205,51,22 };
    byte_vec_t pk { 4,157,171,230,24,89,63,88,108,96,80,63,93,42,165,56,98,198,108,31,65,9,55,102,41,70,248,5,105,213,226,1,105,120,212,41,220,106,108,230,172,183,130,126,12,232,251,77,129,116,215,166,242,67,27,118,114,62,209,100,194,5,238,253,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 515 ") {
    byte_vec_t msg { 126,61,108,37 };
    byte_vec_t sig { 69,37,221,41,63,119,28,16,42,80,47,161,77,190,219,223,29,179,29,152,3,197,79,250,22,60,108,201,147,208,246,161,57,77,41,69,167,125,122,154,120,124,136,158,220,216,148,158,129,142,190,36,52,117,90,213,47,126,120,176,241,154,213,169 };
    byte_vec_t pk { 4,68,62,19,68,255,72,222,167,209,163,139,183,95,68,138,114,149,10,84,252,49,124,209,39,221,252,91,136,89,123,158,218,209,240,31,186,196,204,192,216,83,125,141,86,113,30,106,101,44,75,149,177,176,246,122,111,44,222,48,177,202,25,246,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 515 ") {
    byte_vec_t msg { 110,246,187,190 };
    byte_vec_t sig { 172,193,169,108,228,238,139,54,45,28,51,73,168,64,105,51,94,103,177,132,94,248,238,210,84,175,234,68,45,76,61,15,185,215,104,240,136,2,24,245,216,241,41,214,192,152,117,249,39,22,44,220,219,53,203,212,220,79,135,167,0,150,216,124 };
    byte_vec_t pk { 3,65,88,172,219,199,40,81,165,94,31,158,232,177,148,146,6,35,114,27,253,8,32,237,37,52,59,31,1,248,131,99,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 515 ") {
    byte_vec_t msg { 245,113,186,128 };
    byte_vec_t sig { 156,25,68,76,194,195,26,224,154,224,232,209,17,128,71,51,77,101,227,200,196,173,99,18,110,227,40,212,37,254,254,235,131,67,110,66,159,58,35,187,212,132,115,34,119,50,182,25,65,176,154,250,134,55,218,138,143,1,223,192,183,220,187,175 };
    byte_vec_t pk { 2,61,79,91,165,147,86,187,247,162,133,193,161,237,252,79,41,52,44,220,82,26,222,106,158,134,204,215,114,140,99,139,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 516 ") {
    byte_vec_t msg { 233,219,103,51 };
    byte_vec_t sig { 212,101,180,95,249,87,96,45,183,207,213,229,3,40,163,13,117,178,32,79,230,83,171,49,152,183,6,66,224,157,217,240,174,191,91,179,2,51,248,41,51,190,180,16,198,178,134,82,197,113,77,65,109,78,235,11,252,249,100,161,59,159,144,153 };
    byte_vec_t pk { 4,63,61,190,228,102,235,16,8,180,179,23,99,57,81,166,208,235,111,45,243,121,204,126,232,157,45,102,203,204,239,147,219,154,42,76,118,97,233,216,52,190,129,71,53,66,55,127,85,170,111,214,250,223,114,52,93,148,201,116,187,57,138,223,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 516 ") {
    byte_vec_t msg { 63,71,163,105 };
    byte_vec_t sig { 129,4,181,95,154,197,55,126,194,66,243,141,192,223,17,110,251,156,215,219,110,116,230,158,206,229,218,229,65,212,78,99,161,210,235,226,250,178,22,90,255,211,94,44,221,116,108,170,71,83,7,194,189,65,33,206,203,242,61,247,227,86,5,96 };
    byte_vec_t pk { 4,65,117,131,202,34,238,74,152,28,72,98,187,184,20,144,154,23,167,101,33,6,71,18,118,195,149,169,234,29,154,33,204,67,100,211,217,67,1,106,7,129,235,100,139,112,123,4,16,36,161,135,5,151,118,129,157,101,29,187,22,48,138,104,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 516 ") {
    byte_vec_t msg { 185,150,52,109 };
    byte_vec_t sig { 7,10,230,240,243,198,145,215,157,35,237,167,92,62,33,16,178,201,201,1,52,6,231,52,2,142,82,30,251,192,51,185,92,68,244,21,172,165,90,224,114,38,96,223,211,27,204,147,152,96,160,169,29,55,238,67,64,254,172,161,112,171,148,218 };
    byte_vec_t pk { 3,100,89,170,15,169,66,156,137,43,8,48,22,44,17,165,94,154,95,78,178,96,210,24,193,90,39,206,155,219,234,61,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 516 ") {
    byte_vec_t msg { 191,156,40,176 };
    byte_vec_t sig { 253,211,138,28,106,103,150,218,14,191,218,246,27,45,190,36,243,136,90,140,92,99,60,197,157,151,75,139,221,103,67,18,212,16,2,60,222,160,160,89,249,135,149,177,96,167,2,158,66,198,67,12,205,217,34,157,142,7,96,58,166,11,9,29 };
    byte_vec_t pk { 2,142,140,183,51,225,64,244,60,73,161,133,16,29,191,19,222,182,204,64,180,58,201,121,56,135,44,47,63,239,195,46,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 517 ") {
    byte_vec_t msg { 134,6,182,193 };
    byte_vec_t sig { 95,105,6,26,237,39,96,171,168,60,151,199,101,156,218,129,97,31,157,150,237,219,31,198,246,78,66,62,181,161,128,88,35,219,225,145,224,108,129,228,105,28,155,71,168,115,154,254,28,129,100,198,73,173,221,162,79,162,33,108,166,137,224,85 };
    byte_vec_t pk { 4,197,241,224,174,204,63,45,35,188,86,178,41,211,121,223,89,127,166,237,159,27,81,86,111,171,202,27,156,163,181,48,161,134,176,92,115,144,14,119,95,44,192,114,26,145,42,219,27,238,177,63,119,233,124,29,126,190,176,84,199,132,29,162,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 517 ") {
    byte_vec_t msg { 73,143,70,94 };
    byte_vec_t sig { 47,30,183,35,163,42,44,58,53,33,83,174,129,241,94,118,34,4,201,112,191,148,11,114,144,14,229,50,45,246,208,1,197,207,129,145,46,66,26,104,142,27,33,97,111,143,25,232,20,173,93,7,208,244,162,127,254,150,141,41,174,207,139,113 };
    byte_vec_t pk { 4,171,246,118,205,156,71,54,244,71,148,78,2,63,148,73,3,9,66,234,43,99,55,215,16,182,244,48,99,2,41,70,93,238,129,14,128,32,179,213,32,166,158,200,72,240,49,63,103,61,199,146,56,72,222,7,18,228,162,214,207,199,139,251,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 517 ") {
    byte_vec_t msg { 192,203,233,152 };
    byte_vec_t sig { 93,98,68,149,116,228,101,111,113,120,198,70,2,25,186,65,5,183,121,162,133,128,238,87,92,104,206,103,228,116,120,255,225,236,83,163,39,173,0,170,216,159,76,250,90,8,175,207,65,238,65,158,57,121,125,128,111,202,176,254,162,60,72,68 };
    byte_vec_t pk { 2,106,72,109,49,216,110,120,29,168,113,147,3,28,56,134,19,246,161,95,148,135,121,49,144,214,14,60,223,140,42,171,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 517 ") {
    byte_vec_t msg { 24,113,128,71 };
    byte_vec_t sig { 232,95,42,89,8,202,103,171,197,81,44,163,76,212,18,124,161,218,136,179,99,13,178,151,12,45,118,1,25,180,28,141,109,17,164,119,183,197,180,116,229,207,72,9,63,122,174,177,45,135,196,201,22,199,170,67,192,125,49,155,61,83,80,56 };
    byte_vec_t pk { 3,175,254,212,226,37,26,77,110,9,121,4,218,57,243,71,103,68,240,173,214,3,18,132,70,103,14,73,11,76,226,208,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 518 ") {
    byte_vec_t msg { 244,130,3,89 };
    byte_vec_t sig { 187,68,158,6,113,185,185,225,142,135,196,105,91,141,201,96,81,34,65,198,215,201,209,43,233,200,221,229,190,50,6,217,109,51,109,221,30,72,240,30,61,38,107,19,45,219,205,33,236,234,71,135,177,162,115,66,115,74,158,193,94,83,68,69 };
    byte_vec_t pk { 4,39,169,37,166,244,7,127,155,47,142,53,116,83,28,204,153,186,118,238,142,159,17,166,212,212,245,166,176,166,73,4,54,189,183,189,52,131,100,138,182,168,58,124,214,85,173,146,155,211,19,22,161,50,251,4,195,200,86,112,224,40,108,121,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 518 ") {
    byte_vec_t msg { 133,255,214,125 };
    byte_vec_t sig { 183,119,30,68,205,10,183,22,54,190,20,121,169,103,132,220,96,50,96,233,214,230,234,161,38,59,95,18,114,220,180,74,130,40,6,215,78,79,168,58,249,249,181,181,87,144,177,228,51,6,73,16,72,44,147,144,194,5,217,217,171,254,80,161 };
    byte_vec_t pk { 4,139,177,196,182,208,210,118,66,212,184,252,243,196,137,37,216,235,250,215,105,231,172,179,19,117,248,207,118,186,189,127,231,249,164,76,211,196,229,178,148,208,229,136,223,161,187,22,17,32,107,48,245,174,84,104,51,221,31,33,26,194,192,192,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 518 ") {
    byte_vec_t msg { 221,153,4,63 };
    byte_vec_t sig { 222,255,171,236,73,232,210,3,239,67,204,53,131,146,71,210,226,12,224,85,249,163,238,20,25,182,93,54,24,118,222,254,171,178,230,123,246,8,150,122,18,238,232,134,95,94,14,255,141,111,45,132,240,91,197,250,80,136,222,102,116,197,55,150 };
    byte_vec_t pk { 2,232,89,58,216,95,109,40,63,168,236,91,94,160,118,192,91,128,80,62,236,106,188,59,105,219,189,205,114,171,201,187,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 518 ") {
    byte_vec_t msg { 61,179,113,231 };
    byte_vec_t sig { 34,119,121,87,139,48,208,117,10,213,94,186,171,40,48,186,186,112,46,157,95,93,58,64,59,237,104,108,133,248,33,202,40,188,11,237,42,207,116,110,164,21,72,130,206,54,45,52,226,58,190,134,130,225,125,115,222,147,210,167,35,15,115,51 };
    byte_vec_t pk { 2,48,95,54,207,78,0,24,237,206,133,234,248,33,52,244,116,216,15,180,15,158,73,231,35,125,210,170,49,63,223,54,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 519 ") {
    byte_vec_t msg { 145,192,174,12 };
    byte_vec_t sig { 75,252,82,52,71,128,155,123,177,250,225,118,68,20,15,184,219,230,255,5,36,211,241,204,41,101,1,213,67,149,26,155,128,169,22,243,89,215,228,252,174,115,90,84,41,133,22,5,209,234,69,160,112,0,90,174,162,85,0,67,226,149,236,97 };
    byte_vec_t pk { 4,230,216,242,176,171,19,123,79,253,199,247,82,167,133,53,191,4,199,34,149,48,126,115,125,246,249,240,210,250,206,195,212,179,122,171,83,54,28,102,207,215,108,56,173,64,198,53,175,74,162,168,222,161,60,97,200,213,23,167,219,227,234,209,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 519 ") {
    byte_vec_t msg { 81,128,245,140 };
    byte_vec_t sig { 100,3,78,100,56,167,102,176,27,58,109,143,147,145,11,70,149,88,68,133,26,26,95,81,164,226,223,98,215,145,118,238,118,94,7,1,139,74,179,161,17,134,217,200,213,130,44,104,19,62,253,211,10,211,4,152,77,181,68,191,15,113,144,43 };
    byte_vec_t pk { 4,139,5,88,241,223,191,185,161,41,55,255,199,199,199,226,152,108,111,185,200,63,28,138,72,38,99,116,65,83,46,140,21,171,221,81,64,237,122,8,164,213,69,102,87,16,40,221,28,242,20,10,156,146,18,182,45,47,97,170,145,158,135,154,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 519 ") {
    byte_vec_t msg { 185,69,108,175 };
    byte_vec_t sig { 159,133,88,181,242,214,138,157,244,175,85,42,239,251,36,43,82,196,151,217,15,146,58,55,109,244,116,85,45,168,227,50,112,109,162,242,22,229,212,199,84,235,71,151,63,201,131,78,63,124,241,240,255,195,199,254,151,87,128,95,191,132,144,120 };
    byte_vec_t pk { 3,184,222,91,169,224,237,105,56,162,193,122,55,79,96,88,198,7,132,170,7,82,0,197,3,69,20,118,127,93,11,193,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 519 ") {
    byte_vec_t msg { 80,224,205,111 };
    byte_vec_t sig { 53,17,140,73,70,197,19,249,182,224,239,159,102,39,49,219,185,118,210,63,160,39,192,182,89,185,23,238,239,171,153,214,138,58,27,198,227,252,35,219,50,35,40,155,153,56,35,194,186,152,174,51,176,213,235,248,159,137,139,98,55,139,84,156 };
    byte_vec_t pk { 3,190,90,48,250,15,28,247,118,113,200,137,52,2,247,220,148,105,76,125,181,38,82,144,20,74,107,183,141,104,74,162,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 520 ") {
    byte_vec_t msg { 197,233,84,80 };
    byte_vec_t sig { 241,248,98,159,141,2,68,156,24,26,67,3,175,1,93,53,168,223,209,16,24,148,49,194,90,203,126,0,13,76,86,50,158,27,151,247,206,149,158,52,48,112,252,101,2,200,115,221,67,104,80,138,241,78,53,63,9,145,234,203,153,225,212,36 };
    byte_vec_t pk { 4,154,112,200,3,206,7,252,255,136,0,236,113,100,80,162,189,159,61,19,21,130,182,163,49,234,9,40,199,233,69,38,35,254,224,85,18,148,136,126,118,93,83,116,122,215,117,28,143,224,196,13,24,56,199,253,225,198,23,89,103,176,4,94,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 520 ") {
    byte_vec_t msg { 140,146,23,61 };
    byte_vec_t sig { 137,26,124,223,240,243,218,57,63,203,8,68,214,12,238,127,75,144,252,101,149,56,206,0,102,28,223,188,101,135,28,8,38,242,163,179,136,207,43,34,119,55,152,230,241,192,206,233,149,253,39,60,43,25,127,165,249,119,83,214,10,202,21,94 };
    byte_vec_t pk { 4,19,66,121,131,246,181,250,66,70,43,182,27,171,175,36,108,47,101,213,125,174,188,117,245,125,236,167,109,214,239,149,21,209,74,71,167,22,96,173,118,173,209,117,229,67,46,114,133,163,17,224,60,95,208,127,205,117,225,226,7,38,214,36,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 520 ") {
    byte_vec_t msg { 38,111,26,42 };
    byte_vec_t sig { 3,86,218,69,46,28,94,51,253,132,174,164,120,75,158,160,59,76,76,235,123,6,173,7,178,200,59,69,83,15,41,88,34,204,205,17,55,169,52,144,43,160,143,34,134,204,153,168,253,12,119,39,155,189,228,217,223,251,166,115,97,82,208,215 };
    byte_vec_t pk { 2,155,37,245,36,207,250,30,4,89,203,236,77,149,251,94,185,26,194,36,219,5,1,255,13,61,203,223,105,177,103,63,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 520 ") {
    byte_vec_t msg { 125,70,187,78 };
    byte_vec_t sig { 113,161,166,210,133,205,37,139,5,40,66,137,185,4,1,175,36,13,154,188,188,163,104,160,3,178,49,95,218,49,78,18,243,100,176,2,172,46,170,132,97,27,150,179,92,16,186,193,10,121,20,39,190,123,2,52,251,94,46,217,210,153,176,25 };
    byte_vec_t pk { 2,202,90,29,45,172,150,39,45,242,53,128,51,213,44,140,179,132,157,104,168,212,187,140,163,124,120,102,81,243,21,90,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 521 ") {
    byte_vec_t msg { 1,42,179,247 };
    byte_vec_t sig { 62,86,254,32,11,175,216,181,73,155,202,168,246,191,55,253,158,235,60,8,17,152,232,36,113,203,203,63,109,97,12,106,154,62,88,43,168,241,97,115,8,53,171,19,218,31,231,151,172,39,236,200,210,171,12,47,229,94,177,165,91,236,163,29 };
    byte_vec_t pk { 4,204,49,233,234,219,112,149,148,85,51,165,141,233,134,71,3,29,26,117,99,228,254,61,70,88,128,161,204,83,162,153,236,234,109,186,205,27,127,67,16,244,27,248,129,100,79,229,243,135,125,176,206,182,230,210,141,50,197,115,35,150,243,5,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 521 ") {
    byte_vec_t msg { 226,253,194,252 };
    byte_vec_t sig { 61,55,83,96,181,239,2,203,229,107,84,247,99,128,127,137,76,91,11,156,213,131,123,155,68,4,21,1,185,59,234,73,106,163,27,82,181,72,14,6,19,14,192,196,244,186,185,15,210,233,191,61,236,34,200,22,4,238,255,241,144,28,72,181 };
    byte_vec_t pk { 4,24,66,46,79,120,179,3,84,192,234,199,238,246,94,63,112,49,63,248,90,152,167,58,177,149,164,105,48,20,103,54,205,87,171,221,231,135,221,66,45,110,12,212,234,172,220,9,214,169,240,169,195,220,109,70,125,108,144,109,46,238,204,34,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 521 ") {
    byte_vec_t msg { 53,17,13,213 };
    byte_vec_t sig { 109,155,248,107,131,186,131,53,55,172,85,137,183,85,20,8,223,193,16,18,98,89,105,149,105,95,247,218,133,7,4,2,115,104,231,222,145,1,181,235,207,214,187,18,99,23,227,61,142,56,86,60,86,236,113,137,79,33,212,11,121,177,38,161 };
    byte_vec_t pk { 3,147,197,24,165,75,115,162,134,53,60,234,24,138,223,233,180,1,210,227,225,84,76,35,204,18,114,237,61,104,185,131,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 521 ") {
    byte_vec_t msg { 158,246,27,116 };
    byte_vec_t sig { 254,176,85,219,198,52,159,60,239,168,163,220,118,69,183,210,10,94,116,7,221,22,208,191,229,126,47,193,13,93,109,212,182,95,52,131,165,22,95,47,217,113,119,100,208,226,251,141,185,248,87,32,5,44,233,244,138,75,37,77,69,11,49,156 };
    byte_vec_t pk { 2,72,197,3,13,61,134,200,185,219,126,70,231,35,104,228,208,172,207,100,211,78,132,166,71,106,115,4,183,132,187,241,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 522 ") {
    byte_vec_t msg { 253,137,70,140 };
    byte_vec_t sig { 221,111,80,4,115,242,57,5,232,127,157,50,150,12,142,36,145,31,106,40,124,131,8,92,84,181,209,19,114,133,57,124,173,248,10,172,39,161,155,248,22,132,102,176,30,159,120,5,146,198,11,102,172,174,223,34,165,181,229,60,47,150,221,56 };
    byte_vec_t pk { 4,122,236,228,9,202,149,91,132,238,20,17,5,224,213,43,134,104,181,66,165,238,251,158,151,97,206,39,250,1,185,128,213,7,44,114,9,133,197,188,178,252,7,168,141,66,240,185,250,181,117,165,163,127,189,170,31,177,52,128,90,205,168,33,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 522 ") {
    byte_vec_t msg { 130,155,130,230 };
    byte_vec_t sig { 187,152,69,75,167,185,189,30,61,20,69,117,139,178,48,85,135,187,129,57,169,199,32,153,50,70,189,34,194,231,2,232,232,139,166,111,238,128,253,159,255,155,226,169,242,64,29,33,217,127,236,48,133,225,117,202,64,46,23,170,184,41,233,52 };
    byte_vec_t pk { 4,166,83,199,205,148,230,232,184,195,41,84,85,81,156,119,99,211,117,156,101,42,10,233,39,91,187,124,240,18,224,151,208,238,102,191,138,136,217,8,125,246,2,248,133,57,212,98,207,186,184,159,164,7,176,42,28,6,22,182,73,160,135,144,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 522 ") {
    byte_vec_t msg { 236,210,119,80 };
    byte_vec_t sig { 139,245,63,197,107,64,183,31,122,44,120,30,1,242,12,48,221,190,239,130,65,63,174,13,187,227,64,236,21,17,71,200,169,218,191,249,158,1,231,253,95,44,91,182,150,38,152,112,14,10,73,28,29,234,160,145,199,23,161,52,236,230,17,237 };
    byte_vec_t pk { 3,158,246,191,163,252,154,51,11,196,252,199,187,112,214,151,159,67,42,226,163,211,77,76,27,255,239,22,121,120,178,157,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 522 ") {
    byte_vec_t msg { 230,27,211,53 };
    byte_vec_t sig { 157,52,228,51,58,236,98,2,57,179,30,159,224,247,173,148,180,35,250,234,179,12,165,112,159,239,218,244,51,223,161,188,53,176,108,245,219,248,173,175,197,236,211,25,54,232,62,38,122,154,135,225,127,107,216,20,218,15,193,93,10,53,76,57 };
    byte_vec_t pk { 2,223,77,115,106,11,10,182,104,34,3,178,174,64,64,29,3,82,165,106,173,238,66,154,132,152,72,234,245,160,195,168,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 523 ") {
    byte_vec_t msg { 20,54,31,180 };
    byte_vec_t sig { 195,118,248,62,29,207,181,204,21,211,161,108,230,205,116,65,142,55,130,14,116,39,159,239,169,133,99,168,98,160,78,158,73,254,136,8,91,37,38,61,115,156,56,151,69,97,53,188,94,1,26,229,208,99,14,60,69,244,242,144,178,16,192,232 };
    byte_vec_t pk { 4,128,190,201,54,75,144,99,201,237,204,52,186,241,183,88,177,217,61,207,129,173,23,211,227,110,86,156,239,156,75,17,111,68,113,165,140,211,68,106,130,237,250,48,187,130,144,158,85,204,43,248,59,178,208,233,216,196,226,175,0,14,55,173,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 523 ") {
    byte_vec_t msg { 143,18,52,108 };
    byte_vec_t sig { 189,230,164,7,217,212,113,100,236,87,120,47,2,94,243,176,162,149,29,40,203,10,177,64,101,52,212,224,242,81,9,31,166,206,108,87,64,141,233,60,57,114,199,121,9,124,135,194,123,208,254,200,201,14,93,109,81,119,116,183,253,9,225,103 };
    byte_vec_t pk { 4,12,183,144,242,153,180,21,58,183,206,222,138,37,113,232,246,134,196,201,21,173,136,102,184,77,106,19,146,226,62,47,202,122,17,99,196,65,14,222,241,164,79,54,18,158,234,61,31,227,171,232,22,169,117,245,64,3,203,17,239,216,40,181,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 523 ") {
    byte_vec_t msg { 150,170,53,206 };
    byte_vec_t sig { 125,236,221,150,199,119,201,92,41,88,90,163,65,40,242,222,57,125,202,59,195,137,23,250,34,165,136,58,7,190,229,31,47,71,64,216,159,72,193,19,202,66,74,51,69,18,6,124,97,194,180,142,224,164,28,127,109,237,179,242,197,94,102,60 };
    byte_vec_t pk { 3,77,185,113,246,4,239,8,164,26,249,235,34,194,166,70,209,81,102,54,91,175,248,72,87,78,17,24,193,235,248,66,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 523 ") {
    byte_vec_t msg { 93,58,213,67 };
    byte_vec_t sig { 242,79,84,27,64,177,40,64,37,31,95,241,121,122,207,107,188,12,47,88,233,173,206,16,206,137,25,162,71,118,39,76,147,85,181,59,67,147,250,10,175,121,84,65,212,84,17,67,27,190,38,161,142,42,238,68,245,207,41,5,242,88,88,13 };
    byte_vec_t pk { 2,164,147,70,218,145,85,204,31,156,160,133,2,131,160,42,98,158,239,224,76,37,173,23,77,68,160,202,139,44,55,218,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 524 ") {
    byte_vec_t msg { 127,46,19,86 };
    byte_vec_t sig { 31,208,193,2,161,170,171,235,27,110,156,31,73,234,197,217,17,88,47,34,35,213,61,55,10,1,227,23,35,37,181,55,142,124,112,68,52,80,120,62,133,14,244,114,64,122,22,36,207,236,57,171,162,16,200,37,171,207,244,241,87,11,31,191 };
    byte_vec_t pk { 4,176,119,224,16,138,194,111,216,185,110,80,95,160,66,86,187,220,52,166,79,147,97,48,220,175,133,163,193,104,42,94,169,39,124,236,255,141,34,188,109,71,35,237,234,191,143,114,150,134,183,29,75,152,7,130,115,233,138,214,248,46,49,120,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 524 ") {
    byte_vec_t msg { 132,82,210,185 };
    byte_vec_t sig { 249,252,74,62,127,116,192,223,203,218,136,184,109,126,191,161,21,3,135,203,232,183,14,254,45,155,89,242,251,77,242,11,29,167,92,148,6,238,214,82,217,65,99,99,188,185,174,101,3,63,207,210,82,236,57,223,174,97,240,103,115,225,15,16 };
    byte_vec_t pk { 4,27,133,135,83,168,23,125,208,129,105,91,177,0,194,218,21,69,109,216,56,206,27,50,175,125,47,26,242,193,77,133,171,198,71,148,6,39,242,70,159,69,140,74,21,11,183,205,132,206,226,161,127,5,45,189,39,223,54,87,25,99,228,61,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 524 ") {
    byte_vec_t msg { 119,118,23,221 };
    byte_vec_t sig { 226,40,180,12,214,162,187,4,14,95,13,76,179,23,94,240,138,19,183,195,166,61,119,52,160,101,118,114,181,217,89,28,219,246,17,183,54,74,92,124,65,31,185,232,136,169,242,140,227,150,56,5,111,91,13,45,113,228,48,25,153,18,104,31 };
    byte_vec_t pk { 2,65,7,112,175,17,90,10,75,247,18,144,97,98,75,137,109,55,94,149,199,92,51,222,12,51,207,239,14,108,16,227,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 524 ") {
    byte_vec_t msg { 204,188,77,124 };
    byte_vec_t sig { 220,206,79,215,166,2,58,18,127,127,131,9,101,60,221,94,53,181,67,203,156,92,66,231,157,181,43,18,118,218,42,103,15,137,136,40,28,131,38,235,62,62,144,101,125,228,129,252,135,151,54,19,197,15,48,43,9,150,12,187,0,72,208,0 };
    byte_vec_t pk { 2,129,139,2,39,234,98,159,115,189,84,175,129,136,89,102,35,159,175,153,67,74,95,180,224,127,175,35,11,219,223,40,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 525 ") {
    byte_vec_t msg { 205,172,193,2 };
    byte_vec_t sig { 128,162,7,87,202,118,100,94,169,4,63,94,69,44,106,30,191,19,252,59,18,63,91,69,248,175,133,199,100,132,101,53,216,53,129,87,192,252,215,87,160,26,175,121,198,119,184,149,226,152,97,251,98,152,111,153,215,90,66,174,69,62,89,150 };
    byte_vec_t pk { 4,241,24,40,129,215,236,241,12,218,148,31,43,250,49,160,87,205,77,91,135,56,120,61,199,254,166,120,94,77,239,234,19,187,196,45,69,150,246,125,39,189,123,233,106,114,57,19,44,193,128,239,156,188,144,150,11,104,54,63,165,218,119,31,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 525 ") {
    byte_vec_t msg { 231,185,96,173 };
    byte_vec_t sig { 125,10,214,227,217,249,22,101,159,254,49,220,91,254,7,86,198,104,183,80,82,82,229,190,43,115,208,253,209,118,57,90,176,117,158,113,72,20,107,133,97,247,166,161,243,125,98,40,86,139,21,76,55,220,241,39,145,237,203,74,85,11,220,163 };
    byte_vec_t pk { 4,200,85,134,88,173,55,99,85,84,206,57,169,204,169,24,54,158,56,60,245,246,250,180,145,87,36,99,107,175,89,146,34,78,123,149,172,5,237,153,251,69,121,73,184,247,162,141,235,230,144,241,73,66,153,134,247,194,222,24,116,90,176,169,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 525 ") {
    byte_vec_t msg { 216,68,222,37 };
    byte_vec_t sig { 161,255,92,151,21,77,164,189,114,0,116,52,180,203,168,71,146,84,216,73,223,0,177,135,48,82,128,113,190,109,123,68,180,55,143,219,12,25,211,88,137,175,17,195,69,138,120,218,199,57,186,88,224,94,87,21,73,64,129,102,239,128,59,227 };
    byte_vec_t pk { 2,181,82,130,196,18,165,162,130,154,194,158,218,150,234,190,201,235,175,90,9,98,127,13,53,7,79,12,119,228,123,18,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 525 ") {
    byte_vec_t msg { 115,181,226,134 };
    byte_vec_t sig { 151,227,118,15,118,75,112,8,138,30,10,86,175,48,206,96,207,122,155,82,130,197,5,48,249,5,183,212,32,183,182,54,107,106,45,96,246,60,50,88,48,31,84,254,89,197,139,24,219,31,129,2,157,243,152,240,77,141,107,136,110,141,92,10 };
    byte_vec_t pk { 2,44,151,48,30,217,221,197,38,105,103,162,77,76,31,79,125,88,198,52,162,201,255,58,57,83,0,234,89,190,28,7,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 526 ") {
    byte_vec_t msg { 22,110,228,122 };
    byte_vec_t sig { 242,221,159,167,53,136,2,158,242,23,135,10,193,83,222,79,4,172,202,11,217,22,81,108,245,252,94,42,143,235,51,59,33,1,178,40,116,34,39,153,195,36,99,157,230,253,77,137,88,79,33,51,68,97,106,212,215,66,87,158,159,77,148,77 };
    byte_vec_t pk { 4,202,124,190,221,78,82,196,77,40,254,37,9,100,118,233,150,36,113,55,10,22,40,206,4,97,48,7,177,80,152,164,192,137,244,119,68,144,159,86,69,226,49,112,10,207,1,233,8,109,238,7,8,182,172,53,226,24,58,199,237,133,207,178,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 526 ") {
    byte_vec_t msg { 161,66,117,200 };
    byte_vec_t sig { 213,12,117,11,11,223,111,29,7,176,162,200,200,10,43,175,87,9,90,43,246,204,98,164,181,80,185,50,118,193,195,40,182,203,220,42,107,240,243,90,30,202,222,35,67,22,181,147,158,231,113,63,31,27,245,164,40,198,83,61,5,250,229,248 };
    byte_vec_t pk { 4,205,160,238,198,10,52,203,147,149,21,2,91,35,119,204,75,33,163,180,209,106,180,232,149,62,14,20,213,248,118,10,162,85,238,214,89,127,152,234,240,55,227,7,132,115,120,194,64,226,113,235,129,148,3,219,73,112,228,73,215,65,55,248,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 526 ") {
    byte_vec_t msg { 107,11,151,70 };
    byte_vec_t sig { 252,167,47,48,64,198,15,38,189,100,140,36,250,52,88,32,120,187,25,59,231,82,223,11,68,244,223,248,46,64,198,201,46,121,236,56,174,59,65,141,134,83,128,232,237,14,30,141,41,205,27,73,52,202,196,34,229,131,134,186,169,200,192,120 };
    byte_vec_t pk { 3,243,154,140,170,222,148,156,232,121,228,72,88,196,208,165,175,68,54,134,209,51,140,153,179,190,104,56,3,54,136,185,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 526 ") {
    byte_vec_t msg { 108,194,41,250 };
    byte_vec_t sig { 203,136,233,221,80,194,54,174,72,66,50,234,207,57,189,150,114,221,38,103,132,224,57,29,138,169,149,66,90,220,12,15,255,54,52,12,64,9,200,145,105,252,131,29,228,151,146,107,172,78,152,225,181,96,28,4,15,56,163,148,122,182,111,2 };
    byte_vec_t pk { 3,90,86,180,155,228,175,21,130,161,41,133,116,214,154,19,161,180,202,152,13,219,188,107,188,48,220,211,225,70,147,146,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 527 ") {
    byte_vec_t msg { 101,179,114,34 };
    byte_vec_t sig { 177,2,84,1,197,13,225,127,39,105,3,48,187,135,168,176,234,96,130,65,141,49,158,108,254,61,191,170,170,112,64,66,133,154,168,120,101,155,175,245,220,48,28,181,14,26,194,99,24,229,148,193,158,88,116,30,140,254,14,216,169,236,96,162 };
    byte_vec_t pk { 4,114,42,225,196,248,43,105,31,181,74,190,10,249,102,150,164,174,29,216,127,72,161,243,250,14,195,232,46,241,100,15,26,217,2,147,183,129,151,247,47,80,148,176,194,60,64,197,138,223,0,123,242,192,146,244,7,228,92,21,192,181,128,200,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 527 ") {
    byte_vec_t msg { 58,2,80,212 };
    byte_vec_t sig { 229,236,7,159,141,216,138,102,4,83,251,145,7,142,231,188,122,114,101,230,67,98,220,167,133,159,209,165,62,40,97,161,83,33,105,225,66,137,199,49,81,243,161,237,17,23,12,246,10,238,43,56,36,255,225,207,193,202,209,214,176,6,24,2 };
    byte_vec_t pk { 4,7,18,127,143,157,91,100,207,117,114,107,151,75,34,154,165,62,131,165,64,174,236,183,227,171,60,206,253,251,38,4,210,56,85,204,235,20,97,100,213,30,121,241,185,214,74,222,250,233,61,79,251,142,187,177,174,220,139,223,235,103,174,64,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 527 ") {
    byte_vec_t msg { 221,142,112,58 };
    byte_vec_t sig { 242,254,24,247,17,249,50,242,90,16,64,52,162,79,153,213,171,94,228,178,211,102,52,185,48,205,233,194,155,203,82,118,143,22,61,250,28,152,159,248,30,56,17,127,201,227,203,23,116,102,219,194,181,166,153,1,223,31,149,131,195,42,38,174 };
    byte_vec_t pk { 2,75,67,163,43,204,181,55,39,216,196,84,191,235,143,252,178,51,253,23,216,86,58,137,229,26,21,84,177,1,213,51,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 527 ") {
    byte_vec_t msg { 134,221,218,78 };
    byte_vec_t sig { 227,92,70,14,39,148,146,231,183,199,46,154,237,69,142,49,182,217,66,87,12,32,200,243,22,204,172,27,179,21,51,44,209,143,159,127,7,170,142,200,153,148,148,180,130,30,161,86,231,209,169,25,168,215,99,16,145,243,137,167,249,24,84,36 };
    byte_vec_t pk { 2,110,24,186,85,213,191,83,109,154,248,187,68,148,155,125,209,109,94,188,255,98,225,91,74,201,244,76,55,169,142,197,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 528 ") {
    byte_vec_t msg { 222,187,123,166 };
    byte_vec_t sig { 91,225,176,203,82,187,200,47,81,11,206,11,58,20,124,147,143,81,64,13,96,195,44,255,106,182,42,152,50,130,81,183,3,79,243,254,125,204,216,204,136,70,137,127,1,190,80,123,169,101,194,77,158,234,103,89,29,240,255,200,250,179,149,63 };
    byte_vec_t pk { 4,33,156,96,227,82,190,66,95,250,7,143,153,22,199,65,219,133,107,246,148,253,39,143,101,82,182,247,120,190,45,107,208,86,68,236,236,233,73,231,20,51,19,70,186,193,246,84,220,1,185,162,2,33,58,147,154,194,62,18,128,205,45,14,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 528 ") {
    byte_vec_t msg { 151,161,247,181 };
    byte_vec_t sig { 218,110,133,49,18,20,157,97,133,117,149,22,173,84,64,229,123,246,111,200,190,37,31,181,57,124,51,48,233,216,64,61,85,102,10,112,35,198,109,85,178,132,103,167,195,11,155,48,67,38,249,253,58,35,24,212,198,46,60,15,17,104,193,121 };
    byte_vec_t pk { 4,135,108,96,165,166,159,21,117,71,108,52,233,38,30,134,134,0,180,55,203,242,48,235,145,180,204,100,24,153,175,75,249,179,141,156,175,109,28,148,72,250,189,37,232,9,134,129,65,90,46,96,109,23,64,1,95,226,75,238,78,36,82,208,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 528 ") {
    byte_vec_t msg { 195,163,120,208 };
    byte_vec_t sig { 248,167,184,219,156,100,242,230,123,228,139,255,61,102,41,218,47,63,200,195,78,108,103,64,162,59,23,163,141,62,54,161,221,126,222,217,94,216,138,97,114,55,138,115,250,32,146,109,229,228,148,24,145,138,124,127,104,116,38,10,168,252,148,239 };
    byte_vec_t pk { 2,46,103,39,176,66,18,238,78,99,81,210,217,195,156,67,16,127,208,14,41,142,39,60,83,125,188,62,1,77,158,252,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 528 ") {
    byte_vec_t msg { 84,127,49,11 };
    byte_vec_t sig { 118,36,96,225,212,206,132,197,249,43,39,239,159,44,89,73,57,84,167,15,147,250,31,49,22,21,229,236,139,162,76,59,18,7,176,221,29,54,240,209,192,33,103,86,13,229,207,30,64,212,143,26,184,37,151,203,59,12,29,96,114,109,111,152 };
    byte_vec_t pk { 2,6,74,231,233,28,119,213,224,193,246,221,155,186,81,199,191,172,168,7,14,55,48,47,245,37,116,11,13,66,98,55,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 529 ") {
    byte_vec_t msg { 43,112,219,8 };
    byte_vec_t sig { 141,194,43,5,166,190,173,98,106,217,108,223,149,136,71,23,68,132,52,159,235,49,95,44,101,47,146,94,165,189,147,172,73,69,255,150,74,72,196,61,65,164,240,25,106,153,203,146,207,135,34,76,246,228,67,177,208,204,252,165,86,78,235,153 };
    byte_vec_t pk { 4,37,148,95,164,234,39,194,244,162,133,165,47,181,188,247,20,63,12,104,75,31,162,87,166,15,118,21,141,125,166,57,67,160,150,136,248,71,61,57,216,145,11,146,209,219,47,194,105,19,160,230,121,14,72,242,204,207,56,199,174,108,233,174,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 529 ") {
    byte_vec_t msg { 35,49,68,189 };
    byte_vec_t sig { 167,190,187,86,236,16,253,252,34,136,221,47,11,240,173,206,10,251,103,245,216,3,93,17,2,205,141,18,97,198,7,254,189,156,6,22,64,4,51,17,202,51,87,188,245,152,33,203,168,84,115,41,162,83,41,84,51,182,147,158,92,59,228,244 };
    byte_vec_t pk { 4,86,92,179,105,234,204,177,229,89,121,91,84,84,159,56,101,125,155,15,236,190,242,164,220,71,23,6,117,254,60,38,104,194,200,51,1,205,68,161,69,14,61,34,217,176,70,196,243,13,10,20,204,189,29,140,31,188,108,235,116,227,145,20,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 529 ") {
    byte_vec_t msg { 21,21,253,202 };
    byte_vec_t sig { 72,148,51,213,215,131,134,63,168,218,161,156,103,213,107,207,199,143,80,239,13,9,72,241,58,135,75,179,127,98,189,80,18,166,36,40,226,253,45,168,132,182,180,144,186,165,236,229,100,116,151,215,186,208,65,167,218,145,216,61,254,213,221,111 };
    byte_vec_t pk { 3,56,187,210,20,0,82,90,88,160,248,116,112,84,76,88,155,147,26,156,170,181,168,81,194,86,234,183,157,44,81,60,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 529 ") {
    byte_vec_t msg { 170,18,148,168 };
    byte_vec_t sig { 159,88,80,21,225,52,35,168,143,109,164,59,246,247,13,160,109,58,32,85,151,187,213,163,40,175,7,240,56,195,43,130,210,118,195,133,194,191,203,230,207,126,186,22,25,22,93,235,157,144,8,104,181,212,132,19,48,0,10,217,187,216,9,209 };
    byte_vec_t pk { 3,161,203,121,143,241,152,146,201,167,2,188,6,152,220,3,49,123,163,152,210,16,141,234,71,177,56,110,160,128,230,228,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 530 ") {
    byte_vec_t msg { 114,138,92,173 };
    byte_vec_t sig { 107,46,182,34,54,223,36,134,149,124,157,75,24,33,61,230,62,119,12,128,141,255,212,98,39,54,214,113,149,235,1,148,69,243,225,114,60,154,230,206,174,247,127,193,13,141,32,237,0,158,214,79,220,215,82,233,177,151,115,56,199,215,60,223 };
    byte_vec_t pk { 4,206,125,116,245,250,138,71,234,76,87,89,17,65,109,51,93,54,56,10,58,15,160,116,43,130,145,152,62,233,105,108,75,241,218,129,67,178,145,72,169,86,79,217,140,51,221,93,115,41,233,215,45,73,158,18,72,10,163,97,57,156,78,74,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 530 ") {
    byte_vec_t msg { 16,244,204,46 };
    byte_vec_t sig { 1,122,67,208,47,220,13,203,165,238,180,10,93,87,109,112,194,60,35,56,96,164,215,66,195,242,183,214,214,9,182,6,133,42,19,27,59,9,145,197,5,50,214,145,58,6,105,186,36,218,198,18,53,158,247,245,19,163,226,68,146,247,210,54 };
    byte_vec_t pk { 4,99,234,87,61,123,114,97,203,97,66,4,94,6,12,9,203,211,71,120,202,229,105,153,47,49,241,135,7,108,72,244,246,19,232,210,192,250,78,36,148,46,240,184,91,198,176,245,58,44,143,80,15,162,28,115,194,131,3,200,181,249,85,138,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 530 ") {
    byte_vec_t msg { 92,212,62,210 };
    byte_vec_t sig { 5,156,126,43,44,251,21,132,238,206,58,195,236,205,96,167,204,114,94,32,102,4,124,185,61,139,242,132,41,178,127,229,144,38,239,251,252,29,166,251,77,95,12,182,70,122,28,216,125,68,179,163,10,12,25,206,254,113,83,114,148,206,161,219 };
    byte_vec_t pk { 2,254,181,82,30,222,237,111,237,119,11,229,141,149,115,33,187,141,81,68,231,52,102,77,133,141,252,224,106,117,20,37,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 530 ") {
    byte_vec_t msg { 8,241,218,233 };
    byte_vec_t sig { 132,218,172,207,224,216,13,103,1,94,54,61,210,97,47,182,149,75,227,3,72,244,220,87,225,165,206,196,211,101,160,207,185,53,172,69,125,166,134,204,37,126,11,183,79,47,194,59,160,47,127,50,80,27,201,222,62,8,155,207,44,60,71,70 };
    byte_vec_t pk { 2,141,38,38,225,230,203,112,152,68,128,127,143,119,203,246,143,236,199,54,47,86,140,200,203,89,230,165,94,255,99,174,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 531 ") {
    byte_vec_t msg { 86,103,175,198 };
    byte_vec_t sig { 19,222,11,51,170,92,43,65,48,61,89,49,40,66,197,191,239,113,20,102,233,36,146,60,80,234,223,109,227,118,150,128,204,74,190,97,252,129,55,54,69,163,205,196,164,207,199,31,169,42,56,27,13,71,51,123,219,81,144,215,187,138,221,68 };
    byte_vec_t pk { 4,134,186,164,13,255,42,245,151,56,216,239,101,1,164,162,92,120,89,132,60,100,36,137,207,56,129,109,200,49,192,97,161,9,88,155,29,67,36,220,188,56,76,42,179,43,175,58,225,245,211,175,212,100,214,230,49,118,209,145,21,52,244,184,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 531 ") {
    byte_vec_t msg { 191,126,144,57 };
    byte_vec_t sig { 125,78,143,66,122,166,221,217,67,220,166,95,136,4,210,43,138,157,100,205,254,221,219,141,48,172,12,62,7,85,209,173,230,126,170,252,196,255,168,100,127,62,56,225,220,144,68,23,77,44,95,205,82,128,30,234,45,83,203,153,85,53,35,177 };
    byte_vec_t pk { 4,146,158,168,48,197,93,91,1,249,214,91,230,129,160,138,148,57,124,19,249,187,173,184,198,188,24,5,152,153,122,18,55,87,248,197,244,128,94,100,8,197,229,4,46,182,53,216,229,44,251,235,69,103,165,87,155,117,215,155,33,233,131,67,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 531 ") {
    byte_vec_t msg { 92,64,99,14 };
    byte_vec_t sig { 156,3,68,208,98,75,60,69,28,127,196,213,1,139,165,120,162,226,140,102,137,188,86,2,225,132,153,6,160,120,183,176,181,189,152,141,199,44,152,19,97,120,107,178,229,88,160,56,115,194,250,210,122,43,138,66,63,221,129,210,248,106,221,38 };
    byte_vec_t pk { 3,60,223,81,205,141,196,58,201,251,250,36,79,242,22,254,64,143,74,67,34,81,243,244,194,186,46,67,160,145,237,132,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 531 ") {
    byte_vec_t msg { 150,0,59,179 };
    byte_vec_t sig { 52,186,135,198,211,156,122,39,218,74,84,244,152,119,3,209,234,101,104,93,129,210,81,108,196,141,44,249,8,147,80,32,216,101,235,126,244,185,72,146,27,8,131,126,83,134,47,168,246,131,40,170,240,102,147,124,177,185,249,124,250,115,76,104 };
    byte_vec_t pk { 2,218,184,12,159,55,46,31,99,247,110,161,67,23,151,111,161,54,217,113,96,33,152,159,27,9,228,216,242,227,153,152,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 532 ") {
    byte_vec_t msg { 222,238,127,95 };
    byte_vec_t sig { 147,195,175,13,220,42,212,123,15,83,125,232,251,198,158,243,191,148,134,201,52,93,18,158,233,234,80,22,55,165,33,129,16,69,67,237,252,25,34,61,122,28,80,1,10,49,216,251,102,25,204,63,70,46,79,21,120,144,250,68,33,242,11,158 };
    byte_vec_t pk { 4,177,114,9,90,96,19,156,124,255,79,131,72,205,114,75,203,101,74,181,227,11,158,170,104,79,156,156,116,221,45,67,65,116,83,213,72,58,193,29,115,12,173,20,101,215,81,37,126,127,250,167,250,243,76,148,215,171,85,74,34,61,60,120,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 532 ") {
    byte_vec_t msg { 166,244,189,31 };
    byte_vec_t sig { 33,242,132,106,231,187,44,142,109,187,190,213,235,195,143,86,232,43,169,188,160,4,240,231,171,200,238,214,100,219,119,241,207,188,215,82,0,139,201,237,57,57,111,1,158,1,232,12,235,175,8,221,57,96,214,33,130,15,56,172,216,238,73,222 };
    byte_vec_t pk { 4,50,158,125,80,31,94,127,144,232,1,84,208,140,94,220,123,197,184,135,180,71,158,243,176,103,70,60,237,188,86,99,205,38,239,94,205,85,116,145,218,141,184,37,28,93,36,128,19,101,225,134,175,107,254,68,124,155,201,126,215,252,104,167,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 532 ") {
    byte_vec_t msg { 112,53,197,134 };
    byte_vec_t sig { 18,140,39,46,4,213,58,45,31,60,232,117,115,62,243,45,248,97,198,186,238,129,21,35,212,135,146,168,58,241,217,124,67,12,93,150,143,137,248,21,141,173,135,216,209,37,96,58,0,178,86,66,19,208,110,246,41,215,184,237,51,224,22,89 };
    byte_vec_t pk { 3,19,146,111,215,153,231,162,108,197,234,188,48,13,187,122,47,38,196,147,247,174,42,60,252,152,7,127,83,147,249,217,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 532 ") {
    byte_vec_t msg { 159,93,193,76 };
    byte_vec_t sig { 207,71,179,146,196,179,85,211,36,172,14,216,80,72,152,223,236,41,250,166,203,139,134,60,184,13,182,187,246,99,105,237,165,65,11,29,251,72,165,64,217,245,33,98,120,182,80,77,42,221,117,147,198,182,162,228,166,157,223,44,181,96,182,218 };
    byte_vec_t pk { 2,10,22,48,186,7,13,11,28,181,102,135,198,31,149,10,218,62,38,91,111,194,136,143,132,95,97,78,208,152,174,86,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 533 ") {
    byte_vec_t msg { 173,58,237,102 };
    byte_vec_t sig { 91,135,76,101,22,166,152,5,123,113,130,24,109,154,182,240,182,103,181,221,223,87,182,70,93,200,124,219,57,231,155,199,47,226,28,180,164,206,131,193,87,198,62,118,130,187,64,170,144,143,144,15,183,197,204,67,2,171,125,11,162,9,219,217 };
    byte_vec_t pk { 4,177,134,214,55,212,62,133,128,211,122,43,199,89,158,241,178,65,216,229,205,177,145,210,224,171,224,28,170,246,254,226,117,77,101,143,217,159,77,151,210,2,109,36,112,101,114,210,187,155,175,68,232,157,210,120,136,193,179,222,181,75,146,237,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 533 ") {
    byte_vec_t msg { 55,198,67,165 };
    byte_vec_t sig { 136,195,208,200,153,102,126,240,222,187,12,203,126,183,175,112,227,179,237,98,254,224,24,209,224,81,175,199,247,73,38,58,192,161,120,101,145,64,215,211,200,119,29,219,215,220,49,49,34,97,115,232,46,70,82,58,166,71,24,68,43,218,159,200 };
    byte_vec_t pk { 4,5,217,199,36,53,14,240,195,175,53,44,236,45,135,249,148,70,139,186,221,127,243,124,41,35,18,106,179,121,242,88,173,110,157,125,27,138,62,152,225,21,26,44,93,215,40,15,164,224,236,150,19,94,160,168,70,155,175,199,76,247,67,20,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 533 ") {
    byte_vec_t msg { 105,32,243,201 };
    byte_vec_t sig { 161,235,23,8,225,216,202,89,205,27,231,68,134,39,15,133,126,79,133,189,38,227,79,253,120,52,8,140,229,170,181,223,200,190,18,92,112,0,25,150,1,23,2,226,62,119,46,86,29,85,232,44,103,37,149,18,113,74,198,32,207,30,80,95 };
    byte_vec_t pk { 3,175,53,206,62,52,121,113,23,254,229,170,161,167,74,31,2,186,105,55,128,191,177,229,18,64,22,255,96,19,186,72,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 533 ") {
    byte_vec_t msg { 232,167,125,34 };
    byte_vec_t sig { 241,231,48,228,170,165,236,197,13,176,237,171,75,91,167,234,176,227,252,158,84,175,245,92,162,29,195,201,157,209,44,254,30,246,186,25,145,213,101,82,58,22,69,42,71,214,170,127,190,194,247,177,31,75,155,34,30,51,196,152,81,141,132,236 };
    byte_vec_t pk { 2,134,235,48,227,75,10,201,122,101,35,197,152,78,54,51,43,24,16,127,241,147,3,146,85,208,100,174,99,21,148,192,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 534 ") {
    byte_vec_t msg { 63,72,54,147 };
    byte_vec_t sig { 1,224,145,7,194,235,95,142,228,67,170,119,50,248,199,221,79,60,109,122,169,40,122,155,34,102,140,112,193,81,156,35,151,246,74,6,175,236,203,164,69,226,154,94,20,54,54,49,16,61,5,18,133,3,142,142,244,45,55,161,131,183,251,187 };
    byte_vec_t pk { 4,162,151,37,50,226,121,60,184,47,150,212,241,233,198,188,21,132,119,107,250,149,52,123,211,54,18,158,168,146,204,199,43,71,54,243,175,187,244,45,92,129,254,17,141,184,250,246,40,248,236,19,3,6,68,38,54,17,90,163,227,193,156,204,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 534 ") {
    byte_vec_t msg { 194,148,184,229 };
    byte_vec_t sig { 15,144,46,194,2,185,127,31,209,79,181,5,155,4,132,69,65,33,95,21,225,241,44,192,107,171,36,83,178,71,139,125,254,149,195,161,121,56,15,176,128,238,1,164,216,11,181,167,135,46,204,162,168,238,197,95,225,98,150,201,142,88,86,128 };
    byte_vec_t pk { 4,142,30,152,187,63,96,253,119,162,14,159,218,24,103,33,30,26,130,225,79,24,209,165,112,154,189,193,199,186,23,128,71,22,244,154,138,40,33,155,207,179,209,226,43,19,49,150,1,252,45,32,248,72,213,108,11,26,235,46,159,61,19,28,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 534 ") {
    byte_vec_t msg { 131,38,177,163 };
    byte_vec_t sig { 75,100,1,186,34,188,208,63,40,190,131,41,254,203,38,80,229,233,201,103,92,101,120,251,87,219,32,240,248,31,235,22,167,230,142,9,66,202,241,170,34,32,129,12,92,113,231,113,165,242,172,209,239,178,43,252,59,105,10,227,142,42,53,133 };
    byte_vec_t pk { 3,140,91,162,133,3,83,14,224,216,209,174,74,67,210,58,121,101,60,157,124,184,87,217,120,220,218,159,80,222,202,115,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 534 ") {
    byte_vec_t msg { 184,90,199,119 };
    byte_vec_t sig { 54,207,19,61,218,103,42,46,176,117,129,12,225,87,145,69,141,16,42,129,115,12,61,224,193,121,30,167,80,101,137,244,207,62,127,110,164,208,232,135,181,22,74,128,241,59,234,38,184,240,142,14,190,155,138,136,84,38,97,49,232,2,250,166 };
    byte_vec_t pk { 3,76,244,141,183,232,187,142,15,8,224,80,189,45,221,110,179,22,176,52,16,71,134,79,232,46,217,251,192,5,163,190,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 535 ") {
    byte_vec_t msg { 125,186,54,116 };
    byte_vec_t sig { 36,25,77,208,147,186,126,98,5,18,162,43,125,3,227,117,136,93,2,70,155,97,74,250,230,89,156,176,215,218,145,128,131,144,81,134,74,93,224,223,202,192,252,228,205,198,28,128,198,123,167,61,235,150,145,95,232,157,125,152,172,151,145,191 };
    byte_vec_t pk { 4,212,47,194,84,125,100,159,52,99,23,105,9,96,136,225,241,27,38,184,81,161,105,243,104,118,237,235,71,209,135,155,44,34,8,40,33,110,174,228,219,234,128,139,2,5,241,10,35,93,51,102,81,109,8,248,168,14,142,74,118,184,63,215,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 535 ") {
    byte_vec_t msg { 163,125,184,97 };
    byte_vec_t sig { 246,131,57,37,232,167,24,56,78,249,154,200,208,195,111,217,198,168,58,222,20,87,74,156,134,54,218,174,106,125,138,146,244,253,36,251,54,124,77,43,124,214,200,13,244,172,98,135,252,100,103,73,84,123,207,172,66,59,241,155,127,88,252,71 };
    byte_vec_t pk { 4,120,153,87,131,209,139,88,82,181,146,221,150,93,229,113,166,155,79,168,15,144,238,53,183,98,172,91,139,155,100,213,177,235,239,43,70,205,214,198,213,199,69,173,11,6,82,226,130,243,150,51,180,123,22,221,219,244,183,133,84,222,93,128,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 535 ") {
    byte_vec_t msg { 173,188,204,81 };
    byte_vec_t sig { 214,16,221,1,195,184,44,138,18,59,187,5,138,128,5,85,173,220,115,133,161,44,69,89,119,25,13,54,76,126,80,73,96,46,64,118,114,210,33,190,173,67,94,21,108,178,83,235,245,248,184,190,250,240,134,163,144,75,62,116,174,197,150,73 };
    byte_vec_t pk { 3,49,188,161,118,34,237,10,150,101,137,161,151,206,60,61,151,66,49,208,153,74,75,231,114,150,49,237,8,100,175,90,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 535 ") {
    byte_vec_t msg { 14,114,241,206 };
    byte_vec_t sig { 87,225,91,10,75,107,170,198,25,3,159,208,28,139,145,43,62,136,26,208,118,118,52,7,33,230,32,53,203,165,191,51,54,144,192,154,54,153,108,245,145,237,9,14,75,112,99,165,9,214,181,128,237,113,166,171,250,33,18,253,41,199,236,163 };
    byte_vec_t pk { 2,144,123,240,106,19,45,152,37,79,43,244,249,111,81,118,145,33,138,46,48,105,59,62,74,100,225,192,193,57,104,152,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 536 ") {
    byte_vec_t msg { 254,183,246,90 };
    byte_vec_t sig { 72,238,107,130,124,203,208,208,4,64,213,79,209,74,64,61,242,25,47,241,11,81,152,122,112,64,45,198,214,53,68,88,239,180,6,100,227,96,184,111,152,21,106,87,24,170,94,45,166,212,90,167,65,212,150,59,133,123,72,110,254,90,6,208 };
    byte_vec_t pk { 4,39,189,52,169,57,50,181,254,130,125,65,242,185,178,133,200,119,69,214,223,69,101,21,61,66,202,52,131,240,145,149,229,125,92,120,150,126,185,221,148,224,13,85,188,201,202,149,243,239,182,99,88,1,141,84,94,76,25,3,88,69,119,16,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 536 ") {
    byte_vec_t msg { 93,60,129,144 };
    byte_vec_t sig { 122,149,145,63,126,110,24,210,62,138,153,145,14,223,151,194,189,118,170,89,28,47,209,215,208,90,244,237,157,71,225,127,133,28,15,79,202,33,233,243,157,128,152,126,4,27,133,220,167,138,126,41,0,56,246,28,164,200,110,114,11,246,54,76 };
    byte_vec_t pk { 4,227,196,2,46,123,167,3,182,89,251,37,9,58,254,39,169,172,231,42,113,55,19,230,194,10,49,236,138,240,63,218,173,248,92,105,223,216,101,25,121,8,139,120,174,167,200,19,172,214,109,210,62,111,54,80,244,119,240,123,8,165,237,109,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 536 ") {
    byte_vec_t msg { 26,85,120,142 };
    byte_vec_t sig { 37,221,43,107,30,218,34,73,36,179,228,223,244,132,144,69,169,33,181,0,216,187,218,3,52,196,245,230,139,171,218,25,205,88,74,157,66,160,60,192,153,154,73,55,193,105,79,44,124,5,144,236,30,7,155,44,183,73,145,165,164,141,19,128 };
    byte_vec_t pk { 3,153,208,59,234,62,87,0,15,126,33,46,157,20,243,220,187,114,231,245,181,199,171,185,239,99,3,155,252,31,114,151,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 536 ") {
    byte_vec_t msg { 207,253,183,217 };
    byte_vec_t sig { 198,177,172,149,81,247,103,171,247,72,62,100,223,126,45,92,50,127,75,243,32,119,170,173,244,99,134,188,221,166,13,63,251,113,117,214,192,158,87,213,168,164,42,255,239,209,227,87,240,95,122,214,5,104,3,44,51,85,82,184,72,222,211,17 };
    byte_vec_t pk { 3,225,72,39,228,145,76,67,39,85,136,57,15,76,243,223,74,247,112,242,121,5,48,209,248,135,69,90,13,99,151,19,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 537 ") {
    byte_vec_t msg { 139,232,228,195 };
    byte_vec_t sig { 74,64,121,119,244,250,242,197,14,245,191,188,97,4,43,224,29,194,255,212,70,200,174,82,90,106,186,186,160,153,224,148,94,83,185,16,187,106,170,20,47,27,104,113,5,117,46,153,43,170,79,217,47,179,241,221,99,49,33,194,162,178,242,86 };
    byte_vec_t pk { 4,211,136,64,164,20,83,129,13,167,221,80,13,61,88,161,35,119,208,246,25,120,120,134,135,4,16,151,38,167,227,198,73,237,83,243,1,48,87,67,123,107,167,130,237,102,194,139,233,210,133,129,233,213,12,163,94,149,90,49,190,65,3,230,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 537 ") {
    byte_vec_t msg { 242,130,70,151 };
    byte_vec_t sig { 155,78,17,177,21,15,181,156,138,192,105,96,54,52,77,101,68,4,125,197,142,147,58,18,83,63,55,107,246,170,238,54,129,11,107,91,74,99,133,32,201,194,63,181,139,58,182,186,144,116,236,140,235,119,28,112,129,178,114,78,51,11,195,220 };
    byte_vec_t pk { 4,0,136,21,119,243,90,48,42,102,7,32,233,129,217,38,122,58,180,119,175,207,160,24,35,188,96,168,156,40,185,208,117,102,47,237,214,150,47,10,88,167,220,45,60,11,65,246,239,152,50,206,126,84,106,237,69,179,72,86,231,116,62,207,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 537 ") {
    byte_vec_t msg { 77,64,75,182 };
    byte_vec_t sig { 52,11,129,120,2,169,255,33,150,186,237,92,145,94,229,161,168,157,145,183,231,8,117,226,85,195,243,227,7,113,17,62,186,224,245,225,158,141,107,204,13,164,117,227,230,194,51,242,223,90,244,126,245,110,57,136,45,3,157,179,4,196,79,223 };
    byte_vec_t pk { 2,222,234,101,147,4,192,150,233,229,99,231,128,25,115,66,105,188,226,206,37,178,109,38,189,244,114,128,215,165,75,42,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 537 ") {
    byte_vec_t msg { 86,84,41,198 };
    byte_vec_t sig { 171,10,135,77,146,27,153,62,214,148,248,12,182,16,36,59,37,117,245,60,60,195,123,212,83,195,45,33,217,23,167,211,203,191,58,240,10,219,248,166,13,21,16,188,147,244,188,151,7,125,14,19,178,76,180,60,186,31,40,111,98,93,161,175 };
    byte_vec_t pk { 3,124,5,117,149,239,176,177,44,233,193,198,132,121,88,174,229,121,199,236,151,172,242,167,73,80,110,73,134,245,89,6,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 538 ") {
    byte_vec_t msg { 188,125,204,162 };
    byte_vec_t sig { 108,113,235,212,39,43,218,184,15,37,216,150,94,210,250,146,229,43,116,253,126,235,138,116,88,122,8,86,92,163,203,233,109,147,177,241,54,161,7,199,68,190,220,97,128,215,236,130,68,112,14,247,68,252,175,21,248,198,204,129,10,47,112,122 };
    byte_vec_t pk { 4,83,81,73,246,42,86,58,111,133,0,95,238,29,6,185,209,60,213,53,98,50,142,144,86,98,112,123,203,15,242,67,129,165,130,154,196,198,33,129,213,4,126,166,118,222,26,124,51,96,174,89,227,68,93,28,208,67,254,221,218,29,224,5,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 538 ") {
    byte_vec_t msg { 208,153,202,217 };
    byte_vec_t sig { 3,36,243,205,186,221,42,248,37,126,112,21,172,124,20,178,170,161,106,45,253,238,117,170,163,223,118,60,5,41,44,181,89,140,158,114,29,43,127,252,216,226,16,2,216,207,241,126,223,154,45,19,234,87,95,102,224,115,218,56,193,53,129,247 };
    byte_vec_t pk { 4,255,194,1,6,2,221,116,221,156,250,116,65,161,213,95,204,220,11,67,61,122,82,122,18,92,102,122,123,142,179,171,214,21,169,148,36,129,189,60,144,151,57,187,130,148,107,187,243,109,30,245,77,186,85,153,131,225,134,61,238,192,170,253,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 538 ") {
    byte_vec_t msg { 65,34,179,229 };
    byte_vec_t sig { 242,26,41,134,239,243,121,26,196,146,147,74,102,64,46,144,251,134,24,51,171,220,211,225,234,124,218,165,201,12,19,68,140,122,98,224,201,77,137,11,215,211,138,249,213,41,29,239,29,160,139,213,153,114,125,82,83,50,145,141,36,139,164,136 };
    byte_vec_t pk { 3,236,89,235,160,75,3,182,146,242,247,143,116,132,50,118,169,35,198,208,111,99,131,206,234,198,12,16,34,241,216,118,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 538 ") {
    byte_vec_t msg { 175,255,215,186 };
    byte_vec_t sig { 14,61,121,221,85,121,116,244,173,12,251,56,22,166,238,117,73,239,51,80,187,4,59,29,118,90,109,186,119,202,68,150,47,77,93,248,189,224,206,243,82,135,101,250,250,158,204,144,61,234,35,121,82,221,106,216,82,25,199,220,51,98,98,63 };
    byte_vec_t pk { 3,55,205,52,200,37,248,221,231,34,245,184,40,14,179,244,234,143,101,107,57,193,47,36,190,69,170,161,90,228,213,124,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 539 ") {
    byte_vec_t msg { 61,116,46,75 };
    byte_vec_t sig { 237,240,64,87,175,214,18,117,66,59,129,92,84,249,212,140,107,101,105,135,217,96,98,69,13,176,111,193,59,98,216,62,223,113,145,233,3,5,22,9,214,60,101,167,243,190,154,105,97,142,120,194,27,126,49,68,128,96,96,12,66,237,135,173 };
    byte_vec_t pk { 4,123,250,247,54,180,184,15,254,206,80,129,116,184,111,238,86,69,72,96,109,107,98,248,239,5,71,81,96,32,38,85,235,0,195,232,127,101,149,185,243,6,29,154,138,132,47,189,85,213,70,54,250,155,41,41,18,19,189,144,59,183,10,38,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 539 ") {
    byte_vec_t msg { 5,64,69,40 };
    byte_vec_t sig { 115,97,252,18,62,124,66,16,180,108,6,103,59,13,171,65,7,128,61,241,60,30,65,222,67,75,35,192,103,218,214,103,168,245,168,121,44,96,0,118,114,181,225,208,59,233,113,196,77,138,42,138,150,9,88,39,41,203,105,36,205,35,77,7 };
    byte_vec_t pk { 4,200,39,40,52,78,46,231,203,179,168,164,130,221,57,173,207,126,74,248,34,194,75,182,202,16,22,11,226,48,171,72,246,7,116,167,19,85,243,33,31,76,139,185,89,119,16,89,233,158,229,171,236,208,142,125,216,186,88,255,122,140,234,193,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 539 ") {
    byte_vec_t msg { 11,156,58,241 };
    byte_vec_t sig { 188,99,78,56,54,11,194,1,252,132,66,234,255,194,161,6,200,20,11,76,188,153,15,27,162,139,194,126,240,131,21,210,167,43,48,89,149,136,241,133,219,81,42,210,89,27,15,91,64,123,129,71,7,143,198,0,80,164,152,113,233,254,211,229 };
    byte_vec_t pk { 3,73,2,4,180,178,219,172,157,18,13,32,120,188,244,183,16,81,204,13,166,254,146,221,191,128,72,25,178,215,35,39,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 539 ") {
    byte_vec_t msg { 115,56,216,178 };
    byte_vec_t sig { 66,43,210,164,0,134,88,33,33,19,101,67,34,215,230,139,129,202,217,115,99,116,188,125,155,47,73,187,106,180,219,113,52,83,163,93,100,201,98,48,90,142,199,161,20,78,243,146,115,232,12,80,97,138,67,208,241,81,68,126,250,90,44,120 };
    byte_vec_t pk { 3,93,164,232,194,76,80,207,202,155,168,194,12,3,188,101,193,71,162,180,199,137,23,129,217,217,9,59,16,183,11,172,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 540 ") {
    byte_vec_t msg { 139,59,7,189 };
    byte_vec_t sig { 251,199,74,147,244,191,50,32,115,217,80,164,159,105,127,59,155,109,105,80,11,99,136,21,135,89,77,242,225,24,101,246,241,194,199,101,82,216,185,68,172,8,194,169,187,246,167,36,109,98,9,113,204,170,116,238,15,245,210,48,121,187,241,252 };
    byte_vec_t pk { 4,206,204,100,249,33,86,153,246,132,121,52,68,100,211,142,88,208,194,24,86,254,187,78,48,214,253,87,150,145,178,31,103,240,39,182,68,183,18,249,194,174,247,215,64,0,56,175,5,210,74,238,71,10,238,96,192,197,108,50,107,202,65,37,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 540 ") {
    byte_vec_t msg { 111,67,245,210 };
    byte_vec_t sig { 140,68,252,135,42,145,248,95,81,233,111,58,108,218,203,48,12,200,218,59,185,196,205,143,227,231,101,224,53,219,230,72,127,191,197,251,178,36,33,40,130,215,145,214,125,45,117,157,74,197,172,43,175,72,73,61,209,2,95,55,161,146,136,155 };
    byte_vec_t pk { 4,145,133,2,185,152,122,173,124,181,105,186,179,208,134,115,13,59,78,110,174,4,89,166,8,95,215,119,130,114,33,230,30,41,102,128,43,135,242,166,234,13,216,26,86,245,191,64,3,196,28,82,197,21,238,33,179,246,225,202,223,193,51,167,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 540 ") {
    byte_vec_t msg { 168,67,109,161 };
    byte_vec_t sig { 210,79,86,128,90,151,239,255,180,36,9,180,188,162,178,170,203,96,144,4,104,104,167,58,104,7,61,125,211,40,189,86,223,126,227,121,73,223,138,180,171,171,114,195,172,195,198,206,182,206,49,255,34,138,26,140,87,68,97,10,89,153,63,227 };
    byte_vec_t pk { 2,100,178,54,207,3,143,207,40,207,1,191,249,85,212,86,4,156,127,133,53,182,140,49,215,83,173,1,244,3,85,125,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 540 ") {
    byte_vec_t msg { 176,232,53,176 };
    byte_vec_t sig { 188,175,176,210,72,88,250,227,67,102,172,227,177,105,82,154,209,198,54,50,54,0,167,75,164,248,244,142,216,57,54,18,145,131,54,147,40,132,116,239,203,144,151,123,58,51,6,250,73,221,52,106,116,133,57,135,70,120,165,55,11,157,176,70 };
    byte_vec_t pk { 2,101,144,191,25,214,197,20,166,216,219,53,68,184,141,103,56,158,29,196,203,30,193,12,32,220,41,146,205,153,143,82,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 541 ") {
    byte_vec_t msg { 237,172,172,205 };
    byte_vec_t sig { 168,26,16,223,103,135,17,71,50,169,129,96,19,233,43,2,32,4,54,242,85,126,144,220,183,103,33,76,99,97,4,35,161,27,235,43,139,195,94,141,177,182,183,179,29,201,4,252,91,81,33,167,250,214,162,37,147,93,173,47,196,149,108,228 };
    byte_vec_t pk { 4,181,171,233,35,114,236,85,159,30,91,89,244,102,182,39,130,216,227,149,177,170,132,161,11,141,59,93,201,151,95,176,87,5,111,127,90,112,234,97,22,174,22,215,242,38,46,194,189,120,203,206,77,214,132,37,33,178,222,71,221,79,9,193,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 541 ") {
    byte_vec_t msg { 93,68,247,176 };
    byte_vec_t sig { 108,112,253,175,122,95,213,213,230,37,128,30,17,253,84,129,54,145,140,49,26,163,156,248,74,142,248,215,188,110,6,214,167,252,90,210,64,163,166,236,57,109,140,169,55,135,173,160,4,204,111,196,57,3,210,110,154,16,11,149,167,217,202,229 };
    byte_vec_t pk { 4,253,165,176,26,126,184,72,141,30,32,252,236,18,91,7,250,48,113,238,44,61,6,197,152,40,42,89,136,20,211,38,228,141,21,21,116,41,45,0,221,108,119,117,187,245,216,84,56,119,229,27,194,210,215,161,208,20,84,47,13,77,113,174,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 541 ") {
    byte_vec_t msg { 131,76,15,34 };
    byte_vec_t sig { 135,59,47,29,49,27,51,101,126,37,120,226,230,190,82,255,240,133,11,151,191,95,81,30,11,113,207,69,62,99,163,103,240,132,95,227,12,147,122,135,158,71,38,221,194,157,141,91,100,191,84,177,112,3,142,0,166,182,236,137,33,69,205,164 };
    byte_vec_t pk { 3,114,58,91,250,175,134,91,200,167,77,7,46,191,252,48,104,22,140,96,229,52,87,233,199,64,218,201,27,205,33,242,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 541 ") {
    byte_vec_t msg { 195,65,188,194 };
    byte_vec_t sig { 231,98,233,116,31,77,170,38,140,8,168,183,209,11,98,5,93,186,55,166,148,94,175,192,44,76,178,10,231,237,189,126,84,83,74,139,207,250,16,184,70,13,66,189,99,114,24,163,170,250,230,28,190,253,69,224,225,47,143,108,75,142,94,10 };
    byte_vec_t pk { 2,10,191,78,77,58,182,11,226,12,28,114,67,199,83,76,64,234,7,131,195,239,124,102,213,175,178,194,134,131,254,226,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 542 ") {
    byte_vec_t msg { 157,233,131,19 };
    byte_vec_t sig { 39,100,251,220,95,91,102,37,144,210,193,196,188,53,246,190,177,175,152,168,93,153,243,123,160,122,247,194,255,8,44,100,17,205,54,245,240,204,53,206,175,93,56,185,112,187,41,143,136,134,250,124,6,12,5,119,53,34,149,33,71,103,179,29 };
    byte_vec_t pk { 4,37,140,46,217,173,33,47,57,70,120,156,87,233,75,222,186,23,26,228,184,52,65,130,62,245,88,190,83,63,166,152,250,223,93,178,110,84,72,61,233,33,245,218,84,192,83,98,176,51,88,197,16,68,244,237,179,139,27,9,146,68,206,177,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 542 ") {
    byte_vec_t msg { 234,20,136,51 };
    byte_vec_t sig { 244,70,86,164,100,149,204,218,130,75,137,232,131,240,178,232,71,187,77,222,48,82,179,9,226,181,237,227,255,26,73,137,51,147,45,236,76,117,2,154,204,227,167,25,156,141,172,199,94,112,222,12,50,208,61,235,139,110,20,133,180,160,31,157 };
    byte_vec_t pk { 4,246,97,191,62,183,183,111,23,9,47,255,226,175,61,243,6,218,75,152,88,114,232,4,83,88,140,90,100,204,94,121,153,0,168,131,29,12,176,167,102,175,176,198,136,165,227,38,29,166,194,136,68,100,140,22,173,178,14,91,56,36,42,34,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 542 ") {
    byte_vec_t msg { 237,2,41,124 };
    byte_vec_t sig { 216,12,6,173,139,88,66,40,33,100,169,172,72,140,214,237,148,152,7,91,89,195,186,153,16,31,233,89,235,51,233,51,75,179,130,73,64,230,152,26,32,214,213,173,223,60,146,179,205,78,227,119,136,127,25,78,58,45,214,221,198,204,83,13 };
    byte_vec_t pk { 3,106,193,27,130,21,12,236,255,200,130,1,151,195,191,248,69,14,145,73,31,98,79,9,171,138,81,187,54,168,45,22,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 542 ") {
    byte_vec_t msg { 51,94,41,92 };
    byte_vec_t sig { 178,249,108,253,160,40,139,116,255,9,132,174,71,111,122,212,70,192,156,91,86,109,93,208,173,255,24,120,235,156,185,49,78,5,177,152,114,232,151,154,189,177,11,106,76,94,214,91,125,122,51,147,66,37,121,64,196,204,124,157,42,201,194,61 };
    byte_vec_t pk { 3,125,59,62,172,245,14,41,90,143,71,215,9,178,210,199,211,180,6,166,139,35,150,98,47,28,142,226,222,250,80,99,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 543 ") {
    byte_vec_t msg { 27,211,21,253 };
    byte_vec_t sig { 254,174,165,130,243,192,152,193,96,24,252,5,199,126,213,102,54,99,223,68,132,158,144,231,56,253,49,74,71,134,67,159,181,35,70,78,189,180,97,154,128,153,115,178,195,71,142,180,15,84,140,207,200,254,16,52,220,44,185,247,222,158,245,169 };
    byte_vec_t pk { 4,120,103,12,100,90,227,4,178,138,230,94,192,159,240,204,247,25,210,91,95,167,97,83,109,59,209,117,191,8,245,247,1,94,210,41,94,225,89,169,185,53,255,61,47,225,164,189,195,128,177,254,68,60,199,166,154,14,198,25,101,189,248,204,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 543 ") {
    byte_vec_t msg { 150,117,127,183 };
    byte_vec_t sig { 64,5,239,193,41,200,204,84,90,84,35,227,133,50,206,197,159,182,249,32,79,100,218,158,101,211,197,57,95,46,59,75,178,30,7,44,17,180,218,54,117,84,55,82,242,1,188,127,84,39,140,150,219,4,25,99,33,145,158,45,6,139,28,112 };
    byte_vec_t pk { 4,252,103,128,218,124,173,218,18,93,135,222,149,202,185,130,199,128,130,61,22,32,40,252,246,79,71,129,96,96,158,170,252,130,30,153,136,131,235,250,67,156,46,43,197,94,93,1,218,62,114,31,108,254,212,100,166,255,29,231,122,7,224,28,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 543 ") {
    byte_vec_t msg { 51,51,4,72 };
    byte_vec_t sig { 155,193,119,221,48,126,10,139,247,111,199,18,184,45,77,45,114,255,219,26,59,185,135,180,228,113,241,238,147,24,236,230,208,95,166,133,149,124,98,172,24,61,1,145,176,216,22,147,208,186,162,58,11,139,239,144,88,246,37,235,190,82,143,23 };
    byte_vec_t pk { 2,181,71,5,117,20,11,122,249,24,137,105,135,204,78,113,249,63,185,115,35,47,239,153,84,31,163,231,128,22,53,177,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 543 ") {
    byte_vec_t msg { 138,164,195,52 };
    byte_vec_t sig { 171,61,208,196,118,51,245,161,235,81,255,141,213,62,196,162,183,128,33,27,175,211,34,31,58,203,79,94,143,124,42,225,46,223,90,205,245,77,218,58,127,202,216,148,204,202,217,39,28,37,11,150,248,10,187,237,207,228,2,54,192,95,238,191 };
    byte_vec_t pk { 2,230,81,255,244,27,255,7,139,105,69,35,225,118,40,213,198,179,123,220,194,165,214,220,255,190,7,204,109,3,166,172,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 544 ") {
    byte_vec_t msg { 46,123,63,221 };
    byte_vec_t sig { 88,51,49,86,178,84,117,219,137,26,56,119,231,104,2,76,246,230,159,204,177,68,83,206,157,45,87,248,6,198,166,165,2,137,53,189,5,218,74,227,149,224,218,200,111,243,178,24,38,2,48,156,235,238,136,28,74,123,113,135,207,211,90,81 };
    byte_vec_t pk { 4,234,42,89,14,68,141,7,19,1,213,107,124,1,53,94,125,139,149,72,253,15,124,136,39,145,165,83,28,13,38,242,166,124,232,87,238,160,216,98,249,194,43,207,103,72,213,148,44,47,140,179,70,199,18,54,170,89,51,16,213,176,66,124,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 544 ") {
    byte_vec_t msg { 82,150,107,5 };
    byte_vec_t sig { 244,10,242,227,36,246,243,186,247,210,49,12,67,108,244,242,114,163,225,207,196,237,214,41,40,40,98,23,201,0,15,182,167,111,226,154,82,8,26,111,41,19,177,68,140,57,80,251,77,253,39,13,133,46,12,106,135,192,128,105,167,33,51,222 };
    byte_vec_t pk { 4,159,255,21,197,236,74,89,43,41,143,99,177,75,45,119,121,243,134,146,29,46,88,113,135,179,224,56,72,188,89,204,197,86,25,76,64,91,84,172,84,47,250,227,39,83,190,50,254,65,118,125,209,220,63,133,7,72,195,243,109,195,219,74,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 544 ") {
    byte_vec_t msg { 36,182,67,251 };
    byte_vec_t sig { 127,243,63,36,69,27,152,94,129,64,23,97,251,35,23,154,252,37,96,228,38,224,210,110,4,126,15,58,20,194,70,74,253,243,191,129,170,225,147,145,193,114,115,70,200,3,126,57,11,229,54,202,153,237,59,182,74,231,182,191,81,57,29,102 };
    byte_vec_t pk { 3,38,43,63,88,39,44,35,252,175,209,19,37,112,191,187,161,6,186,55,87,74,129,14,163,233,72,172,97,147,71,34,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 544 ") {
    byte_vec_t msg { 68,87,121,208 };
    byte_vec_t sig { 133,202,9,190,97,248,143,18,115,218,146,56,130,215,213,51,136,224,46,72,205,7,61,137,195,200,59,196,201,52,80,100,86,248,33,26,13,32,10,154,153,171,141,148,225,4,215,182,183,35,134,15,198,223,233,192,229,201,5,159,137,43,52,250 };
    byte_vec_t pk { 2,193,26,108,60,172,224,100,43,37,224,7,18,84,92,32,247,124,214,150,47,215,65,211,64,195,116,62,88,52,243,142,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 545 ") {
    byte_vec_t msg { 196,128,101,32 };
    byte_vec_t sig { 18,47,224,182,254,243,120,216,68,45,34,231,65,155,179,100,51,42,79,21,117,29,207,49,156,68,6,37,210,179,141,200,16,152,38,65,152,68,183,59,228,33,161,239,107,0,193,219,199,113,135,141,225,119,17,176,84,198,85,76,118,22,208,168 };
    byte_vec_t pk { 4,35,118,216,103,129,253,102,211,176,82,222,59,113,233,44,79,212,149,200,113,138,196,149,214,99,224,46,11,106,204,7,153,15,102,229,130,217,191,192,122,69,161,79,215,120,120,254,226,83,220,7,103,103,251,76,189,225,170,227,0,125,30,197,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 545 ") {
    byte_vec_t msg { 240,127,104,243 };
    byte_vec_t sig { 250,17,200,212,239,143,14,212,168,189,42,192,71,64,48,55,2,255,147,164,227,108,253,166,163,43,7,131,252,32,58,33,35,82,61,14,67,183,196,180,69,100,13,175,103,0,78,158,201,83,197,72,188,42,204,131,126,197,8,111,29,118,160,161 };
    byte_vec_t pk { 4,57,165,143,92,191,30,94,37,24,202,163,23,186,218,47,159,115,26,78,250,124,65,141,177,86,119,184,223,186,78,144,84,227,159,214,214,51,244,4,206,145,65,27,13,172,73,43,100,254,35,169,184,113,141,115,255,239,150,128,77,209,225,162,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 545 ") {
    byte_vec_t msg { 75,86,104,17 };
    byte_vec_t sig { 180,58,186,44,113,71,207,99,114,155,81,52,36,100,38,209,126,65,239,20,18,159,16,13,248,199,176,222,149,232,116,134,152,33,81,164,184,228,66,110,115,133,65,250,87,147,99,164,65,16,203,155,210,224,113,145,51,231,63,10,19,217,175,29 };
    byte_vec_t pk { 3,81,250,226,66,134,232,165,113,174,94,54,167,152,105,171,186,35,248,122,204,139,160,8,253,104,223,46,105,34,229,242,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 545 ") {
    byte_vec_t msg { 192,58,123,24 };
    byte_vec_t sig { 40,91,43,235,79,104,81,73,73,253,203,135,71,11,88,124,166,57,128,168,35,192,125,187,121,132,47,184,196,71,78,90,250,233,180,155,128,103,29,41,240,80,207,204,200,23,212,150,78,201,184,28,204,131,157,102,26,123,4,160,58,113,189,250 };
    byte_vec_t pk { 3,61,34,192,132,43,239,94,207,53,37,185,116,91,77,245,6,202,218,175,68,127,29,45,218,87,116,221,235,252,165,185,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 546 ") {
    byte_vec_t msg { 221,6,17,37 };
    byte_vec_t sig { 167,223,175,110,249,128,110,222,72,177,75,138,133,246,244,144,71,207,61,210,177,114,212,12,113,53,17,250,9,108,141,237,125,71,69,118,154,5,104,146,201,21,207,83,170,225,108,231,114,84,72,227,48,57,62,117,129,153,70,246,220,249,195,158 };
    byte_vec_t pk { 4,234,235,92,77,42,128,66,218,155,63,163,227,55,67,160,165,169,160,52,58,225,209,180,41,73,133,132,151,160,137,41,173,107,251,79,208,127,81,184,135,250,153,13,190,11,120,33,220,15,9,208,206,175,9,94,188,13,38,172,242,57,8,220,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 546 ") {
    byte_vec_t msg { 1,77,250,172 };
    byte_vec_t sig { 6,114,32,61,166,7,24,130,111,135,16,64,46,58,1,237,0,34,116,185,125,206,34,88,216,148,36,232,6,99,50,53,235,32,59,39,204,156,134,185,161,94,69,208,170,147,44,157,72,24,75,216,68,96,164,67,166,146,2,21,127,98,46,94 };
    byte_vec_t pk { 4,156,217,251,123,10,105,187,169,234,11,153,65,198,254,174,89,160,224,225,180,231,150,141,236,129,16,112,127,42,135,6,72,151,215,253,234,97,34,13,68,71,121,150,165,13,243,220,116,139,145,157,35,249,199,231,129,44,35,221,211,238,229,68,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 546 ") {
    byte_vec_t msg { 101,55,166,89 };
    byte_vec_t sig { 84,63,216,155,108,157,37,126,35,134,143,75,79,180,40,105,217,156,41,77,156,162,151,149,144,73,166,127,255,144,170,108,81,77,4,144,123,8,125,161,22,144,112,8,201,95,110,52,134,181,96,145,65,236,171,186,231,148,215,180,66,132,50,170 };
    byte_vec_t pk { 3,8,16,89,49,63,42,249,7,227,174,114,34,10,22,91,59,68,102,25,167,203,202,176,92,20,154,233,212,159,88,225,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 546 ") {
    byte_vec_t msg { 19,175,230,2 };
    byte_vec_t sig { 13,177,15,20,80,236,25,85,160,166,242,79,88,166,169,90,220,4,188,10,59,206,89,64,145,89,132,229,227,196,119,45,172,99,202,254,148,46,202,126,93,105,153,53,30,249,117,133,210,149,9,190,214,140,124,226,209,244,15,130,116,9,251,11 };
    byte_vec_t pk { 3,222,228,31,71,41,135,84,25,235,204,81,165,237,73,220,143,5,90,36,140,171,221,214,67,171,27,44,3,84,125,53,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 547 ") {
    byte_vec_t msg { 218,136,242,55 };
    byte_vec_t sig { 188,103,7,207,116,147,153,201,45,88,196,159,32,58,80,71,65,52,173,49,112,110,198,134,38,176,46,157,27,9,121,45,159,145,50,122,26,66,196,225,252,204,153,25,91,71,228,47,18,72,115,70,63,33,18,73,44,112,30,10,214,37,145,247 };
    byte_vec_t pk { 4,65,95,252,243,161,215,23,147,1,28,232,2,218,26,209,0,249,51,93,68,237,219,26,222,188,233,138,69,36,166,232,97,56,122,177,247,35,26,216,225,105,232,188,107,231,243,211,218,210,125,210,1,235,198,224,188,143,208,120,179,70,99,166,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 547 ") {
    byte_vec_t msg { 173,57,60,168 };
    byte_vec_t sig { 150,84,28,207,51,70,13,118,132,47,43,13,243,245,177,71,166,67,74,235,117,191,83,64,135,76,90,136,105,184,185,131,212,2,127,85,225,221,87,246,33,233,194,86,9,194,114,62,58,205,61,122,1,14,34,70,165,2,199,232,45,191,202,9 };
    byte_vec_t pk { 4,121,180,32,172,236,167,0,158,160,210,129,93,45,115,49,26,141,127,201,14,203,116,37,140,46,100,255,179,5,96,188,88,120,196,243,251,89,202,69,39,126,240,114,104,15,28,25,236,255,15,217,166,34,42,203,185,52,5,191,9,99,129,62,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 547 ") {
    byte_vec_t msg { 116,223,52,114 };
    byte_vec_t sig { 236,238,212,34,96,100,2,185,10,33,144,184,24,15,193,244,81,105,36,95,206,17,4,10,53,99,4,69,114,68,135,144,76,121,94,95,128,141,177,16,113,193,250,74,245,8,32,234,22,119,58,246,155,68,14,88,250,237,150,4,54,65,99,46 };
    byte_vec_t pk { 3,115,172,244,54,124,140,245,196,102,36,66,174,113,56,136,95,4,103,92,20,142,204,242,253,19,241,163,92,193,152,189,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 547 ") {
    byte_vec_t msg { 236,139,241,102 };
    byte_vec_t sig { 125,236,227,17,74,174,14,125,116,168,10,81,237,107,203,174,197,175,149,13,207,39,230,178,70,111,129,170,10,231,44,151,88,215,81,4,85,174,213,220,11,96,68,187,198,175,126,111,183,2,82,212,177,198,77,120,104,24,41,16,184,222,254,142 };
    byte_vec_t pk { 3,194,98,248,126,197,128,10,47,4,3,34,201,112,115,119,143,121,171,18,60,1,5,84,180,122,10,224,224,80,62,160,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 548 ") {
    byte_vec_t msg { 106,140,219,241 };
    byte_vec_t sig { 19,167,144,168,200,126,159,115,150,47,168,214,177,108,250,231,66,104,112,247,41,210,141,224,159,79,25,13,201,81,32,154,254,230,85,234,39,247,119,182,87,19,126,137,51,212,145,203,2,138,119,16,9,115,78,110,115,196,68,235,223,223,44,26 };
    byte_vec_t pk { 4,184,147,114,138,47,76,173,77,118,62,193,93,110,34,73,83,33,177,98,112,184,35,232,60,183,242,203,201,80,76,136,91,103,74,200,65,187,155,79,39,210,96,101,8,147,87,10,30,119,65,247,239,211,109,184,184,154,182,85,249,88,234,250,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 548 ") {
    byte_vec_t msg { 251,153,162,241 };
    byte_vec_t sig { 239,233,170,16,237,141,139,215,221,232,215,205,193,162,208,24,44,23,160,127,116,24,0,61,79,133,179,174,88,128,90,241,233,210,210,196,1,70,195,157,68,241,243,201,108,189,52,60,182,170,5,112,3,119,36,160,46,232,174,107,206,130,174,247 };
    byte_vec_t pk { 4,106,31,55,154,251,64,169,176,121,26,250,239,188,175,152,156,15,158,100,217,30,254,81,97,153,172,237,82,61,5,68,8,180,137,69,199,177,98,117,113,228,83,34,228,174,115,89,10,233,227,77,235,98,31,4,68,147,218,15,97,26,7,121,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 548 ") {
    byte_vec_t msg { 43,43,86,184 };
    byte_vec_t sig { 148,128,10,145,112,221,104,146,1,31,11,253,102,70,190,53,13,186,77,146,113,203,167,219,65,106,240,21,47,119,38,98,4,56,129,147,124,49,117,151,249,171,114,17,6,105,184,30,142,143,99,83,36,151,130,39,19,14,71,111,237,83,196,149 };
    byte_vec_t pk { 3,210,22,16,0,205,2,141,116,114,174,151,222,206,105,195,162,29,143,12,21,207,115,143,2,111,203,123,188,7,14,156,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 548 ") {
    byte_vec_t msg { 64,22,167,109 };
    byte_vec_t sig { 202,207,75,50,240,57,252,155,72,27,132,1,71,158,161,84,97,50,209,193,18,143,66,195,26,56,67,41,46,169,134,41,39,13,238,67,252,23,172,174,140,241,213,36,123,155,14,229,92,3,13,105,33,130,54,66,61,168,199,122,100,19,113,14 };
    byte_vec_t pk { 3,197,127,94,131,241,50,187,0,58,20,22,223,153,198,77,209,123,21,168,204,247,83,76,11,140,231,221,95,206,11,6,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 549 ") {
    byte_vec_t msg { 62,48,82,120 };
    byte_vec_t sig { 132,19,84,173,129,219,172,2,213,113,29,125,105,131,0,96,94,51,183,245,153,186,157,241,228,215,42,72,24,202,48,41,194,215,222,109,164,32,26,31,45,220,44,103,248,76,181,14,181,113,45,64,17,202,202,54,204,170,80,14,97,7,37,78 };
    byte_vec_t pk { 4,236,67,117,108,235,44,34,245,236,128,176,111,93,57,223,185,22,0,60,36,109,247,227,213,90,67,113,188,154,192,195,68,72,69,111,21,86,135,149,64,234,173,2,87,133,0,52,33,88,184,247,211,192,194,64,74,169,167,184,125,146,206,201,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 549 ") {
    byte_vec_t msg { 118,79,34,126 };
    byte_vec_t sig { 32,113,159,240,163,198,205,81,180,236,153,105,201,247,176,244,218,240,216,1,138,119,46,36,34,239,85,161,107,153,19,167,32,167,183,70,172,55,155,28,145,186,158,160,241,238,46,1,144,177,222,85,190,223,105,96,248,141,64,84,172,1,229,103 };
    byte_vec_t pk { 4,124,58,188,141,138,240,172,243,17,101,148,159,53,223,45,185,147,253,115,120,251,247,227,89,222,236,123,178,217,24,115,232,233,21,20,164,240,216,8,89,223,173,115,6,60,145,161,39,245,194,112,88,154,21,26,55,17,117,141,103,216,124,52,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 549 ") {
    byte_vec_t msg { 36,168,67,126 };
    byte_vec_t sig { 242,147,191,242,88,175,250,217,102,190,153,18,246,100,57,44,137,202,250,93,11,153,160,15,42,224,211,67,9,176,197,128,89,65,131,232,184,51,216,13,165,48,17,173,233,2,61,91,17,179,30,4,187,190,10,228,213,193,147,175,153,152,241,36 };
    byte_vec_t pk { 2,201,242,87,122,248,22,221,251,182,118,216,34,250,251,172,37,217,122,35,7,67,27,32,145,16,189,31,68,4,174,54,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 549 ") {
    byte_vec_t msg { 104,78,162,120 };
    byte_vec_t sig { 9,187,145,129,69,87,32,56,43,74,76,254,73,209,168,45,19,44,251,202,232,154,54,92,39,61,48,214,100,228,87,16,242,210,42,58,226,61,211,29,190,233,201,251,96,244,54,20,252,145,131,75,229,125,129,16,52,112,8,40,34,138,35,182 };
    byte_vec_t pk { 2,71,187,184,232,188,123,229,9,31,127,132,129,225,153,139,8,236,163,207,71,247,90,49,188,121,223,19,248,223,248,148,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 550 ") {
    byte_vec_t msg { 209,49,240,40 };
    byte_vec_t sig { 197,139,148,60,70,177,164,52,194,238,6,42,101,139,49,134,231,166,220,36,57,244,62,77,27,157,251,231,135,219,1,160,104,105,133,170,148,114,185,243,190,146,2,155,79,12,121,22,112,124,112,217,143,68,190,186,211,50,35,83,156,67,182,143 };
    byte_vec_t pk { 4,161,187,175,238,170,145,102,28,197,235,159,125,232,217,244,31,80,3,212,81,114,4,149,144,97,97,73,95,60,96,57,105,163,12,243,93,194,18,151,167,40,200,143,219,87,3,63,87,117,3,68,229,178,36,243,70,123,160,208,36,57,183,193,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 550 ") {
    byte_vec_t msg { 246,223,227,150 };
    byte_vec_t sig { 17,139,151,54,9,252,114,2,216,135,254,198,38,215,177,136,222,246,190,54,148,58,154,254,49,92,194,214,88,253,17,69,17,224,217,174,42,20,195,158,111,82,113,162,61,1,190,32,116,116,122,226,85,125,50,109,109,182,36,42,3,198,155,176 };
    byte_vec_t pk { 4,73,11,207,73,216,11,229,8,147,144,14,109,127,138,34,12,172,225,217,246,244,153,236,150,140,146,227,133,174,172,93,225,208,73,203,208,188,189,251,84,174,220,82,44,74,18,216,32,38,121,153,220,202,221,95,121,62,67,182,115,50,43,155,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 550 ") {
    byte_vec_t msg { 114,238,115,234 };
    byte_vec_t sig { 206,187,17,18,113,177,92,58,203,90,7,179,107,209,192,159,13,24,190,120,200,198,18,40,153,96,171,43,92,221,234,111,91,219,28,232,141,27,145,113,149,176,198,27,201,149,102,0,100,151,255,81,8,138,46,87,48,143,25,174,56,176,235,136 };
    byte_vec_t pk { 2,108,74,210,77,212,229,199,36,21,173,245,93,251,197,132,7,171,249,65,64,178,90,2,58,155,203,252,151,28,39,90,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 550 ") {
    byte_vec_t msg { 8,169,178,34 };
    byte_vec_t sig { 49,234,108,34,94,129,50,8,64,163,222,214,138,98,250,13,22,153,17,148,213,188,214,236,117,217,132,255,207,244,189,216,123,227,112,164,107,40,105,77,31,244,126,227,121,205,240,225,122,98,143,221,133,66,27,55,23,74,206,157,156,166,81,154 };
    byte_vec_t pk { 2,182,65,243,27,164,10,251,46,96,253,153,202,151,71,19,245,45,66,108,30,200,24,162,99,169,228,86,135,28,139,196,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 551 ") {
    byte_vec_t msg { 37,213,210,112 };
    byte_vec_t sig { 45,37,177,54,63,226,251,34,238,54,53,24,114,219,132,133,124,45,234,40,205,176,165,36,32,91,176,163,20,14,166,251,144,108,2,84,158,160,105,82,74,230,25,243,248,80,156,81,93,170,77,55,190,153,235,108,23,25,205,80,54,55,82,215 };
    byte_vec_t pk { 4,107,133,15,60,232,51,102,195,242,87,61,148,94,18,127,130,215,144,251,119,82,47,137,153,39,109,81,137,101,7,108,222,24,27,82,54,7,93,89,132,180,244,213,238,247,207,101,9,168,6,6,11,11,86,151,132,47,193,30,234,163,75,141,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 551 ") {
    byte_vec_t msg { 120,3,38,218 };
    byte_vec_t sig { 162,62,100,96,24,191,28,75,117,10,194,130,61,117,163,56,239,31,204,174,138,252,122,134,209,148,194,197,110,111,178,221,42,94,232,228,214,193,112,17,248,226,206,244,182,253,149,41,50,43,48,188,178,115,157,251,82,161,202,71,102,161,103,58 };
    byte_vec_t pk { 4,185,208,254,160,38,232,230,78,237,150,13,109,193,43,240,23,154,7,25,36,39,183,30,209,252,148,160,192,254,142,245,215,130,11,132,186,203,84,130,104,81,159,223,244,29,174,249,148,186,211,161,140,60,95,35,52,62,158,113,218,94,196,11,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 551 ") {
    byte_vec_t msg { 224,251,48,153 };
    byte_vec_t sig { 207,103,239,122,188,111,255,42,0,101,215,52,180,115,206,160,171,30,231,41,129,67,36,166,103,76,215,98,79,47,16,125,207,214,213,224,237,133,101,216,163,47,250,152,154,251,3,132,249,137,152,84,11,30,46,166,216,250,241,252,111,101,230,72 };
    byte_vec_t pk { 2,234,86,33,199,196,138,41,237,241,144,217,201,23,205,165,46,49,67,0,248,113,220,195,28,217,234,109,202,1,193,16,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 551 ") {
    byte_vec_t msg { 200,85,149,196 };
    byte_vec_t sig { 237,130,67,204,135,173,41,227,54,188,72,51,169,173,39,242,24,229,146,41,45,185,38,248,32,172,120,107,180,15,16,174,115,194,117,111,42,233,249,84,66,36,13,31,96,59,160,97,80,112,246,124,46,52,89,0,178,128,67,153,215,15,32,18 };
    byte_vec_t pk { 2,207,79,11,249,111,178,7,244,26,242,80,177,31,241,105,146,199,155,158,194,184,40,235,217,0,24,178,176,166,231,10,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 552 ") {
    byte_vec_t msg { 224,249,22,236 };
    byte_vec_t sig { 94,74,185,77,29,137,71,2,251,169,235,103,50,21,186,173,7,183,23,1,130,84,125,180,114,43,150,45,246,166,184,68,11,150,2,29,196,228,5,62,40,184,16,157,27,177,2,154,173,196,52,244,132,159,237,100,10,109,86,48,238,131,1,160 };
    byte_vec_t pk { 4,165,2,228,178,184,90,186,214,44,225,86,145,185,69,44,52,250,192,5,219,248,196,16,140,22,62,238,68,110,202,190,171,123,209,47,186,98,12,24,213,59,171,114,12,94,57,54,136,184,94,44,117,125,72,47,140,155,228,179,187,43,39,219,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 552 ") {
    byte_vec_t msg { 68,15,233,120 };
    byte_vec_t sig { 42,146,62,4,176,84,151,97,250,169,65,38,245,246,78,15,144,186,246,32,160,249,113,18,226,249,149,30,132,150,119,239,247,81,170,65,227,47,62,57,221,21,82,196,78,77,175,125,83,209,177,104,180,179,110,171,15,89,147,151,140,164,134,82 };
    byte_vec_t pk { 4,161,143,87,161,39,58,10,24,15,25,158,31,39,101,155,211,55,93,18,71,210,116,56,231,143,255,98,56,63,117,42,139,208,25,60,235,254,26,126,132,232,54,145,48,88,96,166,128,87,17,192,54,184,139,248,248,17,101,165,102,76,248,183,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 552 ") {
    byte_vec_t msg { 236,152,61,105 };
    byte_vec_t sig { 30,241,187,174,26,221,89,61,141,33,184,63,68,140,145,255,171,111,116,35,15,20,29,150,206,21,123,150,245,90,6,13,184,81,255,97,201,70,206,110,50,219,49,2,47,207,157,236,34,24,106,225,156,219,1,181,202,130,136,210,155,159,71,79 };
    byte_vec_t pk { 2,34,104,7,177,203,6,66,34,76,79,219,33,158,221,204,8,189,60,215,15,221,0,90,34,109,255,185,242,246,79,166,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 552 ") {
    byte_vec_t msg { 48,96,118,139 };
    byte_vec_t sig { 140,160,223,170,27,34,39,66,81,25,9,212,99,152,160,11,99,176,85,112,69,195,113,0,170,98,172,34,182,66,93,205,117,70,189,19,50,125,116,55,199,171,194,3,74,247,234,35,168,67,147,61,200,13,128,82,89,128,136,37,23,209,31,81 };
    byte_vec_t pk { 2,224,228,254,231,146,104,91,8,63,35,167,37,99,145,223,157,2,214,236,134,74,141,47,94,250,91,239,68,0,192,234,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 553 ") {
    byte_vec_t msg { 27,135,182,245 };
    byte_vec_t sig { 70,205,203,151,152,72,130,243,3,120,160,248,48,99,184,174,185,112,244,23,255,152,253,55,178,18,161,230,192,202,210,253,163,38,207,197,2,15,77,25,253,83,171,27,105,173,139,59,196,101,123,134,159,48,88,142,87,219,156,241,139,175,22,31 };
    byte_vec_t pk { 4,84,249,86,245,67,204,69,125,164,202,227,106,238,116,120,207,221,151,90,55,168,183,29,150,84,155,129,131,28,34,167,52,122,101,37,224,27,203,244,48,91,219,16,16,64,93,226,78,49,67,145,245,224,78,68,248,79,112,83,30,142,23,85,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 553 ") {
    byte_vec_t msg { 195,154,253,13 };
    byte_vec_t sig { 108,52,48,59,121,187,77,128,123,87,7,186,35,34,154,134,54,250,237,2,70,248,30,250,5,67,56,165,46,86,91,115,77,47,209,97,188,236,86,11,158,188,232,198,40,47,40,23,248,58,158,203,9,186,22,119,87,204,174,166,199,171,125,254 };
    byte_vec_t pk { 4,21,127,21,76,35,93,94,39,83,203,199,46,55,84,119,143,39,231,33,248,186,39,69,8,106,252,195,90,141,39,57,82,198,16,135,206,121,2,67,78,25,6,28,52,112,65,23,169,234,239,202,154,153,195,35,164,121,68,84,73,179,146,178,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 553 ") {
    byte_vec_t msg { 12,221,210,112 };
    byte_vec_t sig { 199,24,175,53,149,72,254,202,243,237,130,109,193,232,253,91,69,49,220,37,141,95,27,120,0,101,31,173,178,239,80,24,76,73,43,129,98,31,111,96,157,146,147,52,189,71,71,168,248,177,231,72,236,231,49,161,84,46,89,110,148,14,223,235 };
    byte_vec_t pk { 2,71,82,37,7,202,16,61,13,27,66,38,140,26,161,31,122,71,22,56,8,41,167,62,115,7,211,98,81,171,104,204,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 553 ") {
    byte_vec_t msg { 5,70,23,132 };
    byte_vec_t sig { 253,78,119,135,110,140,207,47,200,137,255,8,199,252,101,61,81,153,130,34,130,159,32,196,232,141,134,218,61,13,184,105,161,4,66,103,47,120,78,85,120,143,103,211,112,236,10,72,104,116,81,227,35,249,226,196,248,7,11,34,186,231,254,211 };
    byte_vec_t pk { 2,6,115,166,63,226,195,101,106,221,157,75,162,222,85,44,150,119,11,209,172,224,34,19,81,26,63,58,12,222,19,175,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 554 ") {
    byte_vec_t msg { 185,204,151,205 };
    byte_vec_t sig { 134,140,122,255,97,125,40,72,63,188,185,116,83,43,192,251,80,229,77,228,88,249,112,163,31,157,44,156,165,174,217,22,225,81,59,140,134,61,193,24,1,101,138,132,13,133,20,207,73,253,237,16,166,0,59,201,141,88,100,107,64,176,85,105 };
    byte_vec_t pk { 4,82,91,82,32,48,180,186,212,122,216,175,85,88,159,162,84,208,18,230,34,149,137,128,213,1,182,222,75,195,80,59,167,128,187,136,180,193,147,136,91,93,56,79,226,74,171,118,9,87,178,187,123,49,154,84,29,142,54,21,173,153,68,40,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 554 ") {
    byte_vec_t msg { 183,184,153,240 };
    byte_vec_t sig { 33,7,7,163,211,113,5,225,25,238,158,127,108,140,59,131,3,41,199,238,144,203,36,19,8,141,136,1,19,231,41,200,223,199,179,98,123,60,52,144,96,40,202,197,5,220,129,90,118,137,47,245,8,13,181,65,170,32,138,4,19,223,101,35 };
    byte_vec_t pk { 4,56,97,197,206,124,216,117,4,113,220,106,83,100,80,59,76,151,159,2,125,118,94,149,62,1,86,91,245,103,108,227,104,66,209,252,253,146,161,254,107,188,68,177,177,216,225,7,72,250,80,66,241,65,186,133,227,96,105,197,238,120,207,147,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 554 ") {
    byte_vec_t msg { 160,116,253,159 };
    byte_vec_t sig { 169,92,75,103,188,247,101,215,109,176,160,42,249,30,12,234,104,31,91,34,90,204,223,15,136,242,95,113,90,255,105,134,246,196,160,209,39,167,88,15,155,221,38,46,231,190,249,40,127,194,125,95,132,25,167,255,70,233,102,235,64,67,224,229 };
    byte_vec_t pk { 2,168,163,62,152,175,20,213,146,87,153,241,207,64,143,142,166,46,88,53,58,252,92,152,51,44,138,230,147,164,154,67,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 554 ") {
    byte_vec_t msg { 220,29,86,112 };
    byte_vec_t sig { 94,198,223,226,53,98,24,250,81,113,168,10,83,35,237,128,1,249,167,172,208,238,12,59,72,124,177,227,49,196,179,116,2,179,53,223,65,236,16,113,217,135,238,211,13,174,169,3,22,159,231,85,144,82,85,136,246,129,105,172,170,36,27,62 };
    byte_vec_t pk { 3,53,182,64,176,37,33,190,111,17,69,98,3,108,157,144,212,160,159,84,172,148,245,173,93,131,149,174,145,107,27,169,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 555 ") {
    byte_vec_t msg { 219,31,65,170 };
    byte_vec_t sig { 186,147,225,159,111,31,168,202,111,226,39,173,131,27,60,166,52,109,10,89,85,67,92,33,199,123,134,58,69,32,132,226,238,102,9,37,255,55,164,140,204,82,90,79,144,143,51,155,242,151,8,251,237,2,239,107,130,216,66,54,67,149,69,32 };
    byte_vec_t pk { 4,187,247,72,51,243,50,239,86,132,0,84,113,45,242,221,80,108,34,212,4,211,104,80,160,124,14,189,5,254,196,156,91,118,141,120,210,70,254,60,165,86,243,40,68,41,152,165,13,107,57,141,247,53,184,118,68,15,46,230,172,143,205,203,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 555 ") {
    byte_vec_t msg { 222,84,209,171 };
    byte_vec_t sig { 62,135,185,197,109,164,190,199,17,208,231,169,88,208,135,204,207,47,204,54,210,137,113,31,55,54,141,70,109,236,3,136,132,150,162,17,201,221,77,239,104,216,163,228,247,61,195,148,27,83,107,79,10,165,173,91,80,238,16,134,54,249,152,19 };
    byte_vec_t pk { 4,165,218,205,8,126,174,124,211,131,130,180,16,51,59,228,221,165,54,69,213,21,70,90,251,208,32,105,251,255,6,97,73,100,226,159,1,68,142,133,139,196,32,197,108,48,231,187,165,133,217,37,187,4,178,207,75,189,119,241,182,113,142,23,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 555 ") {
    byte_vec_t msg { 21,191,2,106 };
    byte_vec_t sig { 86,99,6,35,90,52,7,50,194,252,207,204,178,250,61,221,73,183,40,83,43,136,57,250,188,195,182,15,192,131,93,169,211,58,195,162,234,41,162,212,130,23,23,166,186,90,126,85,154,22,22,10,169,3,162,48,130,191,200,154,169,23,72,35 };
    byte_vec_t pk { 2,16,237,3,189,102,247,70,54,249,240,51,25,12,118,35,66,170,86,147,111,51,175,78,236,36,236,42,65,9,97,198,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 555 ") {
    byte_vec_t msg { 204,27,131,254 };
    byte_vec_t sig { 231,25,106,212,80,55,27,62,114,41,227,242,223,151,246,221,147,9,68,119,106,52,124,248,247,54,68,94,184,39,147,112,148,177,60,45,32,50,113,118,134,163,86,69,204,189,93,247,205,213,122,40,144,86,99,198,58,175,123,241,8,149,36,186 };
    byte_vec_t pk { 2,105,168,66,111,124,186,96,172,147,173,153,169,246,14,133,27,73,91,118,37,92,156,87,52,43,184,84,242,27,155,35,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 556 ") {
    byte_vec_t msg { 1,42,141,175 };
    byte_vec_t sig { 41,85,195,250,141,120,68,225,44,92,6,161,231,93,80,23,4,94,211,206,84,204,200,43,148,224,62,101,140,75,189,246,68,17,104,162,137,176,172,70,206,49,251,56,171,243,16,26,11,150,93,0,81,24,186,96,228,99,82,155,1,123,163,54 };
    byte_vec_t pk { 4,243,25,215,143,51,245,99,141,175,223,182,191,54,240,42,161,31,102,118,156,122,196,145,215,162,233,49,193,234,1,94,50,111,194,118,242,219,110,139,217,225,190,99,207,89,229,123,252,4,232,102,202,20,196,62,143,66,182,111,72,219,87,216,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 556 ") {
    byte_vec_t msg { 230,151,208,241 };
    byte_vec_t sig { 169,129,144,181,111,196,85,99,201,158,242,158,114,201,210,225,40,11,31,12,101,104,4,7,209,108,108,173,125,151,58,192,16,157,201,251,151,125,246,255,126,195,170,104,199,209,128,191,179,63,34,49,89,10,46,111,153,68,141,199,7,245,108,38 };
    byte_vec_t pk { 4,86,92,169,166,214,207,223,187,32,154,111,135,160,64,153,240,39,5,108,103,67,161,90,251,84,167,170,89,226,49,108,144,176,126,158,252,169,47,159,151,126,229,208,109,231,167,26,164,98,218,174,124,136,94,14,120,193,214,158,213,42,115,16,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 556 ") {
    byte_vec_t msg { 232,24,147,237 };
    byte_vec_t sig { 239,171,139,53,55,126,222,165,91,11,35,154,182,26,24,4,186,164,245,1,92,240,125,204,221,14,120,201,140,69,126,48,234,227,62,224,40,94,35,145,105,51,8,153,137,175,217,213,60,44,227,62,59,42,53,66,90,191,103,205,230,230,210,123 };
    byte_vec_t pk { 2,91,212,223,114,247,170,166,102,44,57,71,51,210,19,194,241,62,226,71,104,112,18,28,252,47,224,135,12,163,63,144,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 556 ") {
    byte_vec_t msg { 30,185,59,93 };
    byte_vec_t sig { 132,127,104,45,155,162,199,0,55,139,123,148,87,82,154,249,153,47,167,244,92,181,169,98,174,39,107,82,36,142,221,163,116,98,253,218,192,21,88,42,191,70,127,110,194,202,125,119,91,92,103,99,118,37,81,210,15,106,245,83,103,218,171,156 };
    byte_vec_t pk { 3,39,202,151,29,73,102,33,175,30,190,36,89,161,64,191,254,215,105,97,58,134,112,25,60,77,33,49,188,3,36,179,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 557 ") {
    byte_vec_t msg { 205,139,94,213 };
    byte_vec_t sig { 202,143,51,172,194,173,219,15,90,116,200,154,208,11,187,227,131,75,138,109,242,7,129,7,13,241,160,208,99,37,88,176,99,202,249,20,217,207,97,31,60,140,195,141,245,54,195,177,183,40,90,208,49,148,83,155,220,216,222,188,146,61,252,235 };
    byte_vec_t pk { 4,31,225,211,73,171,248,107,0,192,163,177,128,205,106,3,234,237,159,102,248,31,105,24,191,72,39,226,132,221,133,217,106,3,159,133,230,116,228,49,51,32,167,6,2,233,217,76,230,191,35,80,131,23,180,97,184,31,2,78,138,77,130,198,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 557 ") {
    byte_vec_t msg { 254,160,69,197 };
    byte_vec_t sig { 46,224,186,141,230,143,117,246,123,65,36,33,49,72,181,127,65,41,72,134,166,67,166,37,78,105,48,122,88,176,243,148,59,30,31,201,241,157,19,184,9,96,219,216,191,148,192,239,24,216,23,113,152,109,148,4,158,128,58,133,231,151,7,105 };
    byte_vec_t pk { 4,17,47,9,215,93,89,152,96,127,184,230,98,40,210,87,126,196,73,37,157,102,12,158,34,153,173,134,166,190,141,144,84,237,59,69,186,242,176,14,139,113,226,208,216,168,22,114,140,17,147,212,145,229,199,62,152,126,205,114,137,162,86,37,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 557 ") {
    byte_vec_t msg { 100,223,31,15 };
    byte_vec_t sig { 49,52,113,150,55,208,87,10,64,187,247,64,74,174,128,56,18,209,253,121,160,154,235,29,81,195,246,165,195,51,83,227,15,46,125,109,214,37,24,225,13,85,42,39,39,5,129,12,132,70,113,185,211,131,72,222,254,212,218,85,240,146,192,184 };
    byte_vec_t pk { 2,246,60,109,141,218,166,200,0,106,208,162,45,115,87,25,70,213,119,163,207,165,3,236,173,111,9,59,196,72,89,24,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 557 ") {
    byte_vec_t msg { 160,190,172,96 };
    byte_vec_t sig { 157,129,43,235,240,199,238,32,170,180,9,252,201,94,211,29,207,36,164,2,55,37,126,59,231,164,253,55,253,204,248,189,216,190,129,33,172,234,36,45,60,36,109,159,4,45,79,186,205,190,18,175,169,4,233,22,111,154,87,253,121,119,219,20 };
    byte_vec_t pk { 3,102,130,61,7,175,211,42,16,153,198,217,85,238,41,47,2,162,52,64,140,252,166,132,170,88,251,94,147,170,89,208,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 558 ") {
    byte_vec_t msg { 12,132,56,165 };
    byte_vec_t sig { 238,205,131,252,212,164,117,11,160,160,167,247,188,164,168,44,105,201,203,238,85,180,14,219,200,12,205,39,17,92,223,27,211,61,105,94,100,25,192,202,213,8,150,159,91,9,160,155,88,71,126,87,114,39,205,50,244,75,221,0,85,206,199,253 };
    byte_vec_t pk { 4,217,208,29,250,26,230,89,228,94,202,161,238,163,68,38,202,169,104,245,121,194,133,120,216,108,29,84,20,198,234,28,109,90,207,72,117,247,42,226,85,254,73,231,123,108,55,61,12,175,186,185,158,237,141,187,239,7,212,149,176,6,249,109,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 558 ") {
    byte_vec_t msg { 95,65,197,254 };
    byte_vec_t sig { 216,174,119,50,74,191,161,150,195,65,189,176,48,199,180,125,94,155,183,0,52,130,204,143,78,110,101,127,247,31,54,252,200,73,194,78,41,133,189,76,98,247,185,148,166,109,24,197,177,138,163,254,9,23,228,212,120,22,247,21,185,54,89,22 };
    byte_vec_t pk { 4,132,24,41,228,201,228,68,14,134,87,205,6,6,163,18,226,148,205,205,90,45,165,145,25,245,78,4,195,53,185,84,91,104,208,167,64,121,238,15,203,83,127,6,215,240,134,68,71,153,43,142,39,55,184,51,11,30,212,75,174,134,91,171,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 558 ") {
    byte_vec_t msg { 237,69,174,165 };
    byte_vec_t sig { 23,23,32,15,81,148,229,106,130,137,115,206,50,98,211,138,115,175,156,122,159,176,73,1,16,125,63,53,193,44,179,82,113,55,134,59,167,26,193,114,123,160,65,232,85,25,56,242,184,21,146,241,175,139,107,159,71,163,156,111,233,13,73,90 };
    byte_vec_t pk { 3,30,145,115,70,81,11,186,198,117,107,170,116,240,90,89,173,40,46,7,23,74,228,73,113,206,193,36,54,153,233,116,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 558 ") {
    byte_vec_t msg { 37,3,173,71 };
    byte_vec_t sig { 248,96,246,42,41,153,40,178,138,228,30,201,152,125,207,5,104,107,3,153,227,224,224,61,4,88,1,146,86,103,163,12,154,17,26,50,53,93,127,15,34,60,219,31,168,109,83,231,222,215,144,28,1,147,51,212,250,15,135,175,11,112,217,125 };
    byte_vec_t pk { 3,74,162,240,228,146,48,37,70,100,64,81,160,87,95,72,50,32,146,251,68,121,255,102,67,129,225,165,159,45,217,13,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 559 ") {
    byte_vec_t msg { 186,24,78,35 };
    byte_vec_t sig { 47,16,114,186,47,42,115,124,66,54,169,111,42,26,44,70,71,127,239,45,51,54,207,70,220,144,98,145,6,25,36,190,112,59,144,86,155,213,158,30,89,176,128,182,179,121,77,63,232,237,62,208,145,33,3,193,123,238,203,128,155,23,12,47 };
    byte_vec_t pk { 4,52,99,69,176,130,223,175,2,197,9,24,11,97,39,18,181,155,164,191,16,165,142,150,124,57,41,85,196,32,93,193,41,87,11,168,251,46,18,70,73,34,71,200,31,130,164,177,13,39,49,83,159,161,163,249,144,32,225,98,241,10,39,0,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 559 ") {
    byte_vec_t msg { 103,246,68,49 };
    byte_vec_t sig { 101,116,4,32,97,155,200,252,118,196,73,18,249,117,57,67,140,153,39,104,146,50,202,103,69,119,250,68,57,203,45,18,54,105,214,250,110,61,255,50,136,248,54,24,143,57,201,88,68,67,238,113,116,57,5,17,64,208,110,171,54,96,80,109 };
    byte_vec_t pk { 4,219,163,233,217,132,0,162,74,161,201,43,49,231,195,158,196,156,103,40,235,55,112,91,47,143,99,81,166,229,112,64,182,96,195,2,159,208,148,35,199,250,205,218,175,84,98,131,13,3,33,53,8,77,171,72,229,9,87,104,53,219,125,225,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 559 ") {
    byte_vec_t msg { 35,58,30,118 };
    byte_vec_t sig { 211,138,145,244,240,135,220,103,77,60,212,177,141,225,24,110,140,226,38,206,30,35,127,77,122,230,220,232,150,149,108,41,43,231,242,34,155,147,184,111,48,14,34,225,212,32,210,234,171,76,2,47,112,159,93,18,76,144,213,232,126,104,127,20 };
    byte_vec_t pk { 2,115,153,71,97,102,103,2,21,212,35,4,116,94,206,166,62,152,206,120,141,105,130,231,124,48,252,115,201,142,40,68,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 559 ") {
    byte_vec_t msg { 222,19,0,163 };
    byte_vec_t sig { 230,10,35,99,217,14,187,54,42,239,96,243,102,27,57,58,33,125,37,204,199,130,122,14,115,243,229,233,25,148,178,142,241,203,64,59,244,208,154,176,179,69,233,149,143,89,217,42,108,73,82,118,191,234,238,172,213,40,55,244,28,48,10,48 };
    byte_vec_t pk { 2,197,115,85,169,106,245,97,26,246,213,41,36,199,200,132,221,212,212,201,0,240,143,205,30,251,8,127,163,56,17,78,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 560 ") {
    byte_vec_t msg { 8,38,88,10 };
    byte_vec_t sig { 59,219,94,4,188,33,228,110,33,209,29,233,83,24,194,28,26,42,193,59,164,31,42,118,98,102,23,48,207,221,195,152,186,250,31,200,187,21,131,208,216,203,155,198,55,209,70,38,133,34,203,213,166,64,43,189,11,141,208,120,159,211,153,94 };
    byte_vec_t pk { 4,127,62,101,117,62,193,14,151,69,135,210,219,131,82,238,97,194,202,133,203,69,4,241,129,193,148,180,109,255,129,187,46,188,60,223,236,191,93,59,220,199,112,3,97,143,227,142,199,144,248,184,75,117,225,9,157,164,24,209,91,168,85,41,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 560 ") {
    byte_vec_t msg { 151,60,77,243 };
    byte_vec_t sig { 155,179,150,75,9,208,253,12,188,137,229,21,81,83,232,145,220,190,48,31,226,184,35,44,159,2,239,196,236,38,98,40,181,239,174,184,232,124,69,156,47,17,111,94,185,51,60,30,158,232,26,10,63,148,131,213,72,151,62,219,194,127,55,80 };
    byte_vec_t pk { 4,63,249,143,148,247,231,156,101,57,33,14,164,161,171,203,60,238,20,207,4,75,68,55,93,227,207,23,132,211,166,174,198,54,247,171,74,178,65,107,185,90,151,102,161,28,104,123,130,117,135,201,238,29,189,171,241,214,47,231,36,154,79,148,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 560 ") {
    byte_vec_t msg { 13,33,10,139 };
    byte_vec_t sig { 7,28,210,27,1,1,105,123,251,153,94,253,128,26,168,249,229,71,211,244,31,249,215,43,86,46,179,190,105,172,12,102,109,9,245,182,149,50,167,105,153,141,31,195,73,183,179,105,120,3,200,112,209,83,140,210,77,240,4,245,224,213,96,58 };
    byte_vec_t pk { 3,34,242,93,73,16,136,109,221,107,148,152,114,184,238,30,128,55,59,190,9,124,0,117,113,138,58,229,113,96,229,65,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 560 ") {
    byte_vec_t msg { 5,169,154,10 };
    byte_vec_t sig { 219,93,133,11,106,63,41,17,241,214,223,203,237,80,11,193,73,151,202,77,254,83,9,210,42,196,119,11,116,67,107,21,146,48,197,238,96,219,248,9,44,77,100,137,54,74,170,247,241,20,34,24,137,248,105,196,41,76,58,53,185,222,204,141 };
    byte_vec_t pk { 3,129,9,248,250,131,163,220,229,171,225,22,134,107,53,208,59,0,22,34,144,255,47,247,244,164,22,42,90,45,175,57,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 561 ") {
    byte_vec_t msg { 190,130,145,69 };
    byte_vec_t sig { 143,232,126,167,214,134,14,158,34,126,155,75,133,185,199,2,30,247,14,143,24,247,66,128,248,219,29,227,235,132,12,92,196,146,26,160,208,153,142,33,197,165,205,127,223,177,234,133,222,223,115,223,152,170,9,105,165,66,226,197,54,223,153,246 };
    byte_vec_t pk { 4,13,119,211,83,204,194,205,205,246,247,45,88,237,82,246,155,2,109,9,20,115,147,36,111,91,215,12,52,194,118,112,162,178,131,81,252,251,1,73,217,249,54,39,160,197,167,39,81,6,184,147,216,192,176,4,93,59,122,81,233,150,48,21,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 561 ") {
    byte_vec_t msg { 219,29,156,207 };
    byte_vec_t sig { 93,3,90,163,209,111,136,73,138,4,31,54,0,4,115,186,121,161,64,53,200,133,174,198,52,225,1,200,255,41,200,160,231,171,203,38,159,63,206,181,26,5,61,190,48,229,72,227,173,246,222,236,82,25,193,66,87,210,87,223,58,10,97,5 };
    byte_vec_t pk { 4,227,95,143,183,65,6,96,44,172,213,121,207,195,127,234,152,207,241,46,116,192,170,117,110,91,162,91,87,238,45,59,194,0,211,204,153,36,100,1,226,129,163,10,220,24,191,174,66,91,254,59,187,58,99,106,225,182,155,57,193,181,147,166,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 561 ") {
    byte_vec_t msg { 208,172,143,139 };
    byte_vec_t sig { 78,202,112,227,246,58,104,171,187,27,244,68,39,246,232,103,59,117,120,114,49,19,33,181,182,70,147,204,132,210,82,21,157,160,37,84,25,59,154,127,26,170,4,6,44,74,89,146,122,148,212,31,113,154,90,229,109,250,12,218,75,9,210,241 };
    byte_vec_t pk { 2,116,1,224,187,47,241,50,87,122,110,249,244,122,75,196,49,225,1,14,2,248,160,179,98,156,163,112,78,110,85,161,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 561 ") {
    byte_vec_t msg { 241,209,44,154 };
    byte_vec_t sig { 76,179,90,14,154,73,191,31,217,83,101,35,117,51,142,95,161,64,58,241,120,99,136,131,174,156,189,209,204,211,110,22,211,156,110,148,82,189,68,44,98,83,97,164,89,63,98,157,72,129,81,202,221,214,183,210,149,13,204,124,206,186,28,203 };
    byte_vec_t pk { 2,52,141,195,5,233,85,150,227,58,50,222,206,87,214,64,115,183,139,47,75,211,254,85,196,205,246,96,159,186,235,209,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 562 ") {
    byte_vec_t msg { 93,122,254,81 };
    byte_vec_t sig { 25,32,12,98,184,28,120,132,101,230,171,64,71,89,160,158,251,25,177,15,187,62,202,174,161,219,54,176,192,99,131,64,94,149,238,212,122,24,130,102,47,153,142,244,163,189,234,114,116,77,214,214,55,224,94,39,72,137,240,210,136,229,25,29 };
    byte_vec_t pk { 4,36,151,237,89,44,233,86,0,125,78,127,93,221,194,114,46,45,40,164,37,75,224,88,46,251,96,5,63,153,254,80,39,66,88,3,173,229,220,39,254,142,82,85,39,43,15,3,5,36,40,121,246,255,132,200,42,11,144,165,180,122,49,56,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 562 ") {
    byte_vec_t msg { 172,192,225,105 };
    byte_vec_t sig { 223,194,214,157,58,138,168,27,114,212,234,253,28,103,124,136,195,230,242,138,228,152,32,119,55,29,19,69,28,80,110,155,236,165,236,244,148,115,155,35,153,115,176,64,221,147,153,150,87,74,128,232,3,213,198,162,6,170,24,236,206,38,203,9 };
    byte_vec_t pk { 4,93,159,59,7,97,172,185,207,238,117,156,170,96,70,140,55,30,160,162,84,167,210,191,155,97,142,155,94,224,77,113,203,131,170,10,64,119,206,161,246,206,80,203,103,128,51,138,98,91,153,250,21,65,103,40,236,99,147,223,184,123,134,6,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 562 ") {
    byte_vec_t msg { 236,121,163,28 };
    byte_vec_t sig { 41,7,107,117,47,89,168,46,118,121,200,156,83,253,245,217,118,19,212,235,87,75,132,159,64,239,3,102,31,122,171,9,187,244,208,137,240,179,19,150,20,148,74,65,33,150,254,49,140,4,28,215,28,88,194,42,19,244,114,79,113,49,104,189 };
    byte_vec_t pk { 3,56,90,254,111,1,5,19,139,62,95,217,30,138,242,59,172,188,215,110,136,189,103,157,85,34,211,27,144,7,71,127,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 562 ") {
    byte_vec_t msg { 47,160,79,239 };
    byte_vec_t sig { 186,188,97,252,6,53,94,110,23,198,63,216,58,40,168,206,182,219,114,184,46,66,180,112,163,127,207,248,170,59,104,44,248,244,75,196,58,49,11,118,43,32,134,1,28,49,150,229,24,244,232,190,18,140,9,50,172,134,211,41,164,196,106,188 };
    byte_vec_t pk { 3,108,55,244,107,206,49,78,126,1,61,217,192,94,33,140,131,1,40,147,218,131,183,117,244,6,12,18,18,199,33,201,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 563 ") {
    byte_vec_t msg { 137,135,2,94 };
    byte_vec_t sig { 25,251,249,120,225,224,47,133,172,142,155,99,234,205,161,240,194,61,164,81,3,79,109,212,231,26,54,91,134,0,167,169,17,64,10,32,88,132,22,30,75,112,129,116,91,105,127,181,240,197,229,29,208,193,144,22,28,89,218,232,105,115,220,209 };
    byte_vec_t pk { 4,179,71,133,226,45,211,53,224,242,206,177,241,82,118,195,154,84,226,1,242,63,105,175,37,29,130,228,37,202,183,202,43,229,165,234,118,76,243,56,10,221,182,4,193,199,193,204,76,22,151,218,181,95,214,28,90,2,141,160,38,157,117,147,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 563 ") {
    byte_vec_t msg { 149,208,0,88 };
    byte_vec_t sig { 117,59,67,87,18,125,74,12,217,169,107,209,131,178,104,245,127,161,180,22,193,50,69,134,89,109,45,73,128,16,17,251,175,60,62,127,25,204,206,26,233,102,35,128,173,5,42,64,155,7,197,25,68,223,63,150,190,196,74,196,116,126,185,222 };
    byte_vec_t pk { 4,186,182,217,193,1,92,134,219,204,61,87,12,154,149,50,81,224,131,114,117,164,74,24,46,99,86,36,146,24,200,218,180,24,241,181,161,55,192,72,178,158,227,103,70,83,68,11,178,25,153,155,123,114,218,195,39,212,252,26,20,188,157,41,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 563 ") {
    byte_vec_t msg { 217,253,251,255 };
    byte_vec_t sig { 80,214,222,115,193,84,223,95,195,44,128,232,146,149,240,84,159,28,64,36,151,2,123,225,38,153,12,27,183,33,44,142,72,17,6,50,250,43,29,231,41,169,25,120,152,73,39,56,63,77,193,33,150,16,45,84,181,206,222,141,56,29,72,243 };
    byte_vec_t pk { 3,154,156,115,242,244,79,72,152,27,142,134,178,169,97,112,82,126,70,75,230,159,90,70,178,137,25,4,131,218,162,193,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 563 ") {
    byte_vec_t msg { 235,83,121,210 };
    byte_vec_t sig { 162,51,83,187,29,148,108,40,7,212,60,247,18,41,124,28,85,30,141,240,119,170,134,21,146,132,160,241,10,172,144,103,210,153,104,0,235,53,96,186,175,32,193,137,83,179,211,185,164,36,237,240,235,113,133,223,121,2,216,41,138,90,147,102 };
    byte_vec_t pk { 3,31,193,89,77,164,77,53,228,97,7,55,43,180,217,15,238,96,226,114,191,184,111,161,7,113,224,225,231,200,125,11,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 564 ") {
    byte_vec_t msg { 203,253,85,213 };
    byte_vec_t sig { 40,122,134,246,101,14,248,44,203,87,32,214,175,65,212,102,2,114,124,74,100,18,11,53,20,33,204,253,59,253,70,229,213,45,192,206,16,138,149,206,191,4,109,154,139,187,40,168,6,149,42,77,5,86,81,196,207,147,117,204,132,183,123,53 };
    byte_vec_t pk { 4,252,151,166,177,50,172,50,120,236,71,227,177,171,236,126,199,106,162,155,199,100,103,147,104,143,216,201,104,161,251,147,140,126,192,91,49,95,178,24,177,133,69,207,11,78,111,209,233,88,232,211,221,205,100,122,144,39,161,7,45,144,35,238,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 564 ") {
    byte_vec_t msg { 101,68,42,86 };
    byte_vec_t sig { 114,109,143,30,79,41,114,178,112,138,10,118,163,209,148,160,28,31,150,114,163,191,238,180,26,200,236,225,16,109,34,150,130,233,225,101,85,115,48,229,89,142,85,18,95,163,157,93,216,119,95,163,152,108,112,39,200,72,17,109,228,245,72,100 };
    byte_vec_t pk { 4,145,242,55,219,145,130,65,230,67,146,204,5,194,82,83,224,156,31,163,71,217,4,228,116,166,48,180,202,12,247,50,160,138,193,238,180,211,238,67,130,17,54,206,92,135,255,82,4,60,101,149,255,71,251,31,91,157,139,34,77,216,104,187,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 564 ") {
    byte_vec_t msg { 38,48,176,59 };
    byte_vec_t sig { 103,99,25,105,238,64,73,110,33,41,157,146,240,178,79,184,178,114,3,67,240,7,235,56,112,186,159,150,126,161,74,29,106,91,241,223,174,49,28,172,244,30,183,208,43,105,155,185,201,247,132,224,101,194,214,170,139,238,91,81,228,93,27,75 };
    byte_vec_t pk { 3,32,36,240,161,16,21,220,239,98,184,40,71,104,114,226,16,98,190,102,226,104,112,90,23,169,164,115,93,234,32,176,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 564 ") {
    byte_vec_t msg { 140,115,10,64 };
    byte_vec_t sig { 16,126,123,222,157,240,78,54,229,188,182,0,108,198,238,192,208,182,86,240,148,65,132,227,80,81,38,243,91,81,199,214,202,114,182,155,227,205,126,77,132,71,26,149,119,210,3,188,42,154,2,93,230,21,69,40,99,175,9,194,237,201,160,168 };
    byte_vec_t pk { 3,244,59,199,128,243,156,173,143,26,217,218,24,126,23,63,241,187,13,189,199,55,20,216,24,235,81,193,69,207,171,116,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 565 ") {
    byte_vec_t msg { 104,225,146,60 };
    byte_vec_t sig { 65,113,49,92,132,87,146,14,209,68,153,161,246,183,6,4,245,173,115,149,74,37,138,149,105,3,226,26,167,126,35,74,211,58,165,182,108,150,29,111,80,241,148,22,191,155,13,110,146,161,144,16,224,217,161,125,131,222,124,179,173,57,132,230 };
    byte_vec_t pk { 4,89,112,101,242,115,37,197,6,63,217,42,211,44,74,58,27,58,165,5,246,186,120,166,224,94,84,70,20,35,50,186,112,252,28,66,7,218,224,211,214,21,184,108,239,234,144,199,180,253,148,167,64,86,243,129,216,76,225,119,108,117,149,175,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 565 ") {
    byte_vec_t msg { 217,217,79,244 };
    byte_vec_t sig { 231,31,139,144,0,166,192,191,195,174,34,213,0,26,127,89,254,248,63,75,55,97,47,140,66,237,13,55,199,131,239,130,180,174,247,123,15,71,3,142,229,231,82,248,148,209,153,218,8,24,227,205,251,193,171,183,27,212,219,61,22,158,235,85 };
    byte_vec_t pk { 4,128,126,254,98,152,66,90,132,81,81,16,13,173,197,185,239,219,114,249,2,76,88,104,146,124,152,145,245,77,98,51,18,7,62,104,206,219,99,99,236,55,58,187,213,46,138,21,251,195,59,181,227,123,21,162,102,35,140,79,138,255,14,129,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 565 ") {
    byte_vec_t msg { 11,236,180,27 };
    byte_vec_t sig { 211,225,58,172,6,6,244,111,9,214,47,119,23,201,177,149,86,9,76,224,225,9,234,162,56,27,57,85,134,196,228,87,100,215,102,161,122,228,162,100,12,125,14,79,60,30,133,147,150,100,119,128,152,106,37,3,167,250,24,248,84,248,78,216 };
    byte_vec_t pk { 2,158,171,160,229,251,45,104,32,68,104,136,17,134,181,131,70,182,50,143,56,194,253,98,8,139,108,151,51,79,198,55,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 565 ") {
    byte_vec_t msg { 78,105,214,97 };
    byte_vec_t sig { 151,143,78,170,116,64,239,62,251,26,99,55,86,141,228,214,53,25,214,62,173,179,63,18,106,239,112,145,158,93,157,131,221,231,57,129,65,234,237,138,39,237,38,178,216,39,12,199,23,216,63,55,146,190,96,3,145,251,240,77,148,17,91,177 };
    byte_vec_t pk { 2,5,145,6,99,90,203,87,226,108,170,67,183,171,180,147,142,26,54,4,53,4,237,166,17,18,236,33,20,119,15,134,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 566 ") {
    byte_vec_t msg { 174,192,104,73 };
    byte_vec_t sig { 234,212,249,68,63,20,51,112,118,55,67,31,253,232,110,50,221,131,94,102,204,56,84,12,64,221,40,102,62,244,243,216,186,199,241,255,85,34,6,254,71,156,64,107,224,97,165,173,81,101,69,103,61,48,214,68,158,172,65,241,9,119,167,245 };
    byte_vec_t pk { 4,13,173,2,239,215,46,132,19,210,227,55,208,105,170,79,44,192,73,253,201,134,26,242,104,142,224,172,150,144,9,175,41,169,33,70,182,203,71,63,189,252,12,101,69,205,194,9,250,92,45,200,139,45,15,243,92,235,92,165,114,83,41,240,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 566 ") {
    byte_vec_t msg { 52,75,150,5 };
    byte_vec_t sig { 39,131,95,13,21,151,75,248,122,178,77,119,96,50,36,80,223,24,104,138,97,36,122,76,234,250,67,242,129,74,205,209,220,226,132,35,91,9,205,98,35,102,120,255,143,95,185,196,91,64,252,63,125,204,77,71,224,222,55,141,119,193,229,148 };
    byte_vec_t pk { 4,102,121,66,227,87,81,41,193,124,93,29,234,44,110,179,120,206,3,57,9,95,161,67,246,173,48,190,143,120,24,103,47,50,116,115,222,249,80,78,182,107,50,0,63,55,146,159,115,182,118,130,255,219,46,55,135,254,26,102,107,229,34,131,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 566 ") {
    byte_vec_t msg { 232,189,56,69 };
    byte_vec_t sig { 178,54,193,59,7,143,41,223,186,85,165,242,58,254,222,37,72,203,247,249,159,3,13,194,156,228,203,129,172,121,103,44,245,73,241,193,45,39,43,76,23,252,143,46,132,206,53,58,240,113,24,70,112,252,201,209,38,19,60,186,53,210,2,209 };
    byte_vec_t pk { 2,114,5,21,40,124,204,227,48,133,56,29,238,110,128,89,162,75,183,20,179,190,162,72,2,80,51,226,61,249,76,183,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 566 ") {
    byte_vec_t msg { 225,90,21,132 };
    byte_vec_t sig { 205,70,155,121,16,98,254,247,170,127,54,125,172,25,228,56,210,210,15,94,31,230,207,28,215,53,224,62,137,164,116,91,49,135,106,210,82,95,25,129,21,184,155,190,254,14,135,142,9,104,135,16,44,157,131,85,154,203,167,95,0,8,71,35 };
    byte_vec_t pk { 3,55,37,252,160,84,64,99,228,69,231,68,179,206,240,194,206,70,187,215,35,222,162,41,149,221,195,147,48,140,229,56,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 567 ") {
    byte_vec_t msg { 42,51,181,220 };
    byte_vec_t sig { 242,137,98,51,144,156,131,109,64,37,51,245,7,246,226,175,210,227,41,1,33,82,153,17,92,41,75,185,96,8,58,1,12,159,48,234,74,221,105,18,86,255,138,233,160,166,195,7,50,118,24,103,224,121,139,115,188,126,20,97,69,146,217,228 };
    byte_vec_t pk { 4,250,127,249,130,183,224,148,125,181,188,238,71,77,136,9,59,124,230,106,194,174,160,128,202,117,204,135,28,132,62,145,48,252,218,228,165,162,75,132,131,21,182,76,10,107,251,47,22,52,188,0,39,169,209,159,35,243,238,149,157,112,185,226,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 567 ") {
    byte_vec_t msg { 56,45,109,113 };
    byte_vec_t sig { 154,133,253,2,210,250,152,183,213,75,173,5,210,202,19,194,137,33,31,9,240,16,8,120,138,183,255,18,164,252,205,17,197,180,190,27,221,238,120,13,118,191,92,174,208,50,64,14,14,204,191,98,247,114,115,133,140,71,51,207,123,219,56,0 };
    byte_vec_t pk { 4,216,243,236,42,34,176,38,163,94,245,238,252,188,51,115,133,88,184,80,61,34,131,110,84,196,86,8,220,32,91,186,14,225,103,28,213,147,208,88,234,33,241,45,155,30,106,124,251,5,219,142,165,185,47,144,71,233,24,164,92,117,159,41,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 567 ") {
    byte_vec_t msg { 92,78,43,63 };
    byte_vec_t sig { 24,137,182,69,143,250,1,150,237,211,49,40,211,247,225,255,116,215,185,240,169,144,172,41,22,145,126,147,119,229,16,247,112,17,46,157,167,192,11,35,227,27,226,132,246,163,155,209,10,238,228,205,24,187,152,4,28,8,155,201,81,0,92,190 };
    byte_vec_t pk { 3,23,73,143,141,156,79,215,57,239,111,4,158,53,204,102,72,26,41,145,123,21,224,64,1,207,237,226,211,106,48,104,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 567 ") {
    byte_vec_t msg { 238,33,61,204 };
    byte_vec_t sig { 101,129,118,194,87,246,91,99,82,0,180,158,27,27,88,249,158,97,190,153,159,28,232,106,234,64,120,196,182,58,177,134,63,16,130,96,200,155,191,19,255,59,140,178,30,158,26,157,6,182,133,61,105,73,188,107,57,69,10,65,119,106,237,46 };
    byte_vec_t pk { 3,174,150,187,157,208,85,17,207,143,251,26,129,202,95,88,184,55,63,181,5,130,34,195,65,114,223,255,78,123,72,72,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 568 ") {
    byte_vec_t msg { 46,127,93,33 };
    byte_vec_t sig { 0,219,106,147,66,57,112,31,28,42,78,97,59,64,69,141,156,18,242,201,189,137,49,173,253,38,245,36,77,12,0,241,187,58,14,129,86,198,133,6,27,255,199,26,142,215,249,175,146,60,100,53,221,84,245,69,234,115,209,133,164,240,204,155 };
    byte_vec_t pk { 4,219,30,94,235,249,234,83,110,173,133,189,237,146,253,81,179,251,92,148,126,204,69,206,179,18,222,147,97,202,37,148,82,12,84,100,56,9,211,81,148,216,204,71,216,27,73,27,161,172,223,28,16,202,77,24,142,186,34,62,226,160,11,77,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 568 ") {
    byte_vec_t msg { 77,134,242,164 };
    byte_vec_t sig { 74,168,12,72,159,187,35,189,30,103,18,79,66,15,227,115,159,63,249,10,169,105,247,30,23,13,144,241,72,253,200,12,27,106,199,155,156,99,152,185,147,145,164,144,248,246,29,251,52,85,140,7,44,72,169,39,106,180,69,36,231,7,142,222 };
    byte_vec_t pk { 4,97,110,54,89,172,230,247,139,17,155,4,240,68,98,249,158,233,15,84,89,124,210,109,153,113,136,223,245,126,176,184,40,226,159,155,194,94,245,234,49,50,251,108,234,87,82,213,151,150,112,55,13,49,168,101,75,239,134,170,89,250,109,175,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 568 ") {
    byte_vec_t msg { 123,201,66,187 };
    byte_vec_t sig { 183,67,131,210,232,100,2,33,193,126,33,231,235,149,188,163,72,159,81,214,43,156,98,181,150,203,38,41,225,82,153,5,142,109,141,231,117,42,206,233,74,211,224,221,18,78,198,250,83,150,11,144,19,183,146,45,156,12,111,216,187,171,57,14 };
    byte_vec_t pk { 2,58,203,123,222,208,114,231,105,172,214,254,172,105,233,165,141,166,69,205,170,10,195,217,157,196,96,152,56,60,25,192,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 568 ") {
    byte_vec_t msg { 22,235,122,14 };
    byte_vec_t sig { 107,96,156,17,32,60,153,234,175,64,201,226,99,166,26,102,49,208,225,99,143,9,199,228,121,239,67,189,127,164,169,80,112,123,129,182,79,234,152,148,29,181,130,6,143,235,182,76,183,138,21,77,87,219,224,150,115,179,80,113,56,27,154,211 };
    byte_vec_t pk { 2,244,82,82,185,66,52,73,125,27,169,154,219,161,61,143,2,62,156,152,207,254,115,152,6,46,148,193,209,211,155,238,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 569 ") {
    byte_vec_t msg { 81,104,129,85 };
    byte_vec_t sig { 62,169,150,74,240,57,213,195,189,59,55,173,115,162,250,245,63,221,21,179,151,52,136,148,48,219,94,203,129,74,35,210,139,80,107,5,188,96,107,225,106,9,7,183,74,161,39,56,144,164,121,178,238,73,113,138,218,194,92,184,85,181,2,73 };
    byte_vec_t pk { 4,121,213,100,2,208,158,36,95,94,109,16,34,70,187,132,95,65,54,145,27,167,46,50,76,17,194,183,120,229,166,242,15,135,211,146,171,2,208,41,110,55,90,221,143,3,167,150,136,234,152,30,59,253,221,179,7,247,115,85,242,6,176,198,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 569 ") {
    byte_vec_t msg { 53,229,149,6 };
    byte_vec_t sig { 249,252,53,242,224,16,129,185,76,108,203,242,213,75,144,57,218,88,82,190,118,56,155,211,9,12,41,193,82,171,27,53,121,216,18,151,138,201,165,84,24,46,48,152,250,35,102,26,229,228,169,235,108,141,133,126,96,244,86,245,97,159,230,151 };
    byte_vec_t pk { 4,220,61,180,196,137,217,49,16,73,187,229,108,59,29,132,208,222,41,203,26,169,61,245,211,163,243,9,88,73,200,246,237,171,91,42,76,17,47,218,196,208,98,155,33,48,235,226,154,227,196,132,66,87,203,56,108,203,17,184,149,192,6,152,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 569 ") {
    byte_vec_t msg { 251,163,223,238 };
    byte_vec_t sig { 213,6,165,178,182,121,54,228,16,18,188,142,151,158,53,111,162,43,83,97,57,30,130,215,118,68,23,106,227,26,33,243,173,179,28,197,158,252,149,161,94,138,24,162,62,191,110,223,211,40,38,82,75,37,125,136,160,34,72,20,123,61,161,163 };
    byte_vec_t pk { 2,164,49,219,80,140,53,196,244,164,203,96,78,74,248,34,81,4,31,223,248,16,105,128,46,168,246,53,225,149,148,136,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 569 ") {
    byte_vec_t msg { 109,11,113,94 };
    byte_vec_t sig { 65,54,125,81,65,114,104,175,51,211,202,222,27,12,38,205,7,91,247,175,86,246,156,250,15,53,70,194,157,191,176,22,38,97,162,96,32,121,173,49,225,252,28,68,102,85,154,33,178,42,219,125,170,234,214,194,237,233,115,59,108,32,7,244 };
    byte_vec_t pk { 2,97,117,209,149,244,120,13,38,185,229,43,65,132,161,165,38,144,80,239,36,5,195,54,86,222,169,95,90,136,54,141,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 570 ") {
    byte_vec_t msg { 235,159,240,170 };
    byte_vec_t sig { 76,92,209,9,35,243,62,19,34,233,162,20,21,208,178,137,64,186,253,251,105,45,204,102,181,52,146,156,167,32,50,178,176,242,37,101,35,132,139,242,104,140,64,231,64,173,164,204,209,77,23,17,122,26,88,135,110,216,229,167,121,53,7,77 };
    byte_vec_t pk { 4,44,178,196,212,211,97,90,180,178,155,208,107,96,149,114,108,191,241,219,240,28,166,67,111,32,59,249,164,137,203,215,14,52,56,118,72,57,32,234,156,33,45,87,197,140,223,68,121,11,139,221,80,169,19,136,202,175,214,49,207,217,120,181,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 570 ") {
    byte_vec_t msg { 59,218,72,156 };
    byte_vec_t sig { 84,186,222,2,173,218,194,145,24,82,48,38,16,42,96,53,231,208,162,254,64,20,169,30,241,54,41,172,48,55,230,133,32,46,34,120,118,218,63,95,235,218,12,41,2,80,209,19,209,130,249,32,190,54,93,203,188,186,102,58,218,59,6,193 };
    byte_vec_t pk { 4,75,211,38,225,43,69,154,247,135,126,17,76,210,116,63,249,198,108,120,220,43,72,225,15,181,188,238,209,168,185,48,17,213,175,31,123,104,117,243,160,228,255,149,195,133,29,234,248,221,6,210,132,100,94,197,108,13,155,0,24,162,63,85,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 570 ") {
    byte_vec_t msg { 43,121,96,0 };
    byte_vec_t sig { 42,18,204,62,238,111,169,161,180,125,202,177,162,228,141,114,255,179,8,122,240,161,7,213,88,171,188,120,193,47,33,224,71,158,190,201,94,107,33,71,218,213,120,235,115,15,8,68,114,74,46,165,147,77,131,212,232,93,159,243,56,128,34,168 };
    byte_vec_t pk { 3,87,32,221,248,6,189,121,185,22,204,21,106,152,208,196,127,197,120,197,130,233,125,96,205,227,5,170,248,91,93,75,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 570 ") {
    byte_vec_t msg { 1,142,15,16 };
    byte_vec_t sig { 196,45,36,85,177,131,93,150,19,224,212,183,219,37,216,181,76,238,85,222,171,72,79,14,214,11,239,78,209,62,243,220,245,99,32,104,252,240,119,65,172,221,241,70,52,14,95,76,39,248,0,123,65,39,175,102,162,69,113,250,190,148,127,155 };
    byte_vec_t pk { 2,232,54,231,95,182,15,53,180,68,130,224,0,139,190,109,251,197,21,174,115,61,26,10,39,183,158,41,1,109,26,197,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 571 ") {
    byte_vec_t msg { 147,183,5,126 };
    byte_vec_t sig { 192,71,31,186,44,129,112,44,217,169,167,12,231,202,130,45,159,221,89,235,49,122,229,152,238,206,21,169,252,147,202,199,60,129,97,243,123,44,1,206,149,145,29,3,83,17,45,134,157,231,221,179,37,149,54,143,175,17,252,146,68,5,47,123 };
    byte_vec_t pk { 4,27,133,189,12,60,197,214,34,32,170,28,181,195,151,31,14,233,242,219,193,239,217,95,60,145,148,149,116,32,77,36,219,151,190,91,211,232,77,94,122,205,73,186,93,201,122,7,54,192,178,142,247,19,164,141,228,107,241,57,184,203,234,164,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 571 ") {
    byte_vec_t msg { 167,61,11,50 };
    byte_vec_t sig { 184,146,5,33,97,99,52,39,160,131,185,98,60,54,45,159,249,147,61,79,166,70,56,92,250,191,13,180,196,108,236,98,71,39,48,11,32,182,228,3,129,175,5,0,41,116,235,78,151,189,189,30,149,225,129,8,204,84,179,143,59,170,26,183 };
    byte_vec_t pk { 4,132,110,205,108,87,54,4,202,224,117,31,205,86,20,114,199,57,60,106,156,138,144,234,122,211,164,44,235,25,51,79,211,209,112,102,214,220,232,216,160,157,113,239,60,134,162,109,236,70,48,8,199,244,72,218,213,40,47,105,243,10,14,0,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 571 ") {
    byte_vec_t msg { 53,163,29,45 };
    byte_vec_t sig { 144,203,207,18,7,92,218,13,114,206,188,22,15,161,65,225,245,72,214,177,248,26,224,182,124,110,102,120,179,62,51,42,191,4,94,40,200,118,149,198,121,130,98,246,105,210,87,238,242,123,162,6,42,195,112,125,91,207,205,189,245,125,152,214 };
    byte_vec_t pk { 2,10,53,243,140,141,37,66,159,211,204,206,223,158,28,72,229,119,230,106,115,158,211,104,70,179,139,63,16,176,167,173,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 571 ") {
    byte_vec_t msg { 120,139,184,239 };
    byte_vec_t sig { 45,50,154,200,182,129,208,150,136,211,1,126,50,90,50,181,8,107,6,84,66,38,61,68,181,50,244,245,17,102,72,21,2,134,187,204,100,153,53,102,4,163,211,163,130,36,130,76,242,31,223,125,104,0,230,150,22,40,222,239,120,52,150,232 };
    byte_vec_t pk { 2,127,227,135,18,133,39,156,80,154,167,112,19,186,106,226,187,86,215,3,118,119,232,239,195,75,198,226,58,72,195,223,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 572 ") {
    byte_vec_t msg { 46,253,218,11 };
    byte_vec_t sig { 109,237,217,23,107,84,211,50,77,202,225,140,219,166,143,181,231,137,143,227,92,154,183,19,192,175,1,175,209,48,243,246,74,199,201,72,169,81,169,140,45,48,34,113,156,166,248,23,59,191,161,170,212,219,26,89,191,8,55,154,135,234,14,107 };
    byte_vec_t pk { 4,239,192,213,82,122,78,76,231,69,47,38,58,24,6,43,54,207,231,2,229,67,62,246,74,90,191,25,54,246,107,21,91,77,71,205,31,71,14,71,24,12,196,21,96,67,41,81,246,143,137,128,127,182,198,63,8,186,63,28,23,1,108,179,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 572 ") {
    byte_vec_t msg { 236,135,210,150 };
    byte_vec_t sig { 116,5,58,244,130,42,128,169,77,11,222,237,82,174,198,134,4,13,190,31,216,214,215,83,171,125,13,64,105,139,159,5,74,191,141,60,43,27,162,139,169,59,37,34,131,139,158,5,40,232,134,38,234,83,64,202,250,44,166,156,219,22,49,204 };
    byte_vec_t pk { 4,86,208,98,165,62,251,27,7,174,243,234,125,14,156,113,36,210,111,168,208,76,7,184,120,21,201,179,105,212,14,60,69,78,200,18,113,201,218,103,61,247,146,195,41,70,211,76,50,135,207,35,93,108,152,234,74,205,111,133,84,17,56,47,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 572 ") {
    byte_vec_t msg { 171,188,197,18 };
    byte_vec_t sig { 235,28,117,205,164,26,19,177,6,73,14,60,242,65,23,45,44,20,47,198,231,25,115,68,177,67,240,235,226,89,208,65,73,98,237,149,39,225,196,12,33,187,155,140,186,4,164,128,99,140,248,118,215,182,173,239,124,206,141,170,214,101,213,79 };
    byte_vec_t pk { 3,145,113,6,40,147,194,58,163,186,90,11,28,122,239,135,147,85,92,247,156,231,76,74,28,90,230,124,27,202,116,156,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 572 ") {
    byte_vec_t msg { 44,71,45,8 };
    byte_vec_t sig { 158,118,35,192,191,10,114,142,164,253,71,187,211,170,186,33,157,212,146,187,53,76,212,137,112,30,200,119,124,166,122,66,240,151,192,243,212,28,101,95,168,9,152,71,51,229,150,29,117,9,154,40,150,52,86,229,217,74,81,75,10,22,142,139 };
    byte_vec_t pk { 2,90,62,222,52,24,133,241,225,49,94,223,74,79,10,112,147,186,10,100,102,95,138,131,8,254,76,162,124,140,112,5,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 573 ") {
    byte_vec_t msg { 253,85,160,126 };
    byte_vec_t sig { 56,43,159,7,182,49,7,138,14,68,20,116,247,4,142,44,110,136,146,172,122,128,251,138,254,1,148,175,102,117,236,210,18,251,84,217,181,226,0,241,65,61,42,230,9,188,70,54,151,84,99,159,180,136,138,196,173,62,37,10,101,17,46,169 };
    byte_vec_t pk { 4,184,83,120,35,165,199,130,19,193,56,7,202,44,203,31,78,135,77,184,63,134,203,3,21,30,249,4,122,2,150,137,222,209,28,176,46,206,250,121,27,179,50,225,209,162,163,71,55,115,124,88,122,193,203,161,221,243,32,114,255,59,179,164,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 573 ") {
    byte_vec_t msg { 135,115,80,80 };
    byte_vec_t sig { 114,11,235,116,155,103,190,226,20,190,208,111,130,116,73,244,160,56,110,184,185,138,85,27,113,165,224,203,68,158,221,214,61,149,0,208,70,163,249,44,218,112,30,169,21,220,145,44,61,164,139,172,55,135,142,198,236,110,178,239,224,85,9,110 };
    byte_vec_t pk { 4,3,133,221,88,89,68,149,95,195,63,15,230,36,144,226,197,167,110,117,232,209,111,1,131,45,30,33,106,29,13,199,167,26,209,159,204,35,233,227,61,49,79,81,46,137,245,143,18,118,71,176,49,234,123,88,7,216,179,210,117,209,153,85,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 573 ") {
    byte_vec_t msg { 11,12,10,232 };
    byte_vec_t sig { 102,108,213,177,3,210,229,223,225,148,212,170,217,139,108,233,64,11,79,159,116,208,161,72,252,17,110,163,81,40,54,127,129,181,195,76,227,183,55,83,125,119,26,255,22,158,176,92,141,215,190,190,240,146,76,165,70,55,62,99,241,61,202,241 };
    byte_vec_t pk { 2,236,221,180,148,252,208,113,87,123,225,161,200,56,0,248,75,21,35,122,180,53,32,107,106,159,165,212,174,204,250,126,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 573 ") {
    byte_vec_t msg { 22,49,227,154 };
    byte_vec_t sig { 13,43,231,181,75,176,63,74,255,74,112,242,62,153,187,9,36,113,0,79,163,96,180,219,198,102,249,155,17,157,43,188,54,27,162,208,112,131,239,34,226,111,154,114,254,67,247,13,62,223,24,191,107,224,237,52,220,253,82,77,106,100,212,229 };
    byte_vec_t pk { 3,125,134,44,228,0,13,149,53,175,32,23,70,182,72,176,26,88,14,118,190,175,106,55,161,105,5,44,175,229,1,159,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 574 ") {
    byte_vec_t msg { 150,100,60,126 };
    byte_vec_t sig { 19,140,239,204,178,250,79,155,123,152,57,220,213,246,195,249,127,118,36,70,197,1,185,238,177,119,134,195,250,213,9,36,232,39,5,199,145,191,241,30,240,78,216,23,244,11,165,183,117,75,209,230,252,123,50,204,6,220,139,244,57,208,38,234 };
    byte_vec_t pk { 4,18,44,59,103,72,45,227,27,94,32,144,115,246,116,198,178,86,18,24,249,172,183,198,132,229,11,75,69,226,93,122,96,68,253,226,192,80,197,183,132,249,28,131,65,101,180,156,108,122,33,177,234,102,193,36,243,174,46,143,130,254,238,161,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 574 ") {
    byte_vec_t msg { 222,130,29,225 };
    byte_vec_t sig { 209,130,143,102,64,164,76,165,124,189,14,141,25,86,168,183,122,202,195,80,86,187,137,176,134,234,30,122,159,104,62,233,81,142,163,31,218,61,175,63,169,12,227,113,0,163,76,10,242,70,5,2,164,170,131,195,18,104,215,25,37,216,239,203 };
    byte_vec_t pk { 4,23,175,63,128,182,4,143,157,119,127,21,226,231,75,122,62,18,32,191,207,60,44,47,5,44,170,251,133,180,133,247,190,11,185,250,33,46,214,185,53,133,187,46,126,2,167,59,238,233,170,10,29,101,32,172,182,202,195,36,217,121,236,116,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 574 ") {
    byte_vec_t msg { 96,152,107,8 };
    byte_vec_t sig { 179,59,136,61,35,43,233,213,201,62,151,41,83,158,79,51,26,184,216,14,99,166,135,119,11,220,172,10,48,15,82,37,30,82,134,115,33,194,230,12,193,207,242,131,151,117,245,221,251,173,47,0,99,252,24,130,246,65,177,37,87,4,146,136 };
    byte_vec_t pk { 3,2,252,105,50,103,86,181,126,159,227,113,177,230,95,141,244,123,246,141,104,157,106,204,121,42,156,55,0,86,5,84,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 574 ") {
    byte_vec_t msg { 37,239,109,126 };
    byte_vec_t sig { 103,68,229,48,43,219,48,254,194,134,230,151,160,7,202,178,0,230,98,134,60,207,3,214,64,3,179,230,210,239,247,246,100,216,221,232,129,34,200,53,233,145,22,189,186,161,42,171,59,215,127,197,123,240,174,191,133,54,208,249,121,159,28,191 };
    byte_vec_t pk { 2,113,144,28,161,57,55,52,24,97,8,147,90,183,225,73,199,109,233,249,59,3,243,205,122,82,116,49,61,60,97,65,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 575 ") {
    byte_vec_t msg { 229,231,193,252 };
    byte_vec_t sig { 252,231,33,148,33,73,76,231,187,114,226,200,175,130,146,248,145,179,251,105,189,114,162,5,118,90,151,233,208,149,117,225,77,145,66,202,48,97,135,98,212,40,174,168,130,153,146,202,108,159,53,103,123,66,179,155,105,185,219,191,102,40,31,237 };
    byte_vec_t pk { 4,160,218,133,107,213,129,28,27,204,98,94,250,211,144,240,176,250,214,208,195,63,253,200,217,224,142,187,43,139,141,190,87,157,103,81,197,190,241,229,119,82,231,47,183,205,173,144,67,207,146,83,107,94,251,221,211,73,100,119,39,117,218,181,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 575 ") {
    byte_vec_t msg { 231,144,179,110 };
    byte_vec_t sig { 67,223,103,152,122,215,36,224,57,12,233,188,9,223,26,199,17,237,215,40,184,151,166,169,62,156,73,125,255,24,12,62,5,5,252,183,60,146,20,239,145,23,16,95,193,67,225,170,243,204,28,82,86,208,89,233,240,57,188,79,239,148,187,74 };
    byte_vec_t pk { 4,152,4,228,208,118,117,126,238,165,151,239,168,183,15,76,233,105,202,170,131,7,127,212,184,219,59,161,118,198,240,129,22,223,113,83,223,114,222,141,246,207,67,18,76,76,66,133,130,129,103,122,198,198,37,216,44,142,44,115,60,228,191,187,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 575 ") {
    byte_vec_t msg { 148,92,7,51 };
    byte_vec_t sig { 182,171,245,31,247,98,131,132,151,162,94,28,20,78,254,27,238,114,164,40,206,12,183,172,233,44,123,207,37,142,73,254,12,194,141,59,51,232,202,162,246,184,209,166,115,105,201,61,217,134,213,250,97,131,196,146,229,240,26,236,245,53,3,15 };
    byte_vec_t pk { 3,178,203,29,31,4,215,226,110,72,236,111,39,251,223,9,49,79,78,9,46,143,5,136,57,244,214,60,150,69,218,153,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 575 ") {
    byte_vec_t msg { 157,225,14,155 };
    byte_vec_t sig { 216,129,166,250,90,46,168,42,130,36,246,156,194,165,110,54,119,15,171,198,34,115,21,37,78,221,120,113,142,19,108,33,241,151,223,179,145,211,67,113,9,123,98,230,156,252,215,44,163,75,91,70,11,32,130,106,82,39,3,176,216,135,91,95 };
    byte_vec_t pk { 3,27,125,4,21,67,147,230,156,240,183,182,107,234,192,107,155,186,34,109,90,162,114,132,138,177,159,208,114,143,54,198,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 576 ") {
    byte_vec_t msg { 32,232,163,37 };
    byte_vec_t sig { 109,226,154,199,24,131,47,220,184,243,194,100,219,216,107,30,66,87,230,77,250,7,102,75,197,28,27,112,157,133,6,230,132,184,19,205,56,40,153,70,184,240,49,124,95,147,24,99,59,112,6,117,56,99,135,217,205,31,133,202,28,12,196,164 };
    byte_vec_t pk { 4,225,182,216,190,126,204,199,149,88,236,54,251,78,42,249,46,190,16,2,107,253,132,252,98,184,110,83,200,195,164,24,109,246,181,23,96,249,30,42,188,189,170,143,30,7,201,20,170,170,39,94,199,49,119,27,139,134,250,125,108,114,55,252,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 576 ") {
    byte_vec_t msg { 230,74,114,19 };
    byte_vec_t sig { 107,245,134,93,111,252,21,234,65,118,156,83,24,216,242,152,76,83,229,140,3,203,121,79,4,238,65,237,209,1,158,143,42,187,99,250,172,4,67,109,209,61,247,131,16,36,189,3,44,219,90,154,85,41,169,14,200,193,2,237,83,96,233,163 };
    byte_vec_t pk { 4,247,140,138,76,184,210,181,57,86,69,159,155,142,54,125,68,211,174,239,74,229,23,61,185,73,234,127,104,169,6,101,28,125,58,185,15,221,153,185,16,56,167,103,10,2,222,173,126,241,14,177,249,147,82,206,59,193,66,85,184,125,176,244,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 576 ") {
    byte_vec_t msg { 254,149,76,118 };
    byte_vec_t sig { 9,126,76,54,2,207,100,127,120,121,187,210,128,88,148,245,7,103,213,33,181,203,156,189,105,78,72,253,8,73,5,189,233,104,229,81,142,189,220,32,113,5,64,52,103,206,46,226,117,36,29,165,66,143,221,23,83,174,6,209,228,29,240,20 };
    byte_vec_t pk { 2,108,47,216,34,108,106,90,15,211,99,182,194,4,113,57,220,118,124,13,33,75,21,108,199,47,68,190,98,63,229,126,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 576 ") {
    byte_vec_t msg { 228,167,178,195 };
    byte_vec_t sig { 43,210,239,198,94,203,90,143,15,138,238,52,150,215,88,176,204,241,138,245,168,134,189,190,191,218,219,217,36,240,204,198,66,153,46,237,131,42,255,199,152,76,198,6,47,36,156,19,44,78,105,39,48,17,96,59,22,177,128,1,49,228,185,137 };
    byte_vec_t pk { 2,88,157,180,103,215,113,201,158,26,27,150,25,201,231,40,148,123,45,201,232,157,99,155,219,135,183,212,139,253,174,0,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 577 ") {
    byte_vec_t msg { 93,232,201,207 };
    byte_vec_t sig { 206,192,76,206,212,47,123,185,153,61,20,241,113,154,238,72,40,63,29,156,12,147,231,187,41,231,69,43,141,163,129,193,126,99,249,168,57,196,141,61,144,246,70,138,119,166,35,225,99,170,145,196,66,244,101,7,27,45,122,21,97,178,128,122 };
    byte_vec_t pk { 4,242,204,213,171,181,73,97,157,192,138,88,144,47,111,48,2,254,98,2,83,200,195,167,80,123,188,162,34,215,116,224,161,123,203,36,220,120,197,16,163,65,42,145,42,48,60,117,226,37,254,16,120,199,108,161,185,42,56,167,70,29,148,164,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 577 ") {
    byte_vec_t msg { 49,22,162,23 };
    byte_vec_t sig { 91,14,130,47,237,37,70,44,247,220,165,64,198,6,10,216,153,149,98,22,74,132,37,136,36,63,140,31,186,119,64,228,64,7,32,184,87,170,56,11,229,196,152,250,51,93,118,51,79,36,101,65,103,110,255,145,148,122,149,199,33,239,137,249 };
    byte_vec_t pk { 4,52,65,255,80,156,146,29,204,65,211,195,65,3,57,122,91,173,242,127,143,62,166,213,176,189,6,45,164,109,9,65,45,125,7,246,61,205,242,200,77,249,201,12,46,2,46,217,147,36,50,147,39,121,142,34,238,225,220,245,74,242,22,196,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 577 ") {
    byte_vec_t msg { 159,11,133,112 };
    byte_vec_t sig { 39,53,73,236,164,86,130,1,108,39,248,254,250,117,215,1,43,226,132,170,110,0,56,167,254,132,135,254,168,130,226,133,1,77,236,72,132,165,5,174,13,98,212,155,195,139,2,212,35,149,134,47,224,71,22,250,170,101,140,243,131,141,155,236 };
    byte_vec_t pk { 2,136,36,107,253,181,134,224,45,253,33,199,187,125,128,163,63,114,122,127,15,111,72,114,127,128,104,123,42,122,57,54,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 577 ") {
    byte_vec_t msg { 198,73,239,177 };
    byte_vec_t sig { 245,236,150,140,230,12,88,189,242,173,119,230,67,248,211,144,98,64,142,199,177,122,91,186,127,243,37,165,152,72,96,249,11,101,199,128,152,0,118,94,42,101,84,225,222,234,50,183,238,35,236,204,64,153,192,126,162,218,15,191,97,25,11,32 };
    byte_vec_t pk { 3,148,158,85,215,169,248,63,44,38,98,94,61,240,91,192,116,31,230,84,4,3,55,123,196,178,17,90,146,66,190,144,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 578 ") {
    byte_vec_t msg { 33,55,103,15 };
    byte_vec_t sig { 167,214,200,70,141,112,11,249,80,207,193,120,217,12,57,177,39,167,148,194,86,17,78,135,38,137,76,19,168,237,94,228,186,198,191,72,195,228,35,209,96,87,2,90,34,193,110,115,86,3,166,41,209,229,199,214,71,83,71,14,245,37,213,128 };
    byte_vec_t pk { 4,224,43,182,14,238,203,47,1,51,243,129,220,52,29,247,52,109,49,27,230,182,30,78,142,193,175,9,15,154,131,129,147,109,38,49,168,56,211,118,183,198,238,55,8,185,57,44,53,63,16,179,95,82,114,142,210,189,148,221,13,76,45,33,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 578 ") {
    byte_vec_t msg { 160,151,163,26 };
    byte_vec_t sig { 112,152,213,68,244,137,109,184,153,142,217,245,108,13,33,116,10,64,226,215,209,121,52,47,229,129,194,201,157,160,3,242,91,80,202,52,134,206,226,143,165,76,212,176,53,6,67,27,13,17,213,221,159,147,13,5,103,207,248,53,136,106,202,255 };
    byte_vec_t pk { 4,66,193,0,58,185,213,96,26,5,40,71,248,203,185,233,104,176,112,133,137,107,162,244,71,108,26,227,192,179,26,14,185,62,97,2,84,124,153,91,99,125,125,217,203,103,103,54,135,167,136,97,62,23,157,244,177,90,174,53,222,249,121,31,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 578 ") {
    byte_vec_t msg { 126,112,146,207 };
    byte_vec_t sig { 100,225,118,147,43,214,207,163,155,124,105,73,157,46,203,15,4,27,132,228,172,21,209,108,108,36,182,56,107,135,233,59,97,135,122,143,160,127,69,240,149,238,67,192,222,114,220,250,65,147,8,170,141,181,221,222,194,227,166,92,249,178,15,79 };
    byte_vec_t pk { 3,239,116,238,154,98,64,218,112,140,131,169,83,110,127,231,113,129,97,214,58,38,131,178,89,87,34,111,13,248,126,236,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 578 ") {
    byte_vec_t msg { 116,158,145,105 };
    byte_vec_t sig { 38,12,54,20,82,86,252,113,236,116,165,142,105,237,169,192,66,182,65,111,179,68,97,56,20,249,1,240,30,248,42,83,78,204,224,152,164,182,230,190,173,98,187,69,77,215,158,63,96,194,223,144,125,170,103,2,103,40,144,7,194,211,87,252 };
    byte_vec_t pk { 3,92,110,226,217,107,189,239,190,146,179,77,70,6,215,71,44,2,109,101,12,110,246,127,237,3,84,57,44,135,102,11,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 579 ") {
    byte_vec_t msg { 60,144,254,96 };
    byte_vec_t sig { 201,202,204,204,186,69,236,7,135,37,150,31,255,109,227,229,244,111,19,222,160,170,105,251,48,234,147,42,17,5,17,109,12,167,67,157,94,117,0,196,143,157,115,12,106,139,33,151,238,6,136,79,164,48,150,179,212,28,153,175,74,198,85,157 };
    byte_vec_t pk { 4,159,115,235,210,239,7,187,42,211,47,215,14,72,24,221,164,126,67,0,124,222,14,59,128,159,0,93,35,104,255,217,66,131,115,164,155,124,168,101,123,82,227,67,208,234,186,213,140,168,148,153,98,239,206,128,251,246,225,56,10,4,172,3,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 579 ") {
    byte_vec_t msg { 174,18,60,225 };
    byte_vec_t sig { 23,116,40,156,194,33,167,40,51,130,226,243,36,236,220,248,187,56,141,237,199,121,242,84,18,38,33,95,109,69,114,128,71,125,195,26,159,179,239,116,4,113,37,255,216,72,161,196,75,218,71,35,111,47,147,77,203,10,209,1,195,191,25,86 };
    byte_vec_t pk { 4,26,68,105,22,225,87,255,252,196,213,108,104,87,110,82,162,165,126,190,123,102,14,210,32,161,108,185,191,78,71,244,167,41,83,226,183,140,165,48,124,123,251,56,137,104,89,97,163,176,216,208,99,112,114,124,138,27,84,242,59,195,82,36,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 579 ") {
    byte_vec_t msg { 33,89,85,155 };
    byte_vec_t sig { 245,251,8,252,198,231,66,145,132,78,19,104,128,177,196,204,185,170,160,240,182,252,131,127,187,184,187,158,49,16,35,60,51,158,105,225,97,149,32,122,205,5,222,113,205,230,238,213,63,18,222,93,125,89,21,248,175,74,138,236,158,97,34,99 };
    byte_vec_t pk { 2,195,119,66,7,64,204,31,222,78,17,101,119,175,142,171,45,202,73,116,91,65,102,129,163,115,93,78,84,15,248,157,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 579 ") {
    byte_vec_t msg { 76,56,66,249 };
    byte_vec_t sig { 60,64,94,181,32,250,198,244,72,29,43,176,137,57,86,1,14,0,79,204,243,24,135,69,239,26,159,105,52,255,136,68,21,115,131,243,55,83,215,206,180,0,187,184,170,203,190,92,112,237,57,253,243,105,182,168,70,20,231,203,98,78,52,67 };
    byte_vec_t pk { 2,255,188,48,208,118,210,54,249,38,255,112,181,211,144,250,100,122,154,153,9,98,16,209,39,16,6,2,93,16,221,192,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 580 ") {
    byte_vec_t msg { 240,236,3,136 };
    byte_vec_t sig { 80,9,152,240,194,83,125,191,93,98,100,119,66,180,95,13,1,181,242,43,28,6,140,121,251,147,51,11,195,30,201,149,7,118,132,51,193,14,3,111,168,177,86,64,48,5,82,70,253,71,26,23,12,100,20,73,148,163,76,83,241,42,110,17 };
    byte_vec_t pk { 4,229,115,40,166,106,242,157,92,45,245,122,119,131,78,128,94,173,147,207,201,98,157,127,248,243,198,183,206,108,148,203,39,34,79,241,15,191,233,226,76,89,128,18,113,177,112,172,243,112,9,230,251,178,147,133,156,161,74,210,52,156,50,130,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 580 ") {
    byte_vec_t msg { 103,8,213,251 };
    byte_vec_t sig { 51,85,194,66,174,241,60,199,82,168,215,122,213,219,214,109,214,221,167,130,96,172,236,3,162,163,12,88,172,220,192,110,65,172,137,75,125,156,20,72,113,100,67,53,98,132,155,27,131,195,48,147,196,167,253,79,207,131,182,150,141,245,108,212 };
    byte_vec_t pk { 4,60,32,189,11,3,248,5,56,153,204,65,151,164,126,67,232,105,75,128,225,121,197,137,182,186,197,32,11,160,19,48,225,180,131,159,248,36,118,115,75,216,38,177,151,244,211,237,159,230,76,15,223,41,76,20,161,63,94,29,200,142,35,59,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 580 ") {
    byte_vec_t msg { 112,250,128,221 };
    byte_vec_t sig { 208,7,113,241,159,41,109,210,82,229,106,173,70,196,135,193,169,16,116,109,106,59,143,45,153,176,83,104,19,43,83,112,215,184,154,157,179,15,212,191,245,128,12,131,42,103,1,27,57,58,49,144,77,55,53,151,38,85,101,126,201,108,181,162 };
    byte_vec_t pk { 3,46,240,25,103,2,222,54,151,116,11,96,76,59,138,150,203,11,65,22,5,38,63,239,223,36,154,108,159,185,34,202,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 580 ") {
    byte_vec_t msg { 128,111,139,28 };
    byte_vec_t sig { 80,119,71,53,104,85,250,225,237,247,59,23,9,240,242,54,102,54,91,115,23,61,194,68,251,227,103,3,227,77,31,83,196,121,26,185,95,217,136,227,43,225,104,73,129,238,9,19,79,136,118,74,199,50,68,45,113,241,105,158,108,32,50,177 };
    byte_vec_t pk { 3,73,150,202,209,246,120,18,112,121,71,192,228,225,74,80,103,17,164,11,72,102,203,117,176,128,236,112,18,60,192,163,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 581 ") {
    byte_vec_t msg { 177,114,198,201 };
    byte_vec_t sig { 76,74,209,187,174,143,106,168,171,40,153,253,145,153,56,201,50,32,247,132,155,13,244,85,24,246,176,236,118,62,127,112,198,110,47,3,208,120,151,83,53,236,181,88,128,196,192,71,133,66,191,166,143,108,55,102,26,201,238,201,8,151,57,1 };
    byte_vec_t pk { 4,108,69,77,214,155,15,52,70,109,199,174,160,208,207,87,171,3,138,159,179,10,207,39,85,39,248,107,248,138,52,23,106,48,117,99,249,86,135,150,168,94,217,232,115,52,224,113,194,180,1,100,0,216,244,181,92,214,240,133,120,162,98,108,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 581 ") {
    byte_vec_t msg { 14,254,183,60 };
    byte_vec_t sig { 155,204,245,40,148,178,226,153,3,234,27,95,244,84,48,146,74,6,78,131,202,5,212,239,5,151,82,66,216,161,64,117,110,181,153,2,199,190,226,23,130,120,136,51,196,3,59,209,190,50,7,115,182,141,111,161,7,59,166,90,102,211,235,139 };
    byte_vec_t pk { 4,229,252,224,176,73,198,40,119,159,71,127,17,110,254,201,62,11,94,228,223,45,9,243,96,117,214,77,138,191,239,145,39,38,205,28,66,237,69,15,177,83,41,9,39,242,164,6,220,106,37,121,35,163,196,65,160,62,255,27,106,74,118,141,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 581 ") {
    byte_vec_t msg { 201,237,3,191 };
    byte_vec_t sig { 177,143,113,248,37,154,19,199,115,79,83,63,177,248,174,140,172,228,147,250,65,228,108,224,18,22,66,139,183,210,81,50,113,85,126,134,160,154,96,99,97,48,95,16,15,158,161,25,28,94,36,23,44,153,71,81,140,211,45,7,76,5,207,233 };
    byte_vec_t pk { 3,28,69,179,37,74,152,172,175,76,38,20,214,158,95,146,249,25,111,172,51,39,190,129,91,191,47,60,46,5,21,192,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 581 ") {
    byte_vec_t msg { 116,217,52,14 };
    byte_vec_t sig { 253,223,135,146,17,219,36,122,117,214,159,170,212,227,12,200,10,110,249,193,185,192,132,101,145,119,195,174,0,125,175,133,238,108,219,3,41,208,34,59,67,5,58,54,159,223,141,50,204,196,11,56,200,151,126,208,80,21,122,141,253,175,30,42 };
    byte_vec_t pk { 2,33,198,42,79,217,220,130,0,248,248,156,168,159,139,92,73,85,61,207,127,12,210,63,43,149,122,175,31,26,17,253,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 582 ") {
    byte_vec_t msg { 68,237,95,77 };
    byte_vec_t sig { 118,167,124,14,14,97,128,184,194,31,7,62,10,166,40,239,128,146,254,210,208,81,61,221,75,220,27,142,106,239,104,178,168,56,255,142,244,43,90,204,95,187,222,90,218,232,196,227,226,46,29,5,24,222,133,85,114,141,32,71,190,106,142,149 };
    byte_vec_t pk { 4,229,49,156,78,206,119,88,100,117,102,27,151,24,144,92,114,104,170,219,42,116,73,205,53,160,11,234,98,214,215,7,17,43,4,173,152,140,82,244,237,242,37,131,179,124,6,121,9,77,155,7,181,105,91,24,83,122,129,23,194,235,100,207,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 582 ") {
    byte_vec_t msg { 106,165,208,155 };
    byte_vec_t sig { 58,221,227,219,233,51,195,190,153,53,80,103,128,227,225,239,210,140,192,116,5,133,227,140,132,46,21,199,193,146,82,46,163,255,197,199,48,118,226,188,159,5,115,23,59,125,146,175,191,224,51,187,67,165,173,72,14,107,126,84,225,7,153,213 };
    byte_vec_t pk { 4,88,48,24,221,5,99,253,52,12,167,208,57,206,174,131,167,224,183,23,6,204,136,61,46,98,122,200,143,239,241,172,170,160,231,153,39,38,193,127,41,17,254,147,36,8,167,168,153,90,112,81,100,206,99,125,206,211,78,43,118,205,23,101,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 582 ") {
    byte_vec_t msg { 149,68,213,247 };
    byte_vec_t sig { 176,224,127,206,132,22,154,182,45,182,84,212,135,231,71,35,19,148,101,236,18,239,229,209,172,154,198,194,24,33,209,204,189,10,137,157,225,105,31,108,2,226,42,191,38,25,91,132,199,155,129,255,239,247,116,255,128,142,11,133,107,169,191,198 };
    byte_vec_t pk { 3,205,87,170,118,87,211,185,93,100,56,188,235,16,254,226,116,57,251,249,148,232,185,17,15,218,44,144,134,184,255,82,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 582 ") {
    byte_vec_t msg { 189,71,184,169 };
    byte_vec_t sig { 9,26,170,139,9,136,218,236,118,189,225,2,56,147,31,32,228,181,25,79,79,113,250,124,109,27,97,155,219,135,70,234,157,248,45,14,28,190,66,122,34,149,173,197,65,241,137,15,172,157,90,11,8,64,75,57,207,44,90,217,125,44,126,41 };
    byte_vec_t pk { 3,213,1,221,227,106,42,62,51,230,90,214,97,8,58,164,147,218,63,124,226,49,16,157,94,172,82,230,77,63,11,246,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 583 ") {
    byte_vec_t msg { 153,9,239,46 };
    byte_vec_t sig { 36,230,238,172,150,74,58,23,239,240,126,64,179,104,147,118,205,120,60,35,141,64,248,76,67,3,0,22,192,251,169,162,90,60,139,223,109,18,101,140,187,195,239,171,115,201,137,154,23,72,54,161,238,34,134,209,99,140,104,166,13,73,0,32 };
    byte_vec_t pk { 4,42,22,100,60,144,46,149,2,72,240,85,165,125,108,248,164,143,63,56,125,121,132,29,41,121,187,167,122,202,199,42,18,3,139,238,211,255,29,6,137,144,7,188,128,59,227,53,95,46,235,233,43,201,130,154,192,59,193,122,10,137,0,233,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 583 ") {
    byte_vec_t msg { 60,14,121,112 };
    byte_vec_t sig { 180,53,63,74,253,54,219,105,104,193,12,166,25,250,40,121,195,211,191,252,7,169,133,166,45,74,190,157,13,244,39,214,209,105,112,80,9,95,12,253,51,63,226,227,124,177,174,137,151,227,38,83,253,37,243,68,107,38,218,169,46,213,247,154 };
    byte_vec_t pk { 4,47,127,0,207,239,191,132,3,187,246,217,222,79,109,169,200,254,89,217,236,110,114,10,127,20,149,102,46,61,135,135,229,234,181,15,3,75,71,134,100,242,121,11,226,68,203,179,37,26,18,85,66,47,150,20,131,41,19,126,12,251,107,100,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 583 ") {
    byte_vec_t msg { 231,64,41,254 };
    byte_vec_t sig { 135,164,76,214,210,228,191,4,135,129,82,65,45,185,229,57,53,156,57,126,117,131,56,148,72,182,146,22,227,61,45,64,196,39,62,63,153,179,183,3,139,97,59,227,125,26,160,182,247,244,119,160,227,228,84,242,3,2,197,29,93,135,61,187 };
    byte_vec_t pk { 3,138,154,228,171,166,141,255,248,17,234,58,71,45,132,205,217,245,223,138,44,228,246,196,83,10,194,4,66,88,29,74,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 583 ") {
    byte_vec_t msg { 253,119,59,95 };
    byte_vec_t sig { 136,209,131,241,204,30,38,161,18,48,63,147,153,117,129,16,55,1,45,255,83,71,221,127,48,117,19,226,130,58,242,168,68,9,184,76,14,252,169,175,38,83,180,35,174,119,21,86,210,249,222,0,107,91,48,60,110,195,92,218,177,211,213,23 };
    byte_vec_t pk { 3,77,215,247,188,2,38,246,193,222,206,105,129,85,28,249,135,252,77,220,246,207,171,218,41,17,177,241,160,196,63,213,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 584 ") {
    byte_vec_t msg { 159,224,44,36 };
    byte_vec_t sig { 27,124,54,207,51,68,191,211,185,89,207,61,95,162,139,211,43,164,84,55,58,63,23,76,75,30,0,13,150,252,74,61,185,186,203,100,141,105,105,153,216,80,117,164,144,172,67,174,28,55,54,83,123,135,121,131,243,146,118,35,7,97,183,200 };
    byte_vec_t pk { 4,221,143,70,199,125,246,65,100,157,56,139,209,40,180,159,179,81,28,101,71,107,107,250,93,134,82,138,110,170,79,75,163,16,15,67,26,161,22,41,62,39,169,245,213,203,221,7,161,206,174,90,132,152,106,183,15,213,254,228,231,131,190,88,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 584 ") {
    byte_vec_t msg { 61,27,16,208 };
    byte_vec_t sig { 235,215,141,92,187,27,78,7,135,63,241,67,169,20,128,252,126,242,20,197,126,144,28,102,230,38,201,143,32,159,42,209,198,145,11,191,5,96,121,171,179,109,149,174,70,176,38,55,117,67,47,222,68,145,45,158,255,86,213,165,9,76,63,155 };
    byte_vec_t pk { 4,30,161,18,254,195,157,23,241,47,221,50,43,9,214,242,246,182,155,121,90,45,214,123,187,127,218,123,22,96,121,168,198,151,118,176,99,168,40,143,239,227,167,217,65,252,174,17,145,59,13,226,184,64,26,181,27,97,170,80,17,46,70,116,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 584 ") {
    byte_vec_t msg { 144,225,154,113 };
    byte_vec_t sig { 21,219,26,212,31,178,140,189,18,235,153,238,35,200,189,59,182,178,245,174,11,178,101,234,221,22,99,206,65,203,199,241,62,238,1,27,45,125,95,247,230,113,212,235,103,182,70,109,189,140,207,3,216,130,97,254,171,208,80,110,243,204,61,206 };
    byte_vec_t pk { 2,37,235,126,13,214,201,170,191,0,196,36,77,61,193,167,97,168,68,213,29,183,255,20,17,142,46,70,122,104,64,214,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 584 ") {
    byte_vec_t msg { 120,99,187,180 };
    byte_vec_t sig { 110,27,174,19,28,95,128,188,68,132,34,80,150,81,179,124,186,3,99,89,158,55,250,252,144,82,26,76,108,125,140,175,34,207,80,207,13,147,240,187,207,64,180,150,129,191,82,38,208,226,65,30,179,246,32,18,131,159,37,206,129,217,148,247 };
    byte_vec_t pk { 2,124,84,191,113,230,176,101,245,28,25,29,5,170,21,167,100,83,134,137,159,49,218,224,225,221,39,68,89,102,82,118,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 585 ") {
    byte_vec_t msg { 109,26,150,156 };
    byte_vec_t sig { 215,237,134,123,177,248,104,219,34,100,208,130,149,100,128,105,26,251,38,54,216,76,218,196,109,187,161,100,87,246,28,210,58,132,94,88,199,223,41,89,191,6,135,189,186,111,206,73,199,229,255,248,111,193,175,68,10,190,177,95,119,119,158,43 };
    byte_vec_t pk { 4,131,201,33,86,129,146,6,63,248,147,64,254,64,112,178,174,3,73,21,201,40,154,153,253,7,10,130,195,110,109,174,222,80,145,176,167,60,76,116,49,21,122,28,216,131,155,33,42,143,168,205,1,27,241,7,169,200,43,88,121,111,98,248,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 585 ") {
    byte_vec_t msg { 82,137,22,224 };
    byte_vec_t sig { 226,210,205,145,79,56,38,100,134,170,144,115,0,208,206,41,215,223,52,155,175,22,199,186,151,45,182,249,86,146,236,85,151,35,227,97,247,169,223,95,142,195,47,17,119,169,161,173,7,233,177,8,148,144,246,102,191,137,131,160,83,1,11,182 };
    byte_vec_t pk { 4,244,170,19,91,114,226,9,58,237,70,138,121,253,232,97,151,128,182,53,93,29,34,253,84,193,148,150,218,114,128,161,62,55,204,168,168,17,153,230,67,229,7,89,158,165,18,21,216,16,246,9,119,43,69,129,179,211,95,10,107,91,214,141,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 585 ") {
    byte_vec_t msg { 63,166,80,28 };
    byte_vec_t sig { 141,34,246,141,105,150,98,18,161,46,175,157,184,105,239,152,126,76,207,2,229,91,7,138,105,179,55,216,5,95,57,141,225,221,158,109,29,147,23,237,185,27,42,205,165,224,20,48,168,195,55,8,98,204,124,74,56,3,163,175,218,138,132,83 };
    byte_vec_t pk { 3,165,13,216,151,31,147,32,89,132,211,129,75,45,105,57,77,181,157,24,139,77,228,13,188,140,171,236,61,243,217,196,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 585 ") {
    byte_vec_t msg { 208,129,163,226 };
    byte_vec_t sig { 218,104,48,172,106,202,160,179,250,47,228,172,129,185,16,218,103,160,46,153,56,168,88,159,126,213,253,116,46,28,119,120,76,35,30,161,78,135,28,116,136,96,36,137,187,243,25,44,95,26,188,38,200,76,244,51,63,210,141,245,199,106,37,150 };
    byte_vec_t pk { 2,197,128,119,239,187,107,189,209,237,17,45,227,133,19,118,169,228,84,11,203,106,15,124,181,106,209,81,234,54,80,146,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 586 ") {
    byte_vec_t msg { 98,41,69,86 };
    byte_vec_t sig { 166,107,190,73,17,152,104,40,92,239,165,62,84,168,203,178,113,48,43,248,85,195,115,154,66,248,155,32,121,22,69,219,155,151,132,27,62,87,9,184,172,40,101,80,60,79,123,161,64,142,217,183,116,17,101,176,55,232,90,249,13,86,151,244 };
    byte_vec_t pk { 4,159,1,70,225,39,36,188,12,114,151,184,6,4,149,63,217,28,238,9,229,139,147,3,89,101,86,130,80,15,252,149,99,148,29,248,62,94,118,188,113,65,39,171,1,80,70,185,43,219,245,135,207,199,68,13,143,138,182,211,209,85,82,84,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 586 ") {
    byte_vec_t msg { 127,80,74,237 };
    byte_vec_t sig { 48,13,199,243,53,221,159,6,186,20,208,21,162,3,22,225,30,209,186,246,232,112,209,46,250,247,242,35,117,29,252,3,11,213,184,52,34,163,206,162,18,234,25,111,59,112,231,170,146,103,134,76,48,193,154,2,157,235,5,29,214,93,141,223 };
    byte_vec_t pk { 4,15,241,237,71,250,211,54,240,244,155,195,199,23,134,77,96,47,163,39,20,66,172,206,88,126,82,81,64,209,142,217,243,62,163,71,230,143,34,1,247,192,25,65,187,145,77,90,236,30,66,140,93,57,36,66,127,92,157,55,143,252,254,82,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 586 ") {
    byte_vec_t msg { 56,86,55,241 };
    byte_vec_t sig { 251,252,196,2,171,22,92,65,109,159,114,16,108,217,239,128,162,16,206,237,194,125,84,133,118,78,156,54,88,203,57,223,44,190,77,189,183,130,208,187,120,2,207,169,32,140,182,204,189,98,230,79,126,156,110,241,183,129,114,37,186,87,254,125 };
    byte_vec_t pk { 3,78,120,75,112,70,39,174,235,196,190,106,109,210,15,188,34,224,76,69,32,200,218,159,36,94,249,134,12,212,112,27,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 586 ") {
    byte_vec_t msg { 173,129,249,8 };
    byte_vec_t sig { 123,89,163,208,230,24,236,102,105,172,236,118,177,193,69,134,176,208,118,83,75,190,248,190,132,253,221,140,26,232,120,87,216,141,169,160,156,63,211,112,39,140,58,198,33,229,194,93,211,192,149,189,225,150,209,82,186,175,38,186,105,218,1,172 };
    byte_vec_t pk { 3,234,228,83,150,113,22,58,206,119,12,141,107,53,45,135,66,240,198,179,57,8,48,136,201,159,173,177,25,45,250,86,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 587 ") {
    byte_vec_t msg { 131,107,50,140 };
    byte_vec_t sig { 124,214,78,225,123,254,221,84,55,224,112,214,204,2,189,0,69,100,65,48,234,84,150,77,235,98,93,9,193,60,204,79,254,133,245,175,51,111,200,50,125,139,231,135,226,148,96,182,5,177,217,194,252,52,49,168,103,121,209,48,197,164,154,61 };
    byte_vec_t pk { 4,240,230,131,185,123,178,17,24,69,108,209,216,155,182,231,42,121,40,230,63,136,207,185,186,201,224,156,129,95,219,47,254,28,203,204,117,11,145,192,175,82,139,62,29,79,41,167,200,12,25,72,224,81,5,234,27,28,7,119,114,252,204,211,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 587 ") {
    byte_vec_t msg { 236,249,186,85 };
    byte_vec_t sig { 173,19,200,170,101,90,69,130,137,106,38,146,63,75,197,178,5,221,87,67,211,2,229,81,200,31,181,130,168,79,160,21,94,59,231,130,99,37,247,21,199,110,188,204,0,20,42,240,153,139,98,166,165,45,101,28,49,106,75,64,245,96,147,64 };
    byte_vec_t pk { 4,224,46,97,104,26,69,130,134,82,247,64,208,142,139,229,165,216,54,29,98,184,83,91,234,17,196,77,246,129,206,70,136,35,213,109,158,136,219,55,118,193,198,1,226,14,121,38,48,76,14,199,131,148,114,104,247,45,92,223,30,212,70,42,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 587 ") {
    byte_vec_t msg { 110,45,243,32 };
    byte_vec_t sig { 21,95,168,247,209,159,198,176,102,237,60,65,16,243,25,150,167,214,26,18,199,125,21,7,25,1,224,134,113,150,39,29,70,83,30,83,236,1,255,44,218,146,32,88,44,186,90,185,240,59,24,42,100,21,147,63,127,31,165,130,244,36,169,248 };
    byte_vec_t pk { 2,132,202,252,88,198,98,157,204,176,215,239,243,134,237,117,145,232,215,195,138,227,32,51,96,56,201,130,232,72,42,44,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 587 ") {
    byte_vec_t msg { 250,4,150,240 };
    byte_vec_t sig { 102,128,27,103,243,71,181,186,158,8,156,75,113,169,208,71,198,212,215,212,71,146,150,16,124,246,175,138,49,11,141,77,161,183,150,26,117,28,121,27,31,62,214,246,4,198,16,183,52,197,84,184,230,189,57,197,218,236,203,210,162,103,130,51 };
    byte_vec_t pk { 2,172,71,88,154,25,208,239,69,71,72,48,73,158,159,165,119,132,189,170,169,222,5,205,213,154,65,182,74,180,234,46,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 588 ") {
    byte_vec_t msg { 79,228,21,25 };
    byte_vec_t sig { 203,18,55,126,216,72,237,38,4,237,111,238,222,192,151,222,68,106,96,208,170,26,157,34,216,34,244,131,144,135,166,194,196,25,62,144,205,128,53,196,202,78,144,69,83,197,228,184,98,41,152,126,85,99,209,5,65,76,136,169,219,211,216,234 };
    byte_vec_t pk { 4,123,229,19,94,83,146,148,195,10,235,222,126,29,121,199,8,181,165,98,240,36,191,16,210,172,6,149,123,220,168,93,244,161,236,171,82,246,228,194,86,79,176,168,14,10,136,223,36,189,110,92,122,36,4,98,66,195,70,176,0,82,164,89,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 588 ") {
    byte_vec_t msg { 111,34,175,163 };
    byte_vec_t sig { 233,83,187,56,226,3,137,188,42,250,239,187,93,33,173,4,218,83,178,204,83,28,200,118,143,4,3,144,24,120,138,12,204,195,37,96,117,114,156,201,234,143,220,236,125,45,6,162,226,4,220,104,141,146,213,116,206,25,160,192,138,43,68,180 };
    byte_vec_t pk { 4,87,215,213,118,0,71,180,130,104,231,185,160,122,209,82,98,216,252,177,47,69,160,124,190,240,25,209,71,66,3,65,208,105,112,191,158,210,196,66,140,212,79,97,148,103,170,133,45,141,113,244,10,24,116,215,16,120,142,97,107,130,22,61,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 588 ") {
    byte_vec_t msg { 0,127,41,235 };
    byte_vec_t sig { 78,70,5,110,175,68,247,15,11,156,1,241,72,163,128,245,238,20,246,61,138,237,54,127,199,232,243,189,101,132,26,123,233,32,84,35,33,18,156,187,227,187,23,132,232,252,193,17,169,96,185,14,244,58,20,185,134,133,252,153,136,30,204,245 };
    byte_vec_t pk { 2,250,141,138,75,129,230,105,13,250,70,232,139,111,88,12,146,174,170,45,116,60,150,22,133,201,213,148,168,169,138,238,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 588 ") {
    byte_vec_t msg { 194,17,143,72 };
    byte_vec_t sig { 42,216,73,131,5,171,33,10,105,34,238,123,131,145,163,138,62,43,60,225,156,207,110,127,210,218,35,62,168,90,94,239,237,168,116,237,90,21,208,124,87,160,223,173,40,128,251,134,62,144,219,219,60,212,109,59,41,21,165,121,12,252,152,244 };
    byte_vec_t pk { 2,38,46,106,163,152,47,184,103,27,177,159,226,6,175,225,116,167,156,239,122,183,90,121,13,140,40,53,206,225,165,32,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 589 ") {
    byte_vec_t msg { 76,201,41,37 };
    byte_vec_t sig { 23,245,232,77,174,132,37,238,219,122,46,147,242,139,126,122,94,121,109,25,132,64,35,159,163,190,72,197,172,133,187,199,195,44,73,216,139,197,131,233,125,234,26,235,123,5,170,82,56,170,29,0,217,144,82,211,79,92,244,117,172,178,209,65 };
    byte_vec_t pk { 4,137,247,204,90,217,205,192,162,7,250,206,243,13,216,182,236,39,117,162,106,122,43,113,61,118,156,17,49,87,189,13,226,130,71,200,125,119,118,174,37,74,212,194,48,137,243,83,58,2,181,65,169,157,104,61,162,43,214,198,49,237,94,114,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 589 ") {
    byte_vec_t msg { 101,128,20,18 };
    byte_vec_t sig { 49,230,220,67,12,229,154,207,158,70,119,123,93,138,0,43,190,241,201,125,94,219,129,66,68,126,234,95,5,148,41,75,131,247,16,74,249,118,168,201,52,124,127,107,10,112,242,193,205,143,3,235,126,72,122,145,107,153,220,187,77,88,231,178 };
    byte_vec_t pk { 4,10,233,155,209,25,71,23,183,176,144,233,104,126,231,143,175,135,161,250,95,90,175,213,251,100,211,80,233,220,58,200,99,77,201,181,59,70,24,143,49,57,196,64,191,179,3,79,101,25,199,53,85,177,77,247,120,60,157,132,16,200,43,195,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 589 ") {
    byte_vec_t msg { 53,22,241,149 };
    byte_vec_t sig { 177,127,175,119,229,219,19,151,65,229,185,184,251,63,215,152,190,17,10,10,184,212,236,153,251,244,151,14,26,90,160,12,207,52,14,231,147,43,81,246,93,193,43,39,162,141,9,159,62,105,139,111,34,72,86,40,118,58,253,131,236,159,118,43 };
    byte_vec_t pk { 2,61,199,230,65,73,93,215,241,37,193,141,102,73,179,154,7,117,3,65,55,68,195,61,100,186,224,205,133,47,103,215,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 589 ") {
    byte_vec_t msg { 73,22,172,204 };
    byte_vec_t sig { 191,72,147,170,192,58,250,200,82,228,54,94,53,100,39,55,87,85,55,100,6,236,87,56,27,82,106,14,174,41,137,135,234,181,74,97,154,234,229,83,71,71,100,117,244,22,179,149,128,181,113,135,178,168,177,124,145,227,169,254,69,37,17,156 };
    byte_vec_t pk { 2,244,188,121,181,42,6,139,84,225,42,20,236,102,92,98,60,92,200,61,161,35,171,140,166,68,47,187,120,182,174,118,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 590 ") {
    byte_vec_t msg { 244,210,87,241 };
    byte_vec_t sig { 209,1,219,255,96,188,121,174,210,119,48,170,74,242,214,116,102,121,216,110,104,91,98,39,121,28,254,205,252,197,173,34,216,175,25,95,250,225,245,125,195,34,41,226,29,234,43,107,114,22,187,42,212,69,158,231,126,68,135,74,166,210,182,240 };
    byte_vec_t pk { 4,205,155,65,112,92,67,109,92,101,76,174,214,40,72,185,23,102,169,129,46,113,163,54,45,132,66,96,86,92,187,115,158,185,154,215,43,33,220,149,30,241,207,115,199,104,70,202,87,150,224,62,223,225,149,202,151,99,34,139,188,198,82,120,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 590 ") {
    byte_vec_t msg { 222,199,178,69 };
    byte_vec_t sig { 115,143,205,155,219,94,206,218,11,74,150,116,233,182,133,27,37,152,91,48,26,174,232,114,142,42,184,115,29,134,196,76,155,218,111,57,113,140,225,99,89,220,240,84,50,199,237,185,71,195,138,220,160,171,84,47,182,98,201,163,223,253,108,181 };
    byte_vec_t pk { 4,102,100,36,176,194,48,118,131,140,233,180,169,2,3,165,192,59,96,249,114,60,115,14,224,131,45,165,182,55,193,37,153,101,137,83,154,86,57,6,36,144,200,118,221,102,99,139,144,247,3,124,255,117,37,57,202,191,62,142,152,107,42,235,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 590 ") {
    byte_vec_t msg { 10,184,25,141 };
    byte_vec_t sig { 162,20,215,245,96,146,211,214,162,221,187,47,234,79,11,87,231,230,9,179,120,87,238,198,218,4,220,120,108,21,201,252,132,219,79,201,12,179,162,192,46,67,216,156,31,25,249,107,212,57,41,12,203,125,4,34,185,211,157,49,90,110,189,20 };
    byte_vec_t pk { 2,240,207,202,240,135,55,123,236,93,228,213,72,138,126,133,203,56,236,10,100,23,245,79,46,233,50,205,100,38,252,141,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 590 ") {
    byte_vec_t msg { 219,103,7,124 };
    byte_vec_t sig { 84,34,168,33,202,182,74,225,207,36,246,220,59,135,31,29,49,226,95,132,10,72,123,67,93,180,168,86,172,125,236,142,12,141,127,38,91,197,99,228,69,123,104,86,82,204,70,143,213,134,103,40,64,136,200,12,26,113,145,5,96,187,213,219 };
    byte_vec_t pk { 2,168,210,83,225,241,53,204,134,34,227,140,82,151,226,118,63,199,56,163,48,245,40,225,212,24,222,15,184,44,136,202,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 591 ") {
    byte_vec_t msg { 90,4,223,174 };
    byte_vec_t sig { 126,125,119,18,129,119,221,15,42,232,235,5,4,171,47,77,223,89,253,226,12,34,247,164,225,162,126,212,38,33,226,19,232,148,130,213,7,0,74,116,52,240,211,195,116,8,23,190,186,212,205,239,103,148,173,239,179,72,67,97,5,158,238,228 };
    byte_vec_t pk { 4,111,218,125,250,147,147,255,11,113,88,121,2,134,161,212,28,66,116,20,145,137,57,1,162,160,155,210,215,141,38,158,53,102,3,18,105,209,212,67,84,155,154,22,71,195,141,238,90,92,56,220,120,7,61,37,99,35,91,185,104,186,165,64,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 591 ") {
    byte_vec_t msg { 248,110,101,166 };
    byte_vec_t sig { 22,92,114,117,234,4,213,188,159,122,151,67,184,178,75,11,10,25,115,89,132,254,202,244,4,119,79,226,126,63,127,117,168,6,141,27,210,165,19,116,131,128,226,35,31,134,79,191,14,38,192,121,175,185,154,4,83,27,23,102,178,106,214,148 };
    byte_vec_t pk { 4,13,117,239,0,170,251,255,130,157,218,250,213,71,164,240,199,125,186,115,38,47,235,212,31,151,30,152,105,30,150,5,111,31,233,67,227,191,167,153,149,208,2,202,229,208,19,23,181,185,86,15,51,215,24,133,229,235,243,79,43,176,222,69,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 591 ") {
    byte_vec_t msg { 201,32,165,178 };
    byte_vec_t sig { 101,211,153,252,136,162,21,227,222,73,146,164,139,98,135,131,146,180,91,48,161,25,212,126,51,16,138,230,140,162,211,58,174,224,86,158,160,156,91,238,13,172,93,128,135,208,153,54,55,126,214,250,190,33,135,133,241,159,182,25,126,119,11,78 };
    byte_vec_t pk { 3,42,169,209,173,13,51,149,218,136,90,132,128,54,50,200,30,89,155,61,9,223,61,209,84,29,106,178,125,16,14,164,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 591 ") {
    byte_vec_t msg { 157,246,188,154 };
    byte_vec_t sig { 48,185,195,125,219,207,162,248,37,174,235,32,16,243,144,200,104,214,218,59,248,240,163,120,167,143,52,6,115,16,43,132,47,198,143,36,229,110,111,157,235,212,215,194,136,254,148,216,16,216,153,133,105,161,194,42,21,181,89,2,33,164,56,129 };
    byte_vec_t pk { 3,160,255,113,111,225,180,240,115,163,78,169,15,181,146,150,51,193,226,79,99,248,92,153,202,222,75,67,169,125,145,67,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 592 ") {
    byte_vec_t msg { 179,246,45,234 };
    byte_vec_t sig { 30,74,92,75,208,145,89,103,126,54,147,243,251,17,49,255,6,218,151,217,202,190,137,76,56,51,162,61,29,236,196,13,119,32,114,94,241,176,149,45,71,19,0,225,26,80,129,68,77,73,78,34,72,221,189,244,177,33,203,42,118,122,198,181 };
    byte_vec_t pk { 4,148,204,127,173,108,217,206,208,144,145,84,92,232,101,140,241,59,161,109,3,47,231,171,69,2,97,12,69,29,198,133,114,202,67,8,212,16,23,39,12,139,241,32,170,72,128,52,110,5,134,143,6,226,84,136,108,169,113,176,124,33,11,103,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 592 ") {
    byte_vec_t msg { 154,223,29,97 };
    byte_vec_t sig { 119,199,15,204,5,130,43,243,1,215,54,7,110,106,10,216,31,48,194,235,13,196,57,231,209,140,201,99,19,149,139,46,137,111,17,246,64,187,103,207,200,175,6,201,62,151,145,82,205,134,42,137,68,71,158,194,180,190,182,166,113,148,239,176 };
    byte_vec_t pk { 4,179,33,193,65,176,4,119,150,42,195,118,185,212,182,38,34,159,27,70,88,240,55,206,57,43,59,135,34,138,229,194,96,242,177,145,94,148,183,53,111,55,108,138,92,150,10,28,180,50,167,18,146,146,153,108,156,117,103,141,220,180,141,157,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 592 ") {
    byte_vec_t msg { 122,184,143,177 };
    byte_vec_t sig { 14,29,177,207,104,142,0,69,126,16,212,144,89,120,54,88,147,47,75,152,240,182,199,71,190,40,20,64,223,16,26,27,216,51,38,74,46,6,28,175,133,190,24,102,226,204,235,77,179,199,58,92,170,112,227,110,29,9,40,219,232,135,169,26 };
    byte_vec_t pk { 2,67,153,106,165,13,203,143,126,147,131,30,175,253,39,133,138,136,76,229,48,218,185,184,48,135,219,230,2,105,239,114,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 592 ") {
    byte_vec_t msg { 97,231,110,240 };
    byte_vec_t sig { 89,3,228,43,9,167,121,59,18,220,63,1,85,218,140,197,235,152,4,76,195,248,216,49,191,207,156,155,202,89,243,228,242,105,247,6,119,158,209,93,65,206,233,253,192,120,223,176,1,198,188,154,170,221,78,137,150,61,75,207,161,139,110,0 };
    byte_vec_t pk { 3,224,121,46,84,41,207,183,138,177,118,251,181,6,239,26,184,39,250,199,215,86,4,203,191,196,17,215,234,230,60,75,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 593 ") {
    byte_vec_t msg { 34,144,229,168 };
    byte_vec_t sig { 96,240,113,250,210,247,156,178,163,36,92,21,128,191,38,171,197,49,250,141,69,78,207,85,66,12,22,194,76,5,10,150,187,123,214,212,38,129,12,91,153,217,138,132,71,165,193,25,76,35,64,93,154,56,155,89,24,128,60,201,68,176,107,60 };
    byte_vec_t pk { 4,90,202,170,176,35,76,159,52,86,185,8,65,134,162,130,116,26,179,32,213,250,138,113,92,255,25,249,227,254,211,198,163,248,36,193,78,234,6,116,189,199,216,157,183,57,70,90,239,68,174,43,40,130,125,158,159,206,10,219,20,211,103,133,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 593 ") {
    byte_vec_t msg { 92,221,96,66 };
    byte_vec_t sig { 139,214,158,113,118,87,54,234,140,114,239,31,97,18,31,183,46,0,210,212,177,57,255,176,242,219,179,16,41,251,122,196,78,87,54,213,131,202,83,217,8,23,161,222,162,13,180,99,10,75,42,91,244,128,7,142,124,48,166,202,4,126,90,253 };
    byte_vec_t pk { 4,129,219,202,73,186,195,36,9,17,57,193,254,19,157,30,24,208,160,7,84,60,244,21,42,55,80,120,193,96,70,140,249,217,223,200,186,248,88,251,231,116,63,108,63,38,219,203,193,180,253,68,188,238,46,252,202,56,23,124,187,105,67,60,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 593 ") {
    byte_vec_t msg { 91,96,65,169 };
    byte_vec_t sig { 245,239,237,227,46,44,32,66,169,154,80,151,24,99,181,101,145,235,130,154,213,106,218,56,147,67,152,27,37,12,21,65,11,55,140,0,47,210,108,160,191,97,54,11,129,6,103,125,110,73,57,183,109,74,204,255,103,163,218,82,245,61,107,60 };
    byte_vec_t pk { 3,185,207,178,119,74,216,231,48,155,129,8,203,190,223,179,138,121,180,39,163,182,17,110,22,229,163,20,19,41,9,11,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 593 ") {
    byte_vec_t msg { 49,164,171,26 };
    byte_vec_t sig { 196,224,174,93,228,62,185,218,58,160,196,158,127,2,117,226,22,37,127,5,178,188,61,26,102,211,73,179,99,18,31,213,168,214,131,32,207,12,241,82,188,15,171,25,216,93,147,244,170,194,13,32,148,250,220,248,58,41,85,110,95,175,171,219 };
    byte_vec_t pk { 3,144,52,168,251,95,204,110,96,208,101,122,129,50,19,64,223,39,242,94,117,4,74,64,222,246,24,238,231,1,97,19,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 594 ") {
    byte_vec_t msg { 205,188,2,62 };
    byte_vec_t sig { 76,245,231,9,187,172,196,24,13,191,249,140,14,100,158,136,209,89,88,227,132,86,69,144,241,53,172,152,76,195,32,158,59,172,15,200,216,188,128,129,18,205,168,11,226,202,139,240,45,209,160,117,203,38,112,219,171,96,85,102,169,133,113,105 };
    byte_vec_t pk { 4,124,175,129,192,173,215,143,240,86,39,220,148,119,199,237,106,90,115,11,129,183,125,61,183,56,132,3,56,125,178,20,173,169,182,117,29,63,203,206,12,0,225,109,109,94,216,246,111,70,76,126,179,35,157,24,213,157,147,9,27,40,241,51,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 594 ") {
    byte_vec_t msg { 79,40,82,251 };
    byte_vec_t sig { 166,251,242,43,144,64,240,255,243,138,34,248,101,140,20,63,213,87,242,82,47,41,176,136,69,173,246,55,127,208,99,201,66,45,183,228,81,252,78,57,19,198,87,184,30,5,215,38,110,68,81,56,79,231,71,210,193,187,95,156,42,124,227,49 };
    byte_vec_t pk { 4,0,254,134,33,102,53,240,126,255,198,92,72,161,72,130,38,226,149,144,193,90,157,231,57,214,90,108,101,28,201,84,73,191,52,128,58,200,21,156,241,18,188,29,18,250,174,5,107,160,87,180,127,189,92,126,15,88,248,88,153,236,121,83,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 594 ") {
    byte_vec_t msg { 159,117,253,43 };
    byte_vec_t sig { 21,203,199,173,78,46,144,67,99,233,22,250,171,245,112,124,195,225,135,38,33,217,110,37,215,249,220,82,14,49,224,180,133,57,215,162,121,81,220,1,135,170,69,41,121,215,179,60,201,57,116,202,195,112,233,148,131,167,53,207,204,142,14,16 };
    byte_vec_t pk { 2,240,134,116,45,253,33,76,66,92,199,14,209,101,215,110,80,140,82,192,88,189,115,18,177,61,18,116,201,76,134,206,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 594 ") {
    byte_vec_t msg { 82,109,1,161 };
    byte_vec_t sig { 103,56,196,52,247,20,246,88,20,174,242,203,232,229,12,19,55,79,52,255,109,114,135,148,90,57,247,201,21,199,46,134,242,95,217,11,196,37,196,84,200,130,82,207,230,1,37,180,134,1,108,76,106,96,81,78,48,66,75,151,46,186,86,211 };
    byte_vec_t pk { 3,43,124,182,183,58,115,208,250,53,220,69,201,135,148,69,131,94,146,228,169,97,44,165,29,160,207,35,243,151,161,161,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 595 ") {
    byte_vec_t msg { 155,73,61,122 };
    byte_vec_t sig { 165,199,6,18,9,164,231,102,119,69,159,140,209,102,79,196,6,160,231,254,140,54,153,208,190,252,138,111,27,253,248,37,85,203,220,129,234,158,249,237,101,61,62,186,28,235,2,98,42,165,212,250,89,227,217,76,7,45,218,11,68,145,22,128 };
    byte_vec_t pk { 4,113,170,147,185,255,33,219,211,43,13,82,86,245,215,236,13,147,229,138,86,144,95,139,181,253,246,36,123,4,79,32,155,212,211,63,23,122,228,26,42,220,156,137,235,207,119,58,230,206,106,232,82,1,37,201,176,3,45,28,222,128,97,157,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 595 ") {
    byte_vec_t msg { 191,208,193,246 };
    byte_vec_t sig { 15,172,130,41,241,67,222,25,18,134,230,149,214,55,5,72,35,40,216,251,120,115,100,94,18,254,42,72,12,29,105,168,88,182,77,120,9,226,61,121,250,239,188,217,103,92,106,111,135,226,6,128,234,174,28,113,19,7,75,143,88,95,77,1 };
    byte_vec_t pk { 4,136,247,154,54,17,165,50,143,118,166,19,43,224,52,118,110,212,5,205,147,131,255,221,115,15,88,217,182,22,203,51,131,27,34,43,8,0,132,16,41,219,123,24,137,173,170,246,200,116,79,32,243,146,72,163,72,46,225,117,253,138,97,25,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 595 ") {
    byte_vec_t msg { 168,96,207,32 };
    byte_vec_t sig { 13,56,190,76,23,216,177,172,75,130,79,12,208,193,180,96,92,207,70,22,51,111,181,29,185,92,179,253,186,204,121,253,96,183,244,112,126,178,184,164,235,11,59,19,15,22,50,129,203,73,178,142,101,97,77,221,230,38,103,62,220,153,198,73 };
    byte_vec_t pk { 2,192,95,197,62,155,19,225,109,48,19,146,59,68,71,136,1,68,67,185,183,109,87,1,235,90,39,252,32,93,55,147,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 595 ") {
    byte_vec_t msg { 90,118,3,34 };
    byte_vec_t sig { 19,130,4,41,30,124,252,63,255,61,122,146,77,70,99,92,67,155,136,44,44,59,202,224,54,182,206,104,197,248,244,226,41,61,36,79,44,211,85,24,168,114,205,238,15,120,185,239,4,27,106,73,83,194,214,94,186,100,88,110,21,92,65,26 };
    byte_vec_t pk { 3,220,229,110,255,131,96,242,149,97,140,147,58,86,25,244,65,203,33,199,11,157,134,69,138,149,135,67,56,253,119,115,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 596 ") {
    byte_vec_t msg { 65,161,128,80 };
    byte_vec_t sig { 73,205,229,236,110,207,86,159,192,162,48,81,199,175,77,19,109,248,248,76,1,180,177,33,220,211,101,29,24,14,213,154,255,188,250,203,196,178,149,139,30,88,203,123,254,102,67,125,64,43,120,194,122,107,222,142,47,205,124,97,12,54,21,62 };
    byte_vec_t pk { 4,28,184,85,132,153,226,253,114,33,108,182,228,191,149,49,47,201,105,119,249,178,198,226,110,245,90,202,145,222,141,141,163,20,48,66,233,34,229,199,87,221,128,20,232,82,150,181,255,171,125,48,0,157,145,252,250,112,228,211,244,41,38,96,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 596 ") {
    byte_vec_t msg { 57,145,245,241 };
    byte_vec_t sig { 184,29,29,118,8,229,9,49,223,235,153,149,189,194,100,176,49,185,178,102,77,227,65,37,235,190,79,225,87,142,72,231,106,136,120,76,31,70,210,164,121,109,13,161,184,133,100,4,203,20,219,175,101,51,129,85,189,30,9,101,94,60,182,194 };
    byte_vec_t pk { 4,71,78,202,120,85,115,141,111,252,252,122,133,121,191,252,108,121,168,15,23,53,254,55,189,48,44,121,133,49,141,62,42,199,245,159,169,123,33,126,188,56,132,70,225,32,193,115,136,136,129,17,16,58,146,3,134,28,152,20,152,131,46,112,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 596 ") {
    byte_vec_t msg { 139,58,164,27 };
    byte_vec_t sig { 37,239,0,176,150,146,71,179,203,60,236,55,225,203,44,146,169,85,144,184,10,151,185,228,123,0,3,31,51,211,49,89,48,37,153,51,115,180,159,8,221,84,159,157,208,50,249,104,14,0,226,121,164,218,250,50,56,182,114,200,96,40,83,176 };
    byte_vec_t pk { 2,169,224,145,229,183,88,164,122,223,57,253,104,68,46,227,196,91,30,153,38,128,226,219,146,128,30,30,32,172,231,132,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 596 ") {
    byte_vec_t msg { 40,35,245,26 };
    byte_vec_t sig { 142,49,74,120,164,16,7,127,104,87,0,210,249,81,4,236,85,63,15,240,46,60,22,60,62,134,35,211,40,190,195,56,212,25,82,106,47,10,140,131,50,98,106,6,157,148,91,88,18,13,156,22,197,140,14,183,227,66,127,209,10,18,126,255 };
    byte_vec_t pk { 2,241,144,78,51,182,195,218,66,42,129,49,44,139,208,180,234,94,40,244,83,204,153,2,107,5,254,20,64,208,189,137,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 597 ") {
    byte_vec_t msg { 192,205,102,57 };
    byte_vec_t sig { 63,9,184,180,212,110,101,232,29,89,158,153,205,39,121,159,170,228,123,213,221,225,23,186,176,239,159,36,145,36,106,204,205,12,7,137,232,232,162,154,172,41,251,217,193,40,163,52,33,201,195,75,130,194,229,28,98,121,179,170,62,114,37,153 };
    byte_vec_t pk { 4,143,185,125,233,103,245,65,165,141,218,29,159,211,0,246,27,52,248,93,57,29,120,18,55,8,18,179,177,148,218,108,184,150,145,224,148,63,7,49,63,92,168,124,174,91,190,60,85,218,29,31,128,170,197,201,31,33,235,5,118,117,57,138,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 597 ") {
    byte_vec_t msg { 24,57,33,8 };
    byte_vec_t sig { 15,249,22,225,47,24,149,31,78,164,224,94,193,118,52,196,210,25,197,114,129,46,183,139,48,140,92,189,172,64,92,138,36,57,163,213,131,92,93,140,233,198,23,188,29,255,114,140,186,1,123,70,168,149,42,210,146,96,80,228,201,254,19,225 };
    byte_vec_t pk { 4,158,255,196,191,118,231,231,2,117,122,127,50,1,119,230,235,130,255,119,185,32,241,64,124,139,53,229,210,109,46,213,80,7,17,205,168,16,121,157,72,52,91,119,70,7,2,1,111,227,237,25,40,68,75,33,221,24,23,211,111,194,246,30,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 597 ") {
    byte_vec_t msg { 193,17,223,79 };
    byte_vec_t sig { 185,180,44,163,204,255,25,127,244,36,233,74,243,203,200,60,71,36,48,172,208,56,44,82,80,29,80,176,107,201,82,104,101,146,147,237,142,179,214,234,207,102,12,220,125,72,19,62,173,68,218,168,61,107,229,196,117,36,162,204,220,208,75,38 };
    byte_vec_t pk { 3,237,158,64,11,97,56,241,70,70,122,162,63,132,140,203,8,217,21,97,149,76,42,224,111,250,197,71,200,14,60,163,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 597 ") {
    byte_vec_t msg { 247,36,212,2 };
    byte_vec_t sig { 130,75,76,40,55,253,198,131,140,52,156,192,78,116,199,5,161,94,132,218,15,247,38,46,236,132,154,144,206,74,246,108,59,31,21,33,107,209,168,98,134,221,248,132,18,201,58,212,11,120,224,30,65,125,252,118,40,91,194,47,105,167,252,164 };
    byte_vec_t pk { 2,20,56,6,231,172,139,27,6,94,99,45,85,45,139,77,57,205,135,180,207,229,189,212,181,69,95,103,39,61,49,142,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 598 ") {
    byte_vec_t msg { 90,51,120,45 };
    byte_vec_t sig { 84,233,35,95,238,101,47,153,194,47,51,226,147,192,78,227,1,167,209,20,4,5,227,216,50,165,11,46,28,199,210,194,154,147,105,241,186,60,76,144,5,208,202,192,209,137,178,154,19,207,8,175,147,190,37,250,211,149,178,172,15,155,143,237 };
    byte_vec_t pk { 4,13,15,79,203,167,92,8,131,173,226,205,73,126,176,81,206,183,85,89,187,24,169,187,105,19,218,110,115,107,159,159,111,114,143,158,95,211,68,70,52,96,9,149,53,157,195,109,94,120,45,153,216,176,175,237,227,66,155,25,200,76,188,91,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 598 ") {
    byte_vec_t msg { 213,79,241,234 };
    byte_vec_t sig { 185,197,191,89,123,79,244,244,84,234,190,9,90,203,58,201,242,169,144,30,94,85,227,179,68,244,237,193,251,197,183,168,183,63,214,101,94,220,89,236,153,70,213,132,132,209,139,71,218,178,133,203,219,125,126,233,153,171,156,121,202,42,62,27 };
    byte_vec_t pk { 4,223,105,140,111,97,123,145,221,225,145,185,211,180,214,238,181,119,188,5,92,101,147,142,73,44,253,47,35,56,56,230,196,226,62,15,195,245,170,151,120,66,220,220,182,144,166,146,25,33,115,38,249,107,54,136,223,17,141,50,202,72,248,164,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 598 ") {
    byte_vec_t msg { 205,66,177,40 };
    byte_vec_t sig { 88,110,148,112,203,5,210,93,159,143,27,45,254,221,31,239,108,129,208,186,153,155,58,238,96,53,69,234,142,142,188,183,95,23,48,55,18,170,236,164,175,55,27,133,207,54,66,129,1,211,83,56,1,116,80,252,99,51,251,71,247,209,7,248 };
    byte_vec_t pk { 2,94,88,47,175,191,13,103,37,15,7,218,131,174,232,243,18,52,179,15,32,144,135,255,174,173,151,118,126,231,116,197,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 598 ") {
    byte_vec_t msg { 41,198,173,74 };
    byte_vec_t sig { 26,18,79,186,162,58,217,123,42,163,8,53,234,114,195,230,239,216,13,183,248,45,120,32,38,162,154,161,97,9,254,108,221,207,142,29,241,142,36,235,19,178,225,84,58,107,181,148,166,94,41,107,246,231,163,243,19,75,214,233,32,88,8,38 };
    byte_vec_t pk { 3,188,53,165,130,74,140,157,233,14,12,32,254,1,221,7,225,128,86,62,190,18,100,210,121,255,90,126,164,199,182,219,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 599 ") {
    byte_vec_t msg { 101,131,131,150 };
    byte_vec_t sig { 77,244,1,83,139,97,174,158,133,204,238,189,96,21,245,18,182,114,7,20,207,148,117,47,98,69,254,144,62,4,116,46,223,15,132,124,141,60,22,171,204,71,226,247,18,61,38,1,166,110,74,126,171,157,9,131,212,81,24,11,242,67,182,231 };
    byte_vec_t pk { 4,109,186,170,254,178,149,68,179,112,85,97,253,171,89,5,196,217,106,160,58,231,96,73,246,207,25,11,84,243,143,240,101,159,183,85,37,122,215,147,55,10,16,174,113,150,108,228,74,248,55,68,70,28,238,88,114,27,207,74,25,239,183,217,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 599 ") {
    byte_vec_t msg { 130,108,191,30 };
    byte_vec_t sig { 75,49,108,4,2,97,106,16,201,251,42,179,175,17,193,249,158,154,176,91,115,71,22,40,189,75,240,29,109,154,22,213,93,34,23,93,82,65,74,164,63,100,219,83,29,89,251,218,2,103,42,213,12,122,130,206,51,231,116,212,173,186,23,194 };
    byte_vec_t pk { 4,50,55,43,137,161,40,194,77,26,136,166,213,253,231,247,136,86,135,86,79,199,144,206,140,50,157,164,60,29,102,56,26,175,184,93,198,71,72,79,161,213,193,208,40,132,183,163,154,88,32,29,125,183,12,178,121,57,215,216,200,70,191,29,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 599 ") {
    byte_vec_t msg { 147,149,198,150 };
    byte_vec_t sig { 167,44,242,229,46,56,76,178,150,68,146,58,172,63,116,102,241,193,47,40,204,225,81,78,102,150,101,140,80,23,21,205,123,13,90,7,126,164,89,172,238,114,245,182,228,192,210,204,173,31,185,170,65,78,177,98,220,244,194,2,167,38,141,64 };
    byte_vec_t pk { 3,166,31,220,16,225,45,242,225,40,24,161,133,56,168,36,245,86,159,156,5,7,216,91,161,109,69,49,253,195,83,119,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 599 ") {
    byte_vec_t msg { 129,164,107,138 };
    byte_vec_t sig { 214,64,123,120,227,56,98,37,34,238,114,211,138,228,16,112,121,111,81,43,231,123,125,255,46,74,181,128,45,74,29,145,205,113,165,244,30,74,102,151,68,195,20,156,100,125,57,221,80,204,196,199,111,252,212,5,39,7,247,81,167,153,110,40 };
    byte_vec_t pk { 2,31,175,54,4,162,188,60,125,126,109,41,194,173,246,215,196,72,175,186,128,54,84,58,88,120,180,81,51,18,192,204,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 600 ") {
    byte_vec_t msg { 242,215,114,127 };
    byte_vec_t sig { 100,161,18,199,105,202,28,176,158,56,112,209,20,137,153,33,123,253,55,159,149,128,158,231,199,30,37,164,65,77,218,229,100,89,70,254,248,245,65,6,46,114,58,47,11,142,65,212,189,111,209,99,215,65,246,215,31,230,198,85,159,6,45,75 };
    byte_vec_t pk { 4,73,126,97,105,234,134,241,210,36,109,186,110,56,213,87,191,41,180,158,55,42,170,241,4,156,222,8,221,216,65,117,80,182,144,2,75,235,100,191,228,221,172,202,226,174,181,151,10,237,140,184,116,159,228,223,81,87,69,185,247,239,101,62,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 600 ") {
    byte_vec_t msg { 139,234,166,223 };
    byte_vec_t sig { 187,111,15,45,157,187,13,197,18,193,213,231,192,132,35,76,68,6,111,116,169,8,160,35,138,20,204,0,76,188,34,153,156,3,219,134,197,171,250,57,169,157,155,55,60,213,79,31,214,230,170,200,16,220,36,63,209,246,32,24,39,249,107,8 };
    byte_vec_t pk { 4,175,222,11,253,46,249,167,92,207,112,66,231,222,103,166,163,2,40,35,38,104,71,77,126,23,184,116,133,187,0,139,181,110,133,155,9,122,113,210,40,136,85,73,35,168,163,36,167,207,128,75,77,42,35,87,192,2,62,102,168,237,78,210,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 600 ") {
    byte_vec_t msg { 250,122,31,92 };
    byte_vec_t sig { 76,81,154,157,124,109,190,175,41,60,72,23,105,213,240,118,185,68,127,38,245,104,127,251,27,5,66,38,21,51,169,230,156,139,101,91,110,198,22,243,42,35,193,27,201,96,145,165,201,125,112,185,94,211,219,243,100,91,26,235,70,22,224,240 };
    byte_vec_t pk { 3,220,49,97,95,57,168,161,253,126,17,170,83,153,180,85,76,194,190,224,95,204,12,15,73,111,255,235,229,247,234,149,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 600 ") {
    byte_vec_t msg { 230,76,224,22 };
    byte_vec_t sig { 59,163,199,177,83,238,69,35,43,186,107,166,252,93,192,168,237,240,212,124,221,157,19,238,169,115,67,232,165,81,125,71,214,125,80,130,88,141,190,195,102,25,174,246,172,50,67,195,82,68,75,147,162,201,158,143,56,92,182,99,153,190,183,63 };
    byte_vec_t pk { 2,74,9,220,235,238,38,247,6,207,244,72,55,112,26,217,46,25,96,83,51,243,43,213,32,252,107,217,6,52,175,61,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 601 ") {
    byte_vec_t msg { 21,144,60,69 };
    byte_vec_t sig { 138,123,35,125,62,75,34,248,101,123,117,107,201,215,110,38,108,148,68,71,107,85,14,11,88,95,150,180,221,90,77,243,231,42,122,74,205,4,135,69,34,159,56,155,177,173,127,162,76,45,155,108,59,148,47,37,34,25,158,48,109,66,175,176 };
    byte_vec_t pk { 4,242,103,136,204,107,159,142,59,234,241,230,156,36,150,3,35,236,97,142,77,82,210,118,208,32,14,109,20,132,155,58,152,131,227,124,49,50,108,6,121,243,128,109,171,68,30,95,145,117,223,158,50,98,93,117,240,212,54,227,162,73,17,17,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 601 ") {
    byte_vec_t msg { 155,146,178,120 };
    byte_vec_t sig { 230,164,164,82,129,143,70,232,193,101,146,247,233,21,129,97,28,51,133,106,120,108,63,58,72,60,90,105,243,105,86,47,72,46,189,20,120,134,253,114,54,194,144,15,62,67,129,243,100,29,231,74,52,8,30,14,239,63,148,221,86,25,230,223 };
    byte_vec_t pk { 4,232,101,213,119,38,159,19,49,239,105,23,184,17,146,61,242,163,245,102,216,146,51,196,201,240,178,35,81,151,12,127,109,234,111,71,25,193,25,1,3,210,204,4,2,238,148,106,10,40,232,108,153,141,86,35,51,229,181,210,241,116,221,69,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 601 ") {
    byte_vec_t msg { 25,65,128,87 };
    byte_vec_t sig { 128,208,144,219,208,32,222,157,45,3,103,40,214,95,161,55,54,136,11,30,49,36,239,21,179,225,217,119,25,80,42,162,6,22,60,9,47,169,172,240,239,17,220,115,203,0,105,70,95,131,65,247,144,185,32,94,91,24,233,120,29,203,240,74 };
    byte_vec_t pk { 2,212,54,81,129,236,131,3,122,187,167,144,88,75,155,4,225,30,215,229,76,13,200,3,230,159,115,50,40,206,104,81,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 601 ") {
    byte_vec_t msg { 221,12,228,163 };
    byte_vec_t sig { 225,117,24,216,17,9,45,220,130,118,192,253,109,154,103,250,24,8,41,73,181,22,226,127,57,173,61,16,198,153,3,33,242,157,152,215,250,209,114,30,104,200,219,162,173,140,176,101,106,63,105,154,234,8,159,68,113,129,157,6,33,205,70,229 };
    byte_vec_t pk { 2,80,156,12,28,59,107,244,134,237,139,216,115,126,54,198,99,10,237,241,31,252,86,150,225,6,209,236,222,119,255,0,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 602 ") {
    byte_vec_t msg { 35,108,55,47 };
    byte_vec_t sig { 33,182,57,42,37,199,184,175,213,243,53,139,57,245,74,249,182,222,16,48,176,223,58,127,119,144,150,210,33,186,196,49,251,227,112,190,212,122,56,180,219,102,2,80,24,138,208,191,189,246,215,111,64,14,105,192,188,64,53,192,58,169,181,212 };
    byte_vec_t pk { 4,67,106,190,150,175,194,202,64,7,123,25,245,124,131,95,188,119,173,186,79,3,99,97,110,74,230,211,26,255,216,91,9,234,205,212,23,187,161,244,62,242,23,149,62,28,231,133,239,153,232,142,222,129,142,201,88,7,203,103,145,247,149,194,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 602 ") {
    byte_vec_t msg { 134,161,158,60 };
    byte_vec_t sig { 207,2,81,59,81,155,193,184,64,119,136,30,197,255,20,112,178,13,179,205,246,137,228,71,27,85,49,52,32,26,75,73,197,228,75,164,53,93,230,119,129,183,68,1,235,35,187,4,18,72,36,90,66,177,150,102,5,184,173,29,63,25,154,148 };
    byte_vec_t pk { 4,55,200,46,133,243,165,171,209,66,21,129,141,229,96,78,198,87,89,57,98,67,221,79,133,144,229,126,137,232,202,248,237,163,89,48,176,10,74,171,84,138,191,55,210,210,3,167,243,124,68,225,87,252,2,57,183,181,227,209,58,181,192,139,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 602 ") {
    byte_vec_t msg { 230,186,53,244 };
    byte_vec_t sig { 218,212,54,79,250,1,111,175,97,20,90,176,92,144,37,147,76,226,254,207,46,179,252,152,167,247,177,223,97,99,88,71,134,105,117,149,21,134,165,104,212,48,249,101,184,28,104,229,184,47,215,9,200,108,62,157,242,213,119,108,121,0,90,27 };
    byte_vec_t pk { 2,86,99,242,151,143,116,220,203,17,162,50,8,167,27,178,44,126,143,196,27,65,83,123,92,67,204,147,71,114,229,32,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 602 ") {
    byte_vec_t msg { 191,24,44,51 };
    byte_vec_t sig { 148,237,181,231,102,47,71,99,216,122,10,15,144,112,227,135,201,72,35,91,111,181,12,173,112,4,6,162,225,143,201,46,212,236,98,144,136,80,167,74,72,166,214,132,16,114,88,251,231,109,8,108,13,141,234,3,26,150,226,77,161,120,105,142 };
    byte_vec_t pk { 2,247,152,36,219,115,54,100,118,75,30,123,136,24,209,191,80,23,80,234,27,198,22,73,221,219,49,74,67,238,225,251,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 603 ") {
    byte_vec_t msg { 220,182,183,165 };
    byte_vec_t sig { 9,44,201,97,156,205,151,5,246,100,95,39,194,77,20,103,196,232,171,113,143,68,191,205,36,4,96,150,148,22,162,5,108,32,75,177,14,78,10,129,10,27,220,155,125,3,246,78,224,75,139,99,169,104,102,113,4,119,8,238,0,175,40,96 };
    byte_vec_t pk { 4,50,168,74,117,49,190,165,42,139,17,130,208,105,189,160,143,108,184,109,25,134,190,61,208,132,72,126,92,121,83,97,219,107,39,19,215,50,51,134,2,19,244,81,135,99,76,150,189,247,129,13,30,124,195,251,242,231,247,78,117,138,181,15,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 603 ") {
    byte_vec_t msg { 16,88,200,53 };
    byte_vec_t sig { 223,44,248,126,33,80,89,244,166,170,247,50,223,41,231,101,66,48,229,14,95,174,80,246,61,140,51,244,68,173,4,217,137,254,154,18,19,197,227,215,105,50,70,253,12,71,16,190,156,220,120,237,171,171,8,111,30,188,163,10,240,46,197,43 };
    byte_vec_t pk { 4,95,255,152,243,35,207,116,211,19,41,94,184,37,238,98,7,17,113,71,85,130,129,142,174,27,227,187,116,77,20,100,224,115,217,99,152,93,167,61,133,27,241,113,245,173,152,145,215,2,77,201,23,155,50,28,5,10,141,76,174,147,156,3,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 603 ") {
    byte_vec_t msg { 57,12,107,39 };
    byte_vec_t sig { 221,99,10,5,125,80,8,141,59,215,40,36,187,129,143,234,66,152,85,82,132,146,124,129,28,10,132,86,5,203,163,96,124,171,250,3,232,241,34,216,208,201,56,47,104,88,1,219,141,229,196,9,140,92,64,84,84,251,239,197,78,39,170,135 };
    byte_vec_t pk { 3,248,169,171,105,11,208,142,66,76,181,66,6,250,144,199,143,65,57,158,166,62,132,64,9,91,124,161,15,201,21,140,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 603 ") {
    byte_vec_t msg { 100,141,230,204 };
    byte_vec_t sig { 242,208,134,161,132,35,87,126,245,127,55,217,75,116,234,197,139,66,44,238,160,153,157,246,177,198,239,94,213,250,97,109,209,114,4,249,118,190,115,97,15,74,212,75,182,159,213,139,156,53,141,250,215,61,222,100,100,106,79,77,214,214,120,95 };
    byte_vec_t pk { 3,181,184,63,104,163,146,74,208,54,83,180,235,22,194,220,40,12,10,139,92,91,113,20,252,22,214,29,249,48,208,145,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 604 ") {
    byte_vec_t msg { 100,43,17,218 };
    byte_vec_t sig { 158,164,117,59,24,96,147,145,184,79,158,31,191,244,6,124,54,173,140,155,109,215,210,196,39,19,228,65,134,167,116,225,159,57,184,69,91,146,175,209,130,29,44,221,82,108,17,124,234,94,114,103,178,141,57,110,88,185,5,125,56,194,74,114 };
    byte_vec_t pk { 4,99,213,65,165,86,157,15,56,91,207,20,153,148,99,100,252,206,18,121,135,18,5,61,90,220,75,79,24,219,144,120,2,216,106,186,199,86,9,143,45,105,34,44,136,185,110,22,138,78,149,132,166,18,167,75,222,66,74,253,34,44,51,55,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 604 ") {
    byte_vec_t msg { 97,27,229,101 };
    byte_vec_t sig { 48,134,32,53,27,154,204,153,189,221,146,124,233,150,0,136,235,73,115,24,253,224,102,188,234,53,185,228,40,170,45,81,235,112,81,169,168,33,220,84,96,254,5,25,49,98,110,172,246,45,239,101,213,233,215,61,125,87,136,228,23,145,25,119 };
    byte_vec_t pk { 4,114,62,239,246,176,250,110,113,218,63,47,254,4,26,105,10,92,10,148,173,65,90,120,128,151,28,20,73,72,185,252,57,90,10,132,139,161,222,8,190,213,46,193,149,165,79,121,129,230,206,73,143,255,80,240,128,61,19,115,75,127,119,182,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 604 ") {
    byte_vec_t msg { 145,219,177,142 };
    byte_vec_t sig { 199,197,209,198,93,30,71,112,139,203,25,116,183,131,129,81,211,187,55,219,226,182,157,68,225,45,212,92,225,62,85,14,133,199,31,108,18,235,110,184,109,17,104,215,231,145,218,141,51,24,95,63,44,226,41,51,18,146,105,126,165,131,88,78 };
    byte_vec_t pk { 3,125,66,132,19,83,167,246,6,229,233,253,65,207,54,204,210,206,3,213,1,0,244,74,80,45,107,231,95,120,230,5,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 604 ") {
    byte_vec_t msg { 97,159,143,72 };
    byte_vec_t sig { 115,50,247,210,168,139,148,152,194,37,21,87,137,59,19,80,189,35,72,57,27,147,147,151,30,111,24,149,161,10,37,170,223,252,11,80,211,120,64,35,45,170,123,187,253,199,132,64,75,23,236,253,149,156,122,160,242,155,156,240,3,247,233,222 };
    byte_vec_t pk { 3,178,151,81,129,158,204,210,49,100,194,158,62,116,252,239,174,179,158,84,183,196,58,69,75,157,120,179,56,26,183,85,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 605 ") {
    byte_vec_t msg { 174,181,26,61 };
    byte_vec_t sig { 100,176,102,13,127,174,221,73,147,60,195,103,94,252,71,179,121,132,132,184,208,241,58,228,90,238,191,24,49,7,33,137,135,83,218,139,4,153,120,189,165,188,228,154,239,159,120,154,40,90,169,57,146,187,200,127,131,56,122,221,50,175,39,59 };
    byte_vec_t pk { 4,74,116,222,141,148,93,148,148,240,25,42,82,127,40,100,24,24,161,209,198,86,147,75,36,90,145,176,149,88,58,81,102,123,157,50,123,187,136,215,198,96,7,43,66,112,154,69,169,197,174,150,227,245,220,86,248,1,207,42,55,201,207,88,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 605 ") {
    byte_vec_t msg { 165,109,124,233 };
    byte_vec_t sig { 86,67,204,187,177,184,136,217,81,97,58,79,217,216,153,189,120,185,179,254,39,174,254,193,191,91,37,249,23,156,110,132,37,165,247,62,90,230,176,236,228,63,100,197,44,83,103,240,254,175,145,26,114,245,150,224,65,237,111,94,89,224,47,255 };
    byte_vec_t pk { 4,63,146,40,5,75,36,22,202,187,178,126,168,69,221,165,15,149,109,105,155,240,41,40,181,92,184,119,75,37,218,105,52,128,20,59,74,249,125,238,200,186,72,68,43,81,93,108,211,48,197,85,91,188,202,236,27,99,113,79,152,155,255,32,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 605 ") {
    byte_vec_t msg { 210,108,212,164 };
    byte_vec_t sig { 19,104,38,204,195,75,240,242,117,105,125,126,68,67,118,3,86,173,251,87,99,102,104,199,54,113,8,166,1,224,16,189,27,87,154,67,175,246,99,82,247,230,179,75,4,193,128,250,66,2,39,147,45,221,175,208,19,134,213,62,145,219,183,3 };
    byte_vec_t pk { 2,86,77,179,2,139,65,231,123,199,238,113,134,46,204,254,123,5,141,117,239,247,69,221,74,91,146,25,239,198,160,122,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 605 ") {
    byte_vec_t msg { 245,119,198,104 };
    byte_vec_t sig { 66,148,239,255,188,125,33,7,216,9,4,210,12,240,92,38,185,223,89,127,153,227,252,98,250,74,245,223,162,254,156,64,156,134,248,48,153,33,169,222,27,208,176,128,202,99,121,76,54,55,174,150,167,243,161,29,77,178,125,224,114,79,4,121 };
    byte_vec_t pk { 3,198,139,1,208,204,200,70,214,37,154,174,199,72,254,192,71,9,68,59,197,112,18,127,105,65,148,90,26,24,226,189,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 606 ") {
    byte_vec_t msg { 230,78,15,228 };
    byte_vec_t sig { 70,197,73,25,116,170,82,214,199,203,36,197,5,243,156,222,159,201,82,106,121,215,249,41,59,102,107,36,190,150,254,17,225,212,108,49,72,234,3,118,240,201,249,125,121,40,191,20,27,160,254,225,161,11,31,141,210,226,77,194,29,13,178,111 };
    byte_vec_t pk { 4,51,189,84,217,11,232,12,48,160,5,212,50,129,30,178,129,190,248,219,93,80,17,87,80,148,76,237,166,99,32,10,209,221,237,83,203,18,60,225,254,204,66,105,243,72,249,106,119,221,114,133,210,76,32,10,91,119,163,227,40,165,229,176,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 606 ") {
    byte_vec_t msg { 78,137,28,30 };
    byte_vec_t sig { 57,72,210,38,222,243,45,176,254,20,229,235,5,108,230,26,175,143,129,68,219,139,174,22,69,226,139,165,29,230,143,119,165,165,206,8,101,73,206,1,144,42,167,92,60,179,74,6,183,77,243,228,40,28,124,179,224,248,143,25,4,136,213,191 };
    byte_vec_t pk { 4,113,80,196,240,125,253,62,23,183,73,211,236,241,106,125,146,216,255,198,255,96,251,216,123,3,185,66,65,52,0,196,234,176,69,107,7,116,133,140,125,244,74,115,166,23,29,248,182,255,50,216,225,79,106,241,162,196,28,94,115,121,255,68,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 606 ") {
    byte_vec_t msg { 74,226,3,84 };
    byte_vec_t sig { 26,171,148,66,71,13,238,37,178,113,106,84,18,238,249,10,151,97,218,97,151,234,238,18,31,42,111,156,255,194,112,216,38,235,177,227,74,89,212,84,99,29,78,75,127,85,191,230,59,23,251,81,161,94,99,218,183,243,69,136,49,227,233,160 };
    byte_vec_t pk { 2,175,99,137,73,119,0,124,95,222,212,5,153,248,87,190,37,157,57,47,114,132,101,191,41,49,14,77,79,147,31,43,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 606 ") {
    byte_vec_t msg { 229,214,194,54 };
    byte_vec_t sig { 97,63,216,37,255,227,184,33,223,228,244,113,166,149,19,222,255,45,21,240,127,131,184,26,99,241,217,224,91,212,7,247,102,81,71,25,105,172,105,74,132,238,112,232,30,76,43,22,61,185,184,149,93,227,223,96,227,243,50,118,57,247,86,123 };
    byte_vec_t pk { 3,205,183,5,9,13,81,11,124,86,87,168,168,3,126,150,182,124,94,3,135,0,195,61,200,60,240,225,16,233,222,53,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 607 ") {
    byte_vec_t msg { 123,230,90,189 };
    byte_vec_t sig { 255,77,98,105,69,228,241,2,202,101,163,121,15,236,40,147,217,255,230,107,122,171,177,154,95,198,58,70,97,94,201,77,246,119,238,136,75,58,190,194,167,31,121,77,59,254,205,49,4,233,46,241,27,142,247,176,27,148,143,188,83,141,143,25 };
    byte_vec_t pk { 4,197,58,41,150,29,82,77,101,246,99,49,242,211,43,8,224,49,7,6,153,207,129,35,105,86,249,179,145,212,187,218,137,232,128,51,155,227,80,8,17,101,14,126,185,242,54,110,214,209,125,110,111,132,41,230,53,8,95,194,135,73,242,248,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 607 ") {
    byte_vec_t msg { 101,53,191,171 };
    byte_vec_t sig { 191,122,57,36,18,49,87,183,94,94,146,235,253,237,207,96,67,241,242,63,118,4,248,104,232,208,224,104,203,96,188,81,25,130,146,51,175,98,21,7,56,67,120,215,215,101,143,242,207,198,165,109,21,103,60,134,68,208,86,167,138,3,46,201 };
    byte_vec_t pk { 4,118,104,182,97,92,103,31,96,137,65,172,191,213,233,175,27,21,103,38,207,189,24,154,238,180,163,133,70,96,191,251,154,25,127,57,211,241,37,252,203,230,104,96,228,210,216,232,224,130,205,93,9,244,145,2,120,230,126,171,97,166,36,230,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 607 ") {
    byte_vec_t msg { 15,126,157,56 };
    byte_vec_t sig { 206,182,75,0,246,253,240,32,100,208,247,250,78,199,143,75,64,113,114,40,255,118,19,255,81,136,154,217,18,163,111,190,156,154,202,33,175,107,199,69,173,171,229,208,222,164,129,226,248,227,153,41,190,14,71,162,224,70,204,233,228,155,166,116 };
    byte_vec_t pk { 3,110,234,151,175,243,131,62,15,165,35,252,241,79,155,248,88,167,79,165,191,13,250,216,117,166,138,122,26,58,34,141,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 607 ") {
    byte_vec_t msg { 25,29,55,195 };
    byte_vec_t sig { 95,248,241,66,122,186,143,43,136,85,149,117,59,75,59,213,26,83,1,46,54,49,147,234,210,50,52,168,150,97,159,83,214,32,231,84,200,219,38,120,103,74,184,252,218,136,47,243,74,62,120,30,118,188,116,219,203,11,238,22,36,215,36,200 };
    byte_vec_t pk { 3,205,164,147,219,101,211,187,15,105,233,138,121,220,208,157,158,100,20,62,255,35,17,89,19,5,34,15,245,8,178,67,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 608 ") {
    byte_vec_t msg { 4,242,46,144 };
    byte_vec_t sig { 55,198,105,21,136,70,114,74,225,135,99,177,13,142,180,113,163,41,91,85,143,199,24,38,216,147,86,80,77,114,55,233,80,189,77,224,213,178,192,211,2,19,140,241,241,161,37,12,247,219,23,52,56,42,158,108,51,196,40,232,114,169,67,226 };
    byte_vec_t pk { 4,115,200,164,28,185,10,227,18,242,73,135,102,182,51,174,244,99,6,198,106,152,152,129,100,63,36,160,13,131,79,110,147,129,195,227,188,71,225,159,142,180,191,226,52,120,108,74,4,96,113,101,228,65,172,116,72,156,157,62,0,236,239,128,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 608 ") {
    byte_vec_t msg { 45,0,185,229 };
    byte_vec_t sig { 63,138,155,9,210,23,83,53,10,156,178,134,170,249,13,92,88,223,141,88,9,223,245,62,145,9,136,218,166,123,54,27,104,33,68,253,67,236,15,175,204,132,224,176,151,83,61,56,112,36,135,118,211,59,194,67,70,109,68,15,4,137,39,89 };
    byte_vec_t pk { 4,109,243,73,184,124,27,202,96,99,6,238,18,28,236,251,4,190,45,135,83,2,6,255,167,139,198,119,212,254,129,245,181,45,80,175,101,122,190,230,29,23,130,186,245,160,69,141,99,226,140,217,137,187,186,60,16,25,201,161,111,167,121,240,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 608 ") {
    byte_vec_t msg { 114,42,46,138 };
    byte_vec_t sig { 93,44,252,242,11,68,36,247,0,174,5,75,166,149,52,50,151,175,50,107,71,122,76,126,113,19,248,75,197,255,183,209,190,126,223,235,249,227,231,116,114,70,60,77,228,21,180,34,193,236,132,223,58,198,227,186,45,3,23,154,47,172,240,197 };
    byte_vec_t pk { 2,87,255,93,66,179,222,15,0,191,52,83,169,37,11,255,244,247,183,181,242,83,198,162,182,147,213,236,64,208,213,1,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 608 ") {
    byte_vec_t msg { 106,198,220,154 };
    byte_vec_t sig { 194,78,116,170,231,244,205,40,33,19,126,148,65,221,221,85,9,54,147,182,84,101,217,96,46,164,180,61,53,156,216,13,98,241,78,132,103,152,55,26,184,17,205,36,141,130,163,252,147,117,231,121,158,198,31,9,240,243,80,169,245,82,47,150 };
    byte_vec_t pk { 2,121,70,86,86,67,225,146,139,203,223,250,107,216,39,247,35,210,54,183,99,138,4,226,56,249,30,153,135,61,223,96,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 609 ") {
    byte_vec_t msg { 83,251,54,239 };
    byte_vec_t sig { 68,151,108,138,246,86,52,15,204,89,125,185,62,124,151,77,243,99,209,46,136,168,86,95,13,148,78,216,19,113,24,241,174,239,254,33,55,0,30,22,202,178,62,38,16,254,114,62,211,197,68,165,240,5,186,173,66,162,154,34,3,109,40,150 };
    byte_vec_t pk { 4,71,150,54,45,90,8,67,249,206,74,16,209,220,45,180,143,161,33,251,192,154,179,251,16,50,60,197,30,218,109,130,129,60,99,62,195,212,113,15,101,91,61,148,251,235,64,6,21,209,201,110,206,164,38,177,138,50,11,186,120,240,202,253,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 609 ") {
    byte_vec_t msg { 84,42,104,189 };
    byte_vec_t sig { 18,250,77,246,210,93,179,7,76,163,162,191,161,14,55,158,72,200,33,102,110,117,116,27,174,211,141,96,86,83,52,76,41,172,246,254,230,89,209,233,4,237,148,224,35,19,196,237,184,209,59,93,175,145,174,210,231,106,169,174,154,170,153,162 };
    byte_vec_t pk { 4,206,151,178,214,113,4,53,242,0,187,194,60,103,18,71,129,63,145,238,73,146,165,45,83,231,166,87,124,193,78,80,17,48,43,241,235,199,117,80,187,125,96,125,248,164,25,129,85,237,160,112,126,48,241,68,128,166,178,208,69,75,12,150,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 609 ") {
    byte_vec_t msg { 158,83,11,32 };
    byte_vec_t sig { 110,239,138,245,240,155,218,232,235,240,14,247,184,156,111,92,85,193,129,82,66,29,226,109,159,143,146,210,97,30,221,22,209,154,182,147,58,164,235,39,19,211,200,147,225,138,71,68,2,130,66,9,213,217,37,177,96,229,133,154,75,139,218,227 };
    byte_vec_t pk { 2,149,101,236,178,50,87,125,237,64,154,9,156,209,151,177,107,176,169,213,66,124,184,167,92,91,31,27,43,107,168,73,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 609 ") {
    byte_vec_t msg { 175,71,70,163 };
    byte_vec_t sig { 122,172,5,84,108,147,77,221,221,227,132,81,103,143,150,187,88,121,132,137,81,142,18,22,82,15,186,211,213,249,231,181,100,250,130,129,55,15,221,210,208,182,56,197,100,189,232,49,123,97,147,253,109,67,202,49,143,97,103,17,60,78,253,35 };
    byte_vec_t pk { 2,92,141,50,151,89,174,37,205,217,123,30,163,149,194,16,32,199,48,32,123,46,55,160,127,94,86,77,173,102,158,61,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 610 ") {
    byte_vec_t msg { 116,192,201,235 };
    byte_vec_t sig { 118,168,126,49,42,57,41,167,204,28,162,69,101,131,195,132,181,222,64,78,68,250,130,25,100,232,135,209,88,149,80,147,204,202,142,137,116,240,151,29,255,138,96,201,59,61,39,164,209,131,223,91,95,242,5,176,137,142,114,17,85,178,97,100 };
    byte_vec_t pk { 4,203,159,224,25,1,142,219,56,111,104,106,93,99,53,106,218,184,105,84,115,145,197,91,27,246,116,49,191,22,103,106,108,45,18,191,207,95,109,47,170,153,66,129,159,208,138,194,207,53,146,187,124,212,182,62,43,76,133,173,188,143,87,84,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 610 ") {
    byte_vec_t msg { 239,60,212,245 };
    byte_vec_t sig { 191,143,232,63,180,107,160,89,88,206,4,242,27,227,229,185,162,43,151,36,162,153,75,58,41,119,246,64,186,105,7,235,151,43,159,18,183,154,4,152,104,124,146,139,68,95,177,184,36,198,121,136,92,83,156,208,203,145,105,187,100,89,149,252 };
    byte_vec_t pk { 4,207,23,94,18,66,81,230,121,146,171,49,152,55,126,74,62,71,46,158,56,181,203,191,231,198,118,88,185,16,184,232,209,228,244,242,110,85,255,103,72,102,71,197,4,39,191,55,14,153,92,2,246,42,129,61,186,16,178,66,224,98,78,173,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 610 ") {
    byte_vec_t msg { 40,28,75,203 };
    byte_vec_t sig { 221,53,19,216,126,62,166,241,39,114,156,61,49,226,96,176,195,123,225,53,196,223,91,187,96,80,15,221,116,46,7,134,246,59,96,41,199,47,21,198,209,129,72,184,50,33,123,73,52,223,22,151,161,102,21,104,78,67,233,147,47,215,128,94 };
    byte_vec_t pk { 3,231,8,51,144,93,11,195,130,89,4,25,215,75,239,50,225,30,227,65,144,102,44,60,43,206,210,151,185,132,52,208,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 610 ") {
    byte_vec_t msg { 18,210,41,1 };
    byte_vec_t sig { 100,140,154,61,230,200,82,169,156,170,205,234,25,77,233,215,186,178,129,165,14,137,224,158,165,82,186,208,62,107,115,28,254,98,81,68,213,149,193,113,116,197,63,55,187,207,232,151,249,145,44,146,141,23,182,236,175,184,144,16,26,0,120,90 };
    byte_vec_t pk { 2,14,127,117,241,36,171,191,211,211,181,226,128,207,209,130,121,183,233,254,39,119,132,77,17,203,195,213,166,136,176,129,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 611 ") {
    byte_vec_t msg { 173,71,85,69 };
    byte_vec_t sig { 142,243,75,19,75,93,238,58,59,130,17,123,38,247,18,109,245,205,122,97,40,86,142,48,27,210,83,117,109,51,149,196,12,224,199,114,102,128,145,176,243,253,64,59,201,120,118,187,153,175,52,111,121,38,246,24,72,223,254,149,25,136,82,188 };
    byte_vec_t pk { 4,161,177,177,92,201,157,136,149,205,163,51,157,148,5,68,10,236,225,98,193,15,53,250,11,242,108,76,219,141,9,181,60,119,183,189,27,239,164,221,179,174,187,34,135,43,33,220,220,5,78,143,10,167,101,143,34,206,159,73,105,232,185,192,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 611 ") {
    byte_vec_t msg { 118,220,204,83 };
    byte_vec_t sig { 168,50,76,7,32,141,239,40,103,218,196,100,210,207,75,141,253,201,157,96,132,6,66,23,24,36,36,234,155,200,233,188,188,165,192,91,237,101,183,161,255,31,205,19,180,94,217,57,123,156,151,108,60,175,73,29,204,85,41,125,52,18,231,193 };
    byte_vec_t pk { 4,12,252,98,225,62,27,85,54,89,145,11,152,45,207,174,75,238,137,144,41,190,72,56,230,50,217,255,55,126,1,83,105,210,118,63,186,158,59,227,5,22,81,102,85,66,48,14,1,124,208,120,232,135,130,89,148,35,53,87,100,194,250,180,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 611 ") {
    byte_vec_t msg { 51,250,51,16 };
    byte_vec_t sig { 35,94,74,250,19,251,130,241,123,157,142,50,50,201,53,45,79,40,218,109,35,87,126,111,168,167,68,142,6,4,167,111,191,82,5,46,28,30,19,93,134,125,176,249,146,107,77,105,50,73,29,139,58,83,3,88,152,115,129,35,7,103,180,130 };
    byte_vec_t pk { 2,246,18,231,132,228,177,35,82,16,77,210,101,207,15,75,141,19,38,103,176,112,79,120,209,204,222,78,127,102,117,230,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 611 ") {
    byte_vec_t msg { 120,184,26,35 };
    byte_vec_t sig { 20,11,78,240,133,253,245,166,36,138,181,248,26,81,36,127,33,245,22,175,103,25,235,194,19,34,7,70,25,201,75,126,32,232,78,251,39,173,135,180,102,107,50,48,133,181,123,98,22,176,234,91,89,198,73,209,58,64,211,11,223,183,110,213 };
    byte_vec_t pk { 2,237,37,161,24,113,19,209,42,49,220,92,243,242,52,202,166,47,46,142,236,40,78,19,16,238,60,139,116,59,197,6,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 612 ") {
    byte_vec_t msg { 92,156,139,114 };
    byte_vec_t sig { 209,253,224,224,162,54,222,34,90,12,182,153,75,6,172,240,174,213,48,199,30,14,174,139,41,76,201,75,96,208,45,173,114,8,35,246,182,46,197,186,197,103,53,92,86,132,202,102,237,53,84,221,0,28,101,237,40,205,211,164,30,191,212,242 };
    byte_vec_t pk { 4,54,43,0,55,143,200,155,192,66,137,6,238,136,105,67,254,228,176,149,142,148,150,205,128,24,162,65,113,75,32,3,110,17,246,72,250,202,180,199,65,18,28,61,187,148,76,71,134,141,47,12,93,124,247,219,84,36,38,47,94,171,91,231,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 612 ") {
    byte_vec_t msg { 77,118,194,196 };
    byte_vec_t sig { 162,228,253,20,98,222,127,21,187,144,40,22,113,125,92,16,15,136,215,194,167,11,16,78,103,20,138,30,61,41,100,121,66,123,154,226,69,232,88,189,234,129,52,99,228,1,4,227,159,140,100,27,85,77,49,202,103,159,218,49,239,198,3,109 };
    byte_vec_t pk { 4,171,160,151,35,4,210,87,137,177,143,115,121,150,4,182,121,94,220,57,129,231,85,109,78,176,223,120,206,247,138,213,120,231,220,117,43,91,133,214,206,137,5,11,253,68,136,226,224,49,206,13,97,1,221,184,48,51,27,63,138,124,115,207,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 612 ") {
    byte_vec_t msg { 104,223,237,23 };
    byte_vec_t sig { 81,158,222,124,115,236,216,107,169,192,121,208,170,243,173,199,84,41,34,50,175,184,183,47,208,82,153,82,180,122,45,76,227,48,241,145,200,120,44,103,160,174,172,9,174,48,182,182,200,35,107,3,122,242,234,147,79,150,49,172,249,71,247,215 };
    byte_vec_t pk { 2,62,133,221,225,154,244,211,40,9,58,44,6,114,192,208,186,105,245,98,36,50,89,141,135,205,110,165,6,130,166,147,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 612 ") {
    byte_vec_t msg { 212,101,12,63 };
    byte_vec_t sig { 182,8,175,185,247,32,63,124,254,250,143,11,190,98,251,77,222,205,50,120,173,106,177,177,22,23,29,44,136,44,35,200,97,133,87,204,27,17,129,125,226,215,137,254,61,95,215,246,16,28,173,102,49,237,151,210,107,114,204,42,52,127,62,54 };
    byte_vec_t pk { 3,23,189,246,208,228,139,103,124,65,180,161,226,220,193,119,230,217,86,240,46,220,72,246,28,141,139,17,208,149,84,47,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 613 ") {
    byte_vec_t msg { 247,223,124,17 };
    byte_vec_t sig { 235,118,101,138,47,179,39,26,168,122,248,191,188,177,57,245,242,96,114,129,126,141,218,34,30,184,247,74,88,183,82,67,238,141,64,133,246,137,63,36,235,250,141,78,67,46,168,162,15,95,29,86,216,224,228,209,67,233,52,69,59,120,90,136 };
    byte_vec_t pk { 4,204,116,222,71,28,254,179,111,147,63,200,249,120,86,233,72,58,107,131,202,198,31,126,225,53,3,200,12,159,138,238,127,163,165,216,245,177,193,230,128,2,163,88,213,163,80,186,200,227,220,103,37,96,227,86,22,224,38,68,204,88,161,121,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 613 ") {
    byte_vec_t msg { 240,155,230,124 };
    byte_vec_t sig { 154,196,12,29,165,175,94,230,144,51,188,223,65,46,226,185,31,11,178,143,75,202,38,165,44,71,218,229,76,9,228,244,207,116,122,91,80,168,212,36,33,76,176,105,244,173,54,107,226,204,123,9,213,117,82,103,151,240,216,209,131,250,189,68 };
    byte_vec_t pk { 4,220,202,200,76,103,119,128,181,203,235,170,79,209,49,245,187,78,116,210,147,48,109,80,79,105,219,232,236,252,201,64,63,206,96,223,108,186,43,175,150,69,116,96,122,165,140,237,105,169,4,146,142,240,22,226,74,86,85,238,220,53,10,100,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 613 ") {
    byte_vec_t msg { 87,221,192,194 };
    byte_vec_t sig { 35,136,219,143,155,123,113,49,187,128,246,76,235,151,89,135,44,167,219,125,94,219,237,141,224,97,159,44,0,192,173,24,85,253,41,253,153,22,211,7,97,128,76,206,185,86,146,97,136,254,195,174,26,222,221,202,78,178,177,209,213,235,223,203 };
    byte_vec_t pk { 3,4,25,135,11,200,127,236,172,55,183,114,6,164,149,52,128,65,86,37,247,48,248,66,26,146,17,93,195,236,40,228,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 613 ") {
    byte_vec_t msg { 127,15,14,251 };
    byte_vec_t sig { 221,63,197,86,167,39,54,73,173,61,47,237,41,223,107,159,218,191,175,226,147,77,35,63,197,156,11,92,19,84,5,220,195,191,187,157,69,216,70,30,93,176,85,11,203,29,254,52,200,57,238,77,190,11,150,53,65,174,43,25,234,81,241,103 };
    byte_vec_t pk { 2,238,115,233,34,49,52,60,211,79,112,200,52,220,152,117,126,40,159,55,234,222,249,218,141,220,48,17,125,156,18,108,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 614 ") {
    byte_vec_t msg { 125,91,123,71 };
    byte_vec_t sig { 51,194,120,168,239,68,224,48,44,19,116,73,21,223,138,121,139,178,14,168,230,116,65,53,251,99,179,242,175,117,215,105,123,121,230,85,144,144,19,70,25,192,80,226,170,227,88,16,26,76,81,41,195,59,67,142,223,18,8,177,1,171,95,48 };
    byte_vec_t pk { 4,96,103,140,167,226,67,250,103,106,49,148,235,221,177,137,245,142,70,21,58,37,70,253,95,30,77,168,206,117,5,113,14,132,183,239,23,182,139,163,123,29,46,251,144,169,163,138,209,17,64,153,209,113,142,247,154,206,191,72,253,23,86,163,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 614 ") {
    byte_vec_t msg { 158,226,216,116 };
    byte_vec_t sig { 171,222,7,132,121,163,120,244,249,13,54,34,191,131,88,111,189,65,133,193,210,163,68,128,218,4,46,247,192,24,253,106,109,227,46,231,15,101,90,220,144,158,136,38,181,74,112,161,107,107,112,156,112,189,231,198,136,117,92,174,8,119,204,64 };
    byte_vec_t pk { 4,130,108,167,179,168,47,162,165,71,183,33,176,233,69,151,160,163,69,144,184,185,127,144,139,185,208,68,124,243,9,9,149,238,221,116,175,78,239,118,221,218,215,213,54,234,142,131,25,159,177,222,224,185,102,216,181,190,174,208,36,93,160,79,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 614 ") {
    byte_vec_t msg { 124,222,236,153 };
    byte_vec_t sig { 190,107,69,25,56,123,174,44,145,180,27,113,111,6,6,209,136,127,183,171,162,254,114,46,67,32,17,7,95,111,24,163,33,0,9,125,215,110,229,62,118,114,105,69,142,54,130,103,116,179,125,231,130,141,88,88,108,179,136,215,193,154,122,247 };
    byte_vec_t pk { 3,99,163,188,55,148,166,164,107,25,12,187,130,118,41,131,33,34,83,107,203,162,207,5,159,118,199,41,234,26,15,185,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 614 ") {
    byte_vec_t msg { 199,95,154,80 };
    byte_vec_t sig { 199,25,96,27,154,166,209,42,235,74,77,56,91,0,128,224,132,35,119,131,44,140,160,181,144,230,142,90,64,180,43,18,182,182,190,75,124,91,13,252,55,146,231,132,219,182,72,224,192,202,210,155,25,45,76,204,30,226,122,180,95,137,93,121 };
    byte_vec_t pk { 3,82,206,247,42,79,231,158,221,254,56,12,238,202,50,97,157,251,197,32,200,115,46,190,181,211,228,97,55,238,117,217,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 615 ") {
    byte_vec_t msg { 62,44,53,160 };
    byte_vec_t sig { 144,53,245,229,151,212,176,110,7,242,70,35,64,158,105,252,213,136,168,180,151,22,216,220,112,130,245,248,251,86,109,69,247,239,70,221,147,21,153,181,135,228,196,110,169,213,59,212,116,10,165,171,111,177,240,228,61,177,160,193,64,233,176,237 };
    byte_vec_t pk { 4,35,62,242,212,17,198,225,35,174,157,117,162,129,16,41,135,38,16,197,148,51,51,142,30,15,249,6,119,213,119,162,138,134,199,67,246,175,3,45,103,240,236,84,78,149,45,112,131,87,6,225,119,133,246,227,151,131,165,67,195,164,127,215,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 615 ") {
    byte_vec_t msg { 23,85,143,50 };
    byte_vec_t sig { 215,254,94,98,130,65,118,139,150,9,50,49,40,183,0,149,148,202,175,176,182,152,141,108,222,217,83,203,204,97,155,245,47,230,177,171,65,128,176,86,7,184,80,35,227,60,147,186,26,175,165,109,24,250,32,172,87,219,126,94,48,50,132,196 };
    byte_vec_t pk { 4,215,104,57,211,153,5,36,31,172,152,196,247,157,226,188,53,82,171,199,159,30,181,87,133,237,156,21,152,85,4,54,71,122,21,143,86,139,105,121,230,230,147,232,76,83,143,109,70,72,128,14,192,147,81,159,170,110,15,69,99,35,97,76,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 615 ") {
    byte_vec_t msg { 20,155,60,101 };
    byte_vec_t sig { 127,37,92,133,102,138,197,48,176,100,17,27,254,195,35,247,190,126,27,177,157,46,68,178,189,124,26,248,43,197,0,144,1,139,37,250,41,209,70,55,141,34,200,76,173,11,68,207,35,50,144,162,23,153,206,91,183,25,195,74,35,186,243,212 };
    byte_vec_t pk { 2,23,93,52,87,39,176,43,222,139,81,223,167,10,173,188,131,57,65,245,174,158,229,86,18,93,173,158,137,142,84,137,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 615 ") {
    byte_vec_t msg { 124,172,194,108 };
    byte_vec_t sig { 15,174,62,46,240,6,89,14,141,234,82,224,187,218,134,48,49,102,86,224,212,208,48,120,211,255,13,205,76,21,251,144,71,88,218,112,43,158,30,230,49,2,254,185,219,237,235,112,197,21,85,2,142,239,174,183,207,180,137,31,255,50,0,119 };
    byte_vec_t pk { 3,76,174,158,189,46,163,162,92,132,11,60,3,2,132,178,167,253,23,2,198,47,216,107,44,61,194,1,173,144,226,122,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 616 ") {
    byte_vec_t msg { 116,149,162,188 };
    byte_vec_t sig { 92,197,24,78,186,80,88,112,167,216,142,241,163,228,222,154,37,123,134,127,139,59,10,59,138,131,236,137,190,120,255,225,15,214,154,242,153,78,178,220,187,5,37,26,252,143,156,231,157,241,2,192,156,28,56,14,186,112,154,211,233,75,122,25 };
    byte_vec_t pk { 4,131,53,183,226,249,250,211,31,81,147,110,36,230,61,153,2,94,64,242,154,250,196,157,223,190,127,134,105,45,245,168,254,37,130,62,15,221,163,193,204,116,195,51,43,18,78,77,248,68,206,221,11,30,244,100,88,113,85,195,77,162,79,127,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 616 ") {
    byte_vec_t msg { 164,209,89,94 };
    byte_vec_t sig { 86,77,126,102,115,5,114,61,183,239,50,245,105,200,188,215,83,11,197,69,37,26,213,207,192,152,136,146,70,67,37,149,220,103,63,98,32,21,30,155,194,176,93,6,255,55,140,59,85,112,59,215,28,88,127,69,221,46,127,26,75,21,42,190 };
    byte_vec_t pk { 4,34,229,35,34,178,13,64,169,41,173,81,228,100,99,185,50,97,82,242,156,218,217,254,6,7,19,43,85,243,222,140,145,58,43,227,191,254,82,72,87,115,98,193,191,193,127,187,20,76,177,232,57,147,56,125,22,197,250,46,96,152,237,49,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 616 ") {
    byte_vec_t msg { 96,216,21,82 };
    byte_vec_t sig { 87,182,40,23,177,51,102,122,183,225,191,106,59,14,102,95,73,211,114,145,35,128,159,202,34,35,230,134,26,103,240,79,228,45,92,206,36,4,141,48,19,103,148,167,182,2,50,228,180,182,154,239,244,233,181,114,255,97,111,241,45,114,32,246 };
    byte_vec_t pk { 3,222,8,38,44,89,33,228,168,231,207,38,180,119,144,101,249,25,245,159,166,213,99,79,15,236,178,178,40,61,190,34,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 616 ") {
    byte_vec_t msg { 207,44,241,72 };
    byte_vec_t sig { 236,62,166,128,177,251,15,252,175,45,119,188,81,212,17,30,159,194,198,168,221,139,242,231,6,48,145,171,182,55,248,96,246,216,247,219,95,85,116,191,237,196,2,103,238,26,88,156,219,71,234,83,17,136,26,44,67,240,28,73,242,225,123,147 };
    byte_vec_t pk { 3,240,111,188,175,193,16,228,34,82,69,182,50,238,144,14,165,59,107,56,149,180,107,137,134,160,216,193,52,149,55,183,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 617 ") {
    byte_vec_t msg { 97,38,127,216 };
    byte_vec_t sig { 13,135,153,123,39,248,157,69,191,208,49,175,160,46,22,175,251,35,31,94,210,219,1,76,113,97,235,79,99,109,31,35,176,105,242,234,11,238,244,2,160,51,0,215,221,242,102,204,196,181,131,198,66,0,114,108,113,57,19,74,252,249,58,53 };
    byte_vec_t pk { 4,68,40,209,2,206,92,255,135,202,128,119,201,221,86,125,181,174,195,66,32,176,229,221,161,170,73,108,169,176,186,228,230,24,65,4,95,121,202,46,38,166,119,145,196,170,170,209,237,3,155,1,173,11,62,6,98,123,154,5,117,245,87,142,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 617 ") {
    byte_vec_t msg { 33,136,120,248 };
    byte_vec_t sig { 32,186,119,118,221,177,184,77,82,60,6,131,7,203,196,41,235,158,28,154,106,185,214,173,170,108,244,220,137,228,91,50,226,150,97,154,169,186,207,174,200,212,171,198,59,192,213,123,173,110,255,133,219,215,106,90,134,75,57,227,144,93,201,173 };
    byte_vec_t pk { 4,184,222,49,124,191,226,229,175,115,73,197,74,84,102,162,64,241,172,88,124,172,227,67,163,219,223,120,198,191,218,58,56,232,4,133,47,1,34,117,65,203,102,76,63,89,162,114,121,78,149,86,229,71,247,28,45,199,212,180,125,71,212,203,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 617 ") {
    byte_vec_t msg { 97,222,204,59 };
    byte_vec_t sig { 215,216,71,114,18,205,176,251,10,166,5,116,171,20,203,44,81,234,41,179,115,155,80,117,58,1,192,193,12,138,238,192,201,90,117,211,174,126,52,3,74,153,212,159,102,12,131,195,88,165,84,134,177,255,171,16,161,37,30,148,114,109,35,40 };
    byte_vec_t pk { 3,225,47,176,83,212,68,181,231,103,25,38,64,2,2,250,165,246,60,131,74,145,71,127,174,113,16,177,156,179,72,153,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 617 ") {
    byte_vec_t msg { 200,130,133,56 };
    byte_vec_t sig { 116,11,139,159,29,244,21,98,119,231,228,34,68,203,81,94,52,95,233,76,113,145,232,55,15,118,70,223,160,216,86,138,201,24,11,171,94,158,60,129,90,168,48,211,57,4,87,232,241,116,173,58,253,209,73,107,4,153,80,32,140,158,77,172 };
    byte_vec_t pk { 2,242,6,226,213,62,167,142,46,61,16,127,204,228,179,101,140,111,229,85,71,13,241,191,201,238,66,173,94,148,123,160,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 618 ") {
    byte_vec_t msg { 182,186,130,127 };
    byte_vec_t sig { 33,93,86,196,178,189,205,28,247,144,188,218,163,64,124,208,232,126,98,234,244,148,182,27,122,107,145,9,150,142,38,76,108,224,64,81,41,234,74,163,21,12,66,15,14,36,249,24,51,51,162,84,71,212,224,96,198,150,44,40,81,190,132,210 };
    byte_vec_t pk { 4,89,110,252,32,97,217,83,209,213,105,224,96,216,239,215,39,49,205,91,145,196,70,59,21,84,111,37,185,94,185,116,174,109,160,155,251,179,198,53,141,171,102,120,96,103,239,2,78,122,148,197,96,52,194,44,66,92,114,220,96,165,254,64,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 618 ") {
    byte_vec_t msg { 254,2,24,211 };
    byte_vec_t sig { 168,187,195,141,47,81,126,220,180,207,207,171,83,43,128,191,175,202,132,29,212,5,196,79,97,71,173,70,171,251,177,191,49,227,16,250,2,198,88,15,153,20,70,152,47,9,51,106,103,232,247,241,169,25,66,85,125,110,82,128,42,53,230,133 };
    byte_vec_t pk { 4,216,205,49,186,201,96,58,13,174,121,245,57,54,121,153,2,56,201,212,147,133,47,12,191,56,192,154,188,200,38,109,246,208,106,218,32,31,47,60,2,12,114,189,115,230,47,164,107,105,43,188,226,244,120,45,159,90,207,94,160,80,250,235,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 618 ") {
    byte_vec_t msg { 3,136,21,86 };
    byte_vec_t sig { 44,33,237,172,205,210,193,171,247,42,138,136,19,60,196,132,104,178,68,225,63,34,194,50,8,182,163,102,116,178,191,118,29,214,73,199,148,235,244,49,202,204,187,12,202,35,69,210,79,187,104,3,55,88,8,207,211,7,194,200,132,55,221,25 };
    byte_vec_t pk { 2,92,250,150,20,140,16,67,224,218,186,203,56,120,73,88,252,70,96,32,224,171,34,223,167,84,182,239,129,182,128,17,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 618 ") {
    byte_vec_t msg { 98,230,206,196 };
    byte_vec_t sig { 206,15,31,127,226,162,173,215,8,204,73,50,30,157,72,90,251,199,136,114,162,232,120,141,224,133,179,210,133,104,26,83,132,118,218,1,86,167,236,205,127,151,12,167,77,241,2,83,132,98,205,254,103,49,205,27,160,187,179,250,171,20,72,43 };
    byte_vec_t pk { 2,28,83,63,125,23,227,27,124,199,78,35,95,115,223,47,0,164,11,219,194,172,101,158,248,12,23,154,214,234,57,31,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 619 ") {
    byte_vec_t msg { 239,86,51,112 };
    byte_vec_t sig { 117,94,122,120,242,216,189,204,248,18,68,117,169,213,215,193,95,204,168,64,241,135,146,144,233,248,244,246,43,51,93,176,37,185,236,106,72,81,144,154,12,107,115,237,31,188,112,234,70,34,246,187,20,108,56,156,223,176,3,102,175,172,169,45 };
    byte_vec_t pk { 4,203,57,83,130,72,8,120,183,158,183,142,176,126,205,248,20,16,92,196,24,151,50,65,64,140,68,99,77,87,143,98,216,226,176,147,82,131,101,145,154,159,131,147,49,189,137,123,83,2,101,37,240,84,85,66,84,97,227,229,90,158,119,124,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 619 ") {
    byte_vec_t msg { 67,174,147,195 };
    byte_vec_t sig { 73,77,128,185,66,97,25,112,66,203,171,60,74,179,115,91,234,76,105,14,107,5,163,135,213,138,154,243,178,145,203,122,73,145,33,247,169,183,38,239,102,85,67,218,98,144,39,96,230,29,88,47,72,237,127,164,79,105,182,104,207,138,250,169 };
    byte_vec_t pk { 4,34,47,234,198,150,82,80,79,61,178,72,155,165,184,173,15,57,14,43,103,135,128,111,240,75,140,100,213,235,247,34,24,97,145,254,107,78,99,25,188,143,38,247,239,96,201,47,118,169,22,82,211,62,22,105,87,173,193,119,136,142,19,99,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 619 ") {
    byte_vec_t msg { 130,215,66,31 };
    byte_vec_t sig { 232,111,176,36,144,66,86,89,72,149,24,92,54,104,193,233,219,26,209,166,46,13,181,185,27,49,68,129,227,238,55,31,250,102,218,151,122,103,191,62,40,46,215,175,152,8,148,121,1,253,234,63,231,4,118,188,213,45,142,173,23,11,189,62 };
    byte_vec_t pk { 2,158,173,127,76,74,129,18,9,45,238,143,248,53,28,242,167,91,157,211,25,254,90,128,205,82,150,5,180,88,226,162,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 619 ") {
    byte_vec_t msg { 190,87,238,238 };
    byte_vec_t sig { 108,246,167,27,187,112,65,177,30,137,107,36,159,85,39,84,242,19,79,129,45,233,88,247,89,250,159,98,113,103,101,196,44,11,34,125,109,143,202,251,40,39,63,63,65,158,134,88,121,48,234,132,183,31,198,121,113,142,225,81,216,180,89,175 };
    byte_vec_t pk { 2,219,153,48,232,166,199,244,216,83,232,97,58,5,114,112,125,17,216,250,173,230,5,122,244,210,190,177,93,34,138,54,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 620 ") {
    byte_vec_t msg { 44,74,219,241 };
    byte_vec_t sig { 36,241,231,92,65,170,13,5,32,34,48,203,82,79,51,167,158,75,88,158,216,31,229,211,93,214,216,107,90,254,162,147,147,112,53,201,14,212,40,240,208,92,154,24,88,101,255,223,184,29,215,74,110,26,86,211,199,212,110,0,29,255,94,178 };
    byte_vec_t pk { 4,175,191,12,93,249,15,125,64,4,247,85,176,123,218,126,105,83,122,239,199,235,67,140,74,84,215,1,134,110,64,75,146,166,211,82,110,137,129,152,90,21,148,48,56,90,106,201,89,154,127,39,92,229,179,91,48,162,116,120,2,62,234,78,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 620 ") {
    byte_vec_t msg { 45,114,96,153 };
    byte_vec_t sig { 163,234,146,168,139,175,82,50,56,87,13,169,155,169,6,65,47,33,192,132,152,115,61,185,213,199,108,168,135,61,179,133,71,245,155,115,10,134,184,90,52,39,211,119,91,197,36,237,156,5,233,175,135,50,128,209,18,221,108,122,83,28,62,96 };
    byte_vec_t pk { 4,68,81,250,44,191,148,237,126,167,211,16,156,106,216,156,83,205,30,234,190,210,146,106,32,21,151,54,68,172,227,59,125,135,101,246,6,190,174,137,247,8,73,110,255,208,219,221,213,188,221,10,238,140,104,166,174,205,81,86,61,190,255,247,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 620 ") {
    byte_vec_t msg { 115,143,20,91 };
    byte_vec_t sig { 68,19,144,71,158,194,251,226,129,12,16,192,124,242,148,8,194,28,122,63,76,130,7,86,77,153,252,187,165,191,23,96,157,165,48,48,185,68,218,200,17,58,116,67,65,44,92,30,183,11,200,242,79,183,232,51,205,85,103,191,39,185,138,97 };
    byte_vec_t pk { 3,62,29,22,195,179,45,34,28,105,95,252,43,238,40,44,157,71,157,150,109,163,249,66,167,254,37,110,207,83,157,16,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 620 ") {
    byte_vec_t msg { 251,45,163,84 };
    byte_vec_t sig { 227,96,83,71,89,193,73,44,209,47,130,101,48,211,2,23,211,205,129,20,227,250,80,196,45,49,126,197,205,125,105,167,0,48,24,208,53,31,95,26,248,64,226,26,8,191,49,36,252,109,29,253,3,171,216,67,86,118,77,96,127,170,171,161 };
    byte_vec_t pk { 3,201,37,2,188,180,158,2,23,2,141,209,127,140,37,5,144,244,21,76,87,195,140,224,223,57,107,67,64,165,243,239,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 621 ") {
    byte_vec_t msg { 25,99,104,10 };
    byte_vec_t sig { 45,97,85,24,93,202,230,136,106,71,60,82,5,168,132,106,31,112,37,108,219,103,131,46,105,207,147,7,80,184,170,132,155,136,134,165,236,47,206,177,164,48,11,204,230,230,83,219,128,174,147,67,157,35,228,111,191,96,62,42,25,210,150,48 };
    byte_vec_t pk { 4,251,45,75,33,38,31,76,40,144,40,141,229,112,51,92,224,68,156,206,159,255,54,251,221,182,47,97,230,26,127,243,84,98,95,83,232,189,141,157,137,45,14,104,64,167,94,90,8,187,110,103,251,61,84,69,166,20,116,192,74,149,179,180,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 621 ") {
    byte_vec_t msg { 206,44,125,113 };
    byte_vec_t sig { 143,6,151,26,161,126,124,141,201,118,152,162,164,43,226,235,15,52,216,69,145,139,158,51,206,147,192,129,34,43,144,227,192,171,34,143,215,55,243,145,97,245,17,204,82,162,231,59,231,126,240,135,130,245,36,251,243,232,124,132,49,107,136,70 };
    byte_vec_t pk { 4,136,138,236,184,117,160,121,233,52,7,253,167,191,23,99,34,129,62,17,96,114,145,83,173,104,236,204,92,34,83,207,119,231,197,247,50,132,130,51,82,161,118,232,192,50,228,221,180,227,218,48,253,242,42,98,74,9,25,225,215,228,77,178,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 621 ") {
    byte_vec_t msg { 202,109,53,12 };
    byte_vec_t sig { 234,62,169,242,255,126,137,181,67,57,48,237,4,7,122,235,220,99,60,43,53,88,102,183,99,49,51,198,53,105,249,29,189,46,101,137,179,100,76,53,228,113,16,232,234,44,83,212,52,107,55,169,116,31,74,226,94,137,237,229,162,148,186,150 };
    byte_vec_t pk { 2,0,255,126,233,142,77,1,76,123,93,31,229,139,174,119,128,111,160,52,184,28,150,68,16,189,247,112,53,148,139,82,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 621 ") {
    byte_vec_t msg { 255,113,100,97 };
    byte_vec_t sig { 65,90,81,244,188,6,74,206,226,231,130,187,30,110,247,210,72,156,76,61,155,244,6,194,27,70,120,65,197,61,69,130,121,202,1,149,114,218,131,175,110,148,193,20,157,43,179,19,111,201,56,212,193,86,174,81,185,130,28,92,205,180,212,246 };
    byte_vec_t pk { 2,73,235,181,241,95,79,55,98,116,159,207,236,112,83,148,187,200,106,58,142,156,199,65,124,42,65,213,95,182,153,254,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 622 ") {
    byte_vec_t msg { 148,71,216,248 };
    byte_vec_t sig { 156,87,18,22,134,167,88,219,255,119,39,5,3,60,94,189,128,16,159,204,38,26,198,15,253,151,202,187,133,49,47,25,235,114,27,144,108,66,60,87,145,41,196,165,96,174,55,153,245,29,99,121,85,112,237,239,168,148,139,203,179,86,106,31 };
    byte_vec_t pk { 4,214,71,85,59,198,179,166,227,223,194,93,236,120,223,202,171,16,8,96,215,45,248,157,129,31,97,43,240,116,89,234,252,107,101,0,103,70,116,90,174,24,132,255,117,145,204,163,94,240,108,209,99,126,211,197,205,0,73,142,141,55,244,63,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 622 ") {
    byte_vec_t msg { 162,39,225,133 };
    byte_vec_t sig { 226,37,68,184,241,54,206,172,116,15,254,184,57,118,167,170,43,1,28,3,163,185,71,13,232,100,61,225,106,86,55,157,159,0,34,118,0,15,251,99,10,58,105,185,252,28,1,109,126,21,89,167,203,117,3,238,173,138,148,24,164,21,168,193 };
    byte_vec_t pk { 4,191,95,189,169,20,161,70,120,232,155,44,56,42,136,26,129,3,246,169,126,159,27,108,169,254,17,131,242,202,86,244,121,175,204,116,229,168,43,61,242,158,158,208,232,225,106,177,58,52,123,217,229,51,83,169,57,58,18,242,47,220,128,134,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 622 ") {
    byte_vec_t msg { 139,129,53,12 };
    byte_vec_t sig { 188,181,1,83,253,244,226,195,19,64,2,61,58,116,22,36,65,83,15,215,27,25,100,253,110,166,188,39,211,42,70,219,254,39,188,86,112,204,152,33,254,32,182,140,121,65,4,10,181,8,120,234,116,31,25,173,34,79,184,185,211,22,53,196 };
    byte_vec_t pk { 3,104,212,178,241,3,59,81,198,37,16,212,117,157,143,124,111,231,118,218,168,186,253,14,66,69,43,94,140,123,39,230,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 622 ") {
    byte_vec_t msg { 220,172,62,224 };
    byte_vec_t sig { 24,84,88,46,77,128,221,42,89,1,82,116,37,15,47,254,188,145,247,80,146,193,150,78,153,219,191,20,67,2,39,180,9,22,223,78,186,110,192,191,178,20,236,138,53,50,81,52,47,242,205,176,195,54,21,252,76,49,129,174,100,41,150,176 };
    byte_vec_t pk { 3,30,22,61,162,30,111,96,168,32,112,71,155,132,106,191,13,79,201,62,190,90,64,77,239,209,3,31,75,184,43,50,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 623 ") {
    byte_vec_t msg { 255,117,255,65 };
    byte_vec_t sig { 0,226,180,11,8,13,66,219,109,75,96,185,78,233,65,233,11,196,36,250,91,43,107,170,70,211,108,83,191,209,155,13,240,189,86,249,26,49,166,175,170,49,231,131,28,46,242,32,218,52,98,146,131,204,6,148,210,48,11,235,16,181,48,255 };
    byte_vec_t pk { 4,130,94,16,149,215,69,112,130,237,131,149,54,244,34,233,54,32,46,230,127,179,113,104,61,109,138,18,177,154,19,86,215,4,147,176,45,46,67,207,108,170,15,116,83,25,14,156,209,242,9,138,141,247,71,51,75,86,176,132,148,173,248,52,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 623 ") {
    byte_vec_t msg { 166,229,114,194 };
    byte_vec_t sig { 120,82,54,180,134,223,31,123,69,206,141,75,200,5,215,201,122,17,133,243,13,206,23,84,211,174,212,7,192,25,246,216,78,109,70,189,21,108,72,36,240,102,102,255,219,53,92,175,237,10,67,157,123,205,108,78,91,97,215,186,121,247,176,37 };
    byte_vec_t pk { 4,158,13,189,1,167,151,118,187,241,155,15,52,79,64,238,94,196,33,162,109,250,20,181,243,46,227,217,51,169,117,103,32,237,79,53,231,255,43,194,70,153,219,245,74,100,101,24,19,229,116,70,156,174,70,20,2,219,127,127,103,52,184,218,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 623 ") {
    byte_vec_t msg { 114,87,165,173 };
    byte_vec_t sig { 183,133,14,102,38,92,198,25,76,95,193,181,59,9,194,241,188,133,134,20,99,216,130,96,156,103,44,42,141,212,79,8,18,109,212,86,153,125,22,181,112,160,115,132,114,212,146,44,220,147,6,167,56,151,171,27,129,225,6,176,193,94,189,77 };
    byte_vec_t pk { 2,22,84,189,107,206,85,115,44,112,64,185,165,161,181,54,144,108,48,13,24,95,139,36,123,59,22,56,22,85,95,247,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 623 ") {
    byte_vec_t msg { 65,96,170,138 };
    byte_vec_t sig { 21,230,165,239,105,53,157,44,29,220,108,176,136,113,147,147,155,91,65,148,156,71,2,182,231,53,142,38,254,236,103,60,8,193,212,185,247,99,184,162,253,67,207,1,140,34,177,143,28,233,180,232,213,227,227,243,132,196,54,139,5,113,204,153 };
    byte_vec_t pk { 3,116,211,58,91,112,118,168,116,85,102,105,93,153,110,176,0,186,211,33,48,254,74,74,99,69,124,174,40,208,244,9,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 624 ") {
    byte_vec_t msg { 166,193,206,180 };
    byte_vec_t sig { 115,239,151,146,202,38,185,80,164,79,232,203,67,199,2,235,190,205,194,185,130,240,101,154,144,154,165,130,149,174,97,171,27,205,205,65,162,225,115,132,231,187,84,76,39,20,181,238,86,204,30,155,231,222,45,166,138,3,141,68,81,75,117,156 };
    byte_vec_t pk { 4,171,111,72,169,108,17,164,78,174,173,112,36,255,154,54,9,9,11,77,18,49,222,158,98,152,227,175,90,157,223,244,189,142,208,8,217,247,188,207,192,181,245,180,135,100,97,92,7,221,45,3,1,132,75,138,230,204,217,19,22,10,216,154,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 624 ") {
    byte_vec_t msg { 27,150,45,59 };
    byte_vec_t sig { 146,254,252,27,180,198,128,43,146,194,117,130,82,194,119,236,134,184,195,22,118,208,177,74,202,131,244,232,119,95,243,232,103,205,112,143,86,121,235,147,226,177,136,99,195,63,114,104,78,153,73,147,20,54,188,113,75,85,18,127,204,100,201,135 };
    byte_vec_t pk { 4,7,195,240,3,46,144,182,166,46,139,175,153,80,185,209,50,0,169,61,31,42,20,97,40,186,155,53,99,124,86,21,230,12,251,233,130,213,179,172,165,216,249,23,117,152,93,7,235,243,54,93,221,0,143,51,76,152,153,66,150,22,133,33,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 624 ") {
    byte_vec_t msg { 225,76,22,104 };
    byte_vec_t sig { 80,32,36,154,189,149,46,4,219,222,199,242,201,154,83,215,28,8,223,99,68,12,47,38,214,37,251,73,19,135,73,55,246,128,119,138,105,40,60,244,126,135,105,248,195,130,154,200,135,125,54,52,35,12,29,126,38,199,245,51,31,105,119,188 };
    byte_vec_t pk { 2,2,64,51,168,151,127,41,234,192,183,225,198,88,118,64,64,14,159,199,105,123,224,109,223,176,237,70,189,153,71,155,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 624 ") {
    byte_vec_t msg { 248,158,36,59 };
    byte_vec_t sig { 213,149,78,40,239,172,204,5,113,203,210,69,203,22,42,27,170,156,21,103,102,125,43,120,118,7,140,29,218,183,37,175,68,175,254,106,70,248,207,47,139,95,155,85,206,225,227,125,42,192,158,11,4,211,151,200,173,252,200,68,119,163,64,123 };
    byte_vec_t pk { 3,152,28,76,142,250,124,228,195,120,241,167,183,110,5,60,23,110,175,101,234,144,201,30,223,192,159,64,35,110,158,117,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 625 ") {
    byte_vec_t msg { 98,87,212,247 };
    byte_vec_t sig { 169,219,195,31,98,119,186,173,212,73,5,129,99,14,224,137,60,239,60,204,28,57,139,69,35,209,188,3,126,60,148,35,48,172,168,138,214,246,78,231,188,77,247,243,140,68,91,60,255,9,172,190,57,32,32,169,183,246,29,89,14,49,197,156 };
    byte_vec_t pk { 4,218,88,148,57,66,79,34,176,105,6,82,176,83,150,75,121,44,161,78,217,199,2,118,247,7,56,149,198,149,33,27,203,240,118,147,78,51,241,169,119,23,179,228,147,141,145,246,14,170,135,137,133,155,163,221,227,29,14,242,73,216,147,244,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 625 ") {
    byte_vec_t msg { 45,33,138,0 };
    byte_vec_t sig { 141,171,228,108,141,224,184,128,31,36,89,87,40,197,126,150,163,85,76,3,242,116,209,193,45,119,87,167,170,90,173,61,191,213,229,25,37,227,23,122,163,133,231,18,21,183,50,152,145,59,178,207,66,196,186,190,126,124,196,135,227,20,33,108 };
    byte_vec_t pk { 4,160,220,163,212,192,180,42,254,206,249,15,137,206,205,92,10,91,6,29,70,210,11,124,193,127,59,124,162,122,127,140,50,163,201,132,22,78,100,64,23,180,86,82,201,190,24,48,26,118,117,238,206,101,40,116,0,32,252,7,34,183,115,151,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 625 ") {
    byte_vec_t msg { 147,168,142,89 };
    byte_vec_t sig { 216,12,208,81,161,21,89,35,157,62,200,76,3,141,5,71,218,11,39,150,106,245,136,208,221,145,103,143,250,143,238,143,187,110,147,152,129,0,196,2,208,185,20,72,64,81,205,42,164,118,159,212,90,173,60,46,53,226,4,94,33,245,246,180 };
    byte_vec_t pk { 3,35,242,208,134,211,170,130,20,18,252,46,68,26,127,90,155,118,222,138,73,135,45,240,175,100,251,238,23,151,55,78,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 625 ") {
    byte_vec_t msg { 16,109,123,20 };
    byte_vec_t sig { 99,67,205,241,41,163,39,188,238,131,160,59,101,83,123,190,78,53,245,250,16,178,243,51,243,156,150,85,144,53,31,232,182,11,240,235,204,70,168,25,11,23,114,172,42,95,47,119,64,42,217,176,2,238,150,117,14,196,246,203,127,142,237,152 };
    byte_vec_t pk { 2,49,7,82,26,67,139,62,47,57,206,19,206,89,60,248,163,1,58,117,17,187,75,118,118,163,7,152,69,69,205,194,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 626 ") {
    byte_vec_t msg { 194,149,124,138 };
    byte_vec_t sig { 120,95,67,36,82,108,175,223,159,38,248,63,102,35,67,58,28,90,95,167,184,167,17,47,136,196,174,224,38,71,39,225,148,239,167,17,67,203,16,177,11,207,133,152,232,202,39,248,194,24,121,232,117,21,193,22,215,84,77,16,14,133,134,232 };
    byte_vec_t pk { 4,25,192,43,96,117,164,229,6,216,100,190,226,183,156,59,29,93,208,198,83,165,31,161,223,54,231,94,72,15,117,241,32,160,212,177,168,30,211,236,74,179,246,0,221,190,75,139,178,213,14,173,30,65,251,212,71,5,180,118,6,226,225,163,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 626 ") {
    byte_vec_t msg { 127,17,156,122 };
    byte_vec_t sig { 43,228,168,232,66,49,48,201,192,10,194,26,132,93,227,67,57,56,186,232,193,51,7,220,113,112,32,104,228,216,137,163,186,95,123,142,126,34,11,228,125,47,149,214,198,91,157,29,60,25,250,250,49,208,58,229,174,220,103,167,173,100,165,3 };
    byte_vec_t pk { 4,146,2,9,21,22,172,168,226,50,109,23,82,145,45,20,104,89,13,233,117,239,171,228,99,124,127,167,22,161,89,135,212,180,19,93,190,121,215,153,6,15,144,216,102,74,159,150,238,158,249,25,248,10,157,58,14,148,239,8,185,127,197,33,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 626 ") {
    byte_vec_t msg { 102,154,248,76 };
    byte_vec_t sig { 204,124,159,248,213,50,22,98,237,5,211,140,207,51,214,134,31,204,63,30,96,4,19,220,126,201,153,232,16,229,227,206,194,246,185,6,141,163,251,199,157,249,98,3,208,190,95,88,185,2,189,214,229,136,169,48,4,64,134,246,237,242,167,94 };
    byte_vec_t pk { 2,69,130,223,143,6,236,146,157,179,7,114,35,1,47,59,142,177,217,148,94,171,221,142,67,70,191,187,147,177,246,43,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 626 ") {
    byte_vec_t msg { 220,229,170,90 };
    byte_vec_t sig { 0,195,13,255,66,48,167,21,103,252,255,148,151,113,213,212,119,40,163,238,158,163,80,183,30,44,213,76,151,151,206,169,205,9,156,39,157,246,223,67,244,46,3,167,202,97,21,50,208,158,80,66,207,69,133,10,59,170,201,76,140,178,163,3 };
    byte_vec_t pk { 3,245,19,216,161,68,158,60,187,122,20,109,170,105,88,16,53,97,214,97,186,26,28,215,166,4,203,250,116,92,230,2,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 627 ") {
    byte_vec_t msg { 252,251,163,203 };
    byte_vec_t sig { 77,251,130,255,184,124,147,159,79,145,200,173,64,26,228,139,24,31,246,182,127,127,214,188,84,180,5,201,122,238,143,234,7,246,182,80,202,86,19,58,208,255,152,160,153,231,217,30,15,40,126,35,203,5,134,121,64,76,34,242,238,79,94,135 };
    byte_vec_t pk { 4,251,151,228,28,172,97,7,209,93,90,236,97,16,138,70,49,74,33,101,223,72,193,197,156,78,150,3,196,195,131,104,153,238,182,238,244,106,108,154,237,200,17,222,162,226,28,107,173,195,121,249,131,62,32,141,150,73,102,255,227,199,95,159,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 627 ") {
    byte_vec_t msg { 124,248,151,41 };
    byte_vec_t sig { 156,33,84,47,183,222,149,230,233,15,117,101,165,159,10,248,215,154,204,69,209,112,4,60,249,125,170,198,228,18,83,240,26,178,157,36,233,42,141,160,155,155,231,45,104,141,151,45,28,211,217,155,114,255,107,170,140,106,201,182,117,251,7,113 };
    byte_vec_t pk { 4,218,27,27,24,5,167,192,154,24,189,116,124,255,170,231,100,182,158,197,81,101,246,11,242,165,152,244,16,144,237,45,135,201,76,128,160,77,85,65,240,147,33,173,174,138,186,100,60,199,81,237,171,70,51,95,138,24,206,85,203,153,171,204,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 627 ") {
    byte_vec_t msg { 121,30,37,81 };
    byte_vec_t sig { 241,241,117,45,254,197,86,165,170,143,65,13,30,217,82,101,186,69,60,139,134,64,188,53,169,247,202,102,237,48,168,144,223,99,198,102,32,127,203,31,59,159,47,215,85,250,143,5,200,235,252,29,211,142,124,182,61,43,235,215,150,82,123,203 };
    byte_vec_t pk { 3,172,157,145,123,251,121,139,160,177,166,128,225,208,53,63,163,226,58,149,73,68,36,247,190,202,237,159,171,175,198,103,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 627 ") {
    byte_vec_t msg { 110,60,90,15 };
    byte_vec_t sig { 198,93,180,192,31,134,55,121,77,181,175,109,114,2,64,17,147,161,5,77,184,172,192,136,51,149,241,128,223,158,34,119,130,152,171,69,238,111,134,252,161,58,29,29,52,10,118,243,184,46,170,191,29,214,2,149,59,96,238,246,238,181,96,238 };
    byte_vec_t pk { 3,45,16,150,4,201,182,187,194,5,204,19,111,213,85,100,11,191,113,232,103,95,136,80,28,159,60,159,184,142,197,221,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 628 ") {
    byte_vec_t msg { 193,179,15,61 };
    byte_vec_t sig { 200,206,253,90,178,127,49,14,39,86,45,37,219,162,171,202,76,198,103,72,245,7,6,2,44,24,220,202,210,140,42,237,26,62,244,161,154,3,52,118,118,219,42,11,176,145,197,206,149,39,97,113,180,196,146,187,30,108,88,11,158,41,158,71 };
    byte_vec_t pk { 4,33,14,20,5,121,158,14,234,36,245,203,51,112,245,85,126,206,156,32,90,101,73,215,193,203,100,183,161,214,8,131,171,66,171,57,251,116,80,126,160,82,148,182,153,37,157,118,111,20,231,34,239,19,160,21,139,96,79,27,44,193,82,243,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 628 ") {
    byte_vec_t msg { 159,62,231,83 };
    byte_vec_t sig { 223,190,177,56,94,206,174,185,87,107,217,54,127,41,244,255,229,9,30,155,211,123,159,151,70,78,197,34,198,157,245,195,158,154,56,52,222,121,64,209,240,17,82,88,118,181,111,231,74,206,13,40,190,244,155,246,24,33,241,222,109,234,98,5 };
    byte_vec_t pk { 4,162,187,23,72,136,250,148,159,139,51,8,197,119,168,113,112,27,184,186,198,29,185,187,105,95,104,31,31,252,63,230,49,46,108,90,7,236,55,246,198,213,177,191,30,125,143,9,199,70,131,179,180,30,42,195,223,55,201,46,25,122,104,2,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 628 ") {
    byte_vec_t msg { 197,147,10,209 };
    byte_vec_t sig { 47,107,91,230,240,55,218,249,141,200,109,174,197,225,65,116,120,120,26,185,167,87,158,242,110,236,23,107,18,249,237,253,212,126,10,224,254,41,165,0,117,197,1,251,97,36,140,22,171,17,187,126,30,135,143,102,155,51,89,23,12,222,162,177 };
    byte_vec_t pk { 2,163,240,138,33,150,62,131,37,221,173,37,139,112,180,103,227,136,10,61,32,146,204,140,225,42,124,180,70,154,218,157,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 628 ") {
    byte_vec_t msg { 75,190,119,163 };
    byte_vec_t sig { 250,66,10,211,107,223,70,94,3,233,140,221,54,54,49,252,67,74,254,130,170,43,186,39,174,89,130,126,96,10,83,87,1,93,119,162,87,25,175,37,208,78,99,91,227,40,197,178,184,121,107,212,113,211,132,229,240,157,148,97,156,87,151,4 };
    byte_vec_t pk { 3,93,95,125,132,214,52,203,76,183,147,51,92,157,73,113,11,151,88,210,238,14,42,97,144,220,150,185,148,236,177,187,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 629 ") {
    byte_vec_t msg { 96,108,57,250 };
    byte_vec_t sig { 242,141,200,249,188,17,242,132,146,92,91,16,24,178,240,3,243,53,251,152,1,55,143,101,232,76,247,109,157,32,174,126,230,245,91,172,137,236,181,244,35,85,217,71,217,148,156,133,205,149,101,7,65,180,36,29,254,153,207,139,180,110,54,58 };
    byte_vec_t pk { 4,81,239,131,206,146,241,60,133,43,35,137,129,148,185,207,121,175,252,237,132,176,179,138,33,102,129,23,36,98,195,42,202,102,46,194,72,55,74,193,153,108,65,1,252,174,226,58,11,218,147,240,161,190,114,240,141,102,13,182,81,92,53,152,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 629 ") {
    byte_vec_t msg { 147,168,236,33 };
    byte_vec_t sig { 35,154,84,242,132,71,56,208,199,89,139,139,182,29,112,57,174,65,105,54,200,217,53,115,246,19,108,78,207,186,237,86,138,98,63,224,136,67,40,51,18,68,71,94,101,89,66,44,27,37,34,126,186,230,77,236,152,207,162,40,211,23,124,245 };
    byte_vec_t pk { 4,218,93,179,190,157,160,66,140,179,63,18,178,151,17,48,155,144,99,209,21,243,10,208,221,19,17,169,127,74,36,79,10,56,253,173,147,220,168,152,38,89,22,136,64,112,83,6,212,254,125,98,226,219,69,76,7,227,1,211,176,103,47,197,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 629 ") {
    byte_vec_t msg { 228,89,183,106 };
    byte_vec_t sig { 44,3,102,169,39,44,61,72,143,165,211,23,251,187,135,195,13,187,175,39,89,210,186,133,109,207,180,116,129,137,255,118,186,25,96,147,206,207,87,119,53,156,163,246,211,164,90,43,196,176,233,119,252,240,234,20,168,32,137,82,83,91,4,248 };
    byte_vec_t pk { 2,10,161,240,47,52,8,208,13,192,165,10,58,89,127,49,155,126,239,93,11,223,36,104,100,181,128,121,33,204,147,225,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 629 ") {
    byte_vec_t msg { 202,92,14,241 };
    byte_vec_t sig { 38,157,131,21,215,147,8,218,219,123,141,100,173,46,236,140,43,209,25,13,94,16,166,151,158,186,170,120,85,164,181,221,131,124,164,69,195,247,15,26,149,93,14,106,1,51,2,120,190,201,10,223,8,203,106,130,166,78,237,77,248,241,32,38 };
    byte_vec_t pk { 3,13,103,122,110,28,97,56,133,252,53,75,98,173,239,145,141,165,229,132,32,158,196,211,194,83,203,187,44,207,194,228,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 630 ") {
    byte_vec_t msg { 197,250,107,80 };
    byte_vec_t sig { 168,174,195,8,210,65,160,168,215,97,43,40,64,55,71,64,95,209,158,132,203,208,127,117,155,119,14,95,241,169,43,43,190,206,217,210,32,71,187,173,32,34,212,20,184,234,58,234,222,17,35,110,19,221,255,25,122,38,31,226,145,216,1,139 };
    byte_vec_t pk { 4,202,176,129,143,137,242,122,248,176,28,158,244,14,255,235,242,230,101,73,8,207,63,107,215,67,159,122,175,165,95,197,23,67,115,218,252,38,1,15,65,156,82,244,143,17,205,173,120,167,223,105,72,89,19,44,58,20,85,157,147,108,255,59,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 630 ") {
    byte_vec_t msg { 131,43,138,6 };
    byte_vec_t sig { 28,18,203,186,254,182,81,98,32,222,142,143,131,138,42,6,96,105,105,28,62,117,79,163,20,116,198,233,122,75,46,184,45,23,104,28,35,218,43,184,28,149,131,65,105,246,180,165,214,189,83,5,85,183,224,142,199,41,249,221,82,244,18,62 };
    byte_vec_t pk { 4,146,220,96,213,142,183,186,117,206,174,44,213,6,233,241,161,205,29,7,167,232,13,71,39,147,95,70,153,13,42,174,224,78,140,27,39,66,146,255,234,159,103,141,11,65,147,92,13,7,75,220,28,197,93,233,224,198,216,103,215,21,60,42,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 630 ") {
    byte_vec_t msg { 222,1,120,75 };
    byte_vec_t sig { 174,53,16,75,205,57,32,180,138,220,84,148,218,248,126,79,121,242,40,94,123,150,186,178,193,252,214,93,229,245,97,9,142,119,120,242,241,95,145,18,242,108,194,197,183,158,28,76,147,87,83,57,22,94,93,133,160,16,130,18,194,208,234,187 };
    byte_vec_t pk { 3,232,108,30,150,250,176,131,53,17,4,208,136,126,194,10,50,214,59,42,128,155,198,194,98,81,209,203,163,72,148,119,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 630 ") {
    byte_vec_t msg { 137,78,192,100 };
    byte_vec_t sig { 2,231,108,197,153,181,240,81,38,54,37,39,188,98,154,151,78,122,60,255,165,240,84,187,131,172,50,157,196,5,77,59,142,144,100,124,74,83,191,148,150,144,168,149,164,206,44,104,219,76,56,53,171,252,55,203,59,93,11,64,101,46,185,167 };
    byte_vec_t pk { 3,4,147,222,203,68,83,0,178,13,203,106,231,34,194,103,105,26,103,14,224,250,74,208,97,119,229,119,34,136,40,209,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 631 ") {
    byte_vec_t msg { 96,98,135,76 };
    byte_vec_t sig { 219,210,213,96,125,172,131,139,117,31,107,204,12,18,77,89,155,26,15,250,174,167,177,97,35,113,228,215,141,174,36,39,91,123,23,86,137,244,245,32,123,52,151,193,225,199,26,216,25,251,130,139,232,194,113,195,119,202,93,145,80,254,51,38 };
    byte_vec_t pk { 4,147,84,73,103,113,109,49,112,119,40,232,11,231,48,3,217,109,229,213,1,199,61,34,45,202,58,118,224,60,224,116,212,110,180,99,100,121,162,68,212,175,29,34,226,204,232,100,116,210,250,191,185,169,49,228,191,246,31,254,135,137,159,209,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 631 ") {
    byte_vec_t msg { 7,213,49,158 };
    byte_vec_t sig { 3,120,166,152,244,120,33,242,217,33,183,104,22,64,162,113,100,233,229,239,242,20,78,130,126,175,218,230,138,62,71,242,110,92,107,82,15,155,97,125,124,8,135,181,215,72,131,176,27,229,21,189,4,29,71,109,15,218,39,157,225,132,156,169 };
    byte_vec_t pk { 4,116,162,105,6,236,146,92,206,80,155,160,63,210,100,243,228,68,164,222,91,131,10,51,243,91,223,144,221,156,22,168,198,155,63,25,227,74,163,17,138,114,196,31,188,90,6,66,244,59,213,133,217,41,129,219,61,212,21,252,53,203,195,8,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 631 ") {
    byte_vec_t msg { 130,15,94,21 };
    byte_vec_t sig { 199,114,135,195,132,14,125,241,105,189,70,48,11,182,233,125,42,44,163,0,175,71,210,115,59,9,1,68,76,246,253,97,134,174,25,145,7,176,121,97,2,98,185,186,41,94,245,139,136,176,1,71,120,54,92,64,57,66,207,112,90,147,201,195 };
    byte_vec_t pk { 3,21,31,160,58,122,56,88,167,53,181,217,138,84,143,121,154,103,114,56,251,136,144,45,115,7,126,81,90,135,143,252,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 631 ") {
    byte_vec_t msg { 218,84,3,146 };
    byte_vec_t sig { 214,207,154,252,84,196,125,45,209,196,170,129,173,79,180,102,251,31,87,138,87,128,74,110,71,90,242,107,46,204,151,1,245,149,158,251,250,184,70,158,235,38,2,215,39,139,249,92,137,201,79,98,181,55,208,23,32,233,156,108,39,237,11,179 };
    byte_vec_t pk { 2,65,153,188,218,79,179,47,127,212,250,185,66,175,182,179,32,239,102,173,79,184,109,84,58,183,162,127,40,155,82,5,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 632 ") {
    byte_vec_t msg { 162,242,114,1 };
    byte_vec_t sig { 183,108,189,98,99,103,77,105,125,117,165,16,246,184,88,123,65,58,248,40,36,155,242,203,71,251,130,68,141,112,166,10,176,163,208,197,30,60,252,140,237,0,124,85,117,145,157,45,1,201,81,172,215,155,185,153,29,53,196,66,198,170,61,206 };
    byte_vec_t pk { 4,203,149,88,196,216,233,222,74,74,128,48,162,116,167,29,95,101,110,36,176,164,226,232,235,141,244,112,149,175,36,13,204,140,221,204,96,121,106,94,174,169,5,31,160,183,51,40,110,198,153,114,122,9,15,245,82,48,218,59,75,190,30,233,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 632 ") {
    byte_vec_t msg { 209,117,36,60 };
    byte_vec_t sig { 24,146,88,141,226,157,36,73,66,119,50,38,57,246,163,107,37,36,148,70,212,34,162,133,97,80,35,171,191,228,237,31,33,107,181,111,149,215,192,71,177,225,151,163,148,36,190,188,197,78,53,26,77,201,225,166,206,100,88,108,12,216,195,129 };
    byte_vec_t pk { 4,156,213,238,194,189,152,162,189,73,111,204,64,40,158,193,233,235,182,199,25,245,243,122,79,22,101,78,86,92,193,252,137,9,185,178,95,151,152,136,216,179,61,111,22,99,219,200,49,95,159,6,145,126,171,86,225,244,179,35,73,24,35,67,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 632 ") {
    byte_vec_t msg { 61,124,37,96 };
    byte_vec_t sig { 92,178,116,177,14,136,128,44,198,131,125,32,63,220,95,165,85,80,40,116,250,200,84,251,56,202,188,13,0,157,193,2,176,59,185,221,102,106,17,154,25,22,39,103,44,65,18,17,101,96,19,70,145,246,65,222,208,201,113,57,145,255,212,214 };
    byte_vec_t pk { 2,122,30,216,13,2,255,28,4,215,10,143,195,108,106,63,90,148,164,9,171,152,220,145,120,21,183,17,247,20,12,163,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 632 ") {
    byte_vec_t msg { 54,208,110,191 };
    byte_vec_t sig { 152,238,71,131,154,32,11,182,126,65,202,76,173,110,141,250,96,195,107,68,77,221,154,85,117,235,4,183,88,6,11,54,246,158,128,16,124,42,159,254,1,50,56,6,236,54,200,1,249,26,220,182,80,233,211,155,71,86,44,215,155,134,6,211 };
    byte_vec_t pk { 2,84,57,31,29,133,26,121,210,214,179,4,83,50,20,130,124,242,238,86,249,241,98,10,233,125,253,36,10,92,207,136,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 633 ") {
    byte_vec_t msg { 31,182,83,91 };
    byte_vec_t sig { 106,50,202,96,246,139,221,182,20,199,249,214,51,209,200,243,197,193,217,205,175,247,133,243,239,212,158,201,5,87,3,70,11,249,62,68,77,33,100,204,239,105,189,102,134,19,218,22,196,243,217,32,146,98,73,165,143,195,41,246,184,77,133,175 };
    byte_vec_t pk { 4,238,36,14,56,69,205,169,161,128,108,41,130,31,114,117,244,82,204,57,158,131,6,189,148,154,209,81,103,205,194,54,0,227,14,43,173,172,186,22,136,0,21,72,18,124,194,171,141,177,126,197,95,40,224,255,18,217,30,32,245,57,120,237,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 633 ") {
    byte_vec_t msg { 215,234,162,70 };
    byte_vec_t sig { 203,104,52,29,111,103,37,250,60,133,10,144,210,226,171,54,125,150,100,46,51,47,101,78,156,179,134,30,252,157,44,63,21,220,235,58,19,28,192,119,25,150,4,223,8,46,199,252,63,3,3,212,195,7,146,206,13,186,4,84,233,76,53,234 };
    byte_vec_t pk { 4,8,49,45,16,240,248,53,154,143,84,35,136,111,250,187,247,44,52,155,16,202,145,249,34,198,178,90,101,75,166,89,46,211,127,100,103,144,42,53,14,167,48,21,177,1,76,86,133,199,148,199,70,36,91,55,110,95,255,139,200,86,175,23,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 633 ") {
    byte_vec_t msg { 133,33,131,148 };
    byte_vec_t sig { 186,146,253,207,203,232,231,78,140,85,219,54,207,228,126,101,255,63,198,157,132,176,35,106,119,169,97,96,234,230,239,176,153,207,146,95,81,250,204,57,99,181,89,85,91,113,176,15,58,63,108,209,175,114,211,171,249,136,190,209,27,165,42,119 };
    byte_vec_t pk { 3,158,96,136,234,114,192,32,156,39,26,61,245,215,128,78,126,132,130,105,160,139,137,144,48,39,129,38,190,92,92,135,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 633 ") {
    byte_vec_t msg { 152,91,48,153 };
    byte_vec_t sig { 224,19,106,206,90,216,35,159,158,188,194,34,141,224,197,36,9,228,110,38,196,72,4,189,121,70,177,97,82,156,61,120,188,31,110,131,22,103,164,227,20,150,192,40,105,116,210,188,33,240,44,208,157,159,68,145,243,45,80,27,78,217,172,232 };
    byte_vec_t pk { 3,61,63,167,146,32,101,143,42,187,244,223,75,215,68,182,87,133,14,133,45,10,136,18,232,3,112,191,149,1,165,19,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 634 ") {
    byte_vec_t msg { 211,181,243,28 };
    byte_vec_t sig { 8,68,140,159,15,49,249,217,185,39,29,55,47,46,182,186,239,85,231,54,232,156,55,11,133,206,164,199,208,154,76,171,150,11,212,29,63,216,162,171,144,224,138,20,45,15,222,124,242,70,76,202,64,181,60,75,27,2,251,195,211,118,218,133 };
    byte_vec_t pk { 4,165,221,207,37,245,26,196,169,43,228,214,189,32,108,79,237,81,201,43,53,96,0,139,85,92,61,99,210,33,141,44,226,66,125,60,82,218,176,31,91,93,34,104,81,22,250,26,142,99,45,94,116,231,199,53,131,156,74,136,40,151,190,44,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 634 ") {
    byte_vec_t msg { 239,239,158,54 };
    byte_vec_t sig { 237,43,5,105,47,167,65,253,208,34,206,116,50,228,120,186,252,212,192,179,44,247,12,14,171,86,110,146,166,3,196,249,226,27,40,239,192,166,226,229,89,23,75,167,105,202,97,193,25,222,75,124,110,137,215,123,1,148,66,224,15,224,157,254 };
    byte_vec_t pk { 4,179,225,212,187,199,91,25,127,146,78,12,245,133,140,202,201,32,179,66,69,180,77,240,140,153,171,231,224,245,5,39,83,42,23,76,137,24,251,251,179,193,74,91,24,177,166,51,139,67,88,207,11,12,240,255,216,193,125,61,145,127,133,22,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 634 ") {
    byte_vec_t msg { 240,173,69,230 };
    byte_vec_t sig { 100,137,14,69,199,25,56,254,244,21,10,18,35,41,10,161,67,183,199,53,29,13,56,247,171,211,86,207,195,113,54,105,88,127,170,92,107,79,155,103,77,199,226,178,125,106,182,254,171,48,211,148,40,244,141,92,49,66,218,224,118,234,223,35 };
    byte_vec_t pk { 2,224,126,177,58,9,11,62,197,147,152,255,20,87,174,32,245,52,240,84,180,7,23,151,229,5,157,132,212,150,49,169,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 634 ") {
    byte_vec_t msg { 209,167,157,87 };
    byte_vec_t sig { 93,116,144,114,33,75,221,192,16,123,46,132,185,130,23,12,125,131,160,221,90,67,180,213,147,250,201,37,247,28,199,122,218,68,161,120,171,181,18,93,113,57,29,156,124,16,122,80,91,144,169,211,98,143,48,42,151,183,182,206,159,189,108,131 };
    byte_vec_t pk { 2,107,96,212,200,10,152,238,223,112,115,116,255,93,232,153,183,148,110,238,239,87,31,235,200,31,83,235,76,193,236,187,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 635 ") {
    byte_vec_t msg { 151,125,216,206 };
    byte_vec_t sig { 5,227,255,193,151,83,137,126,84,136,174,53,119,42,152,44,212,40,80,202,38,76,72,229,5,74,31,27,89,88,153,69,5,110,201,206,10,208,145,38,249,95,54,26,33,248,32,42,10,12,85,157,181,154,94,207,139,202,141,83,24,60,34,250 };
    byte_vec_t pk { 4,141,24,22,88,186,108,117,32,157,18,61,117,98,101,11,4,245,141,165,57,222,155,218,48,38,81,25,54,42,72,100,91,231,177,150,175,100,118,66,41,0,15,87,164,105,222,205,54,123,249,147,84,85,60,99,114,219,135,128,94,176,215,224,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 635 ") {
    byte_vec_t msg { 20,142,130,30 };
    byte_vec_t sig { 127,81,253,108,160,20,58,119,144,85,145,235,69,122,33,242,23,37,135,23,152,231,173,206,237,111,45,77,231,194,128,75,84,225,138,61,5,115,38,81,151,134,197,8,223,27,166,151,18,50,202,60,171,179,100,130,224,161,75,203,147,173,74,219 };
    byte_vec_t pk { 4,20,48,207,126,18,130,49,104,32,140,222,71,198,65,205,140,122,226,141,8,90,133,98,225,127,41,254,64,7,177,162,4,178,59,102,209,191,65,39,85,179,43,20,192,51,221,136,98,19,254,146,43,105,56,94,44,223,197,62,28,233,31,60,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 635 ") {
    byte_vec_t msg { 150,225,240,176 };
    byte_vec_t sig { 70,33,233,165,188,57,112,190,101,94,247,185,1,194,244,149,3,247,135,80,123,57,95,192,3,3,139,102,174,6,19,146,195,103,101,89,135,220,57,179,57,44,132,152,9,23,212,130,155,72,61,118,66,136,162,100,14,90,138,202,45,212,205,235 };
    byte_vec_t pk { 2,117,209,57,131,254,232,85,2,225,30,47,13,199,137,2,212,79,226,57,155,35,231,235,172,97,70,157,100,248,203,138,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 635 ") {
    byte_vec_t msg { 164,235,82,242 };
    byte_vec_t sig { 165,113,170,22,251,19,247,45,199,119,57,115,234,194,106,44,142,77,193,133,249,21,74,112,58,22,32,177,36,112,58,188,110,15,48,251,65,171,86,224,186,40,25,13,17,177,136,244,108,13,181,232,123,63,173,155,78,37,160,98,35,76,32,223 };
    byte_vec_t pk { 3,4,200,89,83,156,239,193,20,27,103,180,74,254,108,173,63,23,209,105,206,92,9,91,54,128,88,172,197,202,48,237,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 636 ") {
    byte_vec_t msg { 144,142,212,174 };
    byte_vec_t sig { 201,229,244,141,94,203,124,132,80,194,227,124,3,173,106,123,113,166,20,3,140,137,200,120,51,32,166,146,58,65,168,222,27,136,242,153,8,125,220,63,18,219,55,117,239,157,241,216,116,143,83,10,103,227,224,12,148,173,233,156,163,24,134,158 };
    byte_vec_t pk { 4,15,199,200,179,75,175,219,226,19,163,115,136,176,127,148,8,234,114,100,74,117,15,238,102,70,144,156,181,133,105,227,64,60,5,46,194,186,57,14,223,213,51,172,217,50,229,187,101,110,56,13,214,1,0,32,3,198,47,50,101,135,183,37,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 636 ") {
    byte_vec_t msg { 179,198,211,35 };
    byte_vec_t sig { 86,63,172,196,228,254,11,6,197,5,74,180,232,14,93,201,190,141,160,28,46,232,233,91,101,147,147,253,183,213,192,51,212,230,128,108,13,14,151,41,195,146,90,213,92,68,245,132,44,37,230,5,172,130,96,249,24,20,103,236,2,67,199,149 };
    byte_vec_t pk { 4,106,228,63,233,170,53,28,153,185,225,149,39,59,67,248,193,153,12,190,19,206,77,166,79,31,173,62,213,209,53,82,88,74,98,23,182,50,41,248,49,34,75,22,1,197,125,94,234,1,13,63,162,142,201,40,110,59,252,241,92,154,80,217,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 636 ") {
    byte_vec_t msg { 9,12,151,28 };
    byte_vec_t sig { 160,105,150,203,37,154,125,132,5,79,220,74,127,251,214,91,165,91,41,100,97,32,122,158,28,141,170,148,54,126,121,123,101,21,176,233,68,55,62,32,3,182,168,65,197,66,225,246,107,99,57,84,233,102,23,143,219,119,200,111,243,138,17,171 };
    byte_vec_t pk { 3,83,115,200,161,231,81,205,147,27,165,163,57,101,47,220,210,132,109,24,161,185,163,181,36,204,166,113,132,129,155,116,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 636 ") {
    byte_vec_t msg { 8,184,159,149 };
    byte_vec_t sig { 133,164,76,177,217,142,149,117,74,189,252,226,244,14,252,140,41,185,25,142,138,116,33,226,169,170,184,51,244,42,200,36,109,251,79,105,172,66,39,207,62,221,169,10,24,56,189,59,149,5,241,74,45,214,185,216,123,181,248,112,186,168,92,110 };
    byte_vec_t pk { 3,13,213,59,67,203,191,73,50,180,216,185,211,214,68,228,111,147,20,29,149,117,214,28,96,48,197,249,55,194,227,203,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 637 ") {
    byte_vec_t msg { 53,78,91,246 };
    byte_vec_t sig { 224,54,252,79,66,171,123,79,22,152,210,196,134,72,86,148,214,210,121,177,70,52,58,203,100,177,140,76,65,104,94,41,112,29,81,33,249,207,1,30,67,86,226,131,5,170,112,58,250,8,208,222,41,112,43,5,163,106,251,187,227,76,190,250 };
    byte_vec_t pk { 4,192,244,25,49,63,210,109,26,55,146,53,148,8,67,243,175,251,37,187,241,46,170,108,66,22,219,39,14,224,211,63,57,96,198,149,242,46,62,49,17,182,64,212,162,227,205,15,63,132,140,170,215,81,221,226,195,181,72,70,99,161,98,176,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 637 ") {
    byte_vec_t msg { 26,54,144,121 };
    byte_vec_t sig { 164,102,91,62,197,156,1,153,84,123,127,51,46,130,242,58,182,210,82,124,174,27,1,107,170,126,129,152,216,60,161,194,166,165,196,94,226,191,56,251,219,190,108,201,252,28,95,126,132,210,182,196,176,89,130,223,182,45,147,145,120,221,17,80 };
    byte_vec_t pk { 4,219,103,25,20,151,133,200,137,176,234,12,4,53,214,27,169,159,149,211,220,228,196,74,113,232,27,195,110,81,199,160,192,132,214,102,222,214,137,121,218,206,137,49,217,255,147,254,10,7,11,99,17,104,180,140,174,44,218,227,87,34,8,226,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 637 ") {
    byte_vec_t msg { 215,181,149,82 };
    byte_vec_t sig { 175,213,142,63,185,44,111,134,168,217,135,135,119,98,147,70,24,141,30,60,56,27,178,236,2,89,208,43,168,117,179,119,223,66,122,179,174,63,216,205,51,91,125,245,139,171,30,8,2,127,252,97,135,234,170,31,29,237,10,147,157,161,45,53 };
    byte_vec_t pk { 2,13,187,61,88,224,96,10,215,24,203,11,19,196,3,67,246,199,55,59,224,90,44,49,244,57,126,206,19,35,113,183,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 637 ") {
    byte_vec_t msg { 127,209,44,124 };
    byte_vec_t sig { 219,168,86,243,32,28,108,127,191,202,153,117,15,154,249,224,30,216,52,239,241,226,100,219,1,32,5,200,145,24,139,154,86,47,209,142,193,44,239,226,109,22,141,126,14,179,221,231,122,231,243,34,225,140,242,146,25,114,20,235,29,24,185,119 };
    byte_vec_t pk { 2,20,63,250,183,51,90,225,210,182,53,42,177,234,81,218,202,213,234,236,247,113,79,115,86,66,233,146,245,97,227,70,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 638 ") {
    byte_vec_t msg { 106,7,206,95 };
    byte_vec_t sig { 82,161,30,195,19,152,129,27,172,203,80,10,25,15,127,108,228,159,35,197,114,122,118,70,112,205,237,48,211,200,132,172,68,168,125,166,143,21,229,230,47,151,179,31,93,114,158,2,43,130,96,133,131,234,255,253,219,64,77,248,12,200,72,54 };
    byte_vec_t pk { 4,8,215,64,16,77,173,78,139,5,145,189,155,107,136,154,21,139,82,207,249,185,159,201,189,43,52,236,132,224,5,238,1,106,114,4,9,54,119,104,175,102,108,231,7,79,101,230,194,62,4,171,195,161,175,96,151,232,123,255,219,130,84,255,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 638 ") {
    byte_vec_t msg { 57,113,228,233 };
    byte_vec_t sig { 118,106,212,218,87,71,8,82,175,235,232,229,12,193,158,104,41,54,194,219,217,179,230,230,208,254,38,19,118,11,185,226,109,188,123,80,61,19,33,110,237,70,112,78,213,207,159,66,67,248,116,158,41,151,238,150,26,148,38,182,110,213,132,96 };
    byte_vec_t pk { 4,32,44,121,246,178,45,104,8,59,231,113,156,88,235,214,137,189,48,217,142,61,213,35,69,172,15,174,143,24,41,168,0,105,189,134,64,24,7,82,107,227,155,157,197,193,99,190,56,2,39,181,147,215,124,113,186,223,171,136,105,75,229,10,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 638 ") {
    byte_vec_t msg { 76,116,174,213 };
    byte_vec_t sig { 140,108,87,58,180,109,31,104,208,221,128,103,9,196,143,159,22,141,156,148,40,224,247,146,25,222,225,65,2,253,193,120,39,252,113,207,99,52,138,22,84,136,252,123,175,77,228,189,203,58,149,50,30,10,104,35,33,163,116,132,253,45,160,132 };
    byte_vec_t pk { 2,190,147,149,186,192,213,175,31,81,66,15,45,27,162,12,189,193,29,131,136,5,100,43,54,197,62,207,138,221,146,39,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 638 ") {
    byte_vec_t msg { 61,166,144,167 };
    byte_vec_t sig { 219,208,251,80,96,192,194,69,24,230,181,79,51,53,249,96,142,191,35,233,124,35,247,106,125,175,125,205,37,36,192,27,25,78,55,157,196,8,121,39,18,128,194,157,160,204,181,96,70,123,60,228,23,211,186,59,139,105,142,175,229,205,51,92 };
    byte_vec_t pk { 2,112,108,98,145,86,216,240,165,26,151,40,228,114,103,155,29,22,165,255,170,140,96,48,150,217,144,204,126,77,73,246,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 639 ") {
    byte_vec_t msg { 146,92,85,84 };
    byte_vec_t sig { 204,73,19,105,36,233,49,234,42,254,195,106,151,147,57,4,82,220,135,161,72,25,103,196,127,26,93,98,56,70,10,64,226,165,179,46,1,207,130,13,10,44,222,170,117,117,101,168,195,235,187,157,39,252,53,159,54,212,81,104,104,72,215,182 };
    byte_vec_t pk { 4,204,113,94,47,251,255,58,5,32,246,123,239,200,245,217,78,235,188,33,250,102,201,205,57,75,52,102,65,37,152,144,90,13,67,54,243,66,66,138,210,87,40,202,243,77,175,176,244,253,57,238,94,96,53,129,70,248,54,0,158,163,118,115,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 639 ") {
    byte_vec_t msg { 190,214,15,179 };
    byte_vec_t sig { 157,21,48,186,164,45,60,84,182,156,254,102,169,27,56,163,66,122,87,232,17,75,193,150,95,73,79,198,237,207,121,217,82,184,175,143,188,187,98,97,139,114,221,139,112,155,28,161,234,190,50,156,45,228,158,43,137,106,197,180,254,244,154,223 };
    byte_vec_t pk { 4,223,191,0,211,77,17,225,153,7,128,94,194,98,201,33,73,41,220,193,57,212,241,95,92,8,224,181,85,166,203,237,226,180,135,123,96,153,139,194,161,143,9,171,215,166,162,2,217,127,47,59,68,159,207,24,165,30,182,14,133,93,250,201,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 639 ") {
    byte_vec_t msg { 63,100,95,51 };
    byte_vec_t sig { 71,127,206,175,216,240,112,112,240,123,153,242,15,48,106,64,56,182,180,219,46,35,16,233,55,63,127,158,78,133,205,117,254,207,123,144,167,49,62,6,230,45,213,56,245,245,173,1,38,186,58,146,19,150,174,102,195,77,232,38,20,216,185,198 };
    byte_vec_t pk { 3,102,223,24,33,95,152,85,127,140,79,157,229,228,18,162,142,67,218,32,63,230,25,95,80,7,228,227,218,143,135,249,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 639 ") {
    byte_vec_t msg { 58,125,43,199 };
    byte_vec_t sig { 30,151,163,239,173,232,224,232,65,179,53,100,205,54,72,91,108,232,79,225,160,152,199,238,35,139,236,85,223,21,134,71,75,247,164,70,35,135,91,28,193,121,217,68,117,14,96,8,115,118,133,207,203,156,243,74,201,86,124,2,13,193,212,16 };
    byte_vec_t pk { 2,45,138,179,60,68,254,112,118,30,185,177,8,145,18,38,46,0,89,172,156,198,172,84,130,42,133,55,241,190,145,235,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 640 ") {
    byte_vec_t msg { 35,56,26,165 };
    byte_vec_t sig { 150,252,191,41,74,48,239,9,31,174,165,169,48,111,232,244,36,163,180,214,245,163,207,123,171,186,61,101,252,198,144,110,194,25,91,80,19,104,152,186,91,190,136,111,113,243,71,194,251,125,146,123,141,217,38,27,19,17,201,159,155,240,135,101 };
    byte_vec_t pk { 4,27,61,217,181,64,119,151,134,213,81,45,100,246,35,210,225,176,139,51,147,4,152,174,198,153,186,71,1,101,97,132,169,122,161,75,234,22,102,110,171,222,191,213,20,207,229,145,157,88,53,88,104,174,29,92,201,122,92,140,17,71,225,210,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 640 ") {
    byte_vec_t msg { 164,161,165,8 };
    byte_vec_t sig { 196,219,242,227,72,116,109,80,128,56,139,222,180,14,165,6,42,166,129,91,29,36,25,26,66,226,3,46,164,29,238,219,58,186,176,56,92,43,55,8,34,14,87,126,147,89,129,204,195,15,104,170,41,27,132,151,37,19,54,84,176,0,117,78 };
    byte_vec_t pk { 4,60,107,230,83,95,48,90,172,117,53,126,75,157,160,202,151,209,207,39,88,47,13,118,242,191,122,113,156,123,226,147,15,207,110,184,164,31,205,191,90,182,135,228,193,41,61,233,191,230,147,249,123,164,189,253,169,245,172,254,254,6,52,87,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 640 ") {
    byte_vec_t msg { 174,69,59,126 };
    byte_vec_t sig { 126,118,211,66,76,17,59,100,200,102,0,118,174,242,106,1,0,45,2,208,97,223,42,151,40,59,55,222,34,56,94,51,59,36,57,92,12,241,233,105,39,125,178,58,71,30,212,17,126,52,201,117,39,55,71,90,182,235,156,40,222,203,249,170 };
    byte_vec_t pk { 2,182,235,19,206,169,11,71,202,84,211,219,84,64,41,80,89,253,151,123,67,207,228,201,75,77,93,177,46,156,53,137,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 640 ") {
    byte_vec_t msg { 52,211,30,183 };
    byte_vec_t sig { 103,111,127,191,208,146,127,131,253,32,176,146,230,5,73,103,45,126,205,164,245,136,239,166,49,122,180,107,221,68,224,144,112,141,92,77,56,165,43,222,89,43,72,117,212,161,30,94,237,64,100,177,61,174,132,230,122,131,183,152,238,250,249,127 };
    byte_vec_t pk { 2,28,241,229,86,77,251,250,37,26,242,235,130,158,217,130,149,20,95,10,137,18,68,48,128,57,66,61,168,0,41,98,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 641 ") {
    byte_vec_t msg { 249,68,5,248 };
    byte_vec_t sig { 184,245,64,192,92,4,124,220,81,173,75,183,144,163,192,163,81,251,47,168,208,189,47,99,103,171,186,142,202,133,49,242,228,81,173,41,212,185,86,212,232,197,18,23,16,231,115,11,215,46,109,38,138,117,139,14,232,37,121,165,234,130,236,59 };
    byte_vec_t pk { 4,158,223,83,58,105,133,184,233,126,96,92,190,4,5,197,68,148,125,254,30,146,82,48,244,134,121,6,93,51,58,33,60,148,193,238,237,19,244,187,84,36,130,215,178,63,217,195,188,52,63,57,137,108,79,122,25,101,20,176,200,237,138,64,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 641 ") {
    byte_vec_t msg { 219,253,249,182 };
    byte_vec_t sig { 32,124,82,111,214,17,12,102,75,245,13,33,237,228,33,153,156,91,229,192,239,178,108,14,240,142,170,12,177,51,70,38,203,192,29,233,61,121,139,19,12,236,252,43,49,30,104,222,50,128,243,150,212,111,67,90,157,103,156,240,229,229,165,210 };
    byte_vec_t pk { 4,68,121,217,175,143,252,178,244,133,107,113,147,3,104,169,83,6,247,68,72,152,85,168,68,86,243,145,105,37,144,175,240,26,32,25,120,241,15,22,174,46,42,244,22,205,201,91,41,3,212,106,172,235,118,18,151,149,146,182,244,149,236,195,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 641 ") {
    byte_vec_t msg { 171,167,24,123 };
    byte_vec_t sig { 190,151,242,217,184,67,245,22,152,8,145,210,62,180,185,243,86,83,119,149,171,49,183,213,104,141,126,155,125,90,165,180,105,9,153,53,160,110,147,250,171,135,218,34,177,31,177,214,31,36,148,102,223,211,28,172,181,41,53,79,24,15,232,94 };
    byte_vec_t pk { 2,84,188,70,247,132,225,30,167,169,45,154,37,15,127,132,202,56,219,17,218,97,106,67,34,234,122,16,93,165,22,229,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 641 ") {
    byte_vec_t msg { 200,77,152,196 };
    byte_vec_t sig { 193,31,240,71,249,242,68,137,115,101,77,124,107,12,79,236,253,234,102,146,54,67,84,245,132,150,160,220,92,74,194,50,101,91,46,3,95,210,53,101,29,191,244,14,168,109,86,237,8,38,57,113,26,14,153,185,86,42,71,219,122,99,93,73 };
    byte_vec_t pk { 2,17,229,105,153,65,92,142,73,23,227,108,20,16,69,116,19,118,171,236,196,119,112,73,89,125,63,82,221,237,41,165,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 642 ") {
    byte_vec_t msg { 104,167,74,245 };
    byte_vec_t sig { 41,86,41,101,211,172,87,2,97,101,31,118,21,190,153,77,4,154,78,190,199,253,213,227,33,19,232,125,184,54,117,131,234,225,232,42,3,190,143,137,222,0,247,160,192,8,193,125,144,51,230,20,232,145,168,26,108,86,249,240,242,232,149,241 };
    byte_vec_t pk { 4,242,98,138,95,244,58,83,57,106,36,189,26,132,72,145,7,103,151,77,116,224,14,81,208,54,154,175,133,198,198,153,33,15,237,84,12,68,133,131,24,132,23,231,126,52,61,187,206,61,25,13,121,13,97,170,237,112,214,27,100,93,170,165,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 642 ") {
    byte_vec_t msg { 4,139,110,152 };
    byte_vec_t sig { 13,150,227,21,168,44,39,215,30,173,225,171,153,80,124,0,10,114,9,56,150,157,253,3,25,142,205,158,116,118,126,35,215,226,175,46,56,8,111,146,90,127,83,166,196,72,67,183,7,65,96,73,47,190,133,137,162,149,118,88,243,236,176,91 };
    byte_vec_t pk { 4,186,131,144,150,11,227,120,114,164,14,15,245,1,27,167,134,193,185,250,239,244,209,90,132,153,213,200,161,67,25,205,33,84,255,130,31,157,32,254,48,228,192,219,210,130,11,76,121,66,44,13,245,23,179,230,125,171,92,236,142,40,159,75,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 642 ") {
    byte_vec_t msg { 180,226,66,25 };
    byte_vec_t sig { 117,227,140,84,126,133,37,132,98,184,187,139,44,2,91,12,125,249,226,108,218,71,76,197,116,106,66,183,191,175,185,91,168,95,62,131,223,237,102,15,172,2,168,97,224,160,154,139,21,246,186,251,52,164,38,7,214,164,152,20,85,245,129,172 };
    byte_vec_t pk { 2,182,234,120,35,84,52,103,70,101,239,117,210,255,229,65,6,130,209,116,51,246,181,170,89,69,90,25,188,104,206,154,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 642 ") {
    byte_vec_t msg { 41,94,44,102 };
    byte_vec_t sig { 119,234,239,255,27,8,1,191,124,149,103,121,141,59,164,48,243,56,14,34,134,41,241,213,98,54,43,104,151,85,110,95,107,212,70,36,3,168,26,214,194,36,221,113,149,148,64,7,16,156,140,82,68,157,94,106,125,208,189,136,114,108,227,211 };
    byte_vec_t pk { 2,98,35,65,240,115,147,154,39,124,28,241,179,196,52,107,110,93,155,164,37,131,76,187,65,195,22,35,131,174,63,86,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 643 ") {
    byte_vec_t msg { 65,180,236,55 };
    byte_vec_t sig { 171,53,229,211,90,154,95,34,28,195,197,42,5,254,8,1,233,137,44,216,102,17,222,34,137,43,176,15,233,170,91,216,242,168,246,19,192,114,119,188,202,253,11,43,46,135,101,42,65,246,34,117,81,71,110,223,107,158,67,203,133,159,94,194 };
    byte_vec_t pk { 4,30,54,17,3,165,120,187,60,243,131,0,30,51,101,39,42,17,138,221,237,204,8,96,242,217,110,21,147,245,27,43,68,92,61,90,214,22,150,163,197,221,95,253,239,153,181,214,49,12,108,64,234,65,48,176,152,66,170,64,57,22,254,95,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 643 ") {
    byte_vec_t msg { 162,205,235,247 };
    byte_vec_t sig { 38,215,24,176,93,226,20,98,86,196,181,6,73,190,235,209,35,161,88,11,172,56,52,66,216,78,92,206,140,74,149,254,26,129,148,196,209,214,171,244,32,26,88,123,237,138,232,45,152,24,153,225,163,22,238,134,21,184,10,21,218,139,245,75 };
    byte_vec_t pk { 4,124,27,156,80,23,177,69,150,243,48,97,253,2,162,148,183,192,241,73,111,83,130,47,210,196,133,89,254,100,232,73,6,64,246,151,32,64,121,158,206,76,251,159,139,222,171,103,194,25,15,90,75,56,188,150,113,161,7,176,20,188,248,128,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 643 ") {
    byte_vec_t msg { 45,19,200,108 };
    byte_vec_t sig { 152,36,141,128,64,224,179,181,81,149,199,35,206,90,238,91,248,54,226,40,99,7,202,93,78,219,229,183,187,72,84,236,175,139,149,50,18,177,131,159,15,158,65,211,251,7,51,170,156,158,100,81,33,84,196,110,150,11,66,218,236,191,19,207 };
    byte_vec_t pk { 2,7,188,206,84,157,15,7,170,160,0,77,209,241,251,232,194,104,134,81,232,22,103,16,154,151,240,58,194,39,6,84,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 643 ") {
    byte_vec_t msg { 111,20,109,211 };
    byte_vec_t sig { 176,126,155,244,90,187,233,161,195,188,73,217,8,130,163,86,191,121,90,71,163,178,77,113,63,67,27,95,120,203,66,36,7,200,53,224,135,198,127,237,110,35,83,176,144,233,156,178,140,94,41,79,215,223,81,34,151,127,116,16,37,112,122,70 };
    byte_vec_t pk { 2,255,139,92,21,249,124,163,10,105,214,119,192,198,168,7,10,105,175,132,226,107,84,82,152,84,208,220,173,22,198,154,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 644 ") {
    byte_vec_t msg { 119,54,241,227 };
    byte_vec_t sig { 129,114,87,93,203,192,230,21,38,64,220,235,56,223,23,207,65,120,56,65,226,0,51,187,239,244,127,30,164,170,79,72,107,58,200,55,22,90,1,104,27,115,169,123,86,253,138,7,79,17,154,141,46,111,104,165,255,243,181,54,210,225,99,150 };
    byte_vec_t pk { 4,70,194,44,45,55,117,204,134,77,58,240,174,80,88,84,187,89,100,97,164,208,33,112,218,119,2,249,224,209,7,233,127,220,153,119,7,198,136,172,211,86,112,226,240,134,122,184,246,113,130,111,234,11,45,106,168,5,194,104,154,126,16,72,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 644 ") {
    byte_vec_t msg { 71,189,54,251 };
    byte_vec_t sig { 43,79,207,251,233,104,171,230,198,149,185,139,149,7,136,133,194,51,133,45,49,157,128,249,73,67,86,170,24,60,14,0,56,127,188,168,115,180,196,39,235,180,179,218,116,18,244,245,241,179,217,212,27,105,145,66,164,109,114,64,51,172,198,41 };
    byte_vec_t pk { 4,249,199,84,211,241,32,35,197,209,176,61,121,76,221,197,184,105,15,8,163,134,159,122,119,100,246,167,176,244,76,242,16,12,94,248,26,20,212,145,43,19,1,243,50,184,94,81,206,209,55,248,240,133,195,46,203,125,151,47,176,39,145,208,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 644 ") {
    byte_vec_t msg { 220,143,216,68 };
    byte_vec_t sig { 180,213,120,40,131,115,226,88,50,213,56,176,177,102,190,126,209,221,100,17,28,199,180,127,116,247,240,199,86,26,239,90,225,76,104,55,250,19,58,174,127,32,181,88,201,205,167,152,208,96,166,48,220,19,40,175,214,254,90,176,194,52,240,53 };
    byte_vec_t pk { 2,61,84,162,228,152,97,35,3,155,128,45,59,67,157,121,125,207,91,101,107,90,200,250,203,227,254,183,175,56,190,161,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 644 ") {
    byte_vec_t msg { 124,163,34,160 };
    byte_vec_t sig { 84,167,63,155,21,195,212,109,184,72,34,220,87,250,40,18,206,232,55,239,242,27,89,12,57,171,49,87,139,0,223,74,10,254,189,51,168,50,23,67,162,54,149,16,92,224,237,1,234,173,8,26,235,35,159,90,235,111,229,112,42,241,28,191 };
    byte_vec_t pk { 2,44,206,206,156,250,184,68,20,175,204,3,91,74,30,231,184,170,133,188,179,106,197,5,109,36,207,176,218,182,57,237,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 645 ") {
    byte_vec_t msg { 154,220,37,3 };
    byte_vec_t sig { 136,19,86,197,162,40,21,37,252,50,103,210,104,143,230,221,31,153,47,236,181,242,30,65,220,169,196,52,109,97,19,191,111,242,163,245,214,77,4,33,120,125,164,21,241,147,101,135,239,73,37,186,128,166,227,175,37,170,202,186,99,237,126,1 };
    byte_vec_t pk { 4,157,174,135,17,21,130,217,11,85,165,56,137,182,27,54,3,249,225,202,0,21,169,1,5,155,61,13,163,222,97,142,40,113,109,191,11,9,52,88,81,94,234,61,174,20,228,24,243,243,111,162,7,77,133,149,225,48,159,62,145,146,127,77,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 645 ") {
    byte_vec_t msg { 177,175,90,124 };
    byte_vec_t sig { 204,122,10,152,73,70,175,40,188,68,110,211,190,100,70,27,42,32,106,155,114,74,153,178,65,46,181,85,150,251,254,172,185,118,170,161,84,104,77,116,105,141,40,30,15,227,205,233,229,192,123,163,247,38,161,230,174,138,173,87,92,132,83,249 };
    byte_vec_t pk { 4,130,241,176,8,101,51,229,114,135,114,13,232,230,239,207,146,37,179,19,58,38,217,249,73,141,45,64,220,32,203,85,105,62,77,233,242,36,101,12,188,8,11,101,179,100,70,13,250,247,221,124,225,207,213,117,176,221,85,195,142,211,100,132,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 645 ") {
    byte_vec_t msg { 113,128,129,240 };
    byte_vec_t sig { 180,252,198,78,115,55,1,84,81,183,248,130,106,132,228,15,8,24,105,128,63,80,3,175,99,32,196,149,124,199,231,76,65,156,252,100,244,119,82,191,181,171,227,172,46,14,12,127,58,200,37,64,34,58,48,243,22,131,138,145,148,122,123,140 };
    byte_vec_t pk { 3,85,103,109,7,152,219,114,75,85,120,98,200,195,58,50,53,34,92,13,7,0,160,92,188,245,253,72,1,78,201,23,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 645 ") {
    byte_vec_t msg { 131,130,204,1 };
    byte_vec_t sig { 123,107,123,130,169,117,129,152,181,248,208,63,75,202,214,187,164,129,243,212,140,0,126,112,88,106,182,249,1,4,68,0,121,126,115,184,191,250,68,179,72,23,191,203,179,218,189,35,164,155,66,37,47,194,16,70,7,59,123,142,60,248,51,236 };
    byte_vec_t pk { 2,237,31,46,207,63,182,233,185,99,218,132,39,53,209,186,100,72,176,67,216,157,108,168,144,169,175,31,248,38,236,137,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 646 ") {
    byte_vec_t msg { 123,163,39,237 };
    byte_vec_t sig { 231,71,192,163,87,20,213,154,172,174,80,69,35,183,160,206,103,39,27,222,167,62,119,193,34,69,191,196,192,249,122,122,189,25,158,187,5,67,255,54,202,51,121,108,251,20,152,46,168,202,177,126,102,233,150,114,107,207,196,74,197,66,14,149 };
    byte_vec_t pk { 4,186,152,193,37,137,255,66,219,201,248,60,45,135,141,215,206,43,209,84,18,198,60,182,149,192,29,4,53,188,164,6,44,194,188,198,113,107,143,196,61,101,187,103,157,134,44,52,57,127,59,199,201,213,120,157,68,67,104,14,19,9,126,124,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 646 ") {
    byte_vec_t msg { 153,221,74,128 };
    byte_vec_t sig { 138,165,121,20,75,89,231,116,232,183,14,239,102,195,104,46,237,60,234,184,149,67,225,115,211,231,104,79,190,237,230,153,125,91,230,138,40,184,151,212,147,185,135,19,151,208,40,41,22,115,159,223,220,101,117,79,73,87,251,57,235,178,147,32 };
    byte_vec_t pk { 4,44,213,223,115,209,36,75,218,18,141,5,29,152,195,7,245,33,134,39,201,252,212,132,10,151,167,101,237,241,221,81,125,220,159,103,132,239,175,147,5,167,72,167,49,206,66,60,182,150,119,210,105,169,66,43,82,45,33,44,254,236,55,234,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 646 ") {
    byte_vec_t msg { 177,255,111,195 };
    byte_vec_t sig { 26,128,97,217,103,166,127,124,124,108,95,189,126,117,235,122,214,116,231,188,152,118,181,99,141,74,101,187,62,116,179,136,242,73,204,100,90,147,161,150,136,143,149,47,148,242,125,152,40,135,193,173,84,226,45,67,23,160,19,65,227,122,92,115 };
    byte_vec_t pk { 2,35,67,90,212,32,153,110,183,162,90,10,139,85,153,13,35,165,35,116,93,94,204,82,162,140,218,180,124,58,69,190,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 646 ") {
    byte_vec_t msg { 211,215,58,235 };
    byte_vec_t sig { 169,11,211,157,239,112,104,179,113,154,114,249,5,177,167,20,163,146,164,190,153,101,118,47,132,228,147,229,15,8,225,229,57,154,48,40,13,252,139,225,182,213,188,76,163,212,238,49,147,137,73,204,235,132,111,83,7,232,11,27,55,204,217,27 };
    byte_vec_t pk { 3,147,134,80,220,182,235,156,175,156,197,24,129,242,33,13,153,210,51,154,117,181,41,3,252,1,48,78,143,238,26,8,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 647 ") {
    byte_vec_t msg { 179,194,207,188 };
    byte_vec_t sig { 14,89,59,27,36,190,196,249,225,21,99,74,29,195,195,27,73,172,3,231,112,178,136,95,61,91,6,92,211,242,131,20,125,120,35,59,85,162,213,168,93,6,66,171,224,41,110,6,192,37,216,43,244,253,196,159,122,247,217,11,19,17,8,249 };
    byte_vec_t pk { 4,243,80,50,111,61,112,223,140,233,115,133,52,37,92,94,177,127,229,62,62,67,36,159,111,210,5,132,103,252,203,13,31,48,177,0,132,66,116,146,84,224,245,149,205,12,232,183,144,67,119,75,2,234,182,216,233,112,255,241,17,88,31,130,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 647 ") {
    byte_vec_t msg { 160,39,208,166 };
    byte_vec_t sig { 229,252,237,127,113,109,169,63,191,95,197,118,177,153,65,96,4,223,60,70,49,134,215,68,227,90,184,53,10,217,10,158,121,122,34,189,25,203,91,150,194,235,191,147,152,102,63,79,245,111,131,48,179,37,220,111,92,13,252,102,5,161,147,89 };
    byte_vec_t pk { 4,98,18,239,18,118,41,173,129,50,98,98,58,23,106,13,72,39,184,1,63,61,73,144,17,64,21,243,174,93,141,119,129,61,123,71,120,203,193,225,77,59,249,21,152,83,192,115,223,210,107,166,189,243,54,95,56,179,25,29,95,105,221,218,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 647 ") {
    byte_vec_t msg { 112,164,189,189 };
    byte_vec_t sig { 153,11,192,151,248,31,156,163,251,239,225,215,193,121,40,227,102,202,67,98,7,110,118,130,250,241,80,122,70,49,114,234,102,78,89,239,192,35,143,121,27,212,219,254,55,225,214,74,30,56,0,215,7,4,73,6,107,217,2,16,156,243,19,93 };
    byte_vec_t pk { 3,5,43,84,75,128,196,93,69,21,6,198,121,0,197,7,160,3,38,9,19,117,56,47,57,97,104,71,212,29,148,53,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 647 ") {
    byte_vec_t msg { 34,113,57,120 };
    byte_vec_t sig { 2,147,154,156,222,160,30,182,188,186,5,218,142,217,49,110,18,143,37,75,63,77,156,148,190,188,31,145,164,236,166,24,24,88,113,254,90,225,171,130,174,72,207,146,136,173,244,236,149,195,28,240,25,243,125,1,18,15,214,154,37,170,118,53 };
    byte_vec_t pk { 3,200,65,33,48,73,8,35,201,25,172,142,85,227,229,50,63,130,9,251,204,233,172,173,2,42,248,101,236,108,37,172,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 648 ") {
    byte_vec_t msg { 185,225,117,164 };
    byte_vec_t sig { 26,164,151,14,194,133,135,200,174,220,237,153,243,99,9,29,44,101,94,158,53,51,241,178,171,151,45,149,157,209,36,70,186,93,68,224,3,163,105,248,108,71,171,133,63,43,129,33,53,160,112,109,89,40,94,80,59,14,217,170,175,146,71,106 };
    byte_vec_t pk { 4,85,65,72,41,49,201,80,87,231,155,238,15,250,6,243,214,211,72,82,49,161,189,97,213,48,245,104,215,190,239,46,68,116,65,51,47,76,16,47,247,195,58,40,13,16,31,116,150,218,70,22,102,188,179,161,34,69,151,181,222,97,164,164,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 648 ") {
    byte_vec_t msg { 3,143,113,129 };
    byte_vec_t sig { 184,183,131,4,156,105,232,223,22,174,1,226,91,224,219,33,53,25,130,124,159,20,152,188,81,139,208,23,1,23,24,113,219,204,238,22,125,79,181,93,133,246,37,187,150,233,135,220,51,246,93,245,247,10,246,111,43,25,195,45,204,39,143,168 };
    byte_vec_t pk { 4,19,195,215,47,47,223,213,156,192,30,214,112,207,111,105,54,80,177,75,165,114,140,180,161,210,205,24,59,181,68,54,102,133,78,154,38,250,124,228,145,144,225,146,231,78,233,59,29,75,243,247,37,221,160,255,1,8,55,213,91,161,240,120,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 648 ") {
    byte_vec_t msg { 71,213,207,114 };
    byte_vec_t sig { 173,181,39,106,42,217,242,23,190,128,186,70,83,204,148,152,222,34,60,75,154,56,116,135,172,87,125,133,78,161,230,73,129,205,158,198,58,12,140,146,128,194,100,105,202,47,57,224,240,89,6,48,33,8,37,173,102,236,253,125,14,1,142,162 };
    byte_vec_t pk { 2,53,197,106,222,247,15,75,250,193,190,14,150,223,222,11,200,179,189,163,132,82,52,20,105,197,175,15,75,152,212,136,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 648 ") {
    byte_vec_t msg { 113,98,139,146 };
    byte_vec_t sig { 25,223,153,31,96,79,84,51,158,168,196,80,152,125,151,50,181,35,28,79,200,240,155,242,174,160,14,149,97,58,244,0,136,210,255,101,193,128,12,209,43,140,73,175,59,211,223,136,213,54,222,27,62,118,100,237,47,191,246,57,60,73,175,36 };
    byte_vec_t pk { 2,77,148,71,233,112,136,98,180,66,76,68,44,179,218,208,84,230,86,152,82,137,163,134,133,241,72,99,217,175,181,68,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 649 ") {
    byte_vec_t msg { 220,12,124,56 };
    byte_vec_t sig { 66,109,143,58,119,109,186,185,224,182,239,173,239,175,111,221,180,140,10,10,240,141,217,57,179,213,147,7,70,172,127,230,6,75,215,117,65,88,135,127,137,254,101,197,59,244,194,86,243,134,156,49,98,244,66,62,251,110,239,128,109,230,209,187 };
    byte_vec_t pk { 4,132,243,133,210,185,157,85,95,136,252,131,35,147,195,67,149,141,178,22,211,220,185,51,234,183,17,80,188,145,25,160,235,114,179,120,212,11,169,139,43,85,229,60,75,78,54,156,33,36,24,120,125,50,229,9,180,195,132,183,9,175,109,132,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 649 ") {
    byte_vec_t msg { 103,240,73,61 };
    byte_vec_t sig { 106,174,157,30,219,82,126,203,251,29,58,56,16,182,246,108,196,252,183,68,65,150,126,108,111,231,110,177,116,209,248,115,89,161,100,171,117,249,110,207,125,195,162,190,243,174,210,228,26,158,45,71,129,36,3,168,16,46,224,130,163,38,171,72 };
    byte_vec_t pk { 4,254,97,148,204,2,231,161,78,207,123,116,182,114,69,165,218,165,197,32,235,216,201,183,30,26,202,214,22,250,185,49,18,195,123,166,176,238,182,147,226,66,16,77,225,135,45,36,49,16,239,104,18,151,131,83,20,156,231,146,15,175,158,26,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 649 ") {
    byte_vec_t msg { 233,140,182,193 };
    byte_vec_t sig { 192,105,102,182,222,147,253,210,141,155,34,28,219,182,79,186,225,51,103,15,169,6,238,152,152,91,85,0,125,35,67,118,34,170,52,183,220,245,207,131,142,134,130,159,27,43,254,210,23,146,142,10,2,229,177,122,239,83,203,164,188,186,110,56 };
    byte_vec_t pk { 3,50,4,92,124,41,23,103,248,5,190,168,75,239,231,181,29,125,48,100,38,200,222,118,41,52,210,85,141,25,145,197,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 649 ") {
    byte_vec_t msg { 166,135,79,84 };
    byte_vec_t sig { 31,180,253,225,113,67,3,241,13,168,121,116,98,239,152,107,158,21,177,62,194,10,107,28,55,126,169,128,161,179,109,118,123,36,242,179,30,128,130,48,43,106,237,214,92,48,196,91,252,111,209,197,201,165,123,58,107,116,50,63,85,195,103,195 };
    byte_vec_t pk { 3,250,227,233,14,9,142,141,247,193,110,98,77,212,138,108,212,116,162,59,55,72,69,130,25,162,168,40,96,54,7,22,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 650 ") {
    byte_vec_t msg { 170,92,223,246 };
    byte_vec_t sig { 243,202,103,236,197,140,250,80,169,38,241,176,158,127,13,162,122,9,38,74,131,81,204,65,194,138,221,183,78,29,21,62,221,154,197,127,246,73,1,166,138,191,12,96,79,235,119,219,131,213,243,33,31,184,155,127,246,156,181,154,21,171,49,133 };
    byte_vec_t pk { 4,201,50,133,95,83,175,136,192,103,233,20,41,245,138,29,213,223,64,36,69,95,240,178,242,57,149,84,99,122,127,252,23,30,76,111,156,68,241,228,162,1,40,179,129,73,84,55,213,26,235,81,228,57,70,122,231,18,39,79,254,155,106,74,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 650 ") {
    byte_vec_t msg { 237,189,162,59 };
    byte_vec_t sig { 99,46,92,224,234,88,89,251,93,173,252,220,95,1,176,1,9,135,45,226,239,11,60,82,207,213,22,34,43,141,185,73,10,251,107,119,184,239,70,200,13,144,102,99,205,24,219,63,107,140,114,26,109,145,229,135,200,97,171,157,68,121,93,164 };
    byte_vec_t pk { 4,81,84,252,48,199,246,113,191,112,21,94,180,165,7,205,132,174,116,1,212,166,162,227,9,74,17,112,2,235,136,50,217,198,140,140,19,244,33,45,112,241,220,146,214,210,88,253,19,42,38,74,239,189,45,118,76,86,32,195,164,198,2,243,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 650 ") {
    byte_vec_t msg { 181,136,152,19 };
    byte_vec_t sig { 173,122,14,102,67,198,94,70,10,89,29,162,186,85,75,12,138,153,109,183,243,163,221,195,191,61,209,42,149,69,14,140,254,12,100,69,160,30,197,170,108,160,233,134,247,219,109,156,56,177,174,108,245,97,113,21,150,38,103,4,6,247,46,114 };
    byte_vec_t pk { 3,111,131,170,248,17,21,210,197,215,24,191,139,9,62,33,99,10,50,235,227,109,73,242,70,58,233,52,203,134,29,186,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 650 ") {
    byte_vec_t msg { 235,42,19,43 };
    byte_vec_t sig { 233,215,97,202,78,203,147,97,208,5,101,57,18,219,84,147,70,160,209,202,110,78,61,78,58,145,89,171,162,65,135,244,87,120,38,103,183,74,242,231,126,243,130,82,140,179,6,218,42,24,208,23,172,211,210,116,62,63,94,54,246,93,176,195 };
    byte_vec_t pk { 2,187,69,251,216,91,165,53,94,16,55,249,202,212,249,28,66,55,38,231,93,158,102,48,24,249,221,136,213,76,6,178,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 651 ") {
    byte_vec_t msg { 176,218,108,213 };
    byte_vec_t sig { 87,123,185,39,228,48,183,73,145,16,174,18,56,67,76,196,19,210,98,86,228,233,174,50,69,188,11,104,165,146,142,242,118,43,210,219,10,91,155,149,153,27,33,167,14,121,209,231,242,0,185,20,33,250,185,6,244,249,193,136,4,161,87,61 };
    byte_vec_t pk { 4,215,221,162,204,255,13,207,48,30,61,47,128,231,227,173,122,55,169,212,159,76,108,55,81,111,245,60,215,63,74,43,126,253,233,183,253,234,71,212,1,54,135,253,63,196,75,167,103,245,36,105,1,231,226,220,122,94,146,86,155,75,251,250,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 651 ") {
    byte_vec_t msg { 115,16,152,170 };
    byte_vec_t sig { 25,92,6,45,208,124,170,231,216,60,78,192,242,37,138,131,202,107,169,58,246,129,181,45,83,16,128,38,240,54,32,254,154,162,181,49,119,176,107,199,81,116,78,72,198,116,170,36,96,112,139,182,37,130,80,210,15,248,56,166,19,150,54,221 };
    byte_vec_t pk { 4,193,226,95,217,191,68,106,86,10,42,60,253,100,63,121,199,84,119,138,56,211,194,67,63,237,97,114,253,230,27,143,142,104,65,68,85,250,28,242,166,75,66,76,130,12,236,192,14,234,111,247,229,175,110,54,197,67,50,201,227,141,74,203,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 651 ") {
    byte_vec_t msg { 190,31,110,199 };
    byte_vec_t sig { 76,3,158,100,250,173,243,19,169,17,106,27,202,147,81,151,9,226,46,43,236,160,161,244,104,235,221,158,94,226,177,237,128,67,249,222,107,183,47,35,227,145,89,186,237,94,129,214,121,133,238,205,245,103,175,87,45,81,150,39,76,213,186,246 };
    byte_vec_t pk { 2,7,123,142,230,71,50,35,210,238,148,53,123,212,88,69,56,26,81,140,139,23,2,249,255,143,47,179,21,74,44,108,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 651 ") {
    byte_vec_t msg { 37,59,30,118 };
    byte_vec_t sig { 230,165,56,64,233,60,165,181,249,176,217,137,96,139,203,192,75,243,112,52,75,252,66,24,81,164,26,179,70,212,97,200,41,151,109,163,242,88,151,56,45,50,69,231,5,190,103,0,176,89,134,173,22,62,73,66,99,155,165,128,160,72,146,61 };
    byte_vec_t pk { 3,66,65,120,136,16,94,9,139,158,59,32,22,34,136,67,85,171,210,239,72,33,76,161,208,98,124,48,185,247,98,89,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 652 ") {
    byte_vec_t msg { 65,49,201,109 };
    byte_vec_t sig { 96,140,30,250,129,225,188,186,240,42,79,68,49,8,194,254,87,62,40,211,47,157,15,85,162,161,70,185,59,96,163,87,109,208,11,11,239,122,235,166,32,222,1,46,79,255,100,163,66,23,5,226,106,149,139,218,18,239,143,179,102,123,115,217 };
    byte_vec_t pk { 4,62,140,246,155,75,112,78,205,66,52,175,231,247,180,180,44,42,131,182,236,196,0,36,22,253,70,95,245,74,86,200,87,94,234,177,40,97,223,17,182,81,231,30,241,85,80,124,255,174,85,18,46,110,71,235,3,183,77,236,15,94,193,141,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 652 ") {
    byte_vec_t msg { 116,116,236,127 };
    byte_vec_t sig { 177,52,71,238,75,83,218,215,57,157,127,50,0,213,180,115,192,77,159,161,20,227,109,133,106,40,136,245,243,246,30,25,2,218,122,198,144,78,88,169,139,10,252,156,130,158,165,185,111,230,187,48,161,54,118,106,224,86,45,7,83,236,76,237 };
    byte_vec_t pk { 4,215,233,245,196,192,27,198,61,43,23,49,176,3,16,64,138,253,101,192,192,1,185,84,181,96,170,198,170,46,99,130,22,233,185,142,48,190,254,165,220,205,181,191,66,240,72,245,222,218,26,215,208,249,153,110,255,171,207,53,31,169,44,234,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 652 ") {
    byte_vec_t msg { 207,219,239,124 };
    byte_vec_t sig { 52,83,17,32,188,88,25,150,179,161,101,156,95,201,25,181,26,194,40,112,117,153,235,3,234,176,73,166,52,111,42,145,128,39,161,218,77,9,152,118,34,91,159,96,12,60,165,0,190,97,199,151,15,248,175,193,68,35,197,89,99,65,178,98 };
    byte_vec_t pk { 2,94,142,154,186,106,218,186,178,91,89,76,103,236,37,70,235,43,3,152,64,169,67,211,13,177,52,136,128,49,57,46,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 652 ") {
    byte_vec_t msg { 213,185,124,30 };
    byte_vec_t sig { 35,179,147,204,76,129,220,219,175,195,187,165,14,83,234,26,191,4,195,57,199,115,1,179,132,33,113,22,93,202,15,225,54,40,222,193,228,62,157,17,146,0,66,2,20,244,90,191,21,151,186,225,73,229,201,149,76,22,1,215,230,52,8,194 };
    byte_vec_t pk { 3,104,100,66,134,111,142,24,161,90,73,30,7,88,105,119,21,185,226,151,34,46,124,79,238,46,28,130,127,218,254,177,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 653 ") {
    byte_vec_t msg { 147,197,165,46 };
    byte_vec_t sig { 116,200,237,242,26,64,20,14,40,254,176,116,158,143,94,55,25,102,39,176,94,147,103,9,44,61,98,48,189,70,211,91,93,169,37,189,6,242,24,218,222,148,34,203,93,150,94,68,175,65,68,12,232,188,116,134,139,209,39,87,9,83,240,71 };
    byte_vec_t pk { 4,143,54,196,128,106,226,5,104,69,249,55,211,21,100,122,166,248,208,175,94,104,208,59,75,32,183,66,157,28,81,39,91,151,116,11,213,39,239,92,98,84,219,229,154,153,244,169,181,138,98,6,43,156,122,1,202,96,35,93,209,113,243,6,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 653 ") {
    byte_vec_t msg { 252,82,247,38 };
    byte_vec_t sig { 84,238,21,59,152,52,200,145,3,46,69,204,166,146,17,227,198,253,192,254,153,134,211,33,213,71,138,24,170,162,202,140,7,104,235,70,32,176,107,224,58,237,42,64,205,213,198,177,77,51,8,53,186,82,121,152,47,96,73,163,220,219,234,53 };
    byte_vec_t pk { 4,102,105,157,71,180,226,229,239,97,148,91,225,30,253,212,120,222,27,182,27,139,102,9,158,59,85,139,139,123,252,85,50,183,28,222,175,27,87,208,194,153,151,53,160,129,32,97,166,225,86,225,129,202,93,152,63,89,104,132,172,46,194,215,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 653 ") {
    byte_vec_t msg { 145,144,172,64 };
    byte_vec_t sig { 110,172,2,249,234,39,253,24,200,225,178,119,11,149,74,46,96,247,172,237,218,174,199,214,96,15,75,148,37,91,133,51,96,118,245,95,245,165,228,119,9,70,46,206,184,252,39,71,21,21,240,162,34,50,89,168,31,88,148,127,244,237,157,240 };
    byte_vec_t pk { 3,61,16,82,241,176,147,248,21,238,202,1,195,241,127,63,78,127,5,139,121,60,142,215,119,72,176,54,10,33,225,170,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 653 ") {
    byte_vec_t msg { 193,97,85,115 };
    byte_vec_t sig { 82,59,237,57,3,107,145,176,111,66,172,89,233,154,168,118,247,150,135,115,75,134,215,82,190,198,173,53,29,51,237,163,231,187,52,144,122,224,200,177,142,171,66,206,102,17,92,229,213,38,75,156,42,143,46,33,21,245,166,26,59,37,252,76 };
    byte_vec_t pk { 2,53,235,1,187,7,178,236,47,193,230,236,183,205,48,135,181,240,143,239,113,103,140,201,130,132,109,195,233,39,241,101,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 654 ") {
    byte_vec_t msg { 168,234,197,105 };
    byte_vec_t sig { 86,147,27,139,137,239,29,199,47,120,213,212,92,138,226,107,205,66,47,39,96,197,34,7,240,210,109,92,237,32,39,69,138,200,223,78,126,195,26,229,127,185,93,229,139,179,139,73,57,79,133,148,189,48,164,84,26,82,105,91,129,177,88,218 };
    byte_vec_t pk { 4,56,53,85,221,219,55,184,238,254,72,46,151,7,255,180,34,186,81,34,205,222,24,222,174,187,63,76,185,104,21,17,45,253,72,185,131,196,120,128,103,26,60,157,90,137,81,77,94,206,208,30,183,26,246,249,84,191,148,252,167,5,92,17,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 654 ") {
    byte_vec_t msg { 133,206,10,213 };
    byte_vec_t sig { 89,144,253,210,177,255,130,45,107,249,224,113,235,168,135,210,155,76,241,223,107,105,64,147,117,84,152,22,49,25,69,82,245,102,26,117,6,86,78,108,92,131,202,25,244,247,236,52,60,136,34,186,46,85,207,73,219,94,252,167,187,142,167,85 };
    byte_vec_t pk { 4,155,174,179,142,88,96,82,117,172,81,9,255,87,205,234,35,37,239,119,54,161,210,66,61,25,205,40,132,205,77,127,27,137,68,131,115,139,150,242,210,185,87,123,88,234,115,212,212,213,237,63,146,249,157,168,250,153,12,253,4,36,209,231,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 654 ") {
    byte_vec_t msg { 13,75,45,147 };
    byte_vec_t sig { 132,198,32,136,160,28,140,55,205,108,52,204,143,212,211,238,226,229,20,94,18,79,162,216,201,104,107,20,253,248,66,99,96,197,176,85,177,156,48,174,149,248,11,190,226,163,92,87,235,225,109,242,35,161,55,99,97,193,46,35,139,188,18,167 };
    byte_vec_t pk { 2,29,164,209,203,129,56,223,178,4,36,36,229,226,1,14,230,13,202,122,239,242,203,128,251,177,157,134,137,253,213,128,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 654 ") {
    byte_vec_t msg { 155,132,26,251 };
    byte_vec_t sig { 8,116,236,22,15,116,109,149,159,136,169,116,172,56,205,114,126,126,40,77,5,72,32,30,70,22,190,252,222,230,12,253,171,217,59,107,150,248,138,80,32,248,20,72,175,221,196,210,232,109,42,122,208,20,102,74,22,44,0,138,108,203,47,67 };
    byte_vec_t pk { 3,129,223,232,47,182,183,128,62,187,136,54,214,51,145,222,240,70,127,74,91,55,184,247,165,89,18,2,143,67,14,228,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 655 ") {
    byte_vec_t msg { 124,103,186,206 };
    byte_vec_t sig { 74,184,255,10,14,45,242,31,16,205,91,180,217,251,123,209,127,252,33,254,230,80,100,203,116,153,67,210,200,54,232,64,57,151,123,17,0,222,186,42,53,6,73,143,87,229,13,148,232,187,247,143,64,173,45,122,153,173,204,153,158,223,7,145 };
    byte_vec_t pk { 4,102,115,82,118,139,249,19,116,209,179,32,136,228,170,146,91,124,249,191,222,152,51,202,126,24,186,245,221,37,182,61,165,152,140,76,196,216,112,238,233,179,207,73,26,159,198,89,200,172,167,140,138,118,167,92,63,73,4,40,103,108,44,152,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 655 ") {
    byte_vec_t msg { 87,97,137,129 };
    byte_vec_t sig { 135,45,71,124,234,149,35,212,197,104,225,46,205,185,222,107,36,24,157,19,230,232,22,60,25,161,176,12,12,42,99,110,74,70,137,13,193,39,215,106,87,92,46,205,19,194,3,5,92,187,57,174,176,158,217,146,44,89,23,227,55,162,255,26 };
    byte_vec_t pk { 4,122,193,157,134,127,48,44,90,19,2,86,169,248,63,48,55,92,203,68,132,221,38,4,158,215,22,81,185,214,248,131,176,80,193,22,205,174,47,34,113,202,109,254,63,13,60,115,231,37,188,5,8,197,89,122,126,152,168,155,40,251,196,150,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 655 ") {
    byte_vec_t msg { 251,89,245,147 };
    byte_vec_t sig { 196,206,145,0,19,98,76,69,94,241,253,67,153,56,73,181,141,238,18,141,107,224,51,225,140,123,252,143,181,194,167,105,243,36,132,81,46,207,80,59,115,94,173,208,36,210,67,121,128,173,253,90,107,225,173,67,100,208,227,61,220,94,78,176 };
    byte_vec_t pk { 3,117,245,95,141,83,63,241,174,44,77,108,43,54,31,199,10,55,254,124,132,126,112,246,81,79,250,126,131,130,12,27,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 655 ") {
    byte_vec_t msg { 78,221,165,82 };
    byte_vec_t sig { 52,252,92,51,121,180,145,87,201,201,189,4,20,150,175,140,8,39,238,38,116,12,211,218,156,35,129,176,237,249,230,65,236,97,57,201,55,181,190,147,130,109,18,68,47,230,212,20,95,82,162,54,115,47,204,62,83,116,124,118,152,62,115,31 };
    byte_vec_t pk { 3,91,199,145,52,136,142,46,16,109,96,41,113,137,145,240,215,253,80,45,235,158,245,48,85,58,35,73,242,56,110,0,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 656 ") {
    byte_vec_t msg { 172,198,152,181 };
    byte_vec_t sig { 128,186,137,80,127,201,57,33,127,157,234,223,134,18,53,182,130,82,25,114,236,152,144,122,214,235,114,46,226,81,38,74,51,113,18,17,194,138,217,129,5,169,108,208,74,166,164,221,111,163,36,174,179,75,71,239,182,137,254,162,105,17,198,210 };
    byte_vec_t pk { 4,50,104,108,112,142,139,46,192,227,135,60,0,190,80,151,90,247,208,194,201,183,166,62,48,126,184,8,131,49,4,196,124,181,208,173,226,4,174,19,0,146,55,241,22,112,18,124,20,253,151,95,233,217,251,124,38,197,207,167,59,241,199,177,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 656 ") {
    byte_vec_t msg { 131,41,174,11 };
    byte_vec_t sig { 130,162,177,114,226,242,243,230,202,249,11,248,107,174,121,126,186,246,20,215,45,45,24,180,227,40,23,193,1,172,39,121,162,244,219,121,243,116,68,29,147,229,205,100,213,129,204,153,102,117,222,244,118,83,227,203,98,96,70,156,213,28,3,135 };
    byte_vec_t pk { 4,148,27,13,230,37,128,126,67,195,151,66,137,5,218,232,185,234,209,235,83,16,14,110,65,181,62,80,177,179,159,22,67,232,179,25,239,66,196,55,139,13,22,201,78,67,235,222,190,249,64,172,13,255,192,49,208,121,255,122,56,56,180,19,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 656 ") {
    byte_vec_t msg { 33,18,39,149 };
    byte_vec_t sig { 174,59,7,137,42,246,110,94,223,51,167,170,95,184,100,5,214,42,82,251,217,138,181,75,37,119,22,104,135,172,12,205,180,194,252,115,51,236,79,97,222,42,192,198,27,245,235,115,1,86,13,147,11,181,112,31,58,14,93,127,120,210,20,166 };
    byte_vec_t pk { 2,227,156,110,91,115,103,52,73,245,193,33,192,66,98,216,186,188,8,46,4,214,121,79,102,134,37,107,120,182,217,213,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 656 ") {
    byte_vec_t msg { 110,147,255,40 };
    byte_vec_t sig { 172,172,73,10,165,49,198,146,135,231,90,225,90,210,29,190,169,180,59,183,93,104,129,50,106,208,60,241,36,189,53,125,203,65,206,196,232,187,0,131,240,162,14,179,47,235,217,202,176,115,111,36,228,139,97,224,232,27,184,41,103,22,19,151 };
    byte_vec_t pk { 3,31,248,140,240,147,196,11,37,73,148,105,49,25,99,236,136,243,150,177,128,45,52,232,148,247,112,213,143,11,209,64,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 657 ") {
    byte_vec_t msg { 54,14,87,86 };
    byte_vec_t sig { 77,64,176,234,3,245,145,75,49,89,188,56,127,209,138,218,246,155,228,26,186,72,117,212,6,28,255,33,57,33,159,77,56,214,214,241,229,49,199,232,142,230,102,27,201,122,78,235,197,24,169,197,128,190,235,221,97,55,177,148,194,187,73,177 };
    byte_vec_t pk { 4,3,6,24,219,39,13,82,30,81,78,248,92,197,11,198,151,255,92,229,164,190,12,88,104,14,230,225,17,106,144,190,201,237,160,6,157,145,106,181,6,67,134,70,186,0,69,145,123,146,149,75,240,177,157,222,19,217,77,230,46,3,151,66,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 657 ") {
    byte_vec_t msg { 104,98,121,241 };
    byte_vec_t sig { 20,253,202,241,219,75,49,47,135,183,58,237,98,46,134,220,149,77,145,170,249,103,76,69,187,220,148,81,50,160,199,219,91,40,58,203,157,15,25,22,181,79,24,167,173,100,27,41,10,137,174,201,100,147,108,121,105,106,214,97,248,205,104,16 };
    byte_vec_t pk { 4,225,86,37,161,103,0,24,60,162,152,5,191,157,238,202,16,142,249,217,29,21,34,73,21,155,230,49,71,88,115,179,181,153,144,51,55,59,31,80,161,94,97,57,182,137,11,126,225,118,192,235,116,80,98,222,77,157,236,45,17,133,239,161,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 657 ") {
    byte_vec_t msg { 192,43,91,27 };
    byte_vec_t sig { 158,21,200,122,167,22,100,170,185,178,96,169,48,65,86,2,69,202,177,14,86,13,224,57,152,24,22,139,101,99,170,53,95,241,12,231,72,18,11,102,202,64,66,251,194,186,206,207,185,195,50,230,111,7,73,199,92,218,227,73,224,61,234,120 };
    byte_vec_t pk { 3,47,144,45,63,71,235,72,101,250,252,141,57,4,78,192,133,152,38,6,191,35,93,17,69,156,196,249,72,185,160,126,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 657 ") {
    byte_vec_t msg { 220,190,157,125 };
    byte_vec_t sig { 123,69,238,174,223,156,134,175,240,12,105,135,29,5,113,55,21,35,81,105,131,143,43,176,87,83,76,15,118,180,125,239,148,159,209,130,9,132,245,139,60,85,221,12,40,196,14,83,220,68,228,187,224,110,5,75,250,125,193,225,203,132,200,184 };
    byte_vec_t pk { 3,133,221,225,106,206,59,110,255,220,177,12,52,96,113,3,176,224,234,143,65,30,172,13,253,37,231,188,78,154,97,174,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 658 ") {
    byte_vec_t msg { 8,51,74,54 };
    byte_vec_t sig { 17,69,69,75,201,45,40,120,19,56,116,35,224,14,239,139,115,87,5,41,90,220,116,226,201,248,93,162,158,105,160,163,54,77,157,63,239,49,247,67,213,211,151,146,89,168,125,170,169,186,106,80,236,246,48,109,27,232,9,164,210,185,41,129 };
    byte_vec_t pk { 4,155,177,180,61,232,168,232,28,210,86,169,157,160,119,137,24,17,246,35,74,43,144,253,191,37,5,160,83,34,196,163,36,122,160,205,85,238,53,2,87,102,39,128,251,160,161,224,236,58,203,13,108,192,114,189,74,241,28,133,152,180,186,173,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 658 ") {
    byte_vec_t msg { 36,94,39,52 };
    byte_vec_t sig { 23,39,101,74,233,183,163,99,250,112,21,91,244,41,36,117,152,231,145,76,183,166,163,159,122,164,211,59,228,174,98,1,197,216,250,14,210,132,55,129,239,45,178,176,102,69,36,167,127,113,246,67,246,40,30,199,146,38,125,217,86,228,233,220 };
    byte_vec_t pk { 4,246,55,47,235,1,207,114,165,32,49,47,131,49,24,121,101,175,88,111,136,12,129,245,26,114,110,45,249,26,184,175,76,43,137,98,25,83,62,184,251,33,220,75,65,48,190,31,41,88,4,119,96,233,205,11,124,0,250,77,50,232,112,173,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 658 ") {
    byte_vec_t msg { 117,234,153,140 };
    byte_vec_t sig { 90,174,133,19,160,176,69,164,255,246,129,139,30,237,231,206,39,189,37,31,198,20,44,241,6,67,56,57,22,212,107,84,63,230,22,209,67,214,105,134,121,60,197,168,93,202,207,107,241,46,28,204,103,234,222,173,91,129,46,45,240,170,10,157 };
    byte_vec_t pk { 3,155,169,247,164,61,191,99,237,232,54,50,14,56,31,3,240,253,14,147,232,46,92,14,235,94,42,166,39,18,148,157,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 658 ") {
    byte_vec_t msg { 38,47,75,18 };
    byte_vec_t sig { 88,34,245,65,209,181,13,78,39,44,117,34,60,252,165,248,183,129,16,203,254,245,51,101,190,248,122,94,104,166,122,98,214,167,236,144,73,105,45,10,96,239,111,90,160,35,156,235,49,127,115,248,153,234,173,219,16,213,230,125,105,61,121,185 };
    byte_vec_t pk { 2,50,211,31,205,178,99,161,74,187,248,22,27,166,33,180,192,76,190,131,27,20,88,152,35,183,4,86,1,248,28,184,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 659 ") {
    byte_vec_t msg { 203,122,59,171 };
    byte_vec_t sig { 74,55,208,69,140,87,100,159,3,184,142,219,176,85,57,12,191,90,87,187,54,148,127,177,12,126,71,39,51,50,93,89,101,199,0,239,188,233,191,2,60,161,246,185,119,143,169,80,9,248,121,10,3,75,54,74,178,21,149,25,125,103,194,53 };
    byte_vec_t pk { 4,208,206,5,82,235,18,57,248,200,6,141,87,114,202,103,207,60,2,75,234,18,45,57,23,242,33,109,166,65,251,222,31,136,148,161,236,238,145,235,94,18,114,24,120,120,54,0,73,144,69,43,45,187,122,233,117,134,54,184,229,243,242,102,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 659 ") {
    byte_vec_t msg { 200,11,94,125 };
    byte_vec_t sig { 126,19,170,196,194,88,83,66,241,28,73,18,5,84,99,190,32,32,93,54,105,192,163,102,204,200,253,137,154,255,216,59,57,230,171,98,199,76,43,193,2,246,98,13,183,112,134,49,20,217,202,165,55,178,107,58,188,168,39,18,255,190,151,12 };
    byte_vec_t pk { 4,189,190,43,98,13,122,196,110,15,197,155,106,221,214,185,222,177,9,50,1,116,219,5,154,189,202,10,56,255,127,66,91,20,89,60,64,96,249,232,140,167,148,15,167,213,68,146,141,54,50,216,162,229,39,91,40,169,166,44,223,110,171,252,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 659 ") {
    byte_vec_t msg { 133,83,188,102 };
    byte_vec_t sig { 241,91,170,60,5,251,218,149,21,34,55,225,255,239,123,51,133,64,228,177,198,6,108,192,225,18,125,15,103,93,141,72,194,41,36,115,19,44,10,45,111,214,146,217,182,84,70,254,20,125,146,250,86,250,211,174,21,70,7,151,74,83,185,248 };
    byte_vec_t pk { 3,187,214,53,196,83,211,105,192,48,98,23,36,226,201,151,244,96,191,21,20,17,251,141,159,34,214,64,229,163,4,82,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 659 ") {
    byte_vec_t msg { 70,163,75,228 };
    byte_vec_t sig { 41,172,75,211,53,33,140,29,38,141,96,216,71,35,204,235,214,82,116,72,198,117,90,252,167,160,169,135,193,172,241,215,202,30,110,104,170,104,105,149,201,71,99,223,125,132,231,153,228,133,32,124,31,102,122,18,222,67,95,90,114,30,148,29 };
    byte_vec_t pk { 2,72,6,252,254,24,147,85,160,139,255,15,238,30,94,51,45,255,192,126,153,54,161,81,128,193,201,70,3,227,145,60,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 660 ") {
    byte_vec_t msg { 44,154,186,113 };
    byte_vec_t sig { 107,9,159,166,183,107,151,138,197,58,108,172,251,93,248,207,87,120,235,209,15,56,147,38,225,5,175,234,139,45,182,225,101,141,227,83,217,70,185,190,175,20,43,214,123,85,74,154,12,133,72,33,122,250,248,197,21,228,18,149,126,152,130,150 };
    byte_vec_t pk { 4,194,179,86,17,137,43,212,244,104,224,30,164,19,68,154,204,122,138,253,90,227,67,114,245,55,178,1,248,113,23,216,172,44,126,106,31,213,10,14,12,205,185,219,104,171,252,191,249,63,181,11,34,206,93,57,137,124,2,121,16,249,241,88,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 660 ") {
    byte_vec_t msg { 183,66,14,67 };
    byte_vec_t sig { 200,229,105,42,167,88,131,71,156,108,252,102,127,217,13,70,55,0,90,177,255,165,12,106,15,9,85,4,73,226,224,168,81,108,5,79,78,135,85,0,137,29,28,136,97,7,59,49,169,253,131,80,234,37,221,120,227,103,215,190,79,144,53,235 };
    byte_vec_t pk { 4,92,234,110,105,114,246,217,16,251,41,56,83,38,51,42,52,74,94,155,96,247,137,40,154,225,160,246,90,195,149,90,188,244,67,217,13,155,178,235,62,222,94,224,55,120,187,107,228,23,162,104,83,250,9,94,146,166,56,181,236,36,97,230,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 660 ") {
    byte_vec_t msg { 53,171,225,100 };
    byte_vec_t sig { 232,115,35,89,30,19,255,184,45,80,247,163,93,32,242,122,27,93,84,128,30,69,156,247,233,66,238,179,26,80,68,9,189,163,185,112,30,160,126,231,187,110,96,239,87,20,162,238,138,143,171,147,19,104,208,1,128,183,201,244,172,183,150,94 };
    byte_vec_t pk { 3,101,25,252,11,237,45,244,121,230,47,145,149,69,98,210,60,253,31,136,146,188,155,94,63,226,0,177,133,14,88,55,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 660 ") {
    byte_vec_t msg { 62,89,19,106 };
    byte_vec_t sig { 197,16,189,233,3,142,106,121,22,218,125,2,152,10,17,109,76,99,214,238,70,196,75,223,174,54,107,159,208,176,154,45,27,1,170,225,223,24,117,210,102,183,140,142,74,186,220,47,222,33,243,118,174,158,98,87,82,70,123,23,205,137,35,1 };
    byte_vec_t pk { 2,2,69,123,246,107,129,60,215,158,199,77,180,63,207,31,15,40,181,213,104,219,142,153,79,5,13,242,255,161,182,33,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 661 ") {
    byte_vec_t msg { 86,90,155,33 };
    byte_vec_t sig { 2,12,215,188,232,204,127,98,25,187,160,252,148,213,4,107,254,192,83,186,222,59,231,183,51,36,150,228,243,183,46,168,175,78,239,186,226,179,93,23,48,202,192,220,229,145,157,219,127,47,166,219,43,181,85,14,243,126,216,99,236,1,91,254 };
    byte_vec_t pk { 4,140,121,199,236,249,191,189,132,208,142,222,120,1,222,163,197,50,140,206,23,26,216,215,44,53,185,76,148,102,52,189,106,28,47,48,244,51,96,254,22,165,170,226,38,165,142,247,160,14,36,185,158,227,92,130,44,152,199,227,196,94,94,95,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 661 ") {
    byte_vec_t msg { 231,13,46,225 };
    byte_vec_t sig { 31,207,18,10,79,196,217,132,158,113,26,227,62,159,106,202,209,195,1,202,181,49,38,122,213,239,31,32,131,172,12,252,172,223,158,14,0,49,133,129,239,59,96,205,234,3,73,220,193,44,100,68,90,70,44,150,37,250,75,63,173,113,153,244 };
    byte_vec_t pk { 4,226,111,2,247,247,217,210,90,249,99,138,74,52,226,240,36,54,50,13,114,49,92,26,3,139,168,121,95,148,201,237,126,119,91,166,253,212,233,104,204,117,47,238,162,74,199,79,111,58,158,85,98,251,133,235,214,59,39,40,24,46,45,215,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 661 ") {
    byte_vec_t msg { 237,97,20,201 };
    byte_vec_t sig { 181,68,25,154,203,26,235,22,148,201,56,26,232,114,28,18,41,57,249,216,207,171,114,38,5,232,171,21,71,126,246,229,170,157,184,254,41,65,148,238,105,64,37,6,49,70,198,65,85,188,197,183,27,213,27,140,252,231,240,125,149,111,5,103 };
    byte_vec_t pk { 2,239,54,101,121,210,127,197,59,46,54,14,161,211,108,230,228,156,36,22,196,131,37,144,130,213,46,227,2,230,160,1,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 661 ") {
    byte_vec_t msg { 105,70,184,222 };
    byte_vec_t sig { 210,24,72,241,202,122,136,241,23,126,202,93,83,64,90,110,30,241,152,58,180,20,142,132,153,188,211,210,221,86,9,74,103,58,133,57,220,255,160,104,168,178,170,38,149,203,24,225,126,61,5,34,79,204,174,53,96,11,187,99,107,140,120,208 };
    byte_vec_t pk { 2,228,194,85,62,220,116,54,172,250,36,94,18,239,101,211,57,106,39,254,232,130,251,129,12,40,210,75,104,231,114,99,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 662 ") {
    byte_vec_t msg { 179,49,121,163 };
    byte_vec_t sig { 112,38,233,62,192,130,88,210,109,20,191,89,9,182,156,213,56,96,123,203,168,123,174,226,164,148,34,202,89,41,8,84,72,65,76,28,92,172,115,230,143,60,0,28,63,74,91,141,135,130,91,224,243,234,192,86,174,234,19,160,210,84,97,106 };
    byte_vec_t pk { 4,33,229,217,162,191,63,5,119,26,173,142,168,131,87,85,8,171,254,168,162,248,142,108,63,178,66,109,157,197,18,144,68,252,222,118,102,23,3,24,245,200,154,92,79,155,90,146,20,251,208,42,162,51,181,9,232,150,182,29,46,118,143,223,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 662 ") {
    byte_vec_t msg { 54,110,218,94 };
    byte_vec_t sig { 132,182,196,231,248,132,32,42,195,41,17,155,137,51,167,0,198,177,128,227,195,51,81,22,69,31,237,78,226,231,172,11,177,232,74,160,230,216,244,199,161,82,221,107,119,238,183,236,249,36,228,116,30,55,97,248,162,63,82,242,116,149,114,113 };
    byte_vec_t pk { 4,204,141,187,3,221,128,238,25,79,68,203,160,23,198,194,19,124,42,132,43,90,35,181,18,94,209,15,223,170,218,186,227,153,49,204,201,223,81,214,101,120,55,174,137,209,33,42,68,183,160,118,60,216,86,158,148,162,124,39,35,8,143,113,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 662 ") {
    byte_vec_t msg { 139,176,127,87 };
    byte_vec_t sig { 47,188,135,74,140,151,38,235,227,56,53,71,84,175,72,246,123,143,75,129,211,96,91,207,58,196,126,251,148,114,58,70,17,140,215,228,211,211,187,195,38,21,29,99,110,133,206,217,214,166,188,192,8,115,104,163,151,68,165,202,229,150,128,220 };
    byte_vec_t pk { 3,106,238,128,25,140,233,66,188,42,154,49,90,161,7,68,98,31,179,136,159,125,126,140,32,51,187,87,219,59,171,173,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 662 ") {
    byte_vec_t msg { 50,118,131,77 };
    byte_vec_t sig { 1,180,28,224,23,55,64,2,165,23,77,172,180,18,6,158,172,236,91,9,105,83,48,71,63,24,19,54,17,2,27,217,130,73,197,178,168,138,140,17,196,138,107,23,1,102,74,247,136,229,78,17,54,231,21,158,174,154,76,102,31,110,48,180 };
    byte_vec_t pk { 3,29,197,10,9,177,120,176,152,35,37,244,74,56,235,135,253,23,47,42,237,230,192,162,147,68,46,49,100,237,80,77,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 663 ") {
    byte_vec_t msg { 58,208,31,12 };
    byte_vec_t sig { 146,59,91,180,202,127,171,117,166,236,41,215,108,51,150,49,116,56,114,35,6,184,174,145,243,186,166,82,90,183,207,237,80,60,206,162,30,235,11,33,60,72,170,186,152,143,147,250,73,161,168,156,100,222,177,159,106,128,6,132,225,152,243,202 };
    byte_vec_t pk { 4,147,2,195,250,243,81,249,55,54,216,122,214,110,242,125,72,195,140,229,151,30,118,32,27,255,179,22,163,166,3,1,183,61,12,64,121,143,229,116,62,140,1,21,207,237,69,156,97,46,15,124,37,223,128,160,168,221,131,18,181,189,32,174,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 663 ") {
    byte_vec_t msg { 164,92,48,77 };
    byte_vec_t sig { 176,189,234,235,201,99,106,199,139,135,5,86,63,85,253,236,72,148,222,107,189,169,79,35,136,181,118,124,86,195,199,142,41,213,199,5,32,214,247,186,120,230,221,226,193,149,30,142,61,190,107,106,122,160,246,201,33,86,103,105,128,225,120,176 };
    byte_vec_t pk { 4,105,75,193,219,153,121,196,80,218,96,150,95,132,179,208,115,114,157,37,14,234,176,173,211,179,240,8,231,65,144,132,31,42,90,31,185,116,16,90,190,47,224,10,199,76,6,226,202,32,50,179,166,165,43,238,106,41,39,230,178,216,241,127,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 663 ") {
    byte_vec_t msg { 46,183,86,248 };
    byte_vec_t sig { 108,221,237,165,93,139,229,97,177,194,217,181,176,109,23,28,126,161,125,201,64,165,16,16,36,26,65,103,96,18,31,154,43,190,214,39,227,146,77,175,72,67,171,214,12,240,63,100,152,167,33,170,15,255,20,242,212,37,143,229,55,180,125,17 };
    byte_vec_t pk { 2,189,226,189,174,190,157,108,115,141,164,0,94,129,25,5,32,247,134,8,112,120,196,24,218,156,241,26,69,56,153,157,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 663 ") {
    byte_vec_t msg { 250,58,117,33 };
    byte_vec_t sig { 78,93,208,91,134,166,153,214,99,55,254,216,78,140,177,162,36,187,78,50,64,36,91,218,7,241,110,228,196,254,36,178,45,103,12,19,28,10,243,234,51,22,110,181,111,251,87,137,36,55,142,34,24,138,186,241,11,232,220,226,145,226,143,139 };
    byte_vec_t pk { 3,145,248,89,54,128,233,220,36,186,51,141,12,241,173,237,143,156,63,86,47,69,50,71,140,27,139,233,159,98,203,255,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 664 ") {
    byte_vec_t msg { 36,160,155,54 };
    byte_vec_t sig { 127,177,20,200,240,255,123,212,33,106,129,68,137,12,215,116,247,0,107,135,235,30,135,64,236,67,12,99,29,228,161,148,106,22,133,106,34,52,43,19,130,213,237,158,190,241,53,49,83,252,188,228,137,254,244,241,231,12,16,152,139,80,13,133 };
    byte_vec_t pk { 4,26,13,101,210,10,1,191,59,193,200,160,40,216,20,175,8,233,184,88,94,175,36,207,36,228,35,70,115,225,130,31,144,223,82,72,83,183,131,32,37,71,181,55,123,203,13,188,70,17,177,124,55,177,250,128,29,118,231,224,212,61,133,147,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 664 ") {
    byte_vec_t msg { 201,41,131,24 };
    byte_vec_t sig { 140,51,230,33,34,195,68,155,66,188,16,207,86,190,54,23,193,180,233,143,17,234,106,47,40,58,40,171,198,242,231,36,91,17,245,44,16,210,70,139,113,195,36,114,39,219,141,163,28,150,109,30,21,190,179,100,86,8,162,66,128,131,32,108 };
    byte_vec_t pk { 4,155,230,157,142,14,252,224,176,98,55,131,144,111,109,150,237,77,80,189,36,212,239,102,134,95,195,10,5,223,88,48,201,250,221,156,50,173,150,115,157,30,51,57,15,183,56,113,41,240,31,232,237,95,124,218,206,223,92,15,105,45,196,195,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 664 ") {
    byte_vec_t msg { 247,134,122,104 };
    byte_vec_t sig { 255,82,175,171,151,226,98,141,128,171,248,101,179,235,73,79,230,200,130,185,100,45,189,93,238,151,70,167,203,4,123,226,53,147,216,179,227,43,29,85,24,242,173,64,43,180,241,42,166,189,146,34,100,91,54,26,255,30,217,55,73,73,237,135 };
    byte_vec_t pk { 2,121,244,144,116,160,77,152,85,213,149,204,64,34,105,29,56,118,154,86,50,20,215,96,210,253,162,199,223,92,253,86,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 664 ") {
    byte_vec_t msg { 173,184,230,39 };
    byte_vec_t sig { 227,124,140,134,27,210,227,117,119,56,68,154,136,228,35,19,207,216,29,172,2,127,113,74,215,60,22,60,186,218,53,162,10,198,92,209,225,56,247,47,85,154,173,11,58,116,173,131,145,135,219,213,128,117,132,60,196,50,200,105,137,145,138,145 };
    byte_vec_t pk { 2,200,100,220,211,151,133,165,59,215,86,198,207,211,76,215,110,119,246,81,178,210,118,41,178,55,181,230,35,126,17,45,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 665 ") {
    byte_vec_t msg { 217,95,52,69 };
    byte_vec_t sig { 9,180,72,186,239,97,164,10,44,198,32,241,61,144,40,240,167,61,58,155,17,25,43,30,185,22,255,152,190,109,26,186,132,24,232,72,190,150,2,122,79,96,187,205,238,91,84,86,251,53,188,222,219,121,229,89,154,25,80,37,226,171,208,160 };
    byte_vec_t pk { 4,72,51,69,27,252,152,11,81,166,27,114,55,185,72,30,139,115,15,108,191,60,208,186,236,99,245,71,24,160,54,40,195,122,23,16,248,115,66,193,81,157,233,110,170,251,228,111,106,32,102,125,109,27,124,200,116,130,21,190,147,70,65,213,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 665 ") {
    byte_vec_t msg { 109,87,150,117 };
    byte_vec_t sig { 81,25,163,245,18,139,194,125,75,111,176,132,71,174,224,210,169,126,110,151,27,35,201,224,69,51,35,18,85,123,60,138,66,15,226,114,185,91,67,191,174,10,157,216,159,47,22,224,105,208,16,18,229,56,148,214,67,96,203,248,165,56,135,92 };
    byte_vec_t pk { 4,147,84,0,234,151,21,26,166,75,93,168,78,195,83,130,254,250,69,142,48,231,113,2,194,153,141,46,36,101,185,50,171,199,158,60,108,239,10,111,136,186,144,246,235,173,45,194,93,153,146,201,128,170,112,40,63,49,204,107,16,137,131,135,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 665 ") {
    byte_vec_t msg { 22,182,57,47 };
    byte_vec_t sig { 180,129,116,41,183,96,210,149,215,72,33,57,147,192,74,210,223,133,81,232,209,106,41,214,212,237,39,111,222,19,37,119,112,132,37,209,145,227,133,236,182,44,140,43,229,163,192,247,251,234,226,135,196,240,138,213,50,201,41,177,247,106,83,189 };
    byte_vec_t pk { 2,57,112,19,23,165,215,155,168,246,132,232,233,116,131,76,30,129,104,155,179,35,98,76,190,91,127,103,74,106,53,219,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 665 ") {
    byte_vec_t msg { 204,90,249,130 };
    byte_vec_t sig { 178,2,44,112,104,8,81,56,29,208,72,251,236,162,137,143,231,56,62,41,140,88,9,242,199,117,223,65,116,201,6,92,134,186,228,218,148,154,127,36,8,76,140,61,50,23,123,196,7,230,153,60,169,44,103,31,132,238,172,51,133,42,75,172 };
    byte_vec_t pk { 3,127,254,50,59,222,143,146,72,2,4,41,225,147,212,132,24,21,198,251,170,94,197,17,128,119,174,255,13,130,161,167,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 666 ") {
    byte_vec_t msg { 11,221,75,254 };
    byte_vec_t sig { 86,196,167,179,117,141,130,135,214,209,171,171,243,142,69,152,107,129,209,182,105,246,170,131,52,230,96,75,108,238,76,70,36,164,168,38,30,161,88,27,160,174,145,203,28,188,85,253,245,206,130,160,242,223,90,104,36,242,12,16,186,174,28,140 };
    byte_vec_t pk { 4,146,20,164,79,157,246,104,96,83,173,86,70,151,127,181,160,141,227,197,221,139,138,153,25,94,202,97,37,3,103,118,209,165,95,242,80,47,54,119,175,11,35,177,4,87,198,64,241,174,133,123,90,62,194,209,55,130,136,213,191,212,156,234,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 666 ") {
    byte_vec_t msg { 204,95,235,219 };
    byte_vec_t sig { 115,6,119,234,192,103,10,241,184,13,4,78,174,156,129,180,61,174,178,143,99,99,178,67,32,20,174,229,172,149,65,98,135,58,54,217,71,161,23,224,79,186,137,113,160,24,223,223,98,229,183,97,217,208,112,193,117,74,242,56,83,91,127,108 };
    byte_vec_t pk { 4,136,46,209,140,179,6,214,175,192,78,170,226,113,116,61,75,209,202,55,9,47,130,232,108,102,174,86,132,214,223,42,191,79,213,76,78,93,196,157,31,157,45,132,165,136,184,6,125,168,239,19,216,179,141,99,97,219,105,135,66,190,208,205,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 666 ") {
    byte_vec_t msg { 146,131,19,204 };
    byte_vec_t sig { 220,109,45,53,190,118,126,62,54,54,218,154,30,224,82,5,138,179,151,40,47,190,42,130,69,248,145,108,82,29,132,178,51,219,91,165,17,41,198,192,142,96,131,148,191,108,215,154,236,218,165,216,207,147,120,88,176,224,25,183,182,171,216,68 };
    byte_vec_t pk { 2,192,222,16,114,107,11,229,99,42,207,127,136,13,20,114,203,125,193,229,65,75,250,144,4,255,173,212,225,2,151,62,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 666 ") {
    byte_vec_t msg { 99,107,38,150 };
    byte_vec_t sig { 55,124,159,71,251,157,217,29,220,40,248,30,109,96,221,24,49,70,177,253,246,147,65,231,205,189,114,243,214,30,68,234,71,229,221,208,228,225,80,220,4,233,123,152,32,163,243,8,101,32,24,167,238,116,113,240,251,197,187,216,92,196,3,192 };
    byte_vec_t pk { 2,23,144,216,110,126,216,195,86,240,161,120,245,152,22,236,54,3,133,243,119,240,75,217,162,153,254,121,149,166,119,54,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 667 ") {
    byte_vec_t msg { 221,121,234,234 };
    byte_vec_t sig { 15,6,105,137,145,174,56,147,77,78,192,123,164,160,188,156,166,132,33,188,151,24,2,195,7,138,26,130,69,221,189,32,195,56,100,255,232,118,195,210,234,44,78,186,113,51,44,228,65,54,226,157,253,235,176,45,195,175,230,37,224,59,190,169 };
    byte_vec_t pk { 4,123,222,48,222,181,222,104,248,181,52,158,143,116,29,242,159,35,100,246,80,222,185,179,51,21,91,105,50,72,50,131,81,232,230,10,0,113,124,87,78,240,123,128,191,255,34,150,202,227,135,156,165,121,241,67,144,68,12,174,155,182,7,235,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 667 ") {
    byte_vec_t msg { 138,103,75,36 };
    byte_vec_t sig { 73,214,180,204,6,177,150,232,17,148,196,171,159,72,152,144,241,221,219,163,7,131,142,99,171,167,198,188,64,112,79,246,141,245,16,95,41,114,130,218,200,160,192,153,158,146,211,61,200,26,197,142,99,147,243,102,127,31,140,13,28,249,164,46 };
    byte_vec_t pk { 4,71,0,220,233,188,131,76,55,142,8,125,224,52,62,201,45,223,116,6,142,49,244,17,1,157,134,52,44,48,247,243,12,237,245,196,200,161,219,83,5,124,175,223,183,187,40,253,77,84,19,10,125,101,92,51,154,227,151,101,204,2,77,225,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 667 ") {
    byte_vec_t msg { 183,71,233,111 };
    byte_vec_t sig { 42,77,122,158,166,227,227,65,113,216,188,166,17,132,19,190,235,175,222,254,130,46,99,187,54,142,199,9,167,70,200,86,12,178,123,192,52,34,209,204,254,250,223,19,179,134,104,17,103,200,243,63,248,115,164,72,215,8,47,73,25,21,31,82 };
    byte_vec_t pk { 2,54,139,211,28,212,180,210,193,134,80,204,225,54,193,151,149,183,187,237,169,34,248,68,194,180,19,39,227,76,50,147,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 667 ") {
    byte_vec_t msg { 183,248,19,43 };
    byte_vec_t sig { 131,51,119,222,56,122,194,167,75,143,129,230,18,149,161,232,201,223,136,130,80,3,123,241,237,167,29,7,36,18,168,49,62,39,248,53,253,85,214,28,93,202,92,71,174,67,157,166,170,103,210,88,144,178,40,89,39,198,75,156,44,211,133,76 };
    byte_vec_t pk { 2,115,82,255,45,221,18,79,170,144,80,111,218,77,6,131,248,182,160,182,93,77,223,81,251,34,210,208,6,199,159,191,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 668 ") {
    byte_vec_t msg { 205,29,112,194 };
    byte_vec_t sig { 73,181,222,158,196,102,60,166,41,96,112,126,81,51,167,234,234,93,214,87,120,169,99,244,147,137,25,175,50,84,86,90,20,120,225,11,155,136,117,19,184,40,98,219,54,11,11,28,41,15,70,66,188,161,226,49,106,58,251,123,68,45,242,195 };
    byte_vec_t pk { 4,93,129,241,125,143,204,35,92,52,203,139,121,216,62,65,184,38,52,86,88,148,111,54,226,72,85,102,182,155,39,164,128,226,234,120,129,107,247,211,227,61,205,52,171,27,228,138,128,51,106,179,102,79,39,245,112,199,238,177,16,57,19,189,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 668 ") {
    byte_vec_t msg { 220,127,46,108 };
    byte_vec_t sig { 211,199,38,63,139,163,88,156,187,193,204,227,144,73,23,249,144,150,188,151,124,219,114,226,205,131,218,116,251,137,96,195,39,208,34,225,245,94,107,155,134,123,32,74,44,228,152,199,190,214,159,120,39,139,132,180,168,86,100,69,222,110,225,80 };
    byte_vec_t pk { 4,53,241,146,134,27,112,75,29,10,70,251,115,73,36,243,250,16,226,160,70,161,102,94,177,142,84,104,31,125,149,40,147,3,250,63,188,142,148,24,173,88,97,110,221,137,219,120,44,37,156,76,39,81,252,223,161,188,230,84,207,238,14,183,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 668 ") {
    byte_vec_t msg { 76,75,215,46 };
    byte_vec_t sig { 209,179,147,223,9,29,26,179,64,81,111,123,82,202,186,140,238,58,196,56,69,240,90,51,193,69,97,204,109,141,71,156,114,170,226,115,227,249,208,123,207,241,184,245,25,129,150,225,195,97,146,23,75,125,183,125,104,254,184,246,207,5,210,223 };
    byte_vec_t pk { 3,252,221,83,121,238,228,232,114,25,99,188,66,250,121,134,233,17,249,157,114,1,23,35,119,125,108,163,54,129,134,13,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 668 ") {
    byte_vec_t msg { 193,75,166,193 };
    byte_vec_t sig { 219,211,227,49,49,200,56,232,137,233,229,246,113,22,29,124,84,6,197,176,82,238,45,165,198,139,95,207,147,120,167,122,150,122,163,177,126,223,151,111,44,4,252,40,32,82,58,175,70,154,251,207,32,49,192,247,35,217,137,11,14,59,159,149 };
    byte_vec_t pk { 2,101,77,160,143,189,24,90,213,149,129,188,249,6,115,21,44,229,251,20,168,251,40,132,227,40,236,246,97,223,0,165,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 669 ") {
    byte_vec_t msg { 147,5,237,182 };
    byte_vec_t sig { 33,68,216,72,231,212,65,189,243,53,191,102,169,172,19,92,138,191,197,12,196,197,216,193,194,212,157,70,230,160,153,96,236,228,250,8,171,216,19,209,138,28,7,27,100,147,68,78,230,140,55,107,140,103,37,28,49,111,133,7,202,9,41,187 };
    byte_vec_t pk { 4,111,124,211,16,120,219,23,36,158,170,196,90,14,203,139,35,71,115,161,43,202,45,73,98,168,111,32,54,162,113,67,87,160,44,190,133,33,28,161,109,223,57,154,203,44,189,141,129,8,196,112,237,87,254,168,38,232,166,139,152,29,165,37,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 669 ") {
    byte_vec_t msg { 20,36,182,38 };
    byte_vec_t sig { 191,16,148,166,212,156,0,133,111,157,118,24,158,58,181,105,32,140,75,196,90,113,222,96,196,69,234,40,114,181,242,83,239,255,255,16,198,231,22,171,106,38,45,129,187,4,129,143,176,43,205,163,255,110,79,47,210,148,217,3,40,111,252,36 };
    byte_vec_t pk { 4,216,54,41,1,116,85,203,136,132,246,204,45,139,132,69,76,250,140,40,140,220,102,109,55,101,217,59,55,61,133,7,217,50,100,168,224,213,163,35,25,22,24,198,168,230,102,148,47,24,120,69,139,84,209,57,206,0,170,82,227,60,79,182,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 669 ") {
    byte_vec_t msg { 178,193,120,105 };
    byte_vec_t sig { 86,237,252,185,30,125,28,143,135,163,118,120,171,18,205,141,1,55,249,57,138,47,133,179,18,129,219,67,72,190,116,132,231,50,153,157,190,146,214,71,4,15,112,24,43,254,163,223,122,143,149,21,113,117,16,71,35,130,240,225,44,228,52,61 };
    byte_vec_t pk { 3,172,225,253,243,173,215,166,236,146,13,39,98,208,94,169,245,242,59,66,5,233,4,210,209,67,4,144,86,27,251,92,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 669 ") {
    byte_vec_t msg { 47,163,159,216 };
    byte_vec_t sig { 13,45,68,244,81,179,230,41,236,234,222,248,240,159,174,116,65,46,157,5,139,240,204,148,10,22,14,225,229,175,247,114,210,206,175,111,220,228,172,37,135,132,148,9,237,9,6,22,24,255,136,118,165,34,8,71,92,184,200,128,188,154,241,192 };
    byte_vec_t pk { 2,1,205,201,137,229,118,148,227,105,218,227,47,171,231,176,96,199,65,227,38,234,7,177,167,99,93,210,184,118,23,152,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 670 ") {
    byte_vec_t msg { 153,224,118,250 };
    byte_vec_t sig { 248,153,219,79,145,77,218,107,233,61,176,39,247,212,110,99,93,253,196,91,160,202,24,168,206,236,130,235,88,19,18,226,63,209,155,55,42,65,217,180,89,81,165,15,103,249,145,113,149,249,229,187,234,174,129,70,76,86,141,250,84,8,200,51 };
    byte_vec_t pk { 4,190,85,17,38,178,162,118,202,66,153,174,187,120,31,109,69,162,19,132,85,242,42,233,183,115,154,87,149,49,211,98,49,218,80,66,62,45,135,91,146,9,28,35,252,206,1,6,10,195,186,75,182,186,230,221,220,252,146,146,200,1,176,39,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 670 ") {
    byte_vec_t msg { 204,93,91,105 };
    byte_vec_t sig { 198,176,218,154,103,179,230,187,46,150,249,111,230,76,235,88,171,147,215,133,33,251,151,143,247,98,61,90,131,242,64,100,110,8,149,22,57,153,77,221,182,237,114,4,210,237,15,113,229,137,174,7,52,228,207,208,50,10,84,203,84,41,50,238 };
    byte_vec_t pk { 4,246,220,28,90,174,117,242,219,208,133,235,3,209,202,173,10,218,198,33,239,115,14,83,211,129,119,118,209,205,167,95,205,75,139,225,79,138,209,236,195,38,70,36,172,229,202,163,171,14,27,139,157,104,187,225,144,5,206,243,214,250,80,216,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 670 ") {
    byte_vec_t msg { 224,252,158,24 };
    byte_vec_t sig { 139,13,87,23,39,60,77,165,14,206,249,115,61,93,113,242,116,23,9,233,199,192,76,43,111,30,61,255,147,133,214,110,207,213,181,27,171,5,83,58,58,153,114,215,84,118,212,230,231,98,134,213,58,248,107,137,141,0,197,231,101,200,42,222 };
    byte_vec_t pk { 2,64,242,243,14,32,25,167,152,51,2,46,114,148,255,13,179,4,207,101,41,165,226,106,163,147,188,1,42,48,77,115,31 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 670 ") {
    byte_vec_t msg { 35,85,10,170 };
    byte_vec_t sig { 81,144,105,164,104,214,182,102,7,247,216,33,89,87,184,108,94,11,164,202,71,215,203,59,164,205,121,4,245,11,183,255,163,229,205,111,202,76,223,183,34,227,32,109,56,246,254,77,67,165,38,232,50,192,152,3,228,104,50,142,64,157,117,70 };
    byte_vec_t pk { 2,44,19,49,119,223,156,146,24,198,95,234,1,250,133,161,240,82,90,206,221,51,221,192,224,103,159,151,193,126,232,144,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 671 ") {
    byte_vec_t msg { 105,237,24,129 };
    byte_vec_t sig { 167,236,239,170,208,84,157,240,155,211,232,131,95,254,211,215,166,32,190,118,97,125,32,76,183,190,101,39,5,81,67,232,230,137,45,248,27,123,14,209,175,78,105,107,237,88,154,80,56,2,122,177,44,243,191,181,187,23,42,188,63,236,69,175 };
    byte_vec_t pk { 4,13,125,228,236,79,188,133,195,227,192,153,36,107,243,163,255,232,23,210,48,36,218,58,44,241,87,11,46,237,51,223,47,140,197,248,246,142,169,136,113,131,214,94,29,205,56,146,38,165,247,180,140,0,24,243,37,132,68,114,149,222,72,226,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 671 ") {
    byte_vec_t msg { 43,63,82,106 };
    byte_vec_t sig { 166,107,219,20,128,173,207,233,57,3,80,197,199,94,207,143,149,97,145,237,210,52,41,15,153,185,241,175,12,8,17,0,21,189,58,78,149,91,214,34,38,6,139,60,40,148,159,87,144,98,231,160,209,51,203,132,213,28,97,249,167,80,69,121 };
    byte_vec_t pk { 4,236,206,24,63,13,83,19,171,251,212,148,150,178,170,192,161,166,200,166,28,123,77,213,85,153,34,209,187,16,207,29,169,32,35,112,223,140,251,220,184,115,56,175,154,135,59,196,235,217,16,91,142,43,132,71,56,42,5,34,22,57,250,127,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 671 ") {
    byte_vec_t msg { 142,214,131,78 };
    byte_vec_t sig { 27,199,82,79,240,155,152,68,249,186,95,64,90,117,207,158,73,115,162,252,206,65,154,3,5,55,45,109,67,139,117,177,83,184,212,227,203,71,154,41,139,199,174,146,163,121,234,92,26,6,37,24,221,190,188,13,20,226,158,141,86,160,184,237 };
    byte_vec_t pk { 3,233,69,19,139,95,143,242,243,174,118,182,67,235,160,171,159,105,0,12,148,71,187,239,26,233,241,52,255,53,250,27,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 671 ") {
    byte_vec_t msg { 101,246,212,76 };
    byte_vec_t sig { 73,252,119,164,141,26,175,233,99,245,9,72,238,27,205,134,132,140,123,97,148,243,71,110,154,181,20,195,22,31,81,180,186,113,1,204,233,36,0,57,152,189,215,143,187,66,198,236,184,157,155,94,20,132,34,110,173,18,161,15,210,19,101,211 };
    byte_vec_t pk { 3,226,34,143,157,160,70,222,112,73,106,26,198,254,97,140,41,102,56,139,127,110,196,163,174,127,46,143,130,227,146,192,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 672 ") {
    byte_vec_t msg { 133,144,20,174 };
    byte_vec_t sig { 165,227,104,153,135,188,76,62,74,37,115,93,84,135,232,206,137,62,73,134,222,4,29,80,224,80,231,180,49,183,197,46,125,124,47,75,62,42,254,246,70,170,155,144,255,81,240,186,18,134,77,154,76,7,206,76,95,240,138,178,45,250,10,247 };
    byte_vec_t pk { 4,147,129,144,121,174,182,247,97,172,225,236,207,244,140,149,83,104,61,140,216,86,204,228,81,70,22,82,17,2,92,148,19,29,91,131,228,48,76,232,102,221,123,70,40,68,193,194,70,82,59,216,96,45,56,58,3,210,162,149,116,202,66,94,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 672 ") {
    byte_vec_t msg { 187,207,187,229 };
    byte_vec_t sig { 30,146,118,233,28,75,186,50,62,64,107,191,159,99,71,190,199,21,42,79,205,121,149,255,149,38,224,218,222,192,105,55,128,6,102,18,189,122,70,70,227,185,66,58,161,64,217,202,223,29,96,1,155,48,190,78,44,98,17,22,49,249,165,115 };
    byte_vec_t pk { 4,105,203,112,159,181,167,28,19,211,55,152,161,247,15,109,30,73,124,14,150,9,161,55,118,52,246,228,15,89,98,229,32,24,193,165,165,103,3,180,113,115,3,195,37,251,205,16,157,6,27,118,50,231,13,214,74,222,152,246,48,174,0,191,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 672 ") {
    byte_vec_t msg { 239,242,113,179 };
    byte_vec_t sig { 48,114,23,201,250,8,228,193,0,46,81,206,65,6,136,171,47,45,131,4,30,154,51,196,177,249,23,102,69,9,163,102,255,96,97,191,15,0,230,200,249,148,159,62,77,56,88,151,36,43,70,141,223,119,87,244,89,45,29,251,96,161,100,204 };
    byte_vec_t pk { 2,24,116,41,138,222,7,148,137,235,218,215,172,159,3,8,144,137,232,247,204,77,64,227,62,60,245,8,234,8,182,245,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 672 ") {
    byte_vec_t msg { 233,42,79,11 };
    byte_vec_t sig { 70,226,133,196,3,145,188,84,154,150,189,141,14,25,57,197,235,170,248,180,97,155,77,52,216,45,159,181,244,74,164,187,242,177,206,78,11,95,37,114,167,37,211,102,12,130,106,226,179,179,56,227,181,39,202,193,130,47,97,199,37,29,121,233 };
    byte_vec_t pk { 2,248,8,216,191,70,60,19,21,181,28,34,140,64,188,210,215,247,87,64,119,10,228,86,131,9,102,135,189,192,3,27,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 673 ") {
    byte_vec_t msg { 182,141,224,21 };
    byte_vec_t sig { 133,59,112,233,34,193,29,146,186,89,73,5,155,155,165,215,255,126,114,130,30,84,226,73,100,72,92,3,218,213,253,125,81,1,255,19,199,218,181,186,92,49,176,218,218,28,145,220,168,99,145,182,102,188,45,225,127,187,74,56,147,42,118,253 };
    byte_vec_t pk { 4,198,216,93,243,69,115,143,188,131,119,240,124,72,235,170,203,76,124,170,69,128,9,163,211,235,147,64,83,220,25,89,200,99,168,238,210,137,0,207,227,246,232,151,144,208,148,251,233,188,220,180,207,57,34,62,169,193,34,140,89,125,197,189,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 673 ") {
    byte_vec_t msg { 200,6,120,18 };
    byte_vec_t sig { 182,115,247,124,133,132,86,215,112,103,135,174,104,191,99,178,146,203,9,119,77,222,32,6,167,252,34,125,140,205,198,161,0,87,114,22,167,135,87,106,141,88,131,104,66,209,218,249,101,242,111,252,146,36,241,109,208,26,63,210,200,166,228,193 };
    byte_vec_t pk { 4,50,191,197,61,36,15,38,200,123,50,193,54,186,239,212,110,154,206,177,87,44,97,254,91,180,104,144,106,11,82,75,220,107,60,47,231,121,187,59,114,38,11,92,140,39,128,141,213,117,62,169,164,87,66,130,101,4,174,79,33,100,59,64,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 673 ") {
    byte_vec_t msg { 222,169,95,240 };
    byte_vec_t sig { 196,231,25,143,124,186,40,98,114,226,254,230,135,87,200,167,129,168,0,230,218,237,100,31,111,225,36,197,27,196,227,117,233,10,85,39,184,211,215,164,157,4,27,60,179,88,137,184,159,53,106,219,104,246,173,226,220,251,174,196,185,210,135,168 };
    byte_vec_t pk { 3,251,155,78,99,189,107,198,255,246,247,114,149,39,201,79,132,189,59,21,169,204,78,230,236,43,136,75,166,21,26,196,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 673 ") {
    byte_vec_t msg { 69,95,254,37 };
    byte_vec_t sig { 48,236,29,31,172,151,200,61,32,143,121,172,225,11,37,125,115,186,232,247,8,163,132,194,249,110,149,20,94,25,166,110,91,1,9,73,157,94,91,213,214,190,252,32,179,186,78,117,252,102,185,77,62,157,55,119,104,234,86,105,1,162,212,8 };
    byte_vec_t pk { 3,29,217,173,164,13,181,117,205,196,28,129,51,147,247,92,26,213,183,59,2,227,189,32,69,148,19,197,93,40,101,57,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 674 ") {
    byte_vec_t msg { 210,22,93,100 };
    byte_vec_t sig { 228,172,142,203,85,88,77,229,148,250,87,44,55,194,80,182,227,43,61,72,204,9,251,152,188,161,182,36,55,39,5,251,67,132,54,98,138,78,13,3,147,126,210,73,142,161,85,203,241,80,83,34,240,181,208,119,65,5,49,215,195,222,253,125 };
    byte_vec_t pk { 4,185,116,145,120,183,189,165,237,117,247,149,254,4,42,17,94,28,150,244,79,239,237,145,12,114,84,199,226,84,92,146,135,32,116,59,130,72,184,69,159,249,128,65,2,92,16,33,76,27,211,104,15,60,148,145,208,11,80,6,67,177,228,243,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 674 ") {
    byte_vec_t msg { 129,239,72,245 };
    byte_vec_t sig { 239,101,84,32,190,45,225,217,34,116,200,23,153,189,4,210,247,39,174,127,12,206,80,42,95,60,63,254,65,162,24,64,249,164,181,136,18,227,182,111,237,31,133,126,129,174,135,231,199,121,220,106,147,191,112,232,206,198,229,179,17,147,85,172 };
    byte_vec_t pk { 4,176,95,165,155,229,108,75,217,234,109,49,177,199,213,223,83,55,228,80,33,201,244,201,69,19,119,125,69,254,57,41,200,220,117,127,65,20,65,218,179,148,147,26,203,204,28,20,111,102,62,101,241,132,215,73,36,53,244,103,244,60,214,178,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 674 ") {
    byte_vec_t msg { 150,245,34,54 };
    byte_vec_t sig { 139,170,209,160,213,178,163,94,226,166,31,119,64,185,66,196,113,244,254,64,43,233,108,99,173,236,218,94,113,190,73,20,49,141,35,181,102,171,98,139,51,184,65,210,17,216,59,115,11,17,68,11,14,105,141,57,121,74,191,160,51,27,79,206 };
    byte_vec_t pk { 2,8,35,236,152,231,163,53,125,225,225,135,191,57,220,228,207,237,141,34,72,39,105,160,237,14,163,186,203,217,230,64,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 674 ") {
    byte_vec_t msg { 205,80,235,138 };
    byte_vec_t sig { 254,209,178,206,152,250,123,173,156,81,80,84,55,228,223,16,97,249,159,40,142,40,129,155,192,44,35,12,157,238,147,53,86,107,64,58,61,255,45,128,248,45,238,10,124,82,216,135,52,58,51,246,154,85,69,35,114,10,238,168,204,71,76,60 };
    byte_vec_t pk { 2,151,135,143,112,75,129,189,86,188,101,83,1,162,231,173,240,156,57,191,191,90,201,108,92,107,151,26,181,92,11,183,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 675 ") {
    byte_vec_t msg { 203,250,135,132 };
    byte_vec_t sig { 171,17,72,177,166,126,169,211,193,131,166,227,48,47,226,166,206,136,79,231,175,8,225,129,114,234,103,102,17,162,161,47,200,183,232,181,34,123,19,233,210,182,124,101,92,10,42,44,70,250,98,63,179,110,202,68,193,148,209,125,203,63,115,22 };
    byte_vec_t pk { 4,180,247,79,150,41,64,212,192,227,167,207,184,135,27,178,31,168,119,105,147,104,99,166,51,232,230,216,63,148,141,190,69,20,100,46,218,117,19,214,113,185,57,181,170,195,225,159,199,174,90,213,15,67,119,36,7,63,13,200,32,174,104,137,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 675 ") {
    byte_vec_t msg { 190,251,3,122 };
    byte_vec_t sig { 5,43,30,66,220,203,107,86,218,245,175,92,39,154,77,35,68,112,131,16,136,245,196,49,195,239,122,93,249,245,181,72,207,3,119,166,153,70,61,185,73,43,157,157,212,156,221,92,16,110,59,86,3,213,42,248,230,22,63,188,175,88,75,129 };
    byte_vec_t pk { 4,61,133,176,68,247,111,47,28,123,53,172,33,235,177,83,9,126,118,170,24,180,163,17,199,145,221,252,137,244,239,173,217,62,47,188,166,150,200,12,153,92,71,150,33,148,177,69,0,114,93,242,217,98,164,116,94,7,216,217,42,10,81,74,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 675 ") {
    byte_vec_t msg { 217,15,199,20 };
    byte_vec_t sig { 93,207,141,21,227,234,140,184,249,253,109,62,40,117,192,30,82,175,42,98,250,249,79,127,85,254,77,190,4,98,211,192,71,231,180,73,101,101,43,205,123,136,159,141,246,115,59,41,237,46,201,138,176,156,226,69,54,93,78,191,77,186,46,159 };
    byte_vec_t pk { 3,186,158,252,219,69,37,161,244,5,43,5,96,76,250,104,78,41,192,54,108,216,115,166,229,92,247,72,215,13,167,32,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 675 ") {
    byte_vec_t msg { 116,66,36,80 };
    byte_vec_t sig { 217,78,141,178,161,27,5,166,25,250,72,95,206,195,28,105,47,60,87,8,37,207,25,170,211,234,56,250,103,164,209,210,67,124,132,12,183,182,230,119,112,43,134,39,133,175,196,160,134,211,128,89,157,214,169,21,53,13,198,63,205,164,238,173 };
    byte_vec_t pk { 2,112,237,149,50,162,88,133,209,56,64,168,11,146,17,108,215,8,98,14,189,246,123,227,105,111,154,132,61,51,227,40,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 676 ") {
    byte_vec_t msg { 252,167,16,217 };
    byte_vec_t sig { 28,194,72,1,163,136,55,166,128,40,157,157,115,202,88,218,129,49,32,252,215,46,5,35,21,40,79,17,152,14,95,20,209,185,208,72,138,139,178,74,10,56,100,242,215,211,14,195,246,235,67,135,237,167,28,107,87,163,86,165,248,223,180,90 };
    byte_vec_t pk { 4,193,232,51,101,4,171,226,255,167,168,47,166,108,0,179,105,232,101,177,223,101,144,15,223,41,11,117,10,219,236,14,198,83,44,73,106,98,205,114,105,48,217,186,235,37,206,45,126,66,243,192,182,73,144,127,149,178,242,177,165,213,196,250,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 676 ") {
    byte_vec_t msg { 213,244,249,65 };
    byte_vec_t sig { 78,145,139,86,153,83,147,249,164,106,150,156,121,193,64,10,24,232,24,215,239,53,182,77,180,108,208,175,179,5,44,11,92,45,210,169,76,142,76,68,121,178,253,239,110,140,66,234,149,224,87,62,205,99,214,167,198,72,94,175,161,9,167,225 };
    byte_vec_t pk { 4,66,255,171,71,228,157,167,197,65,19,23,92,184,143,186,239,62,58,70,212,88,58,201,232,115,190,2,55,212,64,25,94,7,68,82,172,224,165,225,148,148,208,21,85,120,85,245,45,166,242,44,158,154,61,2,183,170,42,109,122,97,16,88,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 676 ") {
    byte_vec_t msg { 150,190,178,39 };
    byte_vec_t sig { 238,127,132,206,211,117,226,79,188,156,127,69,190,113,76,255,152,92,158,155,9,41,122,206,236,57,246,119,41,26,215,77,187,182,178,174,248,223,102,167,121,227,10,183,231,82,210,32,254,163,29,236,165,160,32,155,235,113,98,96,148,216,211,64 };
    byte_vec_t pk { 3,128,145,170,129,169,191,45,30,70,145,200,206,214,203,19,101,229,91,47,227,51,47,182,200,182,69,241,107,188,231,159,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 676 ") {
    byte_vec_t msg { 121,79,126,122 };
    byte_vec_t sig { 152,107,240,69,122,164,169,107,184,64,130,229,176,182,244,104,254,102,246,160,134,160,46,149,165,10,201,40,245,67,95,139,236,207,71,185,66,119,201,110,149,63,185,204,177,164,14,226,27,228,93,130,13,60,65,8,38,209,63,207,145,83,32,12 };
    byte_vec_t pk { 2,197,218,101,77,162,197,100,114,103,102,186,85,137,100,19,64,114,8,204,15,106,194,47,142,172,197,229,248,13,88,33,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 677 ") {
    byte_vec_t msg { 179,83,15,146 };
    byte_vec_t sig { 88,145,53,74,127,146,126,186,175,43,98,193,49,229,140,28,150,138,191,23,81,214,42,77,162,135,95,222,72,123,235,40,68,222,52,242,106,130,214,100,59,12,8,177,199,255,208,208,49,208,142,196,227,16,163,52,200,167,232,143,82,73,153,233 };
    byte_vec_t pk { 4,28,194,245,204,118,176,221,127,153,169,4,63,145,224,219,49,65,104,57,30,137,225,27,80,183,59,10,147,253,143,119,49,61,46,83,220,50,121,95,79,50,238,226,250,196,121,8,154,61,19,158,249,178,189,47,152,19,87,170,243,104,232,132,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 677 ") {
    byte_vec_t msg { 112,29,98,56 };
    byte_vec_t sig { 90,223,154,105,162,115,251,106,42,26,113,225,221,31,252,166,198,116,227,138,35,170,50,181,175,147,109,53,203,130,48,234,158,189,178,157,127,112,101,183,9,53,205,116,188,189,130,98,56,169,78,140,108,78,219,187,121,214,164,146,133,131,11,45 };
    byte_vec_t pk { 4,5,231,172,103,64,1,187,206,129,34,212,75,46,143,152,221,231,206,242,211,244,59,110,253,156,89,115,236,25,189,51,46,151,19,98,187,57,100,146,251,39,118,15,54,112,10,142,93,132,81,18,214,214,153,35,202,50,96,15,238,172,171,201,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 677 ") {
    byte_vec_t msg { 84,96,43,212 };
    byte_vec_t sig { 190,239,136,17,158,105,89,159,239,210,214,150,109,24,146,1,189,224,255,211,232,174,217,110,110,136,97,131,57,126,202,28,184,215,87,217,212,36,175,121,234,142,144,110,173,175,218,131,119,62,96,12,144,222,83,29,22,183,161,237,57,100,28,155 };
    byte_vec_t pk { 2,4,101,188,108,221,194,81,193,128,217,208,238,32,194,46,113,200,229,26,111,53,164,107,179,71,4,202,25,64,114,249,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 677 ") {
    byte_vec_t msg { 95,76,136,99 };
    byte_vec_t sig { 195,133,84,169,3,22,166,92,32,228,169,180,252,225,139,249,92,98,68,73,195,213,108,17,177,165,202,82,109,150,86,124,91,115,35,23,238,11,73,220,247,12,155,88,143,3,26,16,184,53,139,250,134,204,62,128,82,240,244,108,234,227,56,249 };
    byte_vec_t pk { 2,116,255,19,37,250,108,120,22,84,215,184,142,61,153,193,231,43,20,220,201,107,62,132,7,101,125,69,209,167,180,88,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 678 ") {
    byte_vec_t msg { 101,152,241,116 };
    byte_vec_t sig { 10,70,166,74,77,201,193,207,229,38,30,139,56,235,30,142,41,35,202,162,127,147,173,70,188,105,240,6,82,243,229,148,5,176,196,13,128,244,53,6,93,181,252,174,157,54,28,72,22,20,154,56,31,224,215,32,107,238,162,24,8,102,203,234 };
    byte_vec_t pk { 4,42,237,102,139,117,109,206,76,240,227,18,157,79,85,55,221,51,197,95,245,132,209,137,106,131,234,8,11,28,237,150,101,119,226,32,64,191,226,120,180,164,159,211,10,41,8,205,216,121,224,130,13,226,37,21,213,73,145,113,110,131,91,239,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 678 ") {
    byte_vec_t msg { 48,23,4,178 };
    byte_vec_t sig { 160,100,104,23,20,44,66,135,114,103,242,62,92,41,250,81,251,190,161,99,105,30,92,39,77,23,249,129,117,129,105,3,99,218,10,60,28,138,138,96,83,183,41,75,62,212,177,109,41,133,80,250,130,242,54,158,49,10,132,248,16,85,59,193 };
    byte_vec_t pk { 4,80,102,137,89,100,246,80,162,125,158,110,75,22,116,10,124,2,131,67,72,172,48,34,91,104,205,169,5,24,128,251,154,143,250,125,204,4,174,170,205,8,155,44,183,189,245,214,128,222,231,39,230,211,41,226,136,24,16,160,52,80,226,146,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 678 ") {
    byte_vec_t msg { 105,193,236,203 };
    byte_vec_t sig { 192,167,242,54,37,81,36,152,76,141,133,188,236,35,73,253,26,49,225,251,250,228,44,219,13,143,203,36,90,247,187,76,145,201,84,53,103,72,60,78,148,212,161,57,10,159,184,114,152,136,108,181,89,240,90,57,113,169,159,83,246,219,178,0 };
    byte_vec_t pk { 3,138,22,205,89,111,87,215,21,162,234,183,23,50,21,0,202,13,79,255,245,197,184,214,206,97,193,221,102,59,225,227,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 678 ") {
    byte_vec_t msg { 57,254,154,239 };
    byte_vec_t sig { 75,52,29,253,48,14,198,51,23,253,86,60,35,82,229,44,84,13,101,12,82,193,41,241,214,227,43,8,132,167,125,34,21,17,140,73,95,38,249,78,92,35,126,186,32,157,134,100,129,74,163,74,102,105,89,51,74,90,107,81,95,46,123,74 };
    byte_vec_t pk { 2,209,104,25,125,20,2,120,1,234,25,105,252,129,1,200,170,231,29,23,137,120,73,178,180,23,108,27,240,191,115,149,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 679 ") {
    byte_vec_t msg { 84,200,223,251 };
    byte_vec_t sig { 245,99,136,158,27,215,241,120,4,179,49,233,122,159,199,105,147,160,17,22,71,239,70,74,239,68,94,241,41,78,101,179,145,20,197,205,25,105,37,220,221,68,210,47,123,250,97,4,168,199,76,77,117,177,227,181,245,227,217,14,29,157,135,160 };
    byte_vec_t pk { 4,221,60,230,236,88,29,99,72,83,196,100,119,136,134,193,1,115,185,247,56,29,26,148,230,24,189,36,107,210,165,50,217,177,154,151,106,17,117,123,133,44,17,150,10,148,32,122,203,218,180,251,114,179,92,29,236,216,195,56,236,7,181,24,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 679 ") {
    byte_vec_t msg { 136,21,254,41 };
    byte_vec_t sig { 41,129,133,56,143,168,16,83,232,93,44,47,253,89,88,93,143,195,181,171,52,191,143,202,68,48,150,29,81,70,178,136,187,75,181,115,237,175,102,244,159,252,66,177,57,187,150,127,188,66,210,28,146,79,80,139,40,6,26,237,251,112,58,81 };
    byte_vec_t pk { 4,84,215,163,64,252,133,41,185,123,107,240,167,109,41,157,111,104,174,89,41,160,52,179,167,209,13,111,101,8,13,228,123,42,17,219,55,40,169,231,138,128,4,7,18,154,235,204,150,228,221,225,84,35,89,139,156,0,180,221,7,206,59,219,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 679 ") {
    byte_vec_t msg { 33,141,173,139 };
    byte_vec_t sig { 140,119,97,115,248,68,129,209,232,138,217,118,202,65,106,228,186,59,44,93,195,167,90,204,222,96,43,242,104,232,253,201,182,151,135,199,87,113,145,45,185,206,54,243,87,63,5,209,223,223,0,32,35,214,178,117,24,5,107,53,82,108,165,55 };
    byte_vec_t pk { 3,63,214,7,8,48,214,49,64,100,0,107,146,92,56,24,230,221,247,75,91,243,58,198,204,254,64,4,80,131,233,114,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 679 ") {
    byte_vec_t msg { 23,226,233,211 };
    byte_vec_t sig { 194,153,164,105,79,31,36,145,19,112,92,247,49,81,249,246,151,139,135,215,51,234,235,249,173,121,55,161,123,113,28,221,142,57,61,174,202,13,63,153,85,84,86,90,11,109,56,15,119,168,218,45,79,227,82,96,99,76,54,52,23,152,233,181 };
    byte_vec_t pk { 3,200,71,186,68,227,199,116,45,4,146,181,230,235,145,132,67,131,250,209,190,169,22,239,154,166,102,17,217,184,183,245,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 680 ") {
    byte_vec_t msg { 156,2,195,26 };
    byte_vec_t sig { 152,112,212,170,118,203,182,114,169,200,44,38,161,85,36,61,236,149,162,104,117,71,227,204,181,97,60,50,154,118,184,76,132,103,81,79,238,148,107,207,33,82,62,29,199,59,115,212,230,40,197,1,227,84,43,98,42,54,158,22,96,194,189,22 };
    byte_vec_t pk { 4,63,121,214,124,154,252,137,108,251,237,118,28,141,106,109,55,87,93,198,28,139,8,83,111,8,246,130,11,46,211,99,180,31,248,64,5,45,52,254,153,215,107,113,84,45,145,173,232,54,153,22,200,210,219,216,200,104,78,193,171,219,148,190,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 680 ") {
    byte_vec_t msg { 96,115,200,254 };
    byte_vec_t sig { 38,241,162,190,20,218,137,225,23,42,55,64,47,205,141,187,237,74,140,86,6,12,32,31,107,187,34,147,86,149,221,217,198,80,21,95,71,41,164,12,249,167,242,183,175,244,193,3,15,183,70,1,82,59,125,48,74,211,219,141,184,38,60,218 };
    byte_vec_t pk { 4,45,119,222,198,104,102,220,32,138,5,171,29,41,58,96,52,122,64,131,80,32,3,62,55,187,29,229,208,28,65,157,80,20,94,158,75,56,37,109,69,193,242,247,115,8,150,168,197,207,98,218,45,117,193,195,92,197,252,158,112,140,127,4,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 680 ") {
    byte_vec_t msg { 241,103,25,220 };
    byte_vec_t sig { 64,207,12,43,105,8,4,31,178,84,194,132,48,64,90,118,72,42,137,140,94,155,84,118,211,128,62,105,237,25,214,14,229,132,1,26,44,107,128,77,216,154,216,122,157,103,239,145,120,236,18,229,47,231,83,166,177,221,75,240,47,174,57,163 };
    byte_vec_t pk { 2,123,15,108,117,73,157,151,63,31,106,247,231,212,33,233,32,207,67,92,121,19,86,183,10,142,116,65,155,25,197,54,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 680 ") {
    byte_vec_t msg { 106,84,27,187 };
    byte_vec_t sig { 85,245,179,197,175,241,163,149,135,37,183,121,178,55,250,110,217,17,207,151,164,124,251,160,12,224,54,84,229,221,24,101,118,82,150,59,151,246,0,253,207,15,224,238,97,193,43,55,240,236,16,244,71,233,43,34,68,27,53,182,224,97,211,251 };
    byte_vec_t pk { 3,116,141,226,177,111,179,226,51,144,7,51,227,221,177,48,69,49,42,46,142,221,73,193,97,88,82,96,115,110,118,136,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 681 ") {
    byte_vec_t msg { 214,155,255,180 };
    byte_vec_t sig { 185,128,44,189,72,242,137,240,58,161,58,190,131,73,15,211,202,72,62,237,232,165,4,103,209,97,188,44,180,136,227,34,91,8,34,242,162,163,214,120,125,115,129,230,43,65,5,115,116,11,87,181,64,15,104,221,182,14,171,178,184,216,126,124 };
    byte_vec_t pk { 4,164,249,1,150,155,209,245,34,221,5,84,51,106,74,238,188,213,9,52,162,171,20,201,55,101,117,90,225,64,81,24,218,122,130,52,139,61,62,151,185,75,103,80,122,153,81,197,89,214,58,206,238,71,80,244,18,35,140,126,82,109,158,85,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 681 ") {
    byte_vec_t msg { 140,143,124,178 };
    byte_vec_t sig { 146,146,230,224,18,230,22,57,110,198,24,142,10,111,40,43,52,128,180,228,68,146,11,119,7,208,121,74,53,99,152,44,166,245,15,158,109,130,90,184,71,205,205,253,244,18,98,212,76,245,231,136,157,53,99,197,223,131,241,2,204,75,132,75 };
    byte_vec_t pk { 4,172,69,232,203,159,142,181,175,29,158,129,255,26,175,7,31,136,93,108,35,174,100,195,193,125,143,132,32,155,15,249,255,248,88,41,6,38,13,54,59,229,134,53,23,249,119,14,27,120,55,144,176,121,96,98,91,84,79,237,227,21,62,158,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 681 ") {
    byte_vec_t msg { 56,226,237,60 };
    byte_vec_t sig { 184,42,113,168,46,140,164,138,247,227,34,123,109,12,21,165,206,150,222,136,4,142,235,105,207,111,182,80,199,58,212,84,154,149,202,245,131,213,153,90,205,144,109,35,86,36,142,148,246,167,207,199,169,120,87,231,174,114,202,33,179,95,102,57 };
    byte_vec_t pk { 2,226,229,57,191,24,18,16,150,16,53,63,151,23,166,62,24,143,223,229,13,194,52,58,120,246,176,151,55,128,131,184,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 681 ") {
    byte_vec_t msg { 124,194,133,192 };
    byte_vec_t sig { 143,63,41,148,219,229,1,26,12,209,222,9,226,194,172,119,215,115,187,138,58,34,4,42,150,80,35,20,136,57,227,252,110,200,169,245,248,245,170,85,60,102,47,221,185,101,52,71,55,46,58,55,90,23,167,119,34,172,72,125,176,62,66,202 };
    byte_vec_t pk { 2,106,122,61,234,4,216,52,48,36,146,141,32,65,21,147,48,33,234,233,9,171,36,15,137,129,182,152,125,255,194,208,78 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 682 ") {
    byte_vec_t msg { 158,38,23,152 };
    byte_vec_t sig { 156,112,17,65,105,18,160,136,104,140,91,183,157,209,235,178,148,114,113,170,215,101,221,121,61,223,192,223,124,106,191,27,168,5,244,179,79,42,241,208,49,135,122,251,93,28,11,115,21,132,22,141,64,28,22,234,9,40,200,129,202,134,72,165 };
    byte_vec_t pk { 4,106,108,180,105,134,105,106,252,199,171,204,152,177,164,51,41,160,113,163,235,41,0,75,212,69,146,78,11,27,33,221,184,191,31,163,88,102,4,187,229,164,54,119,110,113,98,116,8,35,115,216,62,146,232,39,16,192,73,20,202,153,75,99,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 682 ") {
    byte_vec_t msg { 150,184,115,236 };
    byte_vec_t sig { 194,63,119,53,154,112,215,217,128,91,100,64,142,25,138,159,143,165,71,148,158,217,176,234,12,131,216,240,73,27,40,47,93,202,177,129,142,151,107,213,239,135,164,57,138,132,39,161,131,5,181,178,25,202,43,218,33,68,32,117,15,69,26,65 };
    byte_vec_t pk { 4,157,222,49,28,83,41,140,230,203,157,54,68,249,88,203,28,54,247,9,162,122,133,25,106,95,82,79,198,14,192,166,182,95,185,115,0,122,85,57,245,153,63,237,84,134,3,161,242,16,150,9,184,195,202,113,190,26,234,223,49,238,83,247,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 682 ") {
    byte_vec_t msg { 213,102,29,53 };
    byte_vec_t sig { 46,208,16,234,2,77,184,242,95,133,134,8,203,35,76,189,62,128,61,166,246,130,72,173,133,224,87,45,79,14,145,79,94,135,232,198,50,68,89,121,102,54,131,99,192,57,229,229,129,218,55,186,109,102,196,128,126,94,99,43,9,7,196,212 };
    byte_vec_t pk { 3,56,172,88,208,61,187,180,75,196,159,131,100,133,168,75,62,208,212,87,184,173,17,189,0,150,81,113,181,195,235,71,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 682 ") {
    byte_vec_t msg { 36,130,159,203 };
    byte_vec_t sig { 173,208,5,194,12,249,154,172,74,68,33,72,169,112,118,171,87,194,144,163,60,42,189,164,75,23,116,105,159,185,178,167,97,179,75,193,229,197,241,56,120,250,229,143,17,213,232,70,47,210,0,57,179,80,56,157,198,164,157,234,42,250,240,212 };
    byte_vec_t pk { 2,36,144,41,222,4,130,105,95,130,143,63,124,114,228,176,227,213,163,2,169,248,230,234,1,75,240,33,123,115,185,240,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 683 ") {
    byte_vec_t msg { 119,240,178,48 };
    byte_vec_t sig { 62,55,35,164,152,100,134,67,190,106,81,251,216,65,146,86,234,255,95,40,152,242,14,73,27,182,19,125,9,79,7,50,142,232,235,170,223,202,250,80,78,78,151,249,163,221,204,38,15,204,188,192,255,6,74,36,96,120,16,66,52,167,8,52 };
    byte_vec_t pk { 4,176,172,165,4,108,46,129,156,18,38,69,34,168,47,75,59,226,30,103,71,33,13,241,35,137,101,25,251,86,72,236,47,168,211,247,115,9,109,46,178,96,169,99,248,36,239,156,220,198,204,173,28,192,193,87,58,30,113,221,131,199,253,3,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 683 ") {
    byte_vec_t msg { 65,244,235,15 };
    byte_vec_t sig { 245,196,202,114,230,164,79,186,228,240,195,14,144,241,244,99,102,97,24,114,153,225,37,182,214,161,252,244,152,188,47,170,26,165,13,178,96,120,1,252,230,228,81,67,58,65,56,126,236,98,204,83,14,222,165,147,66,156,230,151,148,19,53,162 };
    byte_vec_t pk { 4,122,186,92,136,14,110,61,193,245,188,43,79,178,27,19,46,223,184,208,155,49,67,8,110,175,16,100,160,53,147,225,235,218,142,62,171,53,139,15,168,68,165,149,191,125,233,204,43,135,15,178,65,19,46,31,172,208,217,186,183,218,51,139,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 683 ") {
    byte_vec_t msg { 15,64,71,132 };
    byte_vec_t sig { 24,141,2,42,145,65,230,72,247,211,8,104,58,36,31,212,184,250,152,186,135,233,99,199,116,251,6,244,4,0,185,79,53,226,210,33,245,60,46,47,148,125,138,14,79,76,171,50,9,146,205,156,54,93,127,76,89,48,24,50,83,36,27,83 };
    byte_vec_t pk { 2,186,196,101,249,238,131,145,157,222,132,140,25,141,208,130,4,143,203,180,25,20,80,179,205,204,254,132,251,186,52,36,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 683 ") {
    byte_vec_t msg { 145,18,58,184 };
    byte_vec_t sig { 189,45,42,121,59,204,165,171,177,191,146,0,89,208,167,9,228,22,178,62,210,140,168,9,76,4,152,190,226,87,120,67,175,61,35,214,89,111,189,81,218,202,31,45,16,64,251,39,68,194,67,97,191,61,240,18,6,100,41,239,211,139,223,91 };
    byte_vec_t pk { 2,118,197,87,204,26,196,7,5,69,181,46,238,243,169,180,165,22,61,171,64,180,147,186,68,213,254,92,250,170,98,254,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 684 ") {
    byte_vec_t msg { 129,106,7,120 };
    byte_vec_t sig { 87,189,18,31,112,138,226,173,57,30,103,144,204,14,240,230,194,237,233,165,83,48,34,233,100,153,64,9,199,19,221,89,229,57,131,2,251,239,119,240,173,35,185,59,153,170,134,231,81,220,1,24,49,149,106,120,174,245,151,189,37,28,220,96 };
    byte_vec_t pk { 4,170,161,118,10,234,16,51,25,23,30,166,190,214,46,209,125,225,48,217,17,12,16,114,8,51,90,111,2,181,172,152,72,208,178,18,133,185,14,9,156,148,209,115,230,0,132,154,93,160,254,26,83,180,214,76,228,231,94,152,73,89,119,151,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 684 ") {
    byte_vec_t msg { 60,34,167,216 };
    byte_vec_t sig { 158,6,15,73,163,114,104,2,196,24,63,189,50,180,19,3,91,66,65,42,160,172,199,194,210,105,124,49,4,143,185,204,92,51,12,9,100,246,80,228,8,183,43,124,154,68,74,108,64,117,131,169,29,94,187,147,23,51,251,50,67,90,235,126 };
    byte_vec_t pk { 4,30,183,235,50,76,173,254,109,103,134,233,197,200,114,72,178,253,243,3,235,25,53,188,121,35,88,142,110,253,19,176,57,113,126,97,200,158,122,118,147,171,49,19,54,105,253,113,218,157,171,214,133,114,144,66,103,128,252,37,239,72,134,41,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 684 ") {
    byte_vec_t msg { 228,46,157,62 };
    byte_vec_t sig { 214,80,166,206,252,14,58,228,183,185,136,205,171,37,175,63,142,111,25,217,58,21,39,147,96,161,103,167,238,7,184,227,239,128,160,179,225,163,203,112,244,244,52,190,77,12,240,239,179,100,188,12,98,168,245,110,108,3,166,42,155,121,28,188 };
    byte_vec_t pk { 2,15,119,134,191,241,213,11,205,247,55,36,82,131,138,201,19,94,177,25,117,220,157,107,127,201,11,82,63,35,114,157,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 684 ") {
    byte_vec_t msg { 59,187,43,54 };
    byte_vec_t sig { 126,189,119,36,114,19,249,197,134,84,130,90,214,40,122,179,1,7,20,7,146,170,211,117,144,229,227,97,97,35,206,166,61,121,225,139,82,75,94,71,105,52,151,155,184,145,99,52,80,229,76,9,245,199,24,71,234,36,146,183,206,158,190,112 };
    byte_vec_t pk { 2,208,53,119,4,255,105,255,138,32,234,206,152,93,31,47,233,148,9,161,221,97,249,94,175,37,123,0,121,193,29,140,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 685 ") {
    byte_vec_t msg { 174,122,95,240 };
    byte_vec_t sig { 161,126,232,231,155,116,178,253,152,45,90,86,233,86,155,125,107,111,96,53,198,236,215,188,87,235,244,248,18,227,210,128,26,134,92,63,127,226,218,225,128,147,44,0,22,250,250,167,134,168,146,202,244,181,161,197,38,163,115,210,189,227,17,102 };
    byte_vec_t pk { 4,158,34,85,129,93,214,10,253,135,199,0,208,152,24,184,8,182,18,14,0,252,193,204,150,68,124,72,148,214,117,244,175,151,6,209,202,135,218,167,70,235,91,236,231,119,234,36,48,215,134,159,114,123,33,184,129,125,206,176,150,227,85,140,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 685 ") {
    byte_vec_t msg { 100,85,219,189 };
    byte_vec_t sig { 0,68,240,152,134,107,43,119,50,86,37,38,30,198,213,106,100,131,6,198,60,99,137,100,130,249,38,220,72,213,216,191,46,192,51,87,60,18,40,253,134,69,186,214,121,207,90,245,111,8,218,227,156,102,16,240,68,155,63,195,207,100,95,9 };
    byte_vec_t pk { 4,29,206,148,26,202,6,187,88,253,72,72,13,126,172,77,54,181,110,223,114,16,226,116,170,11,14,98,219,252,86,153,171,189,91,83,88,44,128,250,159,212,238,43,135,135,120,202,82,84,138,238,63,115,199,83,110,163,185,44,243,195,186,106,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 685 ") {
    byte_vec_t msg { 56,206,15,137 };
    byte_vec_t sig { 229,26,46,88,90,8,152,122,153,31,84,168,175,114,16,28,217,159,83,192,5,89,246,122,116,78,81,60,223,27,240,224,215,156,12,96,25,94,227,235,249,244,238,228,191,25,188,165,255,32,117,244,139,118,70,145,175,114,65,250,40,207,37,233 };
    byte_vec_t pk { 2,170,154,57,30,246,241,244,124,197,202,208,49,88,184,46,123,197,35,71,52,144,141,237,157,99,112,153,0,185,169,239,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 685 ") {
    byte_vec_t msg { 0,57,245,170 };
    byte_vec_t sig { 129,126,249,193,52,151,66,197,166,251,131,84,121,209,65,25,248,48,67,157,62,78,96,108,171,48,68,17,236,58,171,157,57,207,143,67,116,89,52,142,68,232,195,13,18,209,186,31,82,237,172,77,143,179,31,35,0,108,106,211,219,141,91,103 };
    byte_vec_t pk { 3,33,111,121,78,0,97,72,9,248,71,16,199,180,46,251,11,1,236,189,22,206,32,71,181,21,213,65,182,34,43,108,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 686 ") {
    byte_vec_t msg { 253,61,153,253 };
    byte_vec_t sig { 175,7,182,243,57,152,21,200,124,87,82,49,209,54,168,133,26,41,74,0,148,140,46,199,149,182,179,38,232,163,209,154,148,163,87,165,147,207,131,253,1,164,183,32,46,107,255,220,8,80,76,238,246,255,17,231,158,62,75,78,200,54,109,154 };
    byte_vec_t pk { 4,165,127,56,157,195,46,56,156,99,76,209,171,146,60,64,61,255,107,148,126,64,247,181,38,194,87,143,209,141,112,173,62,140,240,190,236,52,211,154,221,38,108,253,172,36,109,55,100,173,193,216,26,68,180,155,205,176,216,51,77,0,181,152,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 686 ") {
    byte_vec_t msg { 23,138,123,81 };
    byte_vec_t sig { 101,15,240,36,204,85,73,62,242,203,59,235,213,177,182,23,212,187,55,116,210,24,178,173,251,148,50,202,162,185,205,37,95,251,224,142,131,108,251,26,213,142,13,163,180,45,220,39,141,94,0,82,210,173,179,198,189,238,146,66,98,27,88,100 };
    byte_vec_t pk { 4,119,164,197,50,141,128,204,245,116,148,114,133,35,205,146,71,206,4,0,119,92,95,208,237,30,179,116,146,101,161,200,155,116,104,122,201,181,161,26,118,27,154,196,143,97,218,236,215,50,177,35,84,20,62,57,251,225,244,0,158,179,20,156,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 686 ") {
    byte_vec_t msg { 196,86,181,9 };
    byte_vec_t sig { 193,11,71,178,6,110,170,100,43,70,9,127,103,77,11,210,231,223,92,104,134,152,181,26,250,79,214,228,247,250,21,36,193,186,120,74,6,28,174,162,142,229,113,28,169,130,198,231,206,72,215,39,170,117,132,232,62,179,56,37,194,218,76,147 };
    byte_vec_t pk { 2,39,19,131,129,185,160,202,197,220,209,146,37,178,17,96,121,108,194,5,246,226,41,86,80,195,64,201,176,112,214,24,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 686 ") {
    byte_vec_t msg { 124,5,102,59 };
    byte_vec_t sig { 89,170,83,19,10,28,196,142,201,21,14,108,221,181,83,41,211,219,72,181,228,238,100,139,58,97,225,230,206,119,23,89,249,195,254,98,208,45,139,46,106,253,214,205,156,55,243,221,39,51,226,219,41,255,41,162,216,54,113,55,184,248,224,216 };
    byte_vec_t pk { 2,178,1,53,55,157,242,85,133,107,38,210,115,168,44,154,29,227,134,226,227,121,178,116,24,182,148,87,195,243,146,87,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 687 ") {
    byte_vec_t msg { 14,206,165,175 };
    byte_vec_t sig { 21,235,92,221,157,35,198,170,49,48,152,66,203,128,121,82,65,9,14,249,252,1,18,45,29,31,110,61,98,38,128,168,82,65,249,199,160,129,99,213,157,165,37,9,168,243,217,158,7,41,253,107,43,226,146,161,132,201,164,197,95,81,19,144 };
    byte_vec_t pk { 4,165,70,246,124,20,203,177,185,241,126,244,183,52,45,129,111,209,251,1,1,3,65,28,60,208,227,49,245,113,84,1,153,223,19,215,149,100,88,8,164,13,237,162,86,253,188,254,12,155,181,142,101,42,136,130,179,9,127,87,203,133,65,79,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 687 ") {
    byte_vec_t msg { 230,204,56,227 };
    byte_vec_t sig { 81,17,69,180,121,50,179,12,215,156,132,31,119,171,17,76,185,62,6,19,120,175,37,215,241,227,241,77,29,200,229,212,20,24,26,225,147,106,103,4,239,213,165,186,202,127,81,111,187,71,234,221,35,38,70,169,207,249,49,62,120,134,200,115 };
    byte_vec_t pk { 4,113,50,213,222,202,240,5,5,197,141,97,117,244,27,181,238,193,188,75,127,162,45,91,220,55,205,41,203,90,125,171,246,51,248,194,237,26,176,60,229,84,219,250,112,173,166,177,117,100,159,173,244,62,6,97,162,241,105,249,225,22,79,249,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 687 ") {
    byte_vec_t msg { 137,246,19,30 };
    byte_vec_t sig { 195,36,157,198,103,19,77,121,226,151,43,1,95,155,79,44,178,109,148,39,242,63,183,45,253,3,12,227,75,75,246,163,116,226,53,200,93,176,58,195,39,86,74,195,68,150,128,48,115,222,4,154,86,152,71,145,229,38,177,211,48,233,111,89 };
    byte_vec_t pk { 3,78,99,110,97,11,79,122,142,155,174,121,25,18,30,118,9,149,91,150,6,15,238,171,67,97,86,176,151,151,2,25,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 687 ") {
    byte_vec_t msg { 129,20,251,213 };
    byte_vec_t sig { 72,20,22,100,192,144,38,39,203,193,146,157,24,240,255,45,242,160,230,210,30,45,84,52,4,247,98,152,242,143,59,197,249,46,22,168,80,66,110,97,207,226,19,49,90,88,15,186,126,40,28,210,127,4,231,188,89,139,241,191,38,59,237,174 };
    byte_vec_t pk { 3,229,240,49,241,234,105,81,23,238,0,248,229,80,38,9,181,87,31,24,21,118,154,254,110,186,115,242,60,69,113,93,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 688 ") {
    byte_vec_t msg { 112,106,147,214 };
    byte_vec_t sig { 114,71,189,146,44,173,129,174,181,190,2,155,132,61,94,47,167,193,179,11,11,200,128,143,27,125,142,188,173,74,186,180,200,117,55,7,7,142,105,181,243,164,49,190,52,48,125,154,176,189,207,213,230,68,69,226,137,240,79,48,174,62,71,102 };
    byte_vec_t pk { 4,72,55,39,77,147,192,173,107,15,204,241,232,61,52,253,158,57,165,139,204,204,162,108,18,74,48,102,111,52,103,15,155,228,42,186,70,191,15,57,18,46,118,255,179,81,237,193,90,238,42,90,242,228,161,130,172,66,41,78,254,25,30,66,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 688 ") {
    byte_vec_t msg { 193,207,144,83 };
    byte_vec_t sig { 72,133,95,104,233,64,23,111,24,137,8,29,41,108,81,91,25,37,195,189,63,201,229,205,58,84,239,149,225,124,210,29,176,137,173,74,65,120,153,127,185,4,141,143,147,28,194,133,66,164,131,169,186,138,97,106,68,119,243,72,74,110,175,221 };
    byte_vec_t pk { 4,228,80,206,116,75,20,36,111,111,1,86,124,162,141,23,117,224,87,26,114,42,192,132,227,55,22,113,21,115,60,113,119,208,157,118,14,148,18,162,142,118,13,38,230,198,126,191,146,39,65,63,17,24,190,192,16,11,147,39,45,1,131,250,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 688 ") {
    byte_vec_t msg { 119,170,34,47 };
    byte_vec_t sig { 219,44,216,128,170,26,25,217,129,196,83,213,229,228,156,152,254,129,121,153,238,135,82,191,251,151,179,158,193,163,112,2,35,137,180,53,178,34,50,243,118,78,144,204,175,181,182,32,245,217,58,117,9,234,138,211,191,84,49,19,54,229,152,236 };
    byte_vec_t pk { 2,60,141,248,204,140,44,177,5,103,186,83,178,235,248,60,186,255,180,167,64,24,208,62,47,4,144,245,86,236,32,139,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 688 ") {
    byte_vec_t msg { 25,5,50,171 };
    byte_vec_t sig { 117,244,252,59,202,195,82,87,248,38,109,110,111,156,216,60,97,67,230,217,237,26,28,36,182,4,214,165,48,21,60,34,168,195,239,66,194,163,112,143,232,255,89,226,28,132,228,104,236,133,42,3,167,24,76,187,137,176,144,224,206,117,255,53 };
    byte_vec_t pk { 2,254,26,213,174,110,61,9,2,153,200,156,85,204,10,85,52,130,84,244,44,25,233,110,28,141,20,210,26,153,135,57,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 689 ") {
    byte_vec_t msg { 230,220,138,213 };
    byte_vec_t sig { 78,115,202,136,78,37,84,105,105,87,154,114,182,102,218,61,96,135,209,124,240,108,28,255,162,136,199,31,179,229,17,159,27,169,94,167,106,7,185,36,183,136,111,193,82,188,187,96,52,1,228,18,215,30,0,142,128,254,13,160,92,232,4,53 };
    byte_vec_t pk { 4,38,18,253,165,165,167,225,92,209,225,210,236,105,122,247,95,226,101,12,203,163,44,36,105,165,13,81,130,109,121,12,70,178,190,214,98,234,23,24,122,163,23,54,206,219,229,246,239,83,214,85,107,180,135,148,7,226,127,239,180,66,63,235,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 689 ") {
    byte_vec_t msg { 184,92,40,142 };
    byte_vec_t sig { 173,51,178,70,78,229,53,5,148,121,113,145,118,214,212,156,194,167,165,220,168,50,216,210,204,44,183,123,230,9,165,49,210,96,169,160,183,221,103,194,94,81,197,8,45,43,8,92,33,90,245,217,239,21,228,181,222,73,115,52,119,67,212,181 };
    byte_vec_t pk { 4,65,134,247,102,217,139,75,164,42,15,121,99,170,32,158,52,73,209,52,249,50,13,22,249,48,151,157,94,250,133,205,228,204,225,247,149,222,93,66,13,216,175,83,163,196,131,139,19,173,9,223,26,41,244,78,81,149,98,238,254,127,47,126,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 689 ") {
    byte_vec_t msg { 37,218,37,194 };
    byte_vec_t sig { 11,245,95,90,23,126,52,22,119,87,167,224,105,22,142,120,52,199,87,196,188,178,168,200,185,239,75,187,234,73,62,246,137,149,242,133,136,231,16,251,37,37,107,254,193,81,61,217,119,247,56,86,5,153,229,47,109,190,64,134,40,100,177,246 };
    byte_vec_t pk { 3,230,136,146,128,174,142,254,191,189,85,53,176,128,177,254,178,89,70,14,185,90,103,10,7,252,230,94,195,191,74,239,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 689 ") {
    byte_vec_t msg { 80,173,112,34 };
    byte_vec_t sig { 172,56,121,15,24,88,171,100,52,59,113,217,196,143,131,173,29,180,187,51,85,220,69,97,76,57,27,99,140,212,193,141,185,158,93,78,154,33,151,112,82,137,69,57,137,221,1,186,52,215,145,222,249,17,127,161,107,183,47,79,97,143,198,175 };
    byte_vec_t pk { 3,0,122,61,21,87,84,31,29,155,231,133,102,81,222,144,189,116,66,65,173,7,248,144,228,121,136,139,231,179,19,125,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 690 ") {
    byte_vec_t msg { 119,16,104,49 };
    byte_vec_t sig { 103,171,225,145,232,132,82,204,73,229,89,126,4,13,39,46,131,226,223,204,123,185,117,192,251,184,188,98,181,206,252,175,125,6,20,186,143,217,124,23,196,64,255,25,196,51,63,218,219,196,155,210,56,141,208,42,46,35,139,31,30,43,128,126 };
    byte_vec_t pk { 4,216,79,254,217,86,54,53,30,0,116,237,20,198,192,229,148,201,184,243,220,200,110,158,200,34,14,152,173,124,234,162,121,183,34,69,73,111,61,191,12,49,249,81,222,43,216,149,222,152,138,121,45,171,178,133,22,16,152,74,228,92,13,122,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 690 ") {
    byte_vec_t msg { 93,59,153,122 };
    byte_vec_t sig { 64,93,238,121,113,76,98,14,95,147,191,174,172,55,57,87,242,42,145,114,123,79,226,58,16,52,122,28,234,28,101,132,89,224,37,7,108,177,181,2,241,13,37,119,149,171,9,210,53,6,108,48,158,106,241,144,174,1,100,49,16,228,104,82 };
    byte_vec_t pk { 4,40,237,28,245,87,2,8,18,40,12,227,148,208,4,153,96,151,68,20,143,77,182,67,247,47,135,229,209,220,151,79,218,206,219,42,28,11,124,53,172,207,150,196,2,220,212,102,180,76,65,25,74,255,180,57,21,229,67,141,159,251,59,214,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 690 ") {
    byte_vec_t msg { 25,225,220,122 };
    byte_vec_t sig { 16,170,12,239,231,41,17,5,57,168,84,59,169,159,215,29,197,69,51,169,106,253,160,2,45,23,168,229,169,122,76,146,65,54,102,216,185,174,163,164,93,15,62,196,105,140,158,236,190,150,0,212,228,180,181,211,249,210,120,82,56,218,175,111 };
    byte_vec_t pk { 3,224,67,185,37,90,210,31,248,235,15,200,4,174,181,175,180,119,144,117,117,92,99,210,129,52,236,74,132,229,222,111,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 690 ") {
    byte_vec_t msg { 200,87,1,82 };
    byte_vec_t sig { 127,46,252,92,8,138,19,177,128,39,254,1,241,192,102,89,33,181,13,183,115,83,254,19,235,110,222,134,56,142,25,123,19,242,111,108,114,151,243,183,78,10,201,252,110,2,145,127,207,131,124,19,241,250,156,245,186,113,238,6,205,164,101,165 };
    byte_vec_t pk { 2,90,43,66,234,241,100,231,99,68,91,20,149,48,115,85,96,236,164,200,27,219,255,53,97,13,255,239,154,91,83,182,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 691 ") {
    byte_vec_t msg { 195,124,66,17 };
    byte_vec_t sig { 175,3,231,208,6,56,54,15,96,144,203,63,92,99,20,240,106,155,35,32,101,209,71,89,144,177,68,74,228,20,14,38,156,100,219,28,224,149,151,121,148,218,78,153,85,23,236,31,192,106,17,91,82,145,148,7,89,45,117,96,233,57,30,63 };
    byte_vec_t pk { 4,113,14,207,38,15,83,23,101,37,3,176,43,247,140,144,117,142,39,58,10,150,45,134,73,48,164,209,176,240,249,207,58,110,203,199,155,251,237,3,9,91,162,219,154,68,178,249,24,59,57,19,84,196,226,235,95,235,150,64,142,123,164,64,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 691 ") {
    byte_vec_t msg { 77,236,68,43 };
    byte_vec_t sig { 231,84,112,68,130,239,101,223,155,231,8,7,130,246,198,52,149,206,157,85,187,237,190,81,103,142,121,138,113,94,172,51,17,92,69,78,84,107,82,0,15,21,100,159,26,102,240,125,247,144,156,139,146,69,17,73,102,127,51,181,169,157,26,169 };
    byte_vec_t pk { 4,138,197,64,48,0,183,144,234,104,130,88,67,175,232,17,43,185,174,152,232,5,230,137,137,177,44,200,124,160,107,164,161,164,242,83,89,203,135,210,159,254,195,82,120,183,87,118,236,28,207,238,57,226,232,210,132,81,196,249,17,241,229,251,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 691 ") {
    byte_vec_t msg { 194,115,200,125 };
    byte_vec_t sig { 208,27,51,86,84,59,213,4,61,39,151,23,192,247,10,110,115,183,114,97,238,67,136,151,125,87,65,124,173,32,46,150,90,226,23,250,168,175,32,128,239,71,64,135,63,245,133,58,14,233,194,237,43,60,120,164,80,75,49,194,105,42,246,103 };
    byte_vec_t pk { 3,211,31,113,161,73,123,144,209,172,206,15,18,144,117,3,191,115,63,115,4,105,219,113,159,241,3,109,110,136,106,162,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 691 ") {
    byte_vec_t msg { 150,168,208,30 };
    byte_vec_t sig { 36,238,148,12,244,176,183,148,164,29,34,4,55,220,102,86,108,234,131,58,19,49,197,155,94,200,107,127,197,76,182,175,83,63,77,221,19,16,58,179,149,122,201,168,136,165,190,77,226,214,239,229,238,87,11,30,121,231,138,136,218,109,65,185 };
    byte_vec_t pk { 3,208,95,171,143,68,96,233,162,157,31,23,114,186,89,167,103,227,82,210,197,149,68,215,95,111,77,6,157,231,178,254,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 692 ") {
    byte_vec_t msg { 148,221,235,236 };
    byte_vec_t sig { 135,70,45,148,73,156,99,101,147,39,125,169,191,79,92,172,139,61,221,54,198,175,82,134,226,70,18,103,169,12,112,228,189,180,201,199,19,1,98,131,172,187,127,37,11,169,78,249,217,121,201,89,150,96,174,151,127,88,245,147,147,136,135,251 };
    byte_vec_t pk { 4,162,97,146,177,251,114,1,66,104,246,178,231,141,158,219,224,204,38,51,66,245,185,231,91,143,251,88,235,198,80,13,253,195,181,27,189,223,162,6,182,80,132,90,28,222,115,254,251,21,74,83,206,230,0,90,53,118,80,93,247,190,240,97,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 692 ") {
    byte_vec_t msg { 22,90,117,96 };
    byte_vec_t sig { 148,0,26,188,192,108,253,100,94,109,6,234,99,173,182,71,196,22,107,198,168,144,61,205,54,89,33,135,221,83,50,244,253,144,33,171,26,196,212,103,0,229,35,113,9,55,228,214,201,81,253,233,229,174,170,31,41,231,189,210,70,151,87,82 };
    byte_vec_t pk { 4,254,163,240,125,49,135,185,3,75,161,74,214,94,132,45,10,26,248,229,145,170,205,207,29,207,230,159,157,201,20,11,73,77,178,201,200,46,84,244,118,182,130,192,238,150,156,80,73,233,184,143,122,92,209,122,29,165,182,174,16,73,130,143,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 692 ") {
    byte_vec_t msg { 120,65,156,27 };
    byte_vec_t sig { 143,188,76,125,101,178,75,229,98,156,127,4,13,115,58,241,9,5,139,15,196,229,225,204,88,214,147,122,100,61,168,216,97,78,118,34,173,196,65,113,90,75,171,170,58,204,94,91,176,216,47,22,140,66,86,245,207,217,111,224,40,250,143,98 };
    byte_vec_t pk { 2,93,135,40,41,142,158,104,148,100,192,199,67,55,57,175,86,232,125,85,3,80,144,45,30,120,152,213,77,175,161,39,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 692 ") {
    byte_vec_t msg { 172,163,132,147 };
    byte_vec_t sig { 247,213,95,149,48,124,137,209,14,82,190,8,193,57,231,15,13,9,17,74,76,85,165,38,139,24,192,210,68,30,204,236,79,73,253,70,223,101,232,79,46,225,95,45,251,2,128,105,90,219,221,165,220,103,233,27,141,240,22,119,158,101,151,75 };
    byte_vec_t pk { 2,16,10,210,150,107,254,84,162,173,63,193,56,173,202,199,17,9,36,40,133,63,36,86,173,46,177,225,235,199,207,174,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 693 ") {
    byte_vec_t msg { 41,239,228,42 };
    byte_vec_t sig { 6,122,112,101,89,225,201,25,43,213,89,120,207,229,41,50,77,68,181,135,53,100,164,222,183,153,161,198,72,97,255,226,73,52,138,163,40,104,222,198,50,203,42,92,150,173,246,30,126,94,210,64,160,141,59,51,2,23,26,158,245,165,83,122 };
    byte_vec_t pk { 4,18,92,130,157,49,81,160,151,20,228,17,35,150,169,115,151,111,9,135,52,7,149,28,110,22,250,181,53,244,127,141,33,241,167,10,22,53,248,91,40,27,120,157,253,133,145,108,189,165,252,153,235,143,194,234,7,112,181,150,225,179,180,66,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 693 ") {
    byte_vec_t msg { 160,216,145,148 };
    byte_vec_t sig { 160,58,202,34,126,149,121,139,133,193,220,193,231,206,227,174,228,47,135,64,50,210,68,183,82,234,42,68,49,230,63,218,22,199,116,226,191,186,231,105,1,212,91,122,20,21,21,252,74,22,148,72,226,181,79,135,226,223,186,228,212,133,135,203 };
    byte_vec_t pk { 4,159,130,217,97,80,45,158,135,171,114,144,53,86,201,190,172,173,247,254,103,205,220,217,236,188,214,88,106,31,137,174,194,116,53,108,253,83,136,223,1,193,197,18,216,10,104,236,42,67,10,97,29,132,48,105,141,192,40,95,224,67,240,171,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 693 ") {
    byte_vec_t msg { 51,65,50,19 };
    byte_vec_t sig { 242,92,48,40,188,83,50,81,205,159,171,22,57,53,81,198,79,10,200,139,55,79,130,99,19,91,4,4,224,70,185,133,254,48,32,140,237,133,228,23,228,159,34,249,85,63,119,119,33,18,182,14,116,13,31,209,13,20,133,87,228,163,171,22 };
    byte_vec_t pk { 2,28,4,24,127,28,133,37,242,79,156,92,192,216,93,181,125,15,129,35,152,155,83,131,234,8,255,254,8,227,134,37,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 693 ") {
    byte_vec_t msg { 90,80,42,164 };
    byte_vec_t sig { 47,79,232,80,218,214,246,198,233,71,193,15,113,12,24,251,58,47,54,87,143,83,170,41,241,121,122,209,146,132,149,221,111,129,99,217,97,228,232,206,138,47,95,12,50,180,82,11,207,13,208,34,164,29,255,2,135,3,126,96,83,177,173,128 };
    byte_vec_t pk { 3,38,67,203,210,98,85,11,146,133,135,218,15,230,243,49,48,233,122,132,232,62,126,157,106,155,241,97,163,114,179,225,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 694 ") {
    byte_vec_t msg { 62,44,134,13 };
    byte_vec_t sig { 25,31,170,217,65,33,71,51,60,35,221,103,106,251,152,83,200,91,47,20,183,130,119,59,83,210,107,116,114,106,69,5,214,158,225,131,83,127,214,137,64,161,192,27,5,210,70,53,19,239,184,97,167,52,208,231,123,6,228,21,0,116,198,59 };
    byte_vec_t pk { 4,171,37,122,106,169,160,80,185,69,144,154,202,174,121,107,90,44,225,68,105,53,105,248,245,22,218,42,83,54,83,211,195,87,25,108,247,164,123,88,34,86,186,231,65,221,63,218,107,92,115,186,216,242,108,144,207,119,55,233,65,62,240,54,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 694 ") {
    byte_vec_t msg { 92,244,85,183 };
    byte_vec_t sig { 78,98,212,229,161,118,152,16,4,146,140,172,8,173,129,110,55,196,219,11,125,172,163,187,193,235,167,23,150,171,131,36,240,86,13,236,18,103,237,59,184,157,106,250,62,240,222,11,29,108,125,239,112,95,248,134,244,121,55,116,4,165,82,34 };
    byte_vec_t pk { 4,195,10,246,160,144,151,117,102,207,17,220,21,158,95,89,44,146,147,155,251,41,23,219,8,107,128,132,253,244,195,210,147,17,134,228,107,222,45,197,59,214,185,39,69,188,94,179,83,84,153,228,207,74,210,124,6,91,8,7,167,190,87,44,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 694 ") {
    byte_vec_t msg { 47,43,217,11 };
    byte_vec_t sig { 101,199,129,57,160,16,136,206,75,54,244,230,101,20,96,188,147,135,57,28,147,107,43,188,198,48,58,99,195,127,239,122,198,209,91,196,209,178,51,65,49,66,189,56,232,213,208,27,167,178,25,33,129,125,0,150,218,230,77,208,124,145,250,56 };
    byte_vec_t pk { 3,101,90,204,104,223,45,50,67,40,4,72,201,67,49,189,142,98,243,50,71,117,244,196,198,175,2,134,178,54,212,99,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 694 ") {
    byte_vec_t msg { 81,45,146,159 };
    byte_vec_t sig { 51,31,43,154,239,33,142,135,55,246,130,24,80,177,209,165,210,20,122,222,102,179,172,37,152,82,234,26,80,133,63,203,24,2,78,173,235,220,38,41,240,72,43,0,98,104,37,60,198,169,41,111,229,25,209,14,22,98,108,145,250,138,184,196 };
    byte_vec_t pk { 2,44,84,25,140,95,140,21,177,134,38,74,223,178,62,156,100,185,198,56,83,170,142,146,4,175,226,146,109,94,176,16,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 695 ") {
    byte_vec_t msg { 162,227,39,171 };
    byte_vec_t sig { 110,202,106,137,186,61,106,66,97,227,18,115,84,30,224,59,211,21,142,192,165,122,30,87,21,3,115,51,21,68,210,125,149,110,72,184,185,245,125,23,128,210,122,188,77,128,65,86,154,16,85,186,60,61,55,13,143,83,115,144,137,215,143,151 };
    byte_vec_t pk { 4,9,230,86,174,89,7,228,228,179,170,28,140,75,199,144,115,68,75,37,5,29,244,186,180,120,128,91,152,6,64,162,226,41,48,247,237,70,243,68,210,50,34,118,225,17,91,69,12,140,134,32,91,228,59,209,106,169,84,20,168,118,63,44,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 695 ") {
    byte_vec_t msg { 45,185,234,167 };
    byte_vec_t sig { 253,255,145,32,95,132,46,95,31,245,33,182,32,69,3,129,67,62,187,216,229,112,0,73,138,45,5,181,93,222,85,171,135,188,187,250,150,86,248,5,5,164,192,248,164,184,98,159,146,171,87,29,7,127,70,180,80,22,191,30,229,17,222,211 };
    byte_vec_t pk { 4,115,237,180,253,34,122,114,76,76,0,190,103,200,134,161,209,21,217,147,175,224,89,62,109,160,12,125,55,212,47,89,162,35,243,22,156,79,173,89,34,165,89,248,43,168,211,14,204,189,203,106,236,46,65,220,249,240,16,92,45,18,41,139,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 695 ") {
    byte_vec_t msg { 108,126,74,72 };
    byte_vec_t sig { 105,20,101,45,67,83,36,83,34,192,165,97,118,113,56,36,221,154,177,83,136,148,192,121,241,87,186,36,109,192,16,92,21,15,63,198,196,140,45,148,152,126,59,60,119,44,167,157,254,144,7,40,217,254,104,219,174,193,195,184,103,247,15,116 };
    byte_vec_t pk { 3,101,51,2,16,136,235,0,208,20,140,155,6,240,8,251,70,183,26,174,98,44,85,242,222,157,141,39,176,236,187,124,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 695 ") {
    byte_vec_t msg { 133,96,25,26 };
    byte_vec_t sig { 209,48,189,247,121,94,121,67,11,96,175,128,18,16,125,74,36,29,136,44,168,48,19,93,151,250,224,191,86,88,205,130,147,70,251,12,134,22,207,94,101,245,157,188,64,233,136,241,48,44,205,73,173,172,35,114,41,103,193,34,141,146,175,41 };
    byte_vec_t pk { 2,79,101,204,22,204,63,98,221,180,83,32,58,21,89,94,220,202,223,3,40,73,181,130,131,90,23,165,56,217,178,145,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 696 ") {
    byte_vec_t msg { 135,147,126,44 };
    byte_vec_t sig { 100,83,17,250,112,45,165,112,28,169,16,254,57,11,3,110,250,211,193,119,2,118,61,0,205,239,161,195,184,3,36,91,11,5,72,208,181,235,142,94,36,166,213,152,129,101,224,205,171,125,182,249,155,203,155,154,254,23,248,252,20,65,181,244 };
    byte_vec_t pk { 4,221,244,154,167,158,117,95,24,15,231,53,97,61,246,253,56,228,214,168,56,116,53,54,219,247,143,109,10,152,151,16,237,147,212,121,226,239,27,183,111,77,28,68,8,105,46,28,106,44,120,195,85,255,32,252,127,11,239,118,243,124,123,48,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 696 ") {
    byte_vec_t msg { 92,174,221,44 };
    byte_vec_t sig { 7,85,64,74,41,25,202,119,226,35,183,249,179,204,170,45,51,79,62,42,185,196,196,83,94,55,6,75,222,50,5,195,146,60,165,34,8,224,64,197,229,21,109,131,208,249,119,24,72,46,79,192,186,243,114,44,94,230,118,170,5,3,84,212 };
    byte_vec_t pk { 4,221,202,88,12,41,79,118,228,28,104,191,84,143,26,222,132,51,176,247,110,161,115,23,83,248,16,140,158,96,228,213,98,228,251,29,9,136,69,21,57,142,233,235,175,210,85,198,125,210,151,108,121,18,250,238,110,240,192,109,209,68,225,36,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 696 ") {
    byte_vec_t msg { 85,105,108,2 };
    byte_vec_t sig { 248,12,226,236,228,148,139,216,101,169,160,136,210,135,163,163,117,156,201,246,120,123,133,106,189,221,177,61,240,65,194,3,96,35,235,192,74,234,60,139,144,89,245,15,93,240,136,205,24,147,110,199,4,254,181,229,204,209,48,188,97,202,85,45 };
    byte_vec_t pk { 3,55,96,17,197,143,61,19,102,113,109,32,103,234,1,64,117,229,5,102,26,226,14,223,47,196,152,255,173,21,132,225,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 696 ") {
    byte_vec_t msg { 21,230,255,188 };
    byte_vec_t sig { 98,252,125,79,174,24,204,34,201,231,182,140,156,167,180,65,156,245,66,56,62,159,124,196,39,41,131,0,252,93,200,26,93,64,135,223,42,5,180,99,11,114,246,204,58,103,95,51,35,112,127,4,31,58,234,34,252,3,161,181,44,218,47,18 };
    byte_vec_t pk { 2,202,202,202,107,83,238,179,194,173,171,4,191,231,231,242,73,205,9,11,231,0,92,102,175,236,185,39,157,217,173,134,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 697 ") {
    byte_vec_t msg { 112,13,99,198 };
    byte_vec_t sig { 132,207,223,82,245,164,102,126,124,127,38,47,216,55,173,31,229,186,219,137,152,73,75,3,155,70,229,116,112,25,174,72,133,79,187,19,217,173,119,13,213,193,130,80,185,222,215,191,203,133,224,63,219,2,153,85,241,114,56,40,136,215,204,104 };
    byte_vec_t pk { 4,99,170,169,144,85,132,182,19,223,102,7,97,57,63,105,138,141,233,89,107,158,132,136,46,17,150,144,95,89,135,91,36,89,114,127,203,231,212,165,227,75,113,105,86,163,67,253,54,72,117,230,204,196,93,236,217,141,57,37,162,252,48,166,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 697 ") {
    byte_vec_t msg { 179,163,254,43 };
    byte_vec_t sig { 159,217,241,41,88,62,112,194,196,155,101,169,87,94,17,187,169,84,168,208,68,241,95,226,153,36,240,119,245,13,159,244,162,121,186,21,205,146,37,184,28,145,178,73,105,128,61,98,13,37,166,121,35,15,167,231,154,186,91,183,60,34,172,234 };
    byte_vec_t pk { 4,150,125,176,169,128,2,191,227,74,31,119,139,177,77,160,156,174,57,207,82,82,111,78,34,107,23,193,0,245,166,9,49,39,28,129,155,13,160,193,144,177,229,217,69,47,157,92,114,162,143,219,136,189,44,183,84,160,156,232,101,170,10,219,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 697 ") {
    byte_vec_t msg { 33,0,96,61 };
    byte_vec_t sig { 160,13,3,29,145,189,45,53,25,246,89,226,190,120,19,7,24,156,94,237,76,130,76,36,58,206,211,210,190,114,138,92,155,93,232,155,99,48,50,241,116,71,2,151,150,142,212,48,142,220,187,123,189,134,65,221,51,87,6,247,65,110,52,43 };
    byte_vec_t pk { 2,15,114,213,58,2,214,183,71,212,172,131,70,184,36,205,126,73,138,46,193,5,33,64,105,231,193,94,114,107,60,62,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 697 ") {
    byte_vec_t msg { 113,2,13,253 };
    byte_vec_t sig { 119,231,50,44,18,88,220,176,123,163,7,25,75,86,43,86,203,82,181,6,129,189,33,80,42,125,65,83,130,240,243,149,216,229,88,31,89,250,5,76,49,155,27,217,114,156,246,217,31,76,30,59,250,238,79,97,238,47,26,100,140,223,199,13 };
    byte_vec_t pk { 3,218,14,239,31,180,130,183,69,225,73,31,11,241,252,30,224,252,185,215,159,231,155,246,112,36,80,116,220,0,250,83,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 698 ") {
    byte_vec_t msg { 38,19,219,249 };
    byte_vec_t sig { 2,231,130,131,208,24,236,107,65,96,194,37,247,23,83,246,194,218,171,91,236,252,71,111,249,106,160,157,211,94,126,201,221,121,185,20,228,227,192,8,176,200,29,19,27,11,145,74,84,58,240,233,21,17,121,1,253,185,196,71,56,82,249,169 };
    byte_vec_t pk { 4,39,40,233,142,51,78,244,165,53,18,76,64,148,94,222,188,58,193,245,62,197,195,35,2,112,87,44,168,53,145,114,154,212,118,118,55,17,11,175,35,41,44,250,148,183,202,24,21,99,94,63,236,252,232,32,215,205,6,254,35,42,6,36,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 698 ") {
    byte_vec_t msg { 104,232,65,3 };
    byte_vec_t sig { 162,241,51,51,96,82,238,219,37,74,151,220,136,74,212,2,166,228,134,114,185,129,76,89,219,212,4,251,194,191,170,201,149,235,40,153,186,237,151,62,54,115,184,231,35,226,195,101,174,69,158,141,167,156,254,222,65,241,197,165,200,237,254,187 };
    byte_vec_t pk { 4,236,10,25,128,7,35,222,219,110,44,23,113,51,157,176,156,68,80,83,182,205,61,144,6,137,205,92,183,204,173,189,184,45,156,204,14,188,191,226,62,74,162,121,125,209,88,13,243,160,30,136,176,75,30,153,103,89,26,146,71,106,175,235,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 698 ") {
    byte_vec_t msg { 96,142,190,74 };
    byte_vec_t sig { 136,106,93,110,242,172,157,43,16,134,113,191,183,188,143,18,19,217,70,201,209,171,37,169,74,129,91,240,165,226,56,151,52,232,65,130,117,225,241,96,81,153,248,85,12,53,142,12,152,44,237,141,53,176,63,94,240,184,157,171,56,159,121,208 };
    byte_vec_t pk { 3,7,224,54,81,253,67,20,223,43,33,155,160,249,143,132,151,137,130,201,75,159,156,173,217,18,70,112,27,42,86,46,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 698 ") {
    byte_vec_t msg { 204,108,130,223 };
    byte_vec_t sig { 194,119,20,24,188,207,207,117,222,97,27,214,202,204,192,40,51,245,103,207,128,21,60,74,155,87,140,157,162,97,220,141,109,137,130,209,201,250,93,28,8,107,39,62,59,196,6,58,123,79,49,34,129,137,147,101,229,146,52,7,171,87,153,233 };
    byte_vec_t pk { 3,9,94,5,203,172,122,252,105,223,159,245,192,58,204,121,9,114,91,250,11,75,197,232,84,149,28,26,55,13,64,143,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 699 ") {
    byte_vec_t msg { 1,124,48,185 };
    byte_vec_t sig { 19,56,48,245,197,9,182,250,199,177,139,59,180,121,105,3,25,162,198,162,161,1,100,237,249,127,150,238,22,43,241,202,229,186,226,67,45,224,233,105,77,50,1,79,251,98,106,224,42,152,162,68,243,54,224,40,210,102,48,143,57,253,5,75 };
    byte_vec_t pk { 4,144,46,18,189,59,228,199,168,230,226,3,123,214,171,66,209,15,65,0,209,123,61,153,165,77,3,132,208,85,17,141,49,97,207,117,60,21,43,97,138,100,250,200,254,48,241,50,108,19,122,12,227,93,154,74,23,115,216,135,127,101,33,170,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 699 ") {
    byte_vec_t msg { 106,100,8,54 };
    byte_vec_t sig { 254,6,75,47,190,249,231,204,111,184,186,250,196,159,22,246,82,131,135,98,1,68,243,85,250,166,3,10,182,146,83,202,236,202,240,114,184,248,172,243,202,197,227,58,53,158,159,179,85,139,33,161,52,76,11,158,1,63,90,87,253,76,162,10 };
    byte_vec_t pk { 4,178,77,107,248,28,58,43,12,26,79,120,1,149,172,242,247,211,231,249,228,104,38,224,241,46,250,41,69,182,142,74,224,93,39,218,111,182,42,208,64,254,142,8,148,152,10,244,82,143,55,191,28,112,243,4,19,55,89,141,165,174,67,52,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 699 ") {
    byte_vec_t msg { 224,16,70,223 };
    byte_vec_t sig { 113,196,98,27,198,157,66,19,5,61,23,62,168,77,116,195,24,83,114,176,197,105,87,77,76,66,233,129,141,55,14,59,237,199,63,152,178,120,217,218,64,89,57,14,242,88,10,49,110,252,155,212,118,164,217,106,112,44,237,75,12,97,183,225 };
    byte_vec_t pk { 3,0,227,16,163,218,157,155,57,166,214,83,80,224,194,198,122,100,230,92,56,204,131,152,248,83,31,100,234,71,72,238,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 699 ") {
    byte_vec_t msg { 42,227,103,22 };
    byte_vec_t sig { 229,16,69,204,185,246,3,213,110,53,175,31,114,91,91,196,102,160,101,124,249,186,218,50,218,171,43,75,39,166,33,59,124,85,79,61,139,55,96,34,88,186,140,77,121,68,233,28,111,180,94,22,243,76,133,31,79,250,42,182,162,190,242,229 };
    byte_vec_t pk { 2,178,169,9,148,241,97,25,179,254,112,17,202,198,217,41,30,6,144,192,50,8,88,108,109,81,229,227,183,93,3,170,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 700 ") {
    byte_vec_t msg { 38,126,34,38 };
    byte_vec_t sig { 203,9,17,66,121,169,53,100,172,250,39,170,42,158,214,161,173,112,117,161,125,6,117,56,41,190,57,175,59,206,175,163,168,225,120,131,67,107,205,24,95,22,176,81,120,127,102,121,64,66,87,55,231,226,10,233,213,51,83,226,234,206,234,202 };
    byte_vec_t pk { 4,141,106,200,31,76,253,16,34,42,204,180,227,246,217,28,52,127,135,30,65,61,225,244,174,37,25,117,144,90,72,80,19,14,43,174,122,193,218,150,179,33,240,64,235,145,23,88,165,136,116,26,110,164,252,245,17,5,228,53,192,247,204,54,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 700 ") {
    byte_vec_t msg { 91,90,247,29 };
    byte_vec_t sig { 248,213,233,22,238,205,77,141,21,121,31,65,48,175,162,217,190,142,219,227,28,4,95,53,90,190,56,214,176,177,236,20,161,70,111,55,67,205,14,112,17,211,239,18,39,30,106,133,247,149,4,13,156,28,35,166,243,157,109,134,185,208,5,146 };
    byte_vec_t pk { 4,236,36,65,104,178,138,175,99,236,69,156,1,239,120,49,134,119,10,100,71,228,222,195,115,239,199,118,158,18,55,186,238,82,180,62,120,154,195,87,225,20,62,112,87,75,134,159,62,66,168,59,86,204,34,217,73,44,68,44,182,108,204,161,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 700 ") {
    byte_vec_t msg { 144,34,96,219 };
    byte_vec_t sig { 134,249,210,23,105,93,211,159,151,181,82,90,12,73,89,136,57,3,125,89,173,142,232,14,131,96,38,81,115,9,236,143,144,190,213,122,137,247,220,147,195,136,62,85,83,7,62,45,217,122,20,69,212,217,113,194,210,101,86,37,241,83,143,216 };
    byte_vec_t pk { 2,184,92,147,120,195,232,16,141,235,165,226,36,231,23,19,242,17,191,6,76,15,88,28,24,183,47,1,242,10,131,226,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 700 ") {
    byte_vec_t msg { 254,205,161,197 };
    byte_vec_t sig { 144,225,244,255,169,122,221,219,47,51,181,90,118,249,61,212,185,78,173,88,31,119,150,235,19,123,46,252,81,250,72,222,159,20,42,93,108,238,189,5,217,179,146,6,174,252,200,108,47,202,236,47,19,115,29,4,92,4,67,184,5,53,165,158 };
    byte_vec_t pk { 3,175,104,47,114,98,27,178,122,3,109,173,239,238,39,2,102,161,107,12,83,155,190,165,166,175,249,25,56,81,179,115,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 701 ") {
    byte_vec_t msg { 154,159,1,129 };
    byte_vec_t sig { 86,192,198,83,171,247,15,1,199,46,43,177,77,44,2,255,42,116,90,205,213,146,250,123,59,208,170,192,0,83,153,185,90,218,152,79,86,217,1,21,139,251,215,51,186,59,41,110,74,74,14,64,107,84,125,117,140,213,66,147,185,24,158,116 };
    byte_vec_t pk { 4,127,178,201,141,6,91,156,174,32,209,36,121,89,130,71,159,137,191,114,111,145,46,244,231,35,36,211,217,203,8,31,78,161,224,40,98,226,221,166,59,103,233,149,145,4,4,42,0,3,197,133,139,97,41,79,11,231,196,21,201,147,212,0,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 701 ") {
    byte_vec_t msg { 188,95,164,75 };
    byte_vec_t sig { 26,123,228,143,186,14,92,134,171,64,18,172,65,117,206,1,14,211,96,147,216,64,67,22,103,116,154,186,243,176,151,15,3,240,126,197,198,142,93,12,104,142,204,3,200,193,185,100,232,143,224,195,253,80,135,206,118,59,236,180,208,157,158,155 };
    byte_vec_t pk { 4,178,247,168,82,132,48,86,228,104,91,202,63,228,230,229,241,155,247,36,105,53,10,123,208,205,202,122,17,50,228,28,92,190,196,238,63,154,254,106,55,134,77,226,69,42,251,178,182,82,45,234,90,146,36,235,127,108,197,243,130,247,236,74,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 701 ") {
    byte_vec_t msg { 94,59,65,217 };
    byte_vec_t sig { 199,240,201,163,153,15,177,191,227,247,106,173,227,78,39,116,197,23,251,175,123,165,187,155,63,151,17,211,138,218,129,220,42,163,24,129,56,42,172,171,94,184,161,29,15,239,72,231,226,114,131,112,69,128,38,203,54,183,79,77,3,48,208,18 };
    byte_vec_t pk { 3,110,130,231,164,117,161,72,167,36,164,211,105,241,8,13,158,142,235,180,36,75,153,163,238,7,226,164,156,183,31,191,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 701 ") {
    byte_vec_t msg { 249,194,113,50 };
    byte_vec_t sig { 80,236,108,79,84,73,147,39,214,118,223,161,58,120,0,128,94,142,33,90,230,154,201,149,56,73,7,202,33,202,251,230,224,217,208,99,174,5,66,5,163,210,232,144,56,170,8,95,208,215,209,161,12,7,11,50,31,60,200,220,197,76,112,150 };
    byte_vec_t pk { 2,111,69,148,16,49,87,51,48,183,147,55,24,36,111,173,161,1,220,23,166,37,77,170,185,111,6,172,249,198,168,149,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 702 ") {
    byte_vec_t msg { 204,8,96,51 };
    byte_vec_t sig { 111,28,129,244,88,182,197,171,39,98,19,30,176,17,144,51,199,66,64,158,175,43,36,226,117,97,0,131,74,103,245,58,117,102,153,59,227,39,157,128,217,168,89,210,151,254,24,70,7,137,50,171,110,251,123,169,184,56,163,96,126,146,174,53 };
    byte_vec_t pk { 4,154,170,10,29,107,46,41,132,128,55,99,172,250,86,11,166,29,66,246,115,228,253,151,131,89,28,48,124,81,103,122,73,188,253,101,56,92,124,169,54,229,254,166,245,163,38,211,238,111,42,59,204,175,1,119,244,192,57,29,234,72,95,20,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 702 ") {
    byte_vec_t msg { 136,240,204,66 };
    byte_vec_t sig { 42,139,68,64,86,133,227,35,169,190,100,93,190,195,169,208,84,202,89,176,123,162,36,222,223,225,146,219,118,55,8,71,63,152,105,21,38,209,100,155,50,149,83,191,98,185,51,148,45,58,175,172,31,189,102,244,130,243,212,95,243,18,47,114 };
    byte_vec_t pk { 4,81,240,110,219,49,126,91,169,205,2,129,245,66,60,179,235,33,231,6,143,101,77,182,163,66,124,87,131,210,72,119,74,16,177,1,97,170,141,148,248,242,68,132,30,21,111,174,216,163,246,99,0,170,144,21,192,50,81,169,47,206,8,59,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 702 ") {
    byte_vec_t msg { 191,67,153,145 };
    byte_vec_t sig { 125,1,216,195,146,239,102,98,83,138,160,37,180,96,54,235,185,46,83,130,193,215,215,205,134,154,191,179,137,28,87,122,50,143,74,225,104,187,18,213,13,51,248,183,52,241,254,150,192,202,49,29,98,67,180,139,233,23,162,179,24,107,194,96 };
    byte_vec_t pk { 3,223,182,22,199,200,93,251,177,93,245,23,149,216,227,226,163,98,209,53,152,111,106,61,153,164,60,123,143,98,195,30,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 702 ") {
    byte_vec_t msg { 229,157,74,18 };
    byte_vec_t sig { 211,152,85,199,160,190,57,174,186,189,253,235,137,157,234,43,240,21,126,43,103,55,63,248,112,139,213,147,33,194,74,255,131,226,17,135,172,8,214,147,198,71,109,23,145,2,56,237,17,26,68,226,215,99,168,17,251,101,27,183,126,109,167,210 };
    byte_vec_t pk { 2,171,145,65,137,249,204,52,21,205,244,93,101,46,42,57,242,39,223,226,47,41,177,231,150,6,246,39,155,11,161,166,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 703 ") {
    byte_vec_t msg { 159,213,213,103 };
    byte_vec_t sig { 46,189,60,205,20,46,185,236,154,31,61,122,10,165,250,13,177,70,177,101,96,55,114,164,163,211,78,58,134,170,201,236,251,182,33,223,249,202,239,251,209,62,58,210,64,105,251,118,216,123,198,212,116,40,253,122,195,135,61,244,194,101,14,146 };
    byte_vec_t pk { 4,107,32,105,91,222,118,169,238,69,82,31,68,225,158,248,138,127,244,242,153,92,136,81,53,228,109,15,63,42,39,74,111,79,7,30,205,233,39,220,29,44,169,11,101,16,17,157,101,43,35,242,93,150,181,22,117,69,27,143,105,115,233,133,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 703 ") {
    byte_vec_t msg { 43,156,215,19 };
    byte_vec_t sig { 31,51,221,119,216,183,45,218,41,245,2,217,219,108,74,57,126,152,192,123,86,50,66,201,10,53,159,213,2,185,145,79,48,67,248,168,252,73,209,133,133,48,133,168,116,123,223,39,21,120,231,177,21,105,193,214,90,239,190,127,145,124,94,42 };
    byte_vec_t pk { 4,162,195,187,245,227,133,62,110,9,165,239,53,182,50,29,240,145,97,127,37,14,95,29,53,142,214,254,24,236,28,147,81,195,77,2,211,237,185,235,198,232,92,51,82,17,103,53,87,204,69,42,11,24,1,92,178,244,1,76,142,64,109,234,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 703 ") {
    byte_vec_t msg { 127,40,187,141 };
    byte_vec_t sig { 250,233,255,131,242,123,8,211,94,108,25,57,11,53,138,13,255,32,112,145,134,120,149,77,35,141,242,24,191,15,232,103,204,253,207,237,34,172,203,124,246,212,51,87,190,176,69,167,204,183,8,211,186,0,128,155,173,112,114,169,250,78,109,181 };
    byte_vec_t pk { 3,112,27,8,47,48,165,212,160,132,26,244,203,219,67,54,235,79,223,118,15,31,12,175,91,246,186,91,156,64,249,51,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 703 ") {
    byte_vec_t msg { 187,62,182,58 };
    byte_vec_t sig { 253,193,87,30,161,14,248,204,111,91,0,240,209,130,218,248,92,251,48,90,95,136,28,140,168,69,67,67,81,158,163,234,84,210,71,240,18,50,164,139,211,49,144,93,201,254,182,231,194,151,34,217,250,101,157,243,195,78,172,166,96,24,138,107 };
    byte_vec_t pk { 3,166,176,142,20,33,64,72,250,38,45,131,109,26,49,221,26,208,8,242,71,12,43,215,230,173,196,132,116,43,52,214,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 704 ") {
    byte_vec_t msg { 152,196,120,253 };
    byte_vec_t sig { 23,230,95,167,126,67,100,251,78,79,130,39,195,63,210,48,81,135,249,187,95,71,35,70,130,233,114,71,206,117,91,153,193,77,243,183,242,238,110,13,238,20,213,180,25,173,33,253,118,199,19,87,62,58,119,121,109,32,241,185,201,123,224,32 };
    byte_vec_t pk { 4,37,154,211,106,207,127,11,216,189,98,57,224,70,239,220,153,241,137,126,147,70,228,31,104,215,6,30,42,205,7,180,123,186,36,218,252,89,163,120,115,104,51,47,245,52,180,51,148,149,21,66,243,10,6,63,235,173,232,20,64,185,66,144,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 704 ") {
    byte_vec_t msg { 138,14,25,45 };
    byte_vec_t sig { 229,35,125,4,196,45,143,15,92,48,68,10,153,18,83,105,175,157,102,10,16,203,41,103,218,210,241,35,90,129,46,223,111,123,251,42,81,250,185,80,207,158,77,86,38,219,121,60,92,10,76,211,159,52,83,216,144,200,243,53,98,111,72,101 };
    byte_vec_t pk { 4,130,70,134,145,33,28,110,182,130,66,77,249,13,35,178,78,189,47,71,6,175,166,156,175,249,74,138,69,184,147,26,80,64,234,77,147,15,51,151,51,239,39,238,13,49,147,131,89,129,190,121,16,178,253,57,252,168,132,37,167,119,151,251,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 704 ") {
    byte_vec_t msg { 50,87,65,206 };
    byte_vec_t sig { 38,105,139,36,160,61,207,209,57,48,1,143,237,246,184,219,67,109,25,172,33,145,197,199,221,67,157,175,243,5,129,166,144,3,92,127,66,73,131,185,250,8,153,153,242,45,127,84,108,254,82,53,181,129,237,184,251,16,229,78,103,51,124,247 };
    byte_vec_t pk { 2,1,116,239,8,226,129,31,146,207,35,77,88,102,233,231,152,87,41,16,27,115,52,65,162,76,158,190,253,72,63,204,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 704 ") {
    byte_vec_t msg { 113,63,33,190 };
    byte_vec_t sig { 208,173,253,111,217,181,139,100,150,97,170,186,163,57,99,68,23,24,201,244,213,165,250,224,145,242,42,27,87,97,60,132,241,223,223,91,49,243,24,43,170,116,225,216,112,171,93,243,218,178,160,127,251,199,112,80,222,28,230,207,179,21,79,186 };
    byte_vec_t pk { 3,208,2,116,166,59,243,106,210,25,160,71,157,224,72,158,118,114,175,127,82,247,240,115,239,59,49,172,14,26,101,11,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 705 ") {
    byte_vec_t msg { 3,109,200,226 };
    byte_vec_t sig { 48,150,190,34,94,110,252,80,225,241,99,148,109,192,229,52,104,116,119,231,25,177,203,249,224,127,3,161,189,255,39,113,6,110,136,113,81,240,141,53,21,133,187,113,155,51,205,225,138,88,118,170,28,198,54,162,189,245,239,252,14,38,65,228 };
    byte_vec_t pk { 4,29,207,184,12,13,149,186,226,6,234,219,96,233,99,82,234,130,243,168,38,109,89,31,211,127,127,237,186,121,129,75,35,68,110,130,126,105,53,52,230,60,106,162,254,161,25,68,45,206,105,32,170,129,26,229,129,143,65,8,213,100,102,99,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 705 ") {
    byte_vec_t msg { 101,156,69,182 };
    byte_vec_t sig { 0,109,19,80,171,10,141,133,92,48,188,140,173,175,168,100,183,132,227,53,115,96,48,108,113,143,12,54,234,114,185,0,178,249,240,2,197,246,110,184,201,3,229,208,237,34,247,253,53,131,30,46,168,26,39,210,50,99,177,82,122,246,68,89 };
    byte_vec_t pk { 4,168,170,251,65,145,148,167,91,39,86,81,202,187,76,115,231,218,229,38,134,110,240,50,118,134,34,180,22,244,206,117,210,219,153,212,158,220,108,41,133,137,189,211,187,114,137,64,17,172,242,172,105,47,52,66,196,55,69,118,9,253,132,36,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 705 ") {
    byte_vec_t msg { 89,147,164,133 };
    byte_vec_t sig { 204,159,141,74,118,73,19,220,180,247,124,125,147,98,219,201,77,216,168,19,183,88,180,53,52,99,137,135,131,60,51,77,88,227,127,90,97,56,61,193,4,40,90,107,195,207,189,188,43,208,105,168,116,248,44,106,95,141,116,13,58,114,199,196 };
    byte_vec_t pk { 2,168,74,234,196,234,65,254,51,201,66,221,153,91,220,231,217,124,227,60,240,187,151,228,179,48,120,50,242,116,158,240,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 705 ") {
    byte_vec_t msg { 115,230,233,96 };
    byte_vec_t sig { 26,96,139,242,255,184,150,138,152,67,56,10,246,252,191,187,209,109,175,225,102,51,19,33,17,159,203,52,130,129,204,47,177,17,123,179,236,29,176,192,226,239,254,21,103,93,41,193,194,239,100,82,122,162,253,206,5,28,76,123,59,101,194,38 };
    byte_vec_t pk { 3,185,11,181,97,139,32,6,181,212,255,67,1,194,49,154,193,48,242,163,25,152,160,210,103,209,169,45,206,20,65,158,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 706 ") {
    byte_vec_t msg { 18,58,233,140 };
    byte_vec_t sig { 20,190,208,246,34,132,44,52,190,83,6,15,27,186,180,34,28,142,236,86,3,155,199,60,19,8,46,128,197,4,213,75,102,15,155,53,76,115,246,99,56,226,41,176,179,51,212,202,33,139,157,23,211,254,64,46,2,199,181,203,227,100,94,242 };
    byte_vec_t pk { 4,30,187,41,47,163,146,119,69,96,161,121,119,150,141,43,85,230,162,7,86,196,38,23,101,71,111,157,207,46,162,136,250,137,144,194,184,113,130,148,112,150,215,158,65,133,171,97,1,245,240,40,138,1,97,33,178,117,236,206,22,210,239,100,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 706 ") {
    byte_vec_t msg { 8,191,155,21 };
    byte_vec_t sig { 145,220,59,113,96,115,98,4,248,142,210,164,77,204,123,221,181,49,177,150,201,156,118,9,123,247,204,130,28,51,124,133,96,102,132,169,77,232,7,168,129,36,245,84,86,252,250,206,51,206,123,87,246,179,75,146,173,73,13,190,75,178,51,67 };
    byte_vec_t pk { 4,210,127,108,32,51,66,18,242,98,247,184,86,125,85,222,153,100,73,13,220,151,46,141,187,167,103,13,202,9,130,143,243,123,110,158,162,148,53,195,154,112,93,98,54,112,79,90,34,163,80,9,243,116,88,117,41,68,182,144,229,120,125,186,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 706 ") {
    byte_vec_t msg { 208,242,217,243 };
    byte_vec_t sig { 36,29,193,234,194,170,169,6,136,124,117,228,60,106,159,65,44,70,69,41,135,82,203,16,198,121,241,58,199,130,166,237,211,144,101,34,146,230,67,144,255,247,39,246,126,251,55,61,148,166,125,52,6,167,212,182,3,243,144,145,35,183,33,42 };
    byte_vec_t pk { 2,113,78,58,176,32,55,42,52,235,174,30,15,79,25,161,62,78,251,199,239,168,233,32,67,84,4,140,241,110,104,161,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 706 ") {
    byte_vec_t msg { 61,233,121,208 };
    byte_vec_t sig { 206,107,156,161,164,192,9,50,181,106,90,30,60,136,173,195,183,126,180,17,6,174,69,240,31,226,101,17,6,35,135,103,153,0,82,145,120,172,19,84,182,119,73,244,149,193,160,82,152,111,58,141,43,153,51,155,232,106,216,2,209,67,89,106 };
    byte_vec_t pk { 2,174,78,200,225,145,13,94,1,240,175,251,142,200,70,0,35,45,162,149,157,0,152,137,245,167,173,48,191,87,208,174,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 707 ") {
    byte_vec_t msg { 234,224,23,167 };
    byte_vec_t sig { 36,206,70,121,245,169,180,91,82,200,25,185,73,70,166,28,135,250,210,184,122,251,197,107,97,239,27,151,189,181,218,253,209,105,45,82,235,212,143,92,239,211,58,17,92,187,131,131,119,60,69,172,170,217,131,79,191,249,95,189,95,245,78,175 };
    byte_vec_t pk { 4,186,219,91,150,29,236,34,158,225,143,125,148,102,213,9,244,39,165,123,234,66,120,149,113,46,61,255,77,97,10,92,186,208,105,215,115,167,210,153,8,80,191,125,216,80,152,163,124,9,203,127,239,145,5,57,66,95,115,15,195,52,147,187,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 707 ") {
    byte_vec_t msg { 111,75,45,115 };
    byte_vec_t sig { 230,252,219,39,2,15,164,41,140,164,216,235,253,186,226,253,153,226,186,22,74,90,117,67,177,232,150,7,95,123,192,172,52,171,199,116,97,136,187,177,158,226,138,198,60,63,22,155,186,81,112,132,247,46,30,193,254,203,243,191,178,196,59,75 };
    byte_vec_t pk { 4,204,104,218,74,222,231,100,171,71,121,6,146,41,248,91,99,174,97,115,165,145,161,190,218,49,240,58,134,10,248,3,151,66,96,3,170,67,198,215,79,151,3,63,12,36,231,175,228,253,226,43,0,218,99,224,239,172,194,104,173,197,2,109,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 707 ") {
    byte_vec_t msg { 78,123,50,168 };
    byte_vec_t sig { 156,100,5,94,98,205,122,67,236,112,43,17,80,165,138,116,27,230,28,188,151,172,94,29,64,75,28,230,7,3,209,163,60,184,73,226,215,18,78,12,103,141,34,102,179,25,9,32,19,245,73,32,171,174,169,59,7,168,89,199,16,22,105,196 };
    byte_vec_t pk { 3,212,153,11,104,40,223,164,39,116,14,97,189,155,159,132,179,135,23,194,120,200,48,67,192,21,224,141,182,183,214,235,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 707 ") {
    byte_vec_t msg { 248,65,250,124 };
    byte_vec_t sig { 213,42,146,63,128,207,39,115,114,50,103,60,196,69,246,236,7,153,140,13,157,18,174,36,233,188,24,34,4,39,137,167,148,36,233,83,70,142,60,49,246,158,55,131,10,120,215,25,223,145,13,200,49,11,17,231,246,243,104,157,134,213,212,212 };
    byte_vec_t pk { 3,178,167,99,122,49,18,9,151,101,44,45,47,109,85,136,38,245,218,9,73,159,175,136,34,23,237,233,71,60,169,239,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 708 ") {
    byte_vec_t msg { 88,149,179,181 };
    byte_vec_t sig { 67,93,95,45,223,169,96,239,127,153,69,185,103,2,32,119,11,158,95,176,212,228,225,97,193,178,145,161,137,225,143,17,154,42,176,3,153,180,63,13,183,109,165,109,255,126,237,149,58,91,196,193,44,26,172,177,129,226,168,65,103,239,51,237 };
    byte_vec_t pk { 4,252,52,223,103,27,85,5,220,193,132,151,178,133,119,39,60,183,176,17,69,83,146,81,82,107,24,168,163,53,221,242,29,87,224,237,170,245,208,81,93,156,153,245,146,111,255,230,12,165,40,142,16,16,108,135,176,97,82,51,151,223,229,201,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 708 ") {
    byte_vec_t msg { 221,55,159,184 };
    byte_vec_t sig { 114,106,148,25,37,249,10,38,31,183,206,38,165,240,104,66,146,183,66,132,83,191,110,183,49,132,202,24,90,170,117,141,62,245,44,71,174,216,57,111,104,227,15,122,236,75,186,120,65,178,241,99,87,68,208,16,193,18,132,175,3,208,11,103 };
    byte_vec_t pk { 4,112,151,223,27,206,159,140,244,13,226,25,84,211,64,164,162,203,118,198,119,120,80,97,96,145,92,68,196,117,121,105,206,165,59,66,148,26,228,117,96,35,99,23,184,175,63,183,18,0,185,28,236,176,178,2,154,16,134,252,127,181,178,24,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 708 ") {
    byte_vec_t msg { 64,110,242,163 };
    byte_vec_t sig { 206,136,210,77,40,95,90,108,97,95,127,79,254,235,145,123,125,74,20,111,233,27,82,228,33,98,242,23,44,179,161,204,26,66,158,93,20,51,109,67,109,48,187,231,240,5,112,33,0,155,66,84,190,189,217,155,40,104,242,63,178,54,215,238 };
    byte_vec_t pk { 3,107,65,217,223,158,224,215,210,222,7,102,124,30,222,231,130,159,93,200,85,94,182,161,83,102,97,202,202,163,42,243,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 708 ") {
    byte_vec_t msg { 189,29,123,193 };
    byte_vec_t sig { 33,149,14,222,70,123,106,14,255,50,4,113,232,89,134,152,19,54,32,73,242,88,32,115,252,96,170,161,202,208,151,214,219,38,4,96,87,252,24,84,36,159,100,0,6,227,127,198,115,249,94,180,105,208,152,223,29,61,80,141,54,188,66,32 };
    byte_vec_t pk { 2,206,46,85,116,47,41,107,99,131,233,199,100,93,84,49,69,203,61,181,156,155,101,26,188,144,166,243,207,65,11,26,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 709 ") {
    byte_vec_t msg { 188,97,7,36 };
    byte_vec_t sig { 82,4,23,252,125,103,107,165,219,105,153,231,75,245,12,70,136,72,151,59,114,35,142,140,151,112,79,47,194,100,6,190,151,219,15,152,93,227,43,35,82,105,241,196,162,42,52,124,166,119,105,225,107,230,209,35,152,58,143,216,124,179,54,241 };
    byte_vec_t pk { 4,106,53,209,182,168,210,167,78,241,208,192,54,98,14,157,118,68,172,110,48,70,69,233,156,99,39,235,207,7,32,161,215,139,234,60,250,45,160,134,199,117,215,254,89,112,42,42,42,71,184,82,8,248,192,26,23,188,72,240,82,65,174,203,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 709 ") {
    byte_vec_t msg { 238,32,102,88 };
    byte_vec_t sig { 234,99,185,215,130,63,104,152,70,246,42,12,46,38,30,74,12,212,151,70,21,53,38,220,137,23,187,144,113,134,197,218,115,145,49,190,39,192,245,155,179,154,212,23,60,18,92,162,218,71,54,57,249,171,73,175,70,186,28,60,124,207,72,249 };
    byte_vec_t pk { 4,165,50,190,224,9,74,116,74,133,62,115,58,36,165,154,149,116,74,135,252,32,220,175,55,53,175,169,81,233,237,195,207,196,246,253,104,92,141,188,205,79,38,42,156,218,197,102,65,239,82,163,103,47,47,28,218,90,99,47,188,110,18,126,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 709 ") {
    byte_vec_t msg { 152,241,185,83 };
    byte_vec_t sig { 143,136,240,159,8,13,91,238,203,13,176,225,56,37,124,215,215,223,67,224,225,189,15,166,104,114,165,224,7,153,165,215,76,47,56,83,34,99,215,173,165,222,133,218,67,32,245,139,133,221,29,119,237,9,242,51,93,140,184,189,89,34,147,247 };
    byte_vec_t pk { 3,215,75,186,178,231,7,204,222,138,94,100,235,176,174,127,151,112,16,201,151,146,115,158,37,188,90,253,214,130,155,184,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 709 ") {
    byte_vec_t msg { 224,30,229,231 };
    byte_vec_t sig { 197,211,173,108,162,42,160,108,216,208,233,228,5,138,248,54,166,13,23,1,25,23,26,201,224,226,134,220,32,125,70,127,146,226,88,26,100,162,40,25,183,236,146,4,228,43,204,166,187,231,3,46,94,43,77,84,14,17,221,35,112,223,154,221 };
    byte_vec_t pk { 3,231,250,75,15,170,140,245,60,237,107,194,40,125,75,198,103,166,196,225,201,234,214,179,37,126,150,230,207,107,33,171,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 710 ") {
    byte_vec_t msg { 150,146,33,21 };
    byte_vec_t sig { 63,48,82,113,250,122,145,142,28,185,67,85,33,30,22,228,129,32,210,99,119,70,19,56,93,117,101,214,13,223,47,62,198,103,33,159,141,124,202,185,226,203,208,169,73,40,223,26,109,18,178,181,19,212,223,80,18,180,10,173,69,211,119,247 };
    byte_vec_t pk { 4,79,24,42,12,7,135,182,101,90,14,79,189,124,5,59,217,28,240,222,139,48,175,28,155,92,98,91,192,132,247,47,164,47,29,205,251,91,17,129,117,30,60,155,71,175,159,109,207,124,8,192,42,173,154,16,44,145,27,91,92,151,157,94,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 710 ") {
    byte_vec_t msg { 99,37,118,120 };
    byte_vec_t sig { 141,44,164,28,138,153,255,181,11,187,215,66,111,7,207,141,91,2,183,145,126,27,4,198,34,106,249,238,114,229,60,2,49,196,91,98,108,42,254,66,28,18,204,165,28,0,32,229,26,105,88,145,66,138,62,83,132,119,255,183,174,128,225,82 };
    byte_vec_t pk { 4,5,47,86,130,136,92,138,92,233,189,113,146,150,70,28,12,225,193,83,213,146,2,35,113,97,113,15,45,82,223,248,145,158,175,20,35,40,44,223,139,204,178,246,81,25,133,10,142,117,229,129,167,149,65,98,131,154,127,64,69,61,5,54,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 710 ") {
    byte_vec_t msg { 8,59,58,244 };
    byte_vec_t sig { 113,161,72,161,221,18,69,106,62,209,223,243,114,134,82,80,155,1,163,101,64,188,65,224,218,20,88,64,239,191,116,90,131,28,26,225,181,208,50,55,145,14,118,191,80,144,105,162,200,23,135,229,149,144,202,71,175,246,33,244,88,245,89,166 };
    byte_vec_t pk { 2,155,3,78,159,250,39,138,79,230,115,102,100,248,19,115,195,135,50,249,55,172,63,218,88,112,224,28,80,116,73,93,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 710 ") {
    byte_vec_t msg { 188,4,140,87 };
    byte_vec_t sig { 112,227,124,17,231,138,119,67,252,13,209,159,118,163,237,97,220,248,44,167,182,164,159,100,170,197,121,31,100,216,48,224,189,221,153,190,90,165,193,23,3,50,162,167,110,4,25,45,185,177,186,74,135,249,128,62,86,55,89,48,52,44,196,116 };
    byte_vec_t pk { 2,13,205,111,208,124,160,162,128,164,203,174,103,79,24,94,134,219,191,216,17,11,31,222,15,115,15,106,157,240,33,205,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 711 ") {
    byte_vec_t msg { 27,114,168,24 };
    byte_vec_t sig { 17,81,199,122,186,94,235,191,225,80,68,60,51,178,205,162,96,134,250,122,207,172,212,119,91,23,219,16,145,74,72,90,35,137,68,93,4,36,114,136,122,184,117,40,255,16,65,250,91,28,26,33,211,81,229,114,246,13,215,179,33,70,48,241 };
    byte_vec_t pk { 4,218,147,139,76,173,65,14,238,97,96,165,166,201,38,244,84,104,55,101,70,99,212,152,91,203,66,248,182,193,65,35,82,182,164,190,78,65,112,65,72,82,91,176,217,83,170,48,190,96,168,51,63,215,237,80,253,195,64,146,39,11,51,237,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 711 ") {
    byte_vec_t msg { 164,47,157,129 };
    byte_vec_t sig { 236,76,128,68,225,198,69,205,85,66,1,9,171,43,33,45,145,198,30,157,38,148,8,245,133,20,199,187,253,80,39,59,162,54,164,53,144,252,125,115,231,167,39,212,251,226,15,32,116,168,246,142,244,250,167,255,24,225,185,21,30,50,150,167 };
    byte_vec_t pk { 4,14,79,74,129,60,235,13,118,94,210,111,139,109,175,34,188,27,71,241,144,66,167,42,15,5,4,219,107,102,249,5,58,7,84,51,237,71,84,81,200,136,253,198,168,120,195,185,70,139,108,226,215,97,198,163,252,37,158,207,77,5,10,126,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 711 ") {
    byte_vec_t msg { 99,61,232,219 };
    byte_vec_t sig { 172,226,206,226,59,116,99,1,143,110,101,116,148,196,62,72,105,205,122,163,218,59,78,94,32,242,89,185,239,197,25,143,146,86,118,12,119,116,78,92,69,149,84,95,3,124,133,161,57,179,75,116,95,118,102,52,61,30,204,39,214,49,247,140 };
    byte_vec_t pk { 3,5,13,17,247,8,60,154,117,226,23,36,84,149,132,160,105,30,115,82,176,240,209,196,184,161,140,124,194,255,82,243,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 711 ") {
    byte_vec_t msg { 189,184,96,163 };
    byte_vec_t sig { 33,104,146,119,47,144,150,132,94,7,6,164,201,192,112,223,86,60,60,230,248,138,205,91,161,163,210,82,104,88,143,142,31,34,32,75,133,78,2,160,29,131,41,85,74,144,164,9,48,31,208,211,247,30,43,141,170,44,86,113,237,56,233,234 };
    byte_vec_t pk { 3,238,78,213,218,55,14,12,218,62,29,234,127,218,200,17,13,72,237,43,16,111,168,42,170,17,100,73,39,175,226,231,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 712 ") {
    byte_vec_t msg { 83,160,174,40 };
    byte_vec_t sig { 174,101,95,119,86,122,197,33,177,13,151,157,56,39,185,61,9,240,201,26,92,153,25,104,158,116,190,137,75,119,212,76,185,69,242,101,241,183,98,76,102,89,218,127,186,161,183,202,10,22,251,14,141,32,195,15,54,160,56,60,36,38,92,219 };
    byte_vec_t pk { 4,50,200,247,42,83,236,89,234,176,48,153,126,185,101,125,119,75,228,226,155,143,167,137,183,115,184,175,88,198,24,253,229,85,173,210,88,138,218,129,174,23,55,148,114,29,101,255,133,72,35,219,123,240,51,158,31,5,243,198,166,118,239,235,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 712 ") {
    byte_vec_t msg { 150,209,165,217 };
    byte_vec_t sig { 108,212,105,177,49,80,98,50,80,37,188,15,72,239,143,146,30,2,186,206,140,41,70,202,54,219,62,153,204,76,25,185,54,59,14,76,54,94,115,121,62,217,32,72,123,254,20,17,22,150,8,239,43,9,242,198,60,216,146,114,167,12,10,6 };
    byte_vec_t pk { 4,146,215,156,141,30,16,89,231,208,201,236,71,56,55,79,167,177,171,208,35,29,104,65,121,179,185,52,208,115,171,120,198,238,3,147,9,60,42,147,83,232,142,242,221,30,231,226,7,144,30,170,80,182,9,126,50,124,58,35,98,239,174,79,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 712 ") {
    byte_vec_t msg { 102,104,251,81 };
    byte_vec_t sig { 64,70,198,212,63,162,162,121,252,141,68,128,238,254,34,79,196,232,169,205,101,102,46,28,199,195,35,242,147,122,234,232,6,23,75,40,214,244,188,147,255,250,84,102,80,132,99,20,235,46,202,140,128,144,64,12,138,10,183,247,58,142,138,166 };
    byte_vec_t pk { 2,90,75,26,247,198,201,71,189,44,4,45,226,194,13,159,16,207,87,74,216,173,236,9,57,70,152,179,22,89,43,165,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 712 ") {
    byte_vec_t msg { 120,26,58,68 };
    byte_vec_t sig { 49,223,4,125,19,232,155,171,116,215,109,141,181,196,156,168,82,159,226,69,228,82,54,126,29,240,82,245,65,64,138,144,87,17,91,171,138,226,51,208,255,101,205,113,67,7,218,210,209,108,157,127,81,14,146,183,50,48,2,116,248,22,233,167 };
    byte_vec_t pk { 3,123,227,212,186,204,245,91,234,31,108,213,65,141,243,244,110,109,33,130,183,54,21,79,236,2,245,112,91,218,148,103,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 713 ") {
    byte_vec_t msg { 226,26,83,130 };
    byte_vec_t sig { 231,59,231,32,182,71,142,174,166,185,172,132,37,201,174,22,98,9,142,235,73,105,162,227,218,202,234,112,18,14,152,216,179,224,134,6,76,12,46,143,179,239,89,212,104,162,219,77,54,149,218,1,9,61,83,131,210,0,12,27,212,12,151,177 };
    byte_vec_t pk { 4,167,18,107,247,120,247,241,56,66,162,180,135,74,56,158,7,158,166,112,26,56,167,98,241,14,88,167,52,251,177,28,157,20,61,198,220,204,158,50,145,194,236,29,74,30,31,113,87,198,142,112,84,161,0,114,145,226,104,101,119,113,174,21,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 713 ") {
    byte_vec_t msg { 38,45,207,73 };
    byte_vec_t sig { 60,185,233,56,20,229,243,4,88,123,146,124,35,94,124,219,124,75,212,151,185,162,105,229,150,207,147,202,177,206,164,113,0,6,56,16,23,48,70,180,211,131,127,8,89,154,235,16,12,183,162,21,161,71,107,106,191,135,74,125,21,219,146,233 };
    byte_vec_t pk { 4,217,98,247,129,67,92,213,131,96,243,170,167,244,19,68,13,232,208,53,133,59,83,218,115,26,187,171,39,157,49,232,253,247,130,101,64,149,29,83,105,218,23,202,249,207,40,205,221,238,135,152,162,117,116,245,21,88,46,20,154,32,142,62,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 713 ") {
    byte_vec_t msg { 164,136,157,248 };
    byte_vec_t sig { 212,79,135,174,186,249,191,216,213,61,124,182,93,102,70,253,229,51,200,51,171,253,148,131,22,177,170,64,133,32,31,24,218,73,41,183,205,91,232,255,141,25,82,82,235,15,84,56,206,232,29,37,160,221,144,46,250,37,68,192,137,18,129,50 };
    byte_vec_t pk { 2,129,169,160,1,152,165,83,239,64,132,254,116,156,136,2,246,194,128,210,11,18,170,107,201,16,49,65,248,251,185,243,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 713 ") {
    byte_vec_t msg { 231,131,111,142 };
    byte_vec_t sig { 157,4,128,212,48,109,234,92,178,165,230,104,44,65,33,97,196,183,39,143,80,151,118,169,59,162,160,8,78,231,73,42,125,239,103,11,53,136,227,190,195,200,225,41,247,28,41,98,65,217,241,176,47,88,137,228,225,204,98,109,71,23,139,95 };
    byte_vec_t pk { 2,208,108,86,19,43,44,150,177,174,88,31,14,179,184,237,163,172,233,43,10,66,92,5,134,117,39,172,175,73,86,101,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 714 ") {
    byte_vec_t msg { 21,169,111,47 };
    byte_vec_t sig { 236,38,138,14,39,169,117,230,140,141,19,90,169,162,235,203,231,81,98,35,29,186,119,208,108,236,102,139,110,22,142,220,230,35,131,171,249,51,210,43,152,121,129,211,115,214,41,84,176,203,63,217,76,4,130,135,240,53,0,226,142,228,51,79 };
    byte_vec_t pk { 4,148,153,99,169,29,59,138,186,239,161,154,100,123,67,87,126,131,2,63,91,244,130,179,167,136,196,9,187,223,144,10,135,41,232,17,136,238,249,102,92,100,33,89,10,70,208,114,195,53,225,133,49,163,27,104,206,57,135,76,185,122,121,149,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 714 ") {
    byte_vec_t msg { 247,44,137,19 };
    byte_vec_t sig { 8,78,66,174,170,170,180,94,152,1,6,232,127,26,255,113,57,31,28,236,53,210,150,96,79,153,66,90,129,134,3,66,183,173,96,55,134,195,96,123,72,230,45,49,59,157,64,177,243,82,65,32,38,129,131,36,104,215,238,0,29,178,15,33 };
    byte_vec_t pk { 4,163,122,33,172,121,223,110,65,215,108,2,11,151,44,250,34,40,21,13,94,81,148,138,10,73,88,64,47,232,86,104,19,56,62,175,32,124,144,116,76,179,141,9,100,82,199,204,74,26,67,228,46,157,24,30,24,189,107,5,167,254,169,82,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 714 ") {
    byte_vec_t msg { 199,127,30,28 };
    byte_vec_t sig { 248,67,192,163,180,171,73,101,22,30,239,123,45,202,134,172,58,145,47,205,91,228,165,2,251,77,111,194,108,187,75,26,207,32,77,206,19,219,24,160,148,6,218,199,70,190,33,177,118,11,136,124,96,125,232,206,191,133,51,128,65,222,46,243 };
    byte_vec_t pk { 3,123,41,144,240,56,158,235,64,24,160,238,57,97,122,18,156,241,34,69,62,102,80,142,229,137,241,253,149,231,236,1,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 714 ") {
    byte_vec_t msg { 43,243,212,88 };
    byte_vec_t sig { 205,102,22,51,156,119,25,109,115,209,95,127,22,203,67,27,189,68,57,58,107,21,219,215,93,159,228,35,216,166,193,83,229,1,241,43,55,214,156,94,8,146,164,248,202,97,82,245,171,130,87,237,234,246,135,174,170,197,248,107,89,225,72,43 };
    byte_vec_t pk { 3,4,221,170,196,30,125,248,43,224,94,245,27,51,103,95,148,150,65,233,58,140,67,102,39,202,93,24,66,232,55,222,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 715 ") {
    byte_vec_t msg { 87,190,253,7 };
    byte_vec_t sig { 85,31,228,36,128,225,174,162,39,165,39,59,160,145,185,88,104,108,159,10,72,217,142,167,42,116,73,178,179,140,179,1,133,198,244,156,86,146,9,41,19,123,7,193,19,158,25,168,228,54,220,31,160,74,111,163,54,74,202,175,103,219,158,210 };
    byte_vec_t pk { 4,218,106,233,110,27,155,68,241,163,107,254,234,83,97,214,129,162,225,53,145,227,243,39,73,44,36,252,19,245,240,51,250,131,208,4,72,9,69,76,51,193,193,226,204,191,229,230,20,124,210,112,113,143,177,2,153,104,146,34,127,152,71,146,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 715 ") {
    byte_vec_t msg { 112,156,12,209 };
    byte_vec_t sig { 110,164,135,49,188,84,181,117,188,238,110,149,163,184,37,30,109,234,38,109,114,74,176,233,196,239,212,69,185,53,81,244,24,121,81,120,103,130,148,12,250,75,196,46,242,45,196,38,31,182,115,5,177,204,203,92,130,115,228,42,107,91,96,172 };
    byte_vec_t pk { 4,254,237,104,172,83,142,72,223,167,94,246,203,69,250,125,30,235,181,118,139,185,171,78,251,128,14,77,157,141,37,9,88,130,216,19,146,245,164,8,115,205,173,63,214,212,108,170,144,209,57,131,232,228,246,68,85,162,46,41,98,64,15,212,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 715 ") {
    byte_vec_t msg { 238,25,60,171 };
    byte_vec_t sig { 32,139,177,194,153,242,88,75,238,199,226,236,45,45,191,106,230,211,100,152,66,128,152,123,217,172,56,119,125,242,184,57,249,92,134,99,115,144,205,188,40,216,11,106,42,30,174,211,155,62,184,199,25,65,39,146,56,85,85,50,112,201,54,84 };
    byte_vec_t pk { 3,238,216,251,218,136,15,173,44,98,204,50,52,98,10,65,130,201,11,164,7,75,3,215,14,40,111,237,51,83,33,190,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 715 ") {
    byte_vec_t msg { 176,173,80,19 };
    byte_vec_t sig { 102,13,24,95,109,41,17,174,138,32,93,142,115,186,205,2,242,208,191,91,183,240,192,171,63,249,1,11,171,249,138,104,218,103,1,218,78,171,4,138,123,2,238,245,103,3,8,13,193,255,108,48,198,137,89,33,49,245,76,226,230,165,226,56 };
    byte_vec_t pk { 2,140,131,208,197,34,41,3,31,137,213,243,155,241,14,185,120,28,73,63,103,167,120,15,138,190,187,10,194,202,10,123,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 716 ") {
    byte_vec_t msg { 142,24,67,90 };
    byte_vec_t sig { 133,240,181,46,84,29,41,23,64,57,110,148,223,64,153,69,143,49,4,54,177,209,143,73,24,154,59,237,186,26,188,49,152,241,99,139,212,56,224,234,1,134,129,246,212,41,156,34,126,99,44,242,158,77,102,254,41,55,187,239,60,23,198,5 };
    byte_vec_t pk { 4,97,237,168,5,98,232,118,201,216,158,73,49,221,98,216,89,194,252,91,34,148,125,6,15,66,7,121,202,244,100,234,183,215,2,154,133,214,167,169,20,9,60,77,32,92,8,181,84,122,248,177,67,244,18,27,151,127,110,75,28,112,39,119,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 716 ") {
    byte_vec_t msg { 40,130,122,120 };
    byte_vec_t sig { 87,79,199,15,31,60,46,100,181,38,158,129,41,232,38,113,6,221,120,0,82,247,44,42,130,102,93,214,251,160,135,254,11,215,80,35,72,17,149,68,114,18,221,232,131,69,153,139,81,53,19,195,122,18,234,146,12,40,81,88,21,25,68,140 };
    byte_vec_t pk { 4,66,8,186,143,72,138,117,246,212,228,222,8,67,22,198,46,86,225,160,239,164,37,63,248,86,210,94,46,210,22,67,144,199,213,7,192,29,171,125,181,17,89,219,78,148,22,20,134,218,39,0,6,164,35,86,229,205,76,245,165,234,139,68,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 716 ") {
    byte_vec_t msg { 139,150,132,207 };
    byte_vec_t sig { 247,5,200,75,184,134,154,154,156,11,110,86,255,220,75,104,238,79,204,200,128,180,92,76,248,61,73,90,164,85,139,48,167,53,106,50,219,91,37,84,120,161,124,54,151,164,1,215,212,109,201,209,247,23,20,246,203,17,67,147,39,70,124,166 };
    byte_vec_t pk { 2,186,224,65,96,187,93,105,52,88,173,249,213,144,19,165,142,166,40,16,23,227,46,53,109,163,183,27,235,133,128,192,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 716 ") {
    byte_vec_t msg { 74,13,64,95 };
    byte_vec_t sig { 253,46,120,191,211,251,201,205,179,242,2,254,141,74,168,182,215,20,45,119,181,43,186,236,206,166,30,68,172,74,4,33,62,20,105,191,234,233,58,147,129,54,113,174,205,159,181,105,46,32,182,123,146,146,117,133,174,247,184,182,244,159,229,149 };
    byte_vec_t pk { 2,181,107,217,136,125,97,129,199,214,57,5,72,116,52,83,166,35,73,220,63,251,99,134,127,182,204,3,88,232,167,236,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 717 ") {
    byte_vec_t msg { 2,0,75,13 };
    byte_vec_t sig { 15,201,6,187,134,122,134,138,123,221,194,44,13,119,79,21,248,62,193,93,48,120,214,79,162,217,205,67,44,31,9,103,227,191,180,60,11,164,167,198,93,9,198,189,153,220,186,188,151,76,148,16,4,252,59,86,96,39,115,145,7,181,162,51 };
    byte_vec_t pk { 4,50,179,155,161,210,21,13,63,186,57,33,230,145,72,70,150,130,125,15,219,55,79,191,20,225,134,211,10,8,97,142,172,31,85,94,242,168,32,53,180,119,103,237,135,222,37,200,203,246,24,116,66,171,38,101,197,99,14,184,125,180,65,182,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 717 ") {
    byte_vec_t msg { 226,14,219,194 };
    byte_vec_t sig { 75,21,50,173,208,141,247,164,163,51,11,193,153,1,30,127,191,168,230,84,254,37,226,27,61,209,212,120,174,223,5,7,141,19,111,47,113,190,112,157,59,96,217,22,199,214,6,191,107,218,99,229,221,128,129,188,196,94,147,102,2,69,86,59 };
    byte_vec_t pk { 4,29,96,3,194,207,155,69,242,204,241,170,4,198,39,145,92,236,143,182,151,42,73,160,5,219,125,199,192,240,102,125,199,13,230,52,175,133,238,117,148,0,8,208,39,233,160,45,34,191,107,40,163,55,74,150,83,244,106,109,129,230,145,156,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 717 ") {
    byte_vec_t msg { 176,250,56,196 };
    byte_vec_t sig { 108,60,88,61,245,108,251,245,139,203,15,2,113,168,220,62,195,174,222,174,114,37,181,163,214,121,177,252,129,83,72,74,202,8,8,92,197,35,136,253,25,193,148,146,116,137,78,115,28,208,114,3,102,121,4,109,74,191,36,80,87,54,8,100 };
    byte_vec_t pk { 2,229,160,86,226,217,191,114,231,252,66,112,33,255,166,15,95,245,174,180,88,90,141,195,87,176,251,156,211,151,135,98,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 717 ") {
    byte_vec_t msg { 70,118,3,85 };
    byte_vec_t sig { 60,26,179,8,80,68,53,10,255,187,30,60,20,118,210,207,11,185,94,50,40,159,155,252,98,122,165,62,141,207,97,78,160,241,76,45,147,67,34,4,51,33,185,172,246,120,11,85,52,111,180,60,19,186,219,71,138,11,249,36,233,159,222,47 };
    byte_vec_t pk { 2,80,175,195,253,133,111,21,239,19,236,71,140,12,230,138,157,58,207,41,140,56,7,201,128,106,132,45,97,146,173,137,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 718 ") {
    byte_vec_t msg { 221,33,104,75 };
    byte_vec_t sig { 200,40,152,253,87,251,90,235,18,14,162,131,109,135,133,116,98,119,157,102,39,231,202,25,113,64,93,153,208,48,221,169,180,115,39,209,249,64,97,207,49,7,60,20,47,89,51,191,241,239,2,65,131,149,11,251,94,32,97,28,247,80,103,5 };
    byte_vec_t pk { 4,254,7,168,166,217,238,16,9,81,243,99,97,183,29,3,193,182,204,135,148,71,51,172,102,49,91,152,84,217,112,83,223,223,180,83,168,247,185,182,173,171,135,118,168,23,142,93,121,229,51,56,12,155,54,94,77,221,225,179,126,186,167,216,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 718 ") {
    byte_vec_t msg { 195,184,241,163 };
    byte_vec_t sig { 5,25,141,48,157,136,126,92,4,78,214,191,207,55,205,148,44,149,93,155,91,192,175,118,247,137,224,165,12,183,236,247,200,98,210,4,68,138,207,90,16,26,155,101,201,104,45,123,180,20,196,113,174,79,15,35,244,25,132,91,3,197,225,134 };
    byte_vec_t pk { 4,185,149,214,168,201,200,205,245,215,190,38,208,127,238,95,195,167,145,101,93,49,37,38,15,138,2,214,180,242,75,139,21,92,8,210,56,68,30,160,125,33,79,70,238,148,39,173,183,124,224,110,128,171,32,124,9,157,216,123,130,168,62,43,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 718 ") {
    byte_vec_t msg { 129,47,103,71 };
    byte_vec_t sig { 67,9,25,182,153,32,160,248,237,137,232,177,246,45,220,183,112,221,52,197,144,222,28,250,238,119,107,243,129,241,30,45,121,141,119,154,127,169,107,79,32,106,206,227,84,193,125,18,175,90,161,176,195,60,48,181,4,134,65,34,132,211,91,126 };
    byte_vec_t pk { 2,46,13,228,120,49,178,8,50,197,208,203,107,194,99,93,204,117,206,109,165,32,12,219,169,181,84,217,172,89,170,69,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 718 ") {
    byte_vec_t msg { 25,5,175,31 };
    byte_vec_t sig { 208,98,179,180,73,235,87,184,79,53,166,151,236,22,45,207,163,204,255,37,252,159,0,94,189,196,3,131,168,187,239,202,8,15,227,156,174,212,43,160,227,192,248,249,30,221,173,185,90,226,79,153,203,240,235,232,152,244,251,10,185,35,60,34 };
    byte_vec_t pk { 3,136,70,188,28,76,85,49,156,154,73,222,51,229,78,206,15,49,30,149,225,235,90,1,186,91,89,124,70,200,63,254,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 719 ") {
    byte_vec_t msg { 240,121,130,9 };
    byte_vec_t sig { 217,20,223,142,239,167,90,187,200,42,194,104,119,101,250,60,57,226,106,239,146,208,183,145,199,161,137,113,58,164,40,88,194,168,195,223,95,248,231,88,39,190,137,155,79,95,155,27,15,43,148,92,115,139,42,22,31,18,118,177,3,109,123,225 };
    byte_vec_t pk { 4,72,210,149,41,148,220,4,200,176,39,217,140,143,232,205,80,71,11,74,118,235,207,203,105,43,178,83,122,113,207,107,141,77,45,158,188,177,99,19,221,84,85,240,36,71,137,109,225,98,187,233,14,188,211,152,47,60,88,55,90,201,155,169,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 719 ") {
    byte_vec_t msg { 242,108,191,202 };
    byte_vec_t sig { 104,31,251,98,1,241,218,45,247,133,115,50,183,18,224,12,225,127,70,17,248,210,163,194,157,70,22,138,249,52,13,60,24,32,163,181,96,49,253,208,251,107,14,163,27,211,109,77,113,223,19,76,44,234,244,89,102,180,44,121,130,58,137,169 };
    byte_vec_t pk { 4,46,240,145,40,254,126,24,227,48,176,129,105,112,21,78,56,163,124,190,142,34,208,160,230,203,52,62,33,191,93,6,103,140,193,215,74,130,170,46,98,71,0,8,61,135,179,204,109,116,93,167,124,129,130,30,156,151,120,249,203,107,107,34,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 719 ") {
    byte_vec_t msg { 214,208,129,225 };
    byte_vec_t sig { 186,10,149,247,159,13,209,7,216,246,68,14,194,16,163,242,44,119,72,204,4,36,250,102,136,85,34,95,173,118,96,32,189,119,39,71,8,124,208,16,192,176,202,167,126,43,74,112,93,171,19,239,127,98,99,150,209,64,4,81,193,198,26,234 };
    byte_vec_t pk { 2,180,168,205,88,40,148,233,92,38,113,14,114,80,252,31,81,108,251,6,229,200,119,225,73,110,15,57,40,216,85,195,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 719 ") {
    byte_vec_t msg { 205,33,15,63 };
    byte_vec_t sig { 231,46,61,5,178,140,238,74,229,181,118,22,66,251,63,205,233,47,28,146,221,4,154,138,17,67,144,44,21,111,84,142,10,72,212,52,212,15,48,20,189,18,197,119,189,31,240,143,83,193,75,71,228,107,190,64,24,41,21,61,109,49,63,16 };
    byte_vec_t pk { 3,231,146,171,60,79,21,152,86,127,232,172,156,246,21,204,251,24,139,218,54,251,220,75,6,128,144,176,146,102,166,220,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 720 ") {
    byte_vec_t msg { 148,133,110,9 };
    byte_vec_t sig { 4,181,190,51,192,234,138,251,23,207,85,173,177,68,194,47,133,49,116,206,233,65,212,110,251,255,103,235,58,35,226,158,185,7,227,11,6,2,248,200,151,105,127,115,143,54,247,62,224,227,202,137,9,68,61,134,117,13,158,214,113,171,65,235 };
    byte_vec_t pk { 4,91,156,83,173,6,222,248,5,123,182,139,208,153,15,227,195,187,249,229,117,72,204,183,210,138,113,120,158,43,80,229,143,216,57,237,45,132,204,170,230,187,124,175,71,55,112,28,44,149,11,88,49,130,36,179,131,119,134,139,150,83,72,165,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 720 ") {
    byte_vec_t msg { 67,253,95,86 };
    byte_vec_t sig { 49,232,172,110,172,74,22,129,4,93,195,0,121,20,173,188,253,199,109,19,113,255,166,73,69,95,160,244,147,172,90,13,223,141,140,193,205,122,116,59,68,44,47,72,186,55,221,26,252,96,193,197,193,18,198,179,172,137,119,226,184,207,144,46 };
    byte_vec_t pk { 4,205,153,168,178,123,26,249,34,87,138,50,36,209,184,49,77,42,151,138,144,47,135,130,214,65,85,109,86,43,8,50,109,84,26,100,188,250,79,44,91,154,72,206,92,247,106,184,114,120,225,51,34,83,13,69,254,56,223,199,28,142,242,30,197 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 720 ") {
    byte_vec_t msg { 190,67,33,214 };
    byte_vec_t sig { 42,84,79,84,14,144,142,136,119,154,27,231,164,167,151,133,56,98,208,197,40,212,14,107,226,66,48,84,172,105,86,24,51,36,119,195,41,147,93,54,228,68,50,14,77,80,213,123,151,2,130,236,132,157,68,157,35,244,229,26,83,168,171,19 };
    byte_vec_t pk { 2,154,237,21,42,112,182,227,152,96,93,117,195,116,50,191,82,152,167,27,203,92,92,236,186,54,152,52,170,108,98,182,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 720 ") {
    byte_vec_t msg { 59,44,119,19 };
    byte_vec_t sig { 203,175,71,24,184,244,2,0,192,19,194,91,110,46,28,195,116,140,193,71,24,252,94,84,118,192,234,76,21,35,104,168,196,100,147,226,152,132,188,188,68,136,86,75,208,7,140,84,249,6,141,224,28,211,46,94,141,14,191,15,119,151,185,192 };
    byte_vec_t pk { 2,86,208,101,248,25,33,161,29,160,17,232,98,90,174,92,55,65,254,132,52,234,82,223,116,42,18,187,28,140,227,255,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 721 ") {
    byte_vec_t msg { 173,41,111,18 };
    byte_vec_t sig { 218,106,134,100,75,112,104,65,12,220,53,156,157,67,90,251,7,42,72,71,81,21,176,113,204,104,78,226,178,169,37,115,238,113,24,14,156,215,176,134,63,51,179,44,19,213,138,135,147,162,25,99,73,57,219,19,174,123,230,163,153,112,46,214 };
    byte_vec_t pk { 4,253,40,171,203,205,13,206,184,86,133,157,179,97,117,161,51,169,246,216,166,12,242,182,79,253,197,118,163,70,170,195,148,236,195,227,59,49,46,239,60,104,131,24,180,230,154,38,82,227,103,236,54,192,139,148,105,54,70,28,206,16,227,242,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 721 ") {
    byte_vec_t msg { 67,222,155,227 };
    byte_vec_t sig { 114,218,180,12,29,69,140,1,68,244,238,215,20,127,80,149,133,17,166,243,36,200,75,246,40,175,187,33,165,116,215,209,89,105,212,140,170,221,102,47,50,67,125,109,157,206,16,33,182,103,210,109,165,245,228,92,208,241,143,151,138,231,143,110 };
    byte_vec_t pk { 4,192,12,36,156,100,160,142,86,187,150,14,118,20,104,105,38,37,51,194,206,217,253,107,8,125,72,71,117,13,254,110,78,221,190,35,140,128,55,55,57,66,245,176,147,74,164,44,109,75,11,120,166,110,180,30,207,81,235,52,2,157,255,134,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 721 ") {
    byte_vec_t msg { 41,46,42,49 };
    byte_vec_t sig { 149,140,144,85,204,1,83,186,132,100,245,103,117,214,237,218,130,215,19,189,76,50,185,247,166,196,26,234,125,78,116,209,88,46,144,154,165,144,60,117,88,131,163,250,11,86,64,12,177,202,171,52,10,33,88,85,100,65,248,234,166,204,85,199 };
    byte_vec_t pk { 2,88,94,170,44,195,79,230,144,218,62,81,226,128,163,241,210,30,128,25,236,234,10,150,45,73,61,33,5,124,151,132,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 721 ") {
    byte_vec_t msg { 114,31,56,129 };
    byte_vec_t sig { 97,85,109,209,178,131,106,107,221,152,148,47,222,108,16,82,192,213,121,193,68,124,149,141,116,173,113,154,237,106,213,92,233,101,79,109,99,100,12,183,218,153,82,20,110,50,219,206,136,65,68,105,246,128,63,55,23,108,71,190,42,226,23,179 };
    byte_vec_t pk { 3,240,93,225,249,127,33,190,51,234,2,211,216,212,81,190,158,14,41,179,87,247,55,201,98,153,49,52,125,4,165,163,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 722 ") {
    byte_vec_t msg { 3,5,160,38 };
    byte_vec_t sig { 53,226,10,95,242,5,108,242,226,103,195,185,16,157,213,90,104,95,104,149,40,32,214,184,9,163,114,26,133,47,102,180,67,67,232,167,64,82,62,224,221,85,205,61,29,168,136,188,157,88,101,29,199,248,198,32,104,90,58,1,188,168,222,48 };
    byte_vec_t pk { 4,224,8,164,89,50,151,152,20,235,113,113,155,180,5,212,38,250,91,100,206,2,47,160,183,183,100,154,229,91,79,250,167,220,39,58,9,61,24,60,102,154,27,128,122,180,0,16,1,7,122,243,12,161,151,162,177,99,234,93,113,7,167,36,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 722 ") {
    byte_vec_t msg { 158,101,245,189 };
    byte_vec_t sig { 81,80,197,246,41,47,35,113,1,107,134,221,158,148,224,84,9,127,58,71,113,253,153,187,171,32,193,25,227,146,180,122,91,82,4,163,190,157,64,174,46,232,145,87,228,205,180,2,125,27,205,141,173,64,200,91,34,220,240,236,100,61,166,153 };
    byte_vec_t pk { 4,210,149,45,173,23,146,181,46,198,214,64,42,101,90,184,51,234,210,84,179,134,174,36,28,90,230,15,44,248,64,84,130,226,190,241,95,80,251,107,152,35,221,91,145,45,32,217,78,159,206,44,175,18,37,100,106,19,6,21,77,223,115,188,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 722 ") {
    byte_vec_t msg { 121,219,21,251 };
    byte_vec_t sig { 123,33,249,235,170,147,116,27,217,252,53,113,136,243,85,15,30,124,38,141,167,205,10,192,127,41,12,166,94,69,8,174,182,214,222,177,93,143,52,202,79,79,13,96,222,48,18,212,211,180,209,234,189,38,19,143,1,205,175,74,99,59,207,192 };
    byte_vec_t pk { 2,182,40,148,33,245,144,205,55,38,119,26,79,21,126,46,122,225,102,57,98,214,133,60,140,143,87,205,35,175,248,37,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 722 ") {
    byte_vec_t msg { 93,37,38,230 };
    byte_vec_t sig { 127,175,114,77,112,96,106,185,129,160,220,19,224,107,28,166,239,100,183,143,158,83,157,170,174,96,29,111,176,230,98,146,150,68,50,191,211,201,26,245,122,231,114,39,18,4,151,231,182,46,250,15,129,117,100,147,106,251,9,57,164,206,148,90 };
    byte_vec_t pk { 3,183,217,81,246,16,0,147,29,100,221,105,190,28,41,73,69,141,207,12,67,84,250,207,127,70,16,98,212,236,51,255,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 723 ") {
    byte_vec_t msg { 72,214,107,196 };
    byte_vec_t sig { 27,131,81,36,220,22,230,33,226,48,131,139,70,132,108,186,79,232,65,244,128,139,250,32,153,7,192,240,117,156,140,49,235,55,63,245,238,233,147,147,254,29,118,30,134,6,0,168,52,154,36,114,75,140,44,99,9,50,222,166,49,27,30,192 };
    byte_vec_t pk { 4,32,150,133,155,5,174,82,135,233,151,71,143,91,247,93,67,227,36,25,156,96,98,33,183,96,100,84,244,161,88,1,46,243,8,118,32,185,155,213,137,247,75,71,105,199,224,166,42,77,167,170,53,224,255,233,123,156,95,47,159,12,194,237,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 723 ") {
    byte_vec_t msg { 241,78,64,1 };
    byte_vec_t sig { 231,205,167,22,3,186,178,138,173,70,163,130,220,70,220,255,1,68,208,120,44,10,57,100,12,240,4,117,139,148,107,249,139,202,209,238,52,161,84,16,140,20,149,105,95,190,21,70,165,35,228,221,74,176,192,114,73,125,135,16,64,22,200,166 };
    byte_vec_t pk { 4,129,175,65,233,76,112,173,64,5,140,197,239,168,180,4,63,180,237,63,129,186,118,214,231,247,54,122,231,109,178,105,217,226,215,109,206,0,61,32,7,186,7,36,75,119,102,97,22,143,125,26,223,238,177,103,126,13,35,140,203,8,211,188,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 723 ") {
    byte_vec_t msg { 168,103,0,208 };
    byte_vec_t sig { 248,196,254,27,69,174,112,167,163,121,223,226,140,20,211,118,89,233,82,161,9,116,21,204,228,84,103,190,104,112,36,169,102,155,186,86,0,206,103,29,141,59,128,50,99,139,13,133,174,161,175,192,226,76,119,135,219,209,126,155,92,57,251,69 };
    byte_vec_t pk { 2,36,249,123,207,21,81,146,178,223,237,222,128,121,113,194,192,119,22,61,187,124,123,16,121,112,79,241,227,56,75,74,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 723 ") {
    byte_vec_t msg { 246,74,157,70 };
    byte_vec_t sig { 106,51,189,151,6,119,211,70,246,201,39,34,44,165,110,156,34,129,161,246,45,162,91,190,169,183,196,202,227,179,245,215,159,105,179,81,19,13,241,153,79,171,73,38,90,117,25,97,132,220,13,242,101,97,255,232,196,205,194,21,52,252,78,227 };
    byte_vec_t pk { 3,253,160,177,212,57,193,199,92,46,255,100,40,140,141,160,174,241,199,196,177,52,197,248,56,36,57,6,134,171,16,106,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 724 ") {
    byte_vec_t msg { 125,54,20,132 };
    byte_vec_t sig { 51,54,125,65,249,47,9,251,4,96,161,75,143,245,193,188,53,168,91,121,90,143,153,146,220,175,70,234,100,239,109,137,157,136,76,125,168,254,38,186,174,129,190,224,37,16,75,115,207,246,18,35,101,52,66,7,176,126,136,224,142,231,136,75 };
    byte_vec_t pk { 4,20,111,91,196,64,113,156,183,150,1,72,65,67,84,75,112,163,193,3,237,232,236,35,90,88,49,6,85,57,216,112,115,33,194,52,77,160,82,180,210,249,207,168,217,131,66,108,232,83,182,56,231,159,129,210,21,53,159,123,48,105,23,45,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 724 ") {
    byte_vec_t msg { 205,61,40,2 };
    byte_vec_t sig { 117,1,236,244,194,21,214,47,203,34,241,166,63,149,28,33,55,144,92,98,57,191,252,155,160,14,68,227,226,164,126,202,154,146,95,3,93,163,240,190,126,145,66,199,142,95,232,129,128,1,62,141,217,201,123,149,219,130,238,227,3,156,92,183 };
    byte_vec_t pk { 4,38,74,196,139,162,12,249,242,68,235,99,113,249,227,238,30,124,187,136,113,80,241,191,171,170,186,65,214,225,177,234,122,251,162,7,1,115,213,29,72,43,226,64,81,215,23,136,248,90,173,208,63,73,150,166,102,163,78,156,36,220,56,93,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 724 ") {
    byte_vec_t msg { 81,27,152,63 };
    byte_vec_t sig { 233,88,107,109,117,204,182,41,132,112,52,10,241,251,98,82,203,201,163,78,198,125,162,15,55,245,145,42,153,52,209,163,8,72,193,246,244,185,150,40,76,35,92,84,159,138,249,223,212,104,196,218,35,96,7,97,129,47,31,253,37,97,82,213 };
    byte_vec_t pk { 3,202,63,140,21,67,99,45,51,39,99,250,57,0,39,243,130,187,239,234,56,123,158,103,12,156,158,119,154,170,0,64,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 724 ") {
    byte_vec_t msg { 250,37,142,10 };
    byte_vec_t sig { 23,253,162,156,123,11,100,50,185,108,227,59,147,103,214,76,132,61,123,67,216,156,67,231,242,191,46,17,163,166,244,16,242,55,78,248,153,59,101,42,141,247,91,87,231,115,21,6,201,55,219,238,135,4,181,133,105,167,158,75,85,242,226,196 };
    byte_vec_t pk { 2,90,176,104,201,35,2,30,134,151,180,66,88,213,147,107,218,185,24,62,102,243,159,138,229,139,64,97,87,76,170,201,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 725 ") {
    byte_vec_t msg { 44,3,235,22 };
    byte_vec_t sig { 161,31,13,163,187,113,105,1,110,188,104,210,75,58,212,43,63,112,81,122,193,164,244,40,65,128,126,16,215,195,145,239,110,59,26,188,23,96,50,122,141,82,148,158,175,39,160,233,216,16,234,160,204,209,171,102,247,199,154,201,167,158,80,135 };
    byte_vec_t pk { 4,119,203,14,133,66,38,72,215,238,124,126,209,199,174,226,242,242,5,220,246,49,205,168,86,72,211,26,127,60,86,238,104,117,31,1,67,198,249,8,67,196,163,200,5,247,143,241,87,219,51,174,186,103,238,35,185,0,131,231,77,240,132,52,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 725 ") {
    byte_vec_t msg { 109,75,145,181 };
    byte_vec_t sig { 206,189,5,219,191,112,102,9,29,1,70,7,45,202,158,198,176,195,140,152,195,222,169,233,219,35,18,26,192,139,109,175,41,59,130,179,158,102,51,92,96,29,171,128,29,219,119,199,197,83,72,75,15,47,20,135,11,43,134,97,183,238,11,104 };
    byte_vec_t pk { 4,13,113,50,247,149,11,115,124,80,91,18,11,253,145,238,72,109,236,255,34,67,213,198,7,158,58,26,105,155,130,207,203,242,60,230,232,246,180,1,11,156,186,248,31,246,182,4,26,222,72,73,69,99,40,0,111,174,216,246,42,177,100,111,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 725 ") {
    byte_vec_t msg { 27,84,115,68 };
    byte_vec_t sig { 102,137,30,214,148,234,188,3,173,150,48,141,41,172,137,198,53,166,140,84,188,47,197,21,50,136,102,110,6,250,203,222,131,228,242,81,99,147,191,249,172,170,160,243,9,22,197,199,35,170,112,111,102,224,96,114,169,194,118,149,66,113,210,147 };
    byte_vec_t pk { 2,157,206,226,154,97,242,110,52,106,7,100,54,97,77,242,219,63,79,102,191,214,72,35,91,48,241,4,251,254,202,146,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 725 ") {
    byte_vec_t msg { 252,181,47,246 };
    byte_vec_t sig { 104,236,65,199,183,111,196,118,41,213,251,37,2,191,240,198,244,75,171,202,51,190,25,7,196,200,150,91,241,37,92,253,88,243,164,15,158,179,232,101,36,172,29,125,209,50,149,216,181,90,131,191,110,46,59,217,80,52,54,36,164,179,3,164 };
    byte_vec_t pk { 2,125,134,217,211,0,221,208,10,30,204,61,94,137,125,212,195,191,238,82,129,164,243,244,43,21,98,12,240,63,203,216,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 726 ") {
    byte_vec_t msg { 83,215,136,180 };
    byte_vec_t sig { 70,153,116,130,24,103,191,95,57,142,92,233,195,204,129,201,150,68,12,99,197,23,229,169,79,96,38,3,180,166,112,106,11,225,72,15,36,183,81,221,216,83,25,184,144,4,170,245,59,162,252,123,246,140,217,73,208,68,101,88,70,186,41,1 };
    byte_vec_t pk { 4,240,216,133,71,183,208,195,183,167,127,51,145,106,54,146,62,128,13,22,181,242,28,214,152,243,101,198,151,182,253,210,16,92,188,205,130,27,3,136,237,47,232,38,249,88,74,9,112,75,196,11,27,125,57,78,220,112,220,54,211,32,222,168,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 726 ") {
    byte_vec_t msg { 237,110,59,116 };
    byte_vec_t sig { 251,210,237,110,12,30,158,222,133,172,199,252,116,204,125,165,131,207,103,225,212,11,84,98,61,241,10,69,181,107,122,176,25,167,30,2,239,123,174,90,78,92,42,2,135,80,159,210,218,234,25,154,241,255,118,66,172,141,52,103,244,75,209,146 };
    byte_vec_t pk { 4,228,77,95,151,76,102,20,56,241,75,31,212,255,108,60,43,172,191,239,121,161,186,248,156,31,236,211,36,95,158,96,144,219,155,64,246,223,207,150,245,105,57,161,100,195,227,121,163,143,73,204,195,248,47,200,60,82,253,248,170,85,246,210,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 726 ") {
    byte_vec_t msg { 116,243,147,132 };
    byte_vec_t sig { 137,7,245,174,239,247,49,5,121,155,14,18,170,75,178,213,185,0,78,5,110,140,84,148,201,120,8,116,109,178,142,80,12,254,101,217,38,173,109,234,121,202,31,195,191,81,170,38,185,101,208,50,216,116,212,161,248,67,12,232,0,144,7,149 };
    byte_vec_t pk { 3,223,56,149,147,97,191,126,248,168,107,235,112,207,71,130,208,79,226,56,219,224,151,191,48,19,178,233,212,101,168,206,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 726 ") {
    byte_vec_t msg { 40,69,17,252 };
    byte_vec_t sig { 191,157,128,213,180,146,220,162,197,181,229,27,51,106,231,99,149,188,33,24,147,46,139,83,154,104,251,56,184,48,127,156,219,76,217,201,190,127,128,93,146,190,241,112,15,122,42,242,33,204,164,77,15,198,5,118,210,81,166,110,70,111,211,30 };
    byte_vec_t pk { 3,81,239,105,57,248,70,244,95,93,171,70,99,117,36,24,229,132,69,232,95,83,61,167,52,196,28,68,167,197,206,251,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 727 ") {
    byte_vec_t msg { 84,138,40,171 };
    byte_vec_t sig { 60,207,140,226,124,192,99,175,76,125,36,61,112,132,24,214,10,231,120,223,226,163,131,106,222,19,203,150,62,113,93,81,39,124,221,139,10,183,247,16,179,14,242,80,0,37,115,163,164,255,168,149,141,175,60,10,43,93,247,151,244,34,175,2 };
    byte_vec_t pk { 4,145,36,98,207,54,31,178,211,244,66,157,10,223,33,54,244,246,34,74,175,244,96,156,27,125,53,37,159,103,218,52,134,112,205,204,255,55,70,233,145,92,207,174,199,219,155,254,107,131,147,47,45,117,154,235,242,110,73,131,59,99,213,205,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 727 ") {
    byte_vec_t msg { 117,90,124,4 };
    byte_vec_t sig { 198,202,191,95,214,172,152,193,65,132,85,59,4,228,246,102,195,187,14,124,228,35,113,115,172,82,144,162,187,187,213,2,131,148,222,44,2,210,9,71,125,128,190,68,157,59,103,158,215,187,65,247,212,176,74,216,173,46,76,18,206,71,223,130 };
    byte_vec_t pk { 4,42,2,37,109,177,114,172,209,190,187,157,26,53,255,236,153,1,64,65,25,44,11,56,137,197,207,132,236,206,65,73,35,194,18,34,24,175,53,208,50,62,194,247,213,228,222,144,214,115,252,160,203,35,207,239,140,3,76,102,169,201,27,77,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 727 ") {
    byte_vec_t msg { 114,17,170,95 };
    byte_vec_t sig { 236,220,76,49,230,237,147,78,182,255,140,174,172,16,111,157,51,214,51,42,27,225,41,7,14,67,254,227,0,119,31,179,252,211,26,205,253,98,97,191,251,188,174,49,48,107,11,153,124,148,43,68,233,250,89,19,237,56,12,223,5,122,151,35 };
    byte_vec_t pk { 2,150,154,245,195,238,54,71,72,17,154,83,217,214,112,126,54,24,168,176,147,119,211,199,51,181,110,70,241,53,156,197,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 727 ") {
    byte_vec_t msg { 4,109,26,113 };
    byte_vec_t sig { 26,122,3,53,136,0,115,213,32,239,5,91,241,59,220,42,163,140,154,150,196,153,210,3,60,53,105,179,52,199,9,158,164,251,204,34,247,50,240,21,191,193,32,18,128,252,82,5,147,128,92,215,88,219,119,61,161,16,170,40,143,110,63,95 };
    byte_vec_t pk { 2,232,126,251,113,2,205,222,142,93,113,232,29,25,163,163,245,140,111,107,129,18,139,84,105,69,204,203,44,76,219,100,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 728 ") {
    byte_vec_t msg { 134,109,65,34 };
    byte_vec_t sig { 118,161,254,238,141,27,1,189,69,35,136,48,181,55,211,205,188,82,18,89,218,96,130,13,83,141,84,91,190,27,140,147,233,37,92,36,84,255,84,18,25,255,8,82,248,150,162,129,20,149,58,100,138,44,24,21,2,218,207,146,152,168,203,17 };
    byte_vec_t pk { 4,152,138,13,80,202,254,147,96,23,25,157,49,150,28,222,22,154,239,58,113,190,156,242,49,4,254,237,217,83,30,81,92,196,251,90,84,207,12,58,124,196,113,11,172,243,229,227,141,11,234,3,15,239,128,187,210,41,123,128,65,12,149,80,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 728 ") {
    byte_vec_t msg { 68,148,78,50 };
    byte_vec_t sig { 189,194,153,85,247,58,38,113,150,213,23,100,139,199,106,224,163,17,47,164,126,85,51,28,19,124,152,247,185,115,202,206,77,129,79,48,230,222,17,10,178,20,253,76,22,25,137,140,164,97,108,59,162,177,231,228,252,2,124,6,248,114,199,98 };
    byte_vec_t pk { 4,218,210,95,166,93,9,29,38,113,49,138,200,243,143,9,113,118,159,66,177,194,83,167,114,76,170,251,41,107,173,172,26,170,86,200,119,69,138,6,233,192,114,11,43,165,217,212,9,110,45,138,220,73,87,112,16,211,112,63,144,126,73,87,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 728 ") {
    byte_vec_t msg { 67,254,239,160 };
    byte_vec_t sig { 63,50,124,173,113,26,121,9,216,178,156,240,41,57,133,239,10,2,238,234,94,206,31,162,199,5,150,138,174,137,223,130,170,55,131,182,119,8,121,132,6,9,7,41,242,134,100,223,64,69,31,128,183,144,159,249,246,48,199,142,64,230,128,171 };
    byte_vec_t pk { 2,190,113,98,139,79,64,128,141,88,249,142,71,127,18,178,162,44,125,12,194,103,79,114,124,235,122,161,238,102,234,50,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 728 ") {
    byte_vec_t msg { 48,140,104,17 };
    byte_vec_t sig { 220,210,238,239,131,31,78,203,45,213,59,89,140,19,253,224,192,118,231,255,218,248,79,137,163,168,229,253,178,167,193,121,84,112,39,102,160,211,221,172,126,237,247,10,233,79,4,97,145,122,201,84,120,204,241,121,100,255,173,145,192,30,120,84 };
    byte_vec_t pk { 2,169,227,166,180,243,255,125,226,52,250,115,44,128,203,140,19,227,38,254,195,54,213,233,110,187,43,51,10,146,115,4,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 729 ") {
    byte_vec_t msg { 168,115,146,236 };
    byte_vec_t sig { 223,221,59,36,54,29,69,111,212,166,52,144,26,38,147,52,11,38,238,184,50,64,6,239,199,130,6,193,198,97,156,44,130,8,145,189,61,202,72,149,240,204,87,141,188,32,237,71,111,204,109,35,17,226,201,155,28,239,53,99,103,54,56,195 };
    byte_vec_t pk { 4,13,247,36,124,253,106,86,164,205,95,156,161,59,152,202,67,126,160,201,202,28,65,125,68,103,242,165,70,41,190,247,163,97,40,26,26,212,215,122,117,49,80,227,135,87,228,25,156,195,210,242,213,242,162,168,193,255,208,155,12,58,191,157,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 729 ") {
    byte_vec_t msg { 87,107,110,252 };
    byte_vec_t sig { 95,248,150,83,202,219,223,239,146,44,75,121,223,248,44,207,9,79,150,83,185,233,30,118,249,47,137,129,139,17,170,99,19,82,18,78,91,177,228,161,88,150,48,95,54,20,103,62,157,235,70,252,114,235,72,102,61,245,15,227,208,246,233,231 };
    byte_vec_t pk { 4,88,145,114,174,247,31,221,139,85,183,23,161,20,239,247,111,3,146,163,138,232,146,196,175,129,189,193,50,161,29,143,103,44,245,5,232,191,150,196,170,232,72,249,45,182,70,19,225,202,148,71,28,62,149,190,229,37,16,160,20,158,146,48,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 729 ") {
    byte_vec_t msg { 222,158,1,11 };
    byte_vec_t sig { 118,94,214,163,165,46,142,81,34,182,156,179,65,126,206,186,59,18,118,21,230,151,153,81,131,139,224,45,44,246,38,52,203,90,183,113,80,185,154,212,151,148,56,166,41,71,82,138,197,84,132,11,10,6,148,141,38,35,117,210,190,137,227,215 };
    byte_vec_t pk { 2,173,189,69,174,162,124,161,198,173,159,109,230,248,0,95,189,204,255,145,231,231,230,174,173,180,142,206,111,19,204,189,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 729 ") {
    byte_vec_t msg { 247,153,159,80 };
    byte_vec_t sig { 49,180,237,184,98,25,221,53,163,47,118,185,108,112,65,5,5,230,75,103,70,178,8,108,223,94,158,124,225,105,174,41,240,247,192,166,134,60,66,106,228,87,41,160,51,19,247,98,40,157,222,211,37,60,51,85,17,82,44,100,51,115,175,54 };
    byte_vec_t pk { 3,165,38,243,224,217,252,230,19,55,148,98,44,57,103,179,151,66,103,224,216,207,237,190,196,80,100,42,128,171,246,229,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 730 ") {
    byte_vec_t msg { 70,48,47,164 };
    byte_vec_t sig { 36,31,63,120,144,28,201,147,227,236,186,52,203,112,168,35,179,108,253,233,211,252,0,209,183,102,186,169,71,80,50,212,75,214,213,159,179,104,17,154,183,2,202,193,94,168,120,244,15,20,80,51,86,90,131,18,241,27,242,11,76,125,100,39 };
    byte_vec_t pk { 4,120,5,208,150,251,203,17,70,69,64,73,17,2,208,200,57,90,77,43,92,86,123,214,207,249,119,83,75,57,67,137,138,192,38,81,39,46,123,90,218,98,75,70,244,125,145,188,244,197,43,111,195,49,42,127,148,231,138,141,153,155,247,74,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 730 ") {
    byte_vec_t msg { 50,246,242,45 };
    byte_vec_t sig { 224,202,75,219,113,3,229,205,142,173,51,14,160,186,166,34,140,106,179,30,93,161,42,89,108,91,59,202,12,19,207,74,213,89,35,1,14,76,69,156,140,187,7,33,98,198,128,138,207,26,115,179,227,178,137,214,91,174,183,57,224,202,11,25 };
    byte_vec_t pk { 4,201,128,192,1,170,240,23,233,98,21,17,171,215,77,70,109,112,109,203,65,167,139,176,115,72,182,142,151,224,209,233,142,32,86,224,99,199,45,82,133,192,139,130,107,119,220,14,158,224,87,248,191,32,211,19,88,21,119,223,224,25,205,37,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 730 ") {
    byte_vec_t msg { 236,154,189,9 };
    byte_vec_t sig { 143,218,182,50,66,127,20,255,217,3,111,21,181,199,107,203,163,47,163,129,30,119,87,224,84,57,129,2,238,37,87,210,10,22,211,187,16,225,222,236,47,142,167,77,95,238,112,111,36,57,248,25,8,219,194,2,73,9,211,62,215,241,47,191 };
    byte_vec_t pk { 2,228,146,151,157,7,236,196,197,200,214,147,221,52,116,213,69,204,74,109,21,0,135,73,195,235,68,219,151,55,152,55,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 730 ") {
    byte_vec_t msg { 200,23,245,241 };
    byte_vec_t sig { 108,37,146,126,100,2,5,50,134,143,158,47,8,233,68,63,240,40,7,211,212,15,114,224,95,205,67,150,71,125,182,114,128,117,213,160,127,65,228,114,101,197,75,138,38,168,61,87,116,95,224,190,200,207,234,236,117,213,90,248,2,245,133,57 };
    byte_vec_t pk { 2,112,13,63,216,232,106,220,153,50,49,158,72,150,157,73,78,199,173,144,130,155,38,74,104,138,140,2,29,193,211,155,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 731 ") {
    byte_vec_t msg { 102,111,162,253 };
    byte_vec_t sig { 201,123,224,9,30,145,151,212,155,207,49,233,121,52,59,177,32,133,22,106,173,35,55,141,192,203,23,220,179,235,241,173,234,79,194,246,49,28,33,36,6,66,253,223,23,65,139,57,181,213,184,219,216,49,77,81,60,232,66,48,23,120,97,229 };
    byte_vec_t pk { 4,157,244,97,63,194,100,232,163,115,218,65,104,7,30,236,169,134,105,69,55,28,190,147,170,51,239,232,227,47,82,154,71,119,243,38,199,253,79,83,150,134,93,167,184,99,204,169,225,220,149,3,46,2,249,136,46,131,38,191,222,212,143,203,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 731 ") {
    byte_vec_t msg { 145,102,35,142 };
    byte_vec_t sig { 241,72,231,251,196,253,47,230,99,154,58,139,198,95,104,221,168,227,248,78,129,165,93,18,128,53,220,135,126,13,158,162,184,213,178,63,55,236,45,9,110,8,99,60,98,49,183,64,158,247,25,41,22,218,175,71,254,105,168,254,77,110,115,111 };
    byte_vec_t pk { 4,167,50,200,63,109,9,75,52,248,171,223,210,54,166,242,227,91,130,201,121,59,15,226,215,241,144,238,214,246,57,110,246,163,146,74,39,49,202,16,204,151,67,255,187,103,119,14,238,49,210,130,163,142,212,36,254,221,216,170,239,102,61,73,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 731 ") {
    byte_vec_t msg { 106,162,100,220 };
    byte_vec_t sig { 245,154,73,195,20,128,249,124,207,3,234,121,217,35,45,61,99,243,104,33,84,51,136,177,248,148,223,41,175,197,42,145,132,197,68,134,95,162,116,220,206,244,85,221,160,25,206,173,177,255,12,151,251,166,74,95,23,106,88,249,135,152,255,111 };
    byte_vec_t pk { 3,66,218,55,210,30,157,138,125,38,169,107,234,48,37,132,166,59,92,107,50,74,205,227,154,134,66,100,251,49,239,110,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 731 ") {
    byte_vec_t msg { 206,116,51,123 };
    byte_vec_t sig { 29,53,17,95,84,62,17,120,135,70,106,197,76,129,129,63,26,53,190,119,202,59,55,160,137,27,121,253,26,71,124,189,213,131,158,149,132,102,2,4,86,164,151,156,88,28,89,9,144,246,50,241,81,102,232,10,126,61,31,210,82,195,111,251 };
    byte_vec_t pk { 3,62,231,119,101,19,244,111,83,79,91,154,11,97,72,117,191,58,6,104,235,200,7,70,176,173,85,229,197,156,157,187,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 732 ") {
    byte_vec_t msg { 246,52,142,142 };
    byte_vec_t sig { 216,119,127,112,150,15,246,34,119,156,82,78,14,243,89,28,229,220,40,29,45,205,44,25,69,52,178,91,139,234,122,69,235,113,77,144,27,6,211,51,222,188,36,30,119,162,23,122,224,8,107,148,97,179,193,47,133,90,119,22,179,25,249,158 };
    byte_vec_t pk { 4,253,123,143,207,180,34,251,145,145,81,215,54,186,15,36,112,4,253,176,22,186,104,23,184,225,59,41,111,137,48,252,123,90,252,35,162,61,160,89,189,117,40,118,212,127,242,243,103,174,166,76,127,107,188,115,236,240,9,110,115,154,13,158,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 732 ") {
    byte_vec_t msg { 53,144,42,168 };
    byte_vec_t sig { 34,55,143,192,159,41,238,92,92,115,223,104,122,49,221,18,96,63,11,15,255,238,198,149,23,119,60,255,60,42,238,136,202,222,67,156,160,224,230,16,149,27,130,155,181,227,51,170,231,127,187,243,103,176,39,155,71,75,130,217,44,109,230,215 };
    byte_vec_t pk { 4,222,172,121,75,231,107,46,105,56,236,80,55,92,124,120,48,239,121,48,80,50,118,242,32,116,218,170,101,75,1,122,64,110,37,21,77,134,15,241,71,155,13,123,84,129,166,182,71,66,196,42,152,55,209,58,162,2,100,254,203,56,83,179,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 732 ") {
    byte_vec_t msg { 243,31,144,225 };
    byte_vec_t sig { 44,7,197,80,188,217,105,211,133,38,83,88,11,67,201,70,30,231,189,128,239,222,147,9,123,132,56,94,26,45,74,155,104,95,28,145,137,156,198,47,229,101,235,110,58,148,229,142,199,3,26,141,46,242,140,90,253,176,3,188,117,142,64,207 };
    byte_vec_t pk { 3,28,78,194,21,105,116,42,194,213,176,73,21,97,174,166,159,192,144,153,26,22,248,122,37,250,102,73,4,27,172,136,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 732 ") {
    byte_vec_t msg { 109,141,132,252 };
    byte_vec_t sig { 67,52,245,188,99,148,45,72,152,235,1,105,92,232,232,18,104,8,27,89,48,96,166,134,6,28,47,38,161,79,199,93,207,189,7,195,208,115,228,180,0,11,130,21,51,250,140,36,179,144,170,216,87,122,45,151,238,128,12,109,212,155,211,243 };
    byte_vec_t pk { 3,150,180,127,33,147,234,84,79,237,140,56,152,242,166,125,106,129,48,217,160,94,187,56,26,35,49,176,156,169,240,216,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 733 ") {
    byte_vec_t msg { 239,6,149,163 };
    byte_vec_t sig { 106,102,61,248,221,183,155,106,158,59,20,64,202,247,191,168,15,67,219,139,122,186,77,174,83,229,173,170,217,140,197,236,69,236,99,195,221,145,37,80,216,143,242,185,179,187,228,195,56,44,200,1,111,251,212,179,71,28,74,141,133,127,109,135 };
    byte_vec_t pk { 4,226,101,243,38,68,60,132,117,50,117,144,36,219,160,77,82,40,149,70,196,135,92,209,180,32,68,249,219,0,88,139,70,17,9,211,74,183,217,241,132,91,160,9,161,153,207,93,0,234,248,146,206,177,159,12,177,199,216,171,129,2,207,154,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 733 ") {
    byte_vec_t msg { 146,11,128,231 };
    byte_vec_t sig { 192,145,229,199,22,39,47,214,28,187,154,147,144,73,127,191,162,82,191,120,209,233,124,7,169,93,143,189,240,167,139,106,143,234,72,111,28,88,101,178,112,82,175,41,189,82,159,65,5,220,212,241,105,134,121,92,132,212,250,63,142,57,47,183 };
    byte_vec_t pk { 4,95,227,53,173,191,121,139,90,181,238,37,217,161,80,35,8,128,74,135,242,252,61,18,12,10,110,52,41,197,35,197,232,133,176,32,98,25,137,202,136,140,62,43,113,104,238,92,239,59,228,155,170,145,162,96,231,130,32,10,183,254,2,86,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 733 ") {
    byte_vec_t msg { 235,89,13,209 };
    byte_vec_t sig { 89,169,145,100,106,60,152,217,122,147,251,229,42,101,98,116,189,117,220,195,170,65,175,109,62,142,185,12,255,25,182,46,248,222,111,164,61,253,155,71,116,92,40,25,238,218,33,144,224,96,62,82,128,176,185,248,122,244,128,73,173,131,11,215 };
    byte_vec_t pk { 2,75,99,169,73,238,110,17,29,64,226,125,74,167,120,172,68,22,196,207,205,49,23,53,95,12,64,41,110,195,100,68,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 733 ") {
    byte_vec_t msg { 22,77,179,5 };
    byte_vec_t sig { 245,191,16,216,8,58,43,222,64,113,72,254,184,163,49,58,80,146,119,44,1,149,251,78,159,69,209,46,182,167,189,60,88,5,188,117,229,99,215,253,169,53,163,11,139,188,62,239,240,170,77,174,90,112,233,119,23,196,114,137,178,38,50,99 };
    byte_vec_t pk { 3,102,82,196,237,120,5,214,164,143,126,254,48,249,58,72,63,67,20,6,50,32,198,9,222,20,180,59,7,208,128,231,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 734 ") {
    byte_vec_t msg { 216,68,40,46 };
    byte_vec_t sig { 165,107,23,14,219,36,224,126,210,12,204,8,54,119,37,95,247,110,216,112,130,168,124,238,99,168,98,234,205,127,128,17,198,159,231,0,107,164,239,86,187,37,121,165,209,128,23,2,102,14,35,150,98,118,37,31,44,170,76,154,3,102,36,244 };
    byte_vec_t pk { 4,213,57,46,110,175,181,8,162,198,26,236,212,172,88,221,125,127,194,98,16,7,110,88,141,157,141,202,132,181,235,47,236,127,254,222,80,101,170,93,221,106,105,73,125,177,250,203,70,226,20,166,234,239,186,66,99,255,173,187,225,210,29,211,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 734 ") {
    byte_vec_t msg { 223,38,166,10 };
    byte_vec_t sig { 100,54,2,83,254,234,203,81,100,225,165,204,76,167,119,49,250,252,104,121,69,101,26,159,5,211,219,42,112,180,176,74,198,96,168,107,181,221,27,142,189,233,89,225,5,210,202,222,192,160,181,237,228,23,213,198,21,202,55,58,50,26,23,116 };
    byte_vec_t pk { 4,10,102,242,217,236,15,232,61,68,188,198,10,133,63,243,58,211,10,248,211,222,175,25,43,153,20,102,56,67,215,220,243,207,200,212,161,59,158,62,37,181,172,179,250,16,166,59,78,181,228,75,7,71,223,131,35,134,70,45,92,217,101,221,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 734 ") {
    byte_vec_t msg { 73,252,139,48 };
    byte_vec_t sig { 213,222,127,28,32,11,255,180,221,66,218,94,29,68,48,17,101,191,4,178,253,68,79,44,130,173,81,177,80,129,0,220,239,175,246,159,251,223,130,85,97,131,189,81,156,186,153,13,3,217,34,100,16,102,124,93,57,43,41,48,248,238,54,3 };
    byte_vec_t pk { 3,128,152,115,44,44,223,6,71,211,157,202,131,128,39,239,46,250,39,197,109,44,144,75,214,179,252,112,25,225,232,145,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 734 ") {
    byte_vec_t msg { 162,100,91,37 };
    byte_vec_t sig { 199,184,191,199,232,161,156,56,190,13,192,228,53,237,148,115,3,81,149,85,194,1,244,44,7,177,40,167,141,161,162,31,155,119,38,11,163,172,36,42,51,29,200,15,66,28,61,93,218,119,255,99,10,20,235,18,23,147,146,46,47,129,179,154 };
    byte_vec_t pk { 2,11,38,227,117,144,197,20,50,132,5,56,61,41,28,105,238,12,66,70,63,116,179,102,19,38,79,146,179,227,164,69,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 735 ") {
    byte_vec_t msg { 77,45,174,117 };
    byte_vec_t sig { 69,247,91,229,223,88,109,169,252,190,136,129,140,223,193,171,174,201,70,37,246,172,112,205,132,212,214,213,159,66,187,230,188,123,169,49,22,114,227,107,124,40,254,14,29,36,113,59,63,5,203,5,216,198,123,4,207,78,182,194,16,1,173,226 };
    byte_vec_t pk { 4,48,94,83,180,222,90,163,185,146,149,253,204,46,103,247,53,98,83,210,6,173,23,231,247,162,250,252,109,224,222,146,201,37,41,44,122,21,244,29,224,171,106,202,107,8,60,138,216,116,232,33,59,129,229,202,207,169,113,230,239,26,255,94,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 735 ") {
    byte_vec_t msg { 77,46,206,119 };
    byte_vec_t sig { 0,172,136,136,3,166,143,35,8,108,49,140,176,181,184,176,80,253,63,195,170,108,141,29,16,176,32,40,236,59,72,13,87,206,212,195,161,225,47,255,242,144,174,172,215,253,208,244,91,83,158,108,187,116,65,2,205,88,153,11,193,13,246,91 };
    byte_vec_t pk { 4,230,150,131,53,44,13,157,161,136,6,103,39,24,202,157,77,240,62,192,70,189,60,219,26,53,60,113,63,208,57,152,240,22,37,21,155,83,195,132,198,42,174,202,172,230,61,102,152,225,67,66,6,244,237,92,241,9,47,54,226,81,159,43,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 735 ") {
    byte_vec_t msg { 199,49,121,1 };
    byte_vec_t sig { 90,123,58,244,163,118,49,41,171,47,149,252,188,41,20,125,202,15,179,162,225,186,246,14,113,159,17,135,203,208,113,78,251,178,16,223,254,43,218,213,55,237,251,21,3,251,247,113,14,18,47,184,236,160,0,19,13,69,167,164,119,240,18,22 };
    byte_vec_t pk { 3,171,28,176,23,47,4,193,245,136,141,62,245,72,16,91,166,120,74,80,19,199,10,215,94,134,24,27,170,110,40,249,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 735 ") {
    byte_vec_t msg { 145,189,243,82 };
    byte_vec_t sig { 200,112,25,129,207,218,12,25,149,129,54,172,61,89,134,29,125,244,64,200,104,5,36,252,231,129,50,109,84,78,33,152,134,147,239,20,137,166,253,241,250,134,105,152,198,169,151,192,26,96,159,246,11,133,165,200,232,20,153,185,187,154,81,86 };
    byte_vec_t pk { 3,77,65,51,36,66,172,210,237,89,125,190,53,221,167,199,187,137,166,132,86,13,68,8,6,7,214,13,15,86,168,110,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 736 ") {
    byte_vec_t msg { 90,57,22,149 };
    byte_vec_t sig { 65,138,11,29,139,155,180,32,139,155,246,28,35,216,103,209,151,5,185,42,68,154,194,161,155,128,197,169,35,7,151,206,105,104,60,165,24,10,213,170,245,85,120,1,56,230,49,102,220,24,139,178,108,216,42,186,115,26,171,114,17,182,18,117 };
    byte_vec_t pk { 4,72,190,211,185,213,134,121,236,218,91,55,188,240,187,135,254,19,62,59,109,169,38,85,250,54,131,190,158,29,178,149,145,216,102,7,101,219,147,28,101,81,110,99,207,86,204,5,54,42,11,51,87,4,73,15,91,242,91,13,133,91,144,5,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 736 ") {
    byte_vec_t msg { 42,197,53,181 };
    byte_vec_t sig { 190,88,46,203,114,249,7,87,123,92,20,82,101,118,37,227,103,221,162,54,198,138,99,144,234,27,204,105,141,189,221,199,147,131,216,45,39,216,197,249,240,15,158,55,95,44,200,248,109,52,240,48,64,65,51,214,248,66,9,11,49,217,138,246 };
    byte_vec_t pk { 4,91,2,132,93,127,28,210,164,58,253,199,212,84,66,114,209,134,158,118,148,43,82,199,151,113,93,44,62,79,21,10,63,151,191,8,248,18,216,31,181,249,151,193,13,10,134,218,244,127,104,88,59,201,248,142,30,249,20,110,113,237,3,81,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 736 ") {
    byte_vec_t msg { 166,27,44,39 };
    byte_vec_t sig { 79,202,75,76,66,224,206,82,114,35,216,123,181,30,73,181,239,116,175,203,128,184,87,9,43,0,188,171,172,152,166,30,198,162,169,201,111,226,46,78,185,5,144,217,86,180,235,217,48,105,254,244,136,118,142,231,189,133,12,86,219,222,241,99 };
    byte_vec_t pk { 3,33,41,43,192,162,234,28,9,83,177,42,142,193,106,85,2,140,125,104,163,199,141,8,107,108,142,102,221,150,247,55,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 736 ") {
    byte_vec_t msg { 92,89,99,46 };
    byte_vec_t sig { 254,231,94,147,136,24,137,74,86,96,87,183,146,130,148,158,117,115,204,238,170,239,67,111,141,22,167,250,205,153,237,58,21,182,87,199,148,167,16,154,249,143,191,176,154,3,47,235,212,38,56,172,248,48,29,173,119,35,195,223,168,86,114,160 };
    byte_vec_t pk { 3,145,77,129,128,114,110,35,102,125,139,207,236,190,1,164,62,183,123,253,47,84,212,44,1,239,31,212,77,142,255,234,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 737 ") {
    byte_vec_t msg { 153,189,188,159 };
    byte_vec_t sig { 244,8,43,245,130,228,125,170,204,58,226,53,45,180,179,207,221,75,23,162,0,79,253,12,220,9,36,101,238,191,31,237,182,19,190,20,1,99,166,33,169,0,160,232,125,151,140,141,53,118,63,105,83,12,14,46,110,207,178,16,117,242,165,156 };
    byte_vec_t pk { 4,249,74,95,191,173,183,218,72,1,69,230,12,177,117,125,248,48,32,249,212,68,110,63,223,133,116,39,4,227,153,125,194,254,168,168,246,156,72,140,205,50,42,59,255,63,47,251,127,106,89,92,72,236,25,245,230,91,113,108,87,236,204,187,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 737 ") {
    byte_vec_t msg { 109,57,70,206 };
    byte_vec_t sig { 143,220,84,205,111,93,176,178,166,167,82,254,226,28,79,45,135,30,246,140,221,127,227,181,204,76,51,162,150,172,50,84,240,243,243,159,107,186,10,173,203,226,77,75,188,54,28,155,119,0,106,185,25,53,184,8,45,170,156,172,229,247,65,56 };
    byte_vec_t pk { 4,46,253,132,201,3,0,232,79,215,212,130,57,142,176,92,229,174,127,62,210,200,36,179,77,87,26,29,245,144,111,171,38,248,216,169,126,34,211,236,243,24,168,28,110,247,224,35,109,126,118,211,243,35,134,20,237,219,127,95,6,199,36,77,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 737 ") {
    byte_vec_t msg { 161,70,22,28 };
    byte_vec_t sig { 108,182,49,93,175,84,132,197,21,44,220,26,15,117,160,150,138,115,203,4,137,217,242,102,85,203,213,203,212,109,131,165,104,72,30,70,205,31,44,99,145,105,65,123,178,214,91,167,82,116,195,100,213,29,48,47,72,194,186,9,35,211,11,187 };
    byte_vec_t pk { 3,97,219,37,218,193,191,190,241,199,44,235,175,180,248,237,7,120,20,230,165,164,255,208,219,48,117,29,182,52,225,251,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 737 ") {
    byte_vec_t msg { 23,88,215,134 };
    byte_vec_t sig { 69,16,61,130,187,246,140,144,171,79,174,245,170,76,3,40,75,36,118,65,199,7,133,216,19,37,7,213,239,109,242,184,150,12,76,7,214,105,98,145,208,147,211,167,191,51,190,43,100,12,144,95,215,41,220,255,127,46,238,70,164,74,51,149 };
    byte_vec_t pk { 2,91,91,158,37,187,83,151,4,48,35,155,26,164,143,152,59,174,102,190,228,202,84,227,188,155,54,166,184,194,161,180,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 738 ") {
    byte_vec_t msg { 158,52,254,222 };
    byte_vec_t sig { 87,30,218,5,153,155,22,203,115,158,161,43,160,181,66,222,197,63,220,202,108,85,108,1,107,178,30,26,134,57,88,15,128,217,218,110,189,7,218,10,241,21,85,70,252,244,54,224,194,124,62,23,44,76,233,106,198,217,105,10,160,58,122,247 };
    byte_vec_t pk { 4,179,214,20,248,63,241,70,104,236,89,63,159,91,0,45,1,196,39,29,237,234,198,239,249,239,13,28,97,155,116,219,82,191,105,38,205,206,169,131,139,146,15,68,204,24,65,226,211,65,196,101,14,210,176,217,31,44,55,40,180,245,90,126,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 738 ") {
    byte_vec_t msg { 153,111,223,144 };
    byte_vec_t sig { 124,111,36,101,203,143,25,13,48,74,7,83,9,102,244,158,159,105,157,131,199,195,180,125,193,207,156,88,112,92,89,197,228,125,196,152,98,36,172,55,252,253,237,104,10,185,142,57,58,219,55,81,72,114,226,102,182,195,109,26,247,227,238,234 };
    byte_vec_t pk { 4,241,193,176,29,19,195,187,222,99,38,249,36,250,246,100,113,148,180,187,206,221,111,214,179,164,70,45,139,79,198,198,215,153,49,241,28,22,199,250,224,74,197,102,11,242,235,137,2,189,38,208,49,46,34,19,111,129,69,20,34,96,82,209,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 738 ") {
    byte_vec_t msg { 126,146,28,55 };
    byte_vec_t sig { 4,7,55,56,205,182,29,240,75,27,43,94,154,195,40,36,44,113,68,159,75,33,211,141,53,133,195,66,187,224,63,77,161,68,103,89,55,7,16,126,154,221,172,60,11,99,43,39,225,169,146,171,186,194,175,89,214,208,251,94,178,85,27,53 };
    byte_vec_t pk { 2,246,56,118,173,128,26,177,38,99,38,83,198,213,255,149,4,152,210,67,185,154,198,87,176,8,153,208,234,142,176,124,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 738 ") {
    byte_vec_t msg { 187,191,68,28 };
    byte_vec_t sig { 150,11,204,177,185,212,19,49,130,108,58,248,117,28,137,83,57,91,76,165,133,24,136,198,47,238,181,63,96,36,56,6,238,133,54,122,211,147,110,111,204,107,238,161,80,166,187,59,55,176,126,210,233,222,96,174,193,172,239,217,107,225,126,138 };
    byte_vec_t pk { 3,19,214,8,248,210,214,52,159,43,128,31,187,235,128,126,228,210,11,246,20,48,53,211,223,46,159,216,66,201,188,146,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 739 ") {
    byte_vec_t msg { 121,164,238,152 };
    byte_vec_t sig { 241,163,163,43,22,106,134,57,251,152,205,114,214,69,183,211,187,245,84,229,157,224,150,86,59,88,236,140,125,151,215,182,142,254,24,128,171,166,73,132,36,216,199,167,255,108,100,184,229,248,51,51,77,112,45,205,125,19,14,180,182,118,160,94 };
    byte_vec_t pk { 4,5,245,35,57,52,17,189,224,222,61,221,83,110,11,174,88,154,32,5,192,148,180,52,36,127,90,204,142,144,94,192,74,196,170,23,92,129,95,222,64,225,175,82,4,30,13,51,141,183,167,55,220,33,232,23,10,159,138,25,231,235,162,40,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 739 ") {
    byte_vec_t msg { 144,4,235,183 };
    byte_vec_t sig { 87,194,149,28,79,73,250,7,243,200,150,146,8,209,225,6,160,142,74,1,249,23,142,166,252,75,134,142,191,217,167,231,115,219,134,245,119,160,187,148,93,87,40,198,116,90,252,32,185,159,135,153,198,252,55,132,109,144,252,126,60,222,95,192 };
    byte_vec_t pk { 4,120,157,206,109,30,105,66,62,229,38,82,80,191,63,84,85,254,65,176,7,15,122,229,36,136,203,47,101,87,72,97,191,98,32,43,0,235,98,184,11,253,146,200,24,245,20,39,146,125,192,134,110,74,66,220,173,228,194,185,59,111,151,189,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 739 ") {
    byte_vec_t msg { 201,23,160,213 };
    byte_vec_t sig { 125,57,180,71,156,110,110,141,39,16,243,184,105,214,70,125,92,144,106,11,110,138,35,63,253,20,47,133,13,167,144,31,40,255,84,251,13,171,39,113,90,200,222,145,104,104,241,14,108,211,198,126,35,83,140,199,126,200,155,149,6,159,218,17 };
    byte_vec_t pk { 3,69,132,169,175,46,243,220,44,60,79,46,238,249,175,217,182,215,90,230,183,184,127,215,81,122,62,193,165,132,205,126,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 739 ") {
    byte_vec_t msg { 160,85,237,228 };
    byte_vec_t sig { 89,179,102,46,34,250,31,218,103,254,152,37,221,145,12,157,243,170,87,124,153,189,110,98,38,254,122,217,115,249,74,218,97,5,156,240,65,31,144,7,75,111,108,198,11,175,71,31,214,90,125,140,225,253,101,163,72,191,132,200,50,204,192,190 };
    byte_vec_t pk { 2,93,193,98,68,26,73,215,55,169,2,71,81,164,4,83,184,27,98,209,143,78,136,69,79,215,156,37,233,45,236,255,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 740 ") {
    byte_vec_t msg { 225,100,227,191 };
    byte_vec_t sig { 180,151,64,208,164,56,212,194,236,129,70,52,124,236,59,234,4,167,15,11,1,169,94,95,31,174,15,224,175,248,63,203,206,141,241,48,125,20,88,193,58,172,40,224,51,245,224,97,72,100,246,2,183,66,224,131,80,88,150,248,163,112,223,105 };
    byte_vec_t pk { 4,130,109,138,252,1,192,26,46,243,140,193,214,38,179,202,253,79,79,236,175,15,188,157,109,1,176,26,153,247,60,134,138,204,161,103,241,180,10,165,43,62,82,21,251,89,76,218,199,86,57,151,89,165,215,116,21,198,45,77,197,237,135,174,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 740 ") {
    byte_vec_t msg { 54,221,105,81 };
    byte_vec_t sig { 182,140,223,27,163,200,147,177,11,65,76,252,165,179,188,226,0,64,74,89,73,195,77,58,177,249,32,14,121,253,157,50,113,154,248,58,91,158,9,60,124,99,8,229,235,18,94,191,52,75,54,137,171,104,80,89,66,82,41,143,204,244,191,183 };
    byte_vec_t pk { 4,208,115,170,67,207,50,38,95,197,83,117,236,180,82,4,42,216,252,111,121,55,152,89,232,127,222,48,90,109,178,126,84,61,173,123,132,111,162,244,90,184,72,90,224,15,92,171,171,202,134,186,12,77,41,0,174,154,145,225,167,208,51,39,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 740 ") {
    byte_vec_t msg { 144,187,7,75 };
    byte_vec_t sig { 178,101,89,62,103,216,113,26,24,95,84,34,77,211,239,48,186,5,15,195,200,118,127,4,43,185,4,234,23,170,4,252,42,39,119,174,55,140,50,72,41,59,244,113,215,200,240,150,170,244,154,33,29,111,110,99,124,5,192,171,103,61,201,159 };
    byte_vec_t pk { 2,133,254,174,238,251,62,142,171,237,96,109,129,82,218,40,14,180,46,88,174,178,192,199,92,75,215,171,49,79,189,70,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 740 ") {
    byte_vec_t msg { 41,187,92,214 };
    byte_vec_t sig { 227,251,4,166,28,107,79,52,236,61,39,31,135,71,36,53,160,168,58,70,126,93,34,109,201,200,154,182,167,126,131,148,247,157,103,241,186,5,182,34,13,18,128,212,250,235,90,3,198,97,160,185,150,111,238,122,250,7,77,46,206,29,81,197 };
    byte_vec_t pk { 2,16,4,236,71,16,222,149,119,244,196,235,50,231,62,116,255,191,49,191,71,236,26,38,122,30,68,55,167,130,13,219,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 741 ") {
    byte_vec_t msg { 153,51,205,19 };
    byte_vec_t sig { 13,111,35,136,52,218,244,17,91,31,140,10,236,208,141,99,147,26,186,14,211,219,254,251,119,86,76,85,13,128,185,37,127,148,219,247,150,227,58,70,214,95,206,34,111,88,94,21,115,93,54,222,125,122,225,92,191,55,254,197,14,22,124,98 };
    byte_vec_t pk { 4,83,70,251,58,25,52,116,73,239,35,252,223,37,181,248,183,29,213,55,126,97,150,56,142,169,245,203,190,120,229,74,92,158,170,99,216,76,205,148,0,113,103,12,201,16,251,131,83,81,26,122,135,252,202,92,4,203,207,125,244,56,22,152,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 741 ") {
    byte_vec_t msg { 147,5,68,255 };
    byte_vec_t sig { 34,107,53,107,87,46,150,86,128,6,29,209,162,168,140,0,161,115,167,53,94,126,100,145,147,126,202,227,14,44,47,215,63,183,16,249,141,240,76,109,122,125,135,76,100,175,48,75,234,46,39,169,132,43,50,48,104,127,175,61,135,67,219,43 };
    byte_vec_t pk { 4,37,128,102,77,68,175,209,97,136,134,119,90,43,143,32,72,0,238,253,141,15,67,233,37,164,186,210,240,112,124,16,98,215,218,33,33,56,9,116,197,45,29,30,34,149,89,221,196,59,141,212,71,42,180,156,53,194,59,255,108,85,126,153,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 741 ") {
    byte_vec_t msg { 157,164,173,177 };
    byte_vec_t sig { 3,32,185,242,130,89,109,188,249,174,201,240,66,237,168,230,233,110,210,132,79,107,12,151,115,92,202,39,151,146,64,222,24,126,239,184,47,34,27,44,225,187,121,105,32,23,82,40,241,48,146,169,193,5,200,223,53,2,115,214,25,233,11,98 };
    byte_vec_t pk { 3,23,114,16,146,170,215,180,36,197,139,223,250,150,104,44,94,5,68,64,32,128,248,52,99,106,131,195,4,151,109,49,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 741 ") {
    byte_vec_t msg { 39,232,192,227 };
    byte_vec_t sig { 168,18,197,205,79,15,24,186,186,220,44,22,47,1,124,79,81,143,170,88,72,209,154,250,37,87,166,27,6,234,52,148,106,53,202,70,50,9,55,123,20,90,150,220,39,209,52,245,102,151,145,104,123,121,197,203,149,168,219,71,198,122,72,99 };
    byte_vec_t pk { 3,152,47,103,128,150,77,8,254,147,241,208,137,223,185,230,86,14,243,255,252,207,66,202,27,190,154,190,211,130,217,98,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 742 ") {
    byte_vec_t msg { 243,186,91,189 };
    byte_vec_t sig { 226,132,29,198,0,72,122,207,202,116,60,233,28,74,32,54,184,230,14,159,206,160,172,214,66,219,182,211,122,229,12,78,190,108,222,37,78,118,217,239,77,149,62,127,185,236,183,148,105,129,39,78,226,92,86,24,140,66,97,233,122,126,98,184 };
    byte_vec_t pk { 4,148,19,194,188,3,93,192,28,250,169,129,243,206,240,107,241,142,201,172,220,145,212,66,191,174,202,192,97,68,177,0,148,241,62,102,115,106,101,34,109,183,168,94,141,5,170,96,7,97,232,13,66,25,130,146,171,119,171,122,166,91,117,215,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 742 ") {
    byte_vec_t msg { 36,231,193,112 };
    byte_vec_t sig { 64,80,3,35,137,1,249,81,252,153,145,146,151,165,202,128,248,250,22,173,188,231,182,187,16,72,241,173,29,88,109,221,14,249,80,138,186,211,42,135,166,244,242,37,6,80,206,217,79,97,90,80,47,246,8,5,83,117,159,225,15,0,44,161 };
    byte_vec_t pk { 4,37,127,120,196,198,121,202,248,16,100,24,102,17,4,192,211,183,58,190,183,47,156,216,39,71,96,26,59,63,243,158,70,199,186,17,137,239,217,95,105,216,208,211,17,157,83,4,42,118,147,193,63,52,42,60,139,193,188,124,1,5,73,156,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 742 ") {
    byte_vec_t msg { 195,248,185,65 };
    byte_vec_t sig { 82,111,211,213,248,126,217,249,164,40,206,137,195,85,104,22,101,125,220,167,138,4,233,183,156,41,128,120,227,162,147,47,164,25,28,92,57,32,239,115,138,217,186,170,158,194,206,97,63,168,21,214,1,255,249,76,225,231,234,91,111,94,102,210 };
    byte_vec_t pk { 3,220,56,27,188,82,112,198,128,133,252,114,86,229,32,54,212,187,97,104,228,101,141,162,14,15,155,149,32,220,209,195,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 742 ") {
    byte_vec_t msg { 47,20,170,52 };
    byte_vec_t sig { 24,34,227,87,129,8,81,65,241,254,230,20,129,176,111,154,82,110,154,139,195,193,242,55,249,13,101,180,221,111,9,64,249,35,28,202,244,13,85,78,0,145,27,91,153,156,175,255,164,133,107,79,141,97,161,100,185,169,78,239,70,62,177,147 };
    byte_vec_t pk { 3,252,103,209,42,114,7,184,135,204,165,95,79,231,135,199,144,24,3,161,34,121,233,207,155,102,16,30,226,46,70,147,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 743 ") {
    byte_vec_t msg { 52,237,75,244 };
    byte_vec_t sig { 137,118,241,33,221,203,217,98,57,204,35,11,61,3,183,0,15,157,16,58,3,61,174,170,200,205,22,180,218,179,216,230,8,119,80,172,206,112,239,51,16,152,98,218,154,10,73,153,143,89,89,150,248,69,43,98,145,204,182,147,51,235,39,174 };
    byte_vec_t pk { 4,12,35,238,27,84,128,224,16,237,191,111,67,248,49,31,86,81,178,241,250,156,48,12,29,42,157,231,234,138,60,15,59,183,124,141,74,177,129,238,188,44,217,45,178,175,133,190,119,46,159,245,100,34,35,154,164,113,197,160,143,224,180,172,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 743 ") {
    byte_vec_t msg { 16,70,107,185 };
    byte_vec_t sig { 53,120,201,117,248,21,209,156,97,165,80,178,76,208,211,238,81,202,18,173,45,98,173,166,199,81,227,60,110,98,83,237,34,173,213,255,228,139,202,156,62,51,20,205,198,245,181,92,52,222,175,203,150,191,219,62,1,2,108,43,84,156,152,237 };
    byte_vec_t pk { 4,162,11,69,181,37,148,107,186,182,188,164,243,232,19,127,110,151,116,25,141,226,97,114,129,169,247,65,234,195,205,210,114,195,60,147,247,181,17,92,12,107,105,9,185,49,22,31,250,128,193,11,169,7,197,20,250,170,199,197,75,187,226,209,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 743 ") {
    byte_vec_t msg { 91,209,188,145 };
    byte_vec_t sig { 178,49,101,209,189,49,158,78,41,127,157,199,126,132,127,71,202,74,10,249,234,50,96,31,25,201,197,106,105,150,119,224,162,111,109,146,34,6,91,92,25,109,211,120,133,80,29,253,10,63,190,84,102,97,111,250,201,145,121,109,219,181,91,48 };
    byte_vec_t pk { 3,195,245,12,23,104,96,6,155,216,200,189,148,81,89,180,124,153,230,18,248,132,108,230,149,244,231,47,112,181,38,230,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 743 ") {
    byte_vec_t msg { 255,40,170,50 };
    byte_vec_t sig { 248,84,187,79,63,89,4,230,96,22,44,56,133,38,126,76,91,221,218,187,113,145,171,150,253,237,21,198,50,168,171,210,254,220,151,121,116,254,231,160,83,104,42,13,36,167,64,224,144,236,103,217,32,73,150,63,227,171,5,146,252,215,4,39 };
    byte_vec_t pk { 3,250,157,99,124,247,226,173,196,245,193,85,252,1,95,52,48,125,128,233,31,19,21,243,208,252,90,4,176,175,43,170,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 744 ") {
    byte_vec_t msg { 62,249,56,184 };
    byte_vec_t sig { 240,133,83,122,212,20,147,211,252,138,90,71,74,26,254,24,0,186,120,181,107,27,32,236,41,198,32,251,51,120,18,173,65,223,23,22,180,38,52,101,241,226,10,104,149,121,173,155,69,193,12,85,194,80,182,187,154,24,4,116,241,164,119,21 };
    byte_vec_t pk { 4,174,145,28,178,49,153,216,125,36,76,141,130,93,200,230,177,8,75,158,78,217,13,23,198,19,255,102,18,27,11,102,127,55,205,5,7,239,134,22,178,241,172,108,102,202,100,142,68,175,217,224,214,135,168,247,114,193,218,200,175,210,238,124,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 744 ") {
    byte_vec_t msg { 38,118,221,127 };
    byte_vec_t sig { 5,33,160,168,160,6,230,253,76,155,86,173,253,94,174,78,87,178,96,61,241,21,37,146,178,193,126,87,103,173,218,0,205,243,27,112,66,53,154,20,252,168,134,33,187,23,35,190,15,99,144,85,85,77,221,148,17,30,172,14,190,143,64,45 };
    byte_vec_t pk { 4,140,105,1,62,228,84,101,84,231,222,64,97,100,221,133,198,116,105,231,249,6,170,185,124,91,64,52,130,12,37,235,39,102,25,133,171,165,135,50,131,188,157,237,111,226,183,217,127,111,155,69,77,47,142,251,161,56,93,26,241,122,187,88,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 744 ") {
    byte_vec_t msg { 124,128,3,149 };
    byte_vec_t sig { 149,206,199,139,4,195,2,205,94,46,107,122,10,40,123,148,86,8,194,33,46,174,205,147,204,97,136,32,218,92,61,169,230,252,104,57,52,96,102,114,16,52,222,200,65,249,218,110,69,104,7,92,190,27,128,24,1,128,4,202,126,116,7,165 };
    byte_vec_t pk { 2,187,45,21,100,131,107,231,89,149,17,95,41,247,48,14,245,67,131,254,255,176,6,209,232,105,67,241,123,74,169,198,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 744 ") {
    byte_vec_t msg { 99,146,232,133 };
    byte_vec_t sig { 62,60,54,100,201,147,181,151,55,17,217,16,55,2,72,133,173,105,69,101,12,79,93,208,208,129,176,92,244,230,12,103,41,187,146,116,27,124,65,215,14,128,115,231,24,159,142,64,114,1,210,234,157,185,92,234,255,101,221,38,152,232,231,176 };
    byte_vec_t pk { 2,213,237,1,115,178,166,45,238,159,123,4,236,102,153,5,189,221,82,12,16,44,47,137,189,128,221,38,214,5,254,33,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 745 ") {
    byte_vec_t msg { 136,66,237,141 };
    byte_vec_t sig { 88,255,163,79,112,69,64,249,113,162,50,86,187,96,109,209,170,28,172,65,111,9,177,148,75,58,28,96,105,120,32,53,220,205,149,128,39,126,61,55,128,2,237,212,23,174,202,150,40,68,72,193,179,92,69,240,191,239,89,126,53,138,91,122 };
    byte_vec_t pk { 4,184,74,152,229,183,230,165,146,95,205,246,22,92,115,85,228,213,51,134,133,187,124,150,84,7,185,157,186,176,101,140,60,167,184,105,183,14,112,143,6,81,214,7,202,217,105,232,18,5,127,190,91,243,237,135,169,75,126,13,141,161,22,61,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 745 ") {
    byte_vec_t msg { 11,19,71,218 };
    byte_vec_t sig { 18,223,106,54,65,126,96,178,67,3,123,63,70,185,41,61,72,242,17,174,119,57,151,167,75,233,232,44,123,70,102,111,1,185,79,194,89,119,64,141,85,255,50,92,6,229,111,214,206,123,29,213,2,141,247,30,244,39,250,137,208,6,227,73 };
    byte_vec_t pk { 4,157,73,126,60,69,80,69,68,206,55,118,177,104,220,37,141,108,98,233,236,19,71,82,127,137,164,144,104,170,245,173,187,88,98,186,81,38,151,14,248,156,170,21,1,32,66,218,252,25,31,130,67,47,46,231,35,56,154,76,109,143,66,4,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 745 ") {
    byte_vec_t msg { 2,155,152,205 };
    byte_vec_t sig { 83,64,85,40,135,121,159,120,45,78,111,84,1,175,110,202,67,84,127,228,128,232,139,82,134,143,223,137,41,255,90,220,80,141,126,37,218,90,248,153,79,19,189,13,82,71,115,24,198,252,79,166,125,196,16,57,172,94,218,138,27,91,190,94 };
    byte_vec_t pk { 2,134,250,63,71,152,71,85,142,210,91,118,85,216,234,16,20,98,0,129,126,80,6,142,120,118,106,55,184,159,47,71,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 745 ") {
    byte_vec_t msg { 133,53,249,178 };
    byte_vec_t sig { 120,22,15,159,20,110,225,135,105,187,130,101,22,94,245,37,244,52,137,165,119,223,22,74,149,152,89,158,20,158,173,40,34,205,210,172,16,75,41,198,229,115,255,218,151,159,35,220,80,83,2,217,136,12,23,87,8,124,38,180,252,126,115,236 };
    byte_vec_t pk { 2,58,61,53,107,226,206,125,108,107,33,224,66,212,109,204,123,52,95,75,80,9,157,47,251,221,126,182,138,138,155,213,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 746 ") {
    byte_vec_t msg { 69,102,57,212 };
    byte_vec_t sig { 249,222,158,152,149,230,184,208,120,216,200,81,37,186,56,245,99,56,134,52,93,27,46,234,92,152,90,231,30,83,245,204,10,245,193,121,65,232,66,190,227,100,28,182,146,21,180,137,93,145,171,251,42,30,133,38,128,252,29,150,69,20,210,115 };
    byte_vec_t pk { 4,73,144,186,205,151,17,245,108,48,149,235,22,153,197,196,15,224,114,162,60,38,145,191,157,231,109,19,71,163,220,136,93,211,65,164,124,97,189,148,167,133,120,204,180,147,83,7,31,155,70,250,128,191,233,183,94,183,113,151,82,57,203,20,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 746 ") {
    byte_vec_t msg { 181,5,64,115 };
    byte_vec_t sig { 227,39,115,178,54,203,222,190,3,230,156,222,214,209,249,179,25,58,239,104,11,48,43,225,200,120,46,21,205,238,16,135,59,207,222,169,18,112,201,134,224,207,105,95,69,94,46,253,22,113,48,231,8,251,241,208,39,108,180,204,108,118,195,253 };
    byte_vec_t pk { 4,218,197,52,146,170,55,79,104,54,204,185,83,20,217,156,12,252,90,199,154,58,218,223,180,173,115,228,83,232,23,40,17,59,35,150,53,242,195,153,87,152,168,180,248,148,247,56,199,139,99,217,249,20,19,145,112,236,91,38,223,236,238,12,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 746 ") {
    byte_vec_t msg { 128,80,224,142 };
    byte_vec_t sig { 39,66,13,238,223,92,56,95,102,154,175,101,62,134,243,131,20,190,154,219,209,63,241,46,125,80,26,152,211,187,47,171,142,132,189,134,10,16,66,210,51,103,60,197,104,144,112,135,11,51,227,99,143,39,3,20,77,103,54,141,90,253,253,100 };
    byte_vec_t pk { 2,58,98,213,126,91,3,246,57,218,236,62,194,190,45,136,237,118,47,39,242,150,51,14,219,79,221,206,192,240,76,71,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 746 ") {
    byte_vec_t msg { 176,189,179,129 };
    byte_vec_t sig { 31,214,55,119,233,15,158,63,216,172,161,114,154,190,153,40,214,202,131,215,112,165,143,80,151,83,154,116,102,108,124,172,243,82,180,116,72,213,173,101,146,164,204,214,215,112,211,129,61,7,116,130,84,229,179,100,223,101,216,42,223,80,172,174 };
    byte_vec_t pk { 2,17,48,140,31,228,5,143,196,11,154,202,127,165,117,198,148,95,98,160,248,169,220,153,162,135,76,197,202,227,206,56,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 747 ") {
    byte_vec_t msg { 209,98,152,243 };
    byte_vec_t sig { 120,60,251,168,233,181,99,179,228,9,184,248,163,228,168,193,253,109,23,172,126,74,57,141,22,109,17,1,214,63,187,10,11,6,117,254,150,219,161,254,251,187,113,222,213,188,144,7,57,197,76,204,165,86,77,21,252,161,198,236,149,234,114,221 };
    byte_vec_t pk { 4,39,155,145,156,95,239,193,73,127,107,52,212,110,240,236,82,96,160,120,171,175,177,94,225,72,39,227,6,135,38,130,204,84,215,49,21,154,222,172,62,100,251,117,49,107,23,87,144,46,135,254,232,19,80,185,86,138,196,149,174,78,220,142,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 747 ") {
    byte_vec_t msg { 113,70,16,179 };
    byte_vec_t sig { 56,40,27,246,195,188,180,16,195,136,135,248,16,110,22,158,125,122,50,88,7,190,215,13,131,131,250,22,27,11,65,102,67,155,87,84,36,190,112,21,227,177,147,57,235,203,232,162,17,148,255,160,161,113,26,43,127,64,68,56,122,4,229,87 };
    byte_vec_t pk { 4,70,174,60,209,233,15,81,24,189,190,81,90,243,130,54,233,53,222,253,89,71,100,109,192,147,152,138,93,47,127,58,39,98,247,34,41,134,143,153,4,69,141,96,89,49,70,133,26,57,157,3,245,131,169,245,227,19,24,204,137,152,70,46,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 747 ") {
    byte_vec_t msg { 7,62,38,128 };
    byte_vec_t sig { 146,89,23,47,145,107,228,83,76,114,60,3,162,134,143,157,249,105,198,35,234,52,130,201,81,172,238,238,165,224,254,50,164,232,255,64,92,115,18,208,77,190,69,134,230,23,188,231,23,94,96,46,73,198,117,170,50,84,214,1,138,16,155,57 };
    byte_vec_t pk { 2,105,73,178,4,26,124,233,253,190,1,229,174,137,160,230,136,20,72,203,39,150,102,126,111,158,44,130,185,0,103,3,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 747 ") {
    byte_vec_t msg { 28,187,116,110 };
    byte_vec_t sig { 177,130,71,107,68,12,227,44,37,198,177,237,195,50,179,19,73,140,162,55,223,200,109,19,66,177,7,10,77,124,43,26,179,116,184,119,8,253,253,209,65,160,158,74,84,73,206,169,51,30,157,101,247,199,17,73,214,113,136,31,14,173,242,86 };
    byte_vec_t pk { 2,219,60,139,25,38,102,17,200,201,147,150,134,85,0,40,151,235,200,85,16,202,9,210,233,4,89,70,116,33,230,114,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 748 ") {
    byte_vec_t msg { 247,53,121,32 };
    byte_vec_t sig { 49,42,80,31,56,102,138,69,28,176,224,201,188,165,193,223,46,2,97,96,48,5,148,113,126,9,238,80,29,28,58,165,67,115,107,78,235,47,58,103,9,201,165,156,78,15,120,244,93,58,227,68,171,136,134,118,53,184,80,5,140,119,237,25 };
    byte_vec_t pk { 4,50,30,126,124,1,83,11,81,3,56,246,93,7,73,125,201,171,110,29,102,208,70,51,80,126,175,196,98,133,0,11,131,239,45,215,250,14,123,140,41,95,67,169,228,224,136,150,209,232,254,31,181,91,44,75,220,215,151,77,213,67,211,181,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 748 ") {
    byte_vec_t msg { 117,85,45,210 };
    byte_vec_t sig { 127,31,141,213,99,56,87,164,184,215,29,83,209,137,199,205,84,213,25,175,183,243,117,128,11,148,75,151,214,194,23,69,163,183,22,199,14,201,109,250,88,217,76,197,132,119,50,18,244,119,157,18,40,56,59,118,217,57,129,87,18,69,36,216 };
    byte_vec_t pk { 4,90,233,233,245,34,113,247,234,75,213,254,104,67,67,175,36,121,164,240,186,190,32,179,209,249,107,6,140,65,228,30,83,0,10,173,126,116,183,129,225,122,114,231,175,61,195,226,149,72,177,87,167,49,60,35,76,168,230,46,255,208,117,200,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 748 ") {
    byte_vec_t msg { 46,25,27,33 };
    byte_vec_t sig { 231,171,26,75,114,108,119,182,39,166,82,165,145,149,162,41,152,125,250,243,192,60,255,150,165,245,28,68,150,7,130,32,68,170,243,223,203,44,51,225,119,181,19,211,156,212,33,252,68,87,121,183,95,63,47,132,90,244,81,115,138,91,119,58 };
    byte_vec_t pk { 3,193,15,172,12,85,75,242,27,137,80,31,232,108,125,42,214,17,252,0,52,211,40,207,25,35,103,244,222,46,2,115,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 748 ") {
    byte_vec_t msg { 171,227,210,188 };
    byte_vec_t sig { 42,231,147,194,111,205,176,109,87,213,45,140,225,187,211,130,156,242,138,208,111,75,190,87,193,160,49,156,70,104,187,163,32,156,183,109,157,11,61,201,41,92,199,58,181,225,77,162,139,127,208,125,218,249,238,137,137,51,66,201,51,121,159,78 };
    byte_vec_t pk { 2,197,161,207,51,145,103,231,205,137,246,52,184,247,192,217,68,136,179,84,252,140,142,215,111,90,126,108,87,223,65,201,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 749 ") {
    byte_vec_t msg { 25,235,183,201 };
    byte_vec_t sig { 145,247,239,54,215,19,59,192,187,211,244,32,61,254,184,167,244,135,157,214,219,7,112,228,219,247,25,87,122,10,80,57,179,226,142,159,165,136,30,247,202,88,203,56,205,52,9,221,118,153,187,61,88,85,197,195,215,218,228,166,237,203,103,178 };
    byte_vec_t pk { 4,126,47,222,119,4,85,38,233,254,167,36,236,91,183,197,35,18,143,38,77,236,244,134,77,133,106,87,16,140,96,105,200,121,251,189,200,217,32,237,5,114,77,13,48,69,80,14,234,144,1,137,49,212,158,189,16,137,15,219,135,59,14,87,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 749 ") {
    byte_vec_t msg { 5,70,140,63 };
    byte_vec_t sig { 167,3,147,41,249,214,17,101,2,200,132,187,67,192,63,170,15,59,63,56,97,58,116,246,190,245,41,98,68,17,21,120,126,104,27,249,215,188,200,150,217,102,14,138,101,72,252,8,58,110,132,49,203,230,145,130,35,148,64,155,159,20,190,123 };
    byte_vec_t pk { 4,197,67,117,99,161,153,53,247,138,47,46,202,55,203,142,6,143,74,41,37,115,71,188,46,205,123,134,212,234,87,134,225,115,191,166,43,96,41,211,13,99,22,6,207,47,139,226,164,35,179,231,125,105,242,198,131,206,102,7,201,169,76,46,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 749 ") {
    byte_vec_t msg { 236,201,112,211 };
    byte_vec_t sig { 73,198,47,207,201,222,93,97,30,171,240,217,191,68,62,174,180,250,172,116,219,79,96,99,229,167,71,172,65,247,1,214,143,191,239,107,147,69,196,201,242,65,23,152,101,61,237,164,102,41,16,140,206,6,200,108,133,27,74,148,152,93,153,39 };
    byte_vec_t pk { 3,236,12,249,188,215,122,29,80,71,180,208,215,72,39,170,86,69,147,83,85,45,206,239,3,251,123,154,135,124,63,120,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 749 ") {
    byte_vec_t msg { 83,182,172,96 };
    byte_vec_t sig { 207,124,81,82,201,109,192,169,169,31,95,252,166,50,32,144,93,5,149,55,1,140,184,199,111,63,54,197,11,253,31,114,49,61,126,179,19,141,218,64,75,141,231,181,191,139,246,182,43,152,10,13,202,170,25,171,181,245,36,70,112,117,133,106 };
    byte_vec_t pk { 3,1,77,145,9,49,160,240,139,254,211,201,230,238,208,189,202,193,95,10,0,247,86,202,44,14,24,39,47,0,86,83,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 750 ") {
    byte_vec_t msg { 227,16,51,101 };
    byte_vec_t sig { 237,138,120,3,147,11,13,253,140,138,159,8,104,153,88,182,235,219,236,149,1,241,187,218,246,118,236,100,171,143,101,160,180,144,115,182,144,25,5,20,33,113,215,30,28,232,139,104,133,201,232,172,149,45,165,159,226,43,165,236,70,238,86,138 };
    byte_vec_t pk { 4,120,196,48,32,191,224,121,169,200,44,145,149,239,3,248,197,192,157,143,156,102,131,171,170,172,64,182,241,5,210,56,26,96,169,46,18,183,8,90,27,254,227,93,73,28,18,94,98,98,105,155,83,34,63,72,63,106,160,139,48,86,92,72,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 750 ") {
    byte_vec_t msg { 191,241,14,107 };
    byte_vec_t sig { 100,63,22,147,71,78,252,85,142,59,91,1,230,84,99,37,57,115,136,226,235,219,24,30,26,205,37,230,168,224,80,134,144,190,116,150,99,230,15,93,176,250,209,5,200,100,184,123,2,77,78,197,250,36,27,35,193,222,11,3,184,32,54,24 };
    byte_vec_t pk { 4,149,61,246,173,240,61,152,228,151,154,58,6,64,185,82,221,69,127,59,98,112,84,163,107,63,159,125,106,151,125,230,210,114,138,37,246,239,237,123,168,158,221,25,117,222,151,183,244,72,221,242,3,51,213,63,213,64,179,186,67,100,142,218,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 750 ") {
    byte_vec_t msg { 197,153,226,3 };
    byte_vec_t sig { 185,107,242,52,69,248,127,213,22,17,156,61,151,92,98,57,2,170,239,110,185,7,237,209,54,65,236,129,45,241,62,127,236,134,184,58,46,79,80,36,34,186,125,39,52,89,69,156,83,244,173,237,168,64,134,60,17,251,230,62,183,145,221,44 };
    byte_vec_t pk { 2,164,87,175,43,114,126,149,130,56,150,236,205,175,73,41,213,186,39,63,74,169,60,200,228,26,50,132,169,230,228,68,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 750 ") {
    byte_vec_t msg { 236,127,190,184 };
    byte_vec_t sig { 150,169,29,32,140,135,139,217,253,190,114,177,234,202,58,139,170,79,44,197,45,105,55,124,230,142,15,51,32,106,225,5,205,163,225,141,222,31,213,17,204,11,173,30,6,187,73,227,211,140,248,41,13,204,140,161,173,136,2,101,189,49,58,250 };
    byte_vec_t pk { 3,207,82,210,230,15,189,76,82,131,146,251,86,2,236,155,228,238,29,120,152,253,146,168,114,208,171,62,122,79,71,193,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 751 ") {
    byte_vec_t msg { 37,119,37,137 };
    byte_vec_t sig { 189,236,195,30,46,238,237,1,254,22,250,109,140,72,123,33,95,19,221,78,161,86,128,162,107,123,94,6,187,106,30,107,34,214,43,94,177,29,12,238,152,219,77,68,110,79,106,255,48,165,66,52,103,0,155,194,8,156,139,44,198,189,177,242 };
    byte_vec_t pk { 4,9,232,64,72,25,66,242,135,35,7,210,84,184,175,51,81,62,252,107,24,222,253,237,221,219,213,234,246,32,119,1,252,221,207,2,222,189,223,40,223,189,58,190,64,55,10,220,133,228,89,250,43,232,147,251,23,181,215,224,31,45,3,81,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 751 ") {
    byte_vec_t msg { 168,179,245,106 };
    byte_vec_t sig { 213,54,243,40,14,60,224,77,138,247,211,23,57,200,232,41,226,240,144,94,213,222,30,206,227,107,186,112,217,66,79,66,8,183,82,22,198,213,30,200,113,109,201,237,106,8,251,170,0,234,144,142,186,181,220,36,97,194,17,89,11,99,74,2 };
    byte_vec_t pk { 4,31,68,19,149,217,87,133,204,81,40,83,27,10,88,28,42,22,203,59,183,24,168,131,72,133,133,227,228,201,140,186,12,72,165,144,67,83,70,25,140,68,122,216,117,213,231,230,5,5,7,211,66,138,128,127,186,185,228,127,153,176,197,183,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 751 ") {
    byte_vec_t msg { 204,171,76,88 };
    byte_vec_t sig { 89,252,44,27,14,93,199,130,152,177,212,104,218,225,184,95,110,130,124,157,235,52,130,216,75,23,162,60,220,100,98,66,160,30,86,131,166,243,90,133,217,161,69,206,210,119,40,11,11,44,164,169,32,255,138,132,107,239,104,141,23,212,65,50 };
    byte_vec_t pk { 3,111,207,185,19,209,189,147,20,175,102,185,56,234,10,169,255,146,232,146,237,79,197,194,226,59,213,244,34,90,87,148,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 751 ") {
    byte_vec_t msg { 163,53,14,241 };
    byte_vec_t sig { 223,92,184,36,121,133,211,184,20,183,50,147,242,32,235,209,251,66,17,92,116,201,77,193,162,44,244,9,123,32,168,240,161,97,167,131,238,134,162,24,193,166,196,196,255,135,211,211,156,14,26,61,244,131,213,193,250,232,196,179,138,51,228,161 };
    byte_vec_t pk { 3,180,251,238,139,10,37,132,125,36,7,213,135,91,123,82,237,91,187,8,163,212,83,71,40,83,250,237,182,2,47,51,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 752 ") {
    byte_vec_t msg { 5,90,70,55 };
    byte_vec_t sig { 67,98,225,241,23,236,65,222,93,167,93,150,160,19,13,96,79,247,187,204,231,175,121,58,107,122,219,191,228,41,21,210,123,215,124,223,184,215,200,16,179,128,150,51,83,119,38,76,73,173,5,99,29,61,237,211,252,151,95,47,118,214,185,110 };
    byte_vec_t pk { 4,120,223,24,89,56,239,159,250,169,65,179,13,116,163,214,171,201,80,206,154,63,157,82,58,184,98,244,51,59,238,164,114,100,204,57,53,248,100,50,171,250,13,32,204,111,190,151,243,19,75,125,46,78,160,21,165,135,36,127,198,7,20,98,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 752 ") {
    byte_vec_t msg { 251,233,247,68 };
    byte_vec_t sig { 180,2,52,87,133,240,37,28,66,227,133,105,202,222,174,145,127,146,76,165,76,63,171,11,254,174,27,45,86,43,10,176,199,209,222,188,70,102,142,7,132,38,112,99,65,99,135,181,150,224,182,30,195,182,251,150,240,186,151,171,188,144,235,72 };
    byte_vec_t pk { 4,74,185,231,144,114,55,176,226,34,197,204,122,167,131,196,214,88,23,63,43,35,220,117,102,230,69,52,194,53,226,191,82,171,130,173,26,53,101,112,139,139,4,166,113,30,91,161,134,236,145,136,55,72,44,100,140,187,149,116,128,67,102,128,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 752 ") {
    byte_vec_t msg { 173,195,54,191 };
    byte_vec_t sig { 184,122,27,189,28,44,20,16,82,141,30,131,245,178,177,238,190,63,105,155,19,192,63,79,21,114,195,143,242,70,133,2,140,136,86,149,123,97,253,138,60,17,80,60,155,234,101,70,177,155,206,251,89,69,193,92,133,118,1,237,161,34,198,237 };
    byte_vec_t pk { 3,12,103,146,85,123,68,125,112,42,104,37,247,76,4,24,236,159,45,129,61,143,202,59,199,202,38,173,132,50,110,192,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 752 ") {
    byte_vec_t msg { 11,222,23,218 };
    byte_vec_t sig { 93,18,190,148,220,196,152,176,214,236,58,61,77,13,231,64,25,26,2,241,6,85,161,125,96,140,192,160,3,33,241,220,5,129,17,13,48,157,240,107,224,159,196,56,129,200,163,183,242,218,182,108,74,207,235,204,145,24,189,30,240,127,127,217 };
    byte_vec_t pk { 3,243,197,152,53,70,151,150,56,8,217,148,143,177,205,19,241,118,157,189,111,79,35,109,134,134,212,51,209,0,94,235,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 753 ") {
    byte_vec_t msg { 37,164,126,208 };
    byte_vec_t sig { 121,254,98,136,197,64,218,220,152,29,165,26,27,174,119,184,123,157,164,0,2,201,252,151,231,103,225,182,119,140,190,165,99,182,191,111,67,211,219,184,54,126,248,124,114,59,21,247,32,62,171,198,171,60,8,241,242,1,175,175,54,147,116,140 };
    byte_vec_t pk { 4,7,23,26,39,90,104,76,186,160,251,29,7,11,33,137,214,169,189,177,15,240,82,133,41,213,64,219,92,17,90,15,112,199,198,84,232,222,229,185,14,225,222,103,222,189,22,86,225,185,92,59,98,248,192,104,214,190,216,147,47,8,149,128,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 753 ") {
    byte_vec_t msg { 168,72,182,246 };
    byte_vec_t sig { 153,250,26,237,254,192,126,181,220,62,58,50,173,79,208,60,143,141,246,61,80,110,92,194,7,231,241,31,225,145,131,179,219,114,16,252,179,19,166,250,237,238,71,188,44,101,34,29,138,77,143,51,132,62,71,135,3,220,74,25,83,195,134,133 };
    byte_vec_t pk { 4,19,107,102,192,90,61,128,232,125,76,115,255,221,41,6,69,237,9,186,63,191,152,185,28,176,109,83,101,231,142,2,59,74,157,70,57,92,202,19,47,8,14,188,189,27,0,170,210,67,74,237,247,126,54,9,71,239,163,147,185,87,145,91,39 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 753 ") {
    byte_vec_t msg { 62,245,33,27 };
    byte_vec_t sig { 70,43,22,132,109,18,135,253,171,24,202,133,107,182,80,51,170,51,104,72,72,191,113,122,177,198,112,100,90,113,48,42,166,245,78,252,100,117,72,54,4,79,178,97,227,94,168,49,149,253,178,92,82,117,193,99,208,100,16,50,164,113,211,90 };
    byte_vec_t pk { 3,110,51,70,156,210,49,91,218,35,102,95,86,68,157,183,208,229,205,170,235,248,38,229,62,33,251,22,14,128,244,159,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 753 ") {
    byte_vec_t msg { 179,249,94,179 };
    byte_vec_t sig { 208,152,15,112,11,56,149,86,236,160,141,1,19,95,145,150,221,7,108,216,201,164,114,146,228,127,210,101,4,46,28,204,219,233,86,24,72,11,98,143,246,231,29,207,145,191,221,36,113,199,72,192,60,131,88,137,25,153,82,21,33,45,193,148 };
    byte_vec_t pk { 3,90,35,190,93,41,245,4,77,79,130,74,98,171,97,124,87,83,251,138,116,152,1,133,19,190,131,142,19,254,4,141,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 754 ") {
    byte_vec_t msg { 222,214,190,68 };
    byte_vec_t sig { 103,204,133,76,132,111,114,115,145,189,37,1,148,4,57,205,240,235,241,212,198,220,107,156,46,84,122,128,145,166,148,156,137,15,189,223,95,133,207,54,209,170,80,95,88,146,223,244,82,130,64,220,8,81,165,189,212,72,26,67,86,228,74,90 };
    byte_vec_t pk { 4,209,79,24,198,114,121,60,64,111,167,75,170,97,19,236,52,185,231,179,196,190,115,17,155,133,160,10,113,166,77,8,85,146,164,186,248,101,53,252,99,239,116,40,202,166,166,128,13,22,63,208,89,82,64,57,70,11,209,166,253,241,158,216,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 754 ") {
    byte_vec_t msg { 76,152,2,155 };
    byte_vec_t sig { 6,78,68,120,134,217,163,130,223,203,51,31,172,174,90,250,15,199,229,8,216,249,140,158,150,27,24,79,178,73,149,171,51,1,10,63,47,110,46,55,115,64,140,241,133,192,253,195,169,218,56,165,191,84,174,188,31,239,235,132,149,95,10,165 };
    byte_vec_t pk { 4,126,249,220,112,165,170,76,64,118,43,164,218,234,249,0,134,50,119,84,240,224,177,227,54,14,206,178,217,218,204,21,201,160,39,123,177,136,38,98,168,25,228,95,208,22,45,92,82,131,113,111,46,44,130,184,87,255,86,213,181,127,187,13,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 754 ") {
    byte_vec_t msg { 232,2,145,236 };
    byte_vec_t sig { 125,183,235,171,0,220,74,155,243,48,5,205,189,48,209,201,185,19,106,33,102,165,227,0,73,220,159,132,76,113,125,196,55,166,229,24,154,45,192,96,253,118,15,52,84,219,148,160,153,100,143,254,93,139,40,66,218,7,191,13,255,18,12,120 };
    byte_vec_t pk { 2,104,172,72,238,54,91,11,127,12,127,205,27,235,184,223,166,183,117,124,249,75,62,95,87,16,100,25,248,127,239,126,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 754 ") {
    byte_vec_t msg { 140,142,167,42 };
    byte_vec_t sig { 240,242,6,26,0,74,50,214,180,177,165,23,6,229,56,142,169,94,159,202,8,110,5,76,152,12,130,237,246,219,172,82,15,184,159,151,221,19,107,166,191,253,173,173,70,8,124,162,40,55,233,81,143,223,31,33,148,204,87,28,91,155,210,95 };
    byte_vec_t pk { 2,183,188,22,119,46,163,51,237,96,160,230,155,93,81,70,69,63,63,170,234,247,1,126,178,26,116,240,55,15,85,25,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 755 ") {
    byte_vec_t msg { 173,95,186,47 };
    byte_vec_t sig { 253,37,79,166,6,12,253,174,70,226,161,186,58,184,28,181,63,155,156,3,122,4,202,96,156,110,130,144,101,132,255,183,206,88,91,196,164,141,248,153,182,1,148,107,203,1,171,226,6,137,201,38,130,163,209,158,102,101,90,47,247,228,174,2 };
    byte_vec_t pk { 4,198,206,219,154,153,158,31,227,25,238,80,228,161,250,141,26,175,56,71,91,93,58,28,118,230,10,15,136,39,67,189,230,252,29,211,17,156,49,30,71,146,6,220,197,0,251,250,196,161,155,245,105,163,189,239,6,249,170,178,66,198,76,203,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 755 ") {
    byte_vec_t msg { 196,195,93,106 };
    byte_vec_t sig { 133,24,236,86,61,141,151,15,254,87,219,66,56,118,110,66,5,8,243,213,190,221,244,253,23,15,160,182,44,13,239,141,5,171,226,131,70,216,152,16,54,146,135,28,64,176,252,204,204,91,7,83,31,100,203,189,59,127,2,12,2,111,171,90 };
    byte_vec_t pk { 4,122,139,30,169,192,237,225,175,170,191,192,167,55,254,108,140,110,77,210,246,158,181,248,213,58,36,25,196,116,152,77,68,22,166,202,81,94,11,119,191,65,169,219,188,104,97,3,73,250,20,26,67,178,95,24,146,123,16,220,14,114,244,105,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 755 ") {
    byte_vec_t msg { 120,78,57,208 };
    byte_vec_t sig { 109,227,218,168,102,27,97,215,160,246,166,175,26,200,96,116,62,20,109,63,193,232,249,125,252,39,99,254,118,108,122,8,4,84,174,54,161,187,142,157,143,221,28,253,145,79,14,190,155,167,212,32,153,88,94,33,54,102,56,119,1,90,254,80 };
    byte_vec_t pk { 2,30,250,113,139,176,192,123,70,11,61,6,219,223,10,45,40,158,178,64,21,66,65,175,192,190,232,116,149,223,218,128,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 755 ") {
    byte_vec_t msg { 60,90,151,108 };
    byte_vec_t sig { 108,20,61,180,56,161,92,178,240,7,34,116,53,18,208,26,125,98,67,112,144,149,63,128,217,118,157,13,189,228,62,197,75,214,243,255,182,98,252,192,11,149,17,82,165,220,140,33,114,11,208,94,200,88,14,71,149,141,232,213,61,32,5,198 };
    byte_vec_t pk { 2,253,68,27,244,36,45,156,245,215,137,4,151,25,113,22,255,26,27,7,81,212,228,121,93,201,160,214,73,98,48,96,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 756 ") {
    byte_vec_t msg { 79,150,113,127 };
    byte_vec_t sig { 105,106,161,27,241,11,81,13,29,175,77,226,137,30,12,148,55,136,106,141,119,142,89,38,56,120,17,15,135,207,240,57,9,98,155,24,228,197,173,79,52,204,110,183,135,179,198,240,65,157,120,179,201,21,60,203,180,116,74,23,113,144,228,86 };
    byte_vec_t pk { 4,129,230,215,167,35,79,86,215,40,120,210,92,201,150,84,237,208,72,178,90,137,247,204,250,87,58,172,71,19,9,221,106,41,98,149,87,121,170,75,195,142,20,133,237,243,226,239,239,190,98,226,97,176,165,80,181,194,195,130,10,38,124,174,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 756 ") {
    byte_vec_t msg { 3,33,145,161 };
    byte_vec_t sig { 116,149,247,161,200,43,92,146,220,190,207,1,154,170,254,194,209,147,173,105,33,25,156,68,199,116,185,72,223,241,76,167,22,43,33,246,138,252,100,159,80,175,201,225,95,41,47,207,134,167,25,48,23,165,101,186,94,254,129,198,148,73,158,41 };
    byte_vec_t pk { 4,78,203,161,123,134,152,104,69,103,23,66,41,14,141,67,206,185,216,126,2,184,230,189,222,51,55,39,76,154,15,72,20,12,190,38,136,84,56,46,101,107,75,36,17,202,128,180,215,255,247,21,86,86,140,212,26,244,15,136,53,189,102,84,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 756 ") {
    byte_vec_t msg { 192,151,61,181 };
    byte_vec_t sig { 221,73,167,120,79,107,145,192,179,175,94,99,228,134,208,35,125,156,156,181,167,65,203,100,128,129,99,86,234,168,226,120,215,55,136,203,233,213,4,225,25,164,57,116,118,215,57,17,221,107,25,163,226,176,80,185,56,43,10,137,0,26,139,244 };
    byte_vec_t pk { 3,56,140,158,61,129,195,84,180,218,247,150,191,121,124,219,55,172,85,241,163,179,153,122,232,44,234,204,31,24,74,248,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 756 ") {
    byte_vec_t msg { 202,66,26,199 };
    byte_vec_t sig { 104,84,64,162,157,161,7,87,94,128,205,20,182,101,119,24,225,117,41,232,118,58,166,237,79,207,146,14,133,99,255,240,188,66,115,234,4,244,243,129,82,158,242,233,248,231,197,157,40,136,88,119,176,173,136,194,17,205,68,233,30,172,191,39 };
    byte_vec_t pk { 2,42,201,103,162,153,99,224,231,218,254,142,222,11,217,99,227,62,212,165,94,172,144,239,166,42,1,62,89,181,77,228,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 757 ") {
    byte_vec_t msg { 31,66,132,73 };
    byte_vec_t sig { 97,17,224,253,83,31,157,153,66,26,168,54,92,10,89,243,208,52,165,206,144,232,182,8,187,201,220,190,94,196,14,224,230,111,111,145,210,82,21,148,161,122,178,168,180,109,104,137,137,7,119,200,226,216,24,211,102,34,155,121,43,206,199,195 };
    byte_vec_t pk { 4,211,255,33,238,72,167,179,24,143,91,168,155,132,171,144,188,58,240,205,9,137,137,126,16,255,148,26,138,233,20,201,98,163,60,99,117,74,57,161,197,160,29,24,118,141,253,214,230,151,32,183,160,242,153,224,150,147,205,39,43,41,156,44,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 757 ") {
    byte_vec_t msg { 63,80,227,65 };
    byte_vec_t sig { 140,106,210,223,42,1,46,125,71,209,81,80,95,7,144,155,236,100,155,176,161,77,181,57,50,50,73,227,78,141,83,133,238,49,247,74,89,19,156,248,29,172,133,148,230,167,183,255,165,189,181,148,74,167,194,74,56,243,249,37,13,249,226,203 };
    byte_vec_t pk { 4,105,172,196,238,236,147,53,243,240,139,108,230,27,152,211,203,79,35,34,238,144,192,227,100,160,102,130,171,155,111,217,231,163,27,218,89,74,138,243,237,35,16,158,215,163,171,197,32,179,215,102,26,5,255,156,11,141,27,242,215,20,116,212,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 757 ") {
    byte_vec_t msg { 4,66,51,138 };
    byte_vec_t sig { 120,112,255,117,253,66,49,103,96,191,112,102,210,92,242,213,0,231,180,197,92,3,87,16,229,36,236,165,132,108,232,1,248,26,72,117,148,72,51,65,57,10,27,208,205,63,239,222,161,212,165,67,146,23,234,121,214,241,240,13,87,240,68,189 };
    byte_vec_t pk { 2,159,42,84,223,45,252,185,98,102,89,32,55,42,19,211,193,144,228,54,94,177,13,109,158,65,93,150,218,203,39,123,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 757 ") {
    byte_vec_t msg { 37,19,144,187 };
    byte_vec_t sig { 119,182,131,81,208,61,111,150,249,216,152,193,88,77,10,188,100,65,185,15,246,222,254,243,50,56,87,136,64,221,224,138,12,204,115,215,205,95,241,148,189,189,77,192,108,113,66,115,208,90,221,247,239,203,89,217,244,216,69,15,156,169,138,57 };
    byte_vec_t pk { 2,95,112,109,10,9,170,45,135,195,142,156,203,185,101,4,214,250,111,93,248,154,214,172,71,116,180,110,170,115,44,39,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 758 ") {
    byte_vec_t msg { 209,177,251,176 };
    byte_vec_t sig { 198,221,252,15,80,169,114,192,76,242,146,11,23,246,126,88,163,47,164,164,191,127,143,64,210,250,248,112,109,186,36,250,137,16,85,9,45,244,104,187,209,204,54,247,122,179,11,142,254,36,2,248,237,7,91,155,37,88,69,10,188,165,214,54 };
    byte_vec_t pk { 4,196,44,124,251,81,222,201,216,99,255,59,89,163,249,138,200,125,248,218,143,251,202,59,28,156,35,54,248,24,9,5,154,224,159,195,212,102,88,202,233,148,231,137,200,237,0,191,249,220,206,218,234,250,240,184,198,199,239,84,108,245,193,92,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 758 ") {
    byte_vec_t msg { 148,4,137,129 };
    byte_vec_t sig { 175,48,176,131,196,100,123,185,230,117,96,56,30,126,3,231,131,248,194,101,232,140,99,122,237,233,162,187,136,1,167,65,13,21,188,89,20,140,144,135,156,195,46,78,229,45,232,80,162,85,90,55,68,134,232,102,226,91,42,13,48,241,79,234 };
    byte_vec_t pk { 4,25,108,29,45,99,124,102,200,191,82,150,38,243,118,241,85,4,247,108,40,228,35,14,159,67,139,92,249,53,237,28,216,61,208,220,79,88,44,2,55,125,137,42,24,59,142,109,175,34,73,106,78,89,5,236,102,141,84,131,233,179,210,35,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 758 ") {
    byte_vec_t msg { 208,253,22,54 };
    byte_vec_t sig { 237,21,155,68,2,184,31,93,234,231,249,122,205,50,238,121,91,140,51,193,107,186,108,163,227,170,128,124,151,203,115,86,74,144,108,121,12,106,152,67,220,117,71,58,124,65,19,143,34,225,41,201,109,109,176,33,147,234,154,177,53,152,114,215 };
    byte_vec_t pk { 2,42,139,42,90,19,117,221,27,143,40,86,189,71,76,4,202,53,52,50,59,255,133,159,33,50,179,29,70,172,64,170,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 758 ") {
    byte_vec_t msg { 70,6,136,218 };
    byte_vec_t sig { 79,99,108,174,217,94,195,125,231,58,190,28,240,11,84,8,172,129,233,230,63,244,86,191,66,98,160,165,235,0,135,234,127,156,97,226,3,96,232,243,56,211,179,180,57,124,143,90,28,9,167,226,203,186,166,16,76,42,97,234,94,106,23,190 };
    byte_vec_t pk { 3,72,83,194,72,114,19,218,226,0,31,201,95,78,160,190,80,145,26,96,231,118,112,184,16,181,110,48,120,92,122,139,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 759 ") {
    byte_vec_t msg { 109,56,90,165 };
    byte_vec_t sig { 84,250,65,223,82,43,201,53,39,41,148,248,158,196,201,104,79,26,161,221,119,55,189,193,85,102,204,16,77,20,31,33,227,40,159,163,162,199,206,209,116,121,207,31,228,241,231,157,99,23,201,119,173,53,7,161,140,145,45,197,224,77,31,13 };
    byte_vec_t pk { 4,241,181,233,139,155,243,63,154,142,12,62,43,159,249,114,119,222,224,85,221,129,128,194,76,102,79,80,78,26,6,29,198,242,0,57,202,136,89,108,22,101,137,136,60,49,20,62,223,236,109,8,32,32,117,182,23,250,219,130,174,113,195,60,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 759 ") {
    byte_vec_t msg { 255,215,198,177 };
    byte_vec_t sig { 111,85,10,178,236,100,137,221,156,135,235,88,124,182,178,44,195,49,137,217,126,249,50,129,0,205,110,169,43,110,9,82,171,237,154,191,208,77,211,4,20,157,161,184,109,56,182,86,37,226,158,44,219,17,42,125,205,27,48,139,200,251,60,237 };
    byte_vec_t pk { 4,243,64,141,148,24,191,125,195,243,101,139,138,62,106,135,116,161,161,226,209,67,144,244,23,235,165,82,246,60,220,164,6,229,219,130,77,156,163,113,44,100,80,255,46,3,130,24,123,148,214,44,95,123,39,210,23,126,70,26,193,97,179,0,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 759 ") {
    byte_vec_t msg { 59,60,246,166 };
    byte_vec_t sig { 247,247,93,109,120,208,10,213,100,125,205,228,139,245,30,129,110,226,10,240,16,162,14,218,38,151,213,24,84,70,218,218,14,187,241,43,94,151,185,64,212,104,2,239,55,32,146,38,176,223,104,14,146,87,38,230,173,251,225,78,222,255,93,66 };
    byte_vec_t pk { 2,191,68,7,30,243,162,206,7,117,220,77,170,122,57,20,167,89,166,135,206,185,7,130,179,238,53,34,142,127,159,108,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 759 ") {
    byte_vec_t msg { 166,116,173,151 };
    byte_vec_t sig { 215,174,55,136,115,118,109,60,127,189,100,4,3,115,33,80,132,122,46,27,163,231,252,9,31,251,99,107,60,184,222,132,175,8,23,57,66,59,230,158,174,188,89,7,166,166,11,148,31,64,55,90,114,80,135,188,47,157,17,144,63,122,18,61 };
    byte_vec_t pk { 3,23,234,129,111,201,22,231,99,34,2,251,23,38,52,107,84,253,228,131,21,224,39,104,35,84,4,81,217,139,237,111,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 760 ") {
    byte_vec_t msg { 8,69,191,97 };
    byte_vec_t sig { 79,47,226,152,175,236,121,181,84,14,224,96,5,119,194,60,168,119,246,192,17,136,109,222,1,136,42,105,222,42,230,199,0,136,93,120,144,18,169,62,123,187,245,132,15,222,125,131,81,51,129,89,23,76,215,137,39,250,183,60,158,11,226,199 };
    byte_vec_t pk { 4,35,2,157,51,86,190,179,140,243,196,188,52,232,213,146,237,88,234,63,142,18,158,184,41,15,110,82,60,165,203,170,11,253,217,222,68,54,62,74,8,111,216,247,141,34,79,36,24,130,80,68,16,199,210,124,107,230,197,18,87,69,164,197,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 760 ") {
    byte_vec_t msg { 29,221,158,73 };
    byte_vec_t sig { 47,24,246,207,88,227,144,229,2,131,97,208,138,127,142,32,55,68,86,142,219,85,164,252,101,196,89,168,160,171,64,69,77,240,167,129,74,208,128,199,46,31,135,153,172,157,208,149,56,79,50,241,122,140,249,244,95,63,191,228,215,110,201,101 };
    byte_vec_t pk { 4,73,44,85,232,154,92,230,114,145,149,111,86,26,228,240,209,189,97,67,71,61,118,19,2,201,226,226,159,188,192,169,102,93,170,196,74,32,213,86,222,204,127,1,167,236,202,205,188,111,184,80,108,13,66,228,251,161,118,17,152,8,173,234,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 760 ") {
    byte_vec_t msg { 18,66,138,55 };
    byte_vec_t sig { 187,249,172,116,178,51,210,69,25,142,47,181,172,164,227,172,105,59,203,83,110,107,160,194,144,238,99,238,250,240,215,23,195,101,211,83,241,80,107,196,223,220,246,193,182,35,196,139,143,79,225,144,116,90,101,43,205,41,18,87,196,181,207,148 };
    byte_vec_t pk { 3,108,147,233,77,9,51,156,93,144,45,227,69,181,202,42,136,76,123,100,116,200,182,195,155,245,187,50,4,223,232,162,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 760 ") {
    byte_vec_t msg { 55,201,45,46 };
    byte_vec_t sig { 123,214,241,50,144,171,193,2,7,229,197,224,79,146,205,72,241,219,93,27,160,37,134,245,134,156,7,45,62,194,165,144,244,12,94,41,78,254,121,56,126,213,240,57,6,86,37,57,81,18,98,226,40,97,220,111,184,140,249,174,235,190,162,165 };
    byte_vec_t pk { 2,19,72,142,206,129,11,91,183,60,226,134,234,195,2,24,160,165,197,139,187,38,192,38,149,86,114,219,187,219,185,185,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 761 ") {
    byte_vec_t msg { 145,8,230,241 };
    byte_vec_t sig { 237,235,185,146,25,58,210,214,42,112,104,9,254,108,191,42,201,96,222,203,62,134,41,19,39,248,64,105,41,212,93,206,15,218,201,66,234,138,242,53,198,191,138,233,160,58,126,213,20,71,122,52,99,3,121,166,150,153,229,164,103,68,156,23 };
    byte_vec_t pk { 4,208,221,86,119,145,163,120,116,134,111,237,164,246,127,234,6,205,215,176,70,164,31,25,232,230,38,83,242,164,185,158,58,178,153,12,82,83,100,168,33,176,191,37,12,172,150,166,136,82,115,250,31,211,86,41,70,210,5,139,108,118,66,146,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 761 ") {
    byte_vec_t msg { 174,208,70,139 };
    byte_vec_t sig { 63,141,78,192,88,137,151,101,136,119,210,67,16,55,94,140,84,67,225,163,30,181,171,68,157,119,239,158,29,87,247,254,125,140,138,198,77,90,143,62,162,150,183,80,208,36,230,84,194,103,168,224,78,141,26,100,11,221,162,174,229,59,142,236 };
    byte_vec_t pk { 4,18,60,80,197,189,82,35,189,26,134,55,125,219,103,70,214,70,202,49,94,87,92,155,250,128,20,182,195,22,71,63,216,97,75,138,125,14,110,158,138,167,99,100,129,190,241,2,237,19,18,59,61,82,213,189,149,240,219,90,176,159,236,14,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 761 ") {
    byte_vec_t msg { 11,255,230,216 };
    byte_vec_t sig { 188,87,46,131,201,218,120,41,103,38,168,57,20,195,153,219,150,254,177,75,27,61,12,208,55,86,194,221,244,95,246,151,51,117,229,207,41,26,55,128,151,210,210,248,251,101,201,247,78,236,254,254,9,53,3,85,92,11,74,213,76,70,121,25 };
    byte_vec_t pk { 2,84,76,88,67,84,192,52,61,182,129,35,1,211,35,192,92,155,246,66,93,227,95,110,3,234,251,191,226,213,238,151,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 761 ") {
    byte_vec_t msg { 90,30,0,54 };
    byte_vec_t sig { 52,99,2,241,80,109,32,218,229,83,8,246,161,224,211,91,134,186,224,96,19,42,109,176,218,39,73,36,96,150,136,223,62,19,50,168,115,255,215,225,48,94,255,64,222,74,202,172,213,51,238,201,208,80,55,63,179,196,42,83,190,231,112,229 };
    byte_vec_t pk { 2,254,232,8,108,14,106,18,133,43,116,106,151,30,127,54,32,144,212,103,100,115,109,26,191,58,88,164,154,91,194,240,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 762 ") {
    byte_vec_t msg { 21,146,236,82 };
    byte_vec_t sig { 126,51,152,231,80,252,223,46,43,133,91,5,68,29,138,232,241,79,1,28,31,112,65,123,112,214,145,177,219,86,205,182,12,26,88,9,135,208,124,86,210,193,54,95,1,51,1,22,140,194,221,94,215,81,254,187,89,78,124,211,87,86,212,159 };
    byte_vec_t pk { 4,132,115,246,47,247,19,150,35,105,195,62,79,206,165,218,82,224,167,204,90,5,167,237,3,131,159,207,108,160,130,189,119,14,112,54,70,92,239,134,126,160,36,59,239,19,15,180,173,115,112,62,132,45,30,38,129,203,14,30,98,26,254,71,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 762 ") {
    byte_vec_t msg { 52,124,23,88 };
    byte_vec_t sig { 127,204,65,15,91,27,45,164,110,95,252,53,155,63,167,80,231,152,185,106,59,91,188,1,175,18,25,37,97,106,145,188,135,131,97,140,222,254,161,103,67,186,61,0,169,171,232,2,82,127,97,190,106,13,147,249,56,139,71,144,231,110,153,28 };
    byte_vec_t pk { 4,235,134,28,7,58,109,173,184,164,147,100,108,58,229,213,116,134,164,54,146,113,94,25,215,77,121,187,112,40,36,188,141,191,48,9,82,148,8,49,74,90,92,14,101,170,175,209,248,12,209,204,205,213,26,177,226,101,32,125,131,10,196,55,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 762 ") {
    byte_vec_t msg { 218,163,23,203 };
    byte_vec_t sig { 155,252,169,90,55,225,186,186,245,241,241,78,163,124,242,217,164,165,93,203,244,216,41,225,34,51,128,245,108,0,172,97,181,91,244,235,231,212,15,223,207,152,130,160,42,22,46,113,206,248,239,36,132,134,16,170,124,191,214,241,35,218,114,27 };
    byte_vec_t pk { 3,115,223,132,97,70,61,183,13,83,100,55,140,222,57,191,3,83,199,158,213,137,11,188,85,175,56,119,15,43,120,122,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 762 ") {
    byte_vec_t msg { 33,81,106,107 };
    byte_vec_t sig { 214,128,100,166,206,183,82,147,62,241,191,117,148,52,31,147,212,35,128,3,76,1,195,180,184,74,205,128,88,142,99,186,193,220,22,245,19,160,252,1,83,9,203,82,70,133,186,105,192,238,188,199,175,24,31,115,34,35,139,64,95,151,184,186 };
    byte_vec_t pk { 3,224,116,32,216,218,207,134,0,9,239,243,90,124,152,163,224,120,39,214,113,172,119,174,9,118,199,211,157,218,117,27,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 763 ") {
    byte_vec_t msg { 39,130,8,171 };
    byte_vec_t sig { 6,182,228,22,23,90,12,130,52,95,165,201,6,99,241,201,254,52,195,82,193,177,204,82,231,144,239,152,182,65,254,12,237,156,214,209,64,37,14,144,222,14,148,81,118,85,172,26,65,42,4,1,32,149,232,243,8,57,8,90,57,68,192,34 };
    byte_vec_t pk { 4,192,212,56,8,180,242,120,179,219,58,78,244,143,17,135,36,231,218,24,245,16,216,99,23,203,154,206,65,216,219,33,231,120,220,197,184,196,78,6,248,175,7,151,82,60,24,132,65,89,98,246,237,58,23,221,106,205,158,144,117,247,253,75,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 763 ") {
    byte_vec_t msg { 68,173,151,11 };
    byte_vec_t sig { 23,246,151,186,93,30,44,22,178,177,154,34,78,59,47,37,187,114,123,246,48,187,1,202,71,250,118,121,95,134,54,98,30,49,10,225,132,102,111,93,88,136,190,91,234,23,67,164,6,78,249,21,4,38,130,162,21,208,131,43,27,188,214,65 };
    byte_vec_t pk { 4,4,250,73,204,182,88,133,116,239,24,15,90,48,130,14,52,125,100,208,104,86,193,197,174,53,195,127,49,191,209,71,131,86,97,44,39,9,80,23,240,122,151,152,94,138,33,137,196,247,161,109,207,131,45,95,242,100,61,193,74,100,104,254,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 763 ") {
    byte_vec_t msg { 17,228,195,186 };
    byte_vec_t sig { 227,164,13,2,98,233,4,95,86,102,63,235,22,11,183,64,185,87,158,90,93,83,148,226,149,226,187,101,207,114,153,11,128,77,184,169,123,23,153,7,120,122,127,120,40,134,17,204,46,57,107,252,226,100,214,229,185,234,42,120,240,228,157,199 };
    byte_vec_t pk { 2,43,73,158,180,127,117,71,236,222,173,4,240,205,235,206,46,87,18,74,74,243,186,8,45,64,66,238,177,41,144,251,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 763 ") {
    byte_vec_t msg { 175,1,177,200 };
    byte_vec_t sig { 141,214,218,228,66,174,235,23,203,216,185,128,205,19,59,254,156,11,84,79,72,134,222,226,31,139,203,134,255,145,133,19,171,21,24,200,254,75,77,80,162,55,174,155,61,82,243,192,209,191,187,161,150,213,96,140,54,144,147,161,95,42,76,87 };
    byte_vec_t pk { 3,20,38,95,177,21,251,99,231,96,168,170,47,78,28,215,159,244,46,18,186,4,172,120,14,145,15,206,254,132,255,229,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 764 ") {
    byte_vec_t msg { 97,56,95,102 };
    byte_vec_t sig { 153,47,48,3,51,162,199,172,195,220,43,113,85,221,233,242,166,52,197,124,186,63,123,76,246,49,251,206,180,58,137,0,188,74,38,96,190,188,16,54,161,225,29,226,231,112,164,233,79,62,116,63,159,226,237,57,149,255,247,248,125,121,212,80 };
    byte_vec_t pk { 4,254,187,4,81,213,89,80,147,85,96,24,166,231,14,184,156,149,216,148,135,211,245,175,118,100,242,107,204,152,121,155,93,211,51,227,231,208,253,128,252,142,43,178,188,137,216,245,174,82,235,48,24,178,76,43,63,222,55,249,96,34,226,230,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 764 ") {
    byte_vec_t msg { 244,24,122,113 };
    byte_vec_t sig { 99,13,95,51,26,162,147,143,0,161,192,239,206,194,50,153,188,99,28,212,2,23,178,182,85,95,235,234,217,251,56,62,159,3,60,21,104,133,206,119,143,109,254,221,87,39,62,67,121,15,217,154,94,113,76,58,181,98,0,32,170,106,19,173 };
    byte_vec_t pk { 4,200,249,252,38,175,18,67,118,117,82,70,196,179,91,198,175,45,69,41,8,189,201,179,3,115,247,135,225,46,30,34,122,10,31,186,52,181,27,34,131,237,67,220,92,105,200,141,110,219,57,235,76,41,212,149,201,108,203,90,226,65,142,39,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 764 ") {
    byte_vec_t msg { 230,138,250,182 };
    byte_vec_t sig { 230,60,228,44,253,32,30,107,202,163,139,221,127,64,190,156,211,12,228,86,229,209,16,175,173,245,130,20,130,57,255,136,29,171,179,102,154,109,47,16,22,168,85,214,129,184,124,41,195,10,229,74,93,161,212,250,159,244,69,157,61,37,184,139 };
    byte_vec_t pk { 3,204,203,141,237,113,67,173,117,94,237,111,143,155,116,224,163,114,253,110,35,75,178,119,214,218,154,180,163,126,79,44,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 764 ") {
    byte_vec_t msg { 133,145,177,64 };
    byte_vec_t sig { 55,197,31,20,119,65,110,35,190,94,106,174,86,156,193,36,163,153,46,160,107,92,31,111,77,103,147,96,152,239,34,152,78,241,24,184,85,120,213,70,135,208,196,84,215,185,242,187,13,219,1,172,239,212,131,91,99,101,208,148,39,108,224,139 };
    byte_vec_t pk { 3,161,229,143,42,66,179,251,236,122,11,47,85,190,12,74,156,25,15,7,103,86,43,190,196,178,142,30,244,180,26,112,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 765 ") {
    byte_vec_t msg { 139,120,140,127 };
    byte_vec_t sig { 180,68,23,10,223,145,82,139,150,140,255,246,209,196,152,152,237,233,22,189,74,215,160,165,10,11,116,30,97,120,185,133,116,210,167,22,249,174,27,1,179,237,27,72,116,191,130,216,107,141,162,0,28,217,185,182,185,169,238,222,254,68,30,102 };
    byte_vec_t pk { 4,240,39,44,210,242,38,220,100,27,83,122,93,62,38,59,249,108,94,206,228,42,26,81,46,36,15,167,91,31,171,215,156,234,117,123,152,139,108,14,81,21,42,3,233,10,21,245,178,8,216,190,102,91,118,11,71,5,32,214,21,215,223,219,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 765 ") {
    byte_vec_t msg { 77,71,9,97 };
    byte_vec_t sig { 78,161,129,118,161,19,43,20,108,106,206,212,96,151,220,138,3,218,155,189,74,155,188,101,108,133,169,51,32,104,80,120,14,5,136,44,9,102,2,199,245,209,134,99,182,94,85,47,45,17,1,136,199,108,211,140,133,182,222,40,55,245,62,230 };
    byte_vec_t pk { 4,5,140,252,114,85,202,112,172,114,244,161,24,224,232,174,149,147,78,113,177,126,255,105,171,155,7,166,152,25,142,126,65,207,161,204,58,84,10,62,197,113,219,254,249,117,188,216,148,23,249,252,226,215,195,252,203,243,217,109,249,247,153,89,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 765 ") {
    byte_vec_t msg { 116,158,59,197 };
    byte_vec_t sig { 159,4,45,103,57,2,195,53,156,158,232,194,26,219,41,36,119,130,97,13,218,14,133,81,110,242,255,42,25,245,171,140,246,68,233,62,34,72,111,228,49,255,118,59,208,253,50,102,22,73,11,104,196,150,169,102,152,134,232,39,62,213,212,208 };
    byte_vec_t pk { 2,132,132,115,25,188,199,95,29,182,222,251,143,160,51,3,192,194,235,80,191,148,196,219,88,243,152,17,89,67,32,12,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 765 ") {
    byte_vec_t msg { 179,221,250,32 };
    byte_vec_t sig { 51,245,161,138,247,63,13,110,227,191,47,99,131,141,141,135,200,172,175,61,252,238,211,81,82,205,37,15,165,202,75,60,213,216,36,108,50,42,14,109,165,237,225,199,233,139,192,229,52,66,240,34,47,49,167,29,64,23,42,125,11,214,17,248 };
    byte_vec_t pk { 3,118,244,160,119,223,26,199,235,251,203,31,11,40,108,250,185,132,94,83,8,17,79,240,226,92,187,89,189,6,179,127,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 766 ") {
    byte_vec_t msg { 26,183,227,17 };
    byte_vec_t sig { 61,155,42,37,34,66,145,232,40,2,214,125,206,171,118,141,82,110,113,248,212,183,60,92,244,40,205,189,200,16,12,152,64,21,215,75,105,156,116,165,48,169,191,126,233,113,107,132,222,48,30,17,120,247,243,64,173,84,179,171,48,199,244,180 };
    byte_vec_t pk { 4,99,204,175,124,79,38,18,60,17,40,192,97,242,68,178,195,211,12,32,236,43,170,81,166,218,176,99,80,29,33,37,222,231,28,108,177,41,181,93,100,92,135,102,56,161,19,98,17,172,11,237,145,222,1,89,71,177,129,95,43,82,189,164,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 766 ") {
    byte_vec_t msg { 21,8,16,18 };
    byte_vec_t sig { 7,221,62,75,66,141,84,118,250,105,80,35,25,24,190,115,88,220,173,28,178,145,253,254,230,186,109,45,41,29,115,139,41,48,122,230,182,80,203,12,223,138,67,119,109,103,112,241,154,28,188,232,146,56,247,89,7,12,102,230,175,216,66,95 };
    byte_vec_t pk { 4,67,138,146,85,117,210,210,10,193,137,154,153,15,247,237,89,29,8,2,27,234,79,51,61,0,239,35,94,172,62,119,165,57,144,213,226,254,241,154,26,242,154,11,101,148,218,179,245,36,207,118,247,145,84,27,10,254,227,186,46,14,231,159,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 766 ") {
    byte_vec_t msg { 225,91,191,218 };
    byte_vec_t sig { 223,50,39,176,249,140,42,124,104,255,199,157,182,82,87,186,130,92,185,9,177,165,146,9,151,68,250,60,67,48,11,242,169,30,54,8,28,120,68,126,2,224,101,209,240,56,54,129,160,58,155,227,140,0,34,49,85,57,16,237,26,141,109,157 };
    byte_vec_t pk { 3,30,68,106,203,172,172,78,47,241,236,236,29,151,12,27,180,230,197,40,101,80,38,152,126,197,29,112,214,149,254,0,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 766 ") {
    byte_vec_t msg { 163,70,63,160 };
    byte_vec_t sig { 165,70,106,45,206,251,193,140,58,48,157,16,108,67,161,164,149,100,228,238,22,168,164,80,80,194,147,114,183,190,0,154,1,85,56,212,127,182,111,205,158,251,250,46,141,55,10,53,241,141,87,66,245,203,238,194,202,180,38,129,21,24,10,2 };
    byte_vec_t pk { 3,86,30,96,85,2,131,32,136,110,45,7,254,203,52,0,57,26,44,106,118,60,205,27,78,11,196,19,66,227,47,239,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 767 ") {
    byte_vec_t msg { 52,146,81,83 };
    byte_vec_t sig { 52,180,253,98,125,0,115,252,238,0,16,48,228,197,72,252,74,139,145,139,111,206,71,185,100,162,163,39,66,66,34,9,123,202,75,5,115,165,86,131,38,193,192,165,215,188,74,13,127,73,68,178,234,123,96,218,205,221,229,151,231,210,60,151 };
    byte_vec_t pk { 4,43,81,8,47,63,198,52,238,54,14,60,192,106,75,58,26,133,187,4,158,229,53,87,178,101,54,126,119,28,197,25,100,2,149,199,105,158,72,37,195,136,80,154,126,125,2,122,96,65,63,11,137,136,253,65,181,108,172,120,181,93,75,66,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 767 ") {
    byte_vec_t msg { 219,120,80,156 };
    byte_vec_t sig { 147,66,199,167,179,161,43,99,192,242,149,216,94,186,162,196,169,3,37,16,95,187,25,90,88,114,4,116,117,64,196,155,226,25,227,227,58,43,83,215,115,99,221,252,185,107,180,228,227,226,246,49,47,210,34,62,162,17,65,39,51,73,161,165 };
    byte_vec_t pk { 4,251,38,64,180,42,10,227,45,35,1,229,179,131,179,176,22,249,227,115,148,173,165,17,204,21,213,56,30,254,149,104,72,141,95,224,129,31,192,197,195,159,246,116,89,127,44,161,34,85,248,251,188,93,231,83,222,188,195,214,170,22,222,232,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 767 ") {
    byte_vec_t msg { 234,197,56,105 };
    byte_vec_t sig { 159,72,88,160,51,154,223,52,242,149,44,215,110,245,133,246,14,243,128,170,226,228,33,208,16,175,183,112,160,109,248,41,50,217,185,41,202,141,247,244,72,183,237,242,23,118,102,39,43,148,199,49,168,36,73,240,9,29,179,151,156,199,0,216 };
    byte_vec_t pk { 2,241,36,240,2,200,76,112,172,199,164,60,177,25,92,212,17,235,195,224,204,232,65,234,69,159,78,122,56,248,152,12,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 767 ") {
    byte_vec_t msg { 40,104,73,231 };
    byte_vec_t sig { 114,10,13,78,180,65,14,184,160,153,116,114,214,146,232,212,0,188,231,59,31,134,139,144,78,229,154,144,175,140,164,253,68,222,26,160,186,140,223,218,134,112,215,80,78,198,102,194,30,135,147,232,224,73,122,200,226,87,67,153,32,152,36,195 };
    byte_vec_t pk { 2,253,175,64,171,203,104,112,148,59,16,140,92,8,123,230,41,253,208,215,32,104,27,42,193,69,68,249,109,168,6,126,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 768 ") {
    byte_vec_t msg { 107,172,116,116 };
    byte_vec_t sig { 18,250,181,103,230,18,191,215,140,6,224,20,34,67,170,83,197,170,87,61,143,161,167,155,9,194,50,242,137,26,246,153,79,54,108,187,67,173,63,133,217,194,231,50,22,96,195,50,6,171,237,250,239,57,9,10,115,178,79,75,208,70,253,71 };
    byte_vec_t pk { 4,229,23,84,135,247,29,158,13,52,149,129,59,221,130,123,191,185,249,25,61,93,180,113,162,32,27,145,74,213,181,134,219,196,12,16,98,160,246,228,57,96,213,14,106,203,129,229,45,195,205,243,183,230,56,211,178,159,223,72,200,250,217,142,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 768 ") {
    byte_vec_t msg { 56,199,81,28 };
    byte_vec_t sig { 244,245,225,93,36,244,208,150,107,16,11,133,123,144,71,90,174,1,4,240,33,0,115,153,170,88,32,41,234,117,40,255,22,26,199,129,42,208,186,93,200,125,130,55,148,126,113,178,208,102,208,50,74,191,107,52,84,91,31,130,82,231,254,91 };
    byte_vec_t pk { 4,20,175,38,115,32,172,106,189,18,182,39,209,176,54,13,126,84,171,23,202,10,137,25,57,55,233,65,24,231,15,204,145,20,5,99,250,213,70,201,246,135,107,244,190,200,38,174,103,63,93,167,4,245,173,195,98,193,56,237,92,53,95,4,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 768 ") {
    byte_vec_t msg { 72,157,160,133 };
    byte_vec_t sig { 120,91,45,163,249,54,209,95,109,60,140,162,82,99,223,197,185,167,169,233,174,121,141,15,238,100,69,5,99,146,60,193,162,253,55,80,52,66,56,69,2,138,241,213,180,208,4,55,205,215,149,229,251,248,79,218,112,189,158,13,112,57,3,108 };
    byte_vec_t pk { 3,241,130,236,75,242,21,23,217,235,113,252,197,36,222,184,247,147,157,147,37,207,180,119,50,36,216,57,133,118,1,139,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 768 ") {
    byte_vec_t msg { 27,236,22,214 };
    byte_vec_t sig { 79,145,152,250,242,38,172,32,172,155,16,101,105,181,194,235,149,211,143,216,154,110,150,169,12,113,8,58,168,253,239,90,67,181,135,56,230,254,95,149,193,205,5,134,136,178,163,108,239,19,134,162,139,170,38,187,202,84,251,76,129,110,66,65 };
    byte_vec_t pk { 2,11,230,25,66,229,249,0,28,137,93,221,155,58,202,120,217,59,125,45,41,156,137,212,134,42,106,107,210,27,218,161,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 769 ") {
    byte_vec_t msg { 89,23,217,146 };
    byte_vec_t sig { 235,30,47,78,128,213,84,29,190,154,89,79,9,162,196,160,191,136,56,130,71,134,26,162,249,233,150,134,82,85,215,62,46,173,14,201,70,50,19,161,36,84,80,16,175,211,184,153,207,93,192,238,102,191,36,49,127,79,48,187,133,101,97,25 };
    byte_vec_t pk { 4,127,165,139,185,125,226,145,18,223,118,175,93,51,118,91,117,177,97,41,108,175,81,108,189,29,80,205,129,26,3,72,180,59,112,177,161,105,67,239,38,41,51,81,222,118,47,200,85,73,200,237,158,153,123,231,233,159,6,21,96,208,172,112,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 769 ") {
    byte_vec_t msg { 251,146,100,84 };
    byte_vec_t sig { 119,121,58,41,189,24,217,152,29,166,198,227,108,158,197,185,159,19,163,61,114,86,199,114,136,195,213,158,78,122,72,242,243,166,54,226,191,45,26,201,94,83,156,138,173,82,34,255,48,136,30,133,165,230,229,222,187,242,212,158,118,182,237,141 };
    byte_vec_t pk { 4,239,103,103,78,214,41,4,81,209,218,30,45,126,112,138,13,237,245,138,90,250,38,219,63,195,89,106,98,49,61,180,41,62,22,167,222,163,156,21,133,201,61,88,231,226,1,130,9,78,148,65,29,162,240,190,207,81,201,82,187,122,237,165,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 769 ") {
    byte_vec_t msg { 205,84,64,107 };
    byte_vec_t sig { 183,224,199,133,207,152,245,118,18,7,158,48,44,15,62,216,182,156,188,231,143,254,72,198,243,136,249,209,178,33,23,181,159,9,72,106,28,37,141,217,255,56,104,183,199,212,71,24,82,175,180,198,68,162,79,103,89,51,217,70,102,177,41,5 };
    byte_vec_t pk { 3,27,192,239,236,45,82,194,65,108,102,207,34,109,186,173,136,54,237,155,235,154,22,13,104,237,98,126,204,195,211,248,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 769 ") {
    byte_vec_t msg { 84,124,85,232 };
    byte_vec_t sig { 224,36,151,55,85,189,189,237,182,34,177,11,174,159,46,252,94,184,154,220,194,245,236,86,89,216,64,235,46,161,65,194,40,199,252,83,83,118,182,197,247,138,170,149,227,187,177,164,170,189,44,171,221,122,198,47,12,70,117,75,70,176,203,96 };
    byte_vec_t pk { 3,36,124,126,228,103,8,108,177,21,167,145,236,94,101,113,183,79,162,77,168,179,132,79,75,208,176,230,198,214,40,58,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 770 ") {
    byte_vec_t msg { 197,69,14,68 };
    byte_vec_t sig { 219,41,251,181,183,123,241,142,68,117,226,215,189,156,90,77,71,41,176,178,13,208,134,132,106,54,32,39,167,1,118,114,33,98,222,196,120,148,235,199,226,116,36,107,87,172,58,172,66,9,232,72,25,178,66,153,172,216,199,82,217,27,164,54 };
    byte_vec_t pk { 4,194,44,210,135,163,23,12,117,148,203,157,110,36,152,139,144,140,148,85,218,61,121,51,185,159,229,33,7,216,13,196,53,6,210,36,101,94,250,212,22,215,153,230,96,247,242,200,33,139,117,47,192,170,232,37,21,78,79,89,98,156,28,25,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 770 ") {
    byte_vec_t msg { 79,154,233,75 };
    byte_vec_t sig { 228,67,25,21,99,146,108,239,40,102,226,177,116,67,194,134,141,218,167,26,230,76,11,254,179,174,110,153,80,174,166,205,227,55,99,243,11,160,223,27,147,233,128,225,196,148,85,89,78,123,73,95,40,155,39,55,1,227,162,170,200,63,255,168 };
    byte_vec_t pk { 4,130,253,157,234,234,230,71,54,167,128,244,42,138,3,24,205,79,228,38,105,168,173,117,23,60,196,192,205,87,85,40,23,240,17,250,156,173,28,175,126,75,135,41,225,112,9,28,230,52,168,136,13,203,82,110,65,46,213,202,3,253,136,122,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 770 ") {
    byte_vec_t msg { 204,66,93,169 };
    byte_vec_t sig { 152,64,15,86,104,41,50,253,166,253,244,61,28,242,240,5,102,34,9,145,236,92,185,27,146,22,169,239,173,118,148,172,59,23,186,206,28,82,49,108,7,93,90,188,140,110,33,185,1,54,141,222,15,176,88,24,75,28,18,207,97,28,145,228 };
    byte_vec_t pk { 3,54,61,0,150,190,70,85,152,143,8,109,29,81,142,190,6,36,182,74,147,211,64,111,103,198,241,0,230,190,127,219,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 770 ") {
    byte_vec_t msg { 186,148,229,178 };
    byte_vec_t sig { 157,145,32,11,176,104,207,154,126,47,84,140,135,107,94,167,228,32,23,157,161,14,94,74,123,39,129,128,83,174,66,94,230,58,239,34,204,119,49,151,18,177,34,239,45,143,19,151,4,230,160,239,4,213,233,83,3,56,119,150,98,147,231,62 };
    byte_vec_t pk { 3,155,10,232,247,145,183,187,195,119,98,144,5,3,220,223,234,164,78,18,187,67,29,60,138,111,9,47,151,64,3,252,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 771 ") {
    byte_vec_t msg { 51,185,129,93 };
    byte_vec_t sig { 13,164,150,241,51,12,91,156,155,90,5,13,233,217,51,19,71,239,168,189,235,86,83,31,65,162,6,59,38,60,223,202,167,188,179,0,231,64,79,228,172,233,151,59,74,225,213,151,9,3,186,160,184,43,126,82,107,228,178,203,195,142,245,198 };
    byte_vec_t pk { 4,37,250,111,9,175,120,204,228,244,107,51,17,0,149,56,190,207,58,125,195,121,237,210,81,14,179,241,184,172,105,180,125,75,144,98,64,250,21,61,77,199,34,16,182,3,3,92,212,194,221,140,157,178,67,53,239,182,95,46,67,193,148,204,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 771 ") {
    byte_vec_t msg { 195,228,80,195 };
    byte_vec_t sig { 217,110,111,251,148,128,135,18,180,205,24,237,117,224,46,216,59,54,84,23,44,85,4,71,109,131,146,201,90,213,125,142,226,80,54,129,63,61,214,16,160,63,156,19,164,184,59,129,244,130,99,195,31,174,252,126,90,218,82,27,29,165,53,198 };
    byte_vec_t pk { 4,64,123,152,248,249,161,137,63,54,112,10,189,4,38,102,89,145,77,23,110,12,96,252,117,92,174,142,11,168,195,204,196,154,171,64,190,53,63,98,242,41,226,56,109,8,220,249,136,9,22,137,78,18,239,205,245,116,152,41,116,169,124,97,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 771 ") {
    byte_vec_t msg { 21,215,80,254 };
    byte_vec_t sig { 119,91,22,74,154,110,62,191,205,186,174,177,106,224,162,134,107,184,55,140,23,169,70,9,106,38,164,26,242,36,216,23,38,194,167,114,82,166,143,215,24,32,100,40,143,179,214,42,148,222,192,235,225,193,201,226,103,161,176,83,128,226,175,131 };
    byte_vec_t pk { 3,52,124,212,94,22,120,100,136,210,230,248,102,111,185,173,175,0,195,168,162,13,139,95,188,164,77,223,56,127,222,103,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 771 ") {
    byte_vec_t msg { 244,171,44,106 };
    byte_vec_t sig { 134,250,180,10,125,11,45,215,90,18,20,180,33,142,34,101,208,60,145,100,125,236,253,193,225,254,161,59,89,27,228,153,250,188,33,183,252,191,183,47,48,47,217,116,210,32,14,122,39,130,185,68,222,59,95,254,111,65,140,254,29,133,99,141 };
    byte_vec_t pk { 3,53,176,87,97,127,243,99,84,15,69,177,20,171,55,154,206,165,151,181,58,3,225,62,241,225,56,146,169,34,79,116,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 772 ") {
    byte_vec_t msg { 189,173,1,92 };
    byte_vec_t sig { 166,209,96,122,71,73,6,173,116,237,12,229,134,130,90,60,144,183,162,113,79,181,158,6,25,76,54,161,205,82,118,15,26,140,87,111,203,116,66,141,97,194,131,63,7,131,58,219,241,106,114,22,247,128,135,20,4,69,107,56,23,12,33,14 };
    byte_vec_t pk { 4,184,39,182,131,223,230,3,145,50,109,226,167,199,106,215,131,160,200,60,188,252,51,178,91,52,132,10,203,234,222,104,151,177,85,108,28,77,166,89,90,70,95,131,10,122,220,103,113,77,175,234,21,52,123,161,67,248,160,138,93,220,126,229,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 772 ") {
    byte_vec_t msg { 143,77,83,179 };
    byte_vec_t sig { 144,166,123,133,4,37,180,68,218,31,108,167,101,221,255,22,157,222,248,1,130,193,65,224,197,7,98,49,64,184,97,13,89,215,239,110,26,33,242,95,15,167,10,161,112,212,150,114,178,245,120,85,19,206,33,46,188,193,135,35,150,94,147,52 };
    byte_vec_t pk { 4,223,134,35,213,69,219,208,40,184,200,114,107,99,22,232,250,41,150,30,0,160,4,34,82,103,4,215,125,147,252,64,234,134,134,102,88,247,232,18,138,77,54,101,179,142,67,79,174,54,32,246,54,104,237,167,200,183,53,108,43,203,111,196,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 772 ") {
    byte_vec_t msg { 66,32,238,233 };
    byte_vec_t sig { 134,102,227,134,173,92,249,228,2,158,175,178,234,31,23,69,149,78,107,101,167,100,29,200,146,74,193,183,35,244,13,89,124,93,215,150,28,112,61,46,82,147,64,248,216,219,182,20,120,195,240,250,150,24,201,255,42,13,135,251,140,56,110,79 };
    byte_vec_t pk { 3,175,32,135,209,61,117,235,109,105,22,217,221,113,62,194,210,215,213,248,229,230,225,97,105,157,209,2,143,15,48,157,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 772 ") {
    byte_vec_t msg { 206,167,91,15 };
    byte_vec_t sig { 4,28,23,100,141,5,61,82,107,126,174,19,201,1,175,95,125,240,215,223,130,36,151,144,46,248,66,149,119,176,215,149,14,246,2,71,244,67,156,184,149,196,147,152,242,191,2,69,37,232,3,77,29,69,84,239,174,212,31,102,21,100,22,164 };
    byte_vec_t pk { 2,196,156,28,10,106,157,8,250,158,162,237,52,164,175,106,243,28,192,138,195,183,123,196,165,147,72,80,238,122,142,93,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 773 ") {
    byte_vec_t msg { 101,231,101,66 };
    byte_vec_t sig { 168,9,151,218,34,64,25,130,253,9,122,188,225,92,68,235,219,120,238,228,64,39,161,156,238,210,169,17,76,58,50,226,169,17,33,66,212,57,121,138,244,68,169,107,107,135,70,129,214,217,224,208,149,198,109,26,147,7,68,158,203,110,211,190 };
    byte_vec_t pk { 4,66,172,17,159,237,148,18,148,130,16,203,210,93,28,130,71,167,127,245,84,146,231,190,146,58,102,79,123,27,41,212,137,167,69,1,23,89,218,20,163,242,242,137,67,201,64,131,244,121,247,113,34,81,124,146,71,146,84,222,246,219,182,182,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 773 ") {
    byte_vec_t msg { 78,18,189,8 };
    byte_vec_t sig { 93,209,4,188,227,77,14,162,80,200,202,174,80,60,161,226,242,23,182,35,248,200,135,191,151,52,64,110,163,213,238,47,46,162,120,117,19,110,253,124,196,173,186,59,220,87,107,192,112,119,178,215,220,198,87,23,149,192,29,220,1,210,243,38 };
    byte_vec_t pk { 4,237,0,50,45,235,212,131,210,152,37,19,124,191,101,126,44,172,54,93,183,251,157,159,14,53,59,29,103,233,108,246,70,251,230,32,175,216,136,238,230,18,125,36,76,132,57,19,242,75,109,87,193,154,83,252,17,255,209,188,10,174,129,172,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 773 ") {
    byte_vec_t msg { 87,31,75,242 };
    byte_vec_t sig { 10,158,217,32,194,77,31,89,213,83,24,206,131,176,34,4,228,45,59,93,195,58,236,32,210,188,210,74,231,57,208,132,98,247,77,167,53,66,140,90,48,32,146,9,208,91,230,11,225,123,109,182,96,114,95,75,185,136,88,193,74,112,120,255 };
    byte_vec_t pk { 3,247,118,34,10,169,128,98,227,151,248,123,226,233,47,91,87,140,134,4,109,17,116,243,72,148,6,242,8,163,130,179,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 773 ") {
    byte_vec_t msg { 39,44,54,146 };
    byte_vec_t sig { 209,38,216,208,9,167,135,150,214,212,233,191,27,224,80,244,179,226,158,153,50,32,52,13,36,162,178,134,240,52,86,58,129,237,199,206,163,179,208,96,90,18,174,215,255,55,35,126,52,74,223,69,31,45,225,149,63,148,77,45,2,57,138,248 };
    byte_vec_t pk { 2,10,215,74,227,42,84,58,176,28,74,14,70,21,164,178,84,19,89,235,102,82,119,109,254,203,140,105,67,175,229,175,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 774 ") {
    byte_vec_t msg { 236,24,141,224 };
    byte_vec_t sig { 48,213,109,77,21,106,45,203,153,244,77,49,206,125,129,159,170,20,81,220,248,194,175,13,214,193,217,147,59,136,69,201,73,90,107,32,0,86,226,24,61,124,158,135,41,178,50,201,67,123,8,251,40,83,209,3,228,69,91,98,214,206,123,34 };
    byte_vec_t pk { 4,189,32,158,79,99,229,43,230,49,143,44,46,35,206,219,15,42,227,3,172,80,113,99,21,175,79,202,204,64,29,178,69,32,246,240,7,88,163,189,153,210,229,40,152,61,27,74,206,79,131,165,121,26,135,198,122,64,236,246,244,95,85,70,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 774 ") {
    byte_vec_t msg { 122,127,210,70 };
    byte_vec_t sig { 25,59,102,176,9,88,144,213,213,190,1,134,113,232,155,60,219,26,2,255,127,210,22,15,93,61,218,194,16,163,108,32,51,40,246,254,88,82,139,115,144,166,176,33,78,65,175,4,165,82,139,46,67,96,116,142,238,37,203,71,180,11,91,238 };
    byte_vec_t pk { 4,79,91,77,217,138,58,71,197,47,14,115,230,1,2,201,16,55,35,162,130,165,102,24,172,254,2,254,53,239,154,125,123,21,13,125,225,5,47,232,252,82,104,71,236,227,150,205,28,147,154,128,16,206,95,214,75,113,156,143,49,193,141,146,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 774 ") {
    byte_vec_t msg { 87,102,1,24 };
    byte_vec_t sig { 32,127,215,52,1,231,64,75,31,55,74,165,251,251,143,170,52,38,69,228,47,169,14,166,44,79,53,25,204,161,173,184,173,235,61,208,128,201,208,90,208,77,186,183,149,41,162,146,42,23,190,228,235,113,168,5,179,114,57,153,84,14,87,109 };
    byte_vec_t pk { 2,166,244,43,247,99,171,2,243,11,244,184,203,244,12,240,164,181,96,72,58,161,189,143,80,70,14,203,3,158,225,39,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 774 ") {
    byte_vec_t msg { 52,246,99,223 };
    byte_vec_t sig { 166,158,158,126,67,95,40,166,3,144,136,84,88,96,145,170,255,91,50,190,154,249,226,158,144,217,225,252,26,16,4,23,177,115,172,45,251,153,95,21,141,17,29,29,41,17,27,246,127,45,208,45,11,128,38,12,236,198,204,237,86,58,78,180 };
    byte_vec_t pk { 2,62,5,90,59,225,75,8,60,103,254,4,52,248,159,93,12,213,66,3,227,43,37,216,248,34,45,54,60,240,183,211,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 775 ") {
    byte_vec_t msg { 127,147,95,104 };
    byte_vec_t sig { 134,160,194,85,165,105,218,90,135,36,27,247,201,65,239,8,61,237,187,237,99,73,129,222,119,140,37,206,233,168,178,36,126,231,208,180,192,140,149,143,230,250,87,137,30,141,250,56,174,247,50,65,200,221,25,155,139,147,94,190,1,252,24,66 };
    byte_vec_t pk { 4,252,53,211,214,78,216,174,186,161,137,214,32,251,197,193,226,195,245,91,129,43,16,146,126,227,103,214,121,85,194,78,130,35,17,128,224,3,235,214,49,247,99,63,100,205,98,241,25,168,79,117,190,63,154,145,142,177,100,9,21,46,222,185,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 775 ") {
    byte_vec_t msg { 39,30,14,76 };
    byte_vec_t sig { 90,45,194,99,18,6,24,222,213,53,105,84,7,197,164,25,228,140,205,42,22,19,176,42,61,137,131,22,45,191,61,222,11,153,135,190,81,119,36,233,34,24,197,69,28,22,56,27,238,122,52,217,193,106,209,243,96,59,193,233,23,67,244,98 };
    byte_vec_t pk { 4,127,100,89,52,137,158,205,101,16,8,153,145,203,161,27,83,17,101,247,157,115,50,2,190,120,161,47,157,76,217,28,87,57,40,76,57,136,54,42,73,210,75,48,124,62,31,4,143,220,25,66,9,26,146,132,27,199,63,91,153,110,176,104,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 775 ") {
    byte_vec_t msg { 255,31,80,242 };
    byte_vec_t sig { 3,58,38,163,116,70,118,51,79,244,255,192,70,108,144,109,234,115,98,162,173,89,253,153,246,223,57,121,138,110,26,113,218,182,10,28,104,144,56,178,86,110,203,47,5,80,223,155,184,18,191,143,123,212,86,90,165,9,188,78,198,115,79,17 };
    byte_vec_t pk { 2,216,160,56,202,83,220,222,214,244,148,43,253,148,238,121,178,30,130,32,120,10,63,130,150,171,255,83,150,169,123,246,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 775 ") {
    byte_vec_t msg { 27,83,138,49 };
    byte_vec_t sig { 75,246,35,175,68,219,155,208,35,189,5,124,58,33,134,25,238,65,119,189,109,106,224,151,253,63,124,88,74,219,13,234,245,227,253,198,218,253,3,62,52,41,73,161,188,136,105,236,93,73,36,143,156,36,194,88,192,21,35,24,18,229,125,218 };
    byte_vec_t pk { 2,148,41,185,66,87,187,38,210,186,233,206,96,166,84,95,214,247,20,177,114,25,75,3,236,217,198,172,118,31,110,185,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 776 ") {
    byte_vec_t msg { 200,224,179,4 };
    byte_vec_t sig { 92,214,178,144,92,6,13,68,182,216,114,205,76,32,226,10,181,20,18,213,119,239,148,80,56,34,186,201,101,56,43,25,239,144,18,125,211,31,43,201,115,240,112,56,146,9,236,9,128,245,18,175,101,153,80,188,98,27,64,164,7,137,124,254 };
    byte_vec_t pk { 4,237,190,39,130,220,169,50,84,161,84,181,94,58,115,27,225,40,86,173,155,242,249,44,197,88,137,215,196,122,9,76,147,95,191,96,193,245,253,101,238,106,203,34,131,74,135,221,47,205,39,81,50,212,5,191,134,187,78,97,167,197,251,243,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 776 ") {
    byte_vec_t msg { 216,197,198,2 };
    byte_vec_t sig { 144,246,116,32,167,189,225,236,221,166,87,44,116,32,81,255,80,13,236,161,187,9,183,238,49,231,2,153,36,167,241,177,42,193,170,5,254,165,87,17,26,88,51,112,60,247,72,82,168,112,2,176,10,228,184,83,132,244,149,21,49,177,8,106 };
    byte_vec_t pk { 4,190,159,189,57,231,124,177,29,111,175,196,218,162,48,206,46,95,171,26,193,137,208,108,58,28,73,155,184,75,108,201,133,60,18,199,247,85,86,150,249,245,113,91,157,115,117,181,16,38,34,210,150,151,150,114,246,235,39,221,183,98,253,6,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 776 ") {
    byte_vec_t msg { 97,214,239,198 };
    byte_vec_t sig { 184,215,224,76,212,111,252,92,115,1,220,63,249,217,219,149,69,97,249,47,123,162,168,217,130,242,202,209,155,186,240,1,190,108,213,117,206,196,45,126,210,27,70,55,132,71,187,188,40,58,36,239,53,242,107,163,15,147,250,206,179,4,64,55 };
    byte_vec_t pk { 3,199,180,183,54,229,18,65,245,60,136,242,72,115,235,83,247,127,191,100,123,66,162,25,122,18,125,159,128,69,43,227,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 776 ") {
    byte_vec_t msg { 75,185,144,61 };
    byte_vec_t sig { 123,124,90,196,59,123,243,61,240,97,91,119,98,189,253,117,141,99,252,214,162,7,209,224,42,114,218,153,122,159,207,61,158,204,158,108,130,215,91,105,209,13,70,99,182,156,106,81,33,106,149,139,24,207,108,145,105,21,43,199,27,223,14,173 };
    byte_vec_t pk { 3,20,77,97,156,227,57,57,100,60,210,71,207,170,126,125,42,166,95,13,26,77,237,137,39,124,140,109,87,162,20,187,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 777 ") {
    byte_vec_t msg { 146,1,226,153 };
    byte_vec_t sig { 106,201,255,187,71,15,144,149,185,219,94,215,40,37,41,130,95,36,117,49,47,236,98,135,29,179,47,92,55,16,59,217,171,181,30,88,230,16,166,123,152,101,67,41,89,131,37,237,5,252,227,103,226,0,184,226,228,210,122,202,106,186,205,189 };
    byte_vec_t pk { 4,148,85,72,213,216,65,158,116,71,122,8,65,19,200,21,233,222,238,179,52,50,192,216,125,51,214,98,69,47,171,200,216,223,137,93,154,210,15,141,146,40,161,94,250,33,205,192,2,30,32,49,40,230,187,170,241,102,184,197,76,90,24,191,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 777 ") {
    byte_vec_t msg { 225,87,122,169 };
    byte_vec_t sig { 84,124,129,94,91,186,254,48,72,189,126,143,254,123,26,78,178,31,13,72,181,201,52,179,15,184,232,102,155,26,58,115,215,187,34,12,215,130,243,52,57,79,170,220,67,71,95,224,150,99,231,113,142,96,245,126,73,120,240,34,172,202,162,78 };
    byte_vec_t pk { 4,56,252,35,178,45,101,157,180,198,248,208,109,104,104,164,245,74,149,93,244,253,213,78,51,235,96,57,99,104,60,158,141,77,171,134,40,222,76,241,254,205,55,131,127,86,229,138,63,206,46,19,23,103,195,28,68,10,43,102,102,156,153,230,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 777 ") {
    byte_vec_t msg { 130,18,178,27 };
    byte_vec_t sig { 134,13,224,60,233,198,159,205,22,242,139,35,170,0,203,146,160,140,241,6,229,10,41,52,155,42,151,82,36,252,116,69,55,209,167,173,204,151,128,91,211,141,128,40,75,218,46,113,142,63,71,207,188,129,138,162,196,32,116,1,34,178,130,181 };
    byte_vec_t pk { 2,32,166,177,229,152,165,212,128,191,113,99,53,56,26,107,120,38,208,179,54,114,219,231,124,62,245,209,250,1,48,147,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 777 ") {
    byte_vec_t msg { 187,234,204,149 };
    byte_vec_t sig { 15,13,54,192,218,27,11,147,79,170,6,149,190,224,158,44,169,220,153,142,17,69,220,47,220,241,21,82,182,140,2,207,249,76,30,209,223,146,210,153,209,225,251,182,45,38,187,8,33,41,72,216,51,122,164,66,2,3,32,122,212,101,7,64 };
    byte_vec_t pk { 2,247,99,232,103,18,159,24,224,82,194,86,137,44,232,32,132,107,207,211,124,95,139,174,52,176,27,157,32,106,72,115,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 778 ") {
    byte_vec_t msg { 175,49,12,196 };
    byte_vec_t sig { 150,79,128,85,104,243,115,24,85,152,89,130,179,93,215,55,67,39,202,39,220,224,222,115,54,185,11,3,77,238,214,25,15,136,187,132,99,77,202,129,255,16,93,108,139,247,168,77,255,169,144,188,33,13,17,4,15,190,100,2,62,141,221,208 };
    byte_vec_t pk { 4,15,35,153,108,215,40,201,129,22,104,64,224,224,163,216,9,129,84,223,221,47,147,24,99,109,242,124,6,221,160,176,224,139,118,122,191,230,28,106,123,116,170,157,234,189,124,155,26,194,139,112,36,124,102,153,159,14,203,14,93,246,227,206,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 778 ") {
    byte_vec_t msg { 61,41,70,255 };
    byte_vec_t sig { 133,92,126,126,120,39,96,19,135,145,142,36,191,67,80,230,104,247,78,185,72,131,118,108,174,53,76,151,197,19,234,213,23,246,235,100,240,123,30,63,220,216,93,83,18,38,251,56,15,26,101,86,42,177,165,5,48,250,39,110,201,152,100,239 };
    byte_vec_t pk { 4,116,163,231,29,63,59,105,111,28,182,228,141,43,250,61,218,118,11,45,94,82,197,118,79,45,84,106,40,240,219,16,36,87,57,211,158,229,57,203,250,154,157,188,192,29,63,2,142,189,164,133,56,51,143,231,85,168,95,72,36,225,19,207,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 778 ") {
    byte_vec_t msg { 236,46,212,161 };
    byte_vec_t sig { 17,120,0,218,40,72,236,32,73,181,153,165,157,42,110,9,143,101,124,199,172,102,84,50,71,222,92,162,179,41,99,204,173,221,64,124,27,247,135,122,232,226,119,105,201,191,52,108,228,77,68,138,109,217,53,53,20,131,228,108,6,48,202,182 };
    byte_vec_t pk { 3,146,175,71,145,64,230,53,40,15,102,193,97,243,30,171,98,45,206,8,166,106,73,91,193,197,44,110,19,226,68,159,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 778 ") {
    byte_vec_t msg { 143,53,242,70 };
    byte_vec_t sig { 30,151,171,17,44,221,99,15,13,27,177,136,225,29,174,198,246,68,22,189,64,234,30,248,11,199,128,16,179,77,150,169,195,172,113,17,237,170,114,224,92,132,188,59,122,109,211,143,246,202,81,68,6,15,45,106,14,68,224,168,75,200,224,221 };
    byte_vec_t pk { 3,130,186,78,88,229,194,203,45,175,222,93,239,5,141,201,140,177,212,82,247,207,47,96,41,202,40,220,122,56,8,216,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 779 ") {
    byte_vec_t msg { 255,241,10,196 };
    byte_vec_t sig { 33,187,245,185,233,125,31,236,246,157,75,186,221,217,69,0,113,16,29,110,42,138,221,246,240,49,3,134,228,160,214,34,66,172,159,94,203,215,156,232,72,194,199,178,75,122,246,57,59,177,129,241,118,70,128,33,122,83,27,96,5,28,246,222 };
    byte_vec_t pk { 4,7,249,77,13,102,181,226,42,103,60,141,24,164,166,221,17,2,189,39,184,245,140,26,255,48,198,81,249,62,184,64,151,156,245,27,202,179,199,187,8,217,178,178,45,229,143,10,142,39,182,88,197,107,224,127,111,151,161,79,49,205,189,205,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 779 ") {
    byte_vec_t msg { 67,117,206,22 };
    byte_vec_t sig { 153,213,100,159,204,148,214,209,209,73,79,18,141,183,147,110,120,212,175,178,51,176,62,1,229,97,9,178,18,42,195,234,87,229,228,3,36,230,118,228,128,32,216,85,255,79,123,197,34,68,36,116,215,172,171,48,0,185,20,66,232,96,173,188 };
    byte_vec_t pk { 4,44,250,164,229,22,160,19,61,32,4,109,158,183,45,215,148,125,145,192,83,219,232,170,60,60,226,12,98,199,127,133,49,61,77,16,150,125,117,241,127,125,253,28,109,222,210,197,143,26,114,7,194,20,164,13,146,80,149,76,15,250,108,123,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 779 ") {
    byte_vec_t msg { 224,232,38,24 };
    byte_vec_t sig { 57,118,104,13,157,142,85,4,212,101,233,160,101,174,103,82,164,224,12,195,179,10,112,85,32,156,251,89,163,212,180,98,134,49,197,138,185,189,107,26,0,146,9,124,221,167,128,48,24,175,206,98,191,98,236,34,101,206,28,177,235,18,61,122 };
    byte_vec_t pk { 3,151,55,255,220,5,15,242,155,49,4,1,184,169,61,90,189,18,71,37,71,194,70,34,238,161,89,126,21,135,154,40,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 779 ") {
    byte_vec_t msg { 84,239,127,209 };
    byte_vec_t sig { 253,196,121,250,55,196,255,35,47,24,220,101,228,63,32,52,33,253,121,63,1,76,2,170,185,71,212,238,224,138,107,176,148,130,132,144,189,138,223,79,212,137,185,212,169,234,114,201,49,44,210,147,46,182,251,113,64,56,238,100,171,19,52,216 };
    byte_vec_t pk { 2,116,116,6,5,74,252,52,216,21,39,202,105,114,179,112,234,222,136,10,186,245,107,90,33,11,90,16,255,135,115,47,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 780 ") {
    byte_vec_t msg { 163,25,169,68 };
    byte_vec_t sig { 11,0,3,124,134,54,136,255,117,18,30,203,156,84,84,234,204,253,106,71,69,151,6,145,161,232,216,43,88,123,103,57,215,23,115,245,37,150,8,185,250,216,177,150,60,71,12,250,233,208,53,105,190,33,49,194,26,80,237,76,249,30,45,13 };
    byte_vec_t pk { 4,228,221,4,114,13,200,43,14,110,134,83,108,128,154,177,255,133,118,28,117,124,49,169,209,93,74,184,1,10,116,192,152,120,43,85,58,148,190,15,225,175,180,207,241,103,14,235,118,18,51,246,73,58,78,221,156,135,85,53,148,227,7,103,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 780 ") {
    byte_vec_t msg { 218,59,180,252 };
    byte_vec_t sig { 13,177,180,149,123,152,73,106,142,234,93,248,58,110,29,193,23,117,52,98,91,160,141,63,198,41,15,192,216,174,211,229,99,124,10,4,241,53,251,117,195,225,191,14,37,188,224,197,29,42,241,221,253,79,227,157,208,116,184,99,110,84,41,206 };
    byte_vec_t pk { 4,241,103,155,36,82,146,131,227,108,253,63,198,174,78,116,216,223,198,118,111,60,25,160,75,253,3,178,131,80,146,42,217,74,247,200,88,167,65,31,221,230,111,85,80,157,89,117,238,210,3,248,223,30,53,59,29,96,231,144,2,43,44,215,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 780 ") {
    byte_vec_t msg { 163,14,83,44 };
    byte_vec_t sig { 79,40,23,154,235,198,4,189,240,253,18,169,119,77,64,183,5,60,122,137,240,201,109,236,142,83,239,135,49,57,199,58,138,46,104,0,207,172,187,130,153,244,213,3,249,194,37,90,250,140,119,61,42,20,176,195,128,0,31,79,172,50,207,165 };
    byte_vec_t pk { 2,4,239,191,156,235,207,249,121,134,229,172,196,220,216,240,245,250,181,75,78,139,137,82,29,244,127,13,104,100,176,210,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 780 ") {
    byte_vec_t msg { 131,11,143,89 };
    byte_vec_t sig { 108,66,65,189,139,196,171,170,69,214,79,43,1,241,177,72,229,185,104,47,199,246,250,145,1,62,140,248,34,157,84,173,1,248,112,114,108,34,255,17,178,67,124,60,4,6,5,162,2,18,23,191,185,150,137,199,147,183,4,39,184,5,34,75 };
    byte_vec_t pk { 3,73,142,14,56,167,57,69,187,180,150,184,79,186,163,239,148,86,139,190,126,237,2,109,57,179,116,28,199,106,113,58,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 781 ") {
    byte_vec_t msg { 212,56,180,38 };
    byte_vec_t sig { 255,83,73,26,187,54,12,144,103,56,141,220,237,195,157,244,178,13,70,36,67,218,5,71,213,203,178,105,220,233,42,11,221,128,178,14,64,183,2,67,183,250,173,128,156,148,199,76,5,73,171,164,243,249,33,49,42,145,89,179,61,19,188,252 };
    byte_vec_t pk { 4,51,204,51,64,88,138,83,74,140,43,61,56,75,252,25,70,129,202,3,211,16,70,194,14,20,128,126,159,83,205,51,218,22,167,229,85,4,59,189,4,119,106,190,138,134,37,250,58,156,32,149,237,201,73,32,109,63,114,57,36,192,139,39,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 781 ") {
    byte_vec_t msg { 25,31,225,6 };
    byte_vec_t sig { 164,190,180,50,32,21,12,14,51,101,61,169,216,150,161,181,237,194,238,223,56,54,156,104,27,237,105,219,202,66,3,135,239,9,196,78,0,183,214,157,172,253,130,158,131,174,11,136,12,118,53,10,160,49,112,245,207,159,60,215,185,213,6,91 };
    byte_vec_t pk { 4,50,96,168,110,142,147,250,77,10,116,227,118,185,249,137,179,40,129,217,39,36,19,187,188,192,232,192,67,75,18,45,80,230,94,175,25,124,12,85,25,16,227,164,85,155,103,62,112,207,252,54,94,11,4,18,152,18,108,144,48,139,81,252,184 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 781 ") {
    byte_vec_t msg { 23,12,48,210 };
    byte_vec_t sig { 253,201,32,157,53,41,63,151,59,91,113,124,45,40,53,35,28,54,101,113,114,178,110,91,8,204,65,229,80,116,68,11,231,219,16,118,12,126,246,67,216,204,178,186,120,98,29,170,173,208,186,238,238,124,87,175,16,187,14,124,64,180,180,128 };
    byte_vec_t pk { 3,251,49,184,204,10,106,77,140,133,88,135,253,136,46,82,186,144,212,88,104,146,65,124,179,127,17,190,91,6,69,131,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 781 ") {
    byte_vec_t msg { 36,13,97,44 };
    byte_vec_t sig { 15,68,0,35,251,81,214,179,119,210,122,185,76,40,6,162,75,1,122,27,113,183,50,239,88,64,104,124,161,206,115,18,162,54,39,41,121,136,246,89,193,163,119,6,246,76,215,40,71,70,138,185,134,33,26,173,228,203,229,107,149,162,89,24 };
    byte_vec_t pk { 3,21,52,244,153,137,224,85,201,116,129,93,86,139,169,111,100,10,87,152,135,136,211,234,233,151,12,230,60,67,2,10,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 782 ") {
    byte_vec_t msg { 150,142,235,119 };
    byte_vec_t sig { 78,118,31,212,19,71,175,243,5,79,224,200,99,183,132,238,194,33,115,180,133,60,220,199,171,89,138,86,11,184,223,236,136,220,107,37,29,249,200,172,107,236,103,35,81,193,173,29,8,21,13,64,147,9,20,110,138,240,193,237,79,213,253,224 };
    byte_vec_t pk { 4,186,64,42,124,146,125,180,216,226,42,126,181,42,9,236,114,72,248,92,37,10,68,242,187,186,142,189,198,180,244,86,83,34,44,38,44,243,136,226,123,121,176,217,248,152,155,89,131,229,49,41,246,210,172,165,194,235,169,143,3,229,180,185,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 782 ") {
    byte_vec_t msg { 181,36,113,104 };
    byte_vec_t sig { 177,87,172,154,90,188,149,137,251,133,84,81,69,161,196,237,109,46,201,114,104,46,188,53,250,42,121,100,178,93,232,64,41,164,85,136,242,28,111,245,178,188,136,36,17,73,145,186,147,51,87,4,160,248,128,149,1,107,202,0,122,227,161,226 };
    byte_vec_t pk { 4,238,191,182,97,81,93,62,62,120,192,55,192,203,35,101,196,112,186,169,119,218,149,125,96,227,24,124,186,31,155,247,250,251,139,194,200,168,198,248,219,71,29,229,109,177,210,227,240,11,235,111,72,25,241,229,248,48,107,223,204,58,95,146,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 782 ") {
    byte_vec_t msg { 45,212,78,29 };
    byte_vec_t sig { 117,144,49,166,176,198,249,138,105,4,11,97,110,241,137,153,73,228,43,232,62,13,77,49,76,236,209,50,196,197,83,24,112,168,41,137,249,241,59,238,233,181,214,251,177,208,82,212,212,123,195,255,102,62,250,139,107,43,214,13,153,141,25,176 };
    byte_vec_t pk { 2,253,176,96,225,159,194,3,153,105,11,95,72,186,154,108,200,145,190,254,197,211,1,1,101,52,94,148,150,112,159,41,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 782 ") {
    byte_vec_t msg { 192,30,196,206 };
    byte_vec_t sig { 83,2,129,189,164,17,103,46,27,133,141,131,92,75,103,41,38,64,77,128,198,129,177,151,246,104,55,169,32,133,83,100,119,158,12,178,192,242,12,246,31,138,83,23,72,251,226,226,203,109,94,52,102,102,120,228,171,89,101,230,225,138,25,169 };
    byte_vec_t pk { 3,47,151,18,139,125,222,166,24,38,146,131,3,33,32,165,145,215,132,166,131,254,11,53,153,41,37,3,246,57,241,207,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 783 ") {
    byte_vec_t msg { 111,20,15,72 };
    byte_vec_t sig { 201,66,42,1,210,75,130,37,199,251,3,69,75,89,63,223,222,228,50,115,179,254,213,221,175,140,244,63,63,245,74,254,136,119,25,34,180,155,49,192,190,214,65,214,66,191,168,45,133,69,93,225,46,28,243,19,101,180,189,115,55,155,173,150 };
    byte_vec_t pk { 4,243,47,106,150,51,85,220,201,137,27,0,44,240,154,179,147,157,255,189,56,158,167,151,170,134,162,91,124,29,204,226,115,136,187,58,114,192,221,104,188,74,35,62,110,84,77,46,86,189,124,63,65,98,187,182,38,239,182,71,155,51,5,83,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 783 ") {
    byte_vec_t msg { 198,25,224,36 };
    byte_vec_t sig { 228,214,124,222,176,99,205,166,76,171,142,122,176,23,78,113,205,83,173,75,194,112,63,61,202,148,108,134,221,195,156,50,219,23,93,45,232,28,111,144,0,16,206,240,99,115,123,103,84,117,187,253,47,56,153,235,144,151,92,19,187,145,107,48 };
    byte_vec_t pk { 4,64,164,194,91,206,178,123,226,170,241,23,222,96,41,219,183,180,231,165,8,88,90,19,185,215,181,164,197,56,188,77,160,105,23,38,16,109,88,230,113,162,49,64,0,185,99,112,91,177,3,108,223,67,93,66,21,108,104,184,107,248,147,233,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 783 ") {
    byte_vec_t msg { 167,96,60,107 };
    byte_vec_t sig { 151,222,239,137,145,129,121,201,115,253,61,109,173,134,11,246,191,186,142,177,201,115,247,238,94,249,187,243,244,89,156,13,188,129,153,132,123,164,31,15,6,83,203,171,173,128,110,202,213,233,172,91,84,12,73,99,117,229,32,75,179,16,25,113 };
    byte_vec_t pk { 2,192,247,133,42,56,200,216,192,31,98,151,63,185,63,97,5,74,34,156,252,169,239,5,89,92,146,177,195,141,54,38,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 783 ") {
    byte_vec_t msg { 210,57,202,33 };
    byte_vec_t sig { 83,84,165,153,38,155,19,13,248,51,7,1,2,52,70,174,178,1,87,16,182,45,99,42,20,23,174,131,79,163,95,27,220,40,61,84,106,178,43,111,179,45,32,210,38,233,28,18,246,159,137,217,191,5,193,40,71,68,141,64,132,246,254,185 };
    byte_vec_t pk { 3,51,250,18,196,65,255,90,46,225,132,159,250,223,254,236,123,49,127,224,122,237,161,111,242,114,254,139,160,160,183,228,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 784 ") {
    byte_vec_t msg { 202,45,150,43 };
    byte_vec_t sig { 35,105,45,112,20,246,67,125,134,180,40,82,154,77,65,59,14,42,128,44,101,4,7,167,87,211,168,206,35,78,69,156,11,11,119,9,249,10,157,214,229,206,201,16,36,239,130,83,206,182,126,93,190,111,149,111,36,27,203,138,1,13,137,142 };
    byte_vec_t pk { 4,157,241,233,233,219,131,1,181,196,244,104,35,52,140,89,10,55,50,166,11,66,65,149,129,232,22,77,184,27,163,249,198,132,86,157,77,177,77,98,138,93,65,242,186,169,62,236,205,190,196,198,65,116,106,122,233,0,2,158,27,89,15,238,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 784 ") {
    byte_vec_t msg { 13,100,225,110 };
    byte_vec_t sig { 190,229,56,154,165,163,134,243,136,101,217,227,30,95,249,103,125,20,132,20,189,62,72,127,165,87,18,52,230,185,171,60,146,58,66,142,177,131,142,109,96,200,33,129,154,238,236,177,125,197,7,90,87,219,90,231,255,158,183,169,167,61,15,80 };
    byte_vec_t pk { 4,145,251,236,73,130,157,207,238,46,31,42,244,166,207,13,124,21,193,110,10,235,198,136,198,176,219,168,135,110,124,97,125,252,244,250,253,205,148,69,91,93,167,125,20,30,186,60,234,213,71,31,203,20,182,250,3,185,12,70,103,219,111,39,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 784 ") {
    byte_vec_t msg { 187,237,6,187 };
    byte_vec_t sig { 21,102,58,28,27,176,59,140,47,203,124,163,187,74,40,215,49,1,136,206,119,163,36,28,75,2,113,202,107,33,178,210,160,153,253,244,161,149,96,154,55,73,229,233,10,125,232,107,240,244,149,114,205,26,255,185,25,18,89,4,180,183,174,51 };
    byte_vec_t pk { 3,89,60,82,123,111,253,106,66,35,44,220,94,150,42,136,200,254,18,250,50,80,10,149,80,193,88,251,159,35,123,127,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 784 ") {
    byte_vec_t msg { 107,80,31,120 };
    byte_vec_t sig { 200,157,243,78,80,182,9,255,135,102,137,33,237,33,229,36,28,52,136,11,255,45,218,8,40,56,250,151,177,245,41,4,17,211,143,27,42,204,217,209,245,152,108,16,175,234,21,147,144,13,145,36,176,102,71,112,209,111,218,0,112,121,11,91 };
    byte_vec_t pk { 3,244,69,56,148,26,216,205,8,5,236,247,111,181,161,125,163,109,16,94,104,175,140,212,186,113,81,188,122,195,131,74,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 785 ") {
    byte_vec_t msg { 150,38,30,188 };
    byte_vec_t sig { 148,4,121,236,43,115,161,34,189,68,171,135,31,109,170,242,42,9,211,227,192,207,173,183,49,127,89,107,221,84,235,154,81,188,110,229,251,184,61,187,50,141,134,37,60,226,44,41,183,65,231,234,100,132,235,16,35,87,168,19,158,143,204,5 };
    byte_vec_t pk { 4,95,119,180,196,105,112,96,0,154,122,21,237,115,18,104,204,64,101,234,79,162,224,206,219,223,148,173,117,33,70,117,187,53,177,8,79,248,12,87,180,78,148,19,139,191,180,64,7,25,17,110,218,186,239,116,174,70,213,94,47,211,26,118,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 785 ") {
    byte_vec_t msg { 53,239,135,60 };
    byte_vec_t sig { 146,224,2,18,212,240,169,12,105,28,170,72,71,21,79,10,21,199,50,182,227,5,17,206,95,4,198,87,50,150,152,221,146,95,243,246,170,182,54,10,249,175,186,147,118,195,112,239,6,68,65,183,111,222,58,188,83,159,139,247,31,170,36,125 };
    byte_vec_t pk { 4,151,65,114,41,110,162,112,16,247,17,21,68,24,167,32,118,63,56,156,110,14,57,48,223,60,136,140,15,188,34,152,211,155,90,132,149,171,85,56,133,26,125,94,46,204,74,49,79,90,187,1,65,34,14,16,46,127,37,24,75,219,99,99,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 785 ") {
    byte_vec_t msg { 18,76,1,170 };
    byte_vec_t sig { 135,17,112,243,49,209,134,79,57,199,198,181,67,106,173,129,183,73,3,100,113,247,64,210,96,80,67,20,12,99,167,171,213,87,4,68,243,11,180,154,216,218,160,56,105,19,119,61,62,38,110,65,54,122,64,30,195,241,111,221,107,159,228,123 };
    byte_vec_t pk { 2,9,190,89,173,140,132,120,141,147,88,174,61,172,233,212,5,171,57,210,193,122,110,112,248,71,141,59,42,170,215,33,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 785 ") {
    byte_vec_t msg { 90,92,8,76 };
    byte_vec_t sig { 86,173,233,217,77,27,14,149,65,163,253,166,233,48,190,107,73,10,180,155,201,91,223,180,17,79,152,53,251,17,222,254,127,156,148,61,212,37,255,1,224,115,233,190,8,222,25,7,205,247,39,127,154,47,131,126,6,28,255,176,98,20,5,201 };
    byte_vec_t pk { 3,142,47,173,215,246,116,10,35,211,240,217,254,215,135,8,153,138,193,150,188,54,228,149,91,84,27,35,133,113,2,124,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 786 ") {
    byte_vec_t msg { 206,76,86,151 };
    byte_vec_t sig { 190,150,153,206,149,130,51,172,246,86,79,139,16,74,23,253,251,246,70,174,9,50,110,180,36,252,15,122,41,65,112,224,44,198,55,189,5,195,111,129,133,55,144,84,233,82,84,97,31,117,2,141,18,40,225,158,109,219,190,60,214,97,224,82 };
    byte_vec_t pk { 4,83,229,212,197,149,213,253,250,73,108,112,212,142,193,190,169,66,11,236,171,33,29,135,60,5,145,155,229,201,114,91,198,131,211,61,41,76,221,58,26,196,222,218,161,152,114,39,163,175,5,164,2,102,19,134,188,114,30,74,111,86,247,248,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 786 ") {
    byte_vec_t msg { 253,207,33,170 };
    byte_vec_t sig { 87,125,91,110,119,200,49,199,177,219,112,80,19,144,216,56,88,211,209,63,70,224,92,50,100,124,3,120,82,61,202,5,155,128,41,212,237,29,234,132,217,254,184,75,96,3,68,139,32,212,123,125,95,0,150,199,242,37,145,135,38,7,163,213 };
    byte_vec_t pk { 4,175,216,58,124,49,61,39,76,87,244,57,6,184,216,220,110,210,213,111,199,10,104,14,181,185,253,129,116,45,66,60,135,133,99,79,183,150,203,33,59,14,169,172,47,1,125,48,114,64,167,82,26,119,128,187,119,243,190,148,79,226,82,221,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 786 ") {
    byte_vec_t msg { 223,226,214,89 };
    byte_vec_t sig { 1,52,18,88,74,226,214,11,167,230,98,94,219,32,77,9,165,246,88,52,241,225,48,189,77,222,18,72,97,176,203,165,96,64,54,230,45,188,77,110,116,68,103,195,26,90,9,69,103,161,86,60,190,9,189,133,43,179,197,206,165,189,55,191 };
    byte_vec_t pk { 2,89,61,81,203,30,237,20,13,167,146,33,40,196,36,227,48,79,26,46,72,182,215,117,162,120,105,42,164,120,91,106,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 786 ") {
    byte_vec_t msg { 166,168,16,206 };
    byte_vec_t sig { 130,185,215,62,50,72,218,164,236,151,118,244,12,54,94,85,173,76,72,72,252,145,22,87,37,29,43,188,199,79,21,218,53,116,15,68,80,209,96,15,119,225,41,218,155,143,114,240,38,186,66,151,182,105,185,14,66,224,107,150,122,166,66,169 };
    byte_vec_t pk { 2,157,214,200,50,251,76,86,34,125,52,3,175,121,15,154,81,205,106,19,130,216,224,139,94,191,18,207,122,13,222,163,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 787 ") {
    byte_vec_t msg { 101,55,255,71 };
    byte_vec_t sig { 210,240,62,1,80,69,248,140,226,130,216,224,143,21,20,110,25,49,247,10,156,150,210,49,130,96,61,198,13,29,156,69,7,58,127,136,197,214,240,253,211,34,60,250,236,69,228,124,218,221,142,144,180,235,111,72,61,64,180,189,43,118,161,252 };
    byte_vec_t pk { 4,91,251,118,202,249,141,89,102,209,13,166,48,251,123,75,53,167,24,183,28,157,130,148,83,26,86,151,7,97,34,70,58,77,87,217,154,121,174,219,154,207,58,218,91,114,25,180,255,250,215,4,141,196,136,38,244,172,169,222,248,143,119,212,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 787 ") {
    byte_vec_t msg { 90,63,156,210 };
    byte_vec_t sig { 191,165,147,238,161,231,81,115,215,11,127,187,119,187,74,170,219,14,12,174,200,44,85,238,54,126,136,148,56,157,237,78,70,224,28,251,158,0,1,88,87,180,203,143,95,204,114,234,172,167,116,214,229,145,194,244,47,65,77,109,19,61,64,19 };
    byte_vec_t pk { 4,13,178,99,8,206,136,51,50,102,176,207,141,9,186,254,8,205,112,216,122,213,58,86,78,118,163,40,125,32,159,232,227,7,111,37,132,101,166,19,8,37,158,244,245,26,200,71,142,16,186,196,16,103,66,109,83,246,71,217,115,180,125,216,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 787 ") {
    byte_vec_t msg { 47,255,155,17 };
    byte_vec_t sig { 162,226,1,7,43,29,166,52,99,249,34,134,139,23,233,174,140,12,216,49,46,188,148,183,61,40,162,167,6,135,136,42,234,202,236,162,106,48,133,42,13,149,12,117,7,174,67,191,177,28,113,229,79,175,36,119,97,83,77,211,197,79,40,46 };
    byte_vec_t pk { 3,141,48,251,77,197,201,37,160,205,5,207,201,31,246,240,116,108,88,157,90,67,163,18,156,113,124,247,123,188,37,60,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 787 ") {
    byte_vec_t msg { 25,229,170,119 };
    byte_vec_t sig { 134,189,198,127,129,124,172,84,7,92,99,251,213,127,123,77,254,92,227,159,47,236,65,131,250,79,168,212,184,225,107,83,24,216,118,81,140,207,42,139,87,166,238,44,248,88,46,35,11,105,11,88,223,64,184,0,26,183,47,112,191,88,254,36 };
    byte_vec_t pk { 3,94,122,41,61,120,86,0,147,130,35,115,151,133,35,216,245,130,240,103,90,240,147,98,244,63,46,42,57,232,20,129,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 788 ") {
    byte_vec_t msg { 75,49,38,56 };
    byte_vec_t sig { 183,215,74,73,8,89,152,44,246,117,219,103,188,209,32,2,171,230,94,246,60,124,36,67,172,163,44,139,247,84,233,65,196,65,2,171,188,206,28,28,44,58,56,3,42,64,213,99,209,191,81,222,123,75,26,218,198,81,45,153,94,58,137,107 };
    byte_vec_t pk { 4,193,223,227,134,140,133,111,108,7,197,177,133,27,11,103,1,156,28,172,22,254,245,22,113,252,35,135,116,253,203,228,152,23,237,172,162,41,52,242,63,153,24,130,55,229,231,221,28,14,114,89,205,92,41,58,176,189,45,117,234,195,62,173,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 788 ") {
    byte_vec_t msg { 118,242,246,179 };
    byte_vec_t sig { 86,186,57,214,214,171,165,223,199,93,47,249,36,110,35,150,161,145,228,19,11,171,135,94,22,201,27,138,169,81,64,218,104,200,8,2,155,232,152,128,223,163,15,225,160,86,211,110,30,99,192,0,156,117,245,184,211,125,127,146,11,180,22,149 };
    byte_vec_t pk { 4,140,11,142,244,21,143,73,14,10,139,106,31,61,234,3,74,213,98,254,118,143,110,145,15,133,28,176,56,191,144,113,175,108,218,239,65,3,79,72,205,68,241,31,193,194,210,9,224,101,105,77,145,226,240,143,248,91,201,35,229,252,42,180,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 788 ") {
    byte_vec_t msg { 41,234,238,155 };
    byte_vec_t sig { 184,90,205,216,145,223,100,111,176,56,23,186,196,26,55,212,161,48,173,120,165,67,138,207,189,93,42,56,100,236,241,83,102,112,209,75,45,168,191,235,80,141,56,235,239,49,33,150,93,163,251,139,176,197,35,148,41,244,138,70,216,195,168,45 };
    byte_vec_t pk { 3,202,205,4,13,221,144,110,200,11,33,163,99,133,212,63,111,189,45,104,16,67,6,178,108,166,92,224,112,91,113,253,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 788 ") {
    byte_vec_t msg { 208,179,47,4 };
    byte_vec_t sig { 175,166,193,45,86,190,57,63,171,3,212,120,8,9,155,148,190,173,240,207,89,4,190,133,145,10,196,92,239,139,140,171,88,234,136,255,198,177,160,111,120,122,8,235,3,131,19,59,62,85,52,156,19,218,17,2,31,100,36,33,202,122,114,46 };
    byte_vec_t pk { 3,9,242,69,178,151,100,227,84,167,54,234,14,196,177,233,56,112,173,84,24,21,226,117,52,159,84,55,28,77,131,104,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 789 ") {
    byte_vec_t msg { 87,230,98,136 };
    byte_vec_t sig { 129,31,20,168,35,76,243,118,90,80,33,170,44,188,121,79,128,10,80,32,94,135,232,206,73,117,194,33,251,167,24,105,27,238,80,71,35,212,36,195,240,88,148,255,237,83,25,54,131,133,69,7,128,147,194,238,240,207,198,42,35,249,24,22 };
    byte_vec_t pk { 4,183,152,174,238,191,176,111,207,203,204,254,103,255,118,35,170,205,53,57,35,148,248,109,89,155,187,38,235,3,73,71,28,126,235,40,236,108,184,174,227,111,189,192,55,254,136,192,152,184,99,73,149,63,180,221,64,32,141,244,251,1,249,251,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 789 ") {
    byte_vec_t msg { 5,62,194,86 };
    byte_vec_t sig { 243,144,103,40,108,149,100,26,38,220,21,120,71,82,137,124,177,232,60,209,124,51,202,181,223,24,156,146,236,220,144,151,59,245,40,79,69,135,205,159,119,31,62,234,135,191,28,155,53,237,3,104,43,26,137,55,54,40,195,184,52,196,8,103 };
    byte_vec_t pk { 4,92,237,63,185,147,129,126,212,96,132,211,135,65,198,255,240,18,216,154,139,234,242,196,138,27,35,204,0,195,80,242,194,220,78,59,164,71,197,171,46,138,41,126,237,214,86,245,10,160,244,65,105,130,200,45,77,129,113,20,240,167,33,46,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 789 ") {
    byte_vec_t msg { 240,128,152,238 };
    byte_vec_t sig { 194,151,116,105,252,37,231,28,41,250,44,230,19,44,122,48,135,168,62,65,200,116,215,160,169,128,54,84,72,115,165,126,250,201,247,168,130,30,32,43,4,79,231,136,114,129,114,20,173,233,235,30,22,216,229,113,231,195,113,179,57,96,183,147 };
    byte_vec_t pk { 3,164,176,98,32,248,255,0,207,177,153,78,113,207,168,187,36,10,107,63,37,115,54,237,183,253,111,15,211,241,173,22,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 789 ") {
    byte_vec_t msg { 166,242,234,213 };
    byte_vec_t sig { 125,85,192,136,0,198,205,49,19,126,4,220,149,122,1,202,230,29,242,158,81,149,11,51,86,187,97,252,130,92,216,158,231,188,4,1,55,6,109,4,108,200,245,57,200,48,111,139,114,251,144,206,167,211,82,67,123,248,51,242,129,153,215,142 };
    byte_vec_t pk { 2,56,26,134,49,211,12,159,253,181,14,93,32,17,43,230,224,156,2,176,230,87,226,241,161,222,215,20,14,144,40,122,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 790 ") {
    byte_vec_t msg { 5,168,71,87 };
    byte_vec_t sig { 44,158,253,49,252,26,236,242,244,127,17,69,73,115,203,208,135,178,116,126,65,28,169,155,180,235,77,95,251,180,6,97,168,72,195,205,4,24,51,245,161,204,116,58,230,59,124,168,242,172,249,183,246,201,158,183,182,226,127,14,105,126,229,246 };
    byte_vec_t pk { 4,239,227,182,135,95,237,121,215,182,213,101,162,144,206,188,224,244,221,189,168,50,177,48,210,251,75,49,198,166,93,45,233,83,238,122,95,189,217,229,250,149,205,20,195,127,72,19,5,18,52,254,154,205,201,132,69,223,123,63,136,12,192,253,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 790 ") {
    byte_vec_t msg { 218,244,215,117 };
    byte_vec_t sig { 119,224,200,109,84,53,113,252,50,231,85,97,84,22,230,97,136,169,191,76,32,0,76,121,77,183,8,208,254,72,234,104,51,121,50,212,42,103,97,126,221,167,61,227,105,27,111,2,93,41,205,104,68,142,42,132,225,6,57,157,208,9,27,176 };
    byte_vec_t pk { 4,22,82,232,92,248,206,146,50,41,154,72,210,17,180,45,173,45,205,227,175,27,28,74,43,252,204,31,145,86,101,127,49,29,33,14,113,1,101,12,14,58,255,204,30,40,77,126,92,67,83,47,164,164,247,243,67,164,0,19,119,80,249,173,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 790 ") {
    byte_vec_t msg { 87,142,167,155 };
    byte_vec_t sig { 155,129,220,139,196,226,13,141,73,178,101,162,20,29,137,120,99,145,96,169,4,217,165,106,202,31,234,148,252,231,67,158,44,253,192,24,50,1,147,132,171,65,42,75,211,183,49,55,206,45,87,193,65,32,7,237,35,216,49,16,229,234,134,13 };
    byte_vec_t pk { 2,30,56,129,148,166,162,255,28,11,44,54,37,16,193,101,124,231,62,179,241,90,237,151,107,117,175,184,117,82,25,76,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 790 ") {
    byte_vec_t msg { 200,24,65,44 };
    byte_vec_t sig { 29,40,54,90,246,220,117,20,188,43,79,29,0,140,133,183,73,30,178,155,227,99,143,182,98,6,14,44,6,254,236,138,47,114,133,250,228,38,16,11,5,18,200,163,99,31,6,63,175,79,183,50,157,86,184,14,83,6,225,161,93,10,201,233 };
    byte_vec_t pk { 3,160,77,65,76,223,10,115,107,214,87,29,55,110,92,233,123,130,75,90,193,192,234,22,227,235,147,34,181,78,198,129,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 791 ") {
    byte_vec_t msg { 19,51,135,10 };
    byte_vec_t sig { 230,130,96,251,125,173,193,56,69,130,94,230,217,230,195,103,92,141,246,131,143,120,73,119,23,247,206,130,179,147,243,130,26,143,36,5,202,190,104,196,42,133,166,49,181,52,114,64,35,191,192,168,50,33,90,198,99,255,117,88,144,227,171,83 };
    byte_vec_t pk { 4,188,172,52,143,231,215,138,167,93,86,185,35,14,221,46,102,76,214,35,137,22,82,128,178,110,154,147,98,23,198,163,6,122,10,43,102,166,249,226,25,159,37,134,248,244,170,40,162,32,120,162,187,219,162,43,244,248,208,193,188,132,213,51,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 791 ") {
    byte_vec_t msg { 46,112,168,248 };
    byte_vec_t sig { 253,118,231,115,68,82,156,223,110,37,76,20,16,49,49,240,98,101,246,150,93,102,61,148,7,180,207,85,142,181,207,113,95,243,117,91,30,212,211,199,232,219,128,112,93,39,67,180,42,6,226,197,207,146,115,138,68,191,147,200,99,254,207,108 };
    byte_vec_t pk { 4,232,58,174,9,109,193,223,166,195,30,48,89,162,170,151,171,246,140,26,248,134,106,10,54,76,68,236,123,212,62,37,28,245,25,249,100,163,142,130,124,129,231,233,219,89,218,2,163,55,208,134,216,15,189,241,157,34,19,189,156,144,77,95,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 791 ") {
    byte_vec_t msg { 223,153,66,200 };
    byte_vec_t sig { 4,81,83,51,166,217,65,165,204,29,56,170,90,141,65,202,53,85,226,160,54,34,107,69,205,88,87,125,105,84,155,52,8,116,160,237,50,131,117,26,233,221,62,8,16,10,84,246,16,124,250,98,165,59,229,86,81,170,7,4,218,228,108,171 };
    byte_vec_t pk { 3,58,145,29,83,20,229,195,138,123,224,20,205,11,1,251,208,155,32,79,57,30,163,119,135,183,232,55,69,201,49,63,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 791 ") {
    byte_vec_t msg { 139,176,93,175 };
    byte_vec_t sig { 125,98,15,44,164,182,10,109,122,151,98,158,28,13,88,44,221,61,199,112,195,87,103,13,219,134,181,206,6,197,91,152,221,70,242,131,248,145,174,238,137,240,184,204,31,13,102,112,133,63,8,186,143,218,204,33,15,128,147,241,113,67,214,19 };
    byte_vec_t pk { 3,111,73,242,7,123,15,33,213,39,115,28,64,252,85,43,229,21,232,20,21,204,5,207,14,254,160,34,121,171,140,243,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 792 ") {
    byte_vec_t msg { 239,183,97,199 };
    byte_vec_t sig { 206,118,9,51,118,81,131,68,201,20,248,60,189,184,152,225,168,17,229,71,32,99,148,46,130,23,230,165,230,86,175,34,97,94,147,145,251,16,3,219,225,191,189,241,74,90,166,38,216,194,250,186,191,228,61,29,176,39,114,26,69,43,74,191 };
    byte_vec_t pk { 4,206,19,235,159,187,177,148,160,191,154,9,149,152,209,165,198,209,148,22,11,77,116,140,145,160,136,4,231,89,123,168,213,204,230,65,73,137,127,182,99,210,120,165,69,93,205,53,170,58,168,92,51,114,225,44,76,113,225,63,28,139,123,39,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 792 ") {
    byte_vec_t msg { 141,59,226,26 };
    byte_vec_t sig { 133,236,115,249,148,112,4,32,120,13,206,47,174,250,173,250,130,237,173,0,101,70,2,37,20,102,92,76,122,124,37,94,111,80,58,50,27,182,132,242,188,253,131,252,122,80,222,204,138,117,79,184,167,185,168,100,15,191,101,26,5,202,115,177 };
    byte_vec_t pk { 4,202,191,13,246,252,148,76,110,96,84,203,212,194,6,114,216,42,204,251,76,228,235,225,4,126,9,9,91,129,149,207,23,139,85,195,249,154,8,204,85,214,226,15,81,141,4,148,75,177,63,107,207,141,8,205,35,239,151,190,236,135,120,3,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 792 ") {
    byte_vec_t msg { 236,99,88,64 };
    byte_vec_t sig { 195,114,136,114,106,193,60,142,72,57,137,58,38,21,39,225,241,106,206,10,177,229,107,230,104,3,132,9,42,236,76,236,162,91,212,211,132,181,155,91,208,168,219,81,206,211,230,254,115,22,239,48,168,250,166,164,250,156,37,70,56,148,153,20 };
    byte_vec_t pk { 3,142,112,135,95,155,51,40,113,83,35,115,59,46,80,33,131,152,132,127,98,77,40,129,130,186,50,192,249,221,96,206,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 792 ") {
    byte_vec_t msg { 217,19,152,37 };
    byte_vec_t sig { 157,34,2,7,70,203,131,36,241,93,196,121,43,215,215,34,117,179,66,83,169,5,181,164,238,7,136,245,11,26,242,221,217,130,71,31,188,138,88,82,226,215,5,4,115,50,242,68,75,197,168,31,208,12,194,133,1,121,99,114,138,189,99,240 };
    byte_vec_t pk { 3,164,57,107,238,84,217,122,118,144,8,160,111,228,20,232,13,34,54,159,43,110,100,224,199,154,131,237,128,138,131,181,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 793 ") {
    byte_vec_t msg { 5,167,184,5 };
    byte_vec_t sig { 98,240,17,70,187,56,233,119,40,99,171,12,12,48,198,15,172,137,58,191,227,58,11,205,201,216,188,33,9,102,211,80,180,9,108,112,154,235,254,25,185,213,135,46,32,114,2,162,201,18,145,173,101,219,227,179,243,62,101,48,21,250,4,150 };
    byte_vec_t pk { 4,51,2,215,78,226,172,208,67,182,178,203,191,200,121,166,251,147,86,11,235,152,255,211,3,44,146,223,25,70,19,119,230,62,39,185,162,217,164,32,101,70,75,62,233,110,40,186,65,132,70,237,70,198,5,41,201,57,201,150,202,177,71,119,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 793 ") {
    byte_vec_t msg { 242,205,77,30 };
    byte_vec_t sig { 201,230,70,147,200,65,239,197,246,174,204,236,197,12,83,209,74,10,170,145,78,82,91,209,78,214,243,128,204,195,248,175,151,19,166,53,69,250,66,18,179,247,189,211,195,90,207,145,114,95,108,143,95,9,91,222,224,152,170,162,194,7,45,107 };
    byte_vec_t pk { 4,120,142,40,212,39,74,219,109,187,109,188,24,153,220,244,54,245,20,103,161,99,48,105,184,145,43,186,227,242,87,123,211,162,242,61,229,213,172,186,43,201,64,225,151,132,208,95,87,96,103,58,146,156,44,202,98,31,193,108,76,182,3,238,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 793 ") {
    byte_vec_t msg { 242,251,180,133 };
    byte_vec_t sig { 13,21,177,227,241,240,69,86,77,245,206,54,34,158,22,122,14,118,119,136,228,206,127,231,115,182,28,240,23,86,202,236,45,185,235,35,42,36,39,208,224,118,229,119,7,75,168,167,158,57,209,51,49,6,4,17,31,165,245,214,63,234,219,123 };
    byte_vec_t pk { 3,254,244,159,202,191,184,62,107,244,158,87,101,242,65,226,97,163,132,5,210,26,9,13,135,202,208,35,1,165,45,55,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 793 ") {
    byte_vec_t msg { 15,63,41,235 };
    byte_vec_t sig { 41,32,224,57,107,80,126,211,193,105,185,42,169,129,14,179,79,63,119,93,44,195,160,28,26,25,67,36,117,203,220,38,26,149,165,125,11,199,90,150,121,217,0,242,155,220,110,188,118,82,31,100,146,65,58,135,128,129,204,108,185,167,30,6 };
    byte_vec_t pk { 3,113,95,253,121,43,186,65,101,26,57,91,0,173,190,207,107,11,146,99,6,32,180,49,107,252,99,67,35,242,164,243,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 794 ") {
    byte_vec_t msg { 132,143,155,60 };
    byte_vec_t sig { 39,45,220,125,49,118,120,11,231,162,39,188,36,55,242,99,252,235,114,76,146,72,34,189,54,69,234,91,16,171,246,249,57,64,15,193,166,12,128,112,92,51,96,168,59,119,164,88,30,173,16,14,63,205,225,27,185,148,14,79,198,13,172,220 };
    byte_vec_t pk { 4,161,210,5,151,20,42,194,2,30,217,110,162,73,56,61,3,63,199,154,229,140,205,253,222,7,4,170,49,252,201,85,130,54,39,137,179,43,15,60,11,211,159,71,15,29,21,86,103,8,49,84,28,254,36,221,98,20,239,246,231,244,170,90,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 794 ") {
    byte_vec_t msg { 246,41,78,128 };
    byte_vec_t sig { 149,63,244,210,241,200,201,72,173,75,149,87,0,157,13,116,40,153,188,240,100,154,124,200,77,69,5,33,77,66,63,216,51,74,220,219,198,84,132,151,45,182,54,13,76,126,171,217,208,59,134,171,21,8,106,16,6,242,57,221,52,150,172,5 };
    byte_vec_t pk { 4,164,132,208,1,20,10,254,165,163,127,153,29,95,139,185,24,82,194,135,105,20,242,86,17,220,199,195,82,94,70,0,55,92,119,223,224,156,135,124,48,169,210,155,18,37,226,136,85,170,68,119,121,94,9,30,160,43,23,153,161,195,234,186,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 794 ") {
    byte_vec_t msg { 48,14,161,36 };
    byte_vec_t sig { 248,186,6,17,242,31,113,53,150,165,23,205,47,216,198,157,176,115,61,182,122,140,116,194,158,225,46,188,129,76,85,30,60,145,170,1,90,27,47,113,172,160,34,212,228,158,118,194,57,12,124,31,79,52,7,139,62,139,245,12,202,180,229,38 };
    byte_vec_t pk { 2,68,236,183,117,13,35,147,242,61,196,214,123,144,239,56,104,24,63,33,153,213,202,173,178,168,150,139,157,141,94,67,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 794 ") {
    byte_vec_t msg { 68,62,190,48 };
    byte_vec_t sig { 109,225,151,54,53,179,116,27,91,111,76,100,199,146,2,167,250,116,205,114,105,224,51,193,62,252,3,58,156,190,210,249,84,17,177,202,8,226,11,24,181,195,21,37,226,61,252,120,24,62,50,254,121,85,99,54,54,128,76,172,218,241,135,223 };
    byte_vec_t pk { 3,92,170,13,29,146,92,133,202,239,35,112,72,21,65,179,35,11,248,188,196,149,105,148,188,13,67,240,138,72,19,7,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 795 ") {
    byte_vec_t msg { 62,151,60,199 };
    byte_vec_t sig { 136,95,241,113,2,254,47,132,235,152,81,230,142,59,148,76,18,189,172,137,89,105,134,132,137,236,76,22,171,134,105,250,27,6,75,226,58,134,54,142,49,103,210,36,68,98,155,156,50,65,70,1,245,61,45,112,226,60,152,110,234,245,108,167 };
    byte_vec_t pk { 4,171,46,176,227,152,128,142,42,86,129,158,161,7,143,110,51,185,253,164,140,242,251,180,12,186,200,168,53,38,91,68,105,16,179,165,8,61,253,214,163,101,230,226,6,146,194,83,85,19,187,150,228,241,254,239,86,218,92,232,179,175,108,130,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 795 ") {
    byte_vec_t msg { 133,160,126,189 };
    byte_vec_t sig { 68,100,143,80,158,130,207,56,231,192,73,29,198,82,125,84,18,203,196,79,24,249,165,78,206,214,253,85,208,142,28,196,133,136,242,39,255,217,160,192,19,98,209,10,225,218,22,177,14,193,69,75,156,65,42,203,72,116,157,223,233,223,129,4 };
    byte_vec_t pk { 4,11,97,180,131,11,165,16,71,19,187,8,238,114,148,181,62,15,84,170,117,160,79,231,125,75,137,34,116,68,242,152,53,242,164,22,165,232,217,242,50,189,83,237,232,130,140,76,3,109,135,70,82,181,90,254,203,248,190,158,93,185,123,204,135 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 795 ") {
    byte_vec_t msg { 204,233,168,125 };
    byte_vec_t sig { 66,106,63,211,142,150,148,144,72,192,188,4,64,121,83,185,243,143,229,222,141,26,48,147,41,219,1,79,84,6,138,241,148,129,21,151,148,119,164,95,76,115,204,225,142,66,60,84,27,110,186,247,121,205,73,187,86,170,135,125,32,181,37,32 };
    byte_vec_t pk { 2,88,214,254,69,77,42,17,74,218,44,55,35,113,62,54,108,164,253,102,187,129,103,167,129,52,127,254,125,94,74,32,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 795 ") {
    byte_vec_t msg { 222,21,235,125 };
    byte_vec_t sig { 164,38,78,17,119,206,193,14,244,217,88,57,99,219,121,21,206,133,127,167,116,50,205,199,76,163,132,28,43,139,114,92,76,73,190,157,238,49,59,250,253,13,165,120,131,99,145,140,11,49,142,88,97,5,242,220,59,31,19,76,12,31,78,215 };
    byte_vec_t pk { 3,102,16,171,51,22,199,11,226,77,141,149,218,255,100,166,3,27,143,156,232,159,241,29,12,80,240,69,108,27,180,254,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 796 ") {
    byte_vec_t msg { 119,67,34,255 };
    byte_vec_t sig { 123,192,15,188,188,125,209,228,42,217,197,80,68,96,206,62,155,62,229,83,151,18,163,9,253,232,83,40,126,246,112,69,75,68,92,98,37,18,26,55,31,221,174,117,118,230,134,12,81,109,22,248,200,103,250,147,177,95,78,249,142,51,165,207 };
    byte_vec_t pk { 4,56,225,118,234,126,239,46,178,52,93,184,112,202,204,1,13,101,22,15,47,191,12,109,219,45,83,77,234,31,20,170,182,121,49,63,189,190,232,159,41,72,100,37,44,23,34,100,218,72,26,16,185,235,89,193,18,133,188,225,12,240,18,104,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 796 ") {
    byte_vec_t msg { 98,56,171,90 };
    byte_vec_t sig { 187,252,34,207,47,104,167,137,236,234,51,83,88,82,102,233,117,74,178,33,69,154,105,203,211,203,5,22,211,148,152,240,23,242,69,142,243,247,255,228,239,255,142,121,36,252,125,87,158,224,199,139,186,228,195,6,253,125,254,128,232,85,197,79 };
    byte_vec_t pk { 4,47,193,167,41,201,20,159,142,123,181,99,23,194,86,238,224,187,195,72,244,15,17,72,194,107,161,38,119,175,41,46,41,53,110,170,221,124,138,175,71,137,151,254,187,117,100,205,237,18,10,142,14,179,20,27,134,237,76,108,80,178,226,54,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 796 ") {
    byte_vec_t msg { 18,248,64,211 };
    byte_vec_t sig { 26,70,38,217,7,26,244,143,4,186,65,41,106,167,247,218,52,240,169,92,192,182,161,6,205,175,121,15,102,170,185,53,13,162,251,57,18,27,251,36,11,182,20,57,246,169,45,205,237,238,154,6,233,187,107,103,68,245,78,7,241,4,255,171 };
    byte_vec_t pk { 3,35,35,20,95,253,228,231,180,25,182,55,21,230,67,52,106,115,162,165,136,37,86,102,113,183,57,23,151,162,186,233,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 796 ") {
    byte_vec_t msg { 1,253,130,53 };
    byte_vec_t sig { 23,154,88,145,86,65,194,16,59,138,33,239,84,115,64,84,250,64,241,9,168,122,135,212,92,43,239,200,161,245,173,37,55,248,216,118,126,83,113,147,107,142,172,42,2,252,64,83,84,223,69,158,89,231,138,79,155,226,125,207,54,184,203,70 };
    byte_vec_t pk { 3,50,250,191,106,21,98,213,78,179,92,191,190,232,142,19,63,238,245,214,77,179,11,125,208,110,11,118,15,154,200,49,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 797 ") {
    byte_vec_t msg { 255,11,77,96 };
    byte_vec_t sig { 148,161,103,107,100,216,44,111,159,9,42,176,252,197,192,218,177,29,241,240,122,114,14,220,185,218,7,179,64,216,89,39,203,205,138,216,41,250,42,203,119,133,132,225,232,94,101,239,122,12,93,53,163,168,174,141,245,198,85,105,96,105,211,119 };
    byte_vec_t pk { 4,42,183,168,114,245,79,129,69,6,92,25,79,28,55,100,44,181,0,38,35,25,184,208,117,59,171,97,51,182,202,4,158,191,136,240,230,38,240,174,208,159,91,141,81,237,214,173,20,222,70,104,138,230,170,37,173,208,48,93,32,146,14,9,44 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 797 ") {
    byte_vec_t msg { 166,93,29,238 };
    byte_vec_t sig { 186,91,41,102,68,178,111,151,43,243,246,61,81,160,15,101,31,46,176,68,61,201,221,125,125,92,229,127,200,115,37,63,33,99,157,112,221,16,29,61,2,61,244,46,63,232,228,88,148,231,154,103,124,155,74,119,152,250,212,24,18,84,116,80 };
    byte_vec_t pk { 4,78,172,17,94,7,76,218,250,54,242,184,119,146,113,90,77,202,107,210,138,96,98,40,192,51,242,142,124,228,19,122,207,72,224,193,206,56,181,252,15,59,84,213,240,118,196,230,99,81,4,221,224,34,207,45,73,34,1,201,138,62,122,188,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 797 ") {
    byte_vec_t msg { 101,122,107,115 };
    byte_vec_t sig { 105,194,65,227,248,25,247,57,228,207,169,7,17,63,70,192,127,46,155,175,26,62,129,123,59,14,9,204,121,36,239,26,215,183,31,187,85,233,146,101,230,46,52,22,83,93,216,157,150,91,48,195,219,100,80,0,249,75,4,54,105,28,146,228 };
    byte_vec_t pk { 2,170,75,114,171,37,214,212,214,46,159,181,83,44,115,69,135,18,34,121,212,208,168,10,105,210,206,207,91,116,60,115,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 797 ") {
    byte_vec_t msg { 208,27,129,8 };
    byte_vec_t sig { 195,20,211,42,135,180,193,137,23,136,34,192,252,197,175,239,70,237,233,163,154,63,50,67,136,230,100,221,7,145,67,248,67,151,208,76,191,134,169,82,198,223,81,246,255,21,187,194,23,62,113,100,96,237,44,180,66,170,49,117,165,47,161,66 };
    byte_vec_t pk { 3,78,43,175,165,184,216,213,152,136,211,102,243,188,73,254,233,40,202,1,237,224,7,184,158,219,154,158,52,53,105,50,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 798 ") {
    byte_vec_t msg { 152,14,178,88 };
    byte_vec_t sig { 134,35,97,159,85,22,242,84,47,25,135,77,138,55,209,139,200,32,155,237,102,229,12,102,55,96,68,139,234,252,77,67,238,26,184,168,24,26,157,186,55,75,206,140,130,122,160,182,149,179,59,27,137,180,52,39,208,150,140,128,42,12,2,192 };
    byte_vec_t pk { 4,22,54,189,25,49,189,171,185,59,97,47,36,13,209,255,196,211,52,163,144,107,78,118,176,5,227,115,25,193,64,24,231,50,215,41,120,15,17,252,52,177,8,218,84,227,88,116,193,38,168,61,219,202,192,103,44,67,166,14,136,255,153,30,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 798 ") {
    byte_vec_t msg { 165,25,193,243 };
    byte_vec_t sig { 189,118,226,38,105,92,154,40,207,237,139,154,217,130,242,229,193,86,195,139,72,227,198,191,31,235,46,249,133,26,249,31,96,93,52,205,175,87,93,188,73,113,152,169,142,115,116,34,194,38,150,25,5,37,9,241,97,149,192,232,228,213,78,89 };
    byte_vec_t pk { 4,50,132,195,255,171,166,1,144,41,32,188,145,194,58,74,189,57,237,162,248,173,65,226,87,116,124,178,228,190,10,33,181,71,115,58,62,33,57,23,214,255,204,238,126,198,110,44,45,121,145,245,205,28,132,252,224,192,230,200,248,20,62,191,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 798 ") {
    byte_vec_t msg { 215,59,36,204 };
    byte_vec_t sig { 2,223,248,96,95,177,137,189,130,40,185,140,176,205,235,197,163,139,31,227,54,107,180,100,203,73,145,165,101,161,51,54,13,13,233,160,17,167,172,59,181,253,231,207,13,74,239,79,19,73,21,179,243,153,27,170,240,140,127,106,253,35,214,19 };
    byte_vec_t pk { 2,82,37,54,208,54,43,119,252,244,61,79,228,43,109,94,138,127,83,207,147,34,59,87,93,251,61,133,123,238,172,217,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 798 ") {
    byte_vec_t msg { 31,149,247,82 };
    byte_vec_t sig { 165,47,177,240,227,245,56,60,230,218,96,8,204,148,4,155,197,166,65,69,184,105,114,143,66,116,218,73,165,128,119,96,100,22,163,12,248,135,154,153,83,231,64,0,116,99,177,124,167,100,25,27,161,122,24,182,234,135,150,33,52,187,174,170 };
    byte_vec_t pk { 2,202,150,118,217,196,85,124,174,186,140,229,48,160,60,209,203,159,201,73,101,128,27,36,102,2,221,252,8,160,149,152,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 799 ") {
    byte_vec_t msg { 27,227,175,218 };
    byte_vec_t sig { 77,14,130,0,167,125,220,169,197,10,113,44,69,70,127,60,27,220,195,183,194,52,42,119,11,84,255,16,192,120,235,156,120,12,70,109,199,213,225,211,82,93,199,142,127,89,224,238,170,101,190,180,23,80,60,206,56,199,226,148,159,132,212,6 };
    byte_vec_t pk { 4,12,104,128,40,84,200,149,22,175,249,38,185,191,197,16,243,214,206,147,92,44,177,84,187,101,31,205,149,128,249,149,224,213,126,199,146,94,187,67,87,90,246,59,100,210,19,99,232,236,251,166,120,183,60,152,132,187,80,132,188,116,184,153,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 799 ") {
    byte_vec_t msg { 191,164,142,62 };
    byte_vec_t sig { 77,1,95,162,103,45,5,146,253,22,208,172,8,78,27,193,65,132,252,160,73,147,241,193,40,78,187,48,215,133,209,231,215,160,5,42,15,92,167,162,66,50,15,239,56,154,174,230,140,148,62,191,42,140,95,4,189,36,15,151,160,91,210,3 };
    byte_vec_t pk { 4,172,191,93,121,95,243,21,30,66,113,68,102,224,249,92,123,62,209,209,195,66,68,245,124,44,40,74,119,22,27,42,60,75,179,240,19,111,68,228,72,15,198,192,204,173,33,4,167,53,19,231,92,151,143,224,54,190,232,95,173,32,148,210,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 799 ") {
    byte_vec_t msg { 252,198,136,121 };
    byte_vec_t sig { 254,40,220,250,127,219,175,180,104,54,79,232,185,115,211,23,0,132,76,122,238,242,90,182,49,181,171,47,228,244,243,123,176,228,74,168,246,10,107,180,80,62,193,126,217,63,109,255,167,113,47,198,18,134,255,222,193,119,35,17,170,93,177,166 };
    byte_vec_t pk { 2,138,188,229,118,42,192,58,178,160,198,218,168,7,136,129,99,192,116,239,72,20,51,119,172,13,213,49,159,191,99,13,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 799 ") {
    byte_vec_t msg { 5,22,162,127 };
    byte_vec_t sig { 171,35,202,233,217,165,185,186,198,11,170,242,71,214,214,178,189,119,237,142,169,72,122,187,180,152,65,3,242,187,122,73,166,216,38,224,184,235,105,252,52,40,103,27,29,153,194,108,250,145,5,206,25,205,106,35,93,97,178,99,57,206,150,108 };
    byte_vec_t pk { 3,114,135,231,46,230,43,200,229,141,137,131,69,202,253,92,99,93,87,149,36,235,128,77,41,80,242,172,171,177,92,204,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 800 ") {
    byte_vec_t msg { 76,25,196,143 };
    byte_vec_t sig { 141,142,64,125,156,178,145,5,52,252,233,253,199,96,182,213,209,1,2,90,0,252,125,19,87,30,0,163,165,48,5,183,69,255,168,147,207,50,141,92,197,26,110,241,185,240,40,202,157,249,251,110,80,27,222,59,186,122,212,51,62,106,239,63 };
    byte_vec_t pk { 4,167,79,118,234,21,53,46,164,132,30,237,4,45,234,115,195,238,37,14,1,189,184,113,250,9,195,123,223,95,194,145,11,242,123,236,11,161,52,57,108,176,63,202,211,77,115,180,207,160,213,31,164,99,14,192,188,133,195,210,154,213,123,121,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 800 ") {
    byte_vec_t msg { 138,234,136,168 };
    byte_vec_t sig { 106,189,168,75,152,36,43,240,200,234,125,188,176,206,246,201,25,223,11,114,65,51,186,227,156,1,13,81,186,222,171,176,42,43,207,175,105,228,16,241,226,98,85,104,8,137,244,32,7,125,171,4,159,156,167,127,201,161,98,183,104,201,117,57 };
    byte_vec_t pk { 4,136,245,63,252,226,52,114,170,14,42,71,4,74,13,24,28,182,245,255,161,66,144,206,39,133,168,212,72,94,148,45,140,3,79,64,181,195,66,90,197,193,178,113,62,128,223,255,42,7,33,239,81,14,234,29,105,89,138,194,189,209,58,29,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 800 ") {
    byte_vec_t msg { 103,124,9,196 };
    byte_vec_t sig { 9,155,14,189,204,179,135,40,109,131,49,219,133,2,119,45,178,216,205,37,36,86,175,210,52,182,39,62,83,146,79,34,125,36,81,96,38,81,170,81,167,112,99,239,160,159,222,47,50,124,179,85,178,213,11,179,193,35,185,250,252,130,64,102 };
    byte_vec_t pk { 2,200,38,47,234,170,42,23,183,66,82,67,142,165,42,167,21,40,217,206,93,64,141,216,26,89,37,57,179,183,106,209,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 800 ") {
    byte_vec_t msg { 13,120,4,95 };
    byte_vec_t sig { 164,89,103,131,106,55,129,49,111,47,195,122,166,172,159,208,103,152,91,229,176,32,63,105,139,77,58,250,32,21,60,233,111,68,101,164,3,110,18,217,72,193,85,112,194,99,95,161,6,45,185,245,43,104,39,83,177,161,251,190,240,52,140,146 };
    byte_vec_t pk { 2,204,121,136,134,196,68,34,8,34,155,23,110,108,242,151,44,2,79,11,122,187,13,137,93,140,5,67,0,153,57,46,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 801 ") {
    byte_vec_t msg { 198,80,89,57 };
    byte_vec_t sig { 226,218,94,32,185,6,11,140,90,94,221,63,198,220,127,173,34,78,69,127,20,92,14,29,7,147,101,173,236,49,167,134,152,230,85,96,224,170,111,102,156,153,65,93,11,216,148,201,179,17,177,75,7,56,49,71,209,196,243,43,105,218,21,138 };
    byte_vec_t pk { 4,199,217,103,66,103,235,24,41,224,206,10,69,255,186,199,178,53,49,44,129,97,15,69,159,97,43,211,242,101,229,214,28,152,28,159,181,115,62,254,48,20,52,89,198,24,30,94,132,40,218,14,81,165,167,83,91,9,109,102,218,245,131,209,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 801 ") {
    byte_vec_t msg { 58,75,169,136 };
    byte_vec_t sig { 18,42,125,148,148,201,230,94,75,252,61,220,240,104,159,136,197,155,239,134,217,251,248,20,149,75,182,236,220,231,39,249,158,48,8,67,27,176,128,207,232,167,96,115,233,140,184,32,59,165,209,148,195,87,214,82,123,160,239,198,209,42,91,42 };
    byte_vec_t pk { 4,134,149,139,119,42,190,90,57,8,248,239,67,81,238,15,57,95,51,246,77,7,145,238,4,54,224,144,189,130,56,226,23,80,9,60,47,240,71,0,123,170,5,5,106,165,177,155,66,203,215,148,198,69,16,73,212,113,248,241,234,171,222,167,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 801 ") {
    byte_vec_t msg { 229,206,12,177 };
    byte_vec_t sig { 201,217,36,120,14,2,177,26,23,13,151,172,201,134,113,227,247,216,196,197,224,34,127,228,22,136,209,137,108,108,48,90,238,25,83,109,105,66,199,239,220,172,122,33,95,84,153,152,54,56,32,241,9,191,26,48,185,231,38,169,121,177,253,18 };
    byte_vec_t pk { 2,135,219,88,88,99,241,31,246,131,252,101,160,136,68,28,251,238,37,47,127,57,245,67,155,209,146,127,39,33,138,68,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 801 ") {
    byte_vec_t msg { 11,61,225,254 };
    byte_vec_t sig { 59,108,118,137,173,90,140,133,107,227,37,80,233,203,91,37,159,251,121,239,3,47,163,181,206,90,115,129,185,113,31,183,96,39,99,76,47,25,202,192,230,59,211,194,99,192,22,216,105,182,34,13,37,88,168,23,30,15,62,136,117,84,240,120 };
    byte_vec_t pk { 3,205,30,81,204,208,77,102,255,246,5,237,233,240,124,115,157,127,69,132,155,250,47,85,52,107,7,213,160,107,98,161,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 802 ") {
    byte_vec_t msg { 190,43,182,4 };
    byte_vec_t sig { 29,61,144,177,231,5,121,94,144,129,20,63,132,82,106,21,82,96,8,67,112,40,74,63,78,50,21,67,199,44,139,100,153,176,248,55,165,22,131,246,44,7,169,108,203,232,165,252,167,57,102,254,198,94,57,51,44,79,15,51,184,67,177,74 };
    byte_vec_t pk { 4,238,235,17,16,250,75,104,215,233,33,236,157,117,67,228,14,94,114,54,253,227,106,202,2,38,33,96,53,110,186,161,96,112,40,76,101,160,215,79,58,215,159,158,53,42,42,248,217,224,131,82,183,226,103,240,48,98,60,205,209,90,227,173,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 802 ") {
    byte_vec_t msg { 199,167,30,98 };
    byte_vec_t sig { 252,48,202,76,147,230,70,141,227,78,151,181,151,184,77,37,126,170,30,67,120,139,198,76,62,80,103,64,247,113,159,176,201,125,112,48,211,0,150,180,107,69,236,212,182,183,57,19,103,98,46,115,40,154,61,146,164,105,58,149,36,87,7,148 };
    byte_vec_t pk { 4,132,125,118,183,70,102,218,159,181,183,197,1,79,16,223,106,104,22,10,88,28,59,162,56,189,94,213,200,186,139,97,172,101,17,181,2,224,185,199,192,144,65,72,243,221,91,201,230,181,36,29,31,26,189,202,133,188,38,159,98,48,89,239,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 802 ") {
    byte_vec_t msg { 129,253,245,134 };
    byte_vec_t sig { 255,51,156,12,16,90,73,177,94,170,223,45,60,158,21,242,166,166,80,170,106,217,33,226,7,174,209,212,171,12,139,112,37,112,33,128,0,109,189,87,239,233,7,32,250,117,108,115,124,211,10,88,139,118,90,234,37,217,254,56,115,240,112,244 };
    byte_vec_t pk { 3,217,249,231,184,220,160,239,21,246,6,209,199,158,156,191,203,150,112,145,222,108,21,139,156,79,200,40,56,173,131,206,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 802 ") {
    byte_vec_t msg { 85,117,214,50 };
    byte_vec_t sig { 27,248,37,51,93,51,56,103,252,171,149,206,18,27,212,41,122,101,114,182,26,111,114,92,197,108,131,10,235,226,239,213,98,110,45,222,111,87,155,143,38,16,185,215,16,215,29,178,21,122,92,149,10,96,45,249,213,60,56,94,209,186,110,160 };
    byte_vec_t pk { 2,63,244,178,35,200,209,116,149,68,119,156,56,62,193,138,166,4,245,53,82,89,143,167,232,181,51,166,173,176,59,245,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 803 ") {
    byte_vec_t msg { 84,63,64,111 };
    byte_vec_t sig { 141,175,124,168,133,26,232,81,69,230,86,213,164,74,64,197,128,61,15,205,206,7,18,10,46,14,51,168,77,97,28,195,187,29,215,77,33,126,176,93,206,56,157,196,219,9,9,149,247,106,249,107,136,55,120,189,19,225,142,25,168,74,35,64 };
    byte_vec_t pk { 4,131,227,189,119,106,127,13,127,2,169,174,88,204,27,153,11,207,160,209,144,255,114,252,222,9,175,208,196,51,189,142,128,112,225,111,179,71,61,118,3,180,237,195,182,12,228,98,117,143,241,134,33,143,124,23,227,42,244,167,206,133,145,150,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 803 ") {
    byte_vec_t msg { 171,150,174,66 };
    byte_vec_t sig { 190,113,222,17,131,193,173,102,113,130,80,207,146,208,154,206,163,59,99,31,221,244,101,56,156,113,60,217,98,8,213,61,111,116,174,181,55,198,184,204,233,227,149,224,115,143,232,173,38,163,19,65,82,224,7,229,40,173,22,83,66,98,151,118 };
    byte_vec_t pk { 4,220,123,1,111,7,138,145,46,246,186,91,212,112,41,160,170,25,148,21,175,200,164,59,140,175,82,245,134,184,67,138,16,84,101,102,196,160,135,99,152,72,220,94,142,53,38,10,122,11,184,0,217,231,224,77,103,181,137,130,122,104,82,120,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 803 ") {
    byte_vec_t msg { 114,152,153,8 };
    byte_vec_t sig { 68,111,219,64,3,90,119,33,60,204,167,66,106,109,18,226,90,216,76,233,10,77,149,181,94,79,6,234,239,110,221,230,234,244,98,13,238,116,62,4,70,224,194,16,175,245,182,240,12,242,240,138,95,43,237,5,21,225,66,14,101,15,212,106 };
    byte_vec_t pk { 2,123,219,171,229,7,180,103,108,252,209,240,249,21,52,29,76,189,112,193,168,216,52,5,242,42,68,221,37,232,23,152,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 803 ") {
    byte_vec_t msg { 139,138,183,125 };
    byte_vec_t sig { 82,104,247,206,81,243,211,100,93,33,66,215,49,45,32,15,148,162,104,45,187,230,210,202,106,82,56,153,84,119,173,218,99,214,2,161,40,111,253,35,37,160,180,174,219,184,83,174,129,192,52,31,94,208,138,0,117,61,203,158,140,146,23,149 };
    byte_vec_t pk { 2,183,88,148,94,163,176,198,211,251,193,151,185,105,138,161,59,201,98,45,94,48,226,15,202,222,155,169,177,62,37,134,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 804 ") {
    byte_vec_t msg { 229,207,241,99 };
    byte_vec_t sig { 55,24,83,156,87,190,169,151,51,136,172,130,184,172,227,139,190,0,169,192,111,160,222,204,248,237,195,239,3,111,143,28,174,52,91,212,200,124,127,249,243,201,183,56,137,82,52,171,131,224,166,131,217,24,217,254,19,217,135,78,123,20,12,82 };
    byte_vec_t pk { 4,28,249,252,193,127,200,202,247,122,16,184,155,223,34,141,123,188,37,188,246,217,0,90,36,192,17,11,118,224,238,158,34,134,253,61,223,229,83,111,183,161,124,220,235,146,234,5,79,103,228,186,1,120,55,70,203,134,195,96,114,80,105,28,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 804 ") {
    byte_vec_t msg { 185,55,10,211 };
    byte_vec_t sig { 52,254,220,227,89,126,85,123,134,170,106,17,233,183,31,169,246,26,208,160,160,25,16,175,21,197,73,110,72,220,56,174,247,157,24,230,65,180,34,162,229,228,147,255,212,254,208,151,158,45,174,178,23,81,122,77,136,149,7,184,132,2,70,152 };
    byte_vec_t pk { 4,100,147,126,52,34,18,28,42,17,228,50,190,20,49,209,87,128,14,130,196,146,137,218,161,206,243,28,215,119,36,111,162,35,36,34,181,38,46,124,77,147,142,44,21,25,132,164,245,136,203,66,234,226,213,252,199,65,234,163,138,252,247,252,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 804 ") {
    byte_vec_t msg { 64,199,155,100 };
    byte_vec_t sig { 226,220,22,14,112,241,154,231,19,212,23,15,223,107,85,84,250,83,120,157,113,37,39,59,186,7,207,54,80,69,77,234,51,100,115,51,19,173,177,207,14,230,208,232,9,29,107,180,121,60,233,95,106,153,178,165,128,68,21,145,70,176,91,129 };
    byte_vec_t pk { 3,11,104,100,17,53,68,113,87,135,180,60,172,96,81,74,222,120,247,68,11,130,199,0,72,176,225,190,142,224,183,85,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 804 ") {
    byte_vec_t msg { 48,130,174,146 };
    byte_vec_t sig { 242,74,144,248,54,250,180,146,45,68,83,57,14,2,149,129,228,148,211,190,113,192,158,219,148,198,150,118,254,230,173,28,25,73,90,193,174,102,210,37,175,95,18,175,24,24,224,211,155,122,45,45,212,113,139,206,111,88,102,118,230,2,40,189 };
    byte_vec_t pk { 3,218,165,140,128,146,1,174,30,100,208,107,203,51,1,88,96,193,203,254,180,183,45,81,143,79,9,104,57,212,1,172,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 805 ") {
    byte_vec_t msg { 250,135,11,5 };
    byte_vec_t sig { 213,217,219,230,98,223,122,110,163,61,167,1,65,158,205,145,213,177,122,180,112,229,114,226,213,68,39,144,173,123,157,90,39,153,133,46,27,126,8,34,119,235,171,228,12,80,134,184,232,87,111,97,197,252,38,157,11,153,71,58,125,202,26,163 };
    byte_vec_t pk { 4,188,103,98,26,95,252,18,22,177,93,94,92,9,4,115,75,103,237,159,237,37,92,99,3,183,137,118,228,182,85,162,74,234,193,98,200,143,191,159,201,51,247,61,34,79,83,107,91,175,83,198,248,232,159,231,27,192,134,215,117,82,217,102,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 805 ") {
    byte_vec_t msg { 1,244,44,111 };
    byte_vec_t sig { 69,184,211,2,57,210,219,20,36,98,27,80,73,33,26,141,28,121,203,137,27,34,96,230,145,249,135,200,201,109,25,248,45,164,169,199,39,180,45,16,57,96,242,7,183,133,158,254,86,32,29,169,36,14,193,7,200,253,83,54,137,79,62,219 };
    byte_vec_t pk { 4,207,25,233,116,168,218,96,164,92,57,137,61,38,105,171,170,0,91,71,188,88,142,211,122,241,90,50,37,204,181,181,64,72,183,149,152,201,190,35,236,99,26,87,127,179,9,211,0,106,6,80,216,244,171,70,113,154,62,148,78,218,96,172,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 805 ") {
    byte_vec_t msg { 109,167,213,168 };
    byte_vec_t sig { 60,171,118,244,198,58,231,44,54,104,225,45,81,215,157,155,209,175,101,91,109,107,200,222,254,225,28,117,152,105,171,99,19,6,54,20,101,230,17,156,20,81,18,44,244,61,124,125,219,214,45,23,131,107,181,138,217,13,10,153,193,206,227,155 };
    byte_vec_t pk { 3,177,110,118,151,66,222,202,99,137,151,118,74,154,41,165,60,48,51,27,240,38,220,83,112,158,207,210,91,85,208,243,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 805 ") {
    byte_vec_t msg { 89,98,168,247 };
    byte_vec_t sig { 14,164,211,165,174,28,48,43,132,99,210,50,33,56,216,207,202,82,32,9,195,12,27,145,212,5,214,176,78,175,88,15,193,182,39,179,239,44,220,255,7,195,68,5,247,170,230,239,250,108,86,75,138,151,252,73,154,11,234,162,188,110,250,20 };
    byte_vec_t pk { 2,237,24,96,129,27,53,254,107,3,13,20,142,127,42,19,44,244,57,236,129,229,49,252,152,118,215,226,134,18,193,111,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 806 ") {
    byte_vec_t msg { 201,156,138,214 };
    byte_vec_t sig { 191,162,216,63,194,63,34,124,126,187,19,79,216,248,92,186,156,184,227,246,221,132,167,57,144,16,51,219,128,127,131,177,37,169,189,47,215,171,73,37,64,86,58,245,27,107,116,136,154,163,47,27,125,182,182,187,166,137,28,110,13,30,112,136 };
    byte_vec_t pk { 4,103,150,25,208,76,37,79,158,12,84,8,193,229,185,69,92,209,139,132,52,17,254,232,151,161,33,232,62,2,182,197,117,166,196,33,10,133,75,226,39,95,231,41,209,24,66,36,89,224,185,28,192,82,39,170,111,44,151,67,79,122,151,248,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 806 ") {
    byte_vec_t msg { 41,229,7,230 };
    byte_vec_t sig { 218,238,113,164,143,61,254,34,39,182,186,62,15,104,65,94,68,10,184,0,113,162,153,137,96,243,182,151,78,208,96,45,247,30,150,136,60,114,31,170,155,223,103,168,61,100,70,163,153,38,18,117,225,171,54,185,92,63,208,33,40,41,58,136 };
    byte_vec_t pk { 4,179,254,64,250,13,187,164,132,77,165,137,203,96,203,71,174,194,55,211,246,168,2,196,61,89,45,204,76,54,111,237,190,113,74,84,74,25,86,249,149,243,62,126,169,156,241,2,116,220,8,123,212,183,246,252,164,197,57,53,76,237,61,126,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 806 ") {
    byte_vec_t msg { 248,246,30,148 };
    byte_vec_t sig { 58,161,0,77,178,90,146,184,206,248,229,46,46,210,177,62,128,151,1,68,97,188,152,90,231,71,94,3,6,195,218,23,97,106,174,253,76,53,61,24,58,188,241,48,203,164,124,58,61,21,117,45,9,60,241,158,57,165,90,238,101,94,200,63 };
    byte_vec_t pk { 3,182,217,28,141,2,233,112,205,231,205,195,246,124,79,111,194,73,201,6,219,230,233,37,145,211,119,87,240,38,223,140,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 806 ") {
    byte_vec_t msg { 205,7,50,131 };
    byte_vec_t sig { 24,131,219,19,62,185,50,29,153,22,221,198,108,78,40,220,180,162,12,92,55,111,25,46,45,28,251,161,65,91,217,9,123,140,102,212,55,67,73,31,129,20,81,214,234,140,109,50,14,121,106,49,112,76,19,52,27,208,249,185,139,77,77,204 };
    byte_vec_t pk { 3,31,74,28,158,13,9,76,192,57,178,222,2,59,249,67,110,110,68,197,98,28,236,189,146,46,28,100,48,217,121,71,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 807 ") {
    byte_vec_t msg { 196,56,84,181 };
    byte_vec_t sig { 137,78,118,3,90,132,249,102,156,176,176,140,153,72,231,159,5,228,127,13,42,153,38,154,17,31,96,205,242,10,129,95,39,53,91,29,109,38,132,37,226,98,2,48,27,18,208,120,208,30,158,113,17,33,67,66,50,222,11,126,30,198,200,154 };
    byte_vec_t pk { 4,21,175,143,187,103,194,211,225,70,170,208,212,7,117,175,135,121,231,169,98,246,82,180,27,74,191,201,6,115,252,94,184,52,14,242,49,59,160,47,11,244,152,124,249,50,239,252,68,19,141,132,153,178,207,209,122,240,105,249,176,74,189,26,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 807 ") {
    byte_vec_t msg { 78,184,45,76 };
    byte_vec_t sig { 187,149,180,232,152,170,103,166,146,126,250,205,206,144,142,179,108,164,95,44,164,130,101,45,190,27,35,198,213,42,68,101,66,91,2,42,105,221,68,132,52,181,0,122,158,152,200,222,106,29,131,161,98,83,74,111,191,218,30,151,190,85,126,2 };
    byte_vec_t pk { 4,152,168,219,2,81,212,135,165,156,128,135,249,172,149,230,99,165,107,191,8,54,230,156,124,133,127,49,54,64,122,181,173,142,10,155,15,246,234,230,26,229,20,110,93,113,16,10,236,104,233,100,102,17,141,82,115,133,91,16,36,2,151,188,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 807 ") {
    byte_vec_t msg { 16,143,119,226 };
    byte_vec_t sig { 17,140,174,177,160,148,199,218,125,135,53,35,163,220,116,71,165,79,148,64,174,252,238,243,219,245,105,102,14,128,202,213,164,221,5,202,232,73,29,4,250,208,138,178,64,3,222,178,12,3,252,183,142,16,86,76,56,15,198,170,163,158,164,180 };
    byte_vec_t pk { 2,71,118,197,97,191,24,70,144,229,227,76,150,132,166,119,190,171,211,226,156,199,170,217,251,142,22,201,130,182,215,235,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 807 ") {
    byte_vec_t msg { 69,27,109,153 };
    byte_vec_t sig { 124,190,31,247,234,26,84,116,172,26,38,173,194,217,234,164,90,100,125,217,89,184,209,76,152,223,227,42,72,151,110,179,198,241,32,204,196,50,65,164,239,152,121,202,208,172,69,40,164,121,51,213,183,116,165,168,121,14,58,219,149,21,39,81 };
    byte_vec_t pk { 3,170,66,181,78,205,124,86,147,130,12,250,253,183,135,33,111,144,8,162,119,12,210,3,35,64,158,137,96,133,51,106,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 808 ") {
    byte_vec_t msg { 228,57,208,162 };
    byte_vec_t sig { 59,92,135,181,223,31,76,86,227,236,80,226,186,127,50,201,221,214,64,84,96,101,2,101,71,78,38,200,135,235,103,41,154,123,143,197,232,143,21,26,178,77,75,148,152,184,168,160,149,224,195,73,31,82,109,135,101,169,221,41,82,188,65,104 };
    byte_vec_t pk { 4,166,65,54,33,144,156,82,190,99,193,97,207,185,81,37,13,170,208,64,156,97,249,38,36,167,43,188,241,120,23,70,161,15,174,235,118,148,136,152,168,93,231,18,246,20,221,30,132,192,159,50,170,28,194,155,248,150,72,229,76,2,171,205,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 808 ") {
    byte_vec_t msg { 124,7,11,26 };
    byte_vec_t sig { 249,156,209,118,38,20,76,124,169,13,168,26,31,237,156,225,161,198,240,230,17,121,210,208,214,204,74,105,21,41,99,159,54,143,161,23,50,39,183,167,245,179,70,149,58,43,175,209,46,14,218,109,78,40,191,245,41,118,194,249,10,56,50,221 };
    byte_vec_t pk { 4,53,220,214,204,38,235,165,80,52,213,190,248,254,50,52,90,111,38,204,26,208,213,116,100,108,206,93,24,129,35,5,255,158,86,85,53,51,212,167,153,10,137,243,199,6,61,87,213,239,18,20,196,0,123,56,76,109,114,218,224,208,228,211,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 808 ") {
    byte_vec_t msg { 132,143,21,144 };
    byte_vec_t sig { 200,239,167,68,54,131,140,89,66,200,22,186,168,150,157,198,8,193,252,252,148,56,218,83,232,100,226,50,118,19,21,68,200,120,198,36,250,171,238,100,17,213,201,115,125,242,222,231,131,69,159,199,1,197,174,129,101,247,228,95,144,132,83,125 };
    byte_vec_t pk { 3,42,148,72,6,13,66,145,116,243,60,104,242,130,143,240,59,58,243,183,172,226,249,80,171,243,45,205,136,140,252,9,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 808 ") {
    byte_vec_t msg { 131,13,134,195 };
    byte_vec_t sig { 143,131,8,181,223,118,144,171,114,11,120,225,215,34,142,67,41,65,187,165,207,20,9,162,118,36,178,91,102,91,41,234,172,170,223,178,47,169,173,190,144,83,206,181,168,183,177,72,31,202,249,119,235,7,68,116,120,111,91,30,154,100,123,233 };
    byte_vec_t pk { 3,134,233,62,21,12,25,226,5,214,172,184,63,220,213,129,90,180,151,224,9,160,172,140,164,123,56,76,57,41,14,71,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 809 ") {
    byte_vec_t msg { 69,191,121,207 };
    byte_vec_t sig { 54,56,47,236,66,1,19,119,24,207,239,83,128,184,30,105,171,193,162,127,140,32,141,86,149,239,176,252,175,161,160,194,196,111,82,4,81,47,174,100,221,66,205,230,143,137,216,110,236,190,162,123,250,45,61,172,198,211,13,93,212,87,199,85 };
    byte_vec_t pk { 4,48,219,21,23,70,106,183,187,213,255,219,19,105,60,88,81,166,125,187,156,135,181,16,155,44,62,173,140,26,1,18,94,253,5,141,88,91,206,194,57,240,200,42,15,128,33,32,148,198,147,251,172,114,85,158,0,114,200,111,252,60,114,182,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 809 ") {
    byte_vec_t msg { 122,201,146,135 };
    byte_vec_t sig { 172,85,179,191,98,135,191,253,211,74,45,203,124,60,11,69,146,170,213,73,91,84,209,191,152,61,223,240,188,99,201,181,55,216,19,98,202,14,231,175,86,224,31,191,113,172,94,38,198,24,116,122,165,127,3,130,177,108,80,50,225,159,25,241 };
    byte_vec_t pk { 4,234,220,255,119,165,109,204,35,125,108,134,147,227,188,57,199,242,45,16,40,182,13,50,181,200,104,251,211,131,135,126,224,72,159,241,190,63,246,241,80,181,63,93,122,204,247,56,180,131,7,245,97,129,241,98,32,238,17,78,127,242,19,200,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 809 ") {
    byte_vec_t msg { 74,26,15,119 };
    byte_vec_t sig { 30,224,123,224,35,218,139,146,44,4,6,138,245,8,100,103,171,104,81,213,118,214,146,123,121,101,174,133,93,31,5,226,170,136,137,153,99,252,211,40,72,86,240,27,192,127,158,83,210,69,118,228,46,14,102,223,17,174,164,190,30,137,120,117 };
    byte_vec_t pk { 3,30,17,92,174,18,24,203,150,73,202,245,20,251,254,189,129,27,178,78,191,141,12,65,33,90,160,94,65,135,234,196,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 809 ") {
    byte_vec_t msg { 244,60,81,245 };
    byte_vec_t sig { 225,183,105,58,145,142,83,255,254,193,41,232,190,81,144,111,203,231,251,111,96,157,70,165,50,160,160,250,170,18,171,43,162,138,129,115,101,85,56,149,130,180,201,11,144,110,0,253,128,31,253,1,7,45,133,152,219,163,159,98,179,53,97,84 };
    byte_vec_t pk { 2,163,124,163,249,209,88,45,115,241,115,226,184,227,103,77,44,114,233,129,201,134,212,195,28,176,252,130,9,62,74,209,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 810 ") {
    byte_vec_t msg { 23,155,5,94 };
    byte_vec_t sig { 3,160,167,48,37,208,252,211,188,135,65,12,251,56,48,144,212,64,55,27,88,75,102,47,219,159,244,86,173,6,132,52,11,220,166,160,108,169,22,90,136,51,175,208,58,19,69,104,189,13,235,73,36,128,209,183,186,169,124,214,106,169,248,57 };
    byte_vec_t pk { 4,72,221,226,67,121,171,97,181,215,202,235,208,171,11,84,135,190,99,148,150,217,95,95,69,86,183,81,230,162,190,42,223,8,113,101,102,89,185,250,239,44,101,91,206,122,146,140,32,13,70,79,38,78,79,254,235,110,143,8,89,53,243,219,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 810 ") {
    byte_vec_t msg { 222,30,188,119 };
    byte_vec_t sig { 61,191,92,183,37,112,216,57,168,204,68,178,242,35,155,51,113,51,172,95,239,10,228,105,16,250,116,171,12,105,28,255,168,147,37,178,241,158,221,98,131,10,215,192,40,161,169,236,40,160,234,81,238,94,208,63,233,242,183,84,182,195,15,219 };
    byte_vec_t pk { 4,187,185,134,55,73,230,62,158,172,119,170,143,116,250,146,242,37,193,155,25,120,151,155,85,187,102,172,110,214,192,105,250,48,134,172,212,73,117,248,173,138,13,34,147,160,110,255,95,220,15,136,24,123,20,136,56,130,61,68,0,198,198,137,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 810 ") {
    byte_vec_t msg { 207,228,6,171 };
    byte_vec_t sig { 101,189,217,198,225,14,173,158,110,126,196,220,47,164,156,37,171,87,148,117,87,118,238,13,245,235,4,205,235,246,186,94,146,174,240,49,109,130,93,27,191,110,101,29,160,34,22,194,142,96,11,239,50,62,33,158,140,68,194,218,87,0,251,143 };
    byte_vec_t pk { 2,58,248,125,235,32,108,181,166,172,71,140,12,81,171,85,60,106,247,114,144,142,121,75,151,57,32,199,167,252,113,97,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 810 ") {
    byte_vec_t msg { 43,221,232,189 };
    byte_vec_t sig { 21,163,111,192,122,109,215,106,188,129,172,22,96,237,20,121,129,62,103,128,177,21,125,22,178,249,66,22,23,92,122,117,54,241,148,122,43,85,250,137,6,83,213,224,54,244,134,73,142,206,52,177,2,110,45,44,123,226,243,110,72,186,52,208 };
    byte_vec_t pk { 2,151,123,52,243,40,133,186,17,75,65,23,97,160,25,72,193,89,173,239,199,91,84,47,29,214,251,151,59,23,50,38,52 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 811 ") {
    byte_vec_t msg { 19,143,182,208 };
    byte_vec_t sig { 105,150,63,121,247,235,134,74,148,0,246,28,47,90,197,44,63,107,99,197,18,148,200,208,170,24,121,39,84,249,21,3,46,79,186,86,138,16,247,0,19,18,242,6,91,115,81,163,79,235,128,51,28,83,9,140,51,73,28,249,195,62,191,235 };
    byte_vec_t pk { 4,207,90,198,199,180,65,77,175,185,165,17,133,122,3,118,189,213,86,133,249,96,248,188,28,39,149,179,249,27,109,180,85,36,220,210,210,168,64,189,193,199,25,89,116,79,24,72,238,70,204,4,226,14,253,58,152,127,163,188,251,151,14,98,0 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 811 ") {
    byte_vec_t msg { 0,113,71,231 };
    byte_vec_t sig { 100,178,125,220,10,49,24,231,245,217,107,61,224,130,102,145,213,9,127,1,235,118,68,158,249,71,93,64,33,137,23,192,22,42,68,206,197,111,253,89,85,81,93,160,222,118,174,251,79,224,179,86,149,124,195,113,173,209,130,8,30,135,237,234 };
    byte_vec_t pk { 4,202,168,98,251,224,135,73,0,248,46,102,90,129,165,140,230,78,179,171,0,235,55,129,50,18,53,166,226,132,72,185,5,30,228,10,107,251,41,254,216,181,22,166,241,162,74,89,214,162,115,184,182,58,64,57,207,188,227,153,2,161,184,58,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 811 ") {
    byte_vec_t msg { 113,189,51,2 };
    byte_vec_t sig { 82,122,67,157,92,20,184,84,121,248,240,30,133,115,35,135,252,60,188,40,163,186,2,220,97,247,119,108,89,4,55,137,224,253,27,242,61,86,192,24,97,235,72,105,95,45,209,192,236,21,48,43,58,209,215,165,179,14,183,212,122,196,76,71 };
    byte_vec_t pk { 3,84,222,244,150,70,6,156,66,30,168,150,18,228,38,215,76,205,164,207,108,244,91,191,81,156,149,221,113,242,238,214,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 811 ") {
    byte_vec_t msg { 211,186,120,162 };
    byte_vec_t sig { 38,193,112,222,18,154,83,60,68,197,57,32,68,171,122,65,36,27,48,75,79,115,252,147,177,234,59,29,56,22,216,73,176,191,19,129,103,214,11,255,194,164,59,202,183,150,122,248,28,105,3,190,25,15,96,136,234,23,15,200,61,193,94,154 };
    byte_vec_t pk { 2,42,213,157,78,53,64,185,205,17,169,157,77,234,114,230,48,123,148,122,151,126,203,194,205,84,183,65,174,132,214,126,69 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 812 ") {
    byte_vec_t msg { 101,2,170,191 };
    byte_vec_t sig { 123,244,128,106,150,54,65,84,200,248,242,165,162,187,182,227,34,98,74,96,138,131,28,1,39,179,152,242,49,184,97,64,96,46,233,57,67,40,255,31,104,148,21,201,110,236,135,184,88,121,44,244,164,75,16,122,145,87,249,202,190,43,215,167 };
    byte_vec_t pk { 4,18,73,232,245,98,168,68,119,87,2,150,63,130,72,243,238,147,218,160,117,139,235,11,249,45,54,207,116,200,230,47,217,62,160,174,239,80,191,25,190,252,114,177,7,14,246,34,163,187,187,240,249,61,153,211,162,100,223,49,11,22,30,57,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 812 ") {
    byte_vec_t msg { 228,238,162,114 };
    byte_vec_t sig { 57,177,241,68,80,186,54,47,103,255,52,83,165,135,100,103,102,164,189,27,185,190,114,212,68,60,174,54,206,201,248,249,154,244,58,94,161,252,163,143,107,218,122,14,101,98,217,28,231,37,187,134,195,208,131,71,201,108,21,72,253,150,6,252 };
    byte_vec_t pk { 4,208,173,65,213,142,189,11,13,165,101,0,189,61,211,185,66,176,130,120,212,68,173,152,102,56,216,231,131,170,5,107,16,233,162,24,205,204,96,148,140,74,35,251,229,28,85,114,27,106,234,129,176,208,102,137,15,219,150,27,84,58,150,4,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 812 ") {
    byte_vec_t msg { 147,197,135,174 };
    byte_vec_t sig { 142,170,11,152,102,20,90,56,9,187,88,87,119,1,156,235,215,239,69,81,100,180,3,106,36,253,192,146,144,249,194,139,62,131,205,153,162,128,4,125,14,23,62,140,105,181,109,238,162,228,66,116,132,14,189,157,39,84,28,97,201,31,180,177 };
    byte_vec_t pk { 2,123,139,233,27,66,36,177,22,72,249,104,200,122,148,124,199,141,206,116,14,40,79,153,41,186,112,125,4,208,254,26,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 812 ") {
    byte_vec_t msg { 66,90,200,109 };
    byte_vec_t sig { 196,168,251,167,253,146,141,62,218,90,141,223,26,82,94,4,95,203,125,105,186,17,202,253,43,106,207,130,250,132,250,100,50,144,189,24,195,243,199,73,149,101,151,140,93,180,80,53,81,137,144,83,27,89,46,175,191,1,184,162,107,37,163,68 };
    byte_vec_t pk { 2,215,24,30,47,62,26,35,82,243,196,77,142,214,55,109,176,109,55,10,53,179,24,117,194,90,180,100,152,208,113,158,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 813 ") {
    byte_vec_t msg { 182,103,200,200 };
    byte_vec_t sig { 9,196,41,250,209,113,140,190,5,140,21,163,155,185,101,209,183,188,219,7,105,116,131,73,49,37,28,188,77,26,229,102,58,215,106,122,19,246,96,3,50,67,49,39,194,145,147,216,21,174,240,187,151,98,9,1,134,51,127,119,84,108,90,111 };
    byte_vec_t pk { 4,42,217,166,31,221,221,29,44,129,209,145,50,252,78,255,148,106,245,25,73,232,96,166,153,226,92,125,4,137,96,96,190,200,98,108,205,242,77,237,197,247,224,120,74,44,218,31,222,53,76,237,130,48,9,89,173,157,35,169,44,247,247,75,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 813 ") {
    byte_vec_t msg { 131,72,132,0 };
    byte_vec_t sig { 112,229,119,127,54,59,88,120,50,229,254,47,123,62,198,179,249,51,165,191,110,180,230,140,223,157,98,252,222,132,90,32,190,51,214,134,62,120,94,85,129,200,2,169,254,187,32,62,216,39,121,20,60,222,169,142,39,144,18,35,93,224,193,134 };
    byte_vec_t pk { 4,106,14,55,151,83,114,108,202,38,140,234,173,108,199,22,248,154,29,246,224,23,108,209,67,84,136,79,43,82,139,215,99,148,117,226,193,189,175,2,217,156,59,68,194,232,151,214,170,229,103,202,206,227,187,111,2,204,134,134,36,99,40,149,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 813 ") {
    byte_vec_t msg { 201,142,249,72 };
    byte_vec_t sig { 8,246,152,199,134,74,125,156,62,174,41,136,46,2,23,14,29,47,6,193,57,171,35,193,181,122,115,89,151,112,123,69,21,193,68,106,225,136,74,251,46,219,49,35,9,59,86,179,172,59,17,154,89,206,223,37,53,191,58,213,112,9,113,183 };
    byte_vec_t pk { 3,15,4,14,79,175,96,219,220,93,135,174,92,156,4,196,109,195,85,96,126,167,82,163,111,181,239,33,121,137,183,234,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 813 ") {
    byte_vec_t msg { 133,42,211,214 };
    byte_vec_t sig { 34,108,187,232,80,110,204,200,89,166,160,176,68,66,89,238,101,121,200,127,125,168,185,197,162,226,240,119,227,98,109,183,57,183,138,140,195,214,109,63,28,101,3,198,129,214,228,16,143,50,123,243,33,4,169,23,250,168,199,162,92,173,234,76 };
    byte_vec_t pk { 3,86,121,209,137,60,43,59,138,231,193,175,201,172,23,135,180,205,73,175,168,235,64,91,86,136,62,15,26,60,73,110,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 814 ") {
    byte_vec_t msg { 0,133,110,157 };
    byte_vec_t sig { 248,176,68,162,166,90,189,30,85,151,188,36,38,203,66,102,86,159,53,34,223,233,143,175,174,237,223,45,240,93,107,234,199,119,244,218,208,99,21,227,239,159,72,6,27,18,159,51,182,71,37,98,184,236,29,158,83,139,241,58,23,210,120,52 };
    byte_vec_t pk { 4,59,131,218,183,155,112,150,152,36,49,103,218,135,37,170,72,143,35,154,97,62,84,155,95,236,223,125,178,93,129,122,162,83,66,165,25,224,18,14,244,3,155,137,251,18,154,125,119,212,46,147,110,80,121,171,152,253,36,222,199,56,167,120,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 814 ") {
    byte_vec_t msg { 103,85,161,15 };
    byte_vec_t sig { 161,156,89,2,134,253,166,6,58,86,177,136,80,87,20,128,206,63,36,95,138,7,235,141,225,146,239,106,178,70,73,177,123,232,232,116,92,242,11,170,175,215,40,194,118,113,8,212,215,105,71,133,251,6,50,9,105,215,139,238,137,177,204,229 };
    byte_vec_t pk { 4,195,165,116,63,29,167,8,209,119,38,131,188,32,127,23,123,103,127,209,144,49,115,212,158,224,44,209,99,97,152,151,236,97,47,221,220,186,166,152,93,112,251,48,21,168,57,184,149,165,187,85,69,63,6,33,112,125,3,63,175,99,72,228,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 814 ") {
    byte_vec_t msg { 38,98,5,177 };
    byte_vec_t sig { 145,100,106,163,31,41,213,40,213,208,233,138,203,26,233,3,129,183,170,115,193,175,243,219,82,104,229,143,117,31,230,189,73,65,179,188,222,33,30,94,144,117,210,140,237,137,70,124,32,233,124,122,148,116,134,2,187,200,14,245,157,103,76,169 };
    byte_vec_t pk { 3,230,6,216,77,123,222,12,96,242,17,255,93,223,110,17,191,17,69,60,43,34,220,128,155,3,62,92,171,105,214,86,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 814 ") {
    byte_vec_t msg { 72,113,7,67 };
    byte_vec_t sig { 157,90,6,55,52,138,86,33,16,200,143,223,34,3,58,108,23,60,134,168,174,131,215,28,107,33,166,18,130,28,218,141,8,55,133,112,221,10,180,83,13,226,180,65,127,113,213,2,242,102,218,174,139,129,82,144,146,211,18,217,66,44,73,83 };
    byte_vec_t pk { 3,187,225,212,143,49,208,254,64,213,38,244,155,52,44,196,183,120,254,77,218,237,195,45,21,46,54,7,144,114,179,191,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 815 ") {
    byte_vec_t msg { 70,138,135,251 };
    byte_vec_t sig { 116,97,107,244,58,49,216,187,118,28,124,224,225,131,122,102,110,149,168,122,113,105,177,131,226,197,203,189,225,2,93,108,56,83,185,177,253,27,107,12,122,64,25,11,9,166,175,40,187,201,82,138,135,167,26,248,230,194,173,88,226,229,97,56 };
    byte_vec_t pk { 4,221,64,22,247,121,8,184,122,13,57,245,221,138,113,239,220,65,187,149,210,255,28,244,17,212,56,10,22,20,49,233,178,61,186,53,208,0,51,64,242,182,6,185,206,178,207,42,223,133,17,94,53,150,22,96,91,234,42,82,11,142,150,52,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 815 ") {
    byte_vec_t msg { 25,130,59,241 };
    byte_vec_t sig { 110,190,69,50,223,91,164,202,187,109,44,229,160,22,5,141,36,247,215,167,242,41,23,252,73,141,113,243,72,197,10,244,149,131,185,160,113,18,78,237,202,3,10,168,80,178,217,9,75,171,58,140,49,46,199,240,32,95,34,176,61,89,114,103 };
    byte_vec_t pk { 4,115,172,53,234,70,198,19,143,75,47,220,201,114,45,68,47,243,127,142,230,47,148,117,100,201,89,89,105,98,131,4,68,10,179,18,133,18,20,193,238,81,55,32,251,207,182,155,20,184,7,1,43,45,105,12,193,129,160,7,16,235,8,214,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 815 ") {
    byte_vec_t msg { 231,3,116,250 };
    byte_vec_t sig { 154,6,38,17,92,151,166,107,226,83,9,231,129,116,102,99,201,146,195,253,133,68,251,186,230,76,222,47,214,175,232,5,11,218,112,120,191,39,224,128,41,99,122,76,145,93,55,101,91,252,95,90,140,203,156,186,120,42,34,65,189,126,148,71 };
    byte_vec_t pk { 3,130,72,231,0,23,158,182,107,46,216,74,127,148,74,155,216,53,56,172,105,36,124,213,252,53,27,159,221,96,202,213,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 815 ") {
    byte_vec_t msg { 49,33,84,238 };
    byte_vec_t sig { 186,166,189,72,138,161,208,171,111,8,244,163,52,206,156,15,174,203,85,91,223,85,27,227,113,137,58,168,126,16,52,60,112,93,215,20,167,128,206,19,202,92,235,34,252,43,151,237,48,35,85,181,88,53,134,168,183,5,137,63,55,188,79,62 };
    byte_vec_t pk { 2,182,14,92,176,104,222,147,87,116,219,236,144,171,22,177,185,150,241,129,237,59,87,223,91,140,35,8,33,188,129,124,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 816 ") {
    byte_vec_t msg { 203,234,140,31 };
    byte_vec_t sig { 145,115,255,43,0,81,216,141,181,236,105,159,166,48,166,229,113,152,77,255,139,31,216,122,48,209,204,140,159,120,246,47,236,197,55,21,197,243,34,77,174,244,162,174,199,207,99,27,119,218,40,219,71,172,32,155,99,177,34,54,212,208,63,156 };
    byte_vec_t pk { 4,153,232,219,167,95,208,194,112,50,28,220,243,49,81,198,45,204,55,78,113,237,92,57,30,191,141,34,136,162,175,176,240,128,128,238,93,209,91,113,56,66,53,229,37,215,111,58,248,27,212,135,244,221,36,88,170,37,0,48,179,98,147,219,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 816 ") {
    byte_vec_t msg { 74,3,162,93 };
    byte_vec_t sig { 46,206,252,113,208,167,211,160,220,231,135,63,19,76,124,156,26,130,182,112,3,36,35,18,246,149,193,18,215,192,38,99,191,212,180,252,163,211,21,1,19,246,218,188,196,13,113,35,26,58,123,36,5,161,185,110,144,114,25,70,91,122,34,133 };
    byte_vec_t pk { 4,98,51,148,145,86,125,161,55,1,139,65,5,97,30,96,111,71,54,204,180,192,252,125,216,99,61,193,200,31,227,196,205,47,90,163,98,107,32,149,127,178,79,56,93,246,36,151,83,111,168,26,148,230,190,163,51,1,205,54,97,182,207,212,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 816 ") {
    byte_vec_t msg { 185,237,68,108 };
    byte_vec_t sig { 107,127,15,200,207,146,3,34,80,78,190,20,122,125,250,46,24,84,24,68,158,51,133,69,167,145,250,87,9,215,1,108,142,92,233,225,105,149,24,171,228,133,249,254,100,2,40,20,87,162,43,115,20,51,207,131,224,115,136,42,226,92,240,120 };
    byte_vec_t pk { 2,240,84,176,26,242,74,161,111,195,27,59,58,134,83,155,2,68,128,193,225,43,226,239,129,213,203,26,51,18,32,228,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 816 ") {
    byte_vec_t msg { 197,40,151,75 };
    byte_vec_t sig { 75,150,13,173,152,38,90,1,125,127,26,37,52,91,108,188,17,99,78,79,101,39,122,67,133,21,173,145,85,245,255,194,235,88,105,11,158,11,13,139,7,156,188,79,191,248,213,99,45,224,105,92,46,199,151,153,99,235,7,23,51,139,139,65 };
    byte_vec_t pk { 3,210,37,209,160,198,125,254,29,206,194,57,157,228,140,127,87,39,153,2,188,157,29,111,54,151,122,49,76,93,92,76,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 817 ") {
    byte_vec_t msg { 14,85,164,237 };
    byte_vec_t sig { 213,235,25,138,134,10,202,209,40,11,70,128,165,17,32,15,197,38,254,56,170,255,132,182,44,102,3,245,230,117,231,235,237,169,209,4,119,191,45,211,110,254,158,3,199,27,153,84,68,53,36,109,131,98,85,104,204,232,209,12,94,117,203,24 };
    byte_vec_t pk { 4,255,90,66,3,210,123,43,156,215,86,203,134,36,21,187,71,105,87,108,103,1,50,3,35,15,171,242,79,31,0,168,231,82,22,61,22,39,53,62,112,44,115,81,5,34,197,132,162,3,65,135,7,221,33,69,134,193,34,33,152,242,179,203,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 817 ") {
    byte_vec_t msg { 142,208,86,244 };
    byte_vec_t sig { 27,37,94,227,245,244,52,5,253,134,121,123,21,157,114,231,52,36,187,172,6,188,85,231,193,218,236,242,220,125,116,150,169,16,55,0,36,211,10,242,40,74,48,39,0,237,232,187,174,18,75,140,98,243,62,239,208,111,67,27,30,119,21,160 };
    byte_vec_t pk { 4,8,20,40,115,62,66,103,108,166,52,80,16,18,40,16,156,143,71,206,152,77,159,139,140,196,42,205,56,192,206,15,213,102,22,27,249,54,51,37,65,160,29,113,238,253,62,58,117,17,40,6,96,226,31,90,65,160,11,90,220,238,244,96,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 817 ") {
    byte_vec_t msg { 96,115,156,164 };
    byte_vec_t sig { 8,135,152,100,230,193,67,107,129,93,125,62,56,228,183,153,101,156,142,95,40,128,161,147,189,242,172,187,59,230,203,242,180,209,18,90,128,220,92,90,126,228,42,175,149,190,121,16,138,171,189,192,90,5,195,151,243,173,122,50,134,80,197,15 };
    byte_vec_t pk { 3,17,221,57,70,250,96,11,9,118,98,76,249,55,168,113,169,183,89,79,64,70,238,230,2,27,249,55,110,138,81,111,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 817 ") {
    byte_vec_t msg { 105,11,21,183 };
    byte_vec_t sig { 189,230,78,188,19,168,191,108,130,56,65,114,1,15,176,87,208,129,185,81,220,58,169,231,169,205,74,138,197,25,253,115,53,236,225,32,14,228,186,51,61,202,164,20,110,54,205,177,138,124,27,80,150,120,0,223,149,31,13,107,120,76,252,122 };
    byte_vec_t pk { 3,186,0,240,126,236,52,216,18,79,233,68,66,32,164,231,77,215,90,40,94,55,123,153,0,122,221,120,143,95,0,129,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 818 ") {
    byte_vec_t msg { 228,20,29,91 };
    byte_vec_t sig { 154,72,236,96,203,156,215,198,42,134,15,139,38,241,83,118,109,10,159,236,227,82,236,197,186,118,176,118,250,145,122,165,167,237,57,192,22,108,57,85,66,154,187,23,197,187,207,25,129,191,60,153,51,21,81,184,165,171,146,212,22,233,58,106 };
    byte_vec_t pk { 4,217,4,71,184,246,165,94,237,186,148,31,174,214,121,158,161,1,174,99,193,4,71,158,159,179,138,224,84,32,38,252,178,240,209,121,119,96,19,134,193,92,79,168,67,88,78,1,162,247,38,190,212,146,53,106,215,220,4,20,81,88,81,157,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 818 ") {
    byte_vec_t msg { 13,191,235,20 };
    byte_vec_t sig { 176,145,42,152,112,44,62,35,141,84,49,7,161,247,212,245,147,141,215,186,120,112,57,83,152,162,243,192,93,136,108,36,214,90,174,255,236,179,152,29,99,250,64,164,177,151,174,16,176,173,225,154,68,217,187,237,167,193,143,20,143,94,231,203 };
    byte_vec_t pk { 4,134,23,190,246,48,68,14,224,134,82,144,174,5,1,65,239,32,220,96,162,237,248,99,11,240,227,123,193,47,93,244,115,111,36,180,91,96,185,105,207,122,228,159,198,223,84,178,109,30,210,84,243,182,137,187,106,156,99,118,73,3,16,91,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 818 ") {
    byte_vec_t msg { 157,48,192,180 };
    byte_vec_t sig { 239,254,192,229,1,45,237,255,21,99,219,208,210,61,240,219,218,87,7,8,32,182,38,36,119,162,220,42,91,237,229,169,137,177,30,115,43,186,12,0,195,8,81,92,67,151,243,204,176,17,109,147,124,101,90,226,234,67,112,40,46,18,220,33 };
    byte_vec_t pk { 2,72,250,47,247,125,11,131,163,27,206,74,200,75,91,8,60,72,142,253,28,252,254,112,2,248,170,230,212,79,110,183,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 818 ") {
    byte_vec_t msg { 60,128,12,33 };
    byte_vec_t sig { 99,90,70,233,174,122,168,187,202,62,63,161,51,189,35,106,125,28,176,183,238,172,158,10,209,218,60,3,2,171,187,141,101,29,129,66,180,212,191,39,138,16,84,250,10,137,62,41,146,147,64,246,212,9,139,180,78,148,47,52,154,145,239,82 };
    byte_vec_t pk { 3,63,45,227,157,214,37,80,116,97,167,108,208,23,26,203,216,209,17,54,192,44,95,250,230,93,222,144,148,216,37,140,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 819 ") {
    byte_vec_t msg { 31,43,77,240 };
    byte_vec_t sig { 10,118,99,64,93,113,243,133,249,179,216,144,59,94,28,67,20,86,124,57,94,231,222,103,50,54,28,123,253,243,58,171,179,187,12,250,20,214,40,130,56,34,50,38,158,101,4,25,249,168,67,48,24,39,155,1,29,255,253,194,163,5,203,15 };
    byte_vec_t pk { 4,19,243,70,132,233,23,16,16,29,15,184,160,207,185,111,171,131,62,76,26,20,230,241,10,59,54,64,106,214,132,122,34,199,191,41,164,184,196,217,250,146,5,225,26,225,217,89,239,84,181,61,212,142,24,180,95,5,70,137,203,204,179,194,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 819 ") {
    byte_vec_t msg { 3,5,240,214 };
    byte_vec_t sig { 205,95,33,182,160,189,61,58,70,198,230,82,108,160,199,151,45,158,151,146,93,72,227,90,54,192,110,81,121,2,212,228,141,34,106,57,36,233,36,204,46,27,152,198,64,89,182,211,218,45,136,224,174,69,146,158,146,221,111,35,32,0,139,7 };
    byte_vec_t pk { 4,245,71,92,56,146,41,122,71,59,42,213,7,208,90,85,7,51,115,98,51,132,111,199,220,104,197,158,51,156,235,123,30,184,218,126,234,79,97,117,50,164,234,247,223,172,214,233,218,44,208,184,225,50,3,243,130,187,194,229,143,17,48,155,125 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 819 ") {
    byte_vec_t msg { 121,101,70,214 };
    byte_vec_t sig { 145,196,132,214,38,29,33,179,25,156,218,132,138,95,51,66,43,200,98,143,237,121,252,172,224,173,227,168,93,10,76,145,211,108,173,78,22,129,106,113,188,59,215,143,39,4,231,43,156,112,214,63,146,228,226,92,181,221,184,188,21,144,214,152 };
    byte_vec_t pk { 2,155,79,97,47,131,152,240,73,70,114,126,110,202,207,187,64,211,88,143,69,14,173,176,75,44,217,212,111,233,49,207,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 819 ") {
    byte_vec_t msg { 81,151,46,43 };
    byte_vec_t sig { 77,113,74,117,9,47,185,9,215,182,191,115,207,46,185,202,140,31,143,37,1,81,136,200,104,212,202,111,97,63,208,206,77,45,18,121,50,59,252,253,105,234,60,217,76,252,36,245,231,144,69,91,136,165,204,160,34,76,128,57,5,82,53,200 };
    byte_vec_t pk { 3,234,43,40,27,170,131,97,76,189,178,182,98,72,79,11,245,140,160,82,175,229,171,42,7,4,154,249,192,173,244,73,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 820 ") {
    byte_vec_t msg { 40,245,22,106 };
    byte_vec_t sig { 27,217,55,8,78,182,34,32,214,202,136,234,140,3,175,89,123,202,163,201,121,143,171,230,82,86,232,249,248,213,185,199,176,166,236,105,52,46,228,211,37,166,175,81,204,60,189,110,208,54,224,6,53,139,182,131,212,119,56,106,28,8,158,68 };
    byte_vec_t pk { 4,178,60,14,162,155,230,166,115,22,64,233,1,93,223,8,226,92,141,208,88,107,243,199,199,129,170,227,82,41,74,184,7,59,108,74,34,227,243,108,147,39,238,208,114,4,107,210,254,71,253,6,219,250,210,80,94,196,213,101,194,80,107,223,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 820 ") {
    byte_vec_t msg { 64,147,218,129 };
    byte_vec_t sig { 163,36,75,22,34,212,56,27,219,75,201,76,212,149,208,4,183,123,189,55,147,97,61,75,253,46,77,42,253,247,89,225,1,190,178,84,96,224,217,153,54,35,33,178,4,172,92,76,114,7,154,150,84,157,232,210,64,117,144,251,195,157,32,16 };
    byte_vec_t pk { 4,109,160,205,181,9,224,58,172,73,5,138,190,7,24,200,119,58,153,82,49,120,16,18,88,178,139,7,16,223,120,185,174,181,251,0,65,93,67,179,91,168,96,224,8,0,144,127,198,219,111,169,25,121,11,175,115,130,62,251,86,119,248,24,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 820 ") {
    byte_vec_t msg { 133,174,41,168 };
    byte_vec_t sig { 47,223,60,196,27,179,2,143,21,241,50,65,86,124,60,78,241,145,137,76,186,210,51,77,1,60,113,190,240,183,204,120,84,148,61,102,4,135,1,21,32,118,242,199,189,185,148,215,24,48,1,70,193,115,103,142,42,48,128,101,91,242,108,92 };
    byte_vec_t pk { 2,125,184,58,95,232,116,115,86,95,8,16,4,123,213,153,255,74,25,254,197,76,68,39,194,182,70,62,212,210,122,181,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 820 ") {
    byte_vec_t msg { 101,22,39,242 };
    byte_vec_t sig { 212,234,179,24,141,226,91,178,178,2,187,35,139,138,67,75,136,62,225,79,205,18,124,170,87,57,62,168,85,89,78,232,101,192,43,127,200,51,25,155,65,16,246,123,174,99,229,102,3,121,168,199,190,7,124,148,42,173,126,24,201,211,55,186 };
    byte_vec_t pk { 2,218,176,224,247,254,198,150,191,196,136,77,202,102,90,57,137,21,49,33,203,54,215,53,59,151,153,152,11,43,91,188,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 821 ") {
    byte_vec_t msg { 40,29,255,140 };
    byte_vec_t sig { 140,4,147,222,59,29,8,160,164,214,23,112,104,21,42,164,93,235,22,166,206,158,237,168,227,92,66,33,5,14,245,215,127,172,20,12,178,251,135,255,207,78,252,231,246,223,170,141,172,65,38,125,5,176,83,89,174,71,79,31,14,124,21,129 };
    byte_vec_t pk { 4,215,79,146,238,54,127,160,82,195,144,136,129,126,205,151,255,56,196,230,128,76,216,91,85,14,165,154,228,166,137,237,230,144,17,89,173,122,18,18,23,218,107,127,189,59,131,3,27,78,223,118,84,239,169,107,63,254,42,82,15,13,67,202,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 821 ") {
    byte_vec_t msg { 42,29,92,137 };
    byte_vec_t sig { 66,161,54,184,216,220,40,97,26,28,237,141,213,8,179,241,239,251,40,107,192,84,117,222,233,123,144,192,30,13,82,9,169,93,80,13,207,95,138,17,1,44,91,58,91,68,218,24,186,21,186,108,50,243,9,99,168,72,187,69,114,168,143,254 };
    byte_vec_t pk { 4,14,75,52,182,220,237,33,173,21,217,235,35,67,163,113,246,214,184,110,79,6,198,65,60,15,20,4,145,138,44,235,244,251,29,69,19,190,187,210,252,254,26,252,249,92,166,59,10,81,218,137,222,11,160,139,192,204,228,207,27,119,82,34,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 821 ") {
    byte_vec_t msg { 90,198,246,128 };
    byte_vec_t sig { 24,131,136,145,58,19,195,64,151,48,117,94,178,151,132,121,164,83,199,80,96,81,226,47,210,34,106,140,202,159,116,199,170,159,99,76,109,120,164,172,111,237,45,241,228,254,15,67,250,143,65,4,170,184,206,165,165,145,81,65,20,224,162,147 };
    byte_vec_t pk { 2,217,60,176,51,149,219,72,243,62,87,173,135,123,213,186,171,82,138,85,62,128,8,242,145,82,18,94,208,218,33,94,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 821 ") {
    byte_vec_t msg { 247,149,214,61 };
    byte_vec_t sig { 27,16,86,54,115,41,183,239,140,31,191,43,134,71,115,77,49,211,56,201,168,137,170,244,224,22,254,6,122,105,180,137,173,150,142,228,42,236,248,56,230,143,130,174,203,234,78,163,3,123,9,205,255,49,49,76,22,60,20,167,59,161,46,157 };
    byte_vec_t pk { 2,105,251,142,178,230,223,167,244,255,207,227,28,108,28,148,137,181,211,38,203,66,12,112,215,51,76,77,90,252,224,125,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 822 ") {
    byte_vec_t msg { 83,30,139,48 };
    byte_vec_t sig { 140,217,231,81,43,161,134,137,254,148,62,147,254,104,75,52,203,72,68,69,27,10,247,152,65,200,168,44,132,191,142,18,79,127,114,75,172,61,36,220,87,2,162,140,53,30,41,54,89,82,149,95,106,37,13,244,83,40,193,191,90,224,50,122 };
    byte_vec_t pk { 4,144,99,232,189,25,194,22,254,86,214,217,2,177,29,228,206,230,243,219,95,27,2,246,51,57,107,10,210,26,238,71,176,176,20,110,7,38,170,214,5,30,243,249,7,237,186,94,159,38,209,16,220,19,59,227,224,200,92,79,22,118,57,185,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 822 ") {
    byte_vec_t msg { 208,217,55,23 };
    byte_vec_t sig { 0,177,96,78,157,28,133,222,120,19,67,172,222,162,231,231,231,222,99,89,196,90,226,234,41,183,117,227,138,144,10,118,59,45,179,229,126,106,97,109,76,178,86,73,237,239,15,23,37,255,2,22,64,129,128,174,248,21,174,48,106,42,6,250 };
    byte_vec_t pk { 4,147,229,52,10,78,52,214,148,62,254,213,217,212,3,150,34,133,172,31,55,44,151,141,212,237,153,199,59,112,8,186,167,119,157,190,202,146,29,44,45,248,172,134,43,251,136,148,83,2,122,206,253,103,252,86,167,65,220,130,67,90,220,92,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 822 ") {
    byte_vec_t msg { 64,149,55,120 };
    byte_vec_t sig { 166,247,112,197,209,122,208,28,181,255,68,175,147,69,231,255,46,224,220,82,234,91,245,26,69,251,126,179,238,236,235,39,98,86,30,130,52,86,68,13,167,152,25,252,80,79,75,53,146,193,200,250,165,5,207,191,202,46,246,149,77,84,43,213 };
    byte_vec_t pk { 3,250,211,150,111,241,241,114,43,85,106,150,30,246,150,116,131,23,231,96,105,249,135,246,219,59,160,169,70,151,212,13,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 822 ") {
    byte_vec_t msg { 70,152,223,117 };
    byte_vec_t sig { 201,72,143,194,235,138,158,190,50,145,244,168,117,100,42,222,53,102,188,148,157,94,203,13,249,12,33,119,49,1,166,84,176,226,199,26,53,226,220,63,39,48,56,225,57,75,134,153,52,14,22,192,148,215,119,80,186,35,187,124,62,43,203,163 };
    byte_vec_t pk { 2,43,52,75,36,185,132,16,194,130,230,229,242,170,34,195,255,245,210,0,84,149,114,88,99,234,116,203,122,187,218,157,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 823 ") {
    byte_vec_t msg { 107,96,74,88 };
    byte_vec_t sig { 126,124,245,69,172,242,226,115,131,85,104,100,4,75,100,90,236,90,237,233,208,64,104,232,21,233,110,106,61,38,156,114,19,210,111,39,138,23,27,9,24,100,74,91,129,111,72,89,195,208,99,128,113,144,52,125,152,162,145,250,103,177,237,96 };
    byte_vec_t pk { 4,33,202,241,37,123,31,56,101,127,46,146,24,206,189,116,118,253,46,29,9,110,54,3,250,106,91,84,108,83,196,137,32,47,19,140,35,251,214,234,111,209,218,250,71,163,17,176,34,150,91,14,175,226,108,206,227,146,200,14,198,59,216,71,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 823 ") {
    byte_vec_t msg { 12,2,37,64 };
    byte_vec_t sig { 49,179,25,234,54,78,187,53,202,48,193,119,48,137,67,248,108,55,65,229,14,14,19,78,119,1,228,219,255,11,25,141,234,81,59,121,78,140,221,158,61,184,199,208,251,41,151,152,242,249,122,44,89,40,195,205,93,237,35,65,71,99,129,118 };
    byte_vec_t pk { 4,6,99,65,185,65,167,50,149,196,109,114,105,111,53,83,200,25,152,103,44,200,21,251,225,193,60,36,252,59,166,91,5,119,129,58,77,107,42,8,207,23,54,181,139,251,124,2,173,205,100,246,112,110,93,10,231,182,240,154,188,177,156,148,73 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 823 ") {
    byte_vec_t msg { 168,127,82,68 };
    byte_vec_t sig { 229,123,219,88,247,114,141,228,248,255,72,199,156,106,136,141,76,240,163,69,199,1,214,239,195,45,113,127,80,105,76,46,116,54,150,253,2,206,216,131,75,252,224,212,138,239,230,42,49,203,127,93,187,246,23,159,181,61,111,113,82,50,244,38 };
    byte_vec_t pk { 2,243,202,159,234,171,103,158,224,152,35,29,96,148,78,22,169,69,221,99,56,185,190,56,113,126,82,150,205,209,239,160,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 823 ") {
    byte_vec_t msg { 220,103,142,151 };
    byte_vec_t sig { 173,47,83,142,184,91,95,79,130,76,53,228,252,28,54,186,250,19,173,178,147,192,254,218,59,71,163,119,42,149,90,70,245,34,254,105,74,144,227,144,1,144,174,42,195,140,45,136,201,140,150,245,41,70,13,95,159,14,81,211,49,205,169,147 };
    byte_vec_t pk { 2,113,122,194,150,186,5,147,14,140,76,139,15,219,9,203,184,219,27,58,49,219,84,92,87,208,153,11,56,182,140,195,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 824 ") {
    byte_vec_t msg { 227,151,147,138 };
    byte_vec_t sig { 233,136,119,28,142,240,205,59,132,160,13,223,112,239,61,4,47,23,161,235,210,206,80,249,83,135,246,79,176,216,200,74,55,28,102,168,220,51,10,231,207,111,94,27,241,51,236,3,188,118,180,61,5,71,13,126,156,222,118,162,222,46,146,126 };
    byte_vec_t pk { 4,22,71,19,158,91,22,89,56,46,28,5,24,253,150,88,145,88,120,154,112,212,206,231,242,175,70,16,19,140,216,18,82,209,252,250,254,153,19,58,109,209,194,54,203,189,196,111,206,18,48,113,147,173,225,46,147,104,126,251,102,146,148,127,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 824 ") {
    byte_vec_t msg { 225,7,173,232 };
    byte_vec_t sig { 27,108,200,195,38,200,229,186,40,188,146,92,131,252,163,187,157,123,225,76,76,138,208,237,68,109,162,92,56,67,53,60,124,245,172,1,31,132,171,189,246,3,216,196,44,93,141,220,227,198,58,207,234,27,27,162,159,28,21,120,126,201,188,61 };
    byte_vec_t pk { 4,124,247,165,73,3,113,204,106,222,150,71,203,204,248,177,99,43,239,70,106,229,42,52,253,179,2,5,68,15,193,26,123,26,185,32,71,205,230,211,157,91,27,199,111,248,108,220,236,70,232,151,247,125,81,58,196,30,2,115,213,120,208,169,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 824 ") {
    byte_vec_t msg { 154,143,94,33 };
    byte_vec_t sig { 63,25,235,112,167,73,211,75,130,22,243,205,245,145,11,52,41,113,45,76,1,121,166,155,163,183,84,116,73,128,38,118,165,129,128,49,180,159,36,27,227,222,20,255,42,225,45,7,186,203,159,144,79,62,9,108,224,252,121,148,44,32,9,2 };
    byte_vec_t pk { 2,124,184,123,254,230,189,199,199,67,220,145,39,247,197,31,139,217,46,65,6,221,97,233,167,1,144,162,153,226,66,138,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 824 ") {
    byte_vec_t msg { 198,117,89,95 };
    byte_vec_t sig { 34,197,250,100,211,26,15,216,61,14,31,91,137,175,151,189,38,16,12,156,124,20,115,168,212,193,31,242,162,148,162,14,251,64,115,235,108,237,166,181,209,149,90,194,155,239,239,107,141,191,231,19,194,54,241,4,119,234,195,45,17,221,17,232 };
    byte_vec_t pk { 3,154,20,147,144,29,39,46,27,73,22,195,253,205,101,237,58,229,7,241,69,191,230,32,73,46,239,159,176,25,209,105,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 825 ") {
    byte_vec_t msg { 235,104,104,208 };
    byte_vec_t sig { 162,211,69,254,124,247,133,188,174,247,139,214,32,0,220,203,161,32,20,83,149,54,242,233,25,70,205,128,222,213,146,178,55,205,117,184,16,20,72,41,210,234,176,40,115,151,173,129,231,67,166,238,22,99,102,60,208,56,76,157,148,109,198,63 };
    byte_vec_t pk { 4,112,154,156,33,23,221,154,255,26,62,55,94,108,52,66,126,72,234,69,178,217,1,201,29,58,194,197,212,43,72,59,55,14,222,129,57,225,201,129,249,146,38,190,187,86,133,94,114,196,203,222,78,62,147,81,140,58,118,185,79,35,11,108,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 825 ") {
    byte_vec_t msg { 253,185,237,180 };
    byte_vec_t sig { 195,233,167,197,86,61,194,216,44,194,166,83,4,186,6,111,49,106,110,134,113,235,182,232,36,11,243,140,201,237,117,197,65,178,99,243,248,53,161,124,113,200,102,94,53,245,201,87,185,42,41,44,170,197,134,183,235,28,80,202,117,59,155,108 };
    byte_vec_t pk { 4,223,68,169,249,119,55,199,226,8,4,155,95,69,7,158,169,187,255,84,57,76,60,5,43,145,140,104,7,45,75,149,140,137,102,131,134,171,3,68,248,13,43,206,165,149,168,109,59,158,8,121,70,50,33,187,111,13,179,168,225,70,214,198,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 825 ") {
    byte_vec_t msg { 107,136,37,69 };
    byte_vec_t sig { 67,222,224,37,182,77,159,96,190,27,208,205,93,114,124,249,194,216,131,174,66,121,199,108,203,252,42,82,43,22,166,70,69,152,199,36,55,41,18,163,71,63,37,83,6,234,168,133,195,35,136,13,46,212,185,196,22,169,173,64,192,118,4,42 };
    byte_vec_t pk { 2,156,222,176,235,159,244,184,131,151,89,100,249,41,156,239,200,64,126,235,143,220,67,12,134,82,228,98,194,40,110,142,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 825 ") {
    byte_vec_t msg { 96,244,183,252 };
    byte_vec_t sig { 45,253,69,187,32,156,167,204,170,97,70,46,24,42,203,76,20,171,235,69,160,187,220,243,168,181,220,39,246,142,68,242,181,15,220,19,42,57,254,79,62,91,85,68,12,149,150,164,13,228,100,41,187,83,161,189,0,95,96,24,74,217,244,138 };
    byte_vec_t pk { 3,145,173,254,32,217,214,67,223,25,142,5,217,22,104,193,137,181,171,66,52,149,137,29,196,233,136,15,229,130,54,56,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 826 ") {
    byte_vec_t msg { 201,170,68,206 };
    byte_vec_t sig { 139,80,227,215,18,237,229,66,116,160,237,18,44,5,206,224,48,41,219,131,109,233,23,252,102,18,230,41,27,66,212,115,237,200,228,163,13,144,221,33,206,43,20,159,247,157,58,220,49,238,24,84,69,158,212,165,41,29,137,164,106,113,203,199 };
    byte_vec_t pk { 4,173,45,84,44,183,40,208,196,215,12,141,66,77,125,128,210,85,192,93,181,46,106,199,49,35,35,139,73,156,34,68,250,75,145,221,182,71,239,191,226,56,243,171,27,230,148,52,219,224,205,167,118,4,18,135,26,56,135,174,253,87,175,117,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 826 ") {
    byte_vec_t msg { 18,19,148,1 };
    byte_vec_t sig { 32,14,151,196,7,248,171,65,108,161,85,42,175,38,210,0,128,108,90,97,200,80,144,114,26,70,31,227,20,62,37,239,207,121,169,29,81,35,184,3,21,90,108,23,175,81,44,99,139,27,89,143,35,177,41,135,209,124,7,183,192,234,163,249 };
    byte_vec_t pk { 4,115,7,98,195,93,224,40,17,14,37,0,77,136,41,147,248,2,238,128,156,233,91,11,248,222,63,166,23,245,132,2,66,112,94,227,181,60,98,140,62,233,223,11,146,152,142,228,185,213,231,17,16,220,187,245,127,114,63,68,133,112,90,206,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 826 ") {
    byte_vec_t msg { 90,45,49,186 };
    byte_vec_t sig { 157,181,56,48,75,90,242,195,148,57,156,85,12,80,221,64,185,224,144,123,123,221,4,114,85,67,108,30,238,116,209,99,105,12,21,246,164,27,33,196,11,25,4,80,250,232,253,225,7,240,203,34,230,213,48,152,207,55,68,56,145,239,116,170 };
    byte_vec_t pk { 2,246,17,219,211,100,14,95,71,159,2,191,111,9,225,235,23,229,178,237,180,198,159,69,86,225,85,199,64,195,150,87,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 826 ") {
    byte_vec_t msg { 208,62,162,134 };
    byte_vec_t sig { 224,51,83,247,41,255,137,141,133,231,173,132,183,59,10,45,21,184,86,209,10,78,244,132,174,162,126,56,169,160,3,159,90,200,1,101,191,189,153,64,81,164,76,98,197,91,66,203,186,125,187,140,160,184,172,85,237,107,144,204,150,23,195,37 };
    byte_vec_t pk { 2,169,5,253,23,60,170,89,61,212,30,54,19,129,149,57,192,122,137,77,240,48,62,62,93,175,204,151,116,56,147,251,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 827 ") {
    byte_vec_t msg { 254,191,209,43 };
    byte_vec_t sig { 236,48,117,218,36,157,181,136,69,243,208,21,40,127,149,40,224,204,64,217,169,232,218,70,218,231,60,231,160,199,19,92,19,209,113,89,97,253,77,105,81,211,128,132,141,206,104,97,107,102,135,213,203,111,245,41,113,45,95,235,122,213,0,44 };
    byte_vec_t pk { 4,178,216,84,167,155,83,121,144,82,9,251,231,54,1,198,38,156,14,66,57,68,42,248,169,80,97,97,66,59,144,161,0,184,54,230,109,196,227,165,172,226,155,104,247,4,141,61,91,66,183,236,100,90,254,245,224,46,67,25,30,48,91,47,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 827 ") {
    byte_vec_t msg { 116,211,232,45 };
    byte_vec_t sig { 46,70,172,60,185,96,60,37,54,153,14,16,158,205,39,51,185,146,188,164,136,72,196,154,254,201,64,206,53,122,11,115,245,19,233,145,129,50,134,115,146,61,86,61,0,40,19,195,90,134,196,46,15,75,111,59,99,29,8,251,131,148,167,201 };
    byte_vec_t pk { 4,119,169,36,24,177,118,77,12,90,6,72,35,252,176,65,65,170,164,249,60,39,195,60,232,249,254,127,194,88,122,13,241,94,95,112,57,205,76,207,122,169,46,250,62,18,159,19,177,43,3,187,140,175,221,179,166,5,109,178,189,86,69,153,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 827 ") {
    byte_vec_t msg { 105,179,46,83 };
    byte_vec_t sig { 85,195,235,109,121,129,80,220,70,84,77,139,144,195,43,224,242,196,37,218,179,111,31,255,36,217,162,191,223,51,67,91,201,203,169,195,230,171,216,179,176,124,238,156,108,126,14,224,143,178,168,31,68,88,88,208,217,86,199,221,4,108,143,45 };
    byte_vec_t pk { 3,157,57,20,16,78,8,35,69,72,225,229,127,44,72,74,134,164,100,59,187,2,250,11,226,255,108,191,94,17,180,76,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 827 ") {
    byte_vec_t msg { 104,135,163,148 };
    byte_vec_t sig { 218,97,74,248,158,89,70,119,222,171,82,7,241,230,251,174,17,237,126,100,13,223,230,124,238,209,126,230,82,1,61,221,115,154,142,248,161,199,217,13,204,174,104,107,210,233,45,43,167,66,2,232,80,236,24,156,149,98,65,60,125,186,14,196 };
    byte_vec_t pk { 3,84,203,43,130,129,251,118,144,194,217,161,141,211,145,57,213,231,149,73,4,44,237,23,202,239,151,222,89,60,29,144,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 828 ") {
    byte_vec_t msg { 113,156,53,71 };
    byte_vec_t sig { 101,18,130,226,53,183,83,47,208,184,186,210,184,124,99,22,115,101,172,39,39,59,189,83,114,254,18,224,31,15,199,81,4,2,168,74,84,62,229,172,24,87,89,66,56,174,233,26,82,39,136,43,3,27,18,124,214,156,138,170,32,107,24,94 };
    byte_vec_t pk { 4,241,22,224,29,225,83,85,194,37,134,34,137,246,194,161,45,187,176,132,246,2,100,173,130,34,213,0,199,51,33,46,46,6,150,83,227,233,125,28,75,165,99,49,228,127,61,200,77,220,165,48,161,53,195,34,65,11,42,157,130,65,137,155,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 828 ") {
    byte_vec_t msg { 244,56,230,153 };
    byte_vec_t sig { 4,237,166,83,223,158,94,209,244,217,53,82,96,20,206,159,1,250,215,223,231,66,34,79,100,54,151,228,153,208,182,89,109,78,122,26,172,46,173,58,20,118,177,112,200,113,29,122,53,5,81,112,1,142,200,51,111,242,84,121,7,68,93,150 };
    byte_vec_t pk { 4,125,121,148,72,89,169,66,38,167,49,36,1,231,52,192,26,58,110,6,244,163,191,212,39,93,169,250,203,110,109,113,114,15,20,237,60,249,162,56,165,150,118,151,170,251,203,86,70,35,146,198,72,226,44,218,40,118,164,7,177,202,165,142,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 828 ") {
    byte_vec_t msg { 135,16,152,195 };
    byte_vec_t sig { 97,208,202,33,202,214,70,97,97,162,154,3,201,78,121,8,108,161,55,151,106,210,74,255,123,198,36,77,122,27,43,24,80,98,66,234,137,116,29,236,187,67,254,159,9,151,197,129,79,211,168,178,102,173,220,147,133,148,88,247,139,54,185,65 };
    byte_vec_t pk { 2,70,193,229,35,203,109,35,247,47,159,99,235,33,128,140,43,135,105,8,38,140,68,233,94,94,133,153,251,221,182,190,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 828 ") {
    byte_vec_t msg { 56,95,152,212 };
    byte_vec_t sig { 241,101,86,144,116,109,178,127,181,76,10,223,142,34,240,244,78,246,54,68,226,75,117,236,108,95,23,196,77,18,45,63,239,165,102,186,125,247,45,34,244,64,46,128,35,206,234,21,203,18,161,107,228,36,207,119,250,75,200,213,70,71,233,254 };
    byte_vec_t pk { 2,81,126,0,201,173,254,117,100,35,137,122,152,54,209,112,16,227,166,125,129,157,228,145,68,13,72,25,172,93,226,97,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 829 ") {
    byte_vec_t msg { 40,55,163,36 };
    byte_vec_t sig { 244,33,226,133,178,130,239,152,237,42,10,63,61,39,195,46,85,36,169,222,234,1,137,40,198,71,125,131,211,32,61,242,143,107,241,239,101,46,153,56,31,56,172,137,79,238,161,194,184,252,128,142,161,220,107,163,219,118,136,171,99,192,123,230 };
    byte_vec_t pk { 4,43,81,31,8,248,98,143,181,147,206,141,14,127,146,196,42,100,12,130,175,219,129,137,67,10,250,75,109,129,181,75,59,241,207,63,185,85,160,17,93,137,229,1,221,222,26,99,59,175,61,183,108,208,221,51,197,223,190,95,150,142,253,119,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 829 ") {
    byte_vec_t msg { 159,183,127,123 };
    byte_vec_t sig { 134,208,240,243,78,143,52,150,173,159,210,255,132,55,118,97,122,82,231,93,226,221,55,92,241,161,71,5,182,91,248,168,98,181,230,202,209,226,10,68,50,73,59,130,7,198,151,184,5,137,26,144,243,179,167,165,155,107,46,140,235,177,153,123 };
    byte_vec_t pk { 4,124,240,70,34,91,161,192,101,44,54,65,68,45,119,49,23,78,237,243,100,193,101,12,241,58,43,210,61,126,13,142,52,38,25,2,123,229,135,146,216,86,175,148,17,220,18,30,125,173,135,211,235,75,6,14,116,238,240,119,72,241,154,29,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 829 ") {
    byte_vec_t msg { 73,136,98,108 };
    byte_vec_t sig { 241,15,169,162,4,170,66,110,103,62,120,241,164,150,36,222,109,44,109,208,44,86,13,227,217,97,125,191,189,38,39,37,161,186,77,183,147,207,13,160,127,198,195,90,221,9,76,47,254,171,9,196,43,202,182,96,159,162,9,240,33,126,251,5 };
    byte_vec_t pk { 3,108,230,104,63,144,192,209,244,245,87,45,78,7,6,120,165,245,248,47,183,182,21,8,115,242,51,0,101,124,172,163,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 829 ") {
    byte_vec_t msg { 3,170,164,55 };
    byte_vec_t sig { 17,42,139,82,16,146,58,95,195,63,228,102,215,49,199,135,41,207,164,109,132,89,21,230,136,198,81,5,228,161,145,65,106,194,7,232,255,41,170,125,248,86,167,98,174,109,178,9,223,135,21,221,45,113,9,176,242,56,216,240,15,104,201,194 };
    byte_vec_t pk { 3,68,111,145,232,150,64,216,113,102,254,223,210,153,64,170,20,140,15,8,116,109,61,254,119,58,204,106,11,48,95,148,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 830 ") {
    byte_vec_t msg { 102,179,38,115 };
    byte_vec_t sig { 149,141,17,69,239,18,197,11,14,114,16,209,189,124,243,128,154,109,22,111,225,25,199,138,22,126,248,130,216,32,9,116,81,37,109,100,143,255,76,19,227,21,222,211,143,91,29,62,61,254,164,217,197,186,193,213,170,247,179,6,48,90,121,245 };
    byte_vec_t pk { 4,33,23,247,21,37,250,143,119,26,79,10,206,119,106,142,74,174,27,53,145,151,34,108,61,162,142,207,97,0,116,43,138,202,228,237,125,118,120,44,111,246,33,112,111,116,4,24,33,68,82,117,16,29,12,108,182,169,25,75,237,200,242,140,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 830 ") {
    byte_vec_t msg { 241,210,10,57 };
    byte_vec_t sig { 196,88,182,133,15,244,136,165,141,231,146,70,214,192,221,118,203,92,124,8,87,185,182,104,233,125,2,96,61,34,206,51,37,120,129,85,126,161,57,165,207,28,193,36,211,236,26,158,14,22,71,130,15,90,7,113,147,88,37,145,248,94,165,61 };
    byte_vec_t pk { 4,160,106,156,106,44,87,119,169,145,72,16,19,47,233,245,101,226,45,129,135,46,19,70,60,247,161,107,108,225,194,152,250,197,201,255,120,21,149,3,166,156,158,57,4,64,145,54,255,184,239,123,32,103,111,48,66,46,225,231,108,12,87,7,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 830 ") {
    byte_vec_t msg { 190,60,145,138 };
    byte_vec_t sig { 61,67,198,102,31,115,149,137,70,24,148,11,3,83,103,154,87,246,196,7,21,112,174,42,108,7,29,236,228,3,52,196,156,128,55,208,93,149,242,255,10,144,222,141,100,129,136,229,215,221,35,94,215,162,167,112,103,91,190,241,155,99,50,223 };
    byte_vec_t pk { 2,225,145,163,251,104,82,184,219,69,42,37,153,0,28,161,40,232,185,163,147,97,95,0,171,121,79,222,17,188,158,222,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 830 ") {
    byte_vec_t msg { 216,81,205,226 };
    byte_vec_t sig { 36,122,87,173,8,187,223,201,43,191,122,72,68,145,92,77,136,113,25,193,220,228,169,229,177,209,242,160,166,86,143,5,114,36,93,140,204,106,74,94,38,13,160,117,34,162,14,173,108,24,229,164,56,225,183,141,95,226,18,15,101,88,64,142 };
    byte_vec_t pk { 2,147,124,143,243,229,133,79,78,117,47,63,45,123,149,173,30,236,76,200,71,175,166,122,82,255,253,87,183,90,241,30,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 831 ") {
    byte_vec_t msg { 71,202,241,93 };
    byte_vec_t sig { 233,88,188,160,136,203,77,235,27,123,145,252,16,195,113,65,138,3,104,81,197,61,175,21,84,218,85,141,68,52,220,207,137,188,247,169,253,244,37,122,191,170,11,148,178,175,251,100,186,105,198,146,250,103,201,64,28,115,215,196,36,172,127,173 };
    byte_vec_t pk { 4,25,179,149,136,185,33,55,179,37,46,167,57,163,205,99,145,38,152,192,153,245,201,51,186,117,207,51,95,91,30,24,16,201,209,165,250,11,204,149,130,208,100,229,9,207,174,52,154,248,157,96,168,83,207,232,239,164,32,41,248,168,152,225,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 831 ") {
    byte_vec_t msg { 54,130,249,0 };
    byte_vec_t sig { 222,18,194,34,58,38,60,210,161,249,229,241,57,8,171,221,57,58,241,44,69,32,245,114,121,36,223,134,70,77,130,219,91,31,241,18,89,33,134,224,146,210,41,132,146,137,64,242,120,188,132,146,41,95,111,242,20,77,126,192,201,244,179,173 };
    byte_vec_t pk { 4,9,70,135,230,247,200,185,83,156,77,77,97,156,17,32,231,7,178,109,95,0,240,66,21,6,66,94,142,146,106,240,111,178,105,22,147,23,56,210,118,168,106,29,48,226,81,169,74,15,88,252,169,54,171,204,96,76,104,153,9,136,156,187,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 831 ") {
    byte_vec_t msg { 177,157,214,180 };
    byte_vec_t sig { 14,45,174,62,189,236,164,250,32,79,220,86,163,185,68,66,24,232,223,116,206,21,170,240,87,224,46,94,182,250,160,255,253,117,18,12,65,170,70,96,149,201,156,104,98,113,140,189,45,68,128,68,175,6,118,247,249,99,97,57,232,244,129,8 };
    byte_vec_t pk { 2,54,115,93,21,183,21,139,115,126,208,147,211,207,219,249,234,112,62,47,83,10,244,33,106,88,107,229,159,142,160,11,237 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 831 ") {
    byte_vec_t msg { 7,181,114,103 };
    byte_vec_t sig { 119,249,248,114,190,137,180,144,20,154,48,23,182,253,2,186,77,62,2,170,16,255,18,184,181,160,81,3,46,199,104,235,69,186,113,193,245,141,218,25,89,145,174,129,55,10,217,117,229,32,112,5,19,161,5,191,47,252,162,137,185,103,210,36 };
    byte_vec_t pk { 2,254,21,94,65,254,181,57,179,154,232,133,24,6,75,77,190,93,163,168,42,205,201,168,240,156,209,227,64,105,182,132,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 832 ") {
    byte_vec_t msg { 190,52,64,202 };
    byte_vec_t sig { 208,170,134,200,87,176,193,132,78,2,244,34,45,110,249,158,121,192,80,51,13,110,105,79,160,110,50,53,6,207,132,230,216,226,173,208,68,33,19,70,125,230,14,210,181,114,127,17,34,171,186,94,227,169,230,204,178,88,237,61,69,48,70,148 };
    byte_vec_t pk { 4,161,141,116,236,169,72,201,85,72,142,116,109,194,147,159,129,114,114,88,125,31,59,157,68,199,189,211,196,5,200,135,151,114,134,19,238,96,116,99,241,249,138,120,218,33,61,10,145,30,97,212,107,160,251,141,242,152,7,38,146,136,245,173,202 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 832 ") {
    byte_vec_t msg { 251,21,192,76 };
    byte_vec_t sig { 98,45,188,19,19,232,118,207,174,195,10,24,13,124,210,54,236,170,196,74,27,69,56,246,188,72,249,245,210,186,42,66,21,204,45,15,201,153,161,227,117,92,96,65,0,204,99,133,82,176,103,200,67,224,172,241,239,151,154,37,62,69,125,24 };
    byte_vec_t pk { 4,222,156,125,14,251,68,6,13,212,204,144,188,62,29,177,216,85,252,109,176,26,139,237,109,213,26,154,147,64,11,192,23,121,252,123,167,79,115,227,147,91,48,155,38,174,251,146,120,7,197,141,217,197,52,254,153,83,176,139,248,187,48,26,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 832 ") {
    byte_vec_t msg { 246,98,194,137 };
    byte_vec_t sig { 247,24,105,81,92,45,251,75,218,154,108,151,61,224,27,125,173,5,121,116,237,43,187,110,87,61,210,69,18,113,57,195,17,212,180,41,11,220,71,42,13,18,226,108,41,59,213,138,49,119,215,114,143,41,192,120,183,11,180,144,180,204,52,41 };
    byte_vec_t pk { 3,32,166,72,236,122,127,148,180,92,236,95,237,64,235,86,162,39,230,177,179,208,173,213,93,178,5,78,221,209,242,7,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 832 ") {
    byte_vec_t msg { 30,67,193,160 };
    byte_vec_t sig { 171,98,125,198,201,204,33,40,196,164,29,243,73,199,111,88,255,19,117,27,69,85,39,227,195,16,135,194,162,202,101,129,68,214,64,40,143,114,126,0,200,99,8,139,82,41,0,102,156,12,17,230,95,158,225,151,113,92,242,87,32,246,170,109 };
    byte_vec_t pk { 3,52,122,255,115,66,123,124,216,71,121,218,189,199,98,164,225,190,207,7,151,34,245,151,56,73,24,7,245,26,147,158,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 833 ") {
    byte_vec_t msg { 243,193,200,69 };
    byte_vec_t sig { 252,243,148,93,153,69,204,19,219,114,106,225,142,90,27,88,175,169,226,53,251,167,131,111,219,228,234,134,173,157,84,85,96,45,194,31,61,86,216,33,190,21,44,237,34,148,228,192,210,251,186,213,213,36,211,114,61,145,247,250,167,76,161,73 };
    byte_vec_t pk { 4,63,191,96,155,231,71,85,216,137,130,21,145,232,57,171,190,17,114,94,137,194,132,63,32,174,127,52,123,210,146,74,41,189,141,121,233,154,174,240,36,134,151,108,128,60,28,47,184,63,150,11,134,101,140,82,50,217,18,235,169,86,133,123,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 833 ") {
    byte_vec_t msg { 131,253,6,46 };
    byte_vec_t sig { 154,91,215,23,250,169,225,71,247,179,10,238,39,229,117,177,33,192,214,234,233,231,65,1,171,108,223,42,42,131,34,148,136,166,119,59,147,71,223,116,209,72,209,180,162,216,236,202,183,52,128,116,127,231,180,65,181,143,36,151,200,213,123,249 };
    byte_vec_t pk { 4,106,135,141,22,146,169,52,193,188,69,212,175,229,111,132,20,76,22,20,216,121,38,211,135,103,174,13,6,146,202,213,255,178,89,157,189,110,198,31,16,210,66,148,194,110,25,223,164,86,195,185,92,225,49,97,247,162,206,189,92,197,234,135,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 833 ") {
    byte_vec_t msg { 108,179,238,49 };
    byte_vec_t sig { 131,178,42,184,138,78,30,74,192,139,121,83,39,191,165,152,14,238,171,76,216,67,74,221,197,24,101,211,49,211,27,83,116,36,125,23,254,41,114,35,174,245,52,67,254,75,99,244,58,255,168,27,151,107,189,6,249,181,164,229,128,166,168,218 };
    byte_vec_t pk { 2,14,145,57,152,244,38,26,70,53,122,6,54,202,127,210,245,147,55,42,23,209,201,234,136,216,73,143,254,244,127,202,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 833 ") {
    byte_vec_t msg { 59,61,37,112 };
    byte_vec_t sig { 51,236,137,20,75,40,222,3,223,77,166,47,217,41,93,61,246,209,59,233,181,173,42,77,122,155,54,25,4,228,220,100,152,221,21,90,94,177,206,39,180,95,141,107,84,86,164,83,132,96,210,117,204,153,22,15,205,200,142,91,137,29,196,222 };
    byte_vec_t pk { 3,145,204,162,17,7,96,7,217,1,77,28,100,185,130,228,11,62,0,132,133,194,194,124,206,30,21,104,5,63,185,232,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 834 ") {
    byte_vec_t msg { 128,231,155,77 };
    byte_vec_t sig { 37,218,136,168,108,161,4,187,213,74,26,57,71,2,140,68,169,241,250,138,193,155,9,63,227,98,103,28,210,166,86,219,25,93,34,94,148,247,43,119,34,202,182,36,6,115,118,236,71,34,205,136,216,25,253,149,41,85,252,218,225,30,12,216 };
    byte_vec_t pk { 4,61,48,246,6,115,2,63,35,60,160,193,200,238,71,33,185,228,30,172,10,24,59,248,88,219,249,250,235,100,193,14,76,182,122,137,87,158,187,9,27,139,205,0,208,107,22,167,89,253,139,154,117,107,105,244,51,98,10,114,108,239,41,142,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 834 ") {
    byte_vec_t msg { 150,127,192,151 };
    byte_vec_t sig { 244,0,14,6,188,115,11,173,98,61,88,29,1,73,178,118,132,66,32,232,168,234,31,15,120,159,232,248,226,74,208,165,255,91,77,184,46,58,154,73,162,143,48,124,17,253,93,32,248,153,40,168,12,200,122,78,239,226,104,127,251,213,158,177 };
    byte_vec_t pk { 4,244,150,162,62,105,176,6,70,222,80,239,124,137,223,229,54,27,181,56,51,196,12,11,107,229,160,38,57,147,194,176,179,209,100,207,82,20,252,154,145,171,138,246,146,137,119,179,204,15,46,253,129,208,126,145,54,169,114,42,64,17,81,166,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 834 ") {
    byte_vec_t msg { 30,60,153,182 };
    byte_vec_t sig { 76,142,218,112,45,27,16,213,112,35,7,50,144,155,158,246,113,218,10,59,27,118,196,13,246,247,99,65,212,195,238,192,199,84,175,144,64,37,10,171,36,167,169,93,230,64,148,91,194,186,67,7,123,133,87,188,44,35,240,169,21,248,242,73 };
    byte_vec_t pk { 3,175,234,198,54,186,92,175,153,152,49,210,176,129,114,169,157,103,46,118,61,190,94,132,88,231,168,245,61,18,63,54,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 834 ") {
    byte_vec_t msg { 194,49,238,155 };
    byte_vec_t sig { 42,50,205,207,76,57,45,170,119,254,53,140,92,63,17,173,163,57,185,107,25,191,94,13,5,225,39,249,162,211,243,124,207,82,68,123,13,157,1,28,245,181,230,255,59,170,53,200,69,235,139,139,106,185,78,166,214,7,6,38,163,173,121,56 };
    byte_vec_t pk { 2,245,176,51,150,217,139,185,86,47,88,36,109,88,166,20,36,176,79,191,76,103,135,232,123,215,173,59,136,69,57,124,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 835 ") {
    byte_vec_t msg { 226,217,34,102 };
    byte_vec_t sig { 81,121,92,234,91,117,138,187,225,199,27,80,56,2,214,123,29,55,197,149,58,212,245,191,196,48,197,182,193,180,249,93,234,58,214,64,8,65,173,158,44,212,165,40,115,17,31,221,145,57,12,140,247,72,116,187,250,64,105,35,45,199,114,125 };
    byte_vec_t pk { 4,236,141,182,90,1,94,55,229,70,121,76,241,123,130,232,25,127,137,176,120,6,30,191,88,90,197,40,255,110,119,67,157,229,29,27,91,192,220,187,60,158,79,116,196,231,206,203,185,43,191,217,111,221,26,90,195,119,21,207,119,111,140,130,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 835 ") {
    byte_vec_t msg { 214,57,239,23 };
    byte_vec_t sig { 50,196,114,150,148,203,68,24,242,232,29,46,150,0,148,113,133,51,109,215,52,103,17,129,138,220,208,133,193,106,78,0,173,91,90,146,114,200,14,49,134,218,106,168,111,238,57,58,247,64,23,105,4,13,7,189,32,207,95,163,194,244,194,160 };
    byte_vec_t pk { 4,44,53,49,146,147,66,49,243,114,126,220,208,3,102,149,127,255,232,214,79,122,15,251,19,131,246,222,33,208,194,105,12,225,11,209,16,182,196,7,188,152,21,75,226,175,37,47,178,42,93,65,212,32,125,78,177,66,154,79,110,150,208,208,40 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 835 ") {
    byte_vec_t msg { 253,7,159,21 };
    byte_vec_t sig { 245,217,57,229,65,164,245,245,150,107,86,166,246,176,18,183,163,118,1,42,134,154,112,89,8,207,80,209,82,200,15,136,93,131,10,164,203,73,156,123,76,40,250,88,54,16,188,216,87,118,190,130,179,154,87,131,9,200,157,30,30,117,103,16 };
    byte_vec_t pk { 2,173,43,172,123,95,0,195,84,132,100,194,0,233,70,33,251,156,32,2,144,131,157,166,225,34,243,12,46,147,182,115,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 835 ") {
    byte_vec_t msg { 128,210,106,58 };
    byte_vec_t sig { 82,79,97,66,153,207,237,88,81,192,165,59,178,220,77,225,158,8,29,254,194,108,53,110,196,15,178,236,78,90,60,173,129,133,10,184,75,153,193,154,73,113,131,172,227,76,254,96,80,214,191,137,205,230,224,141,227,226,164,136,14,250,7,248 };
    byte_vec_t pk { 2,84,223,193,255,236,219,253,71,23,202,120,115,54,248,210,141,228,101,47,97,171,116,109,29,219,179,13,81,156,237,216,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 836 ") {
    byte_vec_t msg { 218,213,228,111 };
    byte_vec_t sig { 23,144,204,12,50,163,95,254,198,254,247,224,12,123,62,172,99,48,41,251,31,120,205,213,116,198,195,41,53,246,248,136,115,40,40,24,168,114,206,89,188,32,27,13,23,55,64,152,189,217,192,125,44,125,179,151,64,27,166,20,130,211,99,16 };
    byte_vec_t pk { 4,234,194,166,216,89,26,36,140,52,89,163,3,24,147,75,113,234,15,169,245,200,105,157,240,97,113,191,89,158,78,142,200,213,202,38,82,114,29,217,201,78,23,8,97,194,230,114,140,4,217,219,126,18,154,209,6,244,61,208,215,174,8,224,28 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 836 ") {
    byte_vec_t msg { 231,159,138,7 };
    byte_vec_t sig { 79,108,30,119,228,20,103,107,191,41,152,67,93,44,42,80,192,134,218,104,54,129,158,80,161,60,164,33,27,9,190,131,0,156,37,227,23,76,171,16,36,115,131,59,199,75,32,146,129,85,200,233,208,48,179,222,159,185,151,228,175,60,230,190 };
    byte_vec_t pk { 4,135,114,52,36,163,198,97,194,162,100,57,91,165,251,110,207,41,42,5,35,209,196,65,173,173,140,240,39,226,46,177,218,185,91,93,103,121,201,168,167,196,86,61,160,196,25,8,251,114,214,208,208,93,84,97,10,60,63,109,249,85,150,2,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 836 ") {
    byte_vec_t msg { 209,59,45,178 };
    byte_vec_t sig { 212,229,59,212,34,9,234,4,185,185,129,26,179,225,211,209,193,176,13,119,230,216,168,8,145,63,82,245,224,161,228,12,155,15,143,244,54,84,127,115,123,116,160,119,43,14,129,68,17,9,48,70,38,181,172,69,32,3,15,179,135,175,110,231 };
    byte_vec_t pk { 3,142,4,90,85,183,222,20,207,202,15,109,17,73,33,82,50,97,126,206,112,164,34,56,25,160,113,157,225,165,216,250,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 836 ") {
    byte_vec_t msg { 246,176,229,66 };
    byte_vec_t sig { 162,136,192,194,90,239,153,81,141,193,243,180,83,124,40,68,28,249,147,17,145,138,175,43,139,75,153,187,12,17,152,211,49,193,238,150,183,189,113,21,238,133,120,130,112,169,74,210,44,13,56,239,156,145,111,43,225,68,65,116,230,130,169,239 };
    byte_vec_t pk { 3,134,70,67,65,153,209,92,40,99,76,101,226,153,185,43,168,207,107,125,100,54,249,27,220,100,23,48,14,65,103,234,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 837 ") {
    byte_vec_t msg { 35,145,147,87 };
    byte_vec_t sig { 69,106,117,150,220,122,223,189,103,54,82,49,72,133,133,195,250,97,251,47,117,20,167,11,61,196,5,3,16,205,15,60,169,41,229,35,213,180,20,111,132,249,31,23,70,240,214,9,182,90,94,48,169,170,153,201,184,9,102,185,126,79,95,185 };
    byte_vec_t pk { 4,201,88,33,12,20,224,131,146,171,185,166,73,11,90,172,143,31,213,122,62,208,21,191,248,180,218,153,23,239,202,235,163,222,56,110,152,11,110,223,99,99,58,180,122,240,2,216,216,5,10,204,78,157,39,101,6,132,158,89,227,123,141,242,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 837 ") {
    byte_vec_t msg { 84,240,31,143 };
    byte_vec_t sig { 42,191,164,31,61,39,34,117,44,249,241,213,147,237,57,158,181,217,9,171,210,86,127,11,191,210,98,200,165,175,75,194,0,179,80,187,174,220,174,229,158,88,165,127,144,123,157,35,181,21,157,69,195,74,9,49,135,166,253,10,149,131,183,108 };
    byte_vec_t pk { 4,115,140,82,4,34,209,212,250,184,17,21,226,1,236,206,15,24,173,210,116,174,10,43,115,217,73,133,95,196,31,87,49,165,151,208,123,31,66,106,81,35,122,208,20,246,148,218,10,238,239,0,77,175,43,143,166,84,196,239,207,164,187,152,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 837 ") {
    byte_vec_t msg { 114,162,149,67 };
    byte_vec_t sig { 162,13,215,3,67,113,55,137,180,206,181,132,76,112,103,38,254,81,121,2,72,250,45,216,61,136,77,191,112,148,87,222,160,7,106,177,138,46,100,201,211,39,154,73,226,47,87,213,41,41,115,23,211,225,8,216,21,183,37,171,24,171,86,51 };
    byte_vec_t pk { 3,86,233,200,221,173,141,170,45,21,162,57,228,59,242,250,69,200,41,149,89,118,78,98,255,238,1,132,230,101,24,187,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 837 ") {
    byte_vec_t msg { 199,172,34,43 };
    byte_vec_t sig { 133,182,162,241,4,69,13,83,247,154,116,45,167,166,183,159,61,188,52,54,205,245,70,141,74,44,67,67,87,174,164,13,180,80,234,252,240,159,124,25,81,122,152,65,249,174,49,76,167,116,12,48,168,154,146,74,82,221,200,5,183,229,37,168 };
    byte_vec_t pk { 2,107,154,116,132,235,111,15,139,183,195,15,51,127,27,73,192,126,58,198,69,110,203,246,79,133,66,7,233,196,188,11,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 838 ") {
    byte_vec_t msg { 63,91,233,248 };
    byte_vec_t sig { 108,209,128,217,51,34,27,90,147,205,7,138,24,47,51,57,88,155,45,162,59,101,151,193,192,125,211,95,165,64,45,204,21,219,124,80,130,72,248,101,134,217,3,5,240,17,31,149,68,151,168,226,46,178,191,148,160,42,4,212,171,214,222,244 };
    byte_vec_t pk { 4,40,32,161,100,25,77,36,138,247,55,230,164,112,96,246,181,42,4,217,192,170,6,174,92,65,155,240,45,164,124,58,251,38,215,139,226,216,155,33,146,217,108,43,182,189,146,199,79,140,208,187,161,184,215,39,60,83,195,82,154,69,207,95,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 838 ") {
    byte_vec_t msg { 253,167,1,52 };
    byte_vec_t sig { 217,109,205,82,92,244,222,218,26,59,49,121,78,3,229,125,90,81,146,117,246,198,129,124,48,51,172,128,74,56,130,215,78,207,70,241,119,201,252,178,216,118,118,218,111,17,34,198,240,169,140,37,227,41,83,76,44,104,232,188,162,173,78,194 };
    byte_vec_t pk { 4,244,145,192,32,175,153,74,140,254,252,61,62,150,85,202,213,205,84,19,94,187,200,66,53,32,7,14,198,109,125,225,141,93,12,26,170,224,42,240,180,152,163,18,186,216,240,157,208,186,136,163,135,210,174,7,7,52,171,64,121,49,18,48,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 838 ") {
    byte_vec_t msg { 252,114,211,69 };
    byte_vec_t sig { 128,61,84,233,107,41,159,222,60,0,181,35,1,230,148,5,6,252,254,84,95,109,44,226,175,107,77,234,2,235,253,163,22,70,109,9,76,75,15,232,251,8,118,208,201,82,48,122,84,33,207,57,128,150,74,131,40,76,123,223,83,196,129,233 };
    byte_vec_t pk { 2,145,141,176,75,193,204,252,158,72,180,1,101,95,111,212,14,169,73,179,59,189,40,211,246,115,240,203,183,11,242,53,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 838 ") {
    byte_vec_t msg { 130,148,9,242 };
    byte_vec_t sig { 77,240,79,139,67,243,82,0,238,9,73,7,61,237,88,116,237,160,128,87,177,194,53,34,62,220,89,88,167,135,237,2,116,192,226,74,194,199,48,5,237,79,127,236,200,88,226,51,216,183,234,216,218,174,40,151,125,116,195,120,66,229,211,50 };
    byte_vec_t pk { 2,133,124,123,131,185,67,97,156,84,140,146,243,223,117,63,28,42,255,54,130,83,232,205,233,204,57,240,194,41,224,88,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 839 ") {
    byte_vec_t msg { 51,158,158,163 };
    byte_vec_t sig { 18,119,50,168,96,232,239,247,249,130,238,15,63,248,72,82,165,179,109,86,231,122,153,148,34,189,141,10,182,221,119,202,200,180,10,219,224,50,148,63,74,237,25,90,115,193,135,89,233,43,151,161,58,65,201,21,231,25,74,192,131,58,211,241 };
    byte_vec_t pk { 4,121,73,25,196,156,77,183,117,5,31,20,11,161,52,204,148,121,166,139,185,172,188,95,235,59,246,66,11,250,20,137,241,219,155,255,70,204,111,61,179,62,18,224,241,213,231,168,161,164,194,74,33,147,40,249,83,128,81,103,109,170,253,27,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 839 ") {
    byte_vec_t msg { 242,175,76,22 };
    byte_vec_t sig { 123,98,235,246,140,125,230,103,53,112,46,84,78,96,98,116,11,120,172,26,208,140,55,208,113,173,58,251,70,40,78,148,46,201,114,71,202,40,87,81,147,166,43,137,176,86,30,178,172,23,152,213,193,195,57,53,179,108,50,45,170,59,226,93 };
    byte_vec_t pk { 4,58,153,15,135,230,66,124,176,4,40,207,95,42,138,167,106,217,14,142,20,134,103,147,97,171,135,207,237,65,64,236,201,125,200,197,29,212,180,58,136,151,171,80,116,68,10,125,4,13,37,231,26,247,2,135,75,184,193,14,164,122,207,205,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 839 ") {
    byte_vec_t msg { 242,63,210,98 };
    byte_vec_t sig { 157,174,146,158,110,65,91,190,181,9,5,233,151,110,197,93,103,32,177,70,106,114,31,50,94,18,163,122,152,128,35,8,42,81,16,239,248,254,189,142,115,250,17,44,93,139,48,139,81,140,215,30,151,157,74,203,80,155,136,19,18,248,90,62 };
    byte_vec_t pk { 2,143,152,165,78,71,51,137,251,31,31,229,178,178,101,187,106,23,182,19,19,7,175,9,237,138,129,250,224,10,32,173,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 839 ") {
    byte_vec_t msg { 169,129,139,235 };
    byte_vec_t sig { 220,208,11,82,190,8,44,184,196,166,200,68,75,112,159,37,255,1,222,76,1,40,67,105,113,19,77,148,21,50,34,229,170,254,125,184,221,178,193,145,40,49,254,83,94,121,145,35,180,33,101,81,82,102,16,0,20,169,111,204,151,67,102,109 };
    byte_vec_t pk { 2,14,150,255,98,67,207,124,136,156,118,175,34,110,227,171,12,63,103,224,196,239,119,180,37,42,172,124,74,116,172,15,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 840 ") {
    byte_vec_t msg { 250,123,76,15 };
    byte_vec_t sig { 225,12,61,200,54,92,74,240,17,212,152,204,196,220,120,127,224,93,198,252,53,216,60,176,16,70,42,192,102,237,16,37,31,28,136,55,114,75,60,189,196,58,199,168,38,86,91,69,227,202,81,217,123,198,111,168,246,63,156,226,28,122,106,239 };
    byte_vec_t pk { 4,85,2,41,24,72,72,217,79,31,17,113,154,165,6,43,186,155,77,172,135,221,173,156,24,243,93,160,26,245,28,160,8,93,108,50,134,240,138,118,106,167,60,78,220,162,93,209,71,164,179,112,46,206,218,1,245,101,12,102,113,105,233,75,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 840 ") {
    byte_vec_t msg { 134,114,14,132 };
    byte_vec_t sig { 146,211,47,112,158,229,1,94,151,105,172,153,207,235,202,197,115,60,50,122,109,195,184,169,144,81,185,50,23,42,249,70,54,61,131,27,120,241,28,208,186,228,215,62,46,85,65,146,219,83,242,10,78,7,191,148,105,20,104,6,223,153,17,186 };
    byte_vec_t pk { 4,78,207,181,196,24,51,79,218,215,46,164,5,74,63,233,188,34,192,28,33,160,47,135,141,75,138,126,69,196,188,236,218,186,113,30,84,226,39,71,135,109,187,93,0,120,84,27,155,160,179,68,148,86,0,157,54,128,231,107,48,226,2,179,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 840 ") {
    byte_vec_t msg { 28,245,139,222 };
    byte_vec_t sig { 252,178,15,182,37,190,101,10,121,105,50,75,233,212,167,180,104,233,74,84,17,39,243,243,130,163,108,218,191,173,47,125,215,28,249,157,75,120,42,71,253,166,62,12,207,83,237,77,36,171,170,229,58,254,218,15,196,57,227,117,215,0,21,166 };
    byte_vec_t pk { 3,126,210,187,59,219,196,154,235,136,33,24,184,82,87,31,168,130,36,238,154,162,62,248,85,10,243,241,21,73,32,62,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 840 ") {
    byte_vec_t msg { 35,210,147,115 };
    byte_vec_t sig { 171,99,213,254,54,180,73,143,245,124,108,170,87,229,122,144,206,195,203,56,100,220,241,14,221,73,209,222,224,240,159,163,136,215,112,99,58,188,103,223,211,206,118,0,88,60,143,252,248,199,54,63,182,85,41,196,115,215,13,60,210,150,50,225 };
    byte_vec_t pk { 2,104,109,110,82,79,230,70,186,251,188,221,90,189,95,145,203,241,0,23,194,115,130,20,12,34,8,92,205,114,30,16,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 841 ") {
    byte_vec_t msg { 165,151,147,87 };
    byte_vec_t sig { 101,40,160,221,90,209,62,96,240,76,221,236,144,170,130,95,66,53,128,176,154,197,140,39,209,238,94,80,159,198,19,164,192,214,152,82,180,21,187,27,234,37,240,72,114,184,131,181,55,147,34,9,238,30,152,20,76,77,94,60,149,227,160,7 };
    byte_vec_t pk { 4,60,73,157,29,32,120,148,154,192,14,219,140,251,96,96,185,19,228,71,103,61,36,149,190,254,36,117,8,28,188,11,173,152,253,245,103,172,173,199,148,185,193,114,150,109,211,222,139,58,6,156,193,247,26,159,235,233,251,1,55,12,253,180,250 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 841 ") {
    byte_vec_t msg { 174,34,75,64 };
    byte_vec_t sig { 231,163,57,196,68,166,82,161,42,201,254,30,227,207,33,199,213,208,137,132,36,191,27,247,106,73,144,247,138,5,68,203,225,198,104,155,249,124,126,173,12,91,96,99,47,230,207,77,238,50,139,60,50,50,40,111,80,253,129,108,241,173,74,11 };
    byte_vec_t pk { 4,74,190,159,192,99,232,90,20,224,128,71,3,194,122,219,253,38,116,253,159,42,96,89,215,122,89,98,141,63,19,193,135,34,185,216,3,210,146,95,15,117,123,26,229,97,123,45,93,253,182,47,249,186,76,51,61,56,137,181,219,3,245,24,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 841 ") {
    byte_vec_t msg { 53,170,251,84 };
    byte_vec_t sig { 4,230,24,41,2,46,219,210,8,41,87,101,84,10,53,142,130,188,189,183,133,41,67,148,232,62,153,168,119,206,152,173,47,237,35,171,38,2,48,79,88,40,103,2,153,2,143,83,95,167,76,225,228,111,68,169,64,133,135,174,134,99,155,5 };
    byte_vec_t pk { 3,96,234,35,181,70,104,246,34,226,130,30,22,125,84,204,75,225,61,39,219,21,141,107,79,89,59,114,230,222,186,19,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 841 ") {
    byte_vec_t msg { 144,241,119,20 };
    byte_vec_t sig { 162,182,27,110,156,11,174,201,11,42,51,138,40,231,219,92,255,82,190,167,216,208,253,128,180,134,7,109,250,212,139,49,11,114,161,159,103,167,182,218,100,66,43,143,101,132,160,252,247,159,115,77,129,5,97,98,200,73,19,252,67,201,232,138 };
    byte_vec_t pk { 3,44,100,145,184,199,255,190,128,23,120,224,105,245,12,172,81,229,106,110,237,197,245,20,232,233,159,103,127,92,142,30,53 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 842 ") {
    byte_vec_t msg { 73,8,211,211 };
    byte_vec_t sig { 89,157,165,20,1,84,86,188,16,41,195,170,78,222,54,67,225,132,46,168,128,63,100,51,10,171,23,58,133,237,177,177,215,78,113,152,166,97,167,154,87,230,207,65,233,143,59,63,208,13,178,246,122,230,184,137,137,140,119,123,229,43,222,31 };
    byte_vec_t pk { 4,229,93,234,158,107,138,128,237,107,109,29,168,186,180,160,208,53,232,72,67,234,147,182,210,32,232,23,40,179,170,207,203,245,162,100,131,255,199,113,67,145,12,236,220,204,12,165,70,40,11,162,108,83,21,251,96,23,245,134,162,0,185,44,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 842 ") {
    byte_vec_t msg { 111,179,34,247 };
    byte_vec_t sig { 182,19,128,19,238,161,234,246,47,0,87,27,190,44,197,165,17,169,60,127,75,214,24,18,48,242,76,251,183,131,153,248,165,75,228,85,114,151,76,45,97,25,227,225,125,91,217,213,184,4,70,134,233,68,38,93,216,86,205,36,166,154,86,48 };
    byte_vec_t pk { 4,73,16,205,40,208,142,178,3,159,169,232,185,195,215,85,136,184,61,71,27,189,69,18,21,97,164,145,86,169,170,130,37,157,94,230,178,118,50,43,134,90,155,160,27,109,240,51,136,244,104,219,119,31,203,164,223,89,162,201,69,78,228,197,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 842 ") {
    byte_vec_t msg { 121,255,144,27 };
    byte_vec_t sig { 191,245,203,249,49,81,87,90,4,243,7,206,80,76,26,207,218,22,43,161,165,230,219,172,171,146,129,77,202,0,36,132,64,114,64,22,90,99,199,94,56,76,186,154,185,9,202,124,231,23,222,118,87,24,178,124,54,153,161,127,82,204,120,204 };
    byte_vec_t pk { 2,126,131,247,17,246,111,28,21,4,169,108,116,194,239,222,248,175,252,20,141,120,74,189,151,197,251,98,160,187,181,108,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 842 ") {
    byte_vec_t msg { 220,67,202,90 };
    byte_vec_t sig { 113,98,11,189,210,5,27,132,40,211,204,245,161,87,154,248,54,171,193,221,126,129,8,174,237,54,70,114,119,50,240,86,96,62,88,69,217,45,54,54,115,154,192,166,235,47,86,161,70,175,21,165,181,71,133,26,75,59,64,252,190,172,145,77 };
    byte_vec_t pk { 3,15,109,188,174,237,13,74,47,245,82,250,151,173,86,249,185,217,25,28,205,164,226,166,217,125,219,50,216,57,32,184,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 843 ") {
    byte_vec_t msg { 83,142,43,174 };
    byte_vec_t sig { 243,191,144,39,5,70,78,21,169,196,111,106,231,250,117,2,205,196,147,195,181,29,227,64,195,164,75,227,100,181,147,159,15,23,188,87,12,173,164,79,164,132,24,145,217,58,241,95,254,178,255,242,194,189,65,3,151,40,27,79,50,24,206,235 };
    byte_vec_t pk { 4,2,135,162,153,178,119,146,144,191,88,57,99,198,102,20,147,16,240,11,108,107,196,120,127,133,73,67,102,154,181,145,59,224,57,87,107,249,248,147,49,150,26,191,52,46,229,30,228,156,29,223,180,160,123,7,152,96,255,55,139,79,43,132,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 843 ") {
    byte_vec_t msg { 254,164,49,13 };
    byte_vec_t sig { 155,120,160,97,14,166,169,0,59,141,147,49,209,37,137,188,6,244,162,136,117,28,198,133,169,222,86,47,210,189,120,68,39,78,202,193,227,72,89,71,158,234,17,181,232,64,81,19,36,63,0,203,207,206,11,11,32,168,250,197,12,101,98,161 };
    byte_vec_t pk { 4,248,66,175,58,128,100,139,223,174,164,175,91,126,170,63,135,248,120,57,125,142,165,197,187,91,67,93,76,169,100,71,124,191,45,194,171,242,167,146,175,240,216,163,167,143,67,102,247,99,223,180,21,232,255,26,49,194,59,153,188,208,46,76,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 843 ") {
    byte_vec_t msg { 154,116,183,128 };
    byte_vec_t sig { 181,252,199,110,136,234,154,67,12,218,113,213,251,192,182,232,193,244,147,151,94,64,6,46,232,80,185,126,145,8,50,246,187,16,168,129,230,250,244,170,174,103,61,133,3,192,247,45,106,155,165,194,200,48,240,64,92,124,213,92,44,15,204,1 };
    byte_vec_t pk { 3,246,116,221,219,66,225,184,202,201,190,84,47,210,130,49,11,244,219,205,142,166,54,122,31,31,186,249,156,71,108,229,181 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 843 ") {
    byte_vec_t msg { 167,179,204,84 };
    byte_vec_t sig { 138,253,32,126,231,225,41,229,120,225,175,195,15,153,30,118,189,156,243,23,150,38,178,141,235,222,0,46,49,150,144,195,135,19,224,122,49,208,79,44,250,194,0,96,166,137,157,86,221,155,183,229,44,171,237,216,136,234,205,75,205,141,101,186 };
    byte_vec_t pk { 2,190,170,48,249,94,66,130,210,181,118,27,93,187,114,181,51,97,72,218,88,16,225,202,202,141,14,109,67,180,118,114,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 844 ") {
    byte_vec_t msg { 126,130,27,83 };
    byte_vec_t sig { 215,9,126,189,135,106,155,31,130,241,73,72,242,176,2,162,61,37,35,110,101,240,134,202,72,157,205,216,222,65,21,127,250,190,111,132,28,232,36,247,161,38,94,128,38,114,69,85,156,91,206,0,154,199,84,25,36,196,14,189,108,250,102,129 };
    byte_vec_t pk { 4,170,189,45,177,48,52,23,61,171,90,184,78,253,3,25,8,89,9,5,206,224,108,158,59,230,158,78,186,150,28,113,231,63,247,41,227,50,218,150,196,163,210,141,126,238,129,67,68,23,209,74,208,82,240,200,89,102,217,179,146,133,110,98,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 844 ") {
    byte_vec_t msg { 179,178,189,0 };
    byte_vec_t sig { 128,33,222,33,191,84,136,44,50,50,3,171,103,139,185,89,252,47,161,223,200,232,215,5,223,156,107,229,152,43,210,9,72,243,27,16,234,244,119,211,166,98,72,150,52,47,169,128,104,135,135,200,34,195,218,45,20,252,54,8,233,102,141,219 };
    byte_vec_t pk { 4,197,34,163,247,250,231,218,5,116,12,252,11,8,99,25,100,213,60,159,46,106,169,10,223,178,129,168,237,213,196,197,44,156,177,242,251,198,159,182,204,144,178,111,239,96,222,24,179,40,122,93,106,131,161,139,142,168,120,207,213,223,6,217,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 844 ") {
    byte_vec_t msg { 115,236,93,104 };
    byte_vec_t sig { 196,87,101,255,25,219,230,123,68,25,84,195,105,212,165,122,104,240,130,232,43,144,143,20,214,246,243,150,118,127,88,116,105,44,236,23,25,53,96,90,45,253,41,60,46,115,31,14,158,193,134,237,125,70,188,205,72,64,91,125,169,102,205,101 };
    byte_vec_t pk { 2,202,221,120,6,129,50,238,9,4,158,114,119,22,139,201,81,80,109,156,200,74,86,4,164,198,253,17,34,51,185,114,192 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 844 ") {
    byte_vec_t msg { 90,122,165,207 };
    byte_vec_t sig { 196,205,150,88,179,117,153,7,80,16,74,198,94,199,1,242,124,194,98,25,222,149,78,111,172,195,47,31,86,166,169,206,140,201,24,243,254,178,121,189,88,224,233,67,167,182,112,241,92,153,113,64,76,46,114,69,79,229,230,89,4,37,243,60 };
    byte_vec_t pk { 2,246,33,140,93,121,135,204,253,122,158,171,100,241,5,197,127,25,29,128,241,249,195,239,44,229,75,4,70,191,19,172,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 845 ") {
    byte_vec_t msg { 52,216,224,58 };
    byte_vec_t sig { 153,217,55,50,193,136,103,1,63,44,111,26,80,7,8,144,44,221,223,16,5,231,148,190,10,254,254,120,188,219,212,114,47,155,121,243,232,130,75,105,68,75,50,17,130,226,14,61,5,181,192,114,62,233,247,240,213,188,221,163,131,178,50,131 };
    byte_vec_t pk { 4,219,152,70,21,136,91,135,19,156,32,120,226,71,144,136,209,28,96,59,229,237,87,219,149,197,203,180,108,18,133,248,118,26,98,102,48,42,93,215,197,6,86,105,224,76,98,79,135,204,114,72,84,180,19,223,233,176,177,101,118,121,167,66,235 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 845 ") {
    byte_vec_t msg { 14,204,87,25 };
    byte_vec_t sig { 116,139,160,37,88,107,116,13,81,41,11,37,241,246,8,62,83,34,159,72,170,167,128,10,184,238,43,255,47,40,220,29,33,87,66,165,217,151,136,49,26,95,173,218,113,0,141,126,209,123,166,24,191,145,1,162,255,22,239,229,122,101,144,38 };
    byte_vec_t pk { 4,223,66,195,184,234,224,157,99,145,0,152,235,189,165,142,170,21,112,66,78,176,133,78,184,238,38,241,162,17,224,180,56,184,8,28,134,104,16,148,126,195,95,3,97,96,203,70,246,41,8,157,194,143,141,14,0,184,238,171,209,238,135,234,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 845 ") {
    byte_vec_t msg { 58,118,95,93 };
    byte_vec_t sig { 209,58,63,32,245,17,99,31,138,136,153,147,254,186,166,160,16,253,76,189,162,212,109,99,253,50,41,195,221,152,225,69,237,144,119,193,106,99,128,105,190,35,249,98,77,215,101,148,46,64,254,7,102,1,178,104,21,173,57,98,208,77,42,102 };
    byte_vec_t pk { 3,205,219,59,198,171,195,205,102,141,85,193,155,126,8,52,128,129,118,112,105,218,137,227,76,174,18,232,136,247,168,207,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 845 ") {
    byte_vec_t msg { 205,162,191,125 };
    byte_vec_t sig { 116,90,221,109,134,95,17,96,249,133,91,174,3,65,137,154,173,168,171,158,135,54,183,170,112,242,78,120,240,166,164,167,104,91,138,134,240,182,88,201,201,231,198,165,179,191,199,12,207,23,146,207,229,236,50,202,151,62,190,60,90,170,89,11 };
    byte_vec_t pk { 3,238,94,199,58,24,183,110,87,196,189,18,90,170,83,231,178,85,47,67,187,171,175,172,253,252,85,215,83,188,89,169,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 846 ") {
    byte_vec_t msg { 122,99,115,54 };
    byte_vec_t sig { 18,47,211,76,19,16,236,84,45,120,75,228,104,134,203,202,113,58,114,90,127,56,4,76,196,103,47,136,227,151,103,236,211,164,248,172,120,178,10,93,186,112,108,50,211,109,236,8,156,228,251,170,55,126,245,135,202,253,220,233,240,163,206,81 };
    byte_vec_t pk { 4,122,141,101,196,76,102,69,134,188,109,166,120,114,146,170,99,89,45,67,9,206,10,3,138,230,117,191,40,110,123,151,238,68,114,50,158,10,202,234,7,224,120,245,34,46,222,179,184,123,206,141,224,120,55,95,107,36,224,243,227,160,39,80,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 846 ") {
    byte_vec_t msg { 24,114,51,243 };
    byte_vec_t sig { 33,76,34,193,145,1,138,30,163,74,238,61,73,63,97,23,198,12,221,113,164,68,89,11,131,224,35,113,102,202,206,124,206,247,9,91,160,166,25,17,6,192,63,41,85,30,168,111,139,104,251,103,108,111,14,27,234,35,126,253,137,188,233,102 };
    byte_vec_t pk { 4,244,50,75,220,87,156,162,172,2,140,15,84,75,60,15,217,17,101,96,212,248,126,53,28,46,14,4,169,156,99,185,45,243,113,190,92,37,243,38,235,171,138,16,126,87,245,102,141,112,184,104,213,86,12,216,230,70,177,33,231,239,44,232,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 846 ") {
    byte_vec_t msg { 253,17,76,74 };
    byte_vec_t sig { 26,4,175,18,103,115,155,230,201,50,219,194,87,8,116,225,8,238,250,38,96,53,41,37,201,112,109,113,137,29,132,194,137,214,110,170,207,202,4,8,192,119,120,103,75,238,15,226,120,230,77,15,67,84,28,218,149,91,185,92,216,64,17,54 };
    byte_vec_t pk { 3,21,196,167,227,221,28,181,86,202,119,184,64,186,200,141,149,144,21,225,142,44,121,198,151,134,97,89,69,192,59,204,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 846 ") {
    byte_vec_t msg { 16,57,192,35 };
    byte_vec_t sig { 188,159,199,246,160,9,79,1,69,205,182,134,134,44,209,106,10,63,78,92,157,226,56,35,226,57,1,47,115,6,208,168,47,132,143,32,226,57,77,244,58,98,173,29,78,215,245,237,50,203,111,85,157,106,30,194,59,139,229,157,246,26,138,22 };
    byte_vec_t pk { 3,92,117,52,238,20,99,111,55,5,196,107,229,163,247,10,106,235,195,200,139,145,101,37,113,154,43,76,96,143,40,240,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 847 ") {
    byte_vec_t msg { 218,123,175,114 };
    byte_vec_t sig { 59,164,72,177,199,193,247,75,183,150,17,199,211,66,16,243,64,163,46,231,180,180,65,40,235,251,87,12,149,210,51,150,175,135,138,135,169,62,240,70,235,73,234,80,118,169,73,160,19,189,66,255,240,16,9,19,114,48,187,20,98,52,224,208 };
    byte_vec_t pk { 4,102,10,171,14,113,245,149,209,145,60,184,22,13,202,10,43,222,91,15,68,8,51,158,100,127,83,150,228,173,237,152,7,67,21,93,192,255,72,230,96,146,88,106,134,103,235,168,94,200,96,144,25,175,148,129,93,148,248,81,188,148,124,12,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 847 ") {
    byte_vec_t msg { 101,66,196,219 };
    byte_vec_t sig { 191,58,69,99,53,36,169,204,213,110,149,44,148,34,51,46,248,98,65,177,148,75,86,65,160,66,185,204,20,24,201,100,102,13,101,130,157,178,34,199,148,171,212,16,130,25,214,52,189,216,238,144,255,112,79,175,136,72,106,219,135,180,29,33 };
    byte_vec_t pk { 4,146,82,23,123,171,213,37,157,247,223,193,67,129,22,72,235,215,140,98,3,184,199,213,173,70,38,206,40,85,170,71,53,211,96,29,17,136,245,13,201,160,172,111,80,176,10,183,94,80,74,212,42,34,222,38,232,9,112,17,213,233,9,147,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 847 ") {
    byte_vec_t msg { 190,7,198,125 };
    byte_vec_t sig { 198,198,162,131,148,111,26,122,64,223,231,211,200,121,58,157,62,216,84,190,66,4,13,106,199,197,140,91,52,90,161,218,33,43,215,175,62,159,182,28,79,90,80,115,138,122,194,101,172,34,68,159,131,254,150,230,15,249,210,189,156,117,97,70 };
    byte_vec_t pk { 3,213,143,82,149,55,62,32,186,180,222,249,24,77,255,168,198,4,174,163,159,93,39,239,212,137,235,26,163,237,46,95,151 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 847 ") {
    byte_vec_t msg { 212,229,42,60 };
    byte_vec_t sig { 199,91,95,71,58,50,127,184,7,74,202,197,176,65,184,236,241,192,80,149,25,62,11,144,153,15,141,143,118,193,198,209,68,108,114,136,79,130,0,6,46,149,143,13,129,219,166,2,46,196,154,151,37,108,248,69,138,253,236,185,169,250,37,26 };
    byte_vec_t pk { 2,247,54,29,8,223,225,238,185,31,225,144,242,73,238,178,63,212,145,4,13,115,5,93,169,196,27,62,167,79,180,4,173 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 848 ") {
    byte_vec_t msg { 141,32,83,193 };
    byte_vec_t sig { 169,123,229,51,86,190,59,125,109,89,143,143,50,236,244,185,114,164,59,74,16,44,151,147,23,29,215,132,242,161,122,101,170,3,59,211,203,188,244,179,196,153,149,12,172,138,79,16,49,75,122,221,86,110,86,201,166,33,255,203,222,198,48,218 };
    byte_vec_t pk { 4,6,88,251,213,200,106,219,160,19,7,97,230,207,77,87,34,82,177,242,169,15,59,174,108,131,232,8,176,160,72,203,82,42,46,119,26,35,221,69,24,216,58,102,171,168,226,231,144,79,135,105,56,86,68,188,115,254,104,81,121,7,75,106,79 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 848 ") {
    byte_vec_t msg { 11,210,202,22 };
    byte_vec_t sig { 94,147,232,150,65,128,152,236,173,187,107,59,94,109,26,176,22,233,55,212,119,92,228,243,218,237,193,134,54,198,58,88,93,92,134,78,78,23,171,61,107,199,140,204,62,26,116,237,124,128,226,139,92,17,165,7,30,21,173,190,5,122,113,140 };
    byte_vec_t pk { 4,13,41,142,237,178,207,157,115,30,170,218,8,183,61,64,138,6,142,116,79,160,100,40,218,100,167,68,90,235,181,120,100,90,228,42,133,198,175,60,148,59,212,47,191,120,250,15,6,217,228,85,221,20,24,171,105,47,161,114,210,34,137,247,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 848 ") {
    byte_vec_t msg { 166,136,31,132 };
    byte_vec_t sig { 115,180,186,22,1,38,177,240,143,13,32,160,129,173,2,86,141,34,53,5,112,251,148,162,34,79,26,145,165,3,88,137,206,59,12,80,30,126,83,19,208,40,41,73,145,177,236,10,84,4,30,119,128,8,73,17,235,161,140,36,42,141,234,63 };
    byte_vec_t pk { 3,196,255,227,30,234,57,19,247,69,74,203,59,136,164,34,179,149,233,16,141,140,119,238,177,133,108,217,83,196,230,2,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 848 ") {
    byte_vec_t msg { 128,74,84,29 };
    byte_vec_t sig { 153,248,116,105,137,27,201,54,73,201,250,111,160,123,34,215,227,140,110,118,210,88,178,228,86,253,208,184,35,171,202,217,216,16,177,98,141,150,106,186,255,147,171,167,42,217,163,142,71,196,168,117,213,143,226,134,26,75,104,174,84,161,224,252 };
    byte_vec_t pk { 3,182,231,80,81,43,248,214,96,147,184,184,13,255,170,123,11,100,186,132,160,31,173,91,111,152,237,237,29,192,135,230,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 849 ") {
    byte_vec_t msg { 120,126,218,91 };
    byte_vec_t sig { 70,90,186,50,201,217,159,124,123,47,223,219,69,93,94,8,204,129,146,71,41,236,43,140,253,136,153,54,171,113,247,45,173,71,111,175,237,130,185,233,103,203,223,175,169,172,81,15,183,205,234,207,74,99,218,45,163,209,242,214,78,101,139,63 };
    byte_vec_t pk { 4,197,122,15,147,54,202,41,223,130,116,149,141,229,61,47,138,108,56,181,121,47,215,207,202,75,49,230,135,72,24,200,176,20,218,211,16,164,49,208,166,221,163,253,132,20,224,201,212,167,99,140,217,221,68,146,167,163,6,183,4,58,66,10,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 849 ") {
    byte_vec_t msg { 215,185,207,25 };
    byte_vec_t sig { 204,156,93,118,215,116,8,151,69,48,135,163,188,68,239,43,106,92,250,45,201,209,212,75,105,8,97,88,38,157,27,140,203,231,17,147,73,151,5,247,81,181,172,2,48,164,7,126,84,70,237,7,48,86,167,180,15,236,89,121,30,7,177,34 };
    byte_vec_t pk { 4,183,232,190,220,96,72,20,150,184,219,112,174,232,108,219,238,167,102,77,250,206,40,249,120,126,138,122,182,16,145,243,125,11,140,32,139,121,149,75,55,109,46,90,187,149,255,78,124,228,92,3,1,36,127,145,237,64,227,16,14,16,241,217,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 849 ") {
    byte_vec_t msg { 28,222,15,85 };
    byte_vec_t sig { 180,31,91,143,199,228,209,94,33,30,2,242,103,111,79,178,14,239,94,250,76,241,232,137,38,30,100,229,149,82,254,15,204,83,94,251,101,46,18,143,215,17,87,195,47,199,243,248,111,75,15,96,122,207,13,212,43,0,199,83,102,32,197,226 };
    byte_vec_t pk { 2,229,50,127,44,76,7,103,255,181,103,200,81,110,46,39,29,174,218,48,188,222,4,175,211,231,114,149,14,150,149,227,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 849 ") {
    byte_vec_t msg { 53,88,174,33 };
    byte_vec_t sig { 1,193,152,118,48,147,115,5,61,144,58,198,191,34,95,3,248,1,108,205,141,172,159,76,220,49,147,141,181,165,209,56,97,49,209,20,169,98,8,98,168,53,165,181,23,128,224,141,4,21,80,195,126,57,163,9,250,181,31,203,15,120,10,235 };
    byte_vec_t pk { 3,217,204,79,253,68,144,32,252,237,122,157,58,105,18,80,238,108,197,17,74,116,5,167,179,240,201,68,50,138,234,123,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 850 ") {
    byte_vec_t msg { 20,201,230,27 };
    byte_vec_t sig { 199,134,38,23,16,141,220,16,187,160,229,243,166,32,1,163,39,70,110,203,21,104,79,148,156,255,2,89,65,194,31,194,38,167,241,219,208,11,240,157,219,148,128,255,204,21,108,130,92,175,41,185,101,135,135,123,202,111,35,8,37,116,192,237 };
    byte_vec_t pk { 4,54,209,250,228,73,87,38,137,81,35,216,64,167,25,244,157,179,155,138,88,40,185,57,28,255,185,237,165,58,144,216,238,2,55,111,87,89,246,29,110,48,202,71,105,134,134,234,175,89,192,107,181,164,251,223,20,157,90,214,119,88,119,137,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 850 ") {
    byte_vec_t msg { 229,183,211,194 };
    byte_vec_t sig { 90,159,245,7,145,29,196,161,205,213,14,15,72,88,42,12,48,36,186,121,13,192,23,28,24,206,15,193,72,27,251,69,31,169,114,156,62,59,93,199,192,59,114,149,111,202,71,234,103,34,141,215,244,90,239,241,219,2,11,253,125,207,61,162 };
    byte_vec_t pk { 4,186,169,169,150,107,213,125,238,249,7,170,135,17,30,116,75,197,93,68,223,15,55,210,76,14,212,77,241,93,221,6,175,156,46,105,46,86,94,96,186,242,135,255,102,36,209,244,32,163,154,197,243,230,39,150,9,85,73,132,89,173,73,254,54 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 850 ") {
    byte_vec_t msg { 221,166,155,226 };
    byte_vec_t sig { 227,81,142,48,86,82,126,226,247,94,142,188,20,77,239,123,190,72,53,44,101,92,156,194,153,101,134,31,209,72,115,125,144,34,104,20,187,140,125,215,100,111,167,161,79,190,56,220,186,107,167,7,223,7,200,37,247,86,82,91,230,120,190,91 };
    byte_vec_t pk { 3,166,47,165,162,128,95,30,163,96,162,100,131,107,108,62,74,156,76,175,218,200,92,173,227,43,213,185,187,80,207,173,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 850 ") {
    byte_vec_t msg { 76,249,108,227 };
    byte_vec_t sig { 174,128,55,184,188,211,190,60,237,148,156,227,234,143,56,44,149,3,214,15,186,100,56,63,220,20,173,251,208,150,164,94,55,117,31,152,226,106,71,55,90,67,54,50,133,196,6,48,195,15,192,145,243,138,189,222,227,235,60,5,50,26,49,254 };
    byte_vec_t pk { 2,22,142,223,136,189,160,48,196,33,222,29,77,169,175,237,44,215,38,14,95,198,88,91,69,68,111,198,6,227,41,169,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 851 ") {
    byte_vec_t msg { 143,245,243,184 };
    byte_vec_t sig { 0,199,132,111,213,255,129,230,96,163,39,136,73,183,81,209,238,17,87,28,12,215,160,127,74,45,160,134,77,159,198,70,188,57,73,91,131,37,119,5,190,246,41,141,132,104,125,222,151,229,127,82,78,91,116,3,138,71,109,165,225,3,63,81 };
    byte_vec_t pk { 4,206,132,122,70,82,169,26,44,133,24,67,141,234,178,21,115,40,95,31,120,132,150,187,105,128,94,32,133,25,44,115,181,61,32,165,137,18,173,35,135,103,140,145,162,161,57,119,204,241,165,250,108,67,237,52,127,241,75,121,190,36,205,240,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 851 ") {
    byte_vec_t msg { 211,235,115,175 };
    byte_vec_t sig { 37,54,74,72,3,232,103,179,2,25,3,12,20,106,20,118,65,27,35,145,110,179,177,58,140,175,31,197,169,241,116,90,25,129,208,140,80,149,96,54,201,9,190,124,30,174,251,187,166,132,32,230,120,24,73,107,105,40,94,6,177,28,82,95 };
    byte_vec_t pk { 4,179,202,116,134,30,106,88,244,115,0,41,139,118,6,13,140,19,35,64,240,12,96,97,149,178,247,157,10,83,20,110,46,8,160,57,143,221,114,1,171,139,168,97,129,146,156,99,228,249,131,169,223,11,11,28,109,179,136,39,65,199,105,178,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 851 ") {
    byte_vec_t msg { 88,72,15,248 };
    byte_vec_t sig { 147,123,74,124,90,190,34,60,161,197,129,66,34,193,46,105,121,11,61,95,49,15,250,211,237,166,239,238,124,170,215,148,101,58,34,211,137,64,2,142,95,164,167,238,188,87,41,203,126,157,200,165,229,38,42,83,171,80,24,249,195,33,18,209 };
    byte_vec_t pk { 3,232,224,157,64,49,209,176,88,220,31,115,239,100,190,170,37,145,134,225,159,236,24,117,47,92,214,179,159,159,17,94,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 851 ") {
    byte_vec_t msg { 1,27,58,198 };
    byte_vec_t sig { 53,250,31,112,163,194,128,130,186,233,117,140,228,104,24,164,159,144,4,225,162,30,18,58,157,248,30,238,191,221,252,163,219,53,130,227,14,155,138,108,35,6,141,131,74,216,159,33,185,111,116,119,29,107,55,220,45,121,92,79,153,2,50,161 };
    byte_vec_t pk { 2,240,156,21,26,152,82,211,234,88,113,19,9,122,0,151,78,35,186,84,39,2,158,40,57,129,152,107,195,112,27,72,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 852 ") {
    byte_vec_t msg { 141,50,19,220 };
    byte_vec_t sig { 157,8,186,110,85,4,16,72,214,88,205,21,53,87,132,13,91,51,151,236,146,231,42,48,181,14,220,188,253,147,74,250,141,127,105,133,125,52,212,123,76,55,110,159,40,79,220,38,12,99,60,255,231,218,150,210,17,159,65,144,58,116,119,10 };
    byte_vec_t pk { 4,103,242,106,18,5,192,143,206,207,248,27,196,174,106,31,139,208,100,33,191,206,124,39,169,200,56,205,112,54,64,108,225,177,89,232,77,102,48,66,164,121,124,59,252,253,32,42,153,158,215,51,220,85,29,23,65,62,54,118,133,38,119,21,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 852 ") {
    byte_vec_t msg { 129,156,166,172 };
    byte_vec_t sig { 61,87,239,182,14,123,213,212,199,187,181,49,139,41,166,176,73,107,213,176,208,20,69,14,12,144,2,17,246,56,59,109,178,228,109,136,37,246,200,34,125,136,224,254,35,165,19,84,36,118,168,186,143,230,65,74,0,177,168,20,227,196,92,25 };
    byte_vec_t pk { 4,240,149,7,136,7,127,73,69,214,175,50,233,140,55,205,16,53,191,195,27,120,136,149,255,68,108,253,250,61,254,213,162,212,242,218,115,246,25,209,180,115,205,7,127,107,191,66,35,184,220,232,211,248,159,122,25,60,75,187,108,84,182,132,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 852 ") {
    byte_vec_t msg { 180,98,141,147 };
    byte_vec_t sig { 100,226,130,206,222,52,171,37,73,242,182,244,50,160,182,33,5,121,53,34,140,26,186,105,13,29,224,172,3,65,186,186,134,179,88,33,67,147,10,62,35,237,165,47,246,204,183,21,26,225,38,194,202,117,209,76,155,196,111,130,185,51,61,185 };
    byte_vec_t pk { 3,242,29,144,145,53,95,116,218,139,3,27,200,45,31,252,154,77,201,241,194,219,116,143,2,146,202,250,30,211,8,45,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 852 ") {
    byte_vec_t msg { 56,96,76,193 };
    byte_vec_t sig { 62,142,155,166,136,208,32,118,105,117,191,225,216,27,244,75,234,129,193,47,91,248,119,200,254,82,250,99,175,5,94,189,245,23,217,122,126,226,68,65,250,69,104,168,161,107,65,194,167,181,251,155,115,154,114,114,24,98,106,245,90,156,46,222 };
    byte_vec_t pk { 2,47,59,92,77,106,204,139,10,27,40,184,53,74,178,217,233,9,221,23,154,16,229,241,45,122,63,104,171,194,88,254,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 853 ") {
    byte_vec_t msg { 165,209,126,10 };
    byte_vec_t sig { 56,154,252,113,184,164,79,94,137,103,85,167,218,231,243,150,32,253,242,39,15,145,244,248,232,35,166,100,24,8,39,70,70,172,134,40,7,247,90,48,214,27,77,11,15,36,156,245,115,133,174,39,61,80,163,5,166,192,190,100,202,59,153,79 };
    byte_vec_t pk { 4,84,49,79,154,68,32,119,183,119,3,233,146,24,14,70,162,167,118,70,226,14,49,116,121,243,40,134,73,60,229,181,214,154,96,135,245,78,35,92,141,18,237,106,5,151,254,129,74,96,88,241,104,49,99,185,189,139,145,92,188,61,107,20,56 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 853 ") {
    byte_vec_t msg { 37,7,157,102 };
    byte_vec_t sig { 117,63,136,14,194,33,144,132,29,49,103,51,18,40,249,117,176,46,48,23,182,181,204,120,240,88,84,12,231,74,66,130,92,18,60,18,229,49,31,213,207,222,158,120,44,8,177,69,54,140,90,133,223,147,84,226,104,173,38,243,134,205,20,169 };
    byte_vec_t pk { 4,229,235,27,88,46,91,54,107,72,54,165,66,231,170,204,71,53,65,88,48,228,211,39,233,171,171,118,78,210,129,235,239,231,19,209,197,216,98,106,221,139,210,113,165,245,100,244,175,251,159,216,255,46,98,7,161,71,73,169,135,58,229,73,141 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 853 ") {
    byte_vec_t msg { 201,70,114,12 };
    byte_vec_t sig { 254,109,236,182,44,173,61,21,152,47,65,141,120,105,204,29,112,125,224,0,237,226,55,52,84,159,185,3,128,41,202,253,55,46,151,51,81,103,103,120,31,143,139,220,159,35,71,190,232,250,72,114,207,86,87,142,2,202,251,96,37,152,66,70 };
    byte_vec_t pk { 2,3,234,187,73,89,229,154,166,19,200,126,45,250,44,211,43,192,158,94,86,27,99,185,163,11,175,173,161,36,154,92,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 853 ") {
    byte_vec_t msg { 94,244,151,38 };
    byte_vec_t sig { 252,148,108,87,54,6,248,44,168,30,239,187,137,146,158,216,180,23,5,38,81,153,99,141,9,210,185,127,45,240,55,5,199,106,175,15,143,155,106,107,27,115,177,32,154,4,237,82,3,228,4,59,53,185,188,104,43,127,135,150,208,45,212,234 };
    byte_vec_t pk { 3,222,36,255,112,131,207,64,5,85,131,161,206,121,165,54,7,143,157,5,71,239,204,180,61,237,69,177,144,32,70,140,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 854 ") {
    byte_vec_t msg { 242,37,235,151 };
    byte_vec_t sig { 26,240,105,7,181,201,48,155,21,20,110,203,198,92,238,100,208,99,140,176,36,162,130,40,12,171,22,197,32,144,151,79,83,29,252,145,119,180,13,99,129,194,195,209,88,141,82,22,71,95,226,135,95,172,109,149,165,13,87,3,130,58,143,40 };
    byte_vec_t pk { 4,128,3,87,169,188,32,255,111,255,28,134,128,117,193,180,38,37,99,17,115,62,254,6,244,176,141,38,4,33,173,214,194,236,164,236,239,227,234,217,127,138,97,110,87,66,3,202,152,146,225,132,195,139,43,240,182,55,250,6,240,193,67,8,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 854 ") {
    byte_vec_t msg { 218,120,146,116 };
    byte_vec_t sig { 25,147,222,152,116,186,163,201,98,103,194,189,84,145,200,26,102,75,242,248,179,70,109,29,202,167,209,136,42,0,46,103,129,120,170,142,181,100,88,13,142,236,203,202,212,95,152,13,138,98,17,112,161,50,23,22,229,158,166,39,138,249,62,227 };
    byte_vec_t pk { 4,243,2,231,130,126,36,244,147,244,33,237,30,202,74,193,44,188,147,172,191,88,185,25,96,198,54,91,85,104,191,99,93,8,54,250,71,201,127,48,252,74,170,232,42,70,75,50,96,65,46,85,6,92,97,238,52,183,228,224,49,172,206,26,106 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 854 ") {
    byte_vec_t msg { 119,76,18,234 };
    byte_vec_t sig { 79,69,33,193,54,97,45,123,191,134,46,18,127,154,82,211,78,65,51,82,116,250,189,225,16,68,5,114,113,80,144,159,103,244,201,77,138,68,51,57,235,3,22,142,250,121,191,19,144,122,59,134,110,53,113,206,173,192,106,100,97,180,202,42 };
    byte_vec_t pk { 3,156,232,179,80,25,217,168,46,183,162,31,39,80,59,15,147,228,0,24,71,180,79,30,213,195,118,5,17,245,132,129,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 854 ") {
    byte_vec_t msg { 209,151,134,177 };
    byte_vec_t sig { 142,35,100,65,132,226,193,219,120,45,9,77,154,241,227,213,212,57,155,228,63,7,69,75,242,238,67,233,195,207,188,190,146,100,4,72,184,231,239,26,154,252,171,151,172,240,129,155,24,133,144,212,33,99,3,97,246,89,80,181,54,229,239,115 };
    byte_vec_t pk { 2,171,191,15,5,43,9,46,162,227,103,223,33,166,104,194,63,205,16,183,136,217,208,201,152,177,131,89,147,39,151,146,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 855 ") {
    byte_vec_t msg { 145,30,174,213 };
    byte_vec_t sig { 135,152,240,147,164,254,7,14,247,247,252,134,130,194,51,196,161,92,242,201,46,149,61,186,173,186,95,214,241,56,181,144,24,49,42,17,19,116,98,131,137,174,253,130,248,162,1,148,30,44,248,93,104,128,100,219,41,78,71,106,22,148,123,103 };
    byte_vec_t pk { 4,0,49,229,196,81,186,35,84,255,51,173,255,97,73,146,149,53,18,214,49,165,121,44,176,234,19,212,5,46,95,80,28,21,89,128,89,111,136,68,249,140,17,122,183,69,4,19,181,249,97,219,83,253,108,194,195,249,43,76,232,168,150,19,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 855 ") {
    byte_vec_t msg { 228,222,209,205 };
    byte_vec_t sig { 207,253,20,56,123,173,148,206,29,168,199,91,7,10,80,167,49,103,50,236,195,176,42,192,185,86,134,237,138,130,253,177,33,77,200,0,21,230,169,252,166,169,195,157,132,240,197,197,181,54,67,48,100,118,34,155,4,1,129,30,0,163,24,50 };
    byte_vec_t pk { 4,145,34,21,109,28,220,25,37,75,14,61,11,62,250,19,125,35,180,92,240,152,68,148,163,34,127,247,36,106,142,48,24,16,44,88,154,225,210,44,64,55,164,63,137,50,225,215,167,155,185,16,142,9,44,128,185,200,200,65,192,66,103,86,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 855 ") {
    byte_vec_t msg { 165,235,108,36 };
    byte_vec_t sig { 169,75,18,113,118,110,141,102,74,40,75,82,77,239,108,218,200,205,224,93,247,243,77,68,165,247,148,145,231,92,250,192,247,79,44,218,238,169,102,10,29,209,1,174,172,135,53,203,27,239,235,135,29,18,158,146,243,117,50,57,176,146,45,19 };
    byte_vec_t pk { 2,92,62,194,241,241,109,87,174,232,162,152,143,96,139,101,206,254,226,120,5,182,119,77,213,12,29,52,88,183,94,67,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 855 ") {
    byte_vec_t msg { 80,117,104,59 };
    byte_vec_t sig { 246,201,32,230,236,54,105,190,8,255,196,62,87,248,20,168,16,11,193,103,232,64,98,111,24,224,171,232,73,140,24,66,94,232,190,43,26,205,9,174,189,138,41,170,3,156,49,129,223,98,210,101,0,74,156,120,127,30,119,124,157,33,59,15 };
    byte_vec_t pk { 3,93,37,50,24,10,163,149,167,73,118,137,65,52,212,192,9,134,217,188,219,102,9,106,217,156,179,175,61,208,93,102,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 856 ") {
    byte_vec_t msg { 200,182,55,229 };
    byte_vec_t sig { 188,206,68,129,101,55,173,205,221,12,215,196,113,106,115,14,126,161,45,158,182,87,137,171,126,144,137,87,32,42,189,213,219,56,230,20,253,156,170,215,99,197,1,85,101,195,140,232,184,138,138,79,226,229,251,94,160,121,23,91,116,216,64,210 };
    byte_vec_t pk { 4,131,68,36,182,77,11,101,238,178,17,47,217,32,85,76,99,24,130,114,144,228,234,0,84,84,156,230,6,24,39,135,11,150,84,63,27,124,191,255,107,2,21,229,80,110,207,173,83,55,227,170,105,138,176,46,251,221,169,171,249,177,119,95,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 856 ") {
    byte_vec_t msg { 111,192,123,57 };
    byte_vec_t sig { 164,17,56,50,251,148,70,165,94,150,75,13,191,25,194,91,42,218,131,15,238,79,16,118,134,130,176,178,210,234,50,27,110,233,36,204,18,166,21,136,105,253,223,107,112,254,128,201,95,117,185,4,116,76,242,240,191,157,88,190,235,135,242,154 };
    byte_vec_t pk { 4,227,48,101,185,73,188,112,220,247,15,21,68,10,31,178,223,55,102,41,98,140,19,83,221,185,167,222,38,46,27,195,17,132,142,180,61,10,204,25,130,217,56,65,6,50,8,137,123,210,227,205,10,85,110,180,237,105,223,143,72,248,199,219,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 856 ") {
    byte_vec_t msg { 107,86,53,254 };
    byte_vec_t sig { 191,165,193,78,206,84,92,236,230,108,108,70,82,192,71,171,33,29,102,230,239,253,33,50,166,23,236,141,247,113,55,186,21,92,200,24,202,61,155,45,213,212,131,71,176,163,195,63,111,195,96,12,217,43,155,117,237,114,163,12,246,233,100,135 };
    byte_vec_t pk { 3,57,162,153,250,229,56,7,14,24,144,49,254,159,216,0,140,50,244,143,72,162,98,235,90,105,198,134,23,40,44,99,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 856 ") {
    byte_vec_t msg { 35,16,68,13 };
    byte_vec_t sig { 115,203,247,175,213,170,123,217,40,70,74,66,26,22,58,164,62,137,185,209,158,194,63,94,224,57,247,210,232,37,161,100,131,190,115,47,91,178,74,141,18,247,77,89,165,153,68,15,245,180,36,160,70,58,69,23,103,191,81,126,241,166,67,22 };
    byte_vec_t pk { 2,239,26,71,94,219,150,180,114,38,187,192,225,208,97,110,149,183,208,250,13,143,132,197,59,142,109,159,150,247,133,212,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 857 ") {
    byte_vec_t msg { 96,240,167,11 };
    byte_vec_t sig { 236,54,24,2,121,104,128,120,200,158,139,9,209,19,172,89,20,222,65,98,117,154,47,66,149,27,51,162,218,217,37,222,191,186,228,104,164,192,85,47,166,11,120,80,183,36,141,39,31,147,138,254,155,232,13,17,215,226,236,53,113,188,133,111 };
    byte_vec_t pk { 4,19,22,254,79,6,85,13,56,175,51,239,50,47,10,238,19,67,65,77,207,35,123,204,126,1,165,20,128,33,196,234,24,212,2,235,235,44,242,154,116,64,35,173,229,201,15,45,252,230,138,3,198,162,84,248,243,203,188,241,22,225,66,78,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 857 ") {
    byte_vec_t msg { 29,144,85,147 };
    byte_vec_t sig { 116,201,94,77,105,226,174,144,159,70,193,148,249,109,197,76,182,200,95,193,251,215,46,3,251,25,28,74,131,104,30,76,38,196,173,101,240,53,28,134,8,182,135,174,172,28,170,241,164,252,49,191,137,40,185,220,186,130,233,250,104,179,139,127 };
    byte_vec_t pk { 4,215,38,175,4,107,127,45,52,95,53,226,206,156,109,13,211,83,64,244,1,198,176,215,203,113,245,167,21,155,45,160,182,212,192,58,55,207,212,167,117,176,145,159,237,122,127,12,149,232,73,52,72,184,139,101,240,199,252,4,207,161,8,92,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 857 ") {
    byte_vec_t msg { 255,25,92,44 };
    byte_vec_t sig { 113,223,230,4,194,53,83,143,54,199,110,40,25,171,94,231,144,37,44,51,166,5,48,155,28,98,172,47,235,56,179,182,13,251,130,119,40,12,93,239,66,216,77,9,93,43,180,104,89,215,45,48,36,167,23,187,29,194,222,25,204,158,238,168 };
    byte_vec_t pk { 3,105,211,59,200,211,11,202,5,222,215,198,18,88,37,8,177,57,189,12,42,115,168,94,235,75,215,16,90,25,1,79,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 857 ") {
    byte_vec_t msg { 154,10,252,11 };
    byte_vec_t sig { 4,44,57,57,190,132,217,173,216,145,96,50,24,145,130,94,247,193,206,249,84,166,66,223,80,86,221,142,26,36,145,121,4,15,209,133,230,135,58,146,178,88,198,35,26,24,197,232,227,235,99,7,207,239,211,108,56,93,42,106,132,0,99,227 };
    byte_vec_t pk { 2,51,56,26,220,85,71,56,203,75,212,78,229,228,168,123,7,6,4,121,213,51,228,137,17,2,78,69,131,91,193,229,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 858 ") {
    byte_vec_t msg { 11,148,20,235 };
    byte_vec_t sig { 232,10,118,51,219,236,175,110,98,237,38,102,30,153,59,147,220,92,75,182,10,152,3,174,198,226,164,118,78,154,175,209,89,249,255,108,146,74,47,187,94,157,55,114,158,20,126,5,129,48,66,205,149,231,127,182,51,210,11,90,62,112,211,238 };
    byte_vec_t pk { 4,45,95,176,131,28,160,50,27,192,122,77,238,149,39,231,50,87,64,12,64,72,70,169,152,51,115,203,226,73,53,26,70,106,214,119,145,185,182,104,77,227,39,214,124,29,145,82,223,24,76,206,236,104,17,253,184,128,50,23,189,33,98,5,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 858 ") {
    byte_vec_t msg { 66,195,40,118 };
    byte_vec_t sig { 125,180,157,186,218,91,97,216,126,92,194,169,196,235,62,216,219,17,214,125,220,48,129,160,255,29,22,130,250,137,143,126,227,18,48,79,111,151,223,203,127,206,120,250,72,221,57,148,40,113,139,50,83,210,65,197,151,152,202,18,221,94,125,208 };
    byte_vec_t pk { 4,42,159,133,164,64,60,180,108,150,175,164,191,232,142,110,209,88,61,73,43,252,248,113,65,23,188,20,140,131,214,202,47,77,44,208,183,145,34,183,22,25,248,57,54,45,17,151,153,125,144,133,11,214,37,253,232,141,15,186,165,147,179,224,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 858 ") {
    byte_vec_t msg { 64,120,36,156 };
    byte_vec_t sig { 229,100,212,235,13,25,3,23,107,145,120,199,170,143,143,78,20,81,125,231,234,63,185,15,226,164,93,37,64,74,198,223,153,27,177,37,178,71,58,104,6,56,12,60,5,240,163,176,118,76,84,214,79,40,215,200,216,192,184,25,117,36,239,208 };
    byte_vec_t pk { 3,85,66,139,8,235,65,190,79,188,140,162,50,140,99,20,159,30,253,142,62,100,118,85,164,119,176,122,244,217,238,80,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 858 ") {
    byte_vec_t msg { 211,138,121,240 };
    byte_vec_t sig { 204,193,148,237,186,177,248,88,4,132,94,70,29,128,24,116,138,188,76,81,25,196,34,12,126,136,27,36,78,146,142,252,202,114,94,127,84,33,80,7,79,42,24,12,179,130,28,61,41,116,156,109,205,217,235,96,114,44,234,13,58,67,111,230 };
    byte_vec_t pk { 2,68,50,149,41,159,81,162,116,125,147,173,44,42,254,182,91,201,116,243,1,203,66,114,90,178,98,47,181,69,250,47,80 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 859 ") {
    byte_vec_t msg { 201,143,183,215 };
    byte_vec_t sig { 59,184,204,191,233,167,164,171,47,129,205,245,234,95,107,3,125,212,164,54,169,238,172,168,67,149,216,140,163,77,147,254,192,232,192,58,52,203,99,235,247,91,179,206,12,249,16,24,218,1,195,150,153,221,227,122,61,111,117,255,147,193,136,64 };
    byte_vec_t pk { 4,131,119,174,203,190,180,94,75,99,152,110,108,91,167,231,255,155,213,229,218,234,55,226,205,35,84,106,230,47,236,248,129,237,183,90,245,222,215,148,69,33,3,35,77,225,44,9,26,193,165,161,50,185,69,213,194,198,87,234,46,141,233,90,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 859 ") {
    byte_vec_t msg { 89,65,79,0 };
    byte_vec_t sig { 52,69,233,204,5,73,196,182,214,90,184,209,96,79,82,206,114,29,31,196,193,89,3,194,26,74,12,173,12,40,82,114,251,3,73,194,214,53,152,190,162,137,29,76,80,10,85,64,156,170,232,119,95,112,184,249,39,147,59,229,43,213,210,221 };
    byte_vec_t pk { 4,190,211,46,5,41,58,148,173,212,136,159,187,100,121,161,73,70,149,101,78,53,244,35,192,22,134,40,204,149,67,103,19,70,229,233,150,186,209,39,20,58,218,244,43,133,194,240,86,73,45,224,241,82,49,113,107,110,119,58,228,148,93,84,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 859 ") {
    byte_vec_t msg { 99,253,174,67 };
    byte_vec_t sig { 96,80,230,211,175,173,106,168,120,194,15,30,1,34,48,231,19,87,64,100,252,149,0,151,200,102,215,209,208,197,179,69,50,245,84,141,206,139,217,244,247,180,21,215,134,199,21,213,19,54,69,220,248,211,5,64,247,64,94,176,70,230,129,206 };
    byte_vec_t pk { 3,85,3,163,116,250,33,46,131,40,244,69,249,84,113,102,131,95,232,183,3,111,199,113,94,232,228,195,173,141,197,177,7 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 859 ") {
    byte_vec_t msg { 114,132,211,121 };
    byte_vec_t sig { 129,222,93,69,110,1,225,149,38,248,236,178,24,150,253,44,37,156,75,66,12,231,35,228,174,88,215,213,237,172,193,127,146,185,93,177,29,126,103,235,105,166,146,41,10,98,163,84,180,231,42,160,153,58,64,67,70,146,117,186,100,192,160,72 };
    byte_vec_t pk { 2,83,108,62,146,164,199,165,191,57,85,99,1,140,88,186,237,236,102,146,4,85,172,59,232,194,213,109,102,200,52,147,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 860 ") {
    byte_vec_t msg { 230,145,41,163 };
    byte_vec_t sig { 28,19,250,138,208,199,72,253,111,100,109,152,154,150,22,174,5,93,193,249,11,4,181,120,30,156,252,199,53,6,121,224,112,120,184,169,190,37,25,138,245,190,0,190,242,185,180,147,153,69,14,198,30,5,34,7,178,61,189,163,205,44,21,157 };
    byte_vec_t pk { 4,87,207,143,105,31,42,117,59,25,16,150,21,119,73,59,191,197,209,147,25,43,117,44,81,163,43,23,22,213,244,21,125,129,247,253,231,199,167,117,92,171,241,178,140,146,238,186,211,146,235,52,220,129,66,255,46,125,91,41,80,71,32,221,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 860 ") {
    byte_vec_t msg { 246,138,62,32 };
    byte_vec_t sig { 127,205,235,153,76,201,212,156,23,163,206,125,14,42,111,77,172,22,92,204,44,10,134,1,37,217,57,244,242,69,129,167,187,34,5,128,159,125,241,21,237,230,141,158,134,92,27,62,68,233,48,225,223,138,11,196,214,39,133,102,206,238,81,66 };
    byte_vec_t pk { 4,231,54,15,190,140,200,185,240,239,95,0,18,94,25,20,138,199,121,38,209,122,130,159,36,106,6,209,101,143,66,93,47,6,94,118,119,190,230,142,214,89,149,160,197,145,86,3,185,37,10,251,90,117,13,203,183,50,213,76,60,59,169,186,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 860 ") {
    byte_vec_t msg { 157,242,219,102 };
    byte_vec_t sig { 119,124,89,230,40,141,61,221,204,156,53,105,125,34,188,183,72,41,254,69,188,139,82,225,248,101,127,54,212,198,123,33,50,17,91,194,246,84,97,162,195,188,246,37,153,22,134,13,147,137,249,52,95,13,81,186,69,66,109,206,106,15,201,197 };
    byte_vec_t pk { 3,65,77,254,148,216,40,8,110,113,170,82,151,44,178,37,36,33,33,42,125,94,225,191,155,204,88,249,13,127,88,79,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 860 ") {
    byte_vec_t msg { 32,55,237,68 };
    byte_vec_t sig { 154,192,49,37,43,121,178,244,136,74,153,246,127,212,21,195,11,126,32,85,55,109,243,181,77,203,56,186,32,150,154,153,100,61,70,170,195,205,93,153,148,117,167,86,117,33,175,213,39,12,122,222,197,254,118,57,202,133,251,112,33,118,216,251 };
    byte_vec_t pk { 2,193,235,17,237,94,109,192,213,40,219,132,222,247,243,29,225,139,254,97,46,226,208,159,197,85,165,98,104,179,157,240,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 861 ") {
    byte_vec_t msg { 93,121,217,49 };
    byte_vec_t sig { 237,255,81,155,155,132,27,63,244,147,189,65,146,109,244,145,202,74,236,142,42,0,214,30,120,152,63,174,94,114,136,185,150,104,208,10,209,96,132,84,176,129,133,128,91,10,10,50,246,203,191,129,176,147,99,138,8,76,186,188,30,215,120,160 };
    byte_vec_t pk { 4,227,115,23,78,150,68,38,226,46,171,141,247,158,148,234,175,50,124,113,150,121,113,75,177,236,208,190,199,194,153,46,150,191,152,72,83,218,23,47,201,169,86,201,249,234,246,108,38,28,10,72,3,138,28,190,73,219,79,189,234,166,93,227,210 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 861 ") {
    byte_vec_t msg { 254,102,245,48 };
    byte_vec_t sig { 178,57,51,46,250,158,32,87,16,57,169,215,137,156,167,166,105,31,162,237,157,28,0,247,73,88,238,228,70,226,164,220,68,214,245,245,129,143,150,76,195,217,102,117,50,19,38,192,39,71,41,201,187,198,34,126,239,80,72,2,155,226,124,150 };
    byte_vec_t pk { 4,88,13,115,220,253,63,86,160,171,182,188,238,38,219,232,78,23,130,191,102,80,166,118,61,37,117,197,50,154,48,31,15,210,169,176,186,205,172,177,242,187,211,101,75,228,126,25,59,9,226,110,236,178,21,201,90,216,130,61,139,158,56,127,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 861 ") {
    byte_vec_t msg { 176,109,57,92 };
    byte_vec_t sig { 70,22,207,198,5,30,187,79,166,147,85,40,26,213,131,178,142,250,220,234,207,247,185,182,202,132,234,170,118,152,114,122,180,101,168,177,165,14,171,157,169,121,169,158,100,137,106,103,42,54,252,4,15,228,98,227,24,141,217,55,10,72,155,179 };
    byte_vec_t pk { 3,15,250,170,116,242,186,233,103,220,94,30,231,227,38,51,106,88,153,122,25,6,88,37,24,126,178,92,122,13,190,98,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 861 ") {
    byte_vec_t msg { 210,232,159,219 };
    byte_vec_t sig { 96,35,34,163,227,234,172,206,113,123,91,152,227,73,162,160,168,252,78,141,162,25,213,113,64,94,204,8,226,129,192,68,194,102,203,215,21,161,93,172,177,14,212,125,19,104,58,180,189,146,108,79,96,224,69,113,192,169,197,255,1,191,236,122 };
    byte_vec_t pk { 3,161,161,56,146,30,67,3,221,255,80,107,71,175,142,203,122,23,224,185,108,49,45,255,170,120,32,241,165,18,52,67,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 862 ") {
    byte_vec_t msg { 170,31,100,252 };
    byte_vec_t sig { 78,159,37,149,231,195,107,44,119,27,124,87,214,112,187,100,236,194,148,63,159,206,91,157,165,113,132,187,41,127,53,94,24,178,98,37,84,55,137,140,178,239,54,148,43,133,3,219,250,8,131,140,133,105,93,146,183,107,203,14,251,137,192,98 };
    byte_vec_t pk { 4,130,254,132,94,153,32,5,216,193,111,23,24,129,28,10,171,146,9,252,76,82,167,47,244,194,202,63,27,186,139,250,118,109,1,152,125,134,173,183,7,128,120,41,138,62,99,59,122,229,239,61,215,29,180,19,62,227,251,250,231,243,34,65,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 862 ") {
    byte_vec_t msg { 240,176,71,210 };
    byte_vec_t sig { 190,87,44,92,159,150,176,73,180,82,66,165,159,191,13,255,0,134,250,182,208,116,48,104,89,38,87,245,15,203,231,42,50,62,240,1,0,97,145,99,106,39,6,151,69,160,119,17,22,240,21,110,220,241,235,18,184,136,9,90,135,239,149,241 };
    byte_vec_t pk { 4,148,26,139,242,44,9,53,41,71,134,8,122,167,241,38,119,96,154,176,223,230,213,35,56,107,37,214,165,232,73,196,94,249,255,33,60,49,178,121,88,186,244,127,1,209,20,27,117,231,26,228,209,173,8,226,5,59,171,55,113,216,47,140,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 862 ") {
    byte_vec_t msg { 100,242,76,49 };
    byte_vec_t sig { 148,4,124,196,65,146,137,107,12,165,37,81,194,10,82,214,127,39,106,127,170,162,114,114,72,174,226,53,75,102,9,226,206,18,114,66,239,233,23,67,118,95,218,186,254,102,228,122,92,63,78,168,238,17,217,63,103,225,81,26,166,86,213,17 };
    byte_vec_t pk { 2,177,78,105,23,176,12,71,169,46,187,112,102,180,170,57,216,255,159,30,107,22,63,249,51,104,44,9,154,240,65,136,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 862 ") {
    byte_vec_t msg { 206,157,164,32 };
    byte_vec_t sig { 28,155,72,133,248,40,226,62,108,84,187,192,210,166,197,193,28,155,87,73,14,111,121,233,244,1,183,149,166,89,203,102,39,159,235,133,128,87,21,140,46,14,55,162,123,217,46,185,215,52,242,243,67,11,163,27,53,7,16,208,1,244,159,149 };
    byte_vec_t pk { 2,122,62,62,51,117,33,10,128,60,248,230,235,121,181,107,52,218,99,248,108,193,14,185,29,84,192,43,252,48,103,180,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 863 ") {
    byte_vec_t msg { 128,154,211,47 };
    byte_vec_t sig { 141,205,183,245,163,228,9,117,109,75,3,13,148,218,152,87,74,190,116,156,63,236,49,250,190,117,84,185,248,124,115,178,176,44,161,12,56,115,22,64,92,49,50,58,33,17,194,96,16,106,210,206,22,137,209,237,65,245,23,157,158,215,228,153 };
    byte_vec_t pk { 4,124,130,163,45,228,168,246,170,117,27,123,21,203,104,148,107,155,158,195,192,1,43,82,229,100,139,97,217,246,113,28,63,111,130,24,53,214,184,104,182,217,120,24,14,64,115,219,83,126,104,248,159,57,95,121,95,102,70,117,255,25,133,203,200 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 863 ") {
    byte_vec_t msg { 136,227,163,238 };
    byte_vec_t sig { 15,72,167,117,3,188,39,81,221,56,61,220,136,157,54,216,234,203,138,163,111,45,179,82,3,63,75,162,127,115,217,99,141,93,49,206,228,22,74,212,40,3,250,181,100,237,136,237,236,44,152,9,195,216,223,16,71,70,129,69,228,149,63,14 };
    byte_vec_t pk { 4,244,189,75,36,135,53,0,107,16,8,64,227,53,40,71,107,250,229,73,47,119,158,187,215,56,218,121,19,231,212,88,126,188,236,197,205,224,71,187,130,225,106,151,134,81,122,34,11,249,172,175,76,50,128,57,204,70,87,19,24,238,113,116,149 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 863 ") {
    byte_vec_t msg { 175,152,218,122 };
    byte_vec_t sig { 177,236,54,192,111,12,70,200,37,10,202,167,169,47,45,66,216,166,106,74,197,249,47,199,6,106,176,47,126,251,244,21,252,213,152,118,42,12,234,220,77,206,56,223,100,18,101,161,209,2,19,229,78,10,155,221,165,45,170,168,243,233,156,247 };
    byte_vec_t pk { 3,232,57,240,138,168,78,200,151,173,17,237,113,60,198,155,128,10,236,246,146,186,197,248,82,144,99,103,141,141,166,171,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 863 ") {
    byte_vec_t msg { 35,96,87,62 };
    byte_vec_t sig { 39,146,16,197,34,206,198,248,6,176,33,210,111,114,6,222,232,131,237,122,175,133,134,240,103,134,178,84,224,196,229,252,79,89,40,103,176,5,249,75,8,54,18,70,126,232,154,186,26,234,153,152,185,116,144,196,19,149,65,51,184,51,217,22 };
    byte_vec_t pk { 3,204,111,235,254,49,192,107,34,145,115,217,218,1,179,233,123,78,135,75,25,225,172,144,244,72,186,155,122,88,193,174,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 864 ") {
    byte_vec_t msg { 52,215,236,88 };
    byte_vec_t sig { 125,69,255,144,34,165,6,26,166,151,40,42,98,97,166,18,28,151,236,66,197,31,105,238,128,78,145,20,161,58,132,108,150,202,219,36,8,207,248,79,201,57,246,232,21,62,100,101,48,106,143,23,198,252,230,250,137,69,29,232,1,244,104,162 };
    byte_vec_t pk { 4,157,50,77,50,185,55,29,215,195,207,49,188,251,141,160,29,52,32,8,234,5,44,197,67,197,75,207,48,237,71,99,104,173,248,255,14,194,202,242,124,28,112,82,4,3,71,118,144,181,77,113,46,178,139,217,88,227,71,224,241,101,147,248,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 864 ") {
    byte_vec_t msg { 172,35,38,179 };
    byte_vec_t sig { 111,158,71,103,69,250,117,141,142,31,93,208,192,60,242,94,2,170,48,96,116,145,30,216,82,20,2,85,133,34,135,10,58,149,44,142,201,94,238,249,178,152,108,217,183,162,197,84,183,59,162,188,209,243,45,63,133,113,213,200,63,46,216,70 };
    byte_vec_t pk { 4,221,219,33,99,71,139,228,138,156,194,37,68,205,232,229,106,47,105,203,251,237,104,180,139,105,101,87,148,77,106,247,219,52,133,50,160,62,91,225,150,2,89,146,219,115,153,186,119,162,15,236,6,248,216,136,73,201,23,255,246,110,47,34,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 864 ") {
    byte_vec_t msg { 154,171,209,221 };
    byte_vec_t sig { 52,146,153,0,51,135,164,13,182,137,242,137,199,239,226,219,61,59,229,183,185,204,130,189,160,2,211,253,124,185,250,205,117,15,34,255,143,32,44,80,215,245,54,92,90,214,160,253,41,147,159,195,152,251,169,202,114,81,77,211,53,123,153,73 };
    byte_vec_t pk { 3,223,201,175,186,231,128,67,240,18,148,92,0,11,218,26,20,205,60,201,239,248,240,218,80,101,255,15,45,97,247,225,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 864 ") {
    byte_vec_t msg { 206,231,166,200 };
    byte_vec_t sig { 135,46,86,60,247,51,183,15,245,198,140,24,83,117,223,51,144,183,152,176,118,157,241,92,232,89,84,17,112,72,40,122,138,124,212,170,141,129,140,102,155,197,250,63,45,15,8,80,93,163,14,164,11,140,193,213,136,246,250,73,22,59,106,248 };
    byte_vec_t pk { 3,254,237,246,35,140,21,105,191,250,151,154,98,152,96,170,238,43,134,194,22,8,121,245,14,191,204,174,193,106,247,128,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 865 ") {
    byte_vec_t msg { 170,10,173,170 };
    byte_vec_t sig { 149,18,2,155,112,60,85,86,82,174,157,10,107,0,122,98,80,240,216,163,49,212,129,228,19,177,188,18,232,72,24,102,45,156,28,167,112,226,197,85,54,24,57,135,62,254,129,194,134,220,124,128,96,115,244,54,179,220,191,141,230,70,202,12 };
    byte_vec_t pk { 4,241,96,215,110,135,30,178,210,96,9,16,143,125,180,9,70,83,2,251,38,4,23,215,241,253,218,243,230,236,139,5,95,189,61,71,79,134,152,240,148,18,235,20,130,134,224,87,183,0,162,122,73,185,0,181,3,129,96,129,151,222,244,98,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 865 ") {
    byte_vec_t msg { 170,231,45,62 };
    byte_vec_t sig { 84,56,232,163,52,80,46,215,133,30,59,22,80,12,249,100,34,71,94,35,205,59,12,110,131,181,175,37,143,188,164,220,4,114,19,46,122,162,107,149,105,130,225,196,9,34,251,101,175,194,183,233,190,34,174,13,156,115,167,20,249,247,17,201 };
    byte_vec_t pk { 4,146,5,31,27,80,166,242,90,38,102,171,195,52,99,100,107,217,226,4,101,245,231,71,255,204,198,111,73,191,109,48,121,201,81,178,237,34,13,228,6,99,102,34,156,193,108,191,47,76,62,151,248,128,185,119,102,244,157,255,66,141,11,23,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 865 ") {
    byte_vec_t msg { 7,239,203,202 };
    byte_vec_t sig { 35,84,189,131,106,79,212,245,71,87,62,106,197,70,152,248,106,228,242,150,177,109,58,51,216,103,179,164,124,159,195,132,225,113,68,236,1,220,111,13,144,199,147,164,184,26,96,122,103,123,71,219,93,66,234,196,199,176,195,158,241,134,176,243 };
    byte_vec_t pk { 2,201,99,158,192,251,70,103,159,150,62,156,61,95,65,27,248,13,195,126,22,5,202,126,88,198,29,108,89,20,71,232,239 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 865 ") {
    byte_vec_t msg { 196,118,7,95 };
    byte_vec_t sig { 201,213,172,134,135,97,98,34,138,150,41,34,133,211,90,171,3,44,170,194,193,70,14,12,247,193,76,61,186,200,120,99,46,144,182,155,24,163,208,210,100,242,213,37,254,54,223,223,216,13,27,162,252,143,218,174,111,173,60,26,167,218,240,16 };
    byte_vec_t pk { 2,222,117,209,33,243,163,50,224,183,14,45,14,192,117,219,4,170,216,33,66,169,166,226,237,63,42,118,35,161,6,151,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 866 ") {
    byte_vec_t msg { 109,36,132,129 };
    byte_vec_t sig { 170,181,246,108,252,234,45,52,145,193,68,113,226,203,217,149,210,245,118,177,189,215,43,153,103,199,43,196,53,197,130,45,212,60,184,228,134,116,54,115,66,140,127,216,222,99,62,77,231,242,222,247,137,166,120,238,195,44,77,199,68,223,133,209 };
    byte_vec_t pk { 4,97,2,4,109,65,159,152,137,146,170,13,177,64,223,250,16,67,86,9,110,48,159,11,136,165,96,68,140,164,114,159,207,24,104,71,144,244,253,49,156,195,4,64,190,80,184,175,157,159,227,77,188,165,215,218,172,151,148,75,92,33,212,225,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 866 ") {
    byte_vec_t msg { 99,145,193,41 };
    byte_vec_t sig { 84,62,130,176,45,163,251,112,187,61,57,201,7,29,1,185,4,191,18,42,37,32,230,108,97,214,140,167,23,143,239,229,4,111,17,106,151,140,176,199,49,139,182,36,248,73,192,0,46,220,15,120,217,237,15,217,75,113,101,97,232,190,55,184 };
    byte_vec_t pk { 4,154,246,88,189,184,212,173,198,49,181,181,53,72,149,52,30,184,130,193,35,99,201,71,197,157,42,46,157,74,230,10,78,59,219,238,253,120,185,80,142,69,28,43,160,0,17,244,148,50,110,247,179,34,125,137,140,23,201,149,117,209,29,74,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 866 ") {
    byte_vec_t msg { 99,187,156,165 };
    byte_vec_t sig { 254,2,140,151,116,134,160,48,202,151,235,147,236,203,233,193,178,230,147,118,157,140,124,33,15,243,104,136,120,92,217,12,253,116,182,23,156,112,233,224,191,58,35,35,121,58,76,147,15,91,56,3,80,134,62,248,11,190,89,148,181,200,214,41 };
    byte_vec_t pk { 2,244,250,132,58,69,98,42,121,60,66,241,179,89,142,191,236,17,171,219,71,162,76,82,164,31,49,5,96,146,104,237,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 866 ") {
    byte_vec_t msg { 164,166,182,121 };
    byte_vec_t sig { 84,247,184,168,41,242,163,32,86,131,129,97,221,117,154,186,65,167,88,207,151,68,214,21,130,87,148,48,173,196,136,251,3,57,26,30,187,20,31,56,145,7,112,67,136,28,73,77,218,41,50,242,43,255,234,241,107,40,235,253,166,92,110,207 };
    byte_vec_t pk { 2,165,79,46,152,7,126,83,126,237,245,130,45,225,127,248,155,163,158,189,231,75,46,117,237,148,41,15,190,167,139,110,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 867 ") {
    byte_vec_t msg { 202,132,161,196 };
    byte_vec_t sig { 154,142,115,135,177,57,178,108,241,84,79,123,32,79,118,109,90,36,146,208,36,104,250,35,60,110,223,205,156,121,73,92,74,84,40,230,166,216,0,127,72,115,247,67,207,143,231,194,21,167,123,15,81,164,100,62,238,12,124,103,60,143,225,44 };
    byte_vec_t pk { 4,155,45,172,111,243,131,2,116,28,145,164,254,40,157,214,79,170,221,43,193,59,28,26,157,240,98,214,55,223,194,51,27,0,185,101,194,198,233,246,242,236,164,52,128,119,230,125,50,250,224,24,148,190,40,220,135,241,5,18,152,121,111,133,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 867 ") {
    byte_vec_t msg { 7,133,56,118 };
    byte_vec_t sig { 21,117,1,102,176,153,102,125,120,34,199,95,146,112,40,252,62,99,18,124,239,102,190,193,41,247,192,167,65,97,245,86,184,79,144,45,58,148,129,162,106,74,15,162,124,21,59,2,118,245,3,89,227,246,37,139,29,200,8,208,183,165,195,152 };
    byte_vec_t pk { 4,237,133,7,173,144,104,76,1,96,233,197,158,168,13,42,46,37,96,65,52,136,159,58,4,189,160,131,113,251,199,212,252,70,65,107,225,68,236,220,232,160,163,152,95,181,254,21,71,35,138,115,143,42,180,218,206,26,35,142,131,217,231,136,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 867 ") {
    byte_vec_t msg { 32,21,222,112 };
    byte_vec_t sig { 221,37,204,96,200,10,3,59,17,135,47,246,12,184,1,150,41,196,184,37,246,218,211,124,53,252,178,96,246,134,156,154,171,148,48,224,90,116,116,205,29,140,173,237,43,231,181,137,68,238,205,74,100,74,233,78,245,9,11,107,180,119,29,55 };
    byte_vec_t pk { 3,221,96,217,139,228,217,201,80,218,223,144,99,166,235,13,26,134,33,161,205,15,98,180,162,242,64,34,180,24,95,77,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 867 ") {
    byte_vec_t msg { 214,131,160,161 };
    byte_vec_t sig { 155,39,193,134,240,219,67,218,209,65,216,90,178,96,200,113,231,6,208,234,30,8,139,144,74,23,52,219,6,58,165,85,6,14,33,17,251,35,45,255,27,222,151,19,217,182,117,250,56,68,229,186,211,34,4,47,106,61,106,129,104,48,68,61 };
    byte_vec_t pk { 2,77,50,99,237,139,171,81,208,160,4,104,35,11,122,118,63,57,197,198,156,6,4,117,54,221,184,17,61,52,53,223,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 868 ") {
    byte_vec_t msg { 101,40,187,47 };
    byte_vec_t sig { 13,126,88,127,66,201,178,58,156,66,44,188,248,172,44,183,54,120,18,149,206,188,145,30,178,190,0,158,206,104,27,239,0,70,149,106,127,74,35,84,211,189,145,87,181,111,79,249,60,138,253,156,27,232,174,18,129,25,200,165,78,95,10,146 };
    byte_vec_t pk { 4,8,238,42,26,24,210,65,127,210,219,235,4,247,233,90,131,184,73,132,179,209,66,115,211,19,80,40,126,62,187,105,104,171,182,124,250,61,158,34,31,161,133,57,64,115,64,31,52,144,76,214,194,218,92,77,167,172,233,113,99,229,45,149,46 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 868 ") {
    byte_vec_t msg { 215,99,13,199 };
    byte_vec_t sig { 11,226,64,14,162,118,76,192,248,83,9,215,220,28,179,167,154,60,24,75,151,79,156,80,245,108,188,140,74,238,45,110,237,28,217,225,225,13,11,227,108,55,147,29,114,95,248,54,254,92,41,32,227,20,67,205,116,158,229,194,209,21,249,176 };
    byte_vec_t pk { 4,45,171,211,76,9,3,251,35,152,93,155,106,82,150,247,241,133,148,119,100,204,115,152,70,254,39,86,248,182,12,232,22,238,68,120,37,94,42,112,145,100,88,224,49,162,29,125,140,233,219,189,212,72,161,255,140,152,125,126,44,59,90,23,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 868 ") {
    byte_vec_t msg { 142,124,219,190 };
    byte_vec_t sig { 36,247,225,233,129,41,147,33,143,137,237,45,126,167,21,154,223,168,52,213,169,76,31,197,247,24,219,246,62,15,195,110,252,50,44,57,241,168,164,57,80,35,186,184,153,57,243,49,86,179,41,26,72,38,185,241,185,12,201,190,240,125,203,125 };
    byte_vec_t pk { 2,235,19,232,193,187,129,110,85,194,148,133,233,227,217,60,254,113,161,201,236,14,28,142,31,191,157,42,108,168,140,8,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 868 ") {
    byte_vec_t msg { 82,18,111,90 };
    byte_vec_t sig { 170,83,223,166,228,205,207,50,66,80,206,191,196,119,101,22,16,50,21,3,169,245,6,184,100,179,56,52,68,152,81,131,108,63,197,49,4,190,23,60,146,140,85,183,245,43,103,53,232,4,181,168,203,63,118,166,3,253,105,110,253,113,200,89 };
    byte_vec_t pk { 3,144,68,244,71,172,120,237,70,150,54,157,109,79,13,133,12,21,189,140,241,105,30,79,27,8,229,26,35,62,87,64,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 869 ") {
    byte_vec_t msg { 206,232,18,107 };
    byte_vec_t sig { 200,251,49,192,183,42,75,17,238,161,63,26,248,105,125,153,76,65,150,118,72,139,71,83,165,211,38,21,206,44,30,0,114,133,232,106,113,235,123,147,56,2,232,187,233,148,24,241,55,24,184,56,110,7,249,63,178,212,124,101,222,3,244,168 };
    byte_vec_t pk { 4,210,24,15,124,253,231,14,4,77,145,114,208,154,222,204,17,104,143,22,182,192,19,244,49,36,174,208,234,62,165,43,236,89,227,236,3,251,139,103,126,9,34,217,183,66,215,73,215,69,83,29,136,245,125,202,109,73,119,31,169,71,15,144,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 869 ") {
    byte_vec_t msg { 159,60,173,133 };
    byte_vec_t sig { 250,130,225,87,240,208,250,141,101,146,234,106,98,62,189,153,93,252,200,34,238,217,13,212,163,31,247,202,166,209,128,33,95,153,156,18,131,190,176,120,176,125,142,46,40,196,62,52,168,29,126,245,31,133,22,48,125,10,5,117,115,175,3,157 };
    byte_vec_t pk { 4,94,89,29,83,110,225,68,6,15,107,10,169,245,15,46,43,134,205,77,96,84,128,16,47,90,138,139,115,159,124,95,230,60,110,173,85,66,229,68,43,167,27,205,104,64,14,108,3,233,59,21,54,1,186,60,221,117,197,5,238,81,158,138,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 869 ") {
    byte_vec_t msg { 243,190,173,214 };
    byte_vec_t sig { 16,137,38,192,105,8,226,26,210,65,77,184,30,171,188,200,170,124,93,111,233,231,249,136,180,39,70,215,8,198,246,77,213,147,214,71,76,170,30,112,26,200,245,67,189,241,220,237,132,190,12,29,90,180,104,200,10,214,5,42,213,86,200,83 };
    byte_vec_t pk { 3,138,239,39,70,225,0,15,193,86,223,34,195,150,162,10,3,152,133,102,90,215,7,225,252,93,60,140,82,168,173,80,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 869 ") {
    byte_vec_t msg { 25,199,139,78 };
    byte_vec_t sig { 207,240,85,255,189,215,160,192,81,233,5,99,146,7,166,167,59,203,70,94,111,133,149,117,207,182,125,172,44,139,138,42,133,247,2,180,116,225,181,196,202,8,131,178,26,57,161,97,190,215,209,46,157,202,182,150,151,191,50,178,177,45,87,189 };
    byte_vec_t pk { 3,55,65,98,48,152,196,99,10,23,79,222,14,82,126,156,223,209,67,182,67,14,243,82,46,87,163,134,95,8,31,43,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 870 ") {
    byte_vec_t msg { 211,172,219,93 };
    byte_vec_t sig { 105,232,225,204,43,216,190,77,132,234,87,13,180,128,39,63,10,194,167,206,111,187,11,238,191,206,228,217,191,163,115,210,78,143,108,96,188,59,100,195,201,167,238,221,119,51,141,149,106,189,127,3,137,55,168,97,196,206,244,206,56,236,52,5 };
    byte_vec_t pk { 4,233,72,198,215,21,75,63,152,236,215,71,69,133,196,248,138,243,61,22,54,38,80,145,206,252,225,139,231,224,54,216,173,8,204,112,112,3,205,26,81,177,17,46,229,204,99,80,158,213,55,109,94,168,223,183,59,135,243,106,112,152,158,42,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 870 ") {
    byte_vec_t msg { 206,129,45,5 };
    byte_vec_t sig { 132,246,195,127,192,78,84,35,74,170,249,89,129,107,253,34,147,58,44,23,202,249,72,32,56,141,176,79,163,174,237,128,249,62,232,225,103,252,224,243,245,24,64,48,23,127,242,64,77,161,56,206,59,93,70,23,192,3,73,210,37,105,162,10 };
    byte_vec_t pk { 4,213,217,113,117,247,148,136,201,86,99,201,236,4,160,201,66,146,37,197,86,223,143,246,8,95,62,47,216,129,108,182,241,237,129,61,2,105,251,79,245,46,231,207,248,185,116,28,44,212,116,40,194,192,195,176,119,46,74,11,100,94,215,1,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 870 ") {
    byte_vec_t msg { 65,186,185,217 };
    byte_vec_t sig { 180,79,18,111,106,153,114,156,233,139,41,227,8,221,210,11,252,233,131,232,94,163,230,128,173,153,81,132,255,138,19,108,69,167,53,173,213,168,32,132,185,158,107,85,239,139,230,3,29,26,61,84,23,164,41,0,164,241,162,0,127,146,52,72 };
    byte_vec_t pk { 2,170,223,93,224,90,224,207,154,209,131,68,172,92,113,62,197,125,72,0,87,252,133,107,101,226,230,231,162,58,200,230,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 870 ") {
    byte_vec_t msg { 29,244,112,4 };
    byte_vec_t sig { 16,96,216,150,98,124,9,98,29,213,160,24,252,37,200,140,112,207,13,236,156,103,95,242,146,82,18,5,76,255,202,151,129,243,176,149,242,230,210,104,169,158,36,30,227,59,97,128,122,142,74,93,33,187,92,180,214,93,85,120,3,175,240,181 };
    byte_vec_t pk { 3,155,92,43,186,99,202,211,129,26,89,162,54,26,0,14,63,9,180,143,2,59,94,165,202,101,48,213,177,107,154,18,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 871 ") {
    byte_vec_t msg { 2,80,146,196 };
    byte_vec_t sig { 130,82,170,236,66,71,43,10,35,142,2,118,91,89,145,146,199,255,186,78,220,171,140,250,225,216,134,220,46,58,84,207,170,8,196,56,45,24,221,97,32,248,84,50,208,0,75,24,17,92,250,239,41,177,199,165,199,245,88,32,161,117,201,19 };
    byte_vec_t pk { 4,82,140,73,150,138,208,39,60,84,201,199,172,32,195,127,86,193,74,63,234,211,108,133,7,239,93,14,186,233,108,49,18,110,124,14,89,153,225,90,209,215,94,227,97,16,181,134,58,125,177,39,228,201,112,103,228,12,255,8,5,251,150,20,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 871 ") {
    byte_vec_t msg { 97,25,97,224 };
    byte_vec_t sig { 150,7,131,37,102,100,255,123,65,94,130,147,21,214,197,137,71,206,72,12,177,160,147,255,31,84,233,227,180,254,120,250,229,150,118,56,138,139,179,91,81,216,190,148,249,201,153,200,66,143,38,28,50,177,189,110,112,117,75,11,95,17,155,83 };
    byte_vec_t pk { 4,99,2,193,15,49,86,118,239,240,182,164,204,21,159,14,17,97,6,20,140,56,116,180,28,121,121,111,114,24,246,129,102,5,242,32,17,56,202,110,25,13,5,172,46,9,201,104,4,255,98,10,126,107,73,150,145,204,71,24,224,100,129,101,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 871 ") {
    byte_vec_t msg { 105,138,233,77 };
    byte_vec_t sig { 210,81,148,64,148,204,162,139,134,47,235,55,45,48,40,82,79,53,235,27,189,184,21,204,88,195,91,127,222,85,13,227,246,161,245,6,20,213,147,207,30,208,241,210,236,229,97,54,246,3,191,109,98,14,60,63,47,74,53,206,178,179,33,155 };
    byte_vec_t pk { 3,52,183,209,90,189,193,210,29,52,119,220,59,105,243,89,197,38,211,145,159,174,214,202,115,158,11,122,26,113,20,198,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 871 ") {
    byte_vec_t msg { 142,109,229,21 };
    byte_vec_t sig { 103,59,60,101,183,66,194,30,92,97,142,247,58,167,188,152,80,74,104,120,36,78,107,149,66,206,7,49,227,251,155,121,123,200,56,239,19,17,60,28,13,176,14,238,191,118,253,166,61,189,203,147,89,127,255,216,201,35,155,194,114,226,131,41 };
    byte_vec_t pk { 3,40,10,197,84,127,161,147,136,154,217,200,219,221,104,186,238,93,156,33,232,87,247,85,82,19,139,166,37,117,77,221,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 872 ") {
    byte_vec_t msg { 9,194,185,8 };
    byte_vec_t sig { 50,125,169,94,178,126,102,162,70,167,38,152,179,145,135,200,126,95,136,251,183,75,44,200,166,155,0,8,146,149,206,205,88,50,53,74,154,173,234,59,180,77,7,57,154,152,53,163,112,64,12,168,3,47,69,40,155,190,119,154,198,49,213,124 };
    byte_vec_t pk { 4,111,10,103,115,119,162,217,4,216,16,26,131,208,195,148,244,255,9,163,211,248,66,121,128,117,95,119,171,130,243,36,2,113,208,65,126,44,63,36,177,15,185,41,226,222,233,158,225,251,212,220,95,6,19,120,207,84,15,124,103,109,89,55,154 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 872 ") {
    byte_vec_t msg { 112,18,155,0 };
    byte_vec_t sig { 145,223,39,59,209,106,40,121,136,213,108,29,197,27,97,86,89,178,29,121,65,228,73,92,60,199,184,93,125,182,202,180,67,199,75,30,92,147,109,104,166,191,65,194,144,149,159,140,88,152,242,248,182,91,223,153,105,8,239,19,101,81,19,157 };
    byte_vec_t pk { 4,19,14,42,139,47,111,167,217,51,22,134,252,59,118,104,64,156,23,133,128,26,87,105,213,120,2,37,145,36,155,113,154,77,73,138,5,235,159,215,26,147,21,217,64,34,252,7,169,202,149,122,245,205,98,224,13,99,7,115,187,241,23,125,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 872 ") {
    byte_vec_t msg { 60,101,55,69 };
    byte_vec_t sig { 124,243,71,207,159,155,242,90,29,199,14,130,159,101,245,199,174,20,39,93,100,172,67,4,9,23,62,217,108,149,148,237,24,244,227,2,15,100,198,186,164,82,68,159,129,219,96,219,233,16,110,150,193,5,173,239,172,128,19,89,56,192,138,130 };
    byte_vec_t pk { 3,147,188,91,20,206,157,54,16,166,240,247,113,195,192,144,168,225,93,12,145,247,208,214,196,56,10,59,39,120,7,62,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 872 ") {
    byte_vec_t msg { 184,41,47,180 };
    byte_vec_t sig { 166,75,170,16,7,201,238,129,31,50,31,246,206,226,161,56,100,105,177,224,94,105,101,144,46,102,27,47,3,9,221,63,44,59,139,211,190,237,32,121,235,74,18,165,182,44,107,31,151,78,126,209,170,79,146,154,25,193,37,63,11,195,143,102 };
    byte_vec_t pk { 2,131,51,224,160,68,125,14,20,33,148,117,8,60,2,232,230,118,34,59,43,192,234,211,168,199,123,115,215,205,123,99,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 873 ") {
    byte_vec_t msg { 139,42,52,143 };
    byte_vec_t sig { 243,13,66,168,173,186,5,123,143,17,199,239,175,145,195,73,210,235,51,85,7,29,139,55,41,236,245,159,192,165,254,39,60,17,158,235,222,23,180,36,129,172,172,157,131,178,34,74,89,218,96,184,55,100,114,102,66,52,2,8,180,178,47,3 };
    byte_vec_t pk { 4,136,123,246,130,187,209,185,217,192,227,144,250,47,170,27,242,112,122,225,101,186,126,195,94,229,206,68,15,211,210,211,46,126,133,234,248,57,171,88,146,38,215,145,139,104,84,149,117,144,77,47,164,210,38,13,233,99,27,197,87,87,107,4,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 873 ") {
    byte_vec_t msg { 197,101,99,251 };
    byte_vec_t sig { 95,85,237,226,128,144,97,218,216,141,244,114,143,78,81,74,231,48,232,219,199,183,216,7,108,30,6,107,249,159,50,241,93,96,151,1,235,244,125,201,77,137,139,180,65,251,52,156,199,124,174,193,217,43,194,29,110,60,146,134,16,179,90,0 };
    byte_vec_t pk { 4,30,69,115,138,166,115,1,26,16,131,18,149,9,22,12,86,15,18,156,219,15,36,139,191,105,147,221,164,12,212,157,248,41,68,162,85,199,45,29,167,82,192,244,92,102,64,113,161,0,238,82,230,198,98,26,221,189,247,200,223,40,152,135,55 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 873 ") {
    byte_vec_t msg { 185,220,75,80 };
    byte_vec_t sig { 244,27,49,248,39,63,210,116,199,82,80,110,6,237,143,140,207,165,132,131,143,215,168,43,135,32,230,165,241,238,55,170,163,24,207,121,102,112,71,49,232,49,237,85,31,132,30,94,221,66,9,180,203,130,92,70,41,175,41,67,188,95,117,156 };
    byte_vec_t pk { 2,43,217,12,204,68,14,239,206,25,116,115,123,85,251,146,224,252,25,199,36,234,7,80,195,172,253,201,80,215,233,108,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 873 ") {
    byte_vec_t msg { 53,81,201,217 };
    byte_vec_t sig { 253,223,65,61,111,139,248,190,7,252,180,213,22,103,110,200,54,33,216,254,233,42,37,86,176,161,212,246,112,157,117,7,181,60,153,141,93,125,188,255,225,54,67,206,125,33,37,67,37,139,29,107,140,58,78,128,154,154,68,140,193,124,238,205 };
    byte_vec_t pk { 3,196,45,17,175,204,181,94,208,201,73,105,245,39,25,93,101,106,121,43,125,96,210,231,69,92,30,214,72,118,219,211,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 874 ") {
    byte_vec_t msg { 151,243,88,214 };
    byte_vec_t sig { 79,19,0,220,136,123,9,207,183,146,223,84,131,69,215,80,82,121,51,241,55,196,0,105,243,153,124,1,197,62,78,202,184,175,83,70,106,252,97,202,4,119,129,119,122,49,223,240,149,115,89,4,147,197,120,238,153,205,1,202,103,165,117,252 };
    byte_vec_t pk { 4,40,167,28,56,169,107,126,165,13,4,74,191,172,70,246,148,170,243,38,143,123,152,151,163,169,220,15,178,62,51,20,185,95,173,140,8,90,49,159,21,234,42,202,249,41,101,19,35,108,234,185,102,91,155,2,118,100,248,239,177,81,232,232,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 874 ") {
    byte_vec_t msg { 172,169,19,135 };
    byte_vec_t sig { 101,57,7,203,48,112,89,253,22,115,191,54,210,66,80,118,75,179,153,63,12,75,218,6,76,180,156,219,126,103,137,79,252,59,212,25,84,234,80,233,11,76,194,128,129,171,32,36,158,17,209,179,136,109,25,201,253,148,117,15,23,18,51,183 };
    byte_vec_t pk { 4,206,112,247,205,143,74,109,140,130,148,71,210,59,191,68,91,54,107,251,238,147,228,101,212,98,75,192,245,55,192,24,118,39,114,143,38,41,165,86,213,56,67,193,84,35,72,65,46,76,113,42,93,177,53,49,86,141,179,114,0,154,136,136,27 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 874 ") {
    byte_vec_t msg { 199,116,51,7 };
    byte_vec_t sig { 152,177,76,228,18,91,189,41,64,188,49,145,49,186,139,5,175,111,98,7,92,167,35,211,195,186,3,93,85,146,187,42,199,248,88,43,189,66,128,182,231,117,204,41,82,106,162,22,80,56,200,84,105,38,184,68,144,163,97,133,121,51,16,118 };
    byte_vec_t pk { 2,100,155,135,230,230,116,38,62,190,203,135,85,35,108,149,154,7,156,149,86,0,143,254,131,89,161,128,201,3,85,175,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 874 ") {
    byte_vec_t msg { 32,23,133,172 };
    byte_vec_t sig { 230,188,199,143,164,113,156,88,195,32,248,56,78,233,28,191,148,153,1,150,7,80,68,149,197,175,231,35,23,72,103,235,125,19,56,49,163,86,177,49,176,160,156,133,250,152,68,169,72,2,44,210,206,109,62,158,153,110,69,164,17,52,201,80 };
    byte_vec_t pk { 2,185,145,118,36,32,69,141,156,121,43,44,99,179,242,252,133,45,242,131,53,157,212,169,121,161,121,56,6,0,99,195,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 875 ") {
    byte_vec_t msg { 244,165,39,90 };
    byte_vec_t sig { 168,58,185,179,2,213,66,254,74,132,180,247,181,30,3,152,186,181,234,120,214,101,111,68,237,247,197,20,99,71,126,164,51,29,185,89,153,199,153,222,156,64,241,25,18,21,67,221,203,174,25,81,194,137,178,245,224,114,62,159,217,233,174,88 };
    byte_vec_t pk { 4,164,28,153,240,38,219,211,72,35,45,155,195,163,235,220,239,146,111,170,117,41,138,116,119,151,233,87,58,86,61,73,241,229,55,19,206,239,98,57,194,107,202,236,24,96,85,154,24,245,12,4,137,71,8,38,174,252,123,208,144,40,96,154,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 875 ") {
    byte_vec_t msg { 109,23,60,87 };
    byte_vec_t sig { 148,144,34,163,149,66,227,106,113,7,41,84,110,163,114,193,75,114,229,12,207,11,206,155,14,95,82,45,208,32,165,152,182,104,211,75,241,151,21,119,198,118,43,21,36,132,22,207,147,31,182,171,79,234,36,70,28,209,232,205,149,225,188,188 };
    byte_vec_t pk { 4,79,148,54,206,16,117,131,163,150,244,113,67,102,68,250,184,44,28,246,105,254,2,135,193,130,183,152,244,74,253,20,109,183,96,37,19,214,220,155,118,45,25,223,191,29,237,179,161,131,160,97,28,190,56,110,233,99,64,55,216,43,17,11,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 875 ") {
    byte_vec_t msg { 136,210,176,36 };
    byte_vec_t sig { 179,226,204,101,12,162,241,19,73,207,101,49,232,190,75,205,192,50,217,52,27,115,236,232,42,127,192,12,40,219,101,145,177,168,216,91,61,54,160,174,127,224,70,160,129,223,150,98,161,54,124,18,244,187,21,57,172,39,135,24,116,184,143,4 };
    byte_vec_t pk { 3,26,60,100,50,27,242,98,131,83,4,88,148,115,8,10,67,119,119,241,231,245,62,205,93,118,21,206,55,152,199,48,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 875 ") {
    byte_vec_t msg { 82,68,126,87 };
    byte_vec_t sig { 235,66,231,76,25,100,85,247,150,69,242,119,173,216,227,155,138,197,223,248,49,200,44,133,126,20,235,75,224,104,225,188,247,55,6,9,78,35,138,162,255,88,202,121,108,244,216,134,23,138,233,255,94,86,107,167,97,0,124,248,41,111,203,50 };
    byte_vec_t pk { 3,199,46,163,159,234,135,190,113,195,78,212,68,19,180,176,232,222,45,98,241,182,138,235,127,102,221,207,202,137,27,183,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 876 ") {
    byte_vec_t msg { 179,255,203,98 };
    byte_vec_t sig { 114,35,88,34,47,141,2,163,193,156,230,188,253,93,130,95,132,60,241,85,121,185,129,70,57,237,78,191,231,141,150,26,129,142,168,220,205,147,10,225,207,231,39,69,21,109,68,136,119,193,4,94,139,207,21,166,114,65,156,144,83,33,81,47 };
    byte_vec_t pk { 4,14,132,60,156,151,123,2,76,30,204,121,32,34,188,69,130,59,193,175,57,109,46,9,126,34,179,65,9,209,76,104,173,67,126,197,137,245,70,176,245,80,78,121,36,162,74,37,129,224,147,24,34,50,211,15,19,121,48,75,199,99,135,235,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 876 ") {
    byte_vec_t msg { 120,121,248,120 };
    byte_vec_t sig { 57,20,183,147,219,152,65,200,73,160,139,36,4,158,73,106,146,241,57,75,30,181,90,221,90,109,169,194,127,238,70,38,235,206,172,116,8,8,87,68,34,242,83,210,111,131,154,132,173,165,66,208,62,186,125,127,179,225,42,44,80,42,104,55 };
    byte_vec_t pk { 4,191,40,163,128,64,66,216,105,193,35,221,104,163,43,161,104,247,204,55,120,77,25,25,182,216,14,181,130,83,20,151,128,13,77,217,219,30,98,145,140,26,205,123,175,245,124,135,205,75,129,83,210,57,183,208,107,166,239,124,210,157,139,47,246 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 876 ") {
    byte_vec_t msg { 13,18,47,134 };
    byte_vec_t sig { 239,71,84,107,26,220,124,42,21,232,254,189,224,125,39,50,197,220,129,94,222,86,70,111,81,155,179,204,195,202,220,74,82,203,85,102,234,144,161,144,105,186,163,173,0,118,237,6,61,202,121,226,92,169,43,99,198,94,186,117,196,101,128,47 };
    byte_vec_t pk { 3,166,234,253,20,62,6,232,158,1,166,66,64,249,29,5,131,178,204,145,40,59,112,94,18,33,100,133,247,11,250,37,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 876 ") {
    byte_vec_t msg { 95,3,216,197 };
    byte_vec_t sig { 121,20,165,111,243,60,5,132,232,168,27,78,222,68,198,238,29,40,203,130,74,226,245,74,191,169,4,139,176,236,106,110,212,85,219,142,101,46,216,178,225,241,232,102,237,43,164,116,111,53,153,182,225,180,57,23,97,163,94,130,139,231,117,165 };
    byte_vec_t pk { 3,231,207,242,38,4,70,19,86,78,70,23,253,250,201,113,71,39,255,178,168,165,55,111,18,202,146,42,227,118,129,221,84 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 877 ") {
    byte_vec_t msg { 143,239,210,254 };
    byte_vec_t sig { 88,169,241,34,181,121,204,151,123,128,124,191,140,59,70,62,19,232,114,157,76,49,118,172,171,222,51,44,51,217,231,105,12,16,29,2,226,58,186,101,92,98,113,0,1,76,192,83,237,144,14,209,218,133,132,118,145,223,70,0,185,64,149,112 };
    byte_vec_t pk { 4,144,194,38,21,16,223,65,241,73,122,105,140,25,2,100,194,168,201,40,239,206,91,173,22,65,244,204,85,63,21,131,94,123,175,242,87,237,192,153,35,53,205,225,171,158,244,239,211,41,38,168,181,114,204,75,142,231,31,216,242,185,51,164,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 877 ") {
    byte_vec_t msg { 204,10,187,74 };
    byte_vec_t sig { 252,228,92,194,140,156,176,109,188,176,245,247,47,56,131,164,52,32,63,91,135,163,71,72,219,178,96,135,146,45,11,79,105,57,5,205,196,243,23,139,120,209,221,213,31,77,212,55,110,160,114,189,245,86,104,247,143,204,158,174,144,17,54,93 };
    byte_vec_t pk { 4,55,0,198,126,225,72,83,120,35,8,43,175,32,101,22,194,45,30,229,134,93,182,120,128,241,90,129,83,230,10,149,99,33,207,183,243,7,83,209,40,86,68,13,241,193,210,97,133,252,113,12,59,68,149,185,213,75,146,112,153,102,165,240,227 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 877 ") {
    byte_vec_t msg { 103,61,225,40 };
    byte_vec_t sig { 90,42,99,68,7,42,34,74,254,100,142,76,34,226,254,173,247,227,164,201,163,28,31,218,159,75,134,44,107,37,152,243,129,125,74,145,182,178,163,54,79,174,252,41,168,18,57,254,33,154,89,211,201,75,125,41,63,23,187,181,141,146,36,140 };
    byte_vec_t pk { 2,42,25,68,40,119,109,52,106,216,128,130,201,23,72,225,111,158,231,173,88,193,249,158,8,94,86,87,102,254,185,250,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 877 ") {
    byte_vec_t msg { 157,60,221,177 };
    byte_vec_t sig { 1,86,14,237,91,116,187,104,72,160,245,38,52,93,212,187,111,162,203,195,173,11,255,130,57,41,60,29,196,190,36,129,130,10,158,136,62,154,147,6,190,227,74,45,170,231,19,166,69,222,101,21,180,53,254,28,189,55,58,120,104,232,143,205 };
    byte_vec_t pk { 3,179,193,72,33,70,126,21,57,35,209,192,87,160,25,206,69,76,160,50,8,164,203,248,194,39,35,108,175,177,130,73,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 878 ") {
    byte_vec_t msg { 163,46,0,46 };
    byte_vec_t sig { 172,228,39,39,66,176,9,57,221,183,155,135,240,209,6,92,149,27,219,122,209,57,127,40,36,74,145,99,239,113,42,150,159,17,222,251,32,118,207,26,134,34,36,171,9,83,205,105,25,251,139,114,208,23,243,123,5,87,140,69,26,156,99,178 };
    byte_vec_t pk { 4,27,83,32,139,116,135,162,6,14,114,141,4,254,132,139,67,36,175,183,132,153,199,25,131,166,101,111,231,9,12,31,89,179,46,58,217,138,158,224,108,82,141,91,218,145,30,226,59,56,254,228,12,208,202,255,119,43,249,214,152,9,53,175,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 878 ") {
    byte_vec_t msg { 115,130,181,187 };
    byte_vec_t sig { 234,240,190,226,24,130,170,0,43,46,197,231,162,176,226,210,17,99,119,216,85,162,244,110,114,133,156,77,236,4,68,238,223,195,168,64,219,5,252,173,183,89,210,104,116,46,20,37,113,9,153,49,65,162,173,63,134,174,20,226,17,15,204,37 };
    byte_vec_t pk { 4,81,204,102,186,175,26,65,58,235,107,90,11,17,30,15,143,55,19,198,122,58,68,15,137,120,203,219,216,166,68,0,237,37,146,15,50,132,176,121,211,58,153,72,118,79,76,124,13,193,142,27,27,215,17,69,174,211,63,185,230,96,248,20,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 878 ") {
    byte_vec_t msg { 202,6,107,250 };
    byte_vec_t sig { 177,131,135,168,146,108,59,213,14,84,160,73,83,105,207,223,245,118,192,159,91,247,178,194,71,211,3,236,195,245,129,209,197,107,186,70,176,96,137,229,179,245,56,34,206,194,205,61,38,71,104,233,28,212,127,35,221,31,36,142,85,54,254,12 };
    byte_vec_t pk { 3,194,75,173,58,168,201,122,79,0,75,130,85,172,60,57,209,176,20,235,205,167,151,65,51,38,66,2,185,151,118,233,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 878 ") {
    byte_vec_t msg { 168,137,239,94 };
    byte_vec_t sig { 219,139,202,40,77,141,145,145,164,154,176,231,46,236,21,67,206,25,59,71,200,31,207,44,207,213,49,95,75,121,240,130,16,153,213,75,201,200,167,230,190,246,72,28,13,26,98,181,95,69,46,126,212,163,60,64,145,152,184,113,40,178,146,117 };
    byte_vec_t pk { 3,109,90,38,37,239,42,34,65,200,231,17,168,9,54,182,235,209,159,164,227,168,238,191,37,135,155,97,207,101,128,31,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 879 ") {
    byte_vec_t msg { 42,186,168,37 };
    byte_vec_t sig { 46,179,52,217,1,169,133,32,15,100,60,52,184,69,177,59,222,205,82,202,249,16,213,59,223,114,150,12,82,42,22,98,174,67,206,192,153,99,175,99,206,175,230,229,132,137,253,28,154,6,107,213,40,135,211,102,62,32,39,131,158,122,94,80 };
    byte_vec_t pk { 4,96,243,81,70,226,8,238,224,151,167,210,109,8,32,204,139,93,20,79,131,138,229,52,51,186,110,195,81,227,115,46,22,18,82,42,82,218,91,142,152,159,69,164,93,56,246,251,64,104,187,134,231,180,218,160,148,117,250,63,81,198,208,20,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 879 ") {
    byte_vec_t msg { 215,90,100,126 };
    byte_vec_t sig { 25,53,11,15,9,46,177,111,148,122,182,129,5,107,164,61,195,162,100,17,200,252,90,108,206,109,183,238,188,184,203,64,96,66,251,24,56,82,241,197,241,25,240,131,230,137,228,188,208,161,187,88,248,194,35,25,80,63,115,56,190,49,248,54 };
    byte_vec_t pk { 4,145,11,43,252,131,56,14,34,21,145,241,133,159,216,226,152,200,103,106,249,227,130,62,62,204,121,95,63,38,203,144,10,106,141,158,230,32,155,138,106,212,214,77,92,223,181,245,0,7,19,99,20,152,60,193,56,94,249,120,183,136,110,162,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 879 ") {
    byte_vec_t msg { 171,189,247,216 };
    byte_vec_t sig { 165,16,52,157,27,57,149,27,49,215,203,255,70,5,134,152,82,185,242,59,250,225,130,222,17,243,138,193,42,200,68,193,77,176,205,49,96,172,15,237,5,76,154,203,35,120,235,38,180,191,92,106,112,70,42,29,63,1,25,127,73,211,20,168 };
    byte_vec_t pk { 2,99,61,25,123,70,203,123,155,207,166,73,193,198,150,202,208,197,26,60,243,232,2,63,134,26,21,183,221,101,204,204,128 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 879 ") {
    byte_vec_t msg { 218,68,138,163 };
    byte_vec_t sig { 211,178,150,161,235,112,244,174,211,190,234,82,137,30,8,40,91,210,28,18,198,169,103,166,143,17,139,226,215,230,96,38,38,182,17,40,157,130,234,8,81,234,158,9,24,240,62,142,23,58,49,143,114,166,172,182,207,183,24,200,28,225,179,173 };
    byte_vec_t pk { 2,241,111,228,62,166,153,65,115,201,27,150,177,69,189,26,137,137,94,198,122,121,25,107,56,162,110,185,254,213,90,229,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 880 ") {
    byte_vec_t msg { 172,226,202,137 };
    byte_vec_t sig { 122,217,197,228,27,6,76,201,11,57,124,136,106,227,209,11,159,201,102,22,179,45,120,11,122,235,101,75,113,130,17,62,83,128,33,129,223,26,41,118,219,209,196,247,145,74,137,254,115,94,15,148,205,86,46,145,88,11,201,18,152,1,138,57 };
    byte_vec_t pk { 4,151,120,189,163,167,204,204,158,71,237,211,54,156,207,165,49,154,211,125,117,249,253,255,204,236,134,179,51,171,174,9,250,123,202,51,15,91,89,182,248,10,86,92,70,194,173,169,181,138,92,70,142,49,186,207,224,178,22,197,73,72,1,221,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 880 ") {
    byte_vec_t msg { 231,103,76,112 };
    byte_vec_t sig { 241,81,220,41,194,38,251,247,55,94,216,97,33,164,6,4,70,233,150,188,5,175,126,39,23,129,95,175,129,23,61,105,210,107,217,76,39,226,181,214,3,211,241,135,144,107,19,194,205,6,185,173,81,157,96,15,111,222,109,39,241,206,63,215 };
    byte_vec_t pk { 4,102,185,134,74,224,38,238,108,29,62,217,184,92,31,160,173,92,121,28,5,220,41,204,29,13,37,167,35,241,33,222,80,139,76,3,236,65,77,103,70,173,100,108,198,67,66,69,239,115,165,113,118,228,241,169,87,59,140,72,159,58,119,112,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 880 ") {
    byte_vec_t msg { 32,139,80,190 };
    byte_vec_t sig { 235,59,168,255,20,142,207,144,90,125,50,154,214,138,198,228,140,88,161,156,45,15,247,177,162,169,119,203,239,213,81,164,213,211,108,246,103,122,19,128,207,227,245,169,216,95,227,142,237,254,22,28,55,32,141,63,214,188,18,91,90,250,60,96 };
    byte_vec_t pk { 3,90,244,195,0,117,147,187,43,204,192,169,220,163,150,228,243,10,21,104,201,68,128,145,211,141,25,244,86,46,44,86,131 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 880 ") {
    byte_vec_t msg { 160,101,199,10 };
    byte_vec_t sig { 59,132,188,194,40,195,245,146,117,170,184,98,68,154,111,126,107,106,71,18,65,175,250,125,123,31,207,165,117,58,186,165,98,16,87,111,184,57,11,156,158,209,122,56,52,87,104,102,157,156,168,3,41,102,212,43,35,236,187,96,0,92,59,247 };
    byte_vec_t pk { 2,183,63,105,131,35,13,105,151,139,181,180,101,160,212,115,252,194,115,149,126,42,111,60,184,174,167,238,50,130,51,180,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 881 ") {
    byte_vec_t msg { 85,95,182,254 };
    byte_vec_t sig { 44,115,209,172,229,39,26,33,35,130,143,8,55,190,46,187,188,208,29,223,177,240,193,142,22,11,248,3,63,99,11,115,154,195,9,194,155,95,224,76,152,2,129,213,9,22,247,164,60,245,216,76,222,175,119,116,180,9,211,61,18,212,139,105 };
    byte_vec_t pk { 4,236,250,183,77,158,197,171,212,36,160,154,141,146,71,181,254,189,189,124,139,161,233,107,61,75,237,5,107,90,18,174,87,145,212,129,153,81,92,159,30,21,247,112,226,68,98,124,73,171,24,196,7,246,88,95,162,220,203,253,98,204,200,161,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 881 ") {
    byte_vec_t msg { 152,224,94,214 };
    byte_vec_t sig { 17,215,140,210,110,242,110,98,96,252,171,83,240,93,31,86,136,187,29,153,38,51,218,232,103,222,243,244,119,14,10,231,251,245,170,27,111,20,140,72,191,249,22,233,142,60,62,5,20,30,99,205,126,79,219,68,209,107,95,103,80,69,181,211 };
    byte_vec_t pk { 4,140,145,40,175,77,185,232,111,52,247,151,119,35,11,247,152,56,24,227,203,212,199,10,45,98,168,168,202,135,52,140,4,158,217,70,77,242,142,94,54,198,191,124,111,35,128,176,16,49,206,10,72,38,55,84,91,65,192,122,65,131,55,67,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 881 ") {
    byte_vec_t msg { 156,11,229,142 };
    byte_vec_t sig { 186,54,240,198,111,18,14,254,39,16,126,199,4,110,217,173,90,16,206,221,86,231,201,251,133,214,17,52,203,104,52,36,103,38,159,219,24,130,189,71,79,23,110,63,154,55,121,164,38,206,33,234,204,111,220,220,102,141,57,43,34,210,131,91 };
    byte_vec_t pk { 2,133,247,158,17,67,247,190,114,245,69,62,100,138,183,75,110,189,10,34,151,249,53,230,199,250,9,233,103,162,249,36,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 881 ") {
    byte_vec_t msg { 176,6,166,71 };
    byte_vec_t sig { 6,91,250,175,193,178,67,168,154,18,44,167,138,65,208,253,210,2,252,181,228,236,158,158,207,85,175,25,9,16,165,231,251,38,198,190,194,212,170,80,194,127,27,205,104,181,215,72,142,157,195,183,212,129,94,90,133,191,141,37,3,4,129,216 };
    byte_vec_t pk { 3,39,70,73,59,21,6,50,171,219,136,149,90,90,166,162,72,60,188,2,68,4,226,165,164,230,101,154,195,191,151,249,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 882 ") {
    byte_vec_t msg { 49,15,87,129 };
    byte_vec_t sig { 98,154,170,196,189,125,103,199,45,45,48,40,77,222,234,201,167,90,81,199,142,174,15,241,116,53,247,68,168,77,57,18,104,234,234,46,251,39,80,220,233,214,149,163,116,124,121,58,74,56,112,55,218,208,126,18,230,145,59,47,226,129,176,82 };
    byte_vec_t pk { 4,181,59,159,13,203,133,120,228,150,109,81,230,12,213,29,166,90,219,74,42,44,73,171,56,111,29,102,188,199,93,136,204,89,233,215,9,37,192,242,10,197,151,161,172,31,174,243,60,138,83,158,9,37,39,248,185,201,250,23,150,182,206,22,60 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 882 ") {
    byte_vec_t msg { 209,48,133,94 };
    byte_vec_t sig { 215,205,14,216,62,31,181,101,2,176,4,62,160,64,69,39,79,22,75,83,145,235,147,156,39,248,73,47,14,21,160,72,77,173,231,178,18,94,134,248,243,207,159,186,37,190,109,230,89,42,212,255,105,23,167,212,181,248,237,108,165,118,93,123 };
    byte_vec_t pk { 4,92,130,174,213,251,135,239,179,160,73,163,91,228,87,232,191,153,223,54,229,219,95,234,199,128,65,17,123,93,235,249,183,221,27,137,118,212,15,10,155,94,182,59,246,26,111,39,249,162,255,110,96,122,178,152,119,145,113,151,143,106,76,131,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 882 ") {
    byte_vec_t msg { 232,113,134,215 };
    byte_vec_t sig { 161,214,150,68,140,151,83,255,195,212,7,168,69,213,127,137,156,235,34,51,172,74,63,5,230,237,86,148,127,216,154,242,79,15,129,72,78,116,96,238,14,35,34,56,168,95,131,220,173,155,68,160,170,163,97,168,76,95,244,234,21,26,195,49 };
    byte_vec_t pk { 2,163,243,55,60,253,80,30,80,70,88,129,69,82,66,149,42,52,200,65,17,145,228,2,252,165,187,23,254,138,63,234,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 882 ") {
    byte_vec_t msg { 41,13,104,110 };
    byte_vec_t sig { 186,118,219,199,203,199,153,15,51,22,35,224,70,198,191,255,131,194,115,18,209,36,137,78,54,120,174,75,137,40,78,42,29,155,255,84,29,111,254,196,184,178,25,138,75,3,32,216,232,167,178,36,223,79,27,94,91,52,76,178,136,78,139,227 };
    byte_vec_t pk { 3,204,237,75,203,251,176,142,39,56,2,143,111,58,14,150,131,185,241,132,119,25,196,20,101,238,192,48,32,7,88,129,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 883 ") {
    byte_vec_t msg { 68,254,51,4 };
    byte_vec_t sig { 200,186,64,186,53,241,131,73,125,139,124,77,162,186,71,207,238,105,81,118,253,64,174,73,66,184,64,77,196,138,207,102,231,186,230,117,144,97,73,242,118,213,148,166,151,252,95,20,66,37,131,129,139,69,237,50,185,164,206,111,245,35,185,125 };
    byte_vec_t pk { 4,226,159,33,63,64,10,121,193,36,43,87,92,237,88,51,64,186,48,72,190,39,200,62,225,98,84,206,57,79,125,73,145,22,31,58,85,10,123,131,125,37,166,249,160,64,145,21,100,33,95,114,109,66,217,202,240,121,47,180,255,163,141,161,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 883 ") {
    byte_vec_t msg { 145,35,180,229 };
    byte_vec_t sig { 130,245,85,16,10,51,13,232,135,205,72,111,150,42,68,139,233,14,228,66,40,30,184,221,88,90,156,10,183,97,101,213,100,120,142,131,195,49,9,7,19,24,93,131,24,253,174,145,58,74,22,27,109,78,107,95,170,237,74,68,246,55,107,221 };
    byte_vec_t pk { 4,45,208,176,101,141,114,232,85,21,235,49,124,189,28,249,225,249,48,67,64,159,201,117,66,126,152,208,173,77,130,233,69,223,43,187,77,116,12,145,4,188,152,12,36,75,22,18,52,18,30,10,252,38,152,165,239,248,188,101,99,38,92,159,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 883 ") {
    byte_vec_t msg { 22,161,98,62 };
    byte_vec_t sig { 93,96,19,75,139,227,14,158,87,12,211,228,130,179,109,223,170,232,228,237,229,187,217,156,30,200,190,34,2,215,76,237,196,192,9,165,175,127,11,130,24,214,29,157,224,87,246,100,90,183,250,141,165,60,231,236,111,186,178,247,52,117,136,77 };
    byte_vec_t pk { 3,67,203,207,161,182,16,38,93,205,22,226,130,230,10,42,64,17,170,134,123,199,218,123,62,176,167,155,98,206,91,243,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 883 ") {
    byte_vec_t msg { 169,145,27,235 };
    byte_vec_t sig { 208,230,178,242,149,5,41,142,36,88,146,173,110,98,213,207,217,92,32,34,66,176,58,0,212,134,26,174,53,94,211,121,202,48,23,28,103,233,87,139,72,20,58,223,43,170,75,61,16,118,175,79,84,241,225,230,123,12,197,60,153,150,143,185 };
    byte_vec_t pk { 3,128,210,207,146,243,177,64,79,21,206,182,81,249,63,44,186,215,41,221,153,179,29,123,115,67,132,90,24,101,149,11,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 884 ") {
    byte_vec_t msg { 140,66,84,164 };
    byte_vec_t sig { 65,65,100,62,196,168,209,212,136,36,121,85,116,138,48,163,250,133,110,254,74,12,119,5,221,36,101,217,242,219,211,214,180,206,248,39,120,117,135,115,209,114,121,147,219,17,121,223,169,7,218,172,218,200,150,181,183,22,118,57,185,158,253,39 };
    byte_vec_t pk { 4,97,244,244,120,133,203,135,220,224,124,55,100,147,248,224,143,216,213,82,105,43,154,172,22,88,94,225,215,247,104,222,144,152,55,18,157,132,246,70,67,142,98,93,97,153,83,46,170,189,10,109,64,136,174,2,71,255,196,126,61,86,216,52,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 884 ") {
    byte_vec_t msg { 81,17,229,100 };
    byte_vec_t sig { 95,110,92,202,254,210,120,203,7,176,25,113,75,104,73,10,17,239,5,229,121,43,209,240,1,65,248,93,199,177,6,55,246,188,226,79,174,237,207,79,142,225,98,163,248,228,1,214,53,32,180,138,196,10,81,148,224,192,25,134,190,98,101,142 };
    byte_vec_t pk { 4,49,80,148,35,248,50,25,41,110,100,130,76,47,202,87,231,131,228,250,49,54,28,204,70,183,175,70,90,119,15,233,51,119,87,36,111,187,120,33,155,139,54,127,102,195,220,22,220,47,61,53,124,159,92,188,4,203,222,242,73,194,6,241,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 884 ") {
    byte_vec_t msg { 20,47,21,87 };
    byte_vec_t sig { 134,115,123,151,87,147,224,62,65,248,208,89,84,31,14,233,181,241,238,140,150,122,99,33,200,2,51,200,247,31,144,230,239,169,230,75,110,140,156,185,183,171,79,133,55,242,175,249,254,161,47,66,199,205,93,253,46,80,143,248,199,40,3,37 };
    byte_vec_t pk { 2,250,103,88,236,226,192,48,119,106,64,182,91,52,97,146,254,233,232,148,225,181,209,6,227,226,21,179,100,157,236,15,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 884 ") {
    byte_vec_t msg { 215,64,27,111 };
    byte_vec_t sig { 221,127,186,20,130,106,152,108,126,87,236,81,159,28,65,139,246,243,111,66,167,231,9,198,147,97,187,245,44,249,167,68,245,74,181,19,196,83,47,236,153,248,0,87,211,110,238,37,153,210,220,2,211,229,5,172,168,107,249,148,54,101,247,230 };
    byte_vec_t pk { 2,156,12,242,82,175,27,222,124,49,229,177,43,53,106,164,209,72,36,45,106,15,167,208,125,16,59,232,246,67,235,113,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 885 ") {
    byte_vec_t msg { 252,69,92,137 };
    byte_vec_t sig { 206,24,228,198,247,202,71,204,13,3,1,93,88,213,12,29,124,62,39,219,139,48,72,195,246,214,44,210,138,55,6,118,71,147,128,194,35,214,37,207,86,123,63,236,233,166,167,88,67,203,156,221,113,21,240,134,202,109,63,156,22,89,110,70 };
    byte_vec_t pk { 4,92,191,232,177,31,227,112,46,161,42,216,99,105,55,197,208,19,196,249,62,79,178,26,209,41,125,52,146,135,195,254,245,14,25,156,24,229,221,73,60,94,149,75,196,50,195,89,30,214,47,220,152,197,131,248,110,231,43,2,104,209,227,248,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 885 ") {
    byte_vec_t msg { 254,219,223,209 };
    byte_vec_t sig { 8,106,164,74,146,134,109,93,10,66,50,199,102,113,255,25,143,3,186,66,22,177,67,252,111,34,164,197,121,234,51,63,115,117,87,162,170,211,172,176,138,43,170,91,145,244,50,123,57,117,168,34,120,188,226,166,37,96,248,165,167,209,239,168 };
    byte_vec_t pk { 4,177,67,228,82,0,94,222,22,178,17,126,255,207,42,196,146,18,27,124,9,99,27,246,180,138,115,179,140,101,68,232,97,190,185,161,108,72,77,131,124,38,73,102,140,24,238,9,66,135,103,100,199,157,203,6,248,188,36,23,74,98,86,115,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 885 ") {
    byte_vec_t msg { 81,34,11,118 };
    byte_vec_t sig { 198,114,110,110,77,218,116,153,18,220,212,150,147,240,43,90,67,106,239,243,111,69,147,34,171,127,64,14,65,83,227,227,229,174,172,169,178,180,180,104,27,189,86,42,193,160,115,188,237,224,27,5,77,25,237,190,77,210,61,6,67,234,54,168 };
    byte_vec_t pk { 2,72,168,151,208,140,193,72,241,189,153,191,128,230,146,195,220,47,198,224,110,116,1,145,246,245,33,249,234,27,242,200,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 885 ") {
    byte_vec_t msg { 114,45,67,232 };
    byte_vec_t sig { 215,6,108,26,83,248,120,61,123,130,242,0,21,183,82,197,173,232,76,175,253,26,42,230,152,43,26,98,233,7,231,38,74,79,137,84,126,7,92,158,143,177,249,130,145,121,55,185,167,43,34,78,138,19,73,190,189,56,176,184,114,105,96,141 };
    byte_vec_t pk { 3,220,130,51,185,100,158,237,69,91,25,115,114,211,1,135,126,46,48,185,142,123,71,189,143,245,104,48,50,181,82,106,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 886 ") {
    byte_vec_t msg { 8,168,163,158 };
    byte_vec_t sig { 241,222,118,102,50,75,138,237,210,65,176,50,204,37,234,121,175,12,174,249,236,84,35,64,136,187,129,139,105,223,211,236,236,108,136,30,47,233,68,167,232,154,64,255,207,26,145,41,227,145,153,221,48,11,126,62,28,148,134,186,245,104,108,214 };
    byte_vec_t pk { 4,129,180,95,144,27,86,61,115,251,55,14,180,186,69,173,52,97,57,193,52,51,209,104,240,202,126,19,252,214,2,112,84,240,202,71,102,73,186,108,71,226,100,162,227,5,250,62,33,107,54,151,43,169,47,0,222,108,245,7,111,25,104,218,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 886 ") {
    byte_vec_t msg { 205,234,41,37 };
    byte_vec_t sig { 72,54,97,158,65,192,8,167,40,254,236,19,35,119,84,236,223,215,99,46,157,89,91,11,46,241,56,131,218,42,141,23,156,74,74,231,193,26,225,198,94,75,211,179,65,176,200,143,0,48,17,121,9,72,206,39,14,117,19,161,6,127,248,233 };
    byte_vec_t pk { 4,32,84,108,70,225,169,213,104,241,250,52,123,14,218,2,69,122,114,54,166,142,17,213,99,133,217,246,211,41,5,39,98,255,70,81,189,122,92,120,46,102,30,223,74,207,34,231,255,159,148,40,199,15,40,160,172,80,175,166,222,35,237,249,100 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 886 ") {
    byte_vec_t msg { 7,223,111,79 };
    byte_vec_t sig { 48,2,137,184,0,69,205,209,183,126,143,26,11,246,107,34,239,114,148,17,115,246,26,199,187,23,8,97,19,253,174,242,151,242,20,22,46,54,222,179,4,20,106,39,86,174,112,206,116,89,249,192,33,231,135,35,198,56,248,137,215,228,19,198 };
    byte_vec_t pk { 2,99,217,85,250,31,131,112,105,75,191,148,128,251,136,17,172,31,22,235,60,38,100,139,214,223,23,220,107,22,68,176,168 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 886 ") {
    byte_vec_t msg { 190,105,210,95 };
    byte_vec_t sig { 239,43,27,59,34,65,19,143,238,96,55,93,31,70,152,41,152,184,231,64,32,127,208,40,74,76,141,204,95,254,82,109,135,84,78,42,17,31,97,209,78,23,123,3,45,63,33,18,199,203,237,141,253,67,29,113,46,142,130,172,162,40,49,170 };
    byte_vec_t pk { 3,190,147,238,233,225,88,40,87,26,66,154,16,32,202,211,43,8,24,172,203,92,206,219,37,4,193,28,209,157,88,91,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 887 ") {
    byte_vec_t msg { 78,244,6,138 };
    byte_vec_t sig { 191,7,2,16,186,98,217,172,162,34,15,253,231,33,241,0,166,232,19,41,215,13,3,146,75,197,221,106,95,123,22,47,20,254,223,253,138,218,122,201,150,160,183,29,247,82,170,222,10,27,249,68,141,58,67,42,54,59,222,204,25,37,28,102 };
    byte_vec_t pk { 4,203,202,213,206,27,97,33,236,186,230,41,23,238,118,143,234,237,134,207,197,168,141,148,45,10,68,0,187,96,247,123,134,104,11,158,74,243,62,39,57,121,160,200,198,148,139,86,76,158,41,43,161,200,58,216,147,69,128,210,184,222,243,27,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 887 ") {
    byte_vec_t msg { 132,153,139,179 };
    byte_vec_t sig { 188,228,205,254,105,8,82,111,68,164,174,135,79,22,165,243,14,18,149,21,93,226,200,175,16,39,143,231,98,94,186,234,125,114,24,14,240,219,145,226,239,58,3,111,200,13,23,194,110,115,149,188,24,129,112,80,211,108,181,226,254,97,242,255 };
    byte_vec_t pk { 4,225,13,169,10,8,104,94,6,77,86,152,140,142,234,56,150,37,149,86,78,77,26,16,88,179,117,209,231,31,242,150,60,67,13,101,102,233,246,153,175,83,23,17,220,127,85,56,16,114,207,116,92,124,81,199,88,57,51,29,158,251,135,12,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 887 ") {
    byte_vec_t msg { 51,231,146,99 };
    byte_vec_t sig { 191,134,68,5,7,26,159,186,0,201,94,117,31,184,44,20,9,82,221,137,116,105,217,185,149,91,239,149,86,31,221,164,248,64,73,190,217,65,41,127,185,230,109,98,70,136,19,241,241,132,156,28,3,144,84,136,160,134,244,98,189,141,234,149 };
    byte_vec_t pk { 2,52,110,220,143,40,238,213,63,122,208,174,107,88,201,222,30,155,157,212,115,120,233,0,180,80,21,3,42,193,235,99,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 887 ") {
    byte_vec_t msg { 172,63,89,229 };
    byte_vec_t sig { 51,132,25,16,72,34,108,37,0,146,112,162,153,10,254,197,11,207,90,249,200,224,104,255,153,17,158,45,244,140,48,166,243,153,42,101,191,110,218,57,92,84,138,174,210,239,170,200,190,65,10,59,131,179,156,106,255,148,19,172,103,146,226,239 };
    byte_vec_t pk { 2,240,194,83,234,235,197,236,119,110,68,76,123,249,60,243,247,34,146,10,113,76,134,127,19,158,234,102,159,229,79,91,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 888 ") {
    byte_vec_t msg { 248,65,232,108 };
    byte_vec_t sig { 80,112,227,112,101,176,230,105,195,139,183,187,7,181,73,239,22,180,202,224,69,182,96,101,116,145,219,145,177,48,210,78,168,14,36,201,241,91,172,76,182,4,118,184,207,101,73,243,81,39,200,33,64,254,230,228,160,78,176,41,160,188,125,48 };
    byte_vec_t pk { 4,44,194,189,66,116,67,26,75,161,175,113,153,76,75,127,174,117,57,41,145,186,139,71,144,77,57,242,44,81,203,124,171,213,182,176,111,31,104,74,3,73,75,62,135,99,39,227,233,92,247,38,7,121,144,86,164,121,149,202,110,127,64,6,214 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 888 ") {
    byte_vec_t msg { 242,51,255,183 };
    byte_vec_t sig { 181,77,12,249,96,229,135,150,189,135,177,112,192,76,25,15,163,192,238,81,52,31,179,101,144,73,44,231,246,182,234,233,198,217,109,41,103,32,46,86,68,66,135,158,15,117,222,191,20,193,145,0,203,112,36,203,136,76,62,222,90,108,3,60 };
    byte_vec_t pk { 4,66,21,93,121,155,152,144,211,156,110,87,110,82,193,47,143,60,81,140,67,104,51,47,97,53,29,3,232,122,162,153,48,105,250,95,208,208,218,164,80,164,129,197,93,242,97,55,42,25,51,206,63,118,191,250,230,34,38,157,119,104,161,4,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 888 ") {
    byte_vec_t msg { 185,104,157,84 };
    byte_vec_t sig { 154,106,31,7,96,158,66,13,31,79,214,143,91,113,13,234,97,219,34,227,2,122,242,28,30,34,79,197,149,190,54,254,86,196,227,199,37,250,130,142,180,98,30,130,10,90,142,170,66,180,151,215,169,213,56,149,99,227,252,169,39,159,133,50 };
    byte_vec_t pk { 3,37,189,103,75,6,224,162,159,196,41,192,125,230,247,74,126,223,249,153,237,109,51,88,117,209,141,255,185,99,171,31,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 888 ") {
    byte_vec_t msg { 176,180,204,193 };
    byte_vec_t sig { 136,211,182,99,139,141,110,223,200,213,177,5,171,102,12,164,204,138,209,233,22,18,103,28,251,62,57,76,65,121,114,15,156,173,97,173,27,59,46,191,162,42,104,97,150,18,100,242,66,229,196,8,166,149,118,217,202,30,139,106,150,201,230,51 };
    byte_vec_t pk { 2,56,93,138,157,0,27,24,149,58,210,246,6,86,4,133,124,86,185,90,235,41,217,137,212,28,130,218,230,73,99,42,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 889 ") {
    byte_vec_t msg { 255,86,165,205 };
    byte_vec_t sig { 192,51,198,213,157,210,165,88,205,248,10,73,167,234,75,85,145,246,56,57,0,20,71,226,36,185,84,202,229,46,44,237,15,4,93,103,53,181,106,247,141,103,231,154,210,145,128,128,56,235,84,21,230,190,216,193,82,55,6,150,25,175,11,125 };
    byte_vec_t pk { 4,44,192,108,135,229,1,162,146,72,66,93,21,3,111,88,179,177,103,196,189,65,210,215,1,133,201,65,162,4,200,106,16,134,211,92,169,96,217,219,144,41,68,33,115,231,101,235,23,38,134,236,217,122,10,53,112,154,170,64,1,144,109,206,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 889 ") {
    byte_vec_t msg { 213,231,150,138 };
    byte_vec_t sig { 102,209,249,175,26,155,184,129,216,64,185,18,59,247,157,60,139,42,77,206,225,77,105,17,161,112,183,169,96,72,56,70,83,35,2,201,106,130,243,156,202,243,234,199,183,223,113,183,55,81,105,81,17,43,207,118,243,65,62,83,172,127,137,155 };
    byte_vec_t pk { 4,137,105,97,112,239,40,228,65,130,234,168,80,95,101,106,11,186,90,118,17,184,195,108,119,157,121,33,75,45,14,31,35,80,221,96,103,221,130,220,48,120,190,162,4,22,189,131,233,35,172,83,204,221,144,3,82,82,115,188,43,200,38,117,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 889 ") {
    byte_vec_t msg { 11,170,13,42 };
    byte_vec_t sig { 230,199,254,141,197,92,91,34,221,5,229,155,126,117,80,56,166,184,83,162,172,114,39,68,94,237,96,177,177,111,228,61,144,45,86,245,112,249,72,99,185,33,41,250,93,83,117,63,73,106,48,154,14,222,161,250,175,202,3,144,217,176,110,189 };
    byte_vec_t pk { 2,117,93,33,183,147,113,146,58,120,149,97,135,70,130,41,147,192,176,205,103,206,4,63,247,76,70,117,219,97,182,55,196 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 889 ") {
    byte_vec_t msg { 86,143,250,85 };
    byte_vec_t sig { 45,248,158,147,154,239,51,208,238,102,104,233,187,15,48,248,163,144,249,61,19,115,161,160,186,12,238,203,74,172,190,125,252,136,205,220,108,191,33,216,99,9,198,116,184,182,176,81,235,111,28,205,100,139,125,136,40,26,51,27,90,93,146,108 };
    byte_vec_t pk { 2,94,62,246,220,166,31,42,222,162,9,199,37,41,88,155,233,242,248,64,88,224,246,236,78,61,218,158,215,35,8,86,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 890 ") {
    byte_vec_t msg { 111,238,237,200 };
    byte_vec_t sig { 17,172,182,107,159,249,84,201,233,14,28,210,30,85,116,174,235,151,77,232,193,137,28,101,225,27,237,134,178,43,147,16,175,3,39,20,149,235,163,57,223,31,67,156,73,131,206,122,165,85,85,247,255,194,122,28,135,44,198,163,131,184,120,15 };
    byte_vec_t pk { 4,240,106,202,40,211,75,238,51,164,192,246,6,39,68,205,0,57,255,104,69,0,250,199,178,118,125,191,171,230,75,40,2,178,9,219,8,231,107,137,14,37,168,119,195,246,72,134,140,43,170,131,94,214,54,1,250,34,146,6,150,245,104,171,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 890 ") {
    byte_vec_t msg { 92,240,198,94 };
    byte_vec_t sig { 103,246,211,105,226,240,16,183,240,16,151,196,57,237,233,213,66,99,79,53,138,181,202,202,228,5,225,1,242,218,187,166,228,255,57,213,27,85,240,128,33,26,130,52,48,196,180,196,113,72,160,250,8,252,197,121,40,246,38,187,152,178,195,244 };
    byte_vec_t pk { 4,196,209,116,228,193,25,156,198,5,247,31,14,157,209,113,145,157,180,213,19,134,17,84,203,161,34,172,121,104,225,181,210,190,7,213,48,47,79,90,36,43,203,52,33,107,123,2,53,106,214,212,27,139,141,199,62,49,13,160,148,171,107,52,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 890 ") {
    byte_vec_t msg { 210,173,168,178 };
    byte_vec_t sig { 172,95,179,98,83,175,207,173,213,127,189,74,106,103,133,90,103,118,181,221,202,117,188,228,199,65,91,225,158,231,219,50,197,121,90,114,168,14,235,88,240,241,145,147,17,110,168,209,196,159,125,15,164,233,127,58,11,152,169,251,195,129,0,99 };
    byte_vec_t pk { 3,248,192,220,136,241,235,244,134,125,156,13,23,143,219,239,180,7,213,196,8,151,156,101,156,56,94,25,247,78,60,120,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 890 ") {
    byte_vec_t msg { 101,178,110,251 };
    byte_vec_t sig { 109,47,5,196,252,123,198,1,46,44,152,21,164,84,199,237,53,66,216,148,110,146,233,45,78,197,68,107,162,182,95,94,111,157,157,66,198,242,92,60,80,48,41,22,37,198,108,31,30,72,197,236,228,24,28,55,46,237,155,2,82,126,164,234 };
    byte_vec_t pk { 3,196,19,88,73,23,168,110,9,211,91,90,88,30,177,255,101,39,223,249,77,233,58,164,85,144,89,130,28,65,123,117,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 891 ") {
    byte_vec_t msg { 198,245,210,46 };
    byte_vec_t sig { 198,243,72,43,129,19,126,227,91,243,24,3,158,215,248,52,171,163,68,38,1,210,40,158,73,105,231,165,231,226,21,234,116,184,57,97,7,90,124,128,201,7,49,207,198,40,136,225,151,153,97,43,99,28,215,207,200,135,48,69,60,174,248,29 };
    byte_vec_t pk { 4,241,222,175,160,115,50,130,128,53,253,190,69,73,228,188,115,96,108,122,1,90,202,164,143,47,143,38,205,132,188,17,170,146,177,16,239,89,209,237,18,106,46,118,147,59,135,41,164,190,116,89,196,94,247,210,169,16,183,132,147,156,222,70,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 891 ") {
    byte_vec_t msg { 162,255,96,58 };
    byte_vec_t sig { 43,50,37,149,7,238,180,106,122,128,56,228,240,136,5,150,141,160,82,67,189,34,13,162,148,197,217,245,173,170,224,23,226,193,231,116,33,122,90,229,22,222,170,251,68,193,140,162,167,46,209,2,106,152,5,243,183,103,95,76,154,179,234,16 };
    byte_vec_t pk { 4,237,218,115,101,75,215,248,206,132,151,225,54,114,95,139,227,60,211,36,188,211,135,222,1,107,179,224,158,18,38,102,121,186,157,111,56,194,76,204,66,146,238,51,133,2,166,174,202,112,154,220,158,198,101,188,124,41,60,77,16,13,25,156,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 891 ") {
    byte_vec_t msg { 241,119,116,32 };
    byte_vec_t sig { 135,109,214,97,96,231,167,182,89,20,156,44,178,174,245,105,242,153,135,149,53,239,218,131,98,80,108,163,42,98,225,54,80,36,130,37,225,40,36,75,131,193,58,163,101,64,67,194,234,42,139,62,68,217,185,230,223,160,114,254,197,106,221,94 };
    byte_vec_t pk { 3,42,171,246,46,156,94,29,108,139,168,128,162,42,126,143,104,212,210,113,155,131,189,121,248,114,77,46,91,114,101,205,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 891 ") {
    byte_vec_t msg { 214,14,102,2 };
    byte_vec_t sig { 105,168,23,11,97,182,72,202,27,129,112,53,67,122,57,106,38,117,208,169,10,195,30,195,149,255,175,204,32,117,252,111,61,71,30,245,84,88,47,131,27,76,91,193,192,197,224,2,178,101,219,233,213,166,87,56,52,233,152,145,173,49,181,36 };
    byte_vec_t pk { 3,55,168,74,113,34,11,122,200,84,149,134,88,134,148,240,162,157,79,115,30,52,189,97,6,129,133,228,220,227,195,234,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 892 ") {
    byte_vec_t msg { 16,229,59,158 };
    byte_vec_t sig { 88,23,208,140,36,110,194,66,243,41,116,110,54,77,238,209,220,190,167,1,215,186,75,52,65,29,119,242,50,153,86,109,109,113,210,92,12,137,44,25,2,211,117,85,75,170,178,188,97,156,154,53,3,176,250,84,93,39,76,251,10,185,205,165 };
    byte_vec_t pk { 4,179,48,34,123,167,77,53,5,106,121,44,193,99,136,53,111,21,216,134,99,185,190,133,132,185,135,72,245,123,155,46,242,60,151,157,237,168,74,194,129,118,79,46,184,135,125,42,172,111,130,199,75,97,154,250,141,122,28,135,59,24,30,93,85 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 892 ") {
    byte_vec_t msg { 59,206,54,255 };
    byte_vec_t sig { 99,163,170,162,100,51,177,78,148,232,114,81,53,30,48,3,128,14,41,67,120,16,47,143,156,234,123,36,192,213,73,169,129,10,19,241,59,80,112,28,95,175,166,59,182,192,76,100,128,90,93,135,65,6,236,78,18,206,75,9,55,147,250,36 };
    byte_vec_t pk { 4,232,205,60,247,101,100,31,9,240,209,110,214,223,54,157,13,159,12,200,111,248,159,55,115,159,219,90,2,189,221,231,104,149,146,73,253,235,201,54,42,88,115,14,165,213,72,240,189,24,206,238,65,0,62,140,11,254,102,218,74,169,207,166,229 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 892 ") {
    byte_vec_t msg { 187,248,87,18 };
    byte_vec_t sig { 88,155,122,99,10,120,35,179,189,10,50,26,81,248,86,58,159,238,231,1,223,25,112,69,254,220,198,57,207,74,107,6,174,7,117,30,209,53,53,219,254,39,244,20,181,208,187,150,100,184,202,58,207,79,161,166,189,40,98,39,170,77,252,82 };
    byte_vec_t pk { 3,202,31,187,118,200,25,23,213,7,1,125,172,160,117,194,197,33,181,12,127,236,61,187,148,171,36,182,205,62,110,191,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 892 ") {
    byte_vec_t msg { 189,237,57,74 };
    byte_vec_t sig { 130,69,233,28,41,11,64,122,11,66,109,95,5,135,173,207,57,237,37,192,99,243,205,6,64,144,20,190,20,242,25,119,58,14,53,44,81,251,57,27,44,249,173,45,116,141,209,58,171,218,24,193,68,40,43,64,116,91,172,44,52,84,200,20 };
    byte_vec_t pk { 2,75,206,218,152,52,110,84,163,127,230,56,37,162,236,139,214,138,139,73,142,97,191,243,12,236,201,4,229,23,118,11,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 893 ") {
    byte_vec_t msg { 128,76,139,170 };
    byte_vec_t sig { 42,232,137,211,2,238,235,113,185,222,251,73,245,178,162,61,170,82,68,62,113,26,56,7,43,161,100,50,64,221,79,15,18,84,99,168,126,155,5,255,95,57,225,64,71,176,224,179,123,192,229,64,177,113,155,59,204,10,165,198,52,85,229,122 };
    byte_vec_t pk { 4,109,150,134,255,150,6,6,57,235,173,25,116,116,49,234,77,116,141,208,231,245,73,124,67,114,141,189,31,24,48,71,116,178,163,107,169,82,34,29,152,247,9,114,131,101,73,93,41,162,246,251,210,103,145,72,252,95,225,201,22,187,33,226,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 893 ") {
    byte_vec_t msg { 226,4,112,39 };
    byte_vec_t sig { 95,74,119,118,128,188,6,75,211,24,55,106,49,192,96,116,251,217,203,140,58,63,161,191,6,146,88,30,10,115,166,112,121,218,45,245,27,196,50,65,65,223,129,48,171,74,25,221,186,86,171,16,2,199,31,232,11,155,10,37,18,163,220,137 };
    byte_vec_t pk { 4,236,110,96,169,174,119,186,102,24,3,104,194,122,46,167,100,162,217,2,145,18,151,199,225,84,160,236,89,146,67,42,17,162,145,217,142,85,232,83,57,216,20,26,235,85,125,216,239,215,118,215,114,110,111,112,69,100,144,115,59,128,117,240,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 893 ") {
    byte_vec_t msg { 212,52,251,204 };
    byte_vec_t sig { 103,96,96,239,202,70,170,185,233,234,19,51,70,138,28,148,226,26,232,13,220,232,109,116,180,48,118,168,206,203,246,66,183,141,183,147,110,236,242,69,255,72,77,39,236,169,161,123,234,246,39,239,21,180,230,14,112,86,22,114,89,33,147,119 };
    byte_vec_t pk { 3,133,5,49,186,147,16,159,15,230,7,215,113,61,104,18,200,117,39,134,92,161,175,11,213,106,23,230,174,211,99,42,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 893 ") {
    byte_vec_t msg { 202,73,120,80 };
    byte_vec_t sig { 190,148,214,252,11,190,105,133,217,231,182,238,94,77,44,87,4,70,137,165,205,236,195,52,112,81,24,125,209,111,31,39,161,223,105,132,191,13,75,43,127,168,225,250,143,129,37,208,74,63,126,68,127,86,192,76,77,63,101,172,164,137,87,121 };
    byte_vec_t pk { 2,155,213,63,174,169,96,115,11,130,0,252,166,230,71,103,38,240,148,124,106,63,211,0,1,94,49,13,192,216,216,29,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 894 ") {
    byte_vec_t msg { 80,113,146,230 };
    byte_vec_t sig { 251,165,221,26,243,218,83,233,198,0,202,8,34,35,181,105,145,73,39,243,37,98,43,67,33,71,68,223,206,27,66,176,237,183,58,146,68,83,95,145,248,118,216,230,10,128,0,242,91,7,100,203,47,43,34,73,93,174,177,217,18,157,185,35 };
    byte_vec_t pk { 4,57,228,191,31,216,58,166,139,10,198,142,46,65,185,237,28,12,146,197,229,47,61,117,85,153,41,249,79,8,108,208,131,207,148,35,53,169,234,85,64,204,68,107,27,113,104,90,242,8,12,162,120,182,124,250,68,26,54,73,51,40,42,50,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 894 ") {
    byte_vec_t msg { 25,60,93,210 };
    byte_vec_t sig { 212,237,195,81,180,190,25,13,129,157,186,228,208,238,133,248,55,86,97,16,42,214,41,128,107,36,193,108,251,252,238,224,40,234,116,85,88,237,196,206,53,75,72,111,253,103,140,218,169,1,60,181,191,195,195,144,9,115,226,95,145,40,130,186 };
    byte_vec_t pk { 4,215,164,142,112,106,192,28,60,114,38,211,214,13,229,242,1,45,5,229,242,18,41,67,50,46,135,138,37,218,177,66,11,176,66,171,239,158,104,27,219,194,135,185,64,233,202,23,150,218,250,114,99,92,102,165,55,98,14,53,55,94,4,143,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 894 ") {
    byte_vec_t msg { 229,220,88,163 };
    byte_vec_t sig { 222,33,29,155,21,78,185,131,246,121,202,20,75,132,222,116,124,137,253,87,35,131,103,210,63,80,223,182,58,146,22,90,70,152,73,63,130,156,79,168,219,222,26,126,56,193,189,213,128,248,1,248,15,47,116,45,156,217,92,105,95,243,225,69 };
    byte_vec_t pk { 2,43,56,128,34,154,159,185,120,32,53,53,101,225,43,75,82,8,73,185,66,65,29,188,140,52,125,45,63,74,104,15,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 894 ") {
    byte_vec_t msg { 230,123,100,207 };
    byte_vec_t sig { 186,25,47,171,210,85,236,15,128,108,202,204,62,169,255,90,133,76,81,254,190,125,45,74,96,113,79,84,202,48,113,167,222,121,225,124,148,68,241,245,122,197,75,225,64,133,95,21,113,14,247,220,211,243,106,91,19,157,106,187,229,157,169,159 };
    byte_vec_t pk { 2,177,18,163,81,26,152,111,55,160,170,5,192,106,174,205,137,1,222,171,182,254,186,200,74,48,148,100,106,43,166,110,48 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 895 ") {
    byte_vec_t msg { 170,114,80,241 };
    byte_vec_t sig { 168,214,176,98,80,36,66,101,77,7,142,118,49,153,50,125,222,108,139,251,163,83,17,117,240,94,247,35,139,218,205,71,125,92,3,0,245,47,156,97,247,92,238,97,127,126,139,93,71,169,225,129,230,170,201,194,150,228,197,237,203,191,35,32 };
    byte_vec_t pk { 4,161,145,157,111,95,29,27,82,131,84,141,57,160,147,234,56,2,217,247,163,30,242,197,42,36,244,206,48,42,89,83,1,194,73,88,177,129,28,194,110,41,226,154,195,26,24,112,112,91,247,97,68,250,13,177,12,135,34,181,222,90,82,50,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 895 ") {
    byte_vec_t msg { 139,76,14,144 };
    byte_vec_t sig { 104,128,103,192,30,237,131,230,120,139,101,89,93,57,104,139,146,41,244,188,168,38,255,21,203,109,27,10,46,65,5,90,99,28,186,1,179,46,53,97,120,31,195,33,13,195,13,234,38,69,33,123,244,50,99,35,82,226,136,160,80,176,60,90 };
    byte_vec_t pk { 4,200,57,9,221,42,4,163,181,220,35,71,160,49,29,8,62,218,98,71,108,73,144,213,248,13,25,73,209,201,10,220,76,156,160,163,239,188,75,17,219,162,83,246,105,254,148,78,37,73,155,184,76,207,154,104,105,187,250,28,164,189,135,93,26 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 895 ") {
    byte_vec_t msg { 98,205,121,165 };
    byte_vec_t sig { 205,22,241,69,180,240,1,20,113,247,165,244,39,62,201,241,115,97,117,192,41,209,97,161,208,197,115,210,55,189,210,201,240,63,126,56,8,150,83,41,216,91,243,32,236,114,226,108,65,131,139,27,98,57,75,151,52,238,180,8,63,248,69,54 };
    byte_vec_t pk { 3,137,115,250,224,143,110,132,248,27,187,19,36,185,129,217,143,222,188,138,113,60,108,45,177,248,162,203,28,252,99,143,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 895 ") {
    byte_vec_t msg { 241,34,175,181 };
    byte_vec_t sig { 60,8,23,113,149,249,113,104,160,185,10,159,49,207,114,215,239,24,139,47,17,59,226,116,208,24,154,52,229,35,143,47,159,58,73,74,52,99,231,13,99,10,168,237,211,90,114,195,129,250,247,156,54,118,249,179,148,165,8,217,51,213,67,223 };
    byte_vec_t pk { 3,20,44,148,170,234,178,218,81,94,58,144,127,49,4,45,34,179,143,14,36,150,103,22,107,28,219,2,103,135,80,121,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 896 ") {
    byte_vec_t msg { 99,242,32,2 };
    byte_vec_t sig { 162,170,179,215,6,226,17,225,98,231,82,60,32,248,205,106,33,203,105,185,84,208,105,117,40,248,142,9,53,125,234,212,16,228,188,243,228,75,166,127,92,170,82,174,202,79,92,152,255,111,245,192,230,195,10,137,161,139,182,53,225,136,118,172 };
    byte_vec_t pk { 4,217,95,109,21,163,38,211,224,7,119,43,91,38,144,73,132,4,6,126,146,184,102,214,87,170,35,64,90,224,175,208,219,12,158,225,166,194,91,61,39,243,190,157,246,196,157,187,27,27,91,97,201,121,92,170,42,118,131,165,166,238,166,202,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 896 ") {
    byte_vec_t msg { 129,169,128,157 };
    byte_vec_t sig { 102,64,34,248,247,104,131,5,157,144,162,207,136,129,212,56,88,58,157,135,139,170,246,112,245,226,103,94,230,255,43,11,118,105,195,184,151,68,81,231,155,232,114,247,1,99,146,191,16,211,56,22,233,96,204,20,115,149,194,142,207,61,197,81 };
    byte_vec_t pk { 4,91,190,30,100,61,140,21,222,56,125,158,230,186,19,83,220,213,114,227,88,168,3,188,25,254,150,118,56,72,160,16,157,155,14,194,223,210,152,5,247,8,193,164,241,65,240,247,227,83,83,159,5,169,37,162,170,200,168,128,60,243,237,171,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 896 ") {
    byte_vec_t msg { 198,245,56,197 };
    byte_vec_t sig { 218,232,3,143,208,191,101,134,118,229,28,158,209,43,142,192,71,158,81,153,86,66,151,182,158,194,200,66,244,175,191,167,47,134,136,251,235,66,227,68,145,166,133,55,162,90,115,117,74,72,204,140,81,110,187,151,7,99,132,45,202,25,154,101 };
    byte_vec_t pk { 3,52,67,12,141,68,83,242,206,227,33,247,170,79,240,188,100,224,251,98,178,167,254,74,104,70,75,87,197,195,204,105,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 896 ") {
    byte_vec_t msg { 39,163,193,101 };
    byte_vec_t sig { 35,130,139,204,206,220,178,244,130,70,25,26,179,104,201,210,76,38,109,237,74,61,147,242,68,222,111,148,72,55,243,62,164,44,81,106,249,100,12,64,137,11,240,178,164,7,246,138,107,168,52,1,176,33,26,109,138,224,60,27,96,125,49,245 };
    byte_vec_t pk { 2,88,226,158,68,98,199,12,114,250,99,101,165,40,143,162,217,148,36,181,237,124,18,191,169,20,98,146,113,30,65,227,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 897 ") {
    byte_vec_t msg { 2,76,92,139 };
    byte_vec_t sig { 225,37,152,136,70,59,18,69,206,210,252,176,215,167,58,206,197,181,249,121,158,209,57,19,58,142,199,20,159,121,255,165,174,55,19,99,169,29,246,9,113,21,241,202,35,113,57,35,101,8,239,206,248,210,90,86,136,221,156,95,247,35,196,54 };
    byte_vec_t pk { 4,253,131,151,213,221,147,36,41,4,53,96,90,4,47,148,205,111,66,246,185,230,146,49,201,42,232,166,156,162,134,41,94,100,220,10,169,126,135,94,112,150,41,112,112,206,234,229,173,244,203,170,34,12,34,92,72,96,79,126,196,33,227,106,172 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 897 ") {
    byte_vec_t msg { 205,97,180,235 };
    byte_vec_t sig { 100,112,87,21,215,68,185,155,36,117,81,246,157,251,71,93,142,246,227,53,67,217,45,243,193,126,139,6,36,159,106,91,123,83,69,46,138,114,216,151,76,202,27,12,50,115,146,171,77,89,80,77,47,203,228,139,164,50,223,211,186,186,136,78 };
    byte_vec_t pk { 4,156,152,19,140,99,125,119,31,21,44,249,179,70,224,28,223,165,38,246,218,228,13,154,17,10,163,61,185,38,54,163,93,68,166,155,131,234,229,115,192,166,33,85,236,190,155,233,28,94,99,71,58,126,34,216,119,189,17,206,70,192,96,9,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 897 ") {
    byte_vec_t msg { 223,254,37,157 };
    byte_vec_t sig { 87,40,96,84,226,223,128,178,221,227,79,17,244,217,13,75,254,136,97,104,126,62,106,253,210,138,122,63,179,17,177,209,164,62,222,111,27,252,150,102,32,69,181,128,199,6,80,102,33,16,158,50,105,55,133,217,203,139,234,100,135,53,162,105 };
    byte_vec_t pk { 3,76,39,206,207,236,39,26,124,123,70,118,245,107,119,58,122,103,142,36,172,6,4,211,238,60,250,118,33,69,107,180,50 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 897 ") {
    byte_vec_t msg { 106,1,248,193 };
    byte_vec_t sig { 177,154,36,13,145,253,58,164,48,55,245,193,33,50,131,168,220,47,116,73,158,30,85,233,75,22,248,253,127,192,35,0,235,76,246,135,44,192,40,209,42,247,226,209,74,201,93,255,63,107,131,53,140,27,42,112,118,87,42,11,156,107,211,55 };
    byte_vec_t pk { 3,147,60,113,171,133,133,242,142,65,118,152,25,30,119,46,54,189,193,72,52,142,57,198,204,120,28,219,212,208,206,108,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 898 ") {
    byte_vec_t msg { 177,101,212,71 };
    byte_vec_t sig { 24,97,17,11,245,57,236,122,186,175,121,67,65,7,36,53,230,81,36,52,153,194,27,72,220,114,18,129,105,58,79,106,197,125,18,189,13,242,134,254,168,83,245,95,200,9,116,25,250,142,184,123,191,34,80,129,229,98,125,106,149,134,211,84 };
    byte_vec_t pk { 4,21,66,253,170,115,138,237,89,78,228,194,39,63,235,128,230,224,8,119,38,196,76,23,9,63,1,74,233,223,74,7,112,218,93,242,217,188,151,160,31,180,117,61,171,126,146,157,74,152,15,41,148,172,90,176,188,155,192,122,217,58,174,227,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 898 ") {
    byte_vec_t msg { 190,178,130,209 };
    byte_vec_t sig { 192,179,123,190,200,180,198,217,51,67,199,68,51,65,99,120,38,187,118,186,138,122,207,94,227,67,182,165,194,102,96,41,11,130,51,184,211,253,84,226,76,220,219,188,82,236,212,158,231,81,145,52,56,238,18,232,211,64,8,61,214,205,171,59 };
    byte_vec_t pk { 4,115,150,226,12,48,177,7,23,190,18,248,46,199,60,168,130,215,133,215,158,74,150,110,50,7,46,102,116,251,249,44,102,74,228,252,227,145,178,96,223,69,242,101,28,221,55,113,44,18,163,178,62,81,204,58,157,220,33,141,7,203,212,21,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 898 ") {
    byte_vec_t msg { 163,138,200,135 };
    byte_vec_t sig { 196,144,135,191,217,198,113,119,174,250,5,162,239,39,78,34,205,194,170,130,107,50,132,175,241,111,97,57,135,63,94,226,109,89,84,134,206,164,13,227,206,53,154,127,70,248,155,140,12,76,198,213,177,120,148,70,251,131,1,0,238,248,221,89 };
    byte_vec_t pk { 2,197,226,178,234,78,187,84,0,67,247,206,227,205,105,28,87,108,5,172,240,160,43,98,88,109,187,12,194,98,228,173,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 898 ") {
    byte_vec_t msg { 151,26,43,127 };
    byte_vec_t sig { 197,109,71,210,253,163,105,113,66,113,189,111,11,131,61,92,173,142,43,14,117,115,19,46,64,115,185,220,132,106,254,172,171,128,36,123,227,169,220,246,48,188,20,218,68,118,41,35,24,78,155,177,200,18,75,223,108,13,35,197,110,119,137,50 };
    byte_vec_t pk { 3,146,60,211,99,36,118,46,86,112,41,85,65,116,206,139,220,157,37,97,148,71,28,85,5,86,165,215,200,157,244,141,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 899 ") {
    byte_vec_t msg { 14,184,181,249 };
    byte_vec_t sig { 164,184,66,202,120,75,207,48,55,189,100,240,134,234,22,172,89,87,32,173,69,14,94,221,53,228,123,191,48,204,61,27,199,122,85,39,223,85,20,197,199,210,236,197,148,211,218,149,251,65,161,111,78,30,41,100,133,194,221,243,151,138,173,141 };
    byte_vec_t pk { 4,251,175,55,48,76,69,212,67,77,208,18,142,160,216,203,212,42,156,143,53,80,48,118,237,153,190,211,11,181,33,113,196,194,39,245,102,23,55,184,83,134,227,20,79,190,255,30,5,75,191,122,68,87,8,212,91,242,85,123,64,94,243,134,67 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 899 ") {
    byte_vec_t msg { 196,129,48,40 };
    byte_vec_t sig { 4,156,245,82,5,102,52,41,78,172,24,53,162,207,196,232,76,154,124,84,240,82,102,82,168,41,134,247,254,172,200,206,62,131,24,237,159,93,214,139,62,196,59,124,184,96,230,81,185,136,143,145,106,153,46,213,214,190,166,8,190,122,76,149 };
    byte_vec_t pk { 4,237,144,23,56,37,149,181,123,105,144,193,140,248,141,81,106,3,114,63,171,181,234,90,95,250,120,153,6,78,202,106,90,145,206,73,239,117,232,98,12,236,123,86,206,173,203,134,82,9,220,73,172,222,148,9,41,5,211,139,216,124,193,6,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 899 ") {
    byte_vec_t msg { 147,161,124,136 };
    byte_vec_t sig { 246,71,117,199,35,251,192,41,39,64,139,205,149,156,46,174,124,36,238,73,225,179,129,191,45,193,214,74,9,85,207,186,30,117,225,188,136,155,129,158,79,250,93,202,235,170,237,41,64,86,49,114,234,80,74,75,42,95,25,39,113,182,237,91 };
    byte_vec_t pk { 3,13,98,145,180,226,78,248,182,57,233,235,213,148,188,172,89,160,76,241,67,77,232,73,64,241,74,228,119,170,55,112,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 899 ") {
    byte_vec_t msg { 242,254,68,228 };
    byte_vec_t sig { 208,121,26,108,19,34,22,225,127,195,119,168,204,142,249,182,32,76,57,129,31,243,177,43,50,188,208,220,112,200,119,113,228,92,252,8,71,114,252,82,144,15,167,10,59,61,116,182,30,172,208,32,132,88,103,30,149,112,9,97,150,26,248,178 };
    byte_vec_t pk { 3,22,198,15,40,248,175,168,50,207,36,245,7,103,159,103,141,224,121,188,149,202,81,57,55,93,204,64,197,0,167,244,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 900 ") {
    byte_vec_t msg { 73,127,46,194 };
    byte_vec_t sig { 40,60,251,156,155,74,214,133,125,52,52,143,109,228,236,82,116,97,224,72,230,75,253,68,71,13,152,50,63,137,66,82,231,53,190,140,59,160,111,155,12,122,193,126,27,163,56,65,107,251,180,213,221,183,205,77,22,188,221,56,173,219,72,121 };
    byte_vec_t pk { 4,113,47,84,121,222,59,183,137,12,225,42,54,80,197,252,211,40,119,251,79,25,84,65,53,149,242,9,67,89,206,72,77,130,89,61,232,66,196,93,79,190,8,33,250,94,204,252,199,187,178,119,140,10,91,108,11,38,167,23,210,36,31,7,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 900 ") {
    byte_vec_t msg { 167,104,44,59 };
    byte_vec_t sig { 128,50,68,3,46,241,83,177,43,238,57,36,211,223,12,126,103,26,110,158,245,161,181,130,201,82,18,149,252,238,48,29,8,136,31,162,60,224,218,241,150,36,121,88,65,159,44,240,192,72,203,248,147,177,17,102,54,35,88,45,102,115,253,66 };
    byte_vec_t pk { 4,231,151,242,156,192,63,6,82,156,207,205,102,182,7,186,219,15,212,15,192,255,39,87,143,213,195,249,131,202,114,249,61,187,168,158,226,100,248,109,208,172,47,183,197,224,21,248,161,200,178,133,191,188,166,162,86,199,154,164,0,100,225,235,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 900 ") {
    byte_vec_t msg { 151,105,200,244 };
    byte_vec_t sig { 41,122,204,217,147,146,7,40,205,90,178,225,204,53,235,56,60,168,207,247,193,232,211,164,225,111,17,156,156,168,254,192,215,221,250,247,135,78,36,136,201,112,100,188,82,54,64,143,159,132,149,22,67,3,0,134,9,135,124,14,177,5,51,51 };
    byte_vec_t pk { 3,208,215,158,74,193,17,54,192,237,164,39,147,45,179,248,185,59,111,150,60,214,202,126,5,26,233,1,55,28,69,235,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 900 ") {
    byte_vec_t msg { 56,84,196,103 };
    byte_vec_t sig { 122,145,121,85,157,111,7,60,133,113,120,49,22,172,36,135,74,40,21,5,66,0,59,175,158,177,160,224,157,249,179,87,255,180,222,149,146,247,22,210,167,165,252,34,105,192,97,74,36,80,53,237,13,222,166,198,160,56,140,78,72,210,191,160 };
    byte_vec_t pk { 2,122,216,4,132,1,40,28,197,216,15,58,77,225,144,183,164,220,102,120,151,95,250,210,71,24,85,69,86,89,220,91,59 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 901 ") {
    byte_vec_t msg { 50,78,197,152 };
    byte_vec_t sig { 134,154,103,19,98,200,62,210,226,116,36,233,134,44,35,113,113,195,179,106,238,201,98,84,156,205,39,172,109,230,48,149,178,36,77,10,81,67,174,99,78,251,39,76,248,32,75,224,199,251,98,246,53,116,190,54,84,67,45,115,212,68,32,31 };
    byte_vec_t pk { 4,157,152,27,176,254,59,115,184,101,37,10,71,174,229,44,204,225,39,79,26,165,30,209,221,194,193,137,112,166,87,61,101,58,34,165,211,118,50,192,125,215,3,234,92,63,205,252,54,203,19,236,149,95,154,22,35,147,240,35,7,179,239,82,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 901 ") {
    byte_vec_t msg { 54,131,51,54 };
    byte_vec_t sig { 12,210,127,123,52,10,184,141,196,253,193,63,121,128,217,10,35,108,67,6,218,75,206,0,122,62,189,190,48,113,123,247,54,182,81,234,102,182,44,4,148,196,67,181,60,22,15,11,0,11,244,139,195,191,13,69,66,120,138,249,53,41,104,163 };
    byte_vec_t pk { 4,190,212,79,44,223,31,103,197,195,219,22,126,173,130,65,224,173,68,206,57,19,80,253,169,35,155,227,126,231,130,11,181,141,110,43,255,8,116,95,2,225,85,239,58,71,74,16,93,148,241,60,162,118,96,119,233,189,36,130,173,181,228,19,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 901 ") {
    byte_vec_t msg { 211,159,138,67 };
    byte_vec_t sig { 95,36,83,11,2,247,50,202,113,65,233,5,239,40,216,100,49,67,105,183,1,173,69,154,40,123,193,55,45,60,91,11,52,241,3,68,164,208,214,175,81,108,235,210,204,98,68,64,124,90,242,108,137,61,32,247,101,203,171,121,102,129,253,77 };
    byte_vec_t pk { 3,132,78,241,125,27,208,113,248,192,203,0,215,190,198,140,121,46,5,110,80,158,184,72,237,228,117,238,164,150,175,150,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 901 ") {
    byte_vec_t msg { 154,248,77,223 };
    byte_vec_t sig { 104,19,227,251,165,92,32,193,167,15,89,77,110,188,137,227,131,241,222,144,24,143,85,164,203,228,117,133,113,158,218,70,245,109,224,115,142,63,178,220,117,216,115,200,232,116,0,114,29,241,9,184,255,20,114,161,117,241,196,144,11,85,1,67 };
    byte_vec_t pk { 3,153,153,193,44,185,9,4,149,84,245,63,89,212,195,182,13,23,164,119,55,105,208,196,216,250,144,62,96,254,57,165,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 902 ") {
    byte_vec_t msg { 143,187,35,211 };
    byte_vec_t sig { 20,136,55,167,138,81,235,218,186,64,216,24,33,24,133,94,163,237,12,186,178,209,16,230,212,96,148,14,203,172,120,239,57,231,224,226,149,203,141,76,23,153,26,139,120,88,182,72,1,227,99,254,55,159,22,101,39,160,76,224,175,43,36,188 };
    byte_vec_t pk { 4,86,205,104,118,183,87,236,204,187,155,244,37,85,60,182,65,152,189,44,36,71,1,80,217,127,214,249,200,17,160,224,61,195,75,94,185,225,78,216,232,13,155,196,125,148,245,73,189,55,203,143,107,235,27,191,10,129,31,252,61,112,48,195,185 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 902 ") {
    byte_vec_t msg { 89,116,123,102 };
    byte_vec_t sig { 57,159,50,2,252,44,221,241,128,158,191,11,51,241,46,110,215,90,178,82,221,124,219,191,16,206,155,218,162,152,6,195,144,97,239,3,0,68,218,152,121,59,17,69,143,226,84,221,235,73,125,43,237,73,243,80,101,0,66,233,233,162,214,66 };
    byte_vec_t pk { 4,100,158,166,72,79,117,76,149,228,220,80,202,146,65,101,138,107,103,45,101,76,137,138,58,46,240,140,118,58,241,243,79,143,252,8,17,228,156,15,14,48,67,187,143,147,232,164,191,230,42,242,76,112,138,46,25,93,1,229,101,163,161,246,240 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 902 ") {
    byte_vec_t msg { 168,248,192,67 };
    byte_vec_t sig { 220,205,59,48,251,190,13,217,191,124,91,30,140,156,252,114,214,162,60,133,130,55,19,133,99,137,234,225,154,1,125,157,244,115,123,240,229,96,161,176,22,236,104,97,224,14,41,38,145,134,23,133,157,137,50,11,149,175,208,103,83,151,157,121 };
    byte_vec_t pk { 2,189,44,84,97,3,216,120,145,3,88,76,70,233,89,148,154,9,141,190,236,132,79,78,203,254,47,236,174,98,20,186,133 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 902 ") {
    byte_vec_t msg { 51,98,19,71 };
    byte_vec_t sig { 164,185,59,156,149,46,202,189,209,53,216,184,251,253,192,177,89,209,32,14,148,206,186,116,52,165,15,238,31,94,235,184,221,54,102,19,181,138,119,23,120,93,64,36,142,243,0,53,157,135,230,198,146,237,52,49,168,73,213,248,30,126,182,208 };
    byte_vec_t pk { 2,160,214,142,176,20,111,204,227,244,153,188,93,114,201,13,221,114,32,205,111,220,146,48,173,196,84,220,237,19,146,135,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 903 ") {
    byte_vec_t msg { 47,188,120,58 };
    byte_vec_t sig { 232,121,175,104,29,202,186,39,21,56,17,203,5,198,120,15,196,160,215,174,69,38,60,26,51,183,252,51,50,127,0,33,12,132,243,154,33,0,230,134,233,169,73,208,251,26,249,10,196,51,149,71,105,95,55,44,120,40,151,158,113,30,164,243 };
    byte_vec_t pk { 4,148,47,128,138,67,91,255,223,10,197,223,252,78,80,199,73,99,242,22,85,178,42,137,11,72,174,128,116,45,248,12,213,194,244,232,123,93,132,51,54,170,187,23,181,252,50,30,73,213,1,205,244,102,254,31,90,53,195,126,239,64,114,236,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 903 ") {
    byte_vec_t msg { 52,192,216,156 };
    byte_vec_t sig { 107,26,232,69,233,38,102,234,193,37,139,246,205,115,70,183,120,10,241,134,52,245,239,6,87,71,244,122,152,158,161,40,202,121,248,167,246,45,137,20,23,109,190,51,51,88,229,54,109,75,137,144,140,134,222,76,1,114,77,77,104,170,145,92 };
    byte_vec_t pk { 4,45,25,65,149,73,28,61,186,198,215,253,234,77,113,46,60,178,66,212,199,202,77,86,2,194,180,122,145,238,39,19,144,57,173,189,15,59,178,7,12,86,27,227,170,1,81,50,76,98,3,60,157,212,181,143,227,61,224,81,59,141,127,117,32 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 903 ") {
    byte_vec_t msg { 3,239,210,132 };
    byte_vec_t sig { 6,254,208,156,119,224,192,110,14,201,98,195,8,48,155,222,207,88,253,229,27,135,13,241,101,89,51,87,154,60,164,22,121,220,160,209,225,69,59,252,249,101,27,220,102,162,86,92,171,249,194,52,154,162,26,111,11,69,156,224,214,150,0,146 };
    byte_vec_t pk { 2,74,105,50,142,208,64,8,179,121,150,117,139,56,150,116,248,28,162,124,117,204,92,46,253,221,78,2,207,4,251,6,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 903 ") {
    byte_vec_t msg { 31,76,152,98 };
    byte_vec_t sig { 230,159,144,26,153,191,136,170,135,230,150,110,188,188,100,5,140,180,210,218,130,186,242,127,8,110,129,30,70,115,123,166,90,27,249,14,24,233,225,44,252,11,127,234,142,196,105,78,137,205,242,24,102,69,193,210,75,18,106,9,143,40,230,161 };
    byte_vec_t pk { 3,66,100,174,69,180,87,32,17,132,2,212,60,36,197,42,159,127,176,42,9,221,101,117,165,221,214,182,119,26,211,212,86 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 904 ") {
    byte_vec_t msg { 199,186,129,30 };
    byte_vec_t sig { 227,209,53,75,198,85,220,142,60,97,196,123,197,118,244,48,145,77,208,152,73,174,83,206,113,169,162,84,7,47,82,127,140,63,147,143,172,137,214,243,47,25,143,87,176,93,94,97,236,96,2,13,111,208,202,7,13,173,105,251,54,244,157,19 };
    byte_vec_t pk { 4,70,121,81,16,253,28,227,140,70,5,54,239,72,136,94,178,42,190,178,253,103,137,236,165,81,159,188,142,77,73,165,239,113,9,66,207,36,116,85,144,226,66,250,101,78,33,208,158,50,18,130,74,231,32,135,93,106,64,80,108,239,26,75,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 904 ") {
    byte_vec_t msg { 236,186,179,62 };
    byte_vec_t sig { 66,106,180,249,65,0,224,103,4,193,132,199,93,138,207,15,5,170,223,130,196,85,239,231,166,60,224,169,210,106,90,183,42,197,148,204,33,171,140,169,150,150,230,99,132,56,218,17,238,245,66,174,166,193,0,186,222,76,180,252,81,34,127,25 };
    byte_vec_t pk { 4,199,85,110,2,22,228,223,50,240,208,1,179,43,77,93,174,178,57,65,167,230,11,216,253,92,176,180,125,216,240,220,197,173,53,186,15,120,75,185,49,47,135,189,21,66,1,112,228,239,196,62,189,73,221,98,64,42,156,208,240,117,216,252,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 904 ") {
    byte_vec_t msg { 165,111,208,227 };
    byte_vec_t sig { 116,164,230,167,124,219,46,168,236,249,33,70,72,126,23,134,224,42,128,79,30,206,227,18,229,218,120,48,168,154,104,81,61,8,195,79,110,137,147,224,22,199,135,163,194,9,183,6,255,118,53,253,224,219,133,191,57,65,6,166,183,137,65,30 };
    byte_vec_t pk { 2,177,122,172,2,149,89,158,35,241,194,215,217,58,94,90,155,245,246,172,238,172,134,150,109,177,25,1,54,35,204,219,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 904 ") {
    byte_vec_t msg { 145,77,39,214 };
    byte_vec_t sig { 198,75,3,108,35,173,128,165,40,135,58,33,37,183,7,78,148,44,196,180,15,44,61,37,91,254,197,205,123,199,53,240,77,75,185,40,215,20,86,143,164,112,146,63,10,72,118,149,47,89,166,168,180,169,184,233,116,232,253,82,244,155,10,115 };
    byte_vec_t pk { 2,233,205,187,196,120,205,15,18,50,73,95,254,164,73,231,59,16,90,29,212,2,168,245,10,200,1,47,12,224,98,132,140 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 905 ") {
    byte_vec_t msg { 116,179,141,4 };
    byte_vec_t sig { 57,37,114,228,41,67,43,46,139,135,194,129,148,213,233,20,56,79,130,226,143,250,164,112,68,216,17,222,69,64,96,171,208,147,233,48,235,228,212,167,208,216,47,182,146,252,249,139,222,121,108,48,39,244,4,196,247,47,134,85,52,104,231,190 };
    byte_vec_t pk { 4,88,45,12,117,7,21,200,166,114,123,123,214,73,222,106,53,185,184,242,85,141,159,207,126,233,152,160,97,204,6,36,25,161,161,185,140,47,250,66,98,190,30,229,81,247,119,110,90,184,218,8,84,74,175,139,93,60,147,126,233,203,75,196,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 905 ") {
    byte_vec_t msg { 181,117,133,209 };
    byte_vec_t sig { 106,152,189,163,101,24,56,209,227,165,104,24,93,30,117,42,14,20,144,245,130,221,200,200,250,250,174,177,14,188,148,137,137,36,191,90,27,145,191,114,235,112,121,218,101,100,112,153,125,225,135,107,105,88,60,230,91,242,135,5,238,60,233,92 };
    byte_vec_t pk { 4,202,228,68,84,103,53,68,230,235,40,71,26,59,59,239,120,196,196,70,58,202,101,33,189,112,110,180,244,168,19,213,47,115,202,137,253,142,141,120,22,58,237,187,131,153,219,132,102,182,150,64,228,204,14,158,123,231,83,143,194,129,247,30,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 905 ") {
    byte_vec_t msg { 234,171,62,116 };
    byte_vec_t sig { 98,142,92,172,63,198,134,121,152,210,139,199,198,111,126,103,67,134,139,122,32,74,82,144,159,96,60,167,84,22,128,210,123,135,250,51,116,63,137,6,57,127,206,114,26,76,28,160,58,231,246,143,234,213,18,166,1,49,92,111,205,165,146,150 };
    byte_vec_t pk { 2,38,29,124,217,79,116,183,249,132,12,214,121,248,32,15,38,180,101,25,252,202,196,145,223,52,174,147,183,103,105,17,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 905 ") {
    byte_vec_t msg { 53,178,136,72 };
    byte_vec_t sig { 214,122,32,8,158,133,145,143,246,79,88,226,91,69,103,155,223,155,89,185,244,15,125,6,138,93,176,139,252,184,32,173,59,167,88,250,73,60,98,78,99,175,97,18,125,157,104,57,10,55,70,55,52,28,243,84,62,135,37,26,114,167,14,114 };
    byte_vec_t pk { 3,240,151,7,25,14,213,59,2,57,134,72,221,116,206,136,109,122,127,73,99,72,33,224,1,72,195,38,210,23,159,17,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 906 ") {
    byte_vec_t msg { 49,107,160,66 };
    byte_vec_t sig { 113,211,194,164,126,251,253,73,45,89,56,27,217,93,168,57,121,26,52,24,201,240,179,0,139,213,7,164,193,71,61,44,33,209,102,91,193,24,175,81,28,202,241,235,209,4,148,141,233,184,249,56,110,3,88,74,105,180,101,213,176,200,244,39 };
    byte_vec_t pk { 4,205,176,172,78,128,235,73,73,159,221,197,104,171,30,94,221,169,153,136,80,245,156,235,4,150,82,134,18,98,130,62,78,222,108,176,246,230,243,78,155,58,246,173,215,108,21,12,92,4,153,136,6,130,240,216,56,64,0,27,93,228,211,188,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 906 ") {
    byte_vec_t msg { 204,21,148,13 };
    byte_vec_t sig { 0,17,188,212,250,20,24,1,130,177,242,80,71,188,2,200,230,88,58,13,231,154,72,201,222,212,77,168,47,186,129,142,102,132,65,139,130,54,224,156,197,92,127,28,45,127,21,182,200,73,177,120,224,4,100,178,3,58,18,162,51,18,229,214 };
    byte_vec_t pk { 4,210,224,11,186,14,149,126,8,36,110,189,142,145,51,146,115,56,60,175,174,41,239,202,230,77,120,87,113,247,80,125,182,251,134,152,52,192,84,255,108,28,70,97,153,208,34,83,37,203,196,44,146,166,123,220,128,100,97,2,71,207,250,140,92 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 906 ") {
    byte_vec_t msg { 203,159,207,111 };
    byte_vec_t sig { 111,30,153,37,216,67,83,75,170,222,224,174,173,144,218,63,203,223,92,216,74,230,140,97,134,187,184,177,240,84,139,187,30,180,209,122,168,28,6,154,186,59,164,238,106,189,100,225,22,118,33,59,192,203,251,241,45,132,86,252,177,96,46,163 };
    byte_vec_t pk { 2,232,175,115,255,168,65,162,102,235,253,113,212,236,63,119,11,247,9,208,76,250,124,96,165,111,231,170,86,205,54,225,180 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 906 ") {
    byte_vec_t msg { 152,176,138,143 };
    byte_vec_t sig { 199,43,234,207,216,13,73,170,83,38,113,140,234,190,249,195,223,118,72,53,214,167,221,103,43,28,74,173,124,228,171,188,196,179,207,67,36,170,25,218,228,90,195,55,250,132,199,136,14,130,49,176,229,145,184,18,147,1,11,113,164,125,217,86 };
    byte_vec_t pk { 3,246,57,74,182,210,163,5,2,182,130,203,225,4,100,60,54,211,188,71,247,119,175,191,85,143,231,61,198,178,14,232,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 907 ") {
    byte_vec_t msg { 116,80,84,79 };
    byte_vec_t sig { 94,162,213,55,203,192,91,157,185,190,55,142,37,209,181,126,193,138,26,101,113,115,15,18,20,116,124,216,7,204,6,187,147,194,64,128,153,224,150,230,179,92,70,78,149,91,0,157,193,153,252,83,221,236,2,172,227,215,115,53,130,238,252,29 };
    byte_vec_t pk { 4,33,14,1,235,126,191,247,244,140,91,140,74,191,234,253,184,80,31,135,88,118,76,177,230,67,157,95,155,172,17,170,158,252,103,213,40,13,31,53,121,230,122,22,23,211,69,243,182,235,57,120,185,99,42,146,215,30,149,73,166,68,53,125,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 907 ") {
    byte_vec_t msg { 55,1,45,129 };
    byte_vec_t sig { 173,56,155,151,84,84,2,40,204,197,237,226,163,117,84,99,233,98,85,184,202,174,128,165,207,52,227,239,187,78,54,170,165,20,67,33,31,90,147,91,204,125,119,190,70,83,124,65,110,16,71,200,191,174,110,86,150,93,5,20,5,30,68,44 };
    byte_vec_t pk { 4,136,62,37,162,115,71,112,118,210,218,88,62,208,244,166,81,64,127,94,158,199,29,240,217,72,41,74,97,146,103,213,126,253,7,183,85,14,43,53,89,62,78,124,65,113,152,165,128,171,57,239,51,103,115,155,74,76,45,27,230,120,96,158,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 907 ") {
    byte_vec_t msg { 200,236,101,216 };
    byte_vec_t sig { 246,54,188,200,109,93,252,187,147,207,255,19,251,185,19,22,1,199,138,106,100,210,142,8,104,23,135,143,152,158,173,117,218,44,102,110,249,52,204,88,11,231,164,166,58,209,102,170,111,33,54,213,151,14,107,34,232,61,212,102,2,143,255,212 };
    byte_vec_t pk { 2,37,27,129,164,241,127,215,177,149,146,115,143,192,218,38,155,21,93,251,234,75,159,230,92,248,136,200,201,216,21,155,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 907 ") {
    byte_vec_t msg { 157,100,175,247 };
    byte_vec_t sig { 162,245,0,51,2,55,152,197,230,154,128,150,28,208,51,240,210,168,24,88,19,61,136,198,198,139,28,137,92,89,206,231,134,175,145,9,213,10,17,36,225,196,229,198,95,89,220,101,163,131,184,231,155,172,157,170,181,110,104,206,64,66,16,67 };
    byte_vec_t pk { 2,194,159,63,115,228,174,118,140,175,199,205,5,102,126,37,79,56,58,130,197,110,196,2,235,188,19,162,84,235,184,123,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 908 ") {
    byte_vec_t msg { 185,119,80,49 };
    byte_vec_t sig { 214,191,30,61,244,254,142,211,200,108,86,172,144,73,189,126,29,221,62,225,9,92,67,142,150,113,30,156,120,42,201,185,12,48,210,96,6,175,98,250,149,107,252,11,237,33,192,153,175,61,214,126,118,125,41,223,148,82,25,1,193,63,246,212 };
    byte_vec_t pk { 4,44,20,35,117,178,149,152,102,125,28,82,27,107,103,167,201,99,176,189,81,58,48,69,245,243,68,240,193,138,120,253,142,83,248,160,9,48,110,245,221,236,127,93,1,233,224,73,54,207,192,134,13,70,9,195,154,84,77,54,237,45,26,11,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 908 ") {
    byte_vec_t msg { 18,226,136,118 };
    byte_vec_t sig { 51,47,76,5,183,138,207,146,231,243,119,254,142,169,173,51,179,209,219,161,69,160,199,131,75,123,211,203,42,62,146,28,107,158,99,8,179,210,46,86,94,236,198,98,39,74,14,58,36,133,2,72,138,0,134,213,100,228,43,75,255,33,13,227 };
    byte_vec_t pk { 4,156,64,252,116,160,229,192,83,48,96,186,0,211,49,15,40,201,220,254,29,55,52,64,5,114,27,246,77,207,196,167,70,199,102,90,209,90,211,19,31,254,150,128,130,241,239,168,160,223,59,84,15,18,89,173,107,159,137,83,249,237,23,231,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 908 ") {
    byte_vec_t msg { 73,174,45,165 };
    byte_vec_t sig { 37,100,126,202,90,127,98,130,79,218,120,136,8,45,228,213,122,149,126,3,86,234,23,35,73,185,39,151,60,206,113,195,101,6,219,155,67,4,166,117,62,121,208,14,33,121,139,80,150,226,167,251,65,35,185,103,62,88,89,165,194,72,72,194 };
    byte_vec_t pk { 2,1,183,75,70,201,121,216,205,246,70,254,204,109,112,67,215,229,127,221,21,55,187,128,204,96,247,24,5,127,82,7,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 908 ") {
    byte_vec_t msg { 148,125,131,76 };
    byte_vec_t sig { 75,28,9,34,211,92,128,15,10,235,20,211,5,111,40,195,146,30,170,124,38,67,244,176,253,96,138,68,4,250,207,167,61,188,153,74,11,41,4,10,46,73,186,253,229,42,193,185,43,204,167,151,3,139,141,114,173,1,57,32,148,129,206,109 };
    byte_vec_t pk { 3,175,135,49,12,245,54,155,164,169,213,40,132,89,74,25,183,41,43,73,43,104,209,136,6,68,174,234,24,212,148,239,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 909 ") {
    byte_vec_t msg { 238,100,155,21 };
    byte_vec_t sig { 96,23,228,56,228,153,239,233,165,249,228,163,81,110,16,149,160,40,101,10,113,173,51,184,15,241,189,107,94,116,43,4,44,181,192,227,54,209,162,235,46,220,12,83,22,50,252,243,159,194,144,119,159,160,52,6,137,91,65,82,53,36,229,30 };
    byte_vec_t pk { 4,49,207,172,151,114,123,130,246,130,17,175,142,95,80,190,172,9,151,235,115,95,166,163,49,133,147,109,18,100,114,127,27,209,107,64,171,43,250,65,30,92,17,188,90,108,202,186,38,143,225,245,68,163,196,253,130,24,83,166,15,199,20,165,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 909 ") {
    byte_vec_t msg { 127,233,124,43 };
    byte_vec_t sig { 28,203,61,94,134,6,19,18,36,165,216,154,148,153,242,83,34,132,233,105,177,222,60,86,43,181,164,249,217,226,6,57,184,240,51,147,190,175,220,193,255,175,230,22,52,4,42,32,73,183,60,91,140,148,51,150,141,104,107,137,126,5,84,41 };
    byte_vec_t pk { 4,74,121,192,33,86,38,2,128,169,72,104,90,199,162,77,95,235,143,146,163,76,22,195,174,225,241,125,196,117,215,126,180,5,255,12,133,173,164,23,88,87,79,67,215,226,31,251,59,117,209,79,162,86,133,200,43,231,60,137,198,141,161,108,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 909 ") {
    byte_vec_t msg { 151,60,250,120 };
    byte_vec_t sig { 128,11,13,122,131,195,175,11,246,198,213,90,35,201,109,88,137,250,133,40,48,214,6,253,140,40,143,45,122,73,187,204,194,87,90,242,126,239,25,104,171,139,61,247,176,110,224,108,42,2,172,196,173,28,175,235,223,120,114,201,125,11,73,141 };
    byte_vec_t pk { 3,10,159,74,202,240,25,162,176,227,136,236,52,37,168,34,112,78,239,116,244,18,218,141,218,9,5,180,230,112,155,223,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 909 ") {
    byte_vec_t msg { 247,181,8,132 };
    byte_vec_t sig { 156,33,33,93,150,60,34,182,56,106,181,138,97,136,209,107,25,195,193,194,186,41,1,99,40,176,122,228,126,74,168,183,137,127,181,1,166,3,91,96,78,232,41,50,35,139,245,229,191,141,60,168,95,54,113,238,64,250,251,90,47,187,34,171 };
    byte_vec_t pk { 2,246,25,95,184,54,188,85,90,48,177,26,71,129,221,122,249,79,135,100,160,92,147,73,74,134,235,32,102,247,187,232,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 910 ") {
    byte_vec_t msg { 249,219,61,127 };
    byte_vec_t sig { 178,118,96,44,237,252,100,43,175,243,12,59,106,120,162,161,223,95,11,14,30,9,1,88,250,76,243,37,42,99,230,95,16,140,69,50,9,133,231,27,146,107,203,113,171,187,207,84,138,121,196,151,65,20,207,226,199,96,31,22,12,61,215,245 };
    byte_vec_t pk { 4,104,113,14,50,135,50,217,216,74,184,166,146,242,65,121,94,84,185,62,72,226,8,23,114,31,144,110,76,240,149,60,210,202,55,231,132,232,160,46,57,135,118,234,11,202,173,211,47,149,38,167,152,53,91,235,94,251,169,90,137,200,215,152,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 910 ") {
    byte_vec_t msg { 151,55,75,156 };
    byte_vec_t sig { 211,65,94,190,228,193,80,222,213,121,25,6,136,0,64,145,155,23,42,167,211,21,118,23,30,94,93,176,117,9,40,89,212,215,49,113,108,192,236,218,148,232,151,89,151,177,193,49,79,156,127,40,89,192,239,94,90,162,23,230,50,124,229,59 };
    byte_vec_t pk { 4,165,189,22,192,58,62,8,178,177,239,105,147,222,239,66,85,122,81,245,141,75,35,191,137,133,191,29,27,253,84,226,58,48,56,34,80,166,68,19,15,207,57,227,190,111,24,47,179,112,207,92,159,78,213,19,165,158,98,29,190,119,68,125,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 910 ") {
    byte_vec_t msg { 211,201,3,79 };
    byte_vec_t sig { 178,49,152,229,135,208,136,62,200,149,112,49,195,146,23,193,136,17,203,131,236,119,130,233,148,170,216,105,194,18,44,203,62,158,223,226,211,36,161,137,40,246,52,1,232,25,27,240,47,62,177,32,184,246,107,181,192,149,23,50,150,14,154,113 };
    byte_vec_t pk { 3,56,234,34,202,97,1,233,179,70,83,242,86,85,254,195,98,142,122,51,85,84,192,209,145,166,164,135,41,253,215,29,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 910 ") {
    byte_vec_t msg { 163,173,92,240 };
    byte_vec_t sig { 238,64,28,247,203,22,158,196,204,69,104,11,239,210,249,193,160,227,218,110,51,141,61,183,144,15,28,248,23,94,194,246,38,217,249,231,195,47,116,17,111,164,147,255,50,127,63,248,126,23,103,176,197,1,146,205,15,54,246,159,27,17,23,186 };
    byte_vec_t pk { 2,87,124,40,241,15,14,15,93,141,122,241,183,136,8,125,75,78,25,97,215,1,154,188,79,245,69,108,162,156,160,251,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 911 ") {
    byte_vec_t msg { 6,237,133,232 };
    byte_vec_t sig { 105,222,245,47,146,129,252,33,205,118,26,211,199,106,109,4,103,117,120,96,199,29,108,20,180,158,67,178,42,57,199,142,20,101,255,236,254,91,99,116,18,221,239,14,122,19,167,124,182,66,6,67,12,130,120,126,147,83,172,120,196,22,197,197 };
    byte_vec_t pk { 4,101,81,39,250,218,49,119,181,42,146,126,132,250,117,236,115,232,46,225,243,189,142,22,55,109,55,189,20,211,235,99,12,189,145,45,218,103,2,165,196,89,234,116,146,133,95,116,63,83,45,168,59,94,160,223,120,109,9,231,34,6,176,88,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 911 ") {
    byte_vec_t msg { 67,193,217,131 };
    byte_vec_t sig { 116,246,17,90,207,76,81,3,161,151,168,42,81,155,33,77,43,252,236,76,211,128,67,99,48,65,231,68,93,163,68,52,14,240,250,108,238,83,169,7,88,61,236,190,225,42,196,142,180,181,90,237,31,109,141,116,103,80,87,26,170,103,74,245 };
    byte_vec_t pk { 4,107,64,50,72,140,106,71,13,146,102,229,240,193,204,7,221,56,119,68,75,153,104,179,240,113,201,244,69,38,136,14,167,97,104,235,199,146,105,42,187,17,93,155,147,110,74,143,25,213,145,77,131,130,30,214,24,169,176,70,231,24,203,219,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 911 ") {
    byte_vec_t msg { 228,151,68,225 };
    byte_vec_t sig { 249,61,216,159,87,63,146,196,209,141,4,5,121,193,217,91,123,80,210,6,134,74,194,122,182,28,244,200,144,197,181,202,63,46,205,128,51,135,160,219,95,137,11,217,187,176,76,95,126,100,20,41,74,164,131,53,40,147,189,149,65,168,133,18 };
    byte_vec_t pk { 2,123,97,231,46,118,156,198,227,45,136,157,39,253,248,13,177,108,199,42,168,177,192,148,0,61,110,66,215,237,231,67,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 911 ") {
    byte_vec_t msg { 211,230,180,32 };
    byte_vec_t sig { 74,64,112,57,67,46,165,22,181,50,15,77,150,26,43,246,144,1,123,231,78,182,200,90,103,69,148,122,247,110,88,69,59,11,46,218,250,142,168,34,205,62,218,220,42,121,189,58,171,211,144,123,89,167,254,51,170,240,116,87,6,88,89,125 };
    byte_vec_t pk { 3,171,160,122,22,192,171,31,218,52,76,234,211,79,255,130,97,191,208,36,153,226,176,10,79,130,46,133,118,192,142,221,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 912 ") {
    byte_vec_t msg { 115,65,219,208 };
    byte_vec_t sig { 149,8,249,10,91,139,215,173,82,171,34,165,160,167,58,162,76,89,133,95,91,65,9,38,71,146,48,188,108,226,96,136,205,86,250,235,3,64,40,10,29,18,156,132,241,235,182,54,92,50,59,225,245,219,206,145,78,33,143,44,36,143,64,30 };
    byte_vec_t pk { 4,3,97,103,40,64,107,15,47,50,123,142,77,233,199,111,44,86,153,67,83,10,206,117,71,221,125,240,117,164,42,202,53,129,238,84,196,10,203,11,200,162,254,59,154,206,178,244,81,189,40,208,222,25,47,104,249,103,148,3,190,231,112,106,255 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 912 ") {
    byte_vec_t msg { 211,151,232,194 };
    byte_vec_t sig { 114,107,175,249,218,217,249,174,61,53,204,153,118,111,66,183,163,194,156,195,6,213,180,206,193,64,58,157,73,239,21,173,24,13,84,95,61,124,224,226,24,212,127,152,94,157,47,7,41,126,31,120,180,129,191,77,129,81,225,53,193,183,45,162 };
    byte_vec_t pk { 4,193,117,19,147,202,13,227,206,169,82,82,58,24,102,67,61,205,161,27,246,246,206,188,76,60,152,119,164,164,80,187,40,61,234,90,67,75,245,207,38,126,50,1,184,174,242,247,238,94,160,18,56,244,122,64,205,87,193,12,185,252,196,204,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 912 ") {
    byte_vec_t msg { 202,1,19,149 };
    byte_vec_t sig { 193,17,174,242,241,92,116,176,1,160,206,105,13,151,210,225,128,116,112,17,220,14,96,203,19,114,65,5,57,188,227,236,141,91,168,143,125,65,187,50,236,113,154,152,140,63,4,116,154,58,189,160,166,235,210,76,197,24,214,212,180,163,185,9 };
    byte_vec_t pk { 2,186,162,10,79,89,89,138,246,180,92,180,13,124,234,15,7,159,166,172,16,42,195,71,114,25,196,220,34,196,203,88,116 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 912 ") {
    byte_vec_t msg { 151,148,109,140 };
    byte_vec_t sig { 18,116,127,187,89,204,29,110,81,51,235,236,227,212,193,227,8,22,142,249,67,67,213,156,62,40,204,24,206,119,150,33,167,87,232,205,18,162,49,233,11,8,174,205,33,46,219,15,14,70,155,152,73,17,18,206,205,206,149,208,172,73,25,140 };
    byte_vec_t pk { 2,240,57,204,246,2,16,83,21,232,22,138,84,78,177,35,152,210,154,235,224,236,136,4,199,200,9,77,19,95,48,172,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 913 ") {
    byte_vec_t msg { 191,127,233,8 };
    byte_vec_t sig { 103,191,134,30,126,77,202,27,136,105,153,236,250,189,137,98,160,227,102,145,99,242,126,73,15,29,66,104,82,143,106,221,150,162,61,75,204,73,167,228,169,32,78,117,25,13,74,107,202,97,218,230,41,115,185,108,14,48,150,21,13,65,160,5 };
    byte_vec_t pk { 4,65,191,167,201,251,69,247,38,135,237,126,181,248,91,234,109,17,240,22,99,23,23,58,6,77,19,209,113,186,55,47,116,159,130,192,147,227,113,211,114,121,248,239,99,105,30,235,172,115,240,87,253,238,172,16,56,115,131,11,101,56,171,172,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 913 ") {
    byte_vec_t msg { 134,241,41,40 };
    byte_vec_t sig { 170,246,117,148,50,154,154,248,7,110,114,194,122,184,152,234,122,139,13,118,181,181,144,176,126,110,18,223,75,188,103,2,165,253,1,138,144,107,51,139,143,77,29,40,43,159,6,180,107,36,143,19,240,169,61,102,94,7,207,172,26,128,159,206 };
    byte_vec_t pk { 4,18,45,152,102,37,16,145,6,58,126,97,53,209,142,73,137,161,187,70,240,114,122,106,75,106,188,109,154,52,93,74,2,227,92,254,231,163,17,246,207,100,142,75,123,209,119,87,193,223,209,32,211,249,47,105,6,12,171,57,134,99,12,218,236 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 913 ") {
    byte_vec_t msg { 78,198,145,157 };
    byte_vec_t sig { 108,101,244,95,149,11,73,255,14,67,34,229,155,43,107,189,72,19,179,123,179,158,67,184,45,54,78,181,88,34,169,126,253,45,193,71,69,56,84,140,54,219,141,3,166,200,199,110,206,39,217,145,130,108,255,110,225,194,212,254,40,124,216,47 };
    byte_vec_t pk { 3,101,96,149,205,235,84,179,132,208,130,65,40,197,63,227,235,11,53,89,245,220,45,214,90,50,57,168,33,136,150,141,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 913 ") {
    byte_vec_t msg { 17,11,1,27 };
    byte_vec_t sig { 113,29,180,170,110,57,196,246,119,88,141,206,235,150,129,73,39,255,210,31,146,17,173,130,199,79,246,116,0,156,105,137,76,244,244,42,81,6,2,67,238,124,254,161,55,122,49,110,227,157,19,125,31,225,19,135,84,35,133,185,71,195,2,0 };
    byte_vec_t pk { 3,148,37,168,61,105,4,66,206,198,57,236,36,216,213,199,178,178,200,209,145,152,39,141,249,131,204,90,235,243,77,114,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 914 ") {
    byte_vec_t msg { 242,33,146,87 };
    byte_vec_t sig { 97,17,67,7,229,21,34,212,213,99,180,92,209,14,188,129,95,94,238,106,102,131,86,213,91,110,130,139,233,70,114,123,141,210,50,108,30,123,236,57,240,122,151,92,102,178,75,78,234,139,156,252,7,127,120,85,100,82,87,226,46,121,107,241 };
    byte_vec_t pk { 4,193,203,110,90,137,29,15,222,200,66,153,37,157,73,212,214,171,63,206,180,198,107,98,178,212,53,19,83,235,54,164,195,249,38,104,54,253,123,51,170,165,21,130,89,199,92,218,15,194,78,56,206,247,136,207,174,21,241,54,150,137,137,202,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 914 ") {
    byte_vec_t msg { 138,151,172,17 };
    byte_vec_t sig { 140,118,109,194,112,22,78,170,29,235,29,236,87,249,4,232,200,20,131,73,228,195,179,138,88,113,133,223,149,156,75,196,60,16,235,38,236,22,122,3,103,242,111,78,125,2,238,206,216,175,4,177,166,217,158,150,88,249,198,28,103,98,83,148 };
    byte_vec_t pk { 4,13,223,92,204,161,167,28,38,15,19,36,158,56,178,166,236,80,49,84,245,205,185,245,49,192,4,156,34,81,192,193,196,218,206,152,111,106,90,169,253,30,114,184,148,52,158,23,34,208,167,92,48,32,58,158,185,200,164,156,109,70,137,240,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 914 ") {
    byte_vec_t msg { 101,61,33,208 };
    byte_vec_t sig { 160,159,206,224,74,23,214,92,65,155,128,98,14,67,238,225,132,251,105,104,171,138,139,38,87,187,17,218,144,110,100,137,45,116,208,140,43,189,251,68,199,219,129,72,49,221,19,217,39,130,153,58,39,252,172,75,92,169,157,96,3,88,202,204 };
    byte_vec_t pk { 2,233,91,131,220,198,49,110,174,119,146,104,74,227,255,42,15,201,175,82,209,39,142,104,126,218,163,14,148,95,252,206,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 914 ") {
    byte_vec_t msg { 119,249,148,95 };
    byte_vec_t sig { 9,239,236,84,102,108,67,125,27,153,31,63,7,196,131,146,168,156,144,228,186,43,81,227,79,5,127,156,154,248,145,195,216,196,103,128,54,214,71,32,122,61,39,55,96,70,163,46,8,171,70,133,240,71,41,127,137,3,66,120,176,236,226,123 };
    byte_vec_t pk { 2,144,186,213,155,102,97,127,240,36,62,146,34,46,21,150,100,165,142,83,121,176,39,63,108,109,208,83,108,21,114,42,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 915 ") {
    byte_vec_t msg { 126,140,254,27 };
    byte_vec_t sig { 198,99,7,116,184,41,222,186,174,78,36,86,41,76,222,139,116,28,66,120,170,239,3,214,239,231,198,9,97,217,164,251,27,159,39,212,77,80,220,106,166,118,90,241,160,201,214,184,44,222,37,61,135,181,58,111,96,23,25,199,170,122,88,182 };
    byte_vec_t pk { 4,236,59,132,149,105,70,147,150,97,136,166,97,66,29,152,124,210,138,165,169,10,159,222,2,96,46,227,243,240,100,230,35,42,155,164,213,237,36,54,45,123,145,26,213,101,65,102,113,61,235,113,191,181,117,129,187,13,237,232,16,1,152,138,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 915 ") {
    byte_vec_t msg { 214,254,78,135 };
    byte_vec_t sig { 204,92,116,127,190,217,109,116,19,5,232,204,29,150,62,145,143,224,191,204,16,243,231,249,57,16,155,126,140,84,8,233,34,56,221,71,124,132,192,86,241,184,58,105,7,73,181,228,18,181,5,147,87,230,50,66,232,236,171,240,217,245,96,199 };
    byte_vec_t pk { 4,245,160,211,239,149,170,226,42,52,7,103,93,14,195,63,221,222,64,153,200,148,124,90,44,142,122,209,253,226,17,98,124,25,244,109,92,158,127,90,216,61,87,173,64,94,225,1,229,237,39,67,115,24,204,72,251,152,169,76,233,202,231,249,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 915 ") {
    byte_vec_t msg { 66,94,154,214 };
    byte_vec_t sig { 202,104,95,87,175,139,178,101,155,218,41,36,92,80,22,63,46,14,138,16,77,142,13,211,129,46,181,253,219,209,1,200,53,132,219,134,186,214,17,62,238,119,250,220,90,125,45,211,45,110,22,116,202,181,30,162,132,20,161,67,167,12,77,158 };
    byte_vec_t pk { 2,34,23,2,217,187,207,239,213,145,173,172,55,213,46,158,90,146,208,196,101,116,93,232,46,100,76,202,111,170,185,69,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 915 ") {
    byte_vec_t msg { 141,203,54,211 };
    byte_vec_t sig { 84,100,255,234,12,43,144,103,248,175,129,80,72,26,112,44,208,35,201,108,74,219,135,84,90,166,205,15,90,40,241,175,94,31,96,214,59,50,147,160,76,198,185,160,214,36,180,84,175,67,32,197,3,161,243,189,140,154,99,185,58,166,206,184 };
    byte_vec_t pk { 2,158,247,7,5,37,243,161,123,190,147,223,30,5,148,159,215,186,87,43,179,122,90,121,31,2,205,37,92,158,228,136,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 916 ") {
    byte_vec_t msg { 187,48,48,121 };
    byte_vec_t sig { 70,152,229,249,233,57,185,29,212,155,170,4,237,205,77,9,10,18,128,110,6,252,88,199,68,30,220,177,114,25,244,58,117,106,43,129,129,244,113,27,166,157,192,182,73,133,215,73,189,227,208,149,73,183,149,107,116,177,128,86,205,101,163,219 };
    byte_vec_t pk { 4,7,80,197,244,167,148,231,68,185,82,203,12,66,8,100,109,157,155,111,246,5,85,48,217,123,69,40,136,67,23,112,209,100,211,167,105,21,229,184,64,246,29,59,82,117,83,107,145,160,83,116,25,104,46,81,242,227,152,109,6,197,248,98,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 916 ") {
    byte_vec_t msg { 85,66,88,187 };
    byte_vec_t sig { 245,17,83,18,19,75,107,200,43,44,49,188,27,180,57,231,100,54,81,146,236,56,240,116,25,234,174,179,193,67,27,164,244,195,89,167,146,211,90,77,148,118,196,166,207,203,176,11,252,130,228,138,93,141,139,161,46,240,217,227,252,148,122,25 };
    byte_vec_t pk { 4,194,27,79,5,58,251,97,233,200,199,245,5,238,191,235,221,12,240,236,254,0,73,40,194,188,33,93,16,215,139,128,162,179,153,31,128,128,244,13,6,164,14,46,164,214,41,1,185,54,160,209,104,91,7,77,149,9,6,233,247,135,196,37,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 916 ") {
    byte_vec_t msg { 117,190,40,190 };
    byte_vec_t sig { 57,115,77,80,104,98,229,163,188,24,247,72,67,73,46,60,152,28,132,60,33,39,118,10,12,77,147,45,22,172,161,209,233,49,134,50,54,180,10,199,149,33,144,140,255,246,225,192,200,175,135,115,122,40,84,207,58,85,59,27,106,73,75,204 };
    byte_vec_t pk { 2,46,76,95,112,251,149,201,194,168,121,150,186,34,140,87,234,97,192,169,92,158,245,21,2,106,77,223,167,215,218,134,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 916 ") {
    byte_vec_t msg { 234,145,93,6 };
    byte_vec_t sig { 138,182,48,72,158,183,24,59,149,249,6,190,127,232,57,169,232,99,254,199,187,87,164,228,245,46,35,174,180,180,91,88,20,177,11,226,114,34,228,11,75,163,188,245,254,240,33,155,126,51,223,42,132,45,59,234,28,177,28,144,178,30,255,224 };
    byte_vec_t pk { 2,75,193,36,45,65,76,167,132,194,246,64,179,83,136,4,81,158,38,252,88,219,251,159,141,25,58,105,180,234,105,129,115 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 917 ") {
    byte_vec_t msg { 15,5,42,63 };
    byte_vec_t sig { 176,64,139,80,234,58,144,247,56,246,194,11,252,95,119,209,192,121,130,64,241,8,75,153,26,197,131,6,214,202,219,169,129,232,46,219,65,74,25,102,63,113,96,51,23,194,91,184,253,123,68,58,14,49,221,243,198,164,36,77,61,3,233,176 };
    byte_vec_t pk { 4,68,29,80,47,57,8,175,25,52,189,28,160,142,79,58,188,62,29,185,243,229,15,155,191,123,91,126,67,81,94,199,141,236,150,227,189,25,156,234,243,211,120,158,157,17,224,140,3,90,180,233,86,62,66,168,90,21,213,95,172,103,222,149,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 917 ") {
    byte_vec_t msg { 225,89,5,53 };
    byte_vec_t sig { 196,135,217,168,168,93,133,57,51,224,150,123,126,56,153,8,34,158,205,49,63,239,47,181,214,215,226,254,227,147,186,24,153,29,30,252,29,190,225,67,19,111,91,27,136,78,217,175,240,55,2,135,111,60,231,251,132,81,7,146,217,123,185,91 };
    byte_vec_t pk { 4,24,224,9,20,168,199,39,246,154,88,147,46,173,96,205,37,9,181,26,8,111,40,250,213,125,170,119,189,249,146,215,15,159,48,247,246,218,115,1,195,156,101,103,137,40,29,164,177,162,242,149,255,112,244,134,187,94,78,175,41,222,137,221,191 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 917 ") {
    byte_vec_t msg { 231,90,90,143 };
    byte_vec_t sig { 72,123,211,233,147,129,179,169,128,105,223,33,43,70,146,93,120,234,212,152,18,81,159,255,168,131,0,99,213,116,8,176,141,145,24,71,15,26,90,52,208,1,138,13,53,88,102,126,202,248,254,207,253,28,107,65,206,155,228,165,209,40,175,116 };
    byte_vec_t pk { 3,181,76,137,101,207,169,153,29,7,62,39,159,41,222,80,82,231,118,81,114,193,117,102,128,61,184,199,157,32,181,229,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 917 ") {
    byte_vec_t msg { 68,207,240,134 };
    byte_vec_t sig { 47,239,46,104,198,74,160,31,178,181,162,96,69,136,139,112,114,200,145,93,128,147,22,136,219,107,69,100,154,174,244,166,3,39,195,64,197,134,187,213,240,60,88,64,75,33,28,8,210,102,212,211,26,250,32,27,135,133,122,98,184,170,135,69 };
    byte_vec_t pk { 3,138,212,250,244,237,158,179,139,58,138,220,20,82,152,69,0,190,255,207,215,137,187,105,175,247,138,248,51,217,69,231,126 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 918 ") {
    byte_vec_t msg { 170,211,13,211 };
    byte_vec_t sig { 146,230,18,161,8,134,121,209,251,193,250,215,100,179,204,125,43,88,103,106,13,118,87,119,141,251,208,134,157,143,246,98,184,80,103,246,156,47,15,76,41,106,126,171,161,139,33,61,182,13,32,55,101,181,76,76,112,224,58,58,40,146,26,143 };
    byte_vec_t pk { 4,6,131,138,86,64,170,213,86,215,195,138,35,98,106,69,113,82,77,89,64,99,178,149,42,231,14,212,188,164,36,84,88,92,150,132,11,10,138,186,34,229,174,196,113,22,44,78,128,118,198,241,106,25,241,93,198,235,242,66,95,9,29,18,194 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 918 ") {
    byte_vec_t msg { 46,70,14,78 };
    byte_vec_t sig { 13,183,154,152,215,141,114,13,91,64,65,160,60,156,144,230,147,178,247,175,101,143,251,0,115,116,252,156,87,202,117,194,156,159,143,222,106,78,223,118,227,72,93,121,86,59,122,157,178,56,23,103,122,66,189,154,244,25,28,171,6,37,175,19 };
    byte_vec_t pk { 4,146,49,93,112,195,62,209,133,192,25,67,11,1,92,207,25,88,227,182,233,167,190,183,134,127,131,230,179,249,133,140,62,125,184,29,7,54,205,248,142,120,17,50,182,158,13,187,171,176,12,174,19,229,130,147,12,255,27,135,185,145,145,99,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 918 ") {
    byte_vec_t msg { 241,104,50,123 };
    byte_vec_t sig { 175,117,89,51,237,88,80,3,144,207,20,90,236,208,181,225,80,81,159,41,197,105,29,160,180,4,57,104,78,131,143,228,59,148,160,135,252,153,232,128,18,134,92,209,84,108,197,198,77,189,110,75,27,7,75,85,250,77,38,72,209,108,222,55 };
    byte_vec_t pk { 2,189,208,70,206,190,136,125,147,68,28,47,149,222,93,34,166,183,16,128,78,47,224,64,143,37,23,4,4,230,153,127,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 918 ") {
    byte_vec_t msg { 17,36,134,24 };
    byte_vec_t sig { 137,231,85,244,236,194,112,229,103,53,24,180,66,162,39,75,215,54,226,212,21,36,224,188,88,203,237,127,17,169,4,158,105,153,83,100,55,46,157,205,149,243,44,188,125,83,250,240,224,165,161,237,136,53,202,100,32,87,96,78,243,193,149,133 };
    byte_vec_t pk { 2,55,89,164,197,141,38,102,229,143,67,180,167,63,254,200,216,184,42,149,171,87,214,205,74,114,155,71,84,75,227,115,57 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 919 ") {
    byte_vec_t msg { 181,103,138,17 };
    byte_vec_t sig { 247,12,91,78,47,246,81,17,215,45,244,104,132,146,208,33,145,145,76,246,145,132,221,50,59,174,74,178,235,126,162,204,67,199,233,246,96,10,59,145,231,38,157,34,121,11,196,117,205,145,17,135,178,46,189,182,207,202,75,115,98,76,243,231 };
    byte_vec_t pk { 4,215,133,73,105,228,107,178,252,131,244,85,109,165,170,81,47,171,56,31,3,159,121,130,5,225,120,185,183,57,53,128,94,1,138,193,227,121,119,234,120,179,64,21,1,85,44,24,122,151,51,180,255,114,69,137,95,191,81,44,64,166,103,221,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 919 ") {
    byte_vec_t msg { 147,37,178,29 };
    byte_vec_t sig { 105,210,36,134,119,87,238,3,246,164,231,129,136,151,4,172,223,232,247,218,223,15,238,158,102,252,25,120,36,215,167,51,148,94,179,58,133,240,246,101,20,133,87,17,224,144,46,81,240,226,207,193,84,134,6,39,84,130,216,129,20,35,78,57 };
    byte_vec_t pk { 4,215,163,16,82,3,60,191,100,247,60,64,198,68,42,165,37,48,159,129,132,50,255,253,28,57,1,164,127,186,96,47,44,56,235,119,120,99,172,95,207,221,179,174,37,115,54,239,95,28,69,38,56,118,207,68,179,134,159,129,215,201,113,53,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 919 ") {
    byte_vec_t msg { 96,191,124,58 };
    byte_vec_t sig { 217,32,127,66,74,80,222,113,198,19,166,61,209,107,184,245,134,98,180,142,160,84,73,64,115,119,233,166,154,215,185,8,196,247,77,104,217,208,60,168,78,68,31,140,188,37,33,47,20,176,52,80,58,114,163,30,101,84,204,221,125,124,152,148 };
    byte_vec_t pk { 3,243,150,149,83,92,167,18,32,130,103,120,113,88,10,55,205,26,25,139,94,114,126,29,27,54,213,149,117,235,131,241,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 919 ") {
    byte_vec_t msg { 132,215,92,197 };
    byte_vec_t sig { 82,56,147,223,19,20,125,152,78,94,180,254,202,55,173,192,203,191,120,116,234,226,16,116,75,177,215,187,26,179,140,9,221,27,91,221,218,147,38,255,12,18,16,221,73,236,8,56,55,114,253,25,0,134,91,89,32,164,36,90,145,67,132,62 };
    byte_vec_t pk { 2,200,143,228,179,9,202,70,206,121,15,149,31,96,109,45,100,105,121,144,117,179,214,177,127,203,136,198,184,57,242,95,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 920 ") {
    byte_vec_t msg { 188,156,63,151 };
    byte_vec_t sig { 167,77,99,173,74,3,5,233,118,105,180,151,152,187,18,58,46,33,85,214,233,249,14,27,194,179,225,166,227,6,32,12,115,24,137,168,13,210,49,181,145,158,222,222,80,222,70,117,167,55,119,112,58,54,123,160,223,178,202,184,198,232,206,145 };
    byte_vec_t pk { 4,215,41,159,188,254,114,99,155,71,50,28,148,68,211,9,10,56,32,118,25,152,255,221,177,124,43,16,110,206,47,107,81,185,6,152,143,77,225,131,58,193,43,145,37,243,191,112,150,20,114,156,140,52,149,90,116,239,120,242,25,254,135,212,251 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 920 ") {
    byte_vec_t msg { 105,76,180,230 };
    byte_vec_t sig { 219,179,192,175,224,75,229,48,137,83,107,211,148,121,193,63,212,81,163,209,157,140,67,163,28,145,53,155,51,97,190,36,153,215,55,91,228,3,149,125,69,193,19,44,137,20,2,168,107,192,29,218,190,93,111,80,137,132,164,178,114,127,78,74 };
    byte_vec_t pk { 4,107,198,164,118,91,84,96,224,170,236,117,170,176,211,160,128,81,120,241,252,231,174,207,53,9,201,203,182,54,189,81,26,70,64,93,89,26,167,132,125,206,10,140,248,251,92,121,184,197,118,232,45,235,252,125,79,92,25,92,162,203,1,127,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 920 ") {
    byte_vec_t msg { 91,185,6,44 };
    byte_vec_t sig { 8,126,229,84,124,79,199,165,0,145,180,130,77,54,167,189,98,199,149,225,155,125,210,34,183,19,136,156,152,245,141,229,243,9,182,46,18,163,10,192,213,40,47,173,45,131,84,40,23,186,67,38,165,193,131,113,127,130,219,74,72,123,105,31 };
    byte_vec_t pk { 2,112,115,27,158,110,142,140,116,35,248,215,72,1,133,240,224,116,79,110,112,65,40,182,219,187,215,167,58,64,116,203,233 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 920 ") {
    byte_vec_t msg { 118,109,159,27 };
    byte_vec_t sig { 132,255,34,139,195,53,101,46,222,219,215,250,73,18,193,62,184,168,140,99,92,223,149,149,159,214,134,208,243,73,19,247,102,246,112,130,52,179,195,122,161,221,207,76,46,234,175,188,9,79,6,51,38,10,90,73,200,58,123,86,163,78,210,26 };
    byte_vec_t pk { 3,189,101,193,68,240,89,129,106,36,106,225,64,6,191,120,135,252,90,199,131,133,28,65,84,1,95,234,210,86,99,40,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 921 ") {
    byte_vec_t msg { 4,97,26,168 };
    byte_vec_t sig { 26,138,46,5,83,144,198,29,240,202,110,201,45,142,97,230,248,85,161,119,160,15,224,214,21,216,146,41,245,70,219,47,12,158,7,176,21,95,214,59,242,77,55,59,232,51,76,4,222,212,104,89,212,49,248,239,88,143,168,181,150,169,18,167 };
    byte_vec_t pk { 4,26,40,32,44,199,33,103,167,45,184,93,17,59,117,132,198,253,13,49,66,60,200,131,148,236,6,107,218,148,173,186,46,177,219,26,207,145,246,113,173,10,242,249,3,232,186,4,194,215,241,219,73,111,3,41,37,162,13,204,120,134,5,246,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 921 ") {
    byte_vec_t msg { 225,31,138,213 };
    byte_vec_t sig { 245,18,12,103,174,118,231,40,58,238,112,141,18,73,178,210,82,91,194,4,93,172,114,107,1,100,25,156,15,231,2,117,31,112,8,93,242,81,226,182,166,117,186,36,153,193,146,171,15,59,69,11,85,81,234,173,31,123,238,58,57,72,125,80 };
    byte_vec_t pk { 4,94,0,234,146,167,18,219,80,127,65,163,93,88,101,44,200,0,175,111,30,221,236,45,207,227,28,239,157,190,19,34,54,123,103,34,161,98,22,68,211,184,145,242,189,208,233,130,224,199,94,37,249,229,131,171,237,165,64,111,117,92,253,91,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 921 ") {
    byte_vec_t msg { 4,117,56,196 };
    byte_vec_t sig { 171,11,225,233,3,226,238,59,235,203,144,11,236,138,169,253,240,169,182,150,0,194,218,168,115,220,88,113,210,68,120,185,163,102,21,239,141,120,22,73,227,200,114,188,87,58,127,129,104,25,124,189,2,31,53,228,169,139,35,122,125,114,71,202 };
    byte_vec_t pk { 2,208,138,112,176,84,248,140,231,252,53,118,142,251,174,11,198,118,40,116,169,37,96,173,77,20,205,86,243,219,79,85,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 921 ") {
    byte_vec_t msg { 11,61,81,189 };
    byte_vec_t sig { 205,108,155,5,112,223,150,33,255,61,201,28,228,220,187,137,65,248,203,197,234,215,255,191,226,106,25,119,114,221,43,234,189,235,83,170,244,169,195,229,181,69,29,98,203,105,182,71,48,15,36,129,143,111,105,172,77,42,139,62,119,144,75,223 };
    byte_vec_t pk { 2,226,110,218,91,87,124,187,169,160,83,234,254,35,231,206,50,176,14,143,48,247,237,165,40,82,94,77,251,110,233,230,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 922 ") {
    byte_vec_t msg { 175,0,245,224 };
    byte_vec_t sig { 141,106,169,67,182,167,159,38,35,94,14,255,169,86,51,5,43,52,202,241,26,105,157,93,203,115,25,60,131,75,242,113,165,220,33,13,103,116,41,98,74,73,76,157,114,224,39,235,171,237,84,5,0,180,68,53,137,50,185,135,15,140,16,213 };
    byte_vec_t pk { 4,102,188,213,63,165,242,253,147,96,210,34,1,170,245,89,4,74,187,120,32,114,188,186,103,54,220,137,52,141,120,98,228,19,67,237,139,154,109,56,180,35,146,56,135,218,144,17,220,91,185,89,26,217,30,59,153,57,251,220,181,164,2,85,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 922 ") {
    byte_vec_t msg { 84,107,251,32 };
    byte_vec_t sig { 15,0,247,54,206,57,146,177,15,5,29,88,129,50,102,42,164,145,210,131,207,173,47,172,0,216,93,255,191,96,233,210,200,220,58,64,7,53,147,210,254,123,18,188,146,191,22,206,165,58,147,121,106,218,131,23,231,12,187,5,90,2,77,186 };
    byte_vec_t pk { 4,133,45,86,227,146,218,239,203,29,22,139,104,229,238,18,114,128,217,219,93,162,46,69,17,154,152,60,91,98,229,95,141,141,238,114,99,63,226,235,112,24,1,171,86,84,166,27,158,227,241,56,182,242,231,111,222,213,120,114,231,96,150,137,224 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 922 ") {
    byte_vec_t msg { 151,147,157,228 };
    byte_vec_t sig { 228,44,93,212,29,34,24,77,245,92,25,108,136,1,126,81,32,45,77,113,44,124,21,33,106,169,118,183,222,11,241,116,181,79,38,109,103,32,139,158,38,247,248,211,25,229,127,92,37,50,73,204,105,36,58,139,98,248,89,227,17,87,213,167 };
    byte_vec_t pk { 3,218,225,63,72,229,14,97,217,195,118,242,48,153,137,243,127,33,230,212,250,200,82,182,75,183,94,24,95,184,130,31,8 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 922 ") {
    byte_vec_t msg { 30,115,162,193 };
    byte_vec_t sig { 104,211,51,104,188,79,196,203,28,70,64,219,84,194,162,184,193,112,218,36,67,128,93,131,196,40,95,73,71,110,244,205,44,227,166,15,118,213,82,96,252,55,146,53,118,59,209,147,91,122,168,18,156,138,147,116,179,136,88,153,92,80,76,6 };
    byte_vec_t pk { 2,114,55,241,241,206,110,203,91,56,214,91,39,212,99,188,12,56,198,100,187,16,163,13,153,1,125,143,77,216,239,175,117 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 923 ") {
    byte_vec_t msg { 249,3,202,105 };
    byte_vec_t sig { 3,149,213,76,72,19,58,213,80,240,53,152,209,232,35,247,45,56,200,133,162,164,9,141,177,110,123,212,196,214,221,219,48,179,156,127,250,228,170,26,102,232,54,165,212,157,140,137,72,115,13,78,67,184,186,155,6,120,225,39,127,10,150,117 };
    byte_vec_t pk { 4,14,172,207,244,33,65,114,157,227,219,129,109,119,11,71,232,41,100,47,116,129,30,25,218,104,102,187,176,52,224,120,127,88,1,137,222,139,234,67,129,59,89,74,88,18,146,181,42,212,69,164,198,35,248,209,182,59,209,175,76,174,95,95,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 923 ") {
    byte_vec_t msg { 232,26,218,218 };
    byte_vec_t sig { 239,15,176,219,173,10,179,205,122,46,166,121,185,225,136,241,169,213,1,163,154,173,135,253,65,208,220,120,226,26,231,77,5,23,185,142,143,238,108,212,149,149,80,161,90,200,222,100,201,65,55,138,48,202,16,25,176,209,154,158,110,159,161,255 };
    byte_vec_t pk { 4,152,200,209,89,89,233,15,179,251,96,179,146,69,54,246,20,211,14,10,199,223,63,39,162,248,217,146,52,248,20,104,159,135,139,140,191,195,7,53,204,101,203,168,43,29,48,57,183,71,18,167,127,245,31,130,36,216,98,125,68,129,198,168,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 923 ") {
    byte_vec_t msg { 35,55,147,28 };
    byte_vec_t sig { 235,238,43,131,159,219,99,102,137,127,78,228,46,187,159,220,254,192,125,167,125,200,225,45,33,197,195,27,86,10,241,57,188,215,195,27,71,244,187,138,204,13,195,88,99,186,19,219,29,181,200,109,103,8,15,2,163,47,11,27,68,255,46,143 };
    byte_vec_t pk { 3,102,118,229,15,180,42,143,26,29,77,53,225,159,181,17,122,126,7,125,109,214,73,91,229,156,177,140,35,19,237,250,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 923 ") {
    byte_vec_t msg { 92,123,94,108 };
    byte_vec_t sig { 111,109,3,217,6,45,213,239,86,177,223,125,116,120,192,69,254,4,77,150,93,233,5,44,124,99,245,214,23,101,182,251,14,109,110,56,239,199,204,17,12,129,145,140,21,126,225,170,74,179,248,167,155,227,164,210,16,84,188,227,135,25,72,25 };
    byte_vec_t pk { 3,5,161,89,226,45,143,251,50,199,44,60,109,113,217,193,212,207,194,22,16,176,56,5,73,184,120,199,216,202,59,122,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 924 ") {
    byte_vec_t msg { 144,152,119,221 };
    byte_vec_t sig { 109,131,213,253,171,172,210,188,163,197,200,182,55,192,26,119,196,237,243,6,25,70,161,180,166,139,194,110,52,201,95,114,203,27,32,93,236,2,3,147,156,107,146,24,235,253,113,140,29,119,99,41,60,239,19,72,139,98,134,63,240,135,107,99 };
    byte_vec_t pk { 4,154,141,250,102,150,179,102,66,98,222,106,19,174,224,147,28,175,238,90,238,166,199,169,40,94,126,125,146,33,57,85,198,35,120,173,243,173,199,139,200,105,7,39,49,80,120,35,86,236,146,253,198,172,101,104,5,104,115,133,209,65,62,194,132 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 924 ") {
    byte_vec_t msg { 101,139,73,41 };
    byte_vec_t sig { 1,230,64,186,225,76,215,117,145,43,155,47,93,83,246,50,248,158,153,111,126,241,40,71,9,32,3,65,137,62,109,4,219,207,35,97,234,222,0,102,88,15,31,224,93,92,108,29,9,170,103,100,75,124,152,94,118,239,223,206,156,62,128,195 };
    byte_vec_t pk { 4,134,191,151,27,104,222,189,46,179,119,196,224,83,64,34,62,250,220,175,63,58,42,112,181,25,24,132,24,24,126,87,0,46,95,203,121,216,130,77,137,14,131,128,103,154,99,186,22,33,138,60,223,194,201,109,107,244,193,74,183,19,245,221,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 924 ") {
    byte_vec_t msg { 53,254,120,145 };
    byte_vec_t sig { 126,195,244,125,214,201,87,168,123,252,253,224,220,115,117,70,227,100,210,49,5,155,193,81,225,154,148,140,234,174,88,93,45,191,146,217,217,239,234,227,174,188,196,45,47,192,72,167,224,248,115,57,90,229,32,233,63,88,0,193,214,93,215,79 };
    byte_vec_t pk { 2,145,71,217,76,200,112,117,176,50,74,159,85,104,168,200,109,124,17,46,37,255,79,176,43,34,203,127,173,141,219,116,112 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 924 ") {
    byte_vec_t msg { 60,114,196,255 };
    byte_vec_t sig { 171,60,254,187,57,25,135,194,166,40,126,38,180,199,201,192,150,18,205,42,192,84,200,1,217,15,142,212,37,35,208,82,124,41,99,62,31,122,194,69,72,124,153,238,159,64,174,68,51,79,179,80,101,192,9,232,248,116,33,207,212,68,101,41 };
    byte_vec_t pk { 2,90,81,248,7,50,9,45,210,110,139,24,179,19,112,182,198,186,127,51,222,22,105,236,0,79,210,201,209,168,157,164,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 925 ") {
    byte_vec_t msg { 197,206,126,119 };
    byte_vec_t sig { 10,129,136,206,134,172,18,156,111,176,159,220,244,41,251,93,181,87,147,164,6,200,237,212,142,212,85,87,79,189,79,123,84,184,225,231,42,1,15,148,245,54,145,252,95,235,14,176,59,169,52,93,17,115,136,170,147,169,103,102,189,65,115,100 };
    byte_vec_t pk { 4,7,247,182,204,74,240,28,244,92,101,90,239,37,86,17,19,50,237,86,166,253,234,151,160,160,196,156,5,72,212,212,102,41,190,227,24,127,50,209,242,78,8,177,186,148,202,109,199,115,52,243,196,187,133,248,226,95,19,114,242,51,199,220,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 925 ") {
    byte_vec_t msg { 32,37,75,153 };
    byte_vec_t sig { 165,148,245,73,249,236,130,88,137,97,43,119,69,84,87,2,134,55,16,221,37,34,157,13,207,149,160,27,224,164,51,168,61,156,212,222,119,209,17,71,0,82,50,228,90,209,137,46,54,174,152,115,196,214,13,40,11,241,196,103,238,134,71,45 };
    byte_vec_t pk { 4,159,91,185,242,84,187,97,220,169,248,59,63,19,184,7,36,171,64,124,40,165,84,164,101,43,231,91,151,116,183,140,123,29,118,35,204,82,117,12,21,92,11,231,243,146,81,82,106,182,65,38,22,120,114,0,131,140,189,46,24,105,154,103,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 925 ") {
    byte_vec_t msg { 19,35,202,170 };
    byte_vec_t sig { 177,84,152,66,242,244,132,249,197,114,63,112,159,186,185,74,53,74,8,254,89,151,58,205,247,181,89,132,25,106,214,238,116,166,83,145,106,187,180,131,206,126,13,127,189,99,247,175,160,253,134,137,43,232,32,157,192,102,186,93,232,41,61,138 };
    byte_vec_t pk { 2,51,6,112,235,243,230,240,58,28,87,70,145,176,144,240,100,133,195,122,59,87,166,40,218,142,68,51,18,101,159,46,19 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 925 ") {
    byte_vec_t msg { 240,153,58,212 };
    byte_vec_t sig { 127,124,254,156,192,66,73,240,93,127,28,15,103,182,56,16,149,107,163,184,220,21,184,67,219,205,152,101,85,143,157,49,163,227,160,24,106,11,77,46,129,93,232,68,217,122,148,110,146,50,154,131,74,21,172,178,139,165,200,129,103,133,237,115 };
    byte_vec_t pk { 3,61,118,79,41,150,35,236,40,2,223,56,246,49,186,92,204,186,56,58,96,223,83,151,19,153,133,119,117,62,75,114,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 926 ") {
    byte_vec_t msg { 64,61,2,119 };
    byte_vec_t sig { 11,184,47,75,62,250,82,160,16,71,87,148,202,223,168,159,65,205,216,196,86,159,194,240,178,240,238,123,205,116,148,210,12,81,163,208,137,100,236,218,246,166,188,153,167,69,226,73,238,160,135,124,187,157,161,218,130,112,126,225,231,95,70,54 };
    byte_vec_t pk { 4,243,144,170,109,100,34,16,63,55,17,95,210,8,166,83,89,187,232,22,183,15,67,233,34,201,242,16,83,246,28,19,129,73,39,249,69,203,64,136,88,123,236,61,85,111,21,104,62,214,162,12,67,4,92,127,113,216,230,137,13,166,207,136,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 926 ") {
    byte_vec_t msg { 27,35,156,65 };
    byte_vec_t sig { 205,32,212,38,99,255,150,71,213,64,235,83,118,218,160,19,164,103,125,25,44,160,72,228,193,246,236,194,120,42,195,197,242,0,124,213,178,150,141,126,160,6,143,10,51,7,167,249,74,137,20,148,230,37,209,232,14,90,210,78,234,49,55,75 };
    byte_vec_t pk { 4,226,151,137,206,234,241,98,244,235,244,217,75,68,63,183,63,78,62,231,17,214,215,30,19,205,159,130,249,188,166,143,184,230,53,10,55,128,253,159,130,121,254,131,247,18,100,138,150,161,142,148,66,121,6,195,85,39,22,122,176,132,204,2,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 926 ") {
    byte_vec_t msg { 33,226,21,248 };
    byte_vec_t sig { 217,5,37,190,2,187,232,197,146,81,78,46,49,201,193,127,132,126,182,88,215,41,194,102,244,197,82,102,140,25,112,126,59,165,244,150,139,228,179,23,198,58,246,38,157,209,3,90,213,219,57,70,23,20,46,129,228,242,134,196,246,80,137,16 };
    byte_vec_t pk { 2,43,35,66,250,15,181,145,74,83,231,139,9,173,68,153,110,186,60,157,232,54,126,13,161,44,19,206,13,62,182,96,71 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 926 ") {
    byte_vec_t msg { 27,12,135,33 };
    byte_vec_t sig { 122,92,211,103,66,191,102,241,29,254,214,219,24,116,61,207,145,99,199,35,7,121,57,95,234,108,116,158,179,57,24,161,72,46,96,156,94,168,218,200,2,61,45,208,109,66,251,183,118,212,220,78,0,122,11,64,4,107,52,107,96,179,173,48 };
    byte_vec_t pk { 2,152,36,132,114,171,13,32,216,218,211,158,217,17,48,131,54,46,195,177,78,45,111,64,1,246,239,32,154,84,220,72,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 927 ") {
    byte_vec_t msg { 51,116,100,222 };
    byte_vec_t sig { 212,10,138,86,210,141,135,32,124,93,221,7,112,233,17,247,15,12,137,61,160,160,19,194,176,248,205,38,166,240,142,119,186,71,3,184,195,58,38,155,64,10,65,102,132,83,250,60,2,44,39,18,250,139,181,92,199,253,162,18,34,185,2,113 };
    byte_vec_t pk { 4,0,246,34,16,142,132,85,130,138,41,182,1,249,21,183,252,183,64,242,26,201,196,167,68,89,106,176,42,171,195,188,236,63,152,219,176,237,47,240,226,30,145,129,241,108,208,197,42,43,240,111,18,151,94,46,2,49,49,112,143,185,241,134,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 927 ") {
    byte_vec_t msg { 14,104,178,208 };
    byte_vec_t sig { 114,142,70,75,151,220,35,173,61,187,137,243,174,93,144,24,50,136,250,76,229,90,159,223,54,149,142,175,9,41,65,219,87,118,197,17,210,44,41,92,204,41,123,220,45,78,179,111,223,248,103,140,32,110,134,122,27,241,217,26,246,134,235,218 };
    byte_vec_t pk { 4,244,152,95,66,145,105,124,247,219,38,47,166,105,223,132,57,9,5,161,68,64,214,173,60,101,111,128,163,78,14,179,116,177,79,145,59,123,156,254,161,119,14,6,105,174,75,173,178,106,182,163,249,66,92,233,241,196,162,243,117,207,38,245,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 927 ") {
    byte_vec_t msg { 148,130,158,76 };
    byte_vec_t sig { 243,144,83,175,33,125,255,183,98,228,224,127,176,105,205,227,143,141,215,0,164,194,73,37,43,75,121,26,116,88,96,151,101,66,25,37,79,89,0,82,67,219,165,172,175,22,103,84,105,122,218,34,107,44,102,148,134,63,0,122,34,246,195,41 };
    byte_vec_t pk { 2,217,164,47,234,255,41,157,165,139,127,214,124,178,203,74,156,85,230,78,155,193,247,126,145,250,57,218,66,46,115,211,20 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 927 ") {
    byte_vec_t msg { 62,84,166,50 };
    byte_vec_t sig { 4,134,167,31,103,249,142,90,189,130,167,220,248,91,17,240,122,33,210,30,15,147,110,227,242,34,94,5,181,42,44,131,72,38,95,217,37,193,91,25,100,110,52,122,26,110,251,92,148,34,123,214,222,18,137,188,181,236,40,32,61,240,71,100 };
    byte_vec_t pk { 2,74,235,41,97,237,174,78,72,165,242,253,225,240,148,135,230,146,111,248,187,254,89,61,234,89,91,114,201,40,39,227,158 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 928 ") {
    byte_vec_t msg { 130,19,138,7 };
    byte_vec_t sig { 29,203,10,56,198,109,209,18,84,140,170,131,77,184,91,162,228,219,80,225,100,208,3,193,46,130,171,77,150,178,103,41,3,251,219,32,114,225,202,239,17,234,222,94,3,44,182,28,63,153,82,205,163,198,107,50,17,87,87,222,161,44,221,71 };
    byte_vec_t pk { 4,42,255,200,123,123,222,46,157,159,47,82,3,3,215,173,25,40,44,43,139,42,177,231,203,86,154,223,132,225,170,190,84,133,237,188,83,110,12,74,248,182,174,197,96,27,53,232,62,146,44,201,87,56,48,138,71,89,42,186,1,214,38,251,87 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 928 ") {
    byte_vec_t msg { 99,109,114,89 };
    byte_vec_t sig { 2,140,175,28,48,83,246,151,201,241,24,162,175,223,254,113,194,91,133,94,0,101,156,135,180,248,40,159,227,204,197,149,81,106,207,213,174,57,26,52,39,200,19,176,56,134,234,26,104,43,84,134,244,244,71,20,198,212,120,191,167,174,219,2 };
    byte_vec_t pk { 4,195,126,68,176,224,26,119,167,13,98,33,233,127,4,56,221,23,201,162,173,72,138,242,12,12,19,153,65,73,105,19,10,254,22,128,250,212,143,161,12,69,245,4,64,93,57,198,254,11,174,184,101,25,12,255,201,32,231,64,253,201,21,183,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 928 ") {
    byte_vec_t msg { 234,25,62,239 };
    byte_vec_t sig { 127,213,105,83,57,234,22,63,38,106,102,202,184,128,11,2,102,139,118,101,190,31,202,17,217,15,231,243,194,206,93,111,29,107,168,216,153,234,218,163,113,237,245,39,165,146,55,226,244,165,199,65,79,241,96,186,9,86,196,236,26,69,231,42 };
    byte_vec_t pk { 2,17,117,247,245,39,92,90,171,72,16,220,74,234,73,32,228,172,241,207,182,86,193,101,190,158,245,44,129,190,198,46,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 928 ") {
    byte_vec_t msg { 241,55,202,14 };
    byte_vec_t sig { 79,55,97,82,167,205,46,186,119,82,187,104,153,151,226,222,44,70,206,238,136,109,209,46,153,225,165,126,51,91,187,243,216,168,36,243,213,77,225,247,198,45,181,189,203,228,38,229,195,164,47,196,110,40,106,11,85,161,154,125,12,149,136,251 };
    byte_vec_t pk { 3,75,240,56,172,59,7,168,96,27,24,195,138,99,65,239,187,134,51,7,90,86,41,68,124,236,220,47,90,114,54,104,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 929 ") {
    byte_vec_t msg { 235,219,114,105 };
    byte_vec_t sig { 154,133,149,81,190,74,108,153,94,152,175,108,144,190,255,73,226,86,234,200,152,239,193,135,237,236,43,120,25,141,25,209,207,236,53,33,56,249,160,67,241,161,45,204,199,60,206,171,20,170,198,167,20,219,62,129,122,4,213,107,182,165,151,129 };
    byte_vec_t pk { 4,234,71,142,207,134,243,170,245,250,163,85,81,252,118,156,203,226,249,97,153,225,167,119,113,4,58,237,12,126,150,192,63,253,74,79,110,41,254,34,190,200,192,108,37,165,14,57,241,96,45,68,143,67,209,82,105,137,159,103,48,153,172,96,222 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 929 ") {
    byte_vec_t msg { 239,4,17,201 };
    byte_vec_t sig { 242,148,194,150,97,13,86,45,26,200,170,202,215,46,146,35,47,60,108,168,6,146,105,67,158,192,215,2,35,132,213,23,230,58,136,238,245,169,9,55,138,166,152,53,99,93,3,150,124,123,231,106,224,102,70,50,170,178,154,94,65,67,253,57 };
    byte_vec_t pk { 4,68,188,183,94,168,248,35,11,47,190,250,225,215,99,191,179,56,167,56,246,134,230,67,228,109,58,71,42,19,254,4,211,25,76,30,33,102,158,245,37,60,172,74,92,231,170,73,142,240,163,180,126,20,94,153,239,37,112,91,112,31,68,236,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 929 ") {
    byte_vec_t msg { 151,87,67,227 };
    byte_vec_t sig { 29,86,240,253,220,10,220,174,53,142,75,113,71,123,247,59,173,86,203,247,62,238,194,29,25,69,152,186,81,216,8,84,43,201,107,162,79,150,121,225,239,91,93,177,37,16,214,133,4,68,52,205,221,138,205,239,98,176,5,147,158,111,23,42 };
    byte_vec_t pk { 2,112,218,86,222,252,146,252,219,185,75,59,25,224,228,172,162,111,225,153,78,107,213,5,187,229,176,109,150,243,138,243,232 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 929 ") {
    byte_vec_t msg { 0,125,218,40 };
    byte_vec_t sig { 13,214,47,156,179,66,146,61,213,49,18,222,174,106,116,216,154,33,195,178,225,96,37,160,32,232,234,216,77,223,239,81,28,70,107,63,40,64,141,255,229,25,189,106,253,60,238,8,141,106,166,117,199,25,65,233,83,160,238,226,86,237,105,55 };
    byte_vec_t pk { 3,93,242,244,147,13,52,146,89,118,109,237,1,201,185,192,93,179,202,49,148,106,2,235,108,252,161,71,243,214,172,146,21 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 930 ") {
    byte_vec_t msg { 170,129,196,243 };
    byte_vec_t sig { 53,92,11,250,218,161,212,6,222,68,26,189,40,84,213,158,170,126,51,248,251,107,86,201,53,237,47,85,38,3,59,209,52,88,197,142,15,86,94,221,96,165,222,202,254,131,35,188,151,50,231,89,253,182,155,24,219,206,187,120,204,141,164,58 };
    byte_vec_t pk { 4,68,102,184,149,57,178,65,41,182,131,226,83,12,153,8,163,7,69,234,129,124,56,212,244,78,73,118,97,141,174,155,206,229,89,229,253,225,40,25,44,124,114,212,47,176,41,199,1,90,146,129,204,240,67,65,243,214,76,6,88,156,252,218,91 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 930 ") {
    byte_vec_t msg { 149,72,255,174 };
    byte_vec_t sig { 2,227,250,244,144,166,35,168,132,221,217,129,120,81,134,177,20,168,51,79,86,181,154,200,105,163,129,150,241,100,113,240,154,46,67,142,10,67,13,13,115,151,38,131,16,85,186,180,239,124,162,43,78,158,253,195,71,201,35,238,144,219,214,250 };
    byte_vec_t pk { 4,24,155,224,147,158,157,184,189,182,37,108,109,69,249,122,215,140,51,211,148,194,112,87,165,82,64,75,245,153,253,247,85,91,112,51,30,6,58,124,103,111,61,197,176,34,188,31,87,253,182,235,38,223,87,237,21,174,123,38,115,246,131,37,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 930 ") {
    byte_vec_t msg { 234,152,111,90 };
    byte_vec_t sig { 120,95,153,249,73,207,13,241,173,9,9,240,43,53,91,217,243,247,169,82,218,221,13,121,75,132,43,78,72,125,254,72,12,240,191,132,126,52,74,63,85,75,209,90,115,46,192,6,30,9,222,112,247,214,136,246,251,226,179,251,85,218,178,147 };
    byte_vec_t pk { 3,77,70,237,225,182,213,221,215,102,121,211,196,40,226,114,163,52,232,25,252,164,185,236,88,235,196,218,32,100,136,187,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 930 ") {
    byte_vec_t msg { 64,237,68,1 };
    byte_vec_t sig { 169,236,238,138,105,143,189,220,6,10,221,233,125,112,248,93,13,186,74,165,151,219,116,243,18,34,190,198,52,31,13,144,210,27,74,153,27,137,184,128,239,66,48,163,70,225,45,235,144,222,190,249,6,60,30,188,151,232,145,142,177,60,45,99 };
    byte_vec_t pk { 3,243,166,76,37,113,49,242,122,146,223,82,124,80,247,175,59,139,22,12,17,132,78,231,55,28,224,92,67,212,113,100,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 931 ") {
    byte_vec_t msg { 221,23,20,222 };
    byte_vec_t sig { 0,94,69,111,241,26,81,26,64,40,180,195,193,137,23,253,216,149,167,101,253,146,69,8,34,148,143,79,254,28,157,172,102,214,20,243,183,250,194,31,12,219,40,26,241,108,55,70,143,206,180,187,210,226,216,60,37,246,183,55,18,78,155,79 };
    byte_vec_t pk { 4,62,190,217,157,97,110,186,212,252,46,182,179,151,50,161,152,241,16,54,157,183,61,131,189,8,241,36,48,166,144,150,208,165,234,81,128,85,22,208,237,64,58,229,15,255,216,111,102,91,1,223,134,46,59,250,66,27,186,160,7,24,79,162,165 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 931 ") {
    byte_vec_t msg { 44,239,48,102 };
    byte_vec_t sig { 74,181,39,206,45,129,255,47,95,78,210,8,90,178,93,155,19,218,167,7,110,38,3,59,1,241,214,12,255,164,37,38,99,194,116,124,217,136,26,224,119,205,188,216,240,8,168,128,153,47,239,199,110,21,41,173,213,109,89,0,132,134,6,81 };
    byte_vec_t pk { 4,105,233,105,129,163,243,5,249,127,106,255,19,135,25,135,13,20,78,246,175,159,80,10,75,136,107,132,207,211,156,219,84,184,180,173,223,208,166,176,30,173,79,61,249,27,130,148,38,62,88,82,40,106,143,65,199,47,28,80,243,177,83,196,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 931 ") {
    byte_vec_t msg { 153,212,33,234 };
    byte_vec_t sig { 231,158,39,222,123,151,38,208,70,183,77,158,104,51,235,97,118,72,15,142,103,164,238,44,38,30,224,151,102,13,242,186,93,115,80,125,74,255,161,3,178,1,65,103,171,58,84,75,248,40,62,84,137,221,20,225,181,55,161,36,42,200,90,128 };
    byte_vec_t pk { 3,35,169,60,117,142,86,18,150,57,181,57,184,208,168,143,230,182,210,17,148,211,158,118,211,59,123,177,192,103,157,164,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 931 ") {
    byte_vec_t msg { 76,224,175,234 };
    byte_vec_t sig { 192,70,169,179,136,247,80,235,202,39,152,252,8,34,5,114,73,31,217,25,90,233,66,119,90,68,40,13,102,98,234,107,137,244,226,27,36,242,16,153,66,187,96,233,255,171,112,152,1,114,62,40,118,117,65,171,202,134,58,105,45,148,120,155 };
    byte_vec_t pk { 2,30,207,70,6,78,165,36,228,87,187,251,61,18,241,26,5,221,142,244,84,161,227,74,178,36,179,39,167,193,10,198,18 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 932 ") {
    byte_vec_t msg { 81,23,64,56 };
    byte_vec_t sig { 11,155,178,154,69,46,154,213,136,146,105,70,71,235,99,11,3,199,121,67,165,18,181,246,160,249,28,123,63,27,137,128,116,50,103,221,171,120,201,137,78,245,149,144,71,240,96,37,207,246,62,146,129,64,55,156,132,15,68,233,178,138,215,65 };
    byte_vec_t pk { 4,109,173,95,212,160,248,59,176,34,35,193,185,253,59,158,188,131,189,199,193,17,188,49,75,248,63,120,229,65,197,74,21,246,120,18,251,44,72,91,223,253,194,234,63,27,7,110,38,23,86,159,236,163,35,161,44,45,8,63,194,239,196,52,81 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 932 ") {
    byte_vec_t msg { 175,73,89,66 };
    byte_vec_t sig { 137,239,52,147,74,209,17,3,90,44,225,166,210,137,136,129,39,54,110,198,220,214,202,148,252,97,76,197,11,192,192,233,158,253,149,13,21,130,17,130,125,141,236,250,250,132,137,237,186,77,119,226,226,33,30,126,182,59,13,234,203,159,237,73 };
    byte_vec_t pk { 4,123,23,113,177,14,201,106,58,167,104,9,53,91,80,90,96,96,104,202,162,142,153,111,42,77,158,209,132,208,92,95,221,171,85,55,219,148,91,143,137,90,114,93,76,224,97,65,212,150,82,126,91,151,215,16,244,174,220,171,175,240,83,93,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 932 ") {
    byte_vec_t msg { 160,105,118,192 };
    byte_vec_t sig { 83,205,28,127,75,54,20,179,76,180,144,253,181,127,199,82,83,11,181,35,201,132,251,38,159,87,251,127,161,22,35,162,252,167,103,64,233,178,221,3,61,141,113,86,33,146,34,246,236,126,74,114,205,225,188,147,4,47,157,150,213,160,216,99 };
    byte_vec_t pk { 3,35,249,160,24,52,106,139,121,226,94,166,77,128,190,248,231,247,68,157,152,36,42,13,205,67,22,133,202,81,32,225,9 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 932 ") {
    byte_vec_t msg { 86,248,79,173 };
    byte_vec_t sig { 9,35,35,11,7,204,55,54,136,249,183,62,194,236,22,57,40,169,102,60,67,241,88,61,192,174,28,68,148,26,238,188,14,195,110,79,79,46,129,64,137,49,122,104,74,81,252,105,141,46,145,89,70,9,228,191,112,40,178,180,100,205,176,92 };
    byte_vec_t pk { 2,66,215,223,7,113,148,31,195,2,16,67,13,23,164,196,248,104,8,87,7,123,107,189,38,122,120,86,54,206,121,235,129 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 933 ") {
    byte_vec_t msg { 227,87,224,48 };
    byte_vec_t sig { 99,9,28,133,147,173,204,29,188,17,230,238,131,130,194,216,12,8,56,205,247,113,56,18,97,95,213,50,95,171,246,52,7,177,245,242,218,28,233,53,98,106,15,202,232,235,76,89,82,255,157,218,203,216,25,81,51,213,174,234,254,135,223,38 };
    byte_vec_t pk { 4,199,5,218,140,149,27,90,20,169,196,147,147,149,142,25,39,78,220,205,120,11,36,40,56,163,175,215,92,108,87,150,0,20,251,227,210,72,199,254,55,234,156,117,43,222,30,73,196,113,230,60,109,61,14,143,168,155,220,201,85,65,253,254,64 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 933 ") {
    byte_vec_t msg { 166,204,144,254 };
    byte_vec_t sig { 26,217,154,44,118,104,196,244,217,210,130,94,103,81,253,212,214,52,254,160,25,112,119,72,93,224,37,173,253,254,16,166,47,27,35,188,66,27,233,88,119,185,241,47,254,194,31,77,13,3,206,73,173,159,82,184,239,54,21,110,63,54,45,194 };
    byte_vec_t pk { 4,16,70,172,42,201,119,103,130,144,193,27,145,100,239,66,6,176,255,77,236,211,233,33,57,253,75,21,111,202,154,82,115,116,55,143,94,146,167,247,154,46,216,1,201,190,210,135,233,38,46,32,207,35,165,19,199,193,230,138,237,139,228,245,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 933 ") {
    byte_vec_t msg { 105,62,241,171 };
    byte_vec_t sig { 79,86,74,45,81,202,193,118,251,181,143,144,189,38,123,91,232,207,237,91,150,32,206,78,174,105,9,39,14,58,177,181,201,45,104,51,82,228,96,56,20,17,58,243,23,72,120,23,118,128,161,182,49,0,134,183,80,81,85,99,229,7,32,199 };
    byte_vec_t pk { 2,31,54,232,97,239,81,15,77,26,147,162,241,232,146,2,8,27,11,203,47,180,86,109,175,145,76,251,213,93,40,85,145 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 933 ") {
    byte_vec_t msg { 90,127,98,92 };
    byte_vec_t sig { 90,247,11,239,127,112,91,242,202,208,110,98,218,237,107,10,104,98,223,243,174,34,169,138,154,110,119,60,14,160,179,245,127,156,22,54,160,112,49,96,246,31,183,44,161,107,13,98,11,176,117,60,60,118,131,127,60,154,186,234,69,200,188,101 };
    byte_vec_t pk { 2,64,236,137,242,202,255,235,211,248,195,18,162,216,29,137,213,251,208,69,159,24,208,30,36,144,191,117,38,128,189,53,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 934 ") {
    byte_vec_t msg { 140,175,21,36 };
    byte_vec_t sig { 28,114,248,78,61,57,160,47,123,132,80,238,61,212,113,19,133,158,208,227,61,49,201,251,47,220,182,218,255,19,105,204,149,203,157,212,14,150,68,209,94,154,249,22,233,250,119,186,21,163,142,148,148,7,70,92,36,93,86,62,233,150,230,6 };
    byte_vec_t pk { 4,229,95,10,52,158,7,234,59,34,248,156,57,95,145,202,241,123,187,227,174,100,62,119,213,107,124,65,159,26,152,167,188,73,1,234,49,198,83,202,207,254,45,219,244,229,159,161,110,192,40,192,27,154,15,248,229,65,153,91,191,156,212,60,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 934 ") {
    byte_vec_t msg { 38,5,137,21 };
    byte_vec_t sig { 222,127,74,102,67,158,12,124,119,104,86,12,48,102,85,134,62,65,34,180,205,84,172,58,144,10,169,171,183,151,174,177,144,88,156,160,71,215,237,207,51,98,5,128,144,151,251,143,167,25,223,243,224,213,225,138,85,40,139,191,249,120,115,180 };
    byte_vec_t pk { 4,223,25,49,245,46,190,141,108,152,249,58,106,136,131,255,67,137,18,247,36,176,42,221,147,101,117,252,177,73,174,229,86,177,83,145,9,147,52,165,139,174,139,129,194,221,139,188,195,134,253,22,150,220,199,176,62,67,238,251,191,208,50,93,70 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 934 ") {
    byte_vec_t msg { 185,136,191,64 };
    byte_vec_t sig { 21,117,241,99,152,251,250,119,211,71,197,67,106,97,229,228,249,251,190,56,75,166,143,207,50,37,189,146,40,52,5,158,136,118,154,167,39,36,242,59,208,72,198,236,128,87,109,196,146,113,14,82,215,211,21,22,9,76,90,34,215,234,197,40 };
    byte_vec_t pk { 3,10,177,29,172,81,23,214,250,253,239,45,79,75,24,23,62,27,37,150,56,74,11,128,56,166,2,145,175,179,41,233,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 934 ") {
    byte_vec_t msg { 59,51,95,65 };
    byte_vec_t sig { 144,151,2,55,0,201,102,146,130,26,131,57,133,132,38,118,33,117,67,137,115,105,127,242,106,123,116,103,102,121,164,126,2,12,52,204,203,107,88,99,194,151,248,210,42,244,4,158,220,82,10,132,27,212,78,10,7,102,98,113,13,15,74,209 };
    byte_vec_t pk { 2,210,205,94,37,214,164,225,43,251,106,135,161,11,31,113,138,94,211,25,148,128,130,48,98,243,139,160,222,25,218,94,150 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 935 ") {
    byte_vec_t msg { 131,145,10,238 };
    byte_vec_t sig { 171,222,217,98,205,246,237,17,23,143,204,5,156,128,210,20,162,4,214,44,53,225,70,228,179,59,223,80,169,47,140,32,118,103,192,28,217,59,42,39,169,12,228,32,27,250,201,28,12,6,61,7,78,87,188,226,137,102,127,46,70,176,192,133 };
    byte_vec_t pk { 4,104,228,169,200,34,200,162,153,230,179,222,182,81,114,232,64,6,83,142,74,31,239,75,120,207,240,80,248,156,51,219,201,224,238,162,168,55,143,229,139,223,68,41,130,7,232,7,53,149,129,98,99,83,197,229,53,167,35,229,124,37,209,39,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 935 ") {
    byte_vec_t msg { 202,159,4,96 };
    byte_vec_t sig { 234,155,176,90,15,251,164,214,118,67,63,95,206,29,151,45,97,199,76,41,140,101,129,232,94,6,132,41,12,185,235,148,4,33,142,183,174,23,71,1,39,9,160,48,157,43,130,110,56,184,197,154,246,228,54,88,75,121,122,135,59,29,108,246 };
    byte_vec_t pk { 4,161,231,231,39,91,206,48,27,32,80,163,106,141,180,9,6,229,19,209,196,63,134,219,201,34,56,185,184,8,229,77,86,177,66,216,249,153,230,159,202,56,188,14,132,182,119,187,45,224,165,114,82,99,58,17,42,176,145,218,206,100,44,7,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 935 ") {
    byte_vec_t msg { 43,207,208,135 };
    byte_vec_t sig { 146,215,231,110,59,74,163,5,109,232,239,53,98,98,229,200,67,25,177,102,40,239,228,106,27,220,66,198,218,200,76,239,249,25,178,248,5,7,71,230,251,41,226,170,44,171,205,69,40,4,219,79,229,115,30,46,169,195,33,16,247,4,0,170 };
    byte_vec_t pk { 2,120,46,219,44,199,230,153,199,238,103,36,61,96,177,153,34,46,58,167,129,241,100,198,146,165,50,60,194,168,200,182,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 935 ") {
    byte_vec_t msg { 2,179,41,151 };
    byte_vec_t sig { 248,127,7,123,112,56,65,47,120,3,64,95,138,173,161,200,179,109,99,20,73,29,63,83,35,31,222,57,97,105,218,60,41,196,109,136,5,188,102,184,221,133,41,126,154,142,208,217,74,182,28,168,108,219,17,224,95,74,123,52,20,62,12,87 };
    byte_vec_t pk { 2,249,17,219,11,162,204,38,190,175,75,25,68,194,79,156,177,234,115,60,120,28,149,57,89,116,9,41,71,157,206,119,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 936 ") {
    byte_vec_t msg { 176,170,35,137 };
    byte_vec_t sig { 4,53,127,51,170,95,210,70,87,213,5,160,183,173,53,220,22,145,208,242,56,36,196,245,10,80,79,1,36,202,115,248,193,52,234,155,9,165,52,21,50,87,15,212,202,75,28,186,228,157,254,19,3,85,32,89,36,221,192,165,131,249,140,71 };
    byte_vec_t pk { 4,69,174,63,99,82,57,43,81,252,164,217,130,163,40,244,167,217,226,212,73,32,89,159,229,194,186,52,134,50,10,160,20,41,96,110,15,190,141,54,10,183,222,63,126,198,85,19,22,103,220,42,6,0,215,159,131,207,46,180,20,125,59,5,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 936 ") {
    byte_vec_t msg { 247,91,37,59 };
    byte_vec_t sig { 186,122,208,25,0,127,25,172,122,124,78,52,186,156,193,165,141,159,14,19,183,96,75,111,119,158,41,26,87,115,34,124,164,162,92,19,71,254,117,148,202,206,64,95,137,23,122,152,12,177,55,248,66,134,193,133,170,185,207,63,48,178,15,228 };
    byte_vec_t pk { 4,139,93,24,35,218,147,92,61,78,173,229,140,39,160,167,46,56,86,238,168,51,243,155,14,141,141,206,58,49,123,22,100,136,211,79,221,108,132,52,111,163,162,171,82,28,201,177,116,213,148,202,26,98,144,15,243,255,72,100,198,73,137,164,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 936 ") {
    byte_vec_t msg { 214,116,135,230 };
    byte_vec_t sig { 181,94,101,107,40,7,204,82,194,54,20,223,243,199,101,76,6,121,14,217,33,150,5,30,143,202,207,191,233,208,244,168,53,38,181,179,42,253,103,231,219,18,247,222,170,102,111,77,231,127,127,196,128,148,90,159,113,209,241,136,246,92,158,77 };
    byte_vec_t pk { 3,130,43,32,179,142,191,68,106,118,254,74,237,194,17,107,214,2,27,81,19,148,126,201,90,60,237,59,228,31,243,140,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 936 ") {
    byte_vec_t msg { 38,19,66,91 };
    byte_vec_t sig { 199,80,183,94,52,130,21,255,211,123,5,137,83,28,174,97,111,213,156,176,31,121,29,47,25,114,4,159,27,85,184,223,64,240,202,99,239,72,233,231,238,122,122,185,17,8,50,131,30,87,109,225,66,10,8,198,86,51,201,39,233,159,63,167 };
    byte_vec_t pk { 2,126,200,114,233,99,78,21,120,193,134,254,55,65,90,144,28,98,244,53,119,194,161,238,70,17,200,118,193,122,229,175,98 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 937 ") {
    byte_vec_t msg { 73,28,3,206 };
    byte_vec_t sig { 130,220,28,172,14,83,22,29,226,45,207,173,251,19,115,225,60,203,3,0,24,219,9,206,112,129,248,176,121,89,122,81,132,94,116,102,198,193,32,234,73,169,229,251,195,207,190,112,217,148,55,71,252,74,118,119,225,73,136,127,110,59,115,119 };
    byte_vec_t pk { 4,140,69,109,126,35,144,208,245,205,198,225,19,40,230,32,244,88,190,30,254,222,89,95,115,114,112,2,59,58,195,166,47,7,139,151,123,186,62,254,150,92,72,157,70,54,174,230,44,105,125,7,29,240,192,22,220,25,231,147,9,68,54,103,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 937 ") {
    byte_vec_t msg { 183,9,190,246 };
    byte_vec_t sig { 58,0,154,3,135,110,136,58,123,129,53,0,3,193,63,76,111,40,96,128,216,228,140,3,128,125,93,98,141,162,238,174,189,15,101,34,153,64,6,254,113,48,169,213,191,29,214,230,108,0,77,202,252,204,195,195,22,94,155,206,109,13,79,25 };
    byte_vec_t pk { 4,241,233,107,204,87,176,180,166,84,203,11,220,33,203,131,203,54,40,118,212,241,60,241,15,194,53,238,24,134,2,107,136,231,110,138,170,112,66,83,6,120,28,141,106,45,40,45,224,66,11,150,218,81,113,155,141,175,221,156,97,215,193,243,120 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 937 ") {
    byte_vec_t msg { 216,94,255,12 };
    byte_vec_t sig { 14,199,59,175,161,4,71,151,131,86,188,244,90,207,109,18,34,183,247,139,93,77,173,116,205,236,147,37,0,88,134,8,145,220,101,250,78,200,109,51,55,8,242,180,233,140,207,247,189,165,87,90,189,6,142,79,154,133,85,81,102,99,133,169 };
    byte_vec_t pk { 3,30,71,109,3,248,163,64,126,90,246,212,215,76,137,217,255,127,90,23,110,94,161,79,66,73,195,157,209,53,185,227,34 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 937 ") {
    byte_vec_t msg { 235,140,76,107 };
    byte_vec_t sig { 238,89,68,166,43,117,197,108,131,196,112,66,129,21,71,141,238,72,77,42,4,120,116,184,18,39,255,223,200,181,208,59,238,154,176,90,90,175,30,21,210,191,226,41,122,14,195,236,181,173,98,25,156,241,108,4,205,182,3,159,146,150,85,38 };
    byte_vec_t pk { 2,212,174,244,120,151,10,134,152,117,228,42,22,177,56,142,91,42,93,100,67,238,180,120,107,46,81,205,230,63,73,119,15 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 938 ") {
    byte_vec_t msg { 9,195,63,92 };
    byte_vec_t sig { 105,53,100,174,6,83,215,121,90,188,217,217,42,208,127,221,6,97,182,90,127,161,96,42,136,15,240,233,173,123,178,3,227,29,68,74,241,184,185,122,69,9,23,22,195,173,28,103,75,51,243,163,131,111,104,169,8,150,64,154,95,183,124,99 };
    byte_vec_t pk { 4,197,146,108,88,211,190,176,127,39,180,50,231,201,111,187,107,175,55,128,29,229,231,50,38,227,102,15,105,14,37,181,41,22,86,66,96,34,88,241,144,155,222,27,253,189,215,28,162,52,80,20,125,15,6,107,37,40,100,59,127,185,230,21,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 938 ") {
    byte_vec_t msg { 211,163,237,140 };
    byte_vec_t sig { 238,169,215,250,255,192,235,2,56,100,29,44,131,22,193,143,129,244,93,65,48,238,209,49,152,86,232,219,195,238,64,103,4,123,154,85,192,12,250,3,48,164,44,80,31,5,81,31,222,254,32,12,123,95,87,136,185,58,244,239,72,52,18,151 };
    byte_vec_t pk { 4,179,111,117,177,165,90,16,163,250,68,210,136,12,174,189,224,24,14,178,180,60,16,173,237,223,228,84,118,55,184,204,100,179,199,21,32,176,75,10,182,52,60,26,66,198,87,136,131,122,182,49,38,76,252,84,242,202,78,176,188,173,53,148,24 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 938 ") {
    byte_vec_t msg { 38,20,195,234 };
    byte_vec_t sig { 46,185,217,167,225,5,96,71,223,87,56,21,132,245,141,221,254,228,94,91,7,45,61,100,163,100,20,20,13,248,54,179,167,118,145,113,213,221,191,206,163,165,97,80,179,189,208,106,91,17,183,15,128,204,235,238,132,120,170,158,37,7,133,204 };
    byte_vec_t pk { 2,215,193,51,63,122,39,97,79,163,217,208,25,104,186,185,13,85,20,142,41,209,139,49,135,181,187,151,53,81,21,223,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 938 ") {
    byte_vec_t msg { 161,74,141,214 };
    byte_vec_t sig { 111,233,111,185,45,174,107,43,34,250,106,119,185,51,212,108,166,232,182,84,139,121,148,164,140,109,80,48,131,117,245,70,71,78,200,234,124,232,74,242,205,48,109,1,161,113,216,99,26,69,95,49,211,175,148,1,48,189,155,181,238,179,219,141 };
    byte_vec_t pk { 2,24,126,174,252,64,126,186,14,235,209,155,191,129,47,28,184,177,12,199,246,73,84,36,229,122,169,233,153,202,47,73,45 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 939 ") {
    byte_vec_t msg { 35,105,156,68 };
    byte_vec_t sig { 15,211,225,173,194,217,249,9,1,236,28,187,224,47,61,10,135,253,28,65,52,222,24,50,176,59,48,135,73,146,251,133,72,37,146,208,68,136,204,221,45,233,161,37,123,199,86,223,232,128,176,60,172,123,80,242,180,101,165,215,186,100,167,150 };
    byte_vec_t pk { 4,135,104,196,4,120,230,124,212,55,114,25,104,12,167,131,146,247,114,54,35,210,56,242,12,139,40,243,143,103,153,76,253,249,47,48,75,216,209,128,164,143,22,203,117,108,116,142,86,86,96,197,247,58,242,1,140,36,91,143,130,174,34,12,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 939 ") {
    byte_vec_t msg { 5,84,110,69 };
    byte_vec_t sig { 142,2,63,58,245,89,177,219,51,18,116,241,6,74,151,226,183,217,241,217,79,254,113,37,176,68,205,179,229,147,126,32,77,96,19,170,173,203,37,39,75,113,14,240,167,245,246,151,142,21,184,76,233,20,2,80,56,108,42,193,8,82,129,125 };
    byte_vec_t pk { 4,73,172,98,100,191,74,177,3,195,172,233,242,118,34,216,219,244,134,169,142,253,157,80,119,102,154,38,196,133,59,128,186,76,108,178,24,54,83,135,206,110,17,198,242,64,9,245,68,143,18,30,255,82,244,116,188,235,67,119,160,0,253,162,193 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 939 ") {
    byte_vec_t msg { 124,74,70,213 };
    byte_vec_t sig { 18,108,97,47,239,30,39,122,208,180,58,20,150,171,31,189,21,56,91,50,121,92,106,89,177,75,7,245,80,22,139,78,198,194,244,74,39,64,163,21,3,196,52,69,203,79,30,27,1,59,120,92,56,78,253,55,38,79,71,34,157,19,177,82 };
    byte_vec_t pk { 3,146,254,143,139,116,0,207,235,145,167,133,197,12,75,39,9,241,133,1,226,91,75,59,57,142,145,83,140,105,188,70,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 939 ") {
    byte_vec_t msg { 131,151,96,0 };
    byte_vec_t sig { 12,127,30,17,6,215,124,0,146,111,53,253,89,151,53,4,179,16,190,105,162,197,78,248,218,203,215,125,131,28,194,226,6,170,231,17,222,96,226,71,230,180,253,92,124,110,214,246,193,237,105,235,31,250,90,95,18,9,89,1,122,249,137,45 };
    byte_vec_t pk { 2,255,150,132,31,2,31,201,242,17,48,80,0,14,204,138,42,192,60,97,59,210,147,143,23,101,82,254,174,104,213,208,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 940 ") {
    byte_vec_t msg { 87,40,156,253 };
    byte_vec_t sig { 156,42,131,214,76,177,43,127,146,238,43,48,237,19,16,93,223,24,239,21,79,196,186,162,213,173,156,214,87,23,140,74,131,131,228,82,193,2,244,154,248,238,17,167,79,195,102,58,235,48,8,251,63,2,0,146,125,207,32,92,131,178,135,199 };
    byte_vec_t pk { 4,95,128,187,208,81,85,45,122,162,116,247,3,80,172,91,174,52,252,93,238,10,166,115,72,59,193,16,116,79,142,48,3,91,109,22,83,207,204,100,253,136,7,4,220,107,153,38,252,159,74,194,11,202,20,132,96,229,108,250,39,45,253,92,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 940 ") {
    byte_vec_t msg { 181,231,147,20 };
    byte_vec_t sig { 237,154,6,152,60,61,176,180,209,181,54,15,245,52,255,106,159,230,1,132,134,107,171,54,233,232,0,168,116,105,24,79,184,108,214,107,240,11,239,135,65,247,156,182,4,153,68,42,152,112,41,9,17,20,230,74,41,106,91,144,23,119,36,71 };
    byte_vec_t pk { 4,168,119,77,85,134,171,222,41,233,251,224,83,241,217,106,213,167,6,73,120,186,70,121,174,166,46,2,216,93,244,43,150,130,20,151,202,221,181,230,112,65,147,22,125,134,127,12,212,32,244,226,57,87,221,162,1,212,185,52,127,243,230,95,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 940 ") {
    byte_vec_t msg { 251,210,113,227 };
    byte_vec_t sig { 148,138,171,217,152,221,219,69,79,144,82,216,182,45,74,190,194,122,88,149,69,64,184,208,229,126,46,126,246,37,206,32,15,205,118,5,176,6,95,64,22,215,71,193,169,36,19,175,215,57,59,97,60,239,1,59,228,131,182,190,155,202,6,54 };
    byte_vec_t pk { 3,79,129,137,110,195,237,114,232,121,234,51,191,190,91,76,25,132,218,139,80,130,163,70,94,159,8,29,84,100,123,225,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 940 ") {
    byte_vec_t msg { 111,77,186,60 };
    byte_vec_t sig { 61,246,193,3,152,44,201,61,27,13,100,208,166,240,224,116,83,188,159,124,139,84,92,39,45,109,225,29,24,134,110,142,11,184,255,110,47,208,124,192,25,210,98,243,231,194,93,92,34,40,84,123,192,165,40,89,238,27,118,125,188,94,252,180 };
    byte_vec_t pk { 2,210,171,179,108,12,201,116,1,203,30,89,159,142,244,150,128,31,190,21,243,163,112,105,51,69,145,72,95,205,215,28,38 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 941 ") {
    byte_vec_t msg { 151,35,32,85 };
    byte_vec_t sig { 89,183,70,97,169,3,182,158,166,119,61,191,111,212,19,133,98,15,194,241,185,224,59,115,230,192,71,49,52,39,198,160,153,79,207,25,126,71,76,32,224,92,211,152,189,225,5,74,62,28,176,75,65,182,187,215,152,40,250,142,102,38,88,70 };
    byte_vec_t pk { 4,6,237,151,36,4,137,61,120,206,51,21,70,242,216,97,145,58,25,148,139,233,4,127,109,222,148,40,234,181,22,70,182,36,119,39,184,15,226,149,196,115,132,87,43,153,160,46,93,228,69,132,223,212,157,147,81,73,153,93,226,160,206,234,182 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 941 ") {
    byte_vec_t msg { 148,34,145,200 };
    byte_vec_t sig { 169,64,167,243,237,212,16,192,200,242,193,156,116,187,57,38,166,217,227,237,185,11,224,77,190,224,195,253,24,90,230,129,206,108,101,146,179,178,13,105,4,173,120,122,12,42,222,32,117,18,123,5,188,112,18,232,208,198,5,23,216,38,186,53 };
    byte_vec_t pk { 4,223,165,100,62,85,251,246,172,14,77,203,17,221,189,248,221,39,117,12,0,137,87,65,45,213,109,28,162,129,99,228,133,185,249,27,191,18,181,165,61,63,58,73,207,149,215,174,64,165,131,149,246,183,84,58,42,253,134,188,206,72,222,131,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 941 ") {
    byte_vec_t msg { 141,116,27,176 };
    byte_vec_t sig { 197,193,209,29,166,64,241,129,18,229,119,123,58,145,200,224,99,208,52,106,138,151,37,70,23,250,249,206,221,13,4,64,141,154,63,252,245,12,95,102,42,65,172,119,65,35,231,10,15,229,46,190,149,234,29,84,16,160,103,164,71,239,141,124 };
    byte_vec_t pk { 3,139,116,171,169,228,195,217,156,172,150,28,244,157,185,148,66,62,165,35,153,184,142,74,236,151,207,164,25,98,57,234,16 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 941 ") {
    byte_vec_t msg { 223,0,217,102 };
    byte_vec_t sig { 24,234,57,241,213,51,128,75,236,100,179,112,52,112,175,31,98,228,23,173,34,25,194,250,77,6,255,8,55,149,118,57,122,215,225,70,102,4,97,92,180,1,128,160,215,33,90,209,254,64,186,86,5,12,133,240,130,187,143,254,139,160,23,229 };
    byte_vec_t pk { 3,180,86,35,87,119,118,128,55,110,22,213,188,225,96,89,129,108,128,148,204,99,243,73,88,90,4,44,27,57,105,149,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 942 ") {
    byte_vec_t msg { 181,252,197,183 };
    byte_vec_t sig { 249,144,195,218,80,133,51,87,210,120,95,237,7,4,204,129,58,59,108,103,210,68,124,248,50,98,93,28,226,234,205,130,143,83,49,185,177,36,163,54,2,38,2,94,249,154,194,93,129,72,127,22,12,193,34,3,182,189,93,90,128,58,37,46 };
    byte_vec_t pk { 4,165,54,80,242,0,55,175,58,185,162,87,111,79,105,225,61,60,225,49,201,13,190,223,155,175,18,84,178,130,167,81,216,82,251,5,127,16,155,35,233,107,64,129,109,124,177,2,178,0,41,12,182,55,241,63,143,118,176,253,165,85,235,158,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 942 ") {
    byte_vec_t msg { 234,223,216,163 };
    byte_vec_t sig { 116,2,173,44,12,119,217,17,239,163,251,124,211,0,190,207,41,147,119,79,165,222,80,92,79,223,79,228,145,237,213,195,234,29,202,197,29,205,244,9,189,36,154,35,8,223,143,52,14,58,155,146,18,143,170,153,53,184,161,235,238,28,164,225 };
    byte_vec_t pk { 4,91,187,92,54,132,215,104,235,197,56,104,209,88,22,15,163,175,107,21,136,114,247,88,106,237,107,3,4,230,140,94,28,64,225,201,54,162,252,36,21,122,243,219,248,167,66,153,36,238,48,59,252,146,97,35,219,82,152,21,50,138,75,87,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 942 ") {
    byte_vec_t msg { 105,75,255,213 };
    byte_vec_t sig { 192,255,147,113,100,26,197,123,117,180,203,23,245,218,243,178,99,25,4,73,161,49,171,83,179,155,70,141,91,203,211,237,88,132,116,181,3,111,148,61,20,131,248,230,212,101,153,172,175,244,140,236,166,5,43,26,242,231,36,162,69,45,230,205 };
    byte_vec_t pk { 3,141,205,165,102,247,29,242,77,212,183,208,83,176,43,168,154,213,234,237,149,70,87,58,217,15,218,60,59,243,18,3,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 942 ") {
    byte_vec_t msg { 22,181,113,221 };
    byte_vec_t sig { 141,117,43,17,170,104,167,84,212,105,146,33,145,89,106,107,2,96,67,85,233,252,140,116,132,216,32,174,47,128,234,134,187,90,32,66,150,160,249,209,253,184,151,97,57,63,183,244,224,137,62,119,84,56,19,76,41,137,1,15,182,146,80,171 };
    byte_vec_t pk { 2,179,2,58,127,12,66,30,82,170,126,57,117,172,76,180,245,183,186,21,97,226,242,120,66,194,112,10,78,30,188,146,230 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 943 ") {
    byte_vec_t msg { 192,171,221,157 };
    byte_vec_t sig { 42,212,88,40,178,227,67,25,83,148,27,230,75,133,139,155,90,92,223,247,142,72,218,105,49,62,187,226,164,120,28,204,174,171,245,21,118,53,10,9,15,185,204,118,175,95,229,84,43,25,100,154,74,204,48,167,204,238,70,119,59,62,236,231 };
    byte_vec_t pk { 4,90,81,205,55,134,233,141,182,176,126,153,132,238,184,37,133,177,20,73,183,126,151,209,133,240,226,241,161,20,28,159,193,124,93,224,214,248,248,94,193,203,19,177,35,21,170,67,20,54,26,144,134,166,212,121,90,48,173,180,76,9,103,65,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 943 ") {
    byte_vec_t msg { 124,158,119,134 };
    byte_vec_t sig { 39,45,9,61,5,140,141,139,14,131,117,57,152,121,83,196,99,124,179,196,165,57,223,58,15,229,84,34,0,139,153,245,209,155,87,174,88,62,223,112,85,115,239,70,50,12,231,167,178,62,60,91,25,51,74,181,67,114,96,113,120,139,1,244 };
    byte_vec_t pk { 4,207,137,162,126,146,67,145,103,27,213,229,17,144,241,150,171,158,85,87,9,31,224,247,173,43,109,140,129,181,192,145,240,62,21,223,159,235,158,189,40,242,125,29,71,63,251,212,106,135,239,215,95,101,122,80,113,78,108,35,246,83,42,87,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 943 ") {
    byte_vec_t msg { 81,98,167,240 };
    byte_vec_t sig { 208,233,131,23,182,208,196,39,17,174,13,250,81,164,38,5,82,208,156,240,44,77,52,93,113,116,175,56,137,82,252,123,45,89,49,141,180,117,132,104,134,243,46,145,27,242,170,50,4,248,98,31,86,9,113,26,82,155,21,228,61,17,110,28 };
    byte_vec_t pk { 3,217,51,154,57,4,122,210,220,206,153,42,149,150,223,191,134,114,96,205,132,98,106,90,142,10,56,135,141,108,232,165,82 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 943 ") {
    byte_vec_t msg { 234,132,69,90 };
    byte_vec_t sig { 247,32,57,185,132,195,44,10,249,3,28,125,66,102,224,179,111,71,123,44,206,40,230,189,49,41,183,152,50,242,119,19,190,201,112,44,146,82,187,201,229,179,128,22,69,174,109,131,225,19,146,147,204,121,184,147,123,86,242,225,19,207,73,173 };
    byte_vec_t pk { 3,173,186,40,142,17,171,34,64,140,241,127,28,27,87,120,10,77,26,243,110,189,179,201,82,118,7,235,82,60,64,125,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 944 ") {
    byte_vec_t msg { 177,224,6,122 };
    byte_vec_t sig { 229,120,143,207,191,58,31,51,253,148,203,222,92,247,87,218,72,174,130,101,211,105,151,214,52,47,164,236,231,162,179,65,129,105,184,210,218,48,47,48,36,7,217,24,132,178,208,180,204,246,170,162,79,160,119,31,38,99,208,106,205,45,69,100 };
    byte_vec_t pk { 4,27,106,142,56,82,108,250,203,200,45,100,212,77,39,20,20,111,167,20,217,234,90,43,194,21,132,239,62,217,187,50,3,165,243,187,64,108,152,23,33,11,44,131,135,156,104,61,21,76,81,16,219,168,20,191,216,28,162,198,125,207,191,199,211 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 944 ") {
    byte_vec_t msg { 91,219,152,55 };
    byte_vec_t sig { 245,27,142,103,207,22,86,22,121,40,197,101,131,190,170,48,36,167,112,91,200,233,227,74,110,85,152,30,83,136,83,237,245,103,67,86,29,103,65,152,253,55,57,54,71,69,197,150,9,140,158,244,239,11,179,254,80,239,156,148,225,120,51,242 };
    byte_vec_t pk { 4,229,100,68,4,41,108,186,248,232,131,55,209,156,25,52,239,89,52,101,61,80,53,15,50,143,63,126,41,28,72,3,20,150,20,166,19,131,186,226,211,40,29,65,201,183,183,40,186,24,6,190,88,109,121,238,179,11,38,12,78,209,184,71,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 944 ") {
    byte_vec_t msg { 55,95,123,201 };
    byte_vec_t sig { 73,131,88,2,220,249,22,251,176,10,213,170,73,151,103,255,57,211,147,14,161,63,4,246,79,122,242,149,169,105,243,99,105,18,209,93,61,36,2,48,185,112,120,197,101,203,32,165,71,78,32,167,49,3,157,13,42,180,61,31,109,14,67,102 };
    byte_vec_t pk { 2,162,197,69,113,2,161,52,55,60,206,101,141,194,51,36,73,120,94,93,100,81,45,133,169,169,101,225,57,92,251,168,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 944 ") {
    byte_vec_t msg { 169,149,109,21 };
    byte_vec_t sig { 29,224,170,190,115,46,241,25,209,105,244,7,39,204,174,185,62,211,89,131,203,186,97,118,180,162,182,15,135,244,108,222,138,117,47,217,151,225,199,115,102,148,67,254,159,159,119,197,175,53,174,197,174,146,111,82,175,208,186,193,195,207,239,143 };
    byte_vec_t pk { 2,173,208,155,7,63,226,60,73,247,81,66,200,95,109,74,155,227,59,247,57,234,145,206,129,102,45,217,84,0,152,89,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 945 ") {
    byte_vec_t msg { 218,253,139,240 };
    byte_vec_t sig { 235,81,61,99,80,194,236,8,238,199,52,195,63,61,236,214,209,56,49,153,196,43,190,206,76,209,206,148,70,185,219,223,199,48,112,89,108,74,65,255,140,249,176,120,223,17,200,172,102,122,187,140,237,232,10,16,64,123,116,118,121,76,215,205 };
    byte_vec_t pk { 4,141,91,97,90,216,102,235,221,67,10,25,36,134,166,171,183,153,25,134,76,103,165,190,109,176,111,73,60,51,233,101,195,48,155,41,157,44,174,199,4,229,68,77,180,21,228,84,108,134,209,7,249,6,63,8,177,115,166,173,97,140,80,149,3 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 945 ") {
    byte_vec_t msg { 126,221,129,102 };
    byte_vec_t sig { 49,84,112,239,209,13,48,156,138,223,163,219,4,9,244,152,57,114,68,253,26,99,47,251,246,221,151,14,161,9,203,48,245,211,59,61,176,196,55,109,238,129,101,114,15,194,195,91,113,33,117,5,78,54,127,183,188,158,43,219,190,115,67,253 };
    byte_vec_t pk { 4,120,192,199,221,53,116,74,158,212,23,28,186,164,189,245,150,248,139,96,248,134,246,124,136,221,211,121,130,215,115,250,15,159,147,51,228,73,82,58,166,200,218,47,110,25,254,95,254,243,219,150,44,39,238,135,11,225,240,88,9,109,40,70,148 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 945 ") {
    byte_vec_t msg { 69,137,221,96 };
    byte_vec_t sig { 66,83,59,193,188,18,235,24,107,52,140,149,148,211,82,139,90,128,39,93,145,37,0,200,237,202,255,83,99,65,93,20,112,201,118,108,73,124,110,182,85,213,204,14,218,233,222,91,194,180,254,172,43,169,36,190,145,2,45,47,43,50,185,171 };
    byte_vec_t pk { 2,17,74,90,5,128,219,136,178,50,159,126,239,71,247,2,101,69,65,143,71,227,83,123,100,87,203,51,81,35,134,227,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 945 ") {
    byte_vec_t msg { 42,138,223,134 };
    byte_vec_t sig { 225,21,135,179,4,184,145,177,82,92,108,248,41,31,89,130,67,149,207,163,214,229,34,143,26,231,228,27,34,250,201,22,250,174,56,66,38,2,92,112,60,57,169,33,101,129,151,239,78,197,234,53,241,95,7,206,185,247,174,238,173,214,203,190 };
    byte_vec_t pk { 2,222,235,151,117,150,40,84,126,234,4,165,169,130,73,170,227,211,201,240,245,209,26,4,28,38,53,106,231,162,176,105,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 946 ") {
    byte_vec_t msg { 3,49,251,172 };
    byte_vec_t sig { 223,72,59,227,133,9,156,190,48,94,134,209,129,71,255,198,218,150,59,254,42,246,136,94,77,110,223,13,125,220,82,54,224,136,31,164,112,56,103,33,205,87,84,31,4,39,3,40,214,137,13,5,180,58,132,250,13,52,239,101,125,185,123,167 };
    byte_vec_t pk { 4,27,66,209,155,240,32,233,172,220,241,244,240,73,52,95,193,215,29,238,63,237,177,130,58,207,177,183,252,37,172,62,0,215,214,156,153,47,141,169,216,46,103,108,200,102,152,183,75,219,150,209,32,67,86,232,35,18,183,164,18,165,37,100,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 946 ") {
    byte_vec_t msg { 202,246,177,110 };
    byte_vec_t sig { 72,120,247,14,31,255,55,231,246,24,150,61,2,187,69,244,84,81,245,32,9,186,169,62,130,141,31,125,160,15,203,137,23,162,52,243,244,90,20,106,166,153,82,159,57,233,233,50,131,213,253,122,9,164,168,101,49,218,233,28,237,167,159,10 };
    byte_vec_t pk { 4,104,195,14,209,145,138,202,139,125,147,114,87,119,149,221,47,210,17,166,3,95,209,237,62,70,178,146,179,152,9,16,109,177,110,191,116,70,63,121,123,25,232,60,51,86,31,177,22,242,189,88,75,132,51,33,168,31,216,200,122,193,254,33,68 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 946 ") {
    byte_vec_t msg { 218,250,155,129 };
    byte_vec_t sig { 44,216,30,209,235,190,243,14,164,82,79,43,43,81,236,81,37,9,110,233,58,192,211,75,2,94,129,142,225,94,177,145,238,59,197,80,18,131,170,132,199,170,248,230,93,170,130,121,84,187,219,106,231,129,114,109,106,25,246,243,206,148,162,179 };
    byte_vec_t pk { 3,223,46,151,42,80,79,245,17,131,46,176,122,181,191,15,48,176,119,81,49,164,119,251,245,187,236,181,144,220,222,6,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 946 ") {
    byte_vec_t msg { 185,161,138,253 };
    byte_vec_t sig { 86,32,5,50,6,244,142,89,133,32,72,86,115,241,58,249,159,33,210,153,154,179,227,63,25,121,120,120,59,61,238,247,204,245,112,87,94,133,28,168,155,127,176,92,30,241,19,182,185,146,159,224,181,218,1,166,151,52,190,70,158,33,119,120 };
    byte_vec_t pk { 2,119,166,249,146,170,70,6,10,21,175,236,186,29,236,114,96,103,29,115,78,132,215,67,48,90,72,228,83,26,167,7,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 947 ") {
    byte_vec_t msg { 187,63,11,173 };
    byte_vec_t sig { 47,251,132,117,43,199,233,3,14,143,54,61,104,184,145,160,78,25,147,22,36,9,188,101,183,86,212,35,223,227,232,77,198,36,68,239,5,127,48,75,2,39,117,70,158,70,121,57,43,67,235,47,166,93,141,31,196,20,228,220,244,142,105,125 };
    byte_vec_t pk { 4,50,17,253,166,203,151,46,141,4,21,38,191,234,127,8,95,199,45,76,170,9,127,158,71,253,97,240,66,111,133,121,99,208,14,113,212,242,83,14,171,96,136,107,182,184,52,128,170,9,171,15,176,187,66,252,53,254,97,190,190,198,54,176,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 947 ") {
    byte_vec_t msg { 51,210,226,193 };
    byte_vec_t sig { 186,8,49,122,34,195,1,156,139,112,32,166,156,71,133,51,162,187,187,61,111,153,207,154,83,226,157,129,152,198,75,180,93,64,142,149,139,244,254,197,246,44,86,214,143,198,44,38,206,51,67,7,170,17,149,35,64,58,169,20,208,95,210,129 };
    byte_vec_t pk { 4,121,151,18,15,246,245,101,9,214,143,214,102,91,177,164,195,32,147,232,29,17,185,92,110,177,172,81,110,118,212,224,81,189,126,214,184,238,92,23,56,234,15,233,9,25,149,12,177,208,154,41,234,85,37,44,160,71,220,68,150,214,90,22,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 947 ") {
    byte_vec_t msg { 102,49,92,204 };
    byte_vec_t sig { 241,224,230,142,58,209,179,180,65,22,51,152,240,75,42,47,95,7,93,124,197,122,17,73,59,249,145,250,113,4,1,31,159,53,244,154,168,189,58,74,112,44,78,66,95,129,173,83,210,142,18,49,37,26,100,49,195,233,186,41,19,15,29,125 };
    byte_vec_t pk { 2,48,104,120,8,39,111,199,197,255,98,146,216,189,72,111,27,117,145,4,73,18,152,238,6,198,232,164,55,139,110,95,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 947 ") {
    byte_vec_t msg { 54,109,223,61 };
    byte_vec_t sig { 124,190,209,23,245,248,109,232,23,251,176,126,138,13,85,160,16,100,213,43,207,250,116,196,133,145,164,204,206,7,202,158,207,6,135,43,98,36,169,253,15,173,217,121,212,1,218,129,73,102,182,99,45,25,147,105,39,244,225,245,221,106,190,12 };
    byte_vec_t pk { 3,185,148,149,77,133,114,223,245,157,251,238,9,146,181,185,240,48,66,74,56,10,209,207,45,175,233,144,214,173,196,40,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 948 ") {
    byte_vec_t msg { 198,142,46,30 };
    byte_vec_t sig { 103,206,66,114,192,202,147,125,17,150,6,43,201,42,230,104,78,55,151,149,151,65,124,68,185,199,247,109,18,156,140,153,143,135,178,134,242,200,105,35,179,3,101,229,18,57,216,108,22,219,74,37,210,231,163,8,22,28,57,102,57,60,104,71 };
    byte_vec_t pk { 4,186,225,84,94,117,186,124,91,191,215,248,191,19,161,169,115,84,45,137,124,173,185,155,181,208,96,231,241,45,251,191,26,213,171,231,50,113,122,181,119,165,93,0,159,182,108,173,230,22,1,188,7,158,53,109,69,28,8,114,0,248,225,165,219 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 948 ") {
    byte_vec_t msg { 142,41,182,248 };
    byte_vec_t sig { 100,234,0,246,185,149,186,171,68,134,167,85,201,74,32,224,181,13,226,216,129,152,79,161,84,53,88,103,30,236,162,118,125,199,15,0,60,164,172,142,11,77,219,19,146,243,140,222,141,10,35,61,162,4,4,108,32,134,17,234,189,201,87,27 };
    byte_vec_t pk { 4,237,36,240,121,0,134,38,240,153,84,20,33,10,215,59,10,173,42,21,149,227,56,218,225,223,203,1,148,124,62,5,78,136,216,218,187,26,28,222,22,238,99,5,51,52,96,42,27,31,254,158,211,121,205,199,118,230,3,178,226,167,211,116,238 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 948 ") {
    byte_vec_t msg { 39,56,210,202 };
    byte_vec_t sig { 190,165,36,8,237,51,196,135,214,116,219,93,62,191,218,155,15,75,255,189,115,123,4,46,69,51,62,0,232,109,135,50,235,100,186,6,227,73,24,55,219,122,151,6,50,116,96,181,69,98,213,155,213,252,63,49,238,28,100,26,174,105,25,102 };
    byte_vec_t pk { 3,106,161,30,85,44,12,39,230,115,56,11,173,60,159,25,109,134,101,140,165,176,63,142,217,178,117,226,253,200,19,179,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 948 ") {
    byte_vec_t msg { 186,12,164,218 };
    byte_vec_t sig { 49,135,122,50,253,225,54,73,190,19,156,82,68,226,43,13,212,139,249,79,30,179,206,80,96,128,2,82,115,68,82,29,165,176,96,92,146,182,57,163,89,137,82,98,8,231,227,165,209,126,10,160,7,250,169,30,16,171,137,88,134,173,39,146 };
    byte_vec_t pk { 3,93,64,164,125,103,233,160,220,243,199,82,214,246,240,132,181,223,27,180,158,191,95,50,4,131,147,70,243,249,225,42,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 949 ") {
    byte_vec_t msg { 35,53,204,58 };
    byte_vec_t sig { 176,138,126,92,174,28,152,136,14,154,99,125,211,212,152,216,252,65,16,149,146,178,129,140,137,106,151,93,220,247,5,114,105,173,156,139,244,150,3,51,197,194,225,100,51,234,238,14,173,18,195,50,167,86,8,185,209,85,136,65,54,221,124,30 };
    byte_vec_t pk { 4,5,109,249,245,196,109,87,108,154,137,90,129,89,108,1,124,22,12,111,9,224,99,96,246,159,99,78,135,177,22,248,185,42,234,197,56,118,42,225,189,97,160,243,240,174,0,254,242,232,173,98,70,150,231,26,46,95,186,67,167,20,228,20,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 949 ") {
    byte_vec_t msg { 137,125,199,125 };
    byte_vec_t sig { 79,142,211,148,146,171,2,40,139,117,188,108,160,236,161,141,106,5,82,64,105,240,145,129,216,172,53,155,142,15,60,245,18,234,66,35,59,72,94,243,25,158,14,60,103,12,244,59,103,40,182,250,93,45,68,10,60,42,40,80,174,207,75,127 };
    byte_vec_t pk { 4,249,194,164,72,141,18,189,215,196,129,185,11,246,112,188,163,139,114,57,27,202,117,51,94,139,33,247,238,214,28,189,203,203,217,127,195,101,206,250,44,67,200,182,13,28,142,60,184,54,224,18,132,106,137,90,202,30,28,122,64,121,56,195,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 949 ") {
    byte_vec_t msg { 93,8,48,147 };
    byte_vec_t sig { 95,34,58,18,176,106,206,148,162,93,140,201,138,164,162,208,140,133,252,118,250,209,55,140,38,23,217,106,176,13,221,220,252,11,7,116,17,236,195,21,81,226,75,21,137,184,48,211,28,118,54,49,5,101,100,14,199,208,157,143,129,68,72,221 };
    byte_vec_t pk { 3,159,160,58,39,231,39,240,140,144,121,235,18,66,25,35,25,8,244,28,14,43,210,32,2,201,117,78,178,132,170,6,248 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 949 ") {
    byte_vec_t msg { 93,132,226,169 };
    byte_vec_t sig { 116,126,7,101,96,35,117,189,152,8,40,168,81,25,240,204,142,248,165,238,12,28,120,12,173,143,65,165,211,191,0,238,56,145,253,250,116,210,228,151,128,44,223,179,113,40,234,238,17,111,22,65,104,197,143,14,182,82,156,166,47,139,251,68 };
    byte_vec_t pk { 2,225,141,72,20,55,147,19,107,141,132,19,249,167,139,249,133,242,119,184,136,157,236,25,156,83,110,209,83,82,26,153,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 950 ") {
    byte_vec_t msg { 239,153,143,110 };
    byte_vec_t sig { 242,108,238,85,245,84,244,194,5,141,196,134,152,116,155,122,85,67,13,182,179,34,209,226,186,153,186,210,189,250,244,42,55,68,78,34,126,31,70,152,116,31,146,165,163,189,72,15,19,0,22,78,35,183,137,50,152,116,210,216,110,79,31,227 };
    byte_vec_t pk { 4,45,251,127,219,88,43,254,93,102,2,69,130,210,119,133,47,214,37,21,110,167,105,167,111,194,124,123,79,111,211,7,67,15,32,9,125,94,190,30,2,122,142,3,105,34,114,223,215,48,88,221,92,67,90,128,136,166,61,115,34,93,122,207,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 950 ") {
    byte_vec_t msg { 78,178,154,26 };
    byte_vec_t sig { 116,157,180,3,142,80,72,234,252,146,25,102,153,47,18,62,153,238,48,118,136,63,175,247,55,171,149,232,28,214,235,3,85,118,57,248,199,219,228,180,239,254,150,47,237,128,88,252,33,21,30,81,111,94,238,216,244,145,229,165,89,9,115,193 };
    byte_vec_t pk { 4,230,192,19,171,228,161,157,215,240,58,173,109,244,146,233,73,147,183,43,95,130,40,225,95,136,221,201,152,58,116,68,35,239,135,16,66,246,189,77,28,145,39,156,61,248,225,196,92,171,1,84,234,98,188,157,119,162,128,37,208,24,222,210,25 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 950 ") {
    byte_vec_t msg { 235,184,253,234 };
    byte_vec_t sig { 94,77,215,136,122,246,159,65,93,248,185,38,210,1,210,111,179,187,229,215,218,65,39,67,145,233,83,172,82,121,253,206,47,145,78,77,222,216,81,134,210,58,8,11,91,185,168,184,24,241,51,175,249,224,252,247,17,208,1,45,28,208,52,54 };
    byte_vec_t pk { 3,170,71,150,201,193,179,113,130,130,222,11,144,236,150,56,207,207,155,99,237,247,172,28,123,76,168,224,86,42,203,161,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 950 ") {
    byte_vec_t msg { 98,182,241,156 };
    byte_vec_t sig { 198,86,158,43,14,236,75,153,209,14,161,41,33,44,190,152,240,134,43,85,244,36,51,83,170,126,193,56,13,8,191,163,251,212,137,229,170,119,72,119,212,98,143,119,236,21,19,123,214,49,0,62,105,230,164,86,195,1,207,38,28,45,253,89 };
    byte_vec_t pk { 2,32,145,84,225,253,176,67,83,80,114,216,94,223,237,253,151,43,157,183,239,74,190,137,221,234,162,123,8,33,227,183,139 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 951 ") {
    byte_vec_t msg { 94,197,1,120 };
    byte_vec_t sig { 48,119,109,40,27,237,20,124,27,81,108,19,127,219,224,96,90,20,27,179,215,150,96,255,186,135,220,65,216,212,121,238,147,212,144,18,97,201,56,145,21,202,140,9,100,111,87,126,227,236,81,105,179,0,16,131,68,30,100,3,232,201,167,239 };
    byte_vec_t pk { 4,92,254,255,45,182,127,157,196,19,148,163,224,82,187,10,142,234,207,166,244,71,119,181,64,93,151,82,5,9,215,47,128,114,29,177,193,68,113,65,26,52,43,255,30,64,99,96,248,255,93,178,113,134,59,238,253,255,84,219,217,229,38,24,138 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 951 ") {
    byte_vec_t msg { 110,139,125,63 };
    byte_vec_t sig { 200,134,5,67,189,254,40,158,136,147,20,53,45,141,247,10,17,25,118,20,37,226,188,87,168,26,120,100,176,102,132,192,43,47,47,72,11,85,86,114,235,157,136,17,67,13,68,226,224,254,253,225,13,228,89,7,26,34,55,208,177,88,20,87 };
    byte_vec_t pk { 4,210,23,106,99,67,132,173,123,44,169,52,77,225,139,40,62,115,158,182,237,246,37,238,156,71,140,117,122,194,1,3,208,56,195,187,9,155,109,158,187,189,165,93,181,7,125,213,184,231,200,69,98,50,211,34,118,245,172,213,23,131,208,135,30 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 951 ") {
    byte_vec_t msg { 81,249,44,122 };
    byte_vec_t sig { 235,34,63,210,2,228,89,241,241,224,0,183,32,209,210,161,251,43,43,53,116,192,172,177,20,165,43,112,33,78,5,163,150,60,9,95,140,43,162,205,176,121,255,74,114,40,153,12,196,26,26,127,184,100,9,210,77,115,58,140,119,127,223,192 };
    byte_vec_t pk { 3,222,140,188,139,197,58,32,0,1,226,109,250,5,24,249,245,234,120,250,192,191,233,119,69,224,25,220,154,38,15,179,217 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 951 ") {
    byte_vec_t msg { 126,11,255,187 };
    byte_vec_t sig { 159,186,137,114,38,68,53,43,40,98,200,10,88,239,88,181,133,244,163,216,207,3,5,164,202,250,193,236,167,81,208,10,32,112,5,211,0,145,19,214,219,249,21,30,14,234,172,75,224,2,234,66,140,223,78,14,46,109,246,193,21,3,239,150 };
    byte_vec_t pk { 3,204,231,185,14,119,10,237,225,185,16,29,126,65,204,54,52,25,39,7,40,125,23,221,152,48,62,217,13,235,103,43,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 952 ") {
    byte_vec_t msg { 174,30,120,73 };
    byte_vec_t sig { 149,211,238,212,106,150,221,125,83,203,207,161,1,92,180,65,179,142,107,63,16,254,194,252,226,181,139,221,203,228,156,62,75,93,207,234,42,135,174,123,114,142,18,223,244,45,102,153,132,125,43,1,98,136,46,158,131,6,221,139,202,149,251,127 };
    byte_vec_t pk { 4,115,232,254,32,124,173,24,124,114,60,49,37,179,50,118,43,17,164,243,50,18,18,224,200,2,23,120,118,210,223,139,238,25,203,78,200,255,177,42,104,121,28,161,70,145,216,104,242,17,224,114,158,58,3,243,20,174,193,176,208,194,114,21,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 952 ") {
    byte_vec_t msg { 119,38,163,157 };
    byte_vec_t sig { 234,46,155,133,18,189,14,109,207,255,153,79,124,158,143,214,42,44,220,136,73,49,51,60,166,73,111,170,89,105,137,8,239,109,171,105,169,139,197,78,13,162,84,130,146,246,136,34,222,21,250,40,50,227,242,126,150,37,185,42,122,224,223,40 };
    byte_vec_t pk { 4,32,203,178,137,228,237,158,50,254,242,192,124,62,227,98,144,251,158,61,37,115,219,151,104,142,131,72,215,248,169,79,90,89,127,250,189,237,4,32,2,141,66,170,127,201,242,105,190,72,180,117,12,218,183,84,186,119,230,8,230,86,165,19,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 952 ") {
    byte_vec_t msg { 176,133,36,151 };
    byte_vec_t sig { 3,92,175,31,27,132,148,94,67,83,173,29,49,211,159,182,213,18,144,225,211,239,243,239,185,111,251,79,33,215,214,114,117,112,195,124,148,48,230,47,66,226,211,143,44,84,181,21,103,88,179,196,82,220,199,208,36,121,79,220,245,235,202,238 };
    byte_vec_t pk { 2,74,84,39,105,22,77,102,198,20,136,91,225,157,10,223,227,77,114,253,14,156,44,90,24,84,50,74,93,181,190,92,101 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 952 ") {
    byte_vec_t msg { 55,107,32,150 };
    byte_vec_t sig { 177,139,190,222,142,251,77,177,46,66,201,98,249,211,147,34,111,247,207,180,12,87,203,97,161,252,254,217,99,247,132,104,33,206,70,182,184,203,24,247,183,136,217,184,13,254,225,232,144,55,187,236,87,77,60,113,250,159,150,109,83,168,97,143 };
    byte_vec_t pk { 2,188,156,125,61,48,165,224,245,172,198,119,81,189,215,111,127,6,109,14,110,174,177,6,89,119,32,41,65,56,124,21,66 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 953 ") {
    byte_vec_t msg { 64,158,236,110 };
    byte_vec_t sig { 22,219,187,211,229,144,7,25,7,148,133,71,103,102,14,151,27,153,159,96,46,253,19,169,120,234,135,101,2,193,124,10,193,151,175,22,101,176,239,127,61,100,4,124,59,215,118,1,87,249,214,240,109,44,67,164,95,217,159,163,201,95,228,97 };
    byte_vec_t pk { 4,188,106,228,161,236,50,36,90,120,180,134,157,11,159,251,153,9,229,151,24,225,41,114,246,252,156,92,30,25,111,13,181,148,117,177,179,91,101,8,38,108,188,178,96,155,6,30,223,160,188,193,115,114,90,16,83,216,10,225,32,159,201,192,205 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 953 ") {
    byte_vec_t msg { 231,186,72,223 };
    byte_vec_t sig { 201,250,213,18,59,207,142,64,93,79,215,189,228,156,90,139,148,161,205,190,100,48,35,176,163,61,195,60,28,106,42,122,78,150,197,92,215,245,24,18,13,254,6,45,209,173,64,151,220,53,128,77,83,16,61,225,117,94,218,235,87,219,49,160 };
    byte_vec_t pk { 4,36,5,29,75,4,68,143,57,48,137,40,167,92,99,126,46,213,165,56,24,149,151,106,126,73,74,85,64,34,161,11,227,79,44,8,240,247,35,40,171,98,94,88,235,179,232,120,173,94,207,204,63,147,56,92,0,186,34,28,124,178,32,167,122 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 953 ") {
    byte_vec_t msg { 209,125,115,196 };
    byte_vec_t sig { 1,87,32,243,158,165,156,112,101,195,0,248,96,40,40,111,163,102,124,127,77,162,79,247,19,98,2,80,179,207,243,109,181,116,55,70,189,10,156,104,96,57,26,52,199,6,81,238,183,232,230,193,204,229,77,229,91,178,46,160,225,178,198,9 };
    byte_vec_t pk { 3,74,203,151,126,149,103,234,241,77,36,52,199,92,99,141,8,55,176,167,16,251,65,185,104,104,242,147,160,218,99,115,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 953 ") {
    byte_vec_t msg { 149,131,44,90 };
    byte_vec_t sig { 47,140,136,233,155,110,129,25,170,212,246,138,156,222,98,214,22,78,69,51,7,192,173,76,103,168,52,12,244,186,57,223,118,218,101,29,202,157,76,198,89,110,216,172,95,214,229,31,156,42,65,137,105,145,109,93,182,33,24,203,255,141,135,67 };
    byte_vec_t pk { 3,24,93,172,149,164,162,55,226,121,122,226,115,198,12,108,227,112,123,144,190,189,52,147,169,39,92,128,5,20,184,223,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 954 ") {
    byte_vec_t msg { 246,251,233,40 };
    byte_vec_t sig { 164,168,82,108,42,160,148,167,129,54,233,228,110,102,53,0,109,43,141,93,88,136,132,189,142,249,117,28,11,237,238,205,87,46,13,0,144,241,0,32,107,198,217,56,105,138,90,104,53,60,170,178,124,57,175,91,62,224,152,42,184,15,49,77 };
    byte_vec_t pk { 4,44,69,157,53,153,13,134,77,94,140,220,30,112,65,35,149,111,99,123,65,182,187,221,206,183,26,251,32,7,223,241,64,75,146,230,134,57,248,2,162,51,248,13,82,52,162,246,32,18,3,11,51,37,35,15,178,163,19,123,97,158,52,153,11 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 954 ") {
    byte_vec_t msg { 140,114,194,36 };
    byte_vec_t sig { 221,186,149,105,139,62,76,71,181,216,11,106,47,78,81,231,255,150,79,0,192,243,232,62,35,50,103,115,81,213,211,225,111,31,211,112,205,46,250,6,31,102,87,28,78,229,4,60,92,158,172,72,172,186,186,107,139,113,153,117,83,127,53,72 };
    byte_vec_t pk { 4,41,76,248,46,148,225,227,36,60,213,92,218,222,56,170,202,91,120,110,100,157,212,98,17,123,235,32,173,188,63,133,245,247,22,129,166,167,201,44,155,27,12,208,152,43,231,17,14,3,225,133,111,227,76,121,3,50,84,39,0,60,170,216,109 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 954 ") {
    byte_vec_t msg { 90,232,98,23 };
    byte_vec_t sig { 151,138,200,92,189,252,80,103,118,101,51,85,21,172,25,146,216,12,128,236,51,226,176,33,182,207,60,246,23,98,153,235,167,49,23,198,68,106,195,98,175,25,142,221,250,191,147,21,86,235,132,1,187,254,231,124,220,251,162,175,36,254,143,225 };
    byte_vec_t pk { 3,96,247,19,148,40,129,82,122,7,222,25,95,116,51,8,127,153,89,85,173,153,186,220,1,138,243,54,227,16,109,98,23 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 954 ") {
    byte_vec_t msg { 250,139,30,1 };
    byte_vec_t sig { 71,153,60,239,75,19,30,199,201,60,80,252,255,100,175,209,168,83,3,46,86,240,88,141,184,3,108,111,61,188,112,64,137,250,180,55,233,10,178,184,207,116,233,157,188,85,184,192,179,57,10,112,175,4,25,192,91,63,125,74,251,17,104,19 };
    byte_vec_t pk { 3,24,98,230,80,243,171,44,80,149,55,82,252,9,120,12,131,57,130,167,225,45,130,194,18,37,187,112,217,214,35,251,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 955 ") {
    byte_vec_t msg { 61,207,99,163 };
    byte_vec_t sig { 11,228,90,117,166,177,56,45,126,232,29,3,228,246,79,222,8,5,240,240,105,172,112,27,155,250,26,159,226,128,93,76,131,86,236,207,201,83,178,175,79,216,118,150,207,18,187,56,125,18,199,55,200,87,222,171,52,57,215,43,223,117,220,98 };
    byte_vec_t pk { 4,56,65,83,90,60,175,135,150,168,23,198,30,45,173,216,162,78,182,16,205,163,250,68,85,96,94,158,147,5,255,174,185,241,30,176,12,81,30,209,225,238,121,39,174,11,71,124,215,188,218,25,161,61,87,46,176,174,165,159,49,87,161,206,6 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 955 ") {
    byte_vec_t msg { 176,197,215,76 };
    byte_vec_t sig { 19,213,123,209,133,18,101,182,74,70,169,0,6,86,39,240,141,3,255,123,129,214,144,240,80,75,165,201,6,187,35,171,135,210,235,53,245,170,198,162,95,65,141,66,57,187,132,179,167,109,72,81,180,251,167,45,74,6,194,21,150,165,44,206 };
    byte_vec_t pk { 4,214,39,218,11,69,156,44,168,251,49,170,164,94,231,233,209,186,52,111,251,245,202,128,232,191,87,3,185,254,9,157,95,191,200,209,157,45,84,86,43,27,78,154,119,210,1,69,9,118,156,35,73,87,14,229,96,20,28,166,54,148,227,23,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 955 ") {
    byte_vec_t msg { 47,158,69,155 };
    byte_vec_t sig { 226,48,85,233,126,225,69,114,127,82,95,246,157,252,159,105,90,52,79,204,54,116,203,47,224,184,0,180,252,245,151,21,251,82,26,54,27,31,80,253,227,206,167,67,108,248,82,23,87,4,114,79,154,252,208,50,55,115,183,15,18,173,103,52 };
    byte_vec_t pk { 3,216,6,88,0,224,28,214,6,51,42,63,122,181,8,157,176,18,64,252,120,140,129,159,125,58,221,47,181,135,89,208,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 955 ") {
    byte_vec_t msg { 60,64,90,165 };
    byte_vec_t sig { 112,220,9,27,54,236,178,45,93,47,109,9,211,142,135,63,91,95,178,110,201,223,6,5,10,205,118,239,228,211,135,82,182,162,132,94,242,193,96,183,1,90,8,26,211,175,254,178,127,39,66,44,40,170,224,176,137,46,111,93,170,70,226,248 };
    byte_vec_t pk { 3,247,218,211,27,35,122,30,27,11,129,239,26,246,92,106,42,86,213,145,42,75,110,231,173,13,14,27,90,28,239,20,95 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 956 ") {
    byte_vec_t msg { 184,57,47,188 };
    byte_vec_t sig { 192,152,131,32,26,96,206,86,57,9,135,41,117,179,121,240,246,50,238,85,137,31,109,98,134,111,14,96,215,34,168,243,240,60,164,209,39,30,179,31,226,70,91,249,211,164,25,244,227,153,59,152,37,254,14,179,104,253,59,54,74,193,203,26 };
    byte_vec_t pk { 4,16,126,216,169,58,17,2,219,217,209,226,18,255,181,181,214,7,85,225,127,12,102,157,147,242,37,56,92,132,231,40,165,75,252,159,38,42,55,219,111,146,117,15,116,5,240,141,65,221,140,76,77,0,135,51,27,28,25,57,206,130,235,216,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 956 ") {
    byte_vec_t msg { 246,54,251,143 };
    byte_vec_t sig { 18,49,24,90,235,21,213,82,85,243,215,255,106,218,199,53,250,199,58,27,42,45,19,252,30,249,180,163,138,204,183,174,17,117,145,193,127,235,204,239,142,26,168,54,212,135,37,192,199,138,122,171,22,216,230,121,222,22,64,98,166,155,186,63 };
    byte_vec_t pk { 4,189,149,2,155,239,190,248,208,52,53,193,208,125,67,19,128,90,2,49,105,185,188,252,5,18,29,249,203,75,144,134,15,238,102,27,22,64,243,92,120,69,210,34,202,228,105,254,48,184,128,103,226,68,52,74,13,237,18,140,21,165,212,18,29 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 956 ") {
    byte_vec_t msg { 178,154,67,84 };
    byte_vec_t sig { 203,8,234,92,178,245,18,157,180,122,242,34,126,205,158,108,28,231,194,99,52,246,134,97,168,102,116,17,14,48,199,183,39,213,146,77,55,133,12,231,234,113,185,196,45,201,183,204,128,168,21,209,127,86,128,23,212,6,241,109,49,235,224,178 };
    byte_vec_t pk { 2,21,125,238,120,42,216,117,120,163,182,50,208,97,47,243,85,190,225,76,101,152,138,246,18,56,191,58,62,252,60,139,88 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 956 ") {
    byte_vec_t msg { 219,244,94,96 };
    byte_vec_t sig { 43,25,41,238,242,115,127,69,250,176,230,26,235,227,102,233,30,238,16,149,153,222,156,38,127,226,249,92,237,61,72,104,108,133,141,240,86,115,96,133,101,198,73,3,203,129,118,199,33,162,218,102,137,243,208,1,19,45,62,168,230,46,221,63 };
    byte_vec_t pk { 2,149,91,118,177,209,11,202,251,235,115,97,164,83,190,181,19,57,152,225,85,173,179,115,213,247,206,2,227,114,38,232,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 957 ") {
    byte_vec_t msg { 140,150,35,139 };
    byte_vec_t sig { 140,181,139,182,191,176,170,245,231,69,187,27,171,255,109,89,93,19,110,31,115,176,181,118,73,223,181,28,17,102,242,41,157,90,165,85,211,203,117,42,182,127,164,152,45,217,195,55,213,83,90,155,136,115,152,197,179,187,84,11,52,11,234,86 };
    byte_vec_t pk { 4,115,188,178,1,38,235,57,68,255,158,92,190,128,125,246,174,233,84,20,170,239,141,121,182,151,167,236,185,151,150,137,30,166,59,39,90,191,17,197,67,156,87,214,101,66,50,4,197,67,102,174,107,178,5,243,156,55,186,27,243,192,86,155,102 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 957 ") {
    byte_vec_t msg { 217,81,131,153 };
    byte_vec_t sig { 197,251,144,215,218,175,103,147,75,75,25,207,137,162,224,152,62,119,84,229,235,34,100,154,202,175,110,231,84,175,232,203,227,148,144,55,65,108,231,177,41,154,95,118,12,78,181,46,4,157,240,229,183,110,196,236,142,66,105,127,244,115,79,18 };
    byte_vec_t pk { 4,60,96,135,150,204,115,247,129,40,154,6,104,218,80,3,109,66,2,210,5,56,65,155,140,40,113,223,17,254,157,145,27,190,158,20,122,149,16,101,122,91,42,160,242,33,124,101,141,173,28,112,16,79,86,142,206,177,58,236,11,227,199,195,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 957 ") {
    byte_vec_t msg { 63,224,66,68 };
    byte_vec_t sig { 46,45,128,175,6,87,137,35,105,131,7,22,63,177,225,83,36,142,240,217,70,1,69,137,224,165,143,55,94,107,31,69,18,19,104,225,29,215,214,79,5,176,219,179,9,80,240,217,159,31,181,220,235,200,31,41,215,160,3,114,34,75,194,36 };
    byte_vec_t pk { 2,203,98,233,62,137,12,37,90,153,52,221,25,193,61,240,29,15,40,123,3,54,168,23,65,129,29,247,160,209,46,112,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 957 ") {
    byte_vec_t msg { 139,160,222,220 };
    byte_vec_t sig { 201,160,109,8,238,3,182,245,233,238,6,139,194,35,41,46,152,96,78,168,117,75,147,255,250,117,106,238,248,20,252,144,96,13,84,200,245,249,112,162,168,233,126,207,136,54,87,127,70,131,43,15,140,151,88,161,168,188,251,38,80,15,131,76 };
    byte_vec_t pk { 2,62,60,114,94,180,55,130,186,87,161,243,96,23,105,231,47,177,115,90,254,151,88,86,207,245,111,92,23,0,247,138,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 958 ") {
    byte_vec_t msg { 1,168,138,180 };
    byte_vec_t sig { 159,182,153,125,25,171,95,3,183,93,24,21,190,241,146,192,188,18,61,176,236,198,41,5,201,86,161,17,95,1,98,94,0,254,159,187,2,141,111,21,195,120,219,78,61,201,78,54,241,122,239,204,58,95,85,72,120,140,188,122,232,171,234,21 };
    byte_vec_t pk { 4,177,167,97,132,110,148,162,87,104,247,154,5,255,122,88,102,243,68,56,65,239,200,147,49,34,197,128,38,128,99,102,43,178,155,238,124,208,150,99,84,174,47,102,165,169,196,237,169,141,46,51,182,240,27,193,213,186,50,126,81,29,250,179,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 958 ") {
    byte_vec_t msg { 88,131,49,254 };
    byte_vec_t sig { 220,170,57,153,197,100,255,178,12,49,253,81,51,117,82,85,154,30,41,72,32,178,35,139,12,90,213,209,53,40,204,187,112,181,62,108,191,253,70,144,86,86,124,104,149,249,98,9,135,132,115,132,100,74,185,19,126,52,58,207,202,228,221,237 };
    byte_vec_t pk { 4,82,18,221,93,171,214,74,173,62,255,227,174,32,164,244,231,53,160,69,73,122,119,197,24,184,229,2,142,148,53,52,209,179,50,58,41,230,201,178,118,113,102,170,243,229,36,153,222,204,106,139,59,58,106,185,45,230,120,111,148,3,92,97,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 958 ") {
    byte_vec_t msg { 153,187,197,110 };
    byte_vec_t sig { 100,127,163,193,252,80,59,205,141,83,175,102,192,180,217,36,103,29,29,29,19,184,50,58,76,60,102,50,165,110,99,87,241,206,15,63,32,255,229,60,153,96,229,202,7,188,4,218,89,28,149,28,45,167,150,50,214,12,238,159,174,191,211,70 };
    byte_vec_t pk { 3,132,190,193,250,108,22,202,154,28,138,4,116,181,168,137,101,34,31,249,103,173,37,245,131,134,1,188,117,7,231,223,42 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 958 ") {
    byte_vec_t msg { 200,216,195,119 };
    byte_vec_t sig { 179,41,182,212,83,204,94,187,164,185,19,32,114,8,125,69,242,39,101,76,14,210,165,110,165,200,104,40,242,244,210,253,225,121,49,181,233,199,112,200,122,69,205,21,223,36,197,230,97,255,253,180,79,200,84,203,136,99,46,224,156,216,249,21 };
    byte_vec_t pk { 3,54,154,185,117,210,246,151,89,167,70,149,108,7,57,24,10,253,225,36,34,160,153,51,247,56,68,172,174,136,238,221,35 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 959 ") {
    byte_vec_t msg { 13,151,193,185 };
    byte_vec_t sig { 147,134,237,71,213,157,138,3,30,235,18,148,146,192,156,113,161,35,144,36,57,237,192,33,50,42,231,126,153,231,189,139,7,157,88,240,194,54,45,176,220,32,96,115,117,0,87,255,151,41,64,32,95,88,63,44,55,74,215,126,214,189,74,253 };
    byte_vec_t pk { 4,45,8,8,127,170,207,62,9,120,158,225,88,1,242,147,141,151,224,135,149,202,17,97,68,227,77,126,90,242,58,38,209,246,27,167,106,254,49,37,207,181,213,249,230,68,21,228,78,119,172,40,195,127,164,9,102,96,21,160,92,5,7,90,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 959 ") {
    byte_vec_t msg { 177,218,221,194 };
    byte_vec_t sig { 153,21,169,247,83,104,241,92,1,217,144,147,35,11,93,239,172,63,116,57,134,224,214,17,193,28,130,137,190,25,155,118,73,211,162,202,224,73,253,11,253,212,41,1,21,94,70,247,148,74,67,162,62,144,56,155,216,24,203,7,158,106,173,74 };
    byte_vec_t pk { 4,173,188,142,251,204,69,190,253,134,97,76,115,117,199,218,229,189,162,166,52,156,153,252,2,2,205,41,52,248,80,239,241,16,197,207,211,204,243,122,217,102,7,13,234,81,158,17,115,237,64,219,148,55,253,115,156,52,63,9,185,40,165,216,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 959 ") {
    byte_vec_t msg { 95,79,140,64 };
    byte_vec_t sig { 187,150,242,150,169,91,28,84,247,25,13,49,180,222,110,58,24,160,100,158,201,91,218,215,215,214,203,86,36,12,98,13,56,73,4,162,177,119,17,1,120,22,100,216,109,67,74,11,188,223,191,122,4,132,41,255,127,202,189,232,66,220,108,45 };
    byte_vec_t pk { 3,67,162,103,187,171,41,30,124,191,225,165,162,76,209,77,6,176,0,102,180,33,150,42,184,49,37,237,36,127,127,125,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 959 ") {
    byte_vec_t msg { 252,105,91,97 };
    byte_vec_t sig { 86,19,215,19,28,80,31,148,226,107,143,37,155,143,116,115,189,65,31,228,145,136,23,221,208,172,225,2,125,123,230,187,47,141,180,63,20,6,149,217,195,48,130,150,197,142,110,19,17,32,193,141,224,65,90,155,87,203,41,233,255,55,176,162 };
    byte_vec_t pk { 3,28,116,2,90,116,135,173,67,223,112,206,247,60,195,224,111,87,11,147,66,3,108,183,250,0,69,204,252,3,171,11,51 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 960 ") {
    byte_vec_t msg { 77,175,17,234 };
    byte_vec_t sig { 207,67,45,211,181,193,74,241,128,94,239,132,45,101,38,153,230,73,175,108,67,134,14,239,172,244,233,107,57,88,227,1,37,24,4,30,213,122,229,30,63,155,82,153,204,133,72,225,22,234,189,101,201,78,116,243,89,225,236,2,187,160,18,249 };
    byte_vec_t pk { 4,9,8,242,196,170,195,29,252,201,251,157,101,226,75,189,187,192,222,55,87,41,74,149,64,182,154,37,154,239,239,117,135,252,235,46,150,13,73,84,160,36,180,11,252,235,205,214,78,95,92,142,215,87,252,86,139,158,110,172,91,121,247,154,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 960 ") {
    byte_vec_t msg { 62,15,118,2 };
    byte_vec_t sig { 74,63,211,159,223,66,37,33,186,38,55,196,67,192,28,112,180,149,139,92,86,186,190,141,70,120,176,220,79,38,54,137,95,133,230,198,33,92,217,144,103,103,88,99,89,84,42,158,155,141,7,225,255,177,108,248,71,152,250,180,247,10,133,157 };
    byte_vec_t pk { 4,254,162,30,14,13,164,125,186,52,218,30,2,141,205,39,81,143,80,231,234,239,17,84,186,147,219,119,208,31,73,93,9,15,161,220,125,142,80,93,164,189,149,77,238,160,232,217,0,43,227,187,35,0,23,44,139,52,242,152,243,169,151,153,186 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 960 ") {
    byte_vec_t msg { 182,205,253,100 };
    byte_vec_t sig { 178,90,16,103,146,163,106,85,220,197,252,9,186,129,117,30,157,122,196,78,37,79,120,46,55,169,217,101,26,115,224,243,216,124,176,249,211,25,230,51,170,54,44,30,179,253,73,185,176,142,31,116,75,89,45,44,106,169,89,15,3,59,24,202 };
    byte_vec_t pk { 3,89,229,210,3,6,225,198,159,251,157,116,10,72,27,100,64,228,208,162,113,168,40,125,170,5,223,67,111,172,237,54,124 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 960 ") {
    byte_vec_t msg { 17,21,167,73 };
    byte_vec_t sig { 129,85,106,81,5,100,114,22,155,19,155,183,89,125,4,171,59,53,244,47,91,161,111,196,154,46,115,6,33,235,39,4,80,41,44,1,216,133,189,225,63,240,193,6,190,241,181,122,128,91,133,16,92,81,229,219,230,214,39,137,100,238,54,163 };
    byte_vec_t pk { 3,10,102,118,106,92,117,75,248,27,197,116,30,206,51,12,35,248,149,160,157,241,0,182,149,46,60,147,28,95,117,220,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 961 ") {
    byte_vec_t msg { 155,144,185,187 };
    byte_vec_t sig { 188,106,99,9,116,202,179,92,182,25,49,36,218,111,164,200,183,149,115,247,40,126,160,244,112,218,122,217,128,136,77,245,198,52,118,120,137,48,28,37,81,134,23,183,127,61,171,237,91,131,44,74,98,248,248,71,194,184,177,233,0,161,244,71 };
    byte_vec_t pk { 4,42,179,231,75,46,226,80,247,170,36,76,169,174,127,255,152,46,177,152,106,97,76,209,101,20,224,196,217,159,20,131,161,166,8,217,248,59,202,74,33,144,48,246,212,13,147,77,232,72,215,136,33,30,8,70,24,199,180,128,92,102,30,102,204 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 961 ") {
    byte_vec_t msg { 79,215,248,221 };
    byte_vec_t sig { 145,94,165,73,151,0,46,199,146,117,96,88,75,128,157,114,74,170,85,111,107,67,125,225,81,10,176,67,19,36,32,175,227,6,151,138,245,223,81,159,65,89,202,210,246,156,191,115,221,63,221,18,23,49,45,43,235,195,62,46,20,191,169,208 };
    byte_vec_t pk { 4,106,125,43,28,108,196,47,193,187,15,105,89,113,49,39,93,129,209,183,162,2,136,106,219,9,128,151,122,23,162,68,5,195,135,56,36,101,55,137,150,187,196,152,148,80,84,233,74,168,95,225,11,151,173,255,82,140,203,191,244,184,231,20,225 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 961 ") {
    byte_vec_t msg { 110,177,82,7 };
    byte_vec_t sig { 84,157,119,3,159,58,226,61,49,59,132,6,155,4,15,49,242,9,140,8,13,97,129,187,221,192,230,214,214,164,208,128,23,83,246,53,191,18,131,35,63,144,105,177,38,143,225,33,240,172,190,87,49,36,142,142,92,34,27,166,22,182,196,106 };
    byte_vec_t pk { 2,80,157,71,216,107,107,250,98,144,29,254,79,249,207,53,152,70,133,117,239,0,138,212,33,176,228,206,223,174,163,239,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 961 ") {
    byte_vec_t msg { 101,64,219,24 };
    byte_vec_t sig { 93,244,193,39,67,179,248,13,255,217,75,28,131,40,140,89,121,195,121,176,179,255,249,48,175,192,44,206,69,108,9,188,106,141,13,108,201,162,248,145,183,4,221,75,120,90,81,52,159,30,178,22,81,251,96,109,106,38,216,65,129,77,31,152 };
    byte_vec_t pk { 3,74,69,84,15,181,186,206,242,152,119,67,59,17,150,87,40,131,168,104,1,221,71,149,95,94,17,235,56,243,92,237,153 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 962 ") {
    byte_vec_t msg { 33,221,118,252 };
    byte_vec_t sig { 185,64,86,61,85,68,5,197,65,224,82,186,212,218,164,214,117,29,177,160,28,22,115,179,244,206,148,68,227,224,142,119,102,105,197,83,222,223,97,196,115,92,20,196,131,12,175,133,112,62,212,145,215,206,117,37,166,148,152,218,244,26,124,98 };
    byte_vec_t pk { 4,215,148,249,237,80,190,224,83,194,200,9,210,142,131,218,250,61,85,111,220,155,242,51,1,202,163,26,179,220,246,213,164,215,6,244,180,84,217,88,241,117,243,128,175,211,227,164,180,111,86,143,185,238,100,219,146,87,61,60,235,219,77,107,216 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 962 ") {
    byte_vec_t msg { 16,9,219,174 };
    byte_vec_t sig { 60,3,134,168,132,167,66,241,225,89,234,84,237,208,95,220,43,241,11,224,47,139,69,5,121,165,59,34,144,56,161,139,78,8,125,178,10,121,32,181,172,10,26,60,183,15,138,220,141,243,201,246,192,248,68,101,75,81,26,170,229,85,237,244 };
    byte_vec_t pk { 4,74,53,70,221,97,234,133,170,117,102,227,109,170,213,70,232,135,135,195,173,172,204,27,2,79,218,63,111,76,252,218,6,119,75,28,85,48,242,216,20,212,117,203,125,205,221,93,220,43,181,154,85,168,255,187,151,111,158,182,234,52,71,228,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 962 ") {
    byte_vec_t msg { 245,160,123,99 };
    byte_vec_t sig { 7,141,83,186,115,204,169,124,69,48,232,149,50,69,203,101,67,29,185,180,27,136,94,89,140,172,17,148,61,220,122,115,186,15,155,241,184,2,209,170,103,88,117,154,41,177,201,187,137,124,217,83,120,238,209,18,124,179,162,228,144,195,78,154 };
    byte_vec_t pk { 2,95,44,148,3,92,117,79,16,9,224,243,39,135,13,197,247,194,16,229,114,107,127,177,182,137,14,115,6,18,47,127,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 962 ") {
    byte_vec_t msg { 92,211,240,50 };
    byte_vec_t sig { 205,17,148,141,162,61,146,253,182,232,119,16,66,107,204,144,20,126,203,171,128,28,82,37,93,215,246,123,64,20,69,145,138,230,33,196,44,192,22,253,148,249,34,202,217,241,177,162,132,199,1,12,36,182,153,147,184,13,79,152,240,230,135,73 };
    byte_vec_t pk { 3,123,58,227,238,207,53,76,78,61,235,5,214,133,169,217,68,43,159,222,182,28,236,168,59,205,142,119,224,183,93,246,169 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 963 ") {
    byte_vec_t msg { 56,15,224,124 };
    byte_vec_t sig { 33,171,15,19,4,94,37,29,189,45,38,169,69,31,71,119,225,132,85,189,217,234,103,128,170,48,145,129,5,150,74,220,91,125,162,135,248,184,63,174,205,235,181,60,205,17,205,247,232,2,230,42,225,6,62,99,162,204,41,194,38,123,83,100 };
    byte_vec_t pk { 4,172,44,143,117,101,238,141,59,166,210,20,119,72,83,155,151,13,177,74,48,138,82,250,254,121,214,10,16,120,247,202,54,173,36,253,25,17,183,85,30,117,248,105,67,176,104,163,139,54,63,110,52,222,160,122,103,114,105,12,84,62,245,79,110 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 963 ") {
    byte_vec_t msg { 192,222,153,118 };
    byte_vec_t sig { 128,52,195,57,50,200,175,77,2,4,67,46,115,41,49,206,161,25,145,141,77,59,177,222,12,133,60,72,100,105,94,128,183,73,180,25,56,163,97,44,156,63,227,20,106,231,114,237,138,16,144,18,138,15,247,40,207,99,72,235,131,48,0,207 };
    byte_vec_t pk { 4,73,85,225,215,216,44,113,23,147,251,188,7,59,184,101,111,56,22,88,222,254,131,173,44,231,27,226,190,79,135,213,226,123,189,110,89,138,47,46,93,164,111,70,63,17,227,229,40,205,223,112,210,184,134,89,55,73,21,24,14,231,238,71,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 963 ") {
    byte_vec_t msg { 85,252,111,3 };
    byte_vec_t sig { 49,102,253,76,78,54,187,42,170,182,139,125,236,58,78,112,76,174,45,105,158,244,173,97,247,177,114,206,128,153,252,246,157,115,150,205,132,69,75,146,110,194,93,216,72,136,67,81,114,246,5,100,66,153,84,64,69,41,173,192,151,150,226,49 };
    byte_vec_t pk { 2,154,105,141,182,66,136,179,12,87,165,191,131,135,159,123,24,51,0,245,219,102,62,76,93,167,23,18,19,113,247,62,231 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 963 ") {
    byte_vec_t msg { 132,131,21,47 };
    byte_vec_t sig { 255,141,60,21,71,17,128,111,135,88,19,150,240,96,108,20,126,208,236,143,18,36,238,232,66,108,179,92,49,117,195,117,153,29,188,105,155,160,195,104,116,34,82,70,66,62,134,213,5,66,31,191,115,124,139,77,69,251,67,212,244,57,149,33 };
    byte_vec_t pk { 2,10,245,181,202,55,93,19,185,241,150,151,3,36,181,240,106,167,254,91,176,18,161,9,70,135,183,158,53,46,116,171,4 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 964 ") {
    byte_vec_t msg { 236,59,65,28 };
    byte_vec_t sig { 51,78,39,193,6,134,128,85,74,31,144,240,95,15,255,29,48,66,177,126,137,43,176,47,99,5,161,195,171,141,178,8,0,137,133,251,85,150,59,139,188,146,35,147,142,164,232,104,166,11,189,116,32,59,89,11,212,31,142,173,10,97,251,239 };
    byte_vec_t pk { 4,147,150,136,211,174,246,160,235,62,3,45,160,176,248,148,144,40,115,231,3,113,211,219,29,12,249,45,225,102,145,126,48,196,128,179,29,255,162,49,12,215,195,103,198,121,193,252,31,110,129,130,180,44,204,104,130,25,123,181,149,41,214,46,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 964 ") {
    byte_vec_t msg { 225,143,202,8 };
    byte_vec_t sig { 111,217,24,158,117,147,159,124,77,226,156,201,238,106,149,191,36,148,249,15,187,150,246,69,212,70,13,214,91,97,12,98,184,4,248,79,95,12,206,145,61,21,110,75,202,155,53,111,21,188,129,7,214,86,186,79,151,36,140,216,47,208,103,103 };
    byte_vec_t pk { 4,106,2,68,211,115,144,88,26,254,11,1,185,139,228,7,52,201,206,188,135,28,174,109,76,168,98,88,163,123,31,154,228,162,110,222,41,49,28,89,102,251,51,167,223,116,216,51,9,165,31,21,213,81,16,254,12,171,100,142,111,237,242,20,203 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 964 ") {
    byte_vec_t msg { 41,54,20,94 };
    byte_vec_t sig { 180,7,157,214,221,111,55,49,79,41,93,27,152,108,54,152,157,136,5,173,40,234,100,3,234,122,152,89,225,151,223,61,128,73,12,8,24,253,113,115,127,114,177,166,248,179,166,40,44,8,193,234,213,196,16,103,95,241,174,30,150,28,243,54 };
    byte_vec_t pk { 3,233,85,79,202,134,137,28,194,161,255,95,63,182,33,7,228,61,221,128,41,176,127,99,179,220,29,88,239,158,21,99,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 964 ") {
    byte_vec_t msg { 134,157,12,122 };
    byte_vec_t sig { 73,68,170,152,140,127,166,215,189,202,72,128,155,74,163,66,192,173,36,68,84,142,101,97,26,89,228,99,31,126,52,95,107,240,16,114,89,98,156,69,153,134,192,23,92,195,245,227,219,239,17,94,228,85,232,29,124,101,216,248,227,155,226,207 };
    byte_vec_t pk { 2,107,24,54,184,173,231,148,13,185,255,59,176,19,3,29,168,198,163,196,48,26,215,216,17,35,220,106,139,47,130,50,226 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 965 ") {
    byte_vec_t msg { 115,71,202,122 };
    byte_vec_t sig { 89,243,94,254,76,156,159,89,188,92,182,139,121,69,65,160,135,240,62,182,8,200,92,142,227,48,86,250,79,18,23,139,139,10,182,221,38,216,191,11,187,243,236,54,63,137,32,171,56,247,150,26,66,222,146,230,208,13,176,246,72,211,56,150 };
    byte_vec_t pk { 4,171,251,29,71,52,243,60,242,245,147,131,249,141,121,25,104,1,79,62,30,226,49,122,204,207,43,46,35,24,246,17,43,85,39,47,138,181,245,151,213,56,90,16,36,225,184,47,64,101,140,1,17,227,189,249,74,180,237,103,83,9,243,208,105 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 965 ") {
    byte_vec_t msg { 245,0,154,137 };
    byte_vec_t sig { 247,248,16,168,236,163,230,125,104,147,14,143,79,85,213,54,245,146,175,198,211,18,219,118,18,194,72,200,192,72,172,80,164,24,112,169,33,9,88,205,130,153,1,98,224,110,148,143,54,91,199,110,86,175,65,42,188,148,200,44,93,150,0,233 };
    byte_vec_t pk { 4,110,245,54,25,196,246,180,27,218,9,172,58,81,255,198,251,191,178,94,234,113,134,144,167,216,209,163,204,67,163,189,24,94,32,215,222,242,250,226,237,234,205,192,10,161,98,202,64,242,48,236,92,114,202,160,81,148,48,209,114,97,175,15,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 965 ") {
    byte_vec_t msg { 135,19,55,30 };
    byte_vec_t sig { 161,215,133,15,74,180,168,89,149,63,96,12,229,153,167,254,26,231,80,75,176,87,188,229,57,55,88,55,151,255,181,168,116,234,154,175,76,205,191,160,45,132,237,193,242,74,197,20,115,23,185,181,33,108,112,228,229,129,185,56,155,108,10,61 };
    byte_vec_t pk { 3,102,36,158,239,32,210,175,115,207,90,153,202,79,157,228,95,220,49,1,183,44,147,181,65,143,123,167,229,93,181,123,241 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 965 ") {
    byte_vec_t msg { 153,29,43,61 };
    byte_vec_t sig { 188,218,59,142,56,110,95,253,81,177,73,103,66,69,201,128,76,63,147,172,153,80,108,215,208,226,235,163,110,239,160,38,180,77,131,231,17,223,117,144,75,10,121,151,143,61,73,141,111,219,70,202,189,41,10,225,232,145,195,124,10,250,182,204 };
    byte_vec_t pk { 2,113,165,177,41,231,114,187,105,248,10,239,62,202,109,62,134,81,65,1,73,230,17,204,23,135,88,118,143,175,50,185,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 966 ") {
    byte_vec_t msg { 139,122,65,181 };
    byte_vec_t sig { 161,60,149,54,56,147,224,138,223,37,26,187,168,171,203,245,226,189,73,131,58,60,21,185,88,4,88,124,131,50,158,12,58,104,3,40,63,204,61,253,46,17,93,213,142,148,253,251,78,176,92,192,19,65,65,34,78,15,51,221,4,40,39,120 };
    byte_vec_t pk { 4,114,24,106,255,166,141,41,23,160,163,41,134,10,214,217,63,223,165,84,229,105,178,123,114,56,140,191,210,149,96,85,232,140,120,255,132,129,44,106,64,95,84,196,228,114,1,177,132,146,244,0,139,4,127,205,206,213,212,29,32,226,135,174,97 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 966 ") {
    byte_vec_t msg { 78,248,32,76 };
    byte_vec_t sig { 232,96,188,168,38,220,122,223,38,61,241,249,247,19,93,61,208,32,68,237,61,255,72,217,45,212,254,219,106,142,85,184,102,62,181,95,13,75,115,76,199,21,150,77,206,228,64,151,180,16,30,179,17,159,16,157,201,135,154,175,113,188,246,255 };
    byte_vec_t pk { 4,89,95,106,64,58,220,91,166,224,17,109,127,122,125,19,213,171,107,214,96,150,95,113,191,34,131,234,193,50,90,227,29,201,153,80,140,244,14,9,179,159,108,202,84,63,226,56,173,167,107,131,165,203,65,91,46,53,202,120,137,215,192,81,130 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 966 ") {
    byte_vec_t msg { 133,69,158,37 };
    byte_vec_t sig { 88,124,80,88,189,103,200,52,43,23,109,62,48,185,14,16,95,145,91,55,95,167,158,144,108,170,148,202,35,173,46,206,156,176,198,135,225,158,156,169,57,212,129,225,167,186,238,40,25,89,51,192,188,155,166,45,234,172,107,251,212,128,220,123 };
    byte_vec_t pk { 2,199,200,166,218,222,181,115,25,236,149,104,160,134,177,228,10,102,158,25,62,53,79,240,196,236,198,95,178,6,177,132,164 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 966 ") {
    byte_vec_t msg { 58,33,10,25 };
    byte_vec_t sig { 65,57,120,36,47,118,66,17,181,203,154,124,212,113,48,223,22,113,3,143,141,237,60,234,223,71,79,84,181,121,214,26,252,178,143,146,109,50,150,93,58,179,105,156,252,238,151,87,200,24,212,219,58,97,80,245,208,58,67,69,133,169,132,77 };
    byte_vec_t pk { 2,175,13,173,52,135,185,166,74,32,156,116,233,96,155,232,210,121,126,147,41,255,11,153,253,42,25,197,161,208,124,215,201 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 967 ") {
    byte_vec_t msg { 121,56,77,71 };
    byte_vec_t sig { 65,195,219,37,72,255,56,188,0,159,100,28,237,79,194,91,201,113,80,47,86,169,25,229,33,215,91,192,126,32,143,227,205,185,42,100,221,177,181,44,19,199,26,253,195,29,45,109,8,251,237,170,11,4,223,169,150,6,15,22,175,20,171,142 };
    byte_vec_t pk { 4,38,93,120,191,45,94,178,249,145,10,36,154,21,67,249,135,140,177,113,45,134,128,39,136,93,223,22,172,116,144,68,93,196,201,164,185,32,16,73,84,142,99,131,104,59,118,193,90,209,166,35,192,18,249,48,222,35,91,137,215,138,154,139,195 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 967 ") {
    byte_vec_t msg { 248,75,182,118 };
    byte_vec_t sig { 135,175,253,236,235,80,241,23,206,153,72,32,67,237,162,32,73,45,39,49,110,9,239,194,33,175,97,227,72,122,36,45,43,116,76,132,16,14,216,49,82,8,183,135,168,202,177,62,102,24,218,202,67,149,9,149,234,215,152,29,246,135,66,128 };
    byte_vec_t pk { 4,226,179,98,68,174,179,135,92,110,163,115,225,182,123,115,195,96,35,193,26,240,9,204,70,204,87,239,183,181,89,87,244,254,141,207,204,57,213,4,164,204,130,72,7,123,82,112,152,119,229,244,126,229,241,142,118,123,114,5,235,237,247,63,206 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 967 ") {
    byte_vec_t msg { 252,182,54,215 };
    byte_vec_t sig { 185,168,91,82,209,237,11,166,193,127,146,237,162,132,138,103,108,13,19,48,73,152,110,161,82,152,99,27,59,25,240,96,69,185,162,222,39,197,1,35,202,32,24,27,14,60,130,194,136,172,152,87,2,13,201,245,127,247,35,19,139,62,111,164 };
    byte_vec_t pk { 3,161,19,166,107,243,201,87,61,94,193,229,39,30,62,146,119,75,212,3,138,112,244,152,235,43,87,8,72,94,200,134,146 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 967 ") {
    byte_vec_t msg { 25,144,40,233 };
    byte_vec_t sig { 108,23,38,220,223,99,136,71,234,105,208,60,3,107,145,46,129,135,240,185,237,148,255,222,69,172,34,238,251,174,59,101,139,88,224,196,87,186,243,198,53,28,114,203,26,17,8,239,248,13,170,88,208,191,150,88,75,92,191,182,171,204,188,184 };
    byte_vec_t pk { 3,112,229,15,136,144,162,250,21,59,187,14,213,89,49,204,251,18,30,147,123,237,211,143,3,240,200,252,248,200,10,140,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 968 ") {
    byte_vec_t msg { 128,177,225,238 };
    byte_vec_t sig { 206,32,96,221,217,154,213,166,167,116,54,192,53,186,177,9,236,24,184,168,174,46,84,99,100,81,73,8,124,68,53,223,34,156,43,137,85,137,218,85,220,247,244,3,88,184,75,90,47,5,42,157,16,164,146,139,8,136,253,89,35,192,182,83 };
    byte_vec_t pk { 4,157,184,164,247,156,136,87,120,79,22,164,222,56,200,117,126,244,9,144,108,83,190,213,100,64,107,175,136,151,147,9,40,117,141,239,161,219,150,197,183,116,208,66,17,41,37,178,40,136,155,227,72,205,165,136,178,88,183,144,166,69,179,51,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 968 ") {
    byte_vec_t msg { 97,185,130,87 };
    byte_vec_t sig { 109,153,68,30,66,201,157,92,110,197,15,185,151,241,42,110,189,247,3,89,76,255,62,31,122,202,196,205,88,91,174,165,48,116,129,62,172,143,6,201,131,6,231,50,228,191,78,132,197,83,63,79,80,75,194,65,134,56,136,19,52,120,194,139 };
    byte_vec_t pk { 4,210,222,112,104,76,70,161,243,227,155,144,109,214,164,1,180,246,222,57,35,59,88,85,230,228,1,204,97,231,50,84,40,82,68,157,90,196,207,151,124,220,215,254,96,111,145,149,220,58,239,27,78,47,228,57,152,3,153,133,252,15,246,67,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 968 ") {
    byte_vec_t msg { 85,14,35,80 };
    byte_vec_t sig { 163,90,71,205,10,192,1,236,102,141,132,209,165,165,244,138,84,193,38,150,17,26,169,44,62,46,77,78,145,70,255,63,173,19,223,248,208,182,140,78,59,174,226,17,41,148,37,102,111,136,198,158,107,185,141,192,7,25,178,245,181,204,22,66 };
    byte_vec_t pk { 3,127,253,225,125,169,229,35,238,200,80,159,122,38,150,40,211,167,53,51,54,248,127,204,26,129,196,202,194,122,20,126,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 968 ") {
    byte_vec_t msg { 239,221,18,60 };
    byte_vec_t sig { 37,244,78,17,192,208,197,97,26,169,68,69,152,14,148,136,96,157,105,196,37,43,11,75,235,114,77,0,113,97,207,226,171,167,219,39,6,139,130,195,175,209,92,50,131,120,178,210,200,120,142,4,190,243,199,86,243,247,5,26,25,232,200,135 };
    byte_vec_t pk { 3,100,199,16,104,57,228,220,162,158,209,2,40,188,95,187,251,60,174,66,52,232,220,155,66,197,122,118,150,55,9,221,1 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 969 ") {
    byte_vec_t msg { 86,94,235,128 };
    byte_vec_t sig { 184,131,69,222,177,137,46,65,112,228,8,86,171,123,3,236,141,220,37,62,196,233,229,176,118,23,156,166,224,69,29,104,32,99,61,113,49,16,154,207,213,100,16,249,85,165,148,191,82,44,153,117,212,91,252,230,32,37,11,158,54,5,245,138 };
    byte_vec_t pk { 4,173,255,215,208,68,6,163,59,12,186,213,68,183,132,68,193,175,151,218,181,223,105,172,52,191,50,212,25,130,55,190,8,253,50,81,53,92,130,80,238,123,168,42,100,144,42,63,142,252,221,40,96,193,34,5,69,210,53,102,150,49,51,174,179 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 969 ") {
    byte_vec_t msg { 64,41,120,251 };
    byte_vec_t sig { 95,66,25,100,251,2,216,41,2,244,239,96,137,14,163,245,114,194,182,41,24,62,55,72,140,49,82,57,211,140,181,93,49,57,111,76,206,80,65,217,234,149,227,69,148,214,77,43,108,143,199,195,20,244,51,217,243,183,187,178,38,70,235,211 };
    byte_vec_t pk { 4,224,110,131,113,225,228,215,102,57,126,46,203,230,174,249,54,255,60,131,57,6,110,37,56,19,236,220,202,215,200,25,132,110,215,155,187,12,164,208,183,82,161,1,38,91,197,137,118,212,215,193,92,232,45,123,218,4,131,33,34,178,127,79,207 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 969 ") {
    byte_vec_t msg { 37,8,121,62 };
    byte_vec_t sig { 140,237,70,231,200,90,39,199,43,122,133,7,15,66,146,14,17,85,22,56,218,81,232,54,31,62,63,170,1,253,214,254,0,51,163,94,41,143,103,202,16,243,53,65,95,93,31,88,214,174,55,125,149,38,184,114,38,221,105,211,78,249,198,68 };
    byte_vec_t pk { 2,19,115,233,129,111,235,163,60,221,87,242,239,111,88,222,116,126,157,168,216,236,197,47,99,68,183,205,178,67,217,142,245 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 969 ") {
    byte_vec_t msg { 38,133,217,160 };
    byte_vec_t sig { 10,84,148,237,181,85,54,164,51,138,46,128,171,244,56,189,185,40,52,254,178,96,150,146,229,163,255,235,190,70,74,128,157,45,95,217,230,130,190,194,29,187,70,25,55,23,74,63,67,47,135,218,108,36,25,201,240,229,234,137,51,137,98,169 };
    byte_vec_t pk { 2,234,236,193,231,116,19,199,170,111,45,56,1,98,154,5,132,238,58,227,71,179,123,85,218,151,24,175,49,97,77,33,17 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 970 ") {
    byte_vec_t msg { 63,191,125,189 };
    byte_vec_t sig { 156,102,195,143,100,90,213,128,62,251,165,17,142,197,178,173,17,88,154,115,1,164,60,212,247,161,142,111,139,213,118,105,239,154,86,205,118,251,255,163,58,235,155,248,103,218,128,44,195,246,9,224,141,77,214,171,153,34,4,151,247,130,213,80 };
    byte_vec_t pk { 4,174,4,207,137,223,64,26,79,80,250,182,48,216,247,161,23,246,53,239,212,218,108,166,160,88,76,227,36,73,195,223,32,60,163,133,90,80,138,151,215,141,93,240,95,136,142,160,29,60,94,7,227,169,67,125,15,42,234,98,193,65,26,10,253 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 970 ") {
    byte_vec_t msg { 42,120,121,225 };
    byte_vec_t sig { 23,51,60,8,68,235,196,173,168,230,172,24,168,79,207,87,129,77,199,208,15,229,81,210,103,97,152,20,154,126,127,226,37,60,224,54,17,217,86,66,213,253,33,90,41,24,198,194,19,68,23,38,206,178,176,240,77,137,11,174,42,196,7,10 };
    byte_vec_t pk { 4,119,195,139,213,45,45,198,136,249,77,202,230,42,183,221,8,141,10,185,196,35,171,223,96,10,39,191,95,131,170,14,189,21,0,52,85,97,59,4,156,196,156,90,18,199,234,103,178,93,194,40,102,40,255,0,99,21,152,44,171,197,177,208,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 970 ") {
    byte_vec_t msg { 141,64,8,59 };
    byte_vec_t sig { 33,243,184,52,246,177,155,12,192,24,29,25,157,27,3,40,156,101,40,61,201,81,179,84,65,202,9,64,0,11,178,244,37,94,153,223,71,4,74,237,144,63,138,169,100,68,226,47,105,179,168,2,109,161,96,168,217,0,59,207,46,44,79,160 };
    byte_vec_t pk { 3,25,159,16,247,169,114,115,101,167,17,84,167,50,255,159,224,53,120,23,74,37,120,247,161,4,54,148,60,242,68,171,107 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 970 ") {
    byte_vec_t msg { 52,224,245,62 };
    byte_vec_t sig { 166,47,0,40,245,157,25,76,16,96,69,160,187,210,171,101,9,195,116,81,111,189,116,40,41,26,79,246,135,140,106,209,100,99,101,216,183,32,255,72,13,157,185,155,208,206,79,160,39,122,56,46,50,29,118,118,194,65,33,87,21,164,171,163 };
    byte_vec_t pk { 2,110,145,157,220,13,193,206,65,78,22,182,57,243,129,215,224,121,14,66,59,122,166,187,120,202,201,18,203,150,181,126,218 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 971 ") {
    byte_vec_t msg { 126,171,11,48 };
    byte_vec_t sig { 31,149,123,93,77,195,157,93,205,23,206,128,185,207,238,102,105,26,247,215,113,36,241,174,119,194,90,105,199,44,187,164,253,182,105,209,137,116,82,189,210,118,97,187,113,177,253,208,172,220,36,8,26,10,216,239,196,178,169,159,68,22,206,150 };
    byte_vec_t pk { 4,130,171,108,133,75,172,108,88,32,241,24,47,60,139,233,84,195,138,186,249,201,222,27,42,163,71,161,180,183,64,111,136,54,42,63,81,3,22,164,26,228,56,61,167,246,95,152,151,174,42,32,242,164,189,27,80,228,230,174,70,38,121,220,166 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 971 ") {
    byte_vec_t msg { 209,77,128,65 };
    byte_vec_t sig { 167,184,164,97,255,60,181,11,159,179,152,130,171,103,47,86,126,200,45,62,253,144,79,58,208,2,41,200,151,118,93,223,100,246,196,226,249,149,20,0,154,160,113,56,82,35,150,134,197,226,199,46,61,117,16,7,210,207,255,58,160,173,28,240 };
    byte_vec_t pk { 4,54,50,53,180,163,200,140,156,108,237,191,35,92,31,84,182,158,55,130,15,26,108,171,205,149,135,12,202,13,131,104,209,146,210,6,197,253,245,87,236,108,224,40,169,102,143,72,29,170,232,212,104,234,96,121,165,111,231,230,123,105,76,165,12 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 971 ") {
    byte_vec_t msg { 56,21,250,115 };
    byte_vec_t sig { 175,243,61,65,48,0,202,160,20,47,195,170,251,201,75,25,128,213,77,96,91,88,115,53,190,111,128,236,59,235,154,47,117,94,7,162,30,171,227,154,241,77,237,108,141,242,83,58,139,94,55,202,11,93,118,117,217,49,125,153,54,202,10,120 };
    byte_vec_t pk { 3,12,166,130,116,65,200,233,197,94,71,237,90,179,17,173,188,247,61,19,156,157,31,160,166,196,103,75,30,194,56,229,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 971 ") {
    byte_vec_t msg { 174,95,21,168 };
    byte_vec_t sig { 245,169,75,60,15,255,85,178,25,63,165,178,61,194,39,142,92,224,57,36,130,5,226,255,241,229,191,224,166,69,74,32,146,87,31,114,142,133,103,117,168,215,249,93,26,85,30,243,226,71,58,206,238,199,238,162,192,118,207,248,81,223,203,6 };
    byte_vec_t pk { 3,85,133,88,78,215,186,240,167,101,93,137,144,58,227,218,224,187,203,83,167,34,75,71,106,74,185,110,71,87,115,12,161 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 972 ") {
    byte_vec_t msg { 131,117,16,123 };
    byte_vec_t sig { 175,172,217,115,180,9,255,99,115,164,62,98,130,226,2,28,15,124,172,184,245,4,245,218,2,159,242,19,227,144,168,90,141,90,5,40,142,90,125,74,25,125,204,183,194,65,2,137,85,234,16,26,194,240,216,226,224,48,241,80,83,231,217,242 };
    byte_vec_t pk { 4,233,165,96,239,143,20,255,239,73,42,110,142,225,211,184,118,7,18,173,61,6,106,95,203,242,102,127,165,13,102,95,12,240,222,130,97,159,253,225,124,98,191,187,236,143,169,99,148,192,214,3,192,28,190,134,11,136,106,175,81,185,163,149,223 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 972 ") {
    byte_vec_t msg { 12,247,237,233 };
    byte_vec_t sig { 203,78,20,169,209,31,247,197,164,44,18,231,114,94,243,215,238,27,202,253,245,23,116,9,230,131,133,76,54,151,38,191,59,140,110,234,58,224,57,254,79,186,15,214,125,92,120,191,9,152,110,114,120,162,46,81,222,243,212,238,1,242,159,39 };
    byte_vec_t pk { 4,66,73,214,17,86,176,246,175,209,89,167,135,55,140,114,51,24,94,99,89,232,204,200,19,213,46,178,81,173,232,140,153,239,92,181,136,100,112,126,148,252,128,181,102,27,158,19,246,20,87,165,226,34,238,75,173,209,128,121,83,124,8,60,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 972 ") {
    byte_vec_t msg { 72,33,123,12 };
    byte_vec_t sig { 44,185,18,212,145,60,44,72,225,222,68,166,17,50,214,200,231,132,218,183,67,204,237,67,140,36,210,208,194,64,134,105,240,209,40,177,173,153,125,82,46,169,222,86,78,36,212,16,61,130,126,57,107,161,229,247,170,199,34,46,138,137,87,155 };
    byte_vec_t pk { 3,20,251,137,222,104,239,138,46,188,132,82,125,119,83,22,119,12,130,194,50,202,249,56,222,54,203,121,184,161,44,212,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 972 ") {
    byte_vec_t msg { 195,209,55,72 };
    byte_vec_t sig { 42,181,173,100,221,114,250,53,96,176,208,48,254,7,214,15,251,138,114,171,113,109,144,10,51,7,118,115,134,111,196,238,68,88,63,197,19,201,47,64,130,197,149,23,35,203,118,146,121,87,112,168,27,234,112,41,9,181,183,205,219,183,65,153 };
    byte_vec_t pk { 3,222,52,154,55,243,200,242,36,73,40,40,138,158,129,89,190,168,206,142,2,227,58,81,18,189,78,231,153,101,109,127,162 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 973 ") {
    byte_vec_t msg { 174,250,16,69 };
    byte_vec_t sig { 7,144,11,189,255,52,3,150,135,120,205,139,72,72,109,243,174,127,231,62,29,213,123,1,164,2,22,202,56,199,248,95,22,104,202,122,38,82,183,62,182,22,117,130,237,89,103,138,64,96,169,52,192,76,181,197,21,11,244,95,102,39,61,13 };
    byte_vec_t pk { 4,177,199,169,216,86,60,225,83,14,60,222,229,46,141,159,84,99,208,221,0,208,64,81,136,171,169,111,185,141,203,210,25,165,186,99,144,104,13,106,221,102,240,52,207,52,93,102,158,88,97,122,28,14,17,197,10,138,211,89,70,9,200,238,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 973 ") {
    byte_vec_t msg { 54,230,52,223 };
    byte_vec_t sig { 101,86,213,2,6,84,231,132,44,82,53,180,39,47,107,240,162,182,66,101,187,102,192,19,190,139,213,40,28,101,185,235,96,222,39,118,178,26,127,70,180,235,228,75,219,12,47,19,156,147,131,244,237,47,205,238,28,195,19,218,202,212,67,34 };
    byte_vec_t pk { 4,123,149,206,157,49,75,202,233,182,63,62,4,197,250,6,199,247,226,1,90,241,102,253,94,136,41,52,123,59,160,19,128,8,110,160,11,80,43,118,229,243,106,2,3,141,216,128,21,200,129,84,237,84,208,184,172,127,13,177,180,239,68,39,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 973 ") {
    byte_vec_t msg { 196,72,226,151 };
    byte_vec_t sig { 119,235,201,95,152,43,145,237,11,52,227,163,158,253,180,172,20,130,212,163,117,115,237,40,189,142,29,50,183,228,154,98,114,253,28,115,63,220,134,48,11,7,60,136,9,30,248,160,240,107,23,173,239,71,156,127,215,55,248,118,131,16,148,126 };
    byte_vec_t pk { 3,98,111,117,174,222,243,46,115,251,154,102,249,88,3,252,49,132,206,240,14,48,95,205,144,91,132,69,125,243,251,203,14 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 973 ") {
    byte_vec_t msg { 211,253,88,116 };
    byte_vec_t sig { 200,151,53,59,122,229,80,145,32,217,86,143,235,184,1,51,55,77,91,203,50,150,184,93,232,140,106,201,35,178,114,32,105,7,195,184,127,236,68,244,251,143,128,255,194,56,184,129,96,106,30,104,0,187,79,255,118,183,254,4,67,167,6,255 };
    byte_vec_t pk { 2,238,158,88,248,206,115,205,161,3,203,236,164,189,136,170,105,42,195,65,212,214,122,79,31,188,246,128,218,75,120,80,99 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 974 ") {
    byte_vec_t msg { 255,16,149,154 };
    byte_vec_t sig { 139,175,208,173,222,9,167,210,230,37,239,143,123,20,33,235,228,72,157,25,209,202,87,241,158,14,216,249,90,38,243,96,23,243,15,124,170,175,41,79,25,74,111,216,83,14,21,137,108,171,56,20,198,11,91,98,21,233,164,99,156,61,80,237 };
    byte_vec_t pk { 4,17,241,182,229,54,53,133,22,110,153,101,237,238,28,67,172,79,153,107,77,1,91,143,251,99,168,135,92,108,145,153,9,189,176,218,191,29,220,196,176,233,224,14,35,177,120,223,200,20,193,48,235,129,65,95,148,120,179,228,54,13,206,202,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 974 ") {
    byte_vec_t msg { 55,196,222,106 };
    byte_vec_t sig { 90,186,150,37,190,94,129,44,217,198,67,35,199,154,88,80,61,157,191,34,25,225,253,217,126,199,104,92,240,137,117,28,131,47,178,16,217,213,196,221,102,85,89,57,2,45,90,188,232,60,235,0,237,98,226,134,100,234,201,163,235,199,17,22 };
    byte_vec_t pk { 4,82,203,116,16,180,34,30,200,28,9,118,76,105,39,173,147,237,150,188,0,154,24,208,102,248,0,24,188,214,92,148,193,172,213,8,125,146,178,89,182,93,59,110,44,47,233,133,109,4,145,72,133,197,159,80,45,138,136,12,160,201,82,219,111 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 974 ") {
    byte_vec_t msg { 73,237,96,134 };
    byte_vec_t sig { 217,200,143,18,126,118,107,97,238,239,19,149,130,169,154,141,3,70,115,117,252,29,249,118,145,104,136,158,31,29,182,224,100,43,51,5,121,149,118,37,245,119,232,58,30,178,81,57,55,250,71,204,59,182,245,1,126,98,43,158,230,110,131,104 };
    byte_vec_t pk { 3,202,13,102,210,124,243,82,199,18,84,45,232,184,28,126,32,27,223,28,222,112,64,255,165,107,178,227,254,73,91,155,33 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 974 ") {
    byte_vec_t msg { 14,52,145,147 };
    byte_vec_t sig { 255,104,63,68,185,254,158,60,61,57,235,89,21,160,62,198,180,107,187,222,172,77,101,230,217,218,155,15,116,142,67,165,203,136,174,206,7,221,63,141,201,98,156,210,98,40,77,248,223,162,67,74,77,106,126,42,145,243,70,41,193,42,127,95 };
    byte_vec_t pk { 2,32,138,42,114,134,229,18,171,237,201,192,206,174,143,94,96,239,235,238,121,139,235,184,234,147,19,25,82,123,157,5,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 975 ") {
    byte_vec_t msg { 166,146,22,169 };
    byte_vec_t sig { 62,14,127,215,161,53,96,35,101,236,202,109,166,159,47,36,195,33,236,208,102,207,10,70,165,249,253,63,158,230,77,250,12,135,200,116,18,196,118,107,170,230,100,245,224,247,138,71,4,154,159,107,145,209,86,104,155,194,8,55,210,120,127,133 };
    byte_vec_t pk { 4,125,250,180,192,137,4,66,37,230,211,236,0,28,45,13,4,14,119,68,105,59,47,58,223,151,89,74,11,150,102,130,208,32,79,68,31,63,62,33,43,181,149,8,201,197,47,162,199,59,204,98,199,145,143,74,97,29,217,93,66,53,200,184,10 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 975 ") {
    byte_vec_t msg { 45,234,23,115 };
    byte_vec_t sig { 73,73,223,32,12,109,105,155,175,53,249,155,253,206,3,78,126,134,100,233,150,18,93,52,161,235,206,83,188,195,166,25,215,69,164,196,109,97,169,83,192,167,54,216,210,141,114,43,34,51,234,59,247,195,255,94,188,231,218,209,79,15,211,226 };
    byte_vec_t pk { 4,67,189,55,169,156,2,186,134,226,57,192,66,192,29,73,186,122,34,201,108,151,197,130,4,174,10,117,236,16,201,19,54,169,36,180,184,142,148,25,211,96,224,31,151,250,254,181,127,192,76,179,89,64,100,89,97,104,247,128,236,29,95,55,157 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 975 ") {
    byte_vec_t msg { 189,84,157,212 };
    byte_vec_t sig { 105,189,214,131,58,223,58,16,237,119,242,100,163,95,138,143,34,145,120,200,82,216,41,146,49,212,40,191,205,126,201,193,141,49,28,123,94,126,82,39,159,191,254,135,184,172,127,154,4,195,150,211,240,132,153,221,205,182,66,213,235,189,133,172 };
    byte_vec_t pk { 2,11,201,250,163,43,101,125,47,11,203,41,130,46,105,37,123,7,95,51,218,11,135,80,226,189,97,44,203,205,251,48,189 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 975 ") {
    byte_vec_t msg { 132,40,175,66 };
    byte_vec_t sig { 54,144,104,108,238,211,62,126,14,114,158,61,190,248,41,79,202,214,195,27,252,242,135,131,106,198,190,63,86,209,140,239,90,193,205,176,192,177,203,25,242,37,104,13,139,163,188,154,115,98,185,109,214,20,22,192,216,25,48,66,229,184,148,73 };
    byte_vec_t pk { 2,194,115,163,111,120,120,88,57,131,216,132,31,52,1,109,188,203,183,64,250,202,116,89,220,139,164,14,146,247,110,74,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 976 ") {
    byte_vec_t msg { 141,40,74,59 };
    byte_vec_t sig { 126,235,87,200,227,89,137,27,97,68,83,250,80,93,196,74,37,167,83,155,62,244,42,0,207,58,67,100,29,86,243,176,163,114,10,155,213,60,241,235,222,213,231,74,164,106,101,52,48,94,95,205,52,80,109,40,162,122,199,145,247,41,153,200 };
    byte_vec_t pk { 4,67,206,120,147,73,147,37,145,49,227,121,246,220,110,43,254,209,61,180,221,149,112,11,15,111,243,64,77,205,186,133,173,142,79,185,194,141,179,63,251,174,16,182,193,214,251,246,242,201,128,131,43,240,103,218,99,226,24,152,106,154,254,123,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 976 ") {
    byte_vec_t msg { 154,23,109,217 };
    byte_vec_t sig { 0,36,9,75,114,47,4,229,185,24,120,139,202,173,204,8,126,209,54,49,236,70,27,107,151,92,115,122,107,241,155,133,159,41,161,111,237,209,62,234,199,64,115,169,54,218,50,231,164,57,240,54,45,74,244,66,239,133,115,205,60,216,96,140 };
    byte_vec_t pk { 4,18,68,41,54,251,192,95,6,145,14,215,38,233,120,1,83,56,101,102,180,56,149,66,110,71,152,242,135,1,108,101,179,28,191,94,225,170,35,251,252,36,26,137,50,21,71,210,19,221,253,75,0,99,74,132,247,100,149,77,100,75,187,68,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 976 ") {
    byte_vec_t msg { 243,232,34,117 };
    byte_vec_t sig { 174,183,247,197,244,8,197,6,47,36,215,125,114,175,207,31,82,141,123,27,170,240,173,175,9,180,248,32,225,34,220,101,134,232,241,70,214,4,140,11,225,68,119,239,7,45,137,121,58,14,236,6,79,161,33,206,108,135,110,99,196,38,25,240 };
    byte_vec_t pk { 3,125,148,49,13,159,46,155,122,226,129,182,184,110,246,128,5,60,5,50,67,164,6,208,76,58,154,199,72,94,197,36,177 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 976 ") {
    byte_vec_t msg { 151,150,115,144 };
    byte_vec_t sig { 52,11,203,147,228,69,236,238,58,33,49,250,254,185,217,63,77,249,61,152,154,42,129,23,163,31,70,227,5,85,196,223,190,155,244,156,21,171,120,131,128,125,242,204,182,241,186,141,186,173,161,255,179,62,161,246,62,65,162,216,217,237,32,134 };
    byte_vec_t pk { 3,220,44,103,209,85,155,63,136,208,249,51,113,101,216,188,246,142,105,7,89,112,178,226,44,242,140,202,62,3,111,224,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 977 ") {
    byte_vec_t msg { 22,12,209,35 };
    byte_vec_t sig { 226,32,21,163,130,252,141,6,123,187,216,84,217,0,96,146,124,63,34,23,154,236,175,241,103,155,252,214,195,49,180,7,241,16,50,162,133,142,240,27,190,5,252,55,220,42,198,51,222,115,104,132,202,22,197,208,19,94,97,17,164,127,58,245 };
    byte_vec_t pk { 4,28,30,148,87,232,179,10,25,168,44,212,80,167,11,253,25,49,234,200,190,109,52,111,26,65,179,8,126,177,65,164,240,8,190,20,65,194,185,122,62,120,59,18,124,19,90,201,67,197,141,32,176,100,139,212,96,122,67,120,154,32,185,173,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 977 ") {
    byte_vec_t msg { 28,190,66,221 };
    byte_vec_t sig { 111,201,67,46,212,52,165,25,136,61,82,199,93,243,184,61,146,93,214,9,68,234,34,48,79,211,69,113,253,189,99,7,99,135,20,2,126,115,236,237,94,188,68,60,104,64,42,163,88,114,233,218,138,96,107,85,241,217,177,134,167,106,123,11 };
    byte_vec_t pk { 4,86,91,194,163,143,63,101,65,183,163,64,33,36,95,99,148,87,188,153,27,129,167,64,112,221,65,215,61,176,38,216,97,223,168,94,132,131,18,231,213,47,225,196,13,23,155,8,221,89,235,29,163,238,36,132,160,7,216,226,95,208,117,210,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 977 ") {
    byte_vec_t msg { 241,41,103,104 };
    byte_vec_t sig { 96,34,99,36,72,156,231,40,181,132,81,205,220,221,192,9,208,86,16,34,130,84,44,27,48,69,29,21,47,40,159,219,180,83,143,142,156,133,245,97,109,40,169,96,220,144,238,27,175,204,200,207,41,186,247,242,111,68,76,225,81,101,157,233 };
    byte_vec_t pk { 2,165,72,245,94,63,212,251,8,67,57,74,166,65,214,28,92,201,139,219,118,62,73,118,102,131,230,93,208,123,243,203,178 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 977 ") {
    byte_vec_t msg { 231,23,120,23 };
    byte_vec_t sig { 125,234,111,195,186,211,219,46,92,197,57,101,171,76,48,114,221,221,130,153,123,193,124,57,23,243,145,139,162,94,190,122,207,20,30,127,26,205,47,213,45,83,229,79,113,213,68,183,5,56,141,148,226,184,117,87,58,232,118,91,192,39,151,49 };
    byte_vec_t pk { 2,189,202,47,45,164,151,133,208,139,164,214,219,124,53,83,76,30,205,105,233,18,177,62,160,211,13,212,103,195,205,182,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 978 ") {
    byte_vec_t msg { 140,63,145,66 };
    byte_vec_t sig { 7,45,22,188,50,104,10,23,105,34,254,123,90,172,126,216,221,75,128,241,223,75,107,215,10,62,75,51,87,3,129,155,209,115,232,8,184,59,157,212,123,153,57,28,4,14,221,59,128,189,80,75,194,236,143,104,31,41,245,181,42,114,18,159 };
    byte_vec_t pk { 4,42,199,132,230,247,117,238,45,7,224,224,208,156,141,79,141,234,180,29,94,246,15,35,156,148,108,92,173,58,68,55,23,229,176,42,191,94,176,116,88,209,234,195,161,54,223,230,24,171,48,44,145,203,61,20,77,203,137,49,29,146,51,34,74 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 978 ") {
    byte_vec_t msg { 229,209,74,240 };
    byte_vec_t sig { 128,60,210,53,96,91,30,75,121,235,46,104,216,79,9,36,112,173,235,8,7,43,102,231,228,126,186,138,175,229,149,46,82,55,62,245,56,160,19,51,38,17,12,151,207,151,26,175,176,84,202,116,3,20,58,1,149,231,95,174,252,191,42,16 };
    byte_vec_t pk { 4,120,207,203,188,177,102,61,230,110,33,109,207,12,231,74,79,63,82,227,247,17,248,228,167,203,25,169,94,146,59,15,189,119,73,36,97,82,159,236,227,69,26,21,49,239,242,198,25,229,137,252,145,185,195,227,50,85,123,249,144,156,130,65,118 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 978 ") {
    byte_vec_t msg { 252,57,66,250 };
    byte_vec_t sig { 221,171,81,21,119,120,82,17,6,171,138,3,92,57,108,122,20,0,91,156,231,203,33,7,208,104,175,250,32,62,9,206,239,133,251,162,186,1,204,39,52,222,51,117,209,133,82,188,142,150,252,223,245,186,134,106,203,131,229,149,244,44,97,93 };
    byte_vec_t pk { 3,43,118,67,134,80,242,165,107,137,225,11,84,4,13,5,209,138,121,175,221,208,117,156,61,211,154,118,155,0,196,28,249 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 978 ") {
    byte_vec_t msg { 101,55,188,4 };
    byte_vec_t sig { 117,123,162,239,76,70,232,96,163,63,53,205,212,171,136,101,163,191,213,229,143,148,216,253,99,87,110,14,146,147,208,105,0,168,45,193,252,90,250,192,13,213,118,190,226,17,116,193,199,84,58,118,64,147,90,157,56,166,182,211,47,36,25,108 };
    byte_vec_t pk { 2,182,95,206,198,164,38,120,7,68,10,170,55,100,23,219,12,225,94,233,46,100,123,235,48,106,20,195,197,99,68,171,212 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 979 ") {
    byte_vec_t msg { 157,63,120,126 };
    byte_vec_t sig { 6,226,30,12,128,23,40,5,51,12,156,69,39,57,84,114,36,95,5,85,110,167,155,108,78,105,228,176,112,103,70,21,68,161,201,143,136,38,249,165,139,232,187,76,73,219,151,120,26,212,139,214,183,246,2,203,205,146,43,189,224,220,35,215 };
    byte_vec_t pk { 4,141,182,202,177,229,232,125,51,103,35,137,187,212,28,255,152,54,227,161,126,68,17,233,6,119,254,127,88,249,161,135,37,102,99,59,210,81,180,240,230,245,184,47,119,170,115,133,194,184,157,122,35,151,229,200,222,168,204,249,98,195,193,111,252 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 979 ") {
    byte_vec_t msg { 102,177,232,63 };
    byte_vec_t sig { 92,110,160,192,104,176,153,59,132,126,224,23,245,222,157,1,85,208,207,164,96,31,181,244,209,70,4,184,52,223,43,174,140,176,94,165,86,137,78,75,106,172,43,235,206,155,3,82,245,245,111,91,231,180,185,47,213,248,187,210,70,221,87,224 };
    byte_vec_t pk { 4,194,212,127,232,134,209,198,56,154,215,254,16,17,77,84,133,216,189,121,47,37,250,189,97,167,72,62,166,204,175,209,82,236,14,62,129,198,187,80,167,20,151,19,164,122,17,78,53,127,202,79,72,33,197,66,10,185,139,158,243,61,152,3,242 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 979 ") {
    byte_vec_t msg { 111,23,144,147 };
    byte_vec_t sig { 110,208,116,39,113,120,88,41,142,148,245,80,110,88,56,127,184,76,243,162,106,145,144,122,211,64,225,203,119,76,53,82,248,121,119,30,17,21,134,69,192,243,45,108,109,111,219,68,158,54,28,216,55,114,82,162,2,156,245,13,153,220,207,163 };
    byte_vec_t pk { 2,30,180,75,2,174,142,177,61,183,34,186,8,98,168,145,181,144,133,143,0,228,191,229,17,34,36,65,232,230,136,147,76 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 979 ") {
    byte_vec_t msg { 95,98,158,48 };
    byte_vec_t sig { 46,185,120,77,64,35,66,33,126,137,143,92,85,179,107,170,5,247,201,88,93,181,77,43,52,152,200,163,206,16,27,10,203,252,173,3,207,14,6,252,65,80,63,153,149,13,207,23,152,40,240,206,85,219,234,17,16,254,3,175,69,206,205,213 };
    byte_vec_t pk { 3,123,68,252,64,243,187,172,35,143,84,54,188,164,60,139,53,5,227,3,21,71,5,193,37,106,188,29,157,101,74,255,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 980 ") {
    byte_vec_t msg { 105,35,1,42 };
    byte_vec_t sig { 226,62,186,173,109,221,116,26,50,196,156,76,143,242,128,235,1,37,87,135,41,35,36,188,51,233,99,20,22,180,16,148,200,203,234,117,23,13,21,183,165,29,227,54,144,9,131,48,233,24,79,236,162,11,136,52,172,174,65,106,3,181,188,181 };
    byte_vec_t pk { 4,183,156,249,25,107,38,6,39,30,166,197,165,180,108,133,252,224,180,82,209,125,45,250,102,9,246,86,107,185,106,36,102,253,134,136,126,112,125,219,254,58,17,57,39,102,40,183,178,208,255,65,101,145,66,237,13,68,112,184,57,183,238,146,208 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 980 ") {
    byte_vec_t msg { 242,57,227,80 };
    byte_vec_t sig { 97,138,206,149,202,69,46,76,80,223,164,65,90,113,79,34,15,74,32,255,130,205,253,192,89,164,231,241,59,2,22,162,38,62,14,117,228,169,222,191,223,199,13,107,117,189,156,209,206,66,30,180,241,58,230,217,210,147,50,193,138,124,176,16 };
    byte_vec_t pk { 4,196,171,103,250,182,199,155,149,202,194,32,154,182,152,167,234,11,168,137,120,247,87,206,94,193,18,249,179,37,124,82,150,7,103,137,98,40,196,142,58,158,226,221,173,109,207,126,199,28,246,131,136,140,103,5,57,182,46,31,45,127,186,225,13 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 980 ") {
    byte_vec_t msg { 119,197,91,246 };
    byte_vec_t sig { 10,210,38,245,36,139,53,247,204,241,77,39,24,64,107,8,9,163,104,121,34,184,119,94,175,235,15,254,205,71,218,241,139,165,61,113,88,147,170,218,63,119,114,247,69,44,241,24,47,167,215,172,166,12,156,98,190,154,115,1,1,158,15,178 };
    byte_vec_t pk { 2,48,118,180,115,18,218,195,26,200,71,186,113,219,126,248,148,229,130,214,24,147,167,43,152,141,41,104,230,26,107,206,90 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 980 ") {
    byte_vec_t msg { 243,212,212,146 };
    byte_vec_t sig { 21,206,113,46,130,191,216,140,41,2,24,66,212,116,132,59,43,156,209,37,108,243,65,44,219,82,31,99,186,240,166,84,202,123,187,235,26,202,93,240,5,128,115,181,70,26,0,207,183,106,179,98,47,165,87,240,196,179,233,20,2,230,188,41 };
    byte_vec_t pk { 3,160,222,219,177,84,156,171,229,219,12,189,138,90,90,226,13,255,208,174,26,60,35,207,53,221,178,164,242,27,225,116,155 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 981 ") {
    byte_vec_t msg { 250,199,54,17 };
    byte_vec_t sig { 61,52,33,2,191,85,49,140,118,140,182,172,5,90,177,91,247,160,132,171,125,152,42,248,207,108,119,130,167,1,169,189,144,174,249,25,230,210,101,172,86,180,159,61,188,83,132,18,183,42,180,126,160,37,226,148,64,167,170,2,179,191,217,10 };
    byte_vec_t pk { 4,186,41,41,228,13,18,9,112,17,206,54,249,63,210,12,248,145,144,202,120,84,197,119,102,173,39,159,232,242,72,148,112,20,251,188,36,229,59,191,213,188,219,183,110,255,32,113,89,68,144,107,126,142,78,135,81,223,134,24,246,24,95,49,103 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 981 ") {
    byte_vec_t msg { 118,142,3,64 };
    byte_vec_t sig { 84,131,150,84,184,169,0,171,47,13,204,27,16,1,69,110,158,242,93,170,102,115,60,223,108,164,19,173,182,185,26,170,161,67,140,66,226,212,121,76,156,204,250,161,99,115,45,108,146,97,239,152,71,201,49,95,128,232,117,166,242,15,213,219 };
    byte_vec_t pk { 4,25,21,101,29,52,112,49,78,131,170,149,251,132,111,200,110,5,215,58,217,68,105,88,200,71,233,120,127,185,109,37,127,48,99,237,164,100,5,197,20,84,247,191,117,223,29,129,124,20,67,233,194,13,105,114,65,198,51,85,191,8,246,50,36 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 981 ") {
    byte_vec_t msg { 37,2,234,40 };
    byte_vec_t sig { 25,55,135,174,126,240,22,25,234,248,223,247,147,96,107,190,166,11,166,49,9,20,86,177,107,163,60,235,136,254,28,154,83,131,4,250,156,1,85,166,144,122,125,236,144,116,193,214,81,131,194,185,239,214,8,197,250,227,81,190,33,167,56,92 };
    byte_vec_t pk { 3,194,127,105,141,116,123,71,49,212,209,59,5,120,141,56,122,227,202,70,39,146,102,65,228,18,204,171,232,178,111,76,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 981 ") {
    byte_vec_t msg { 57,46,153,153 };
    byte_vec_t sig { 255,46,122,117,239,179,0,251,130,48,80,118,20,217,197,219,197,224,160,8,124,153,234,33,155,79,104,6,90,170,229,212,110,87,7,91,62,199,235,184,249,108,17,174,171,181,173,110,201,249,233,37,71,168,125,254,87,24,107,185,53,166,98,147 };
    byte_vec_t pk { 2,222,150,145,27,52,244,16,209,207,91,78,162,208,133,134,166,27,138,82,19,157,119,113,235,30,151,164,66,229,207,166,94 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 982 ") {
    byte_vec_t msg { 220,105,250,157 };
    byte_vec_t sig { 68,158,105,43,20,204,22,73,145,95,42,250,12,84,248,37,219,171,199,25,97,146,78,192,15,226,205,43,47,11,235,224,91,176,254,216,133,104,163,102,207,179,30,127,152,110,6,141,245,230,33,91,238,65,4,97,1,150,52,244,187,35,135,88 };
    byte_vec_t pk { 4,161,225,132,208,49,47,146,205,231,231,92,106,129,229,236,17,172,218,112,218,23,193,62,86,2,28,244,83,175,253,21,15,163,28,46,66,8,239,68,138,241,254,143,230,149,154,105,2,110,200,140,95,220,22,83,63,177,157,1,39,186,253,125,5 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 982 ") {
    byte_vec_t msg { 143,117,175,150 };
    byte_vec_t sig { 184,53,174,6,246,181,129,147,23,255,37,234,25,4,20,81,167,221,158,240,78,75,61,248,76,111,50,19,252,47,97,49,205,27,235,118,197,196,53,202,55,27,216,159,229,41,156,118,56,71,167,156,172,49,111,27,86,206,228,227,182,29,0,210 };
    byte_vec_t pk { 4,199,238,228,23,93,198,14,216,80,253,209,222,159,90,44,133,220,37,242,53,23,34,227,195,84,72,0,72,154,34,208,152,186,150,126,247,133,255,245,204,173,207,229,17,28,37,170,201,34,25,51,145,137,120,97,50,25,213,170,129,206,152,234,134 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 982 ") {
    byte_vec_t msg { 239,183,109,162 };
    byte_vec_t sig { 11,55,253,89,73,0,1,148,148,247,63,222,251,85,104,93,224,198,97,229,208,204,152,179,98,203,133,201,55,200,66,198,5,45,188,208,190,190,178,12,41,113,230,19,110,200,95,180,39,201,90,253,71,90,242,43,55,177,221,102,151,176,32,190 };
    byte_vec_t pk { 3,223,242,188,219,220,146,7,39,221,8,117,177,17,58,174,237,20,121,125,186,118,126,19,19,60,186,137,24,224,195,205,247 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 982 ") {
    byte_vec_t msg { 32,130,145,151 };
    byte_vec_t sig { 244,226,245,121,13,58,248,234,111,96,59,85,242,15,23,129,207,105,108,240,17,83,98,54,8,153,173,204,126,224,70,8,57,195,126,162,48,98,164,147,172,51,78,97,74,160,175,94,165,220,199,120,151,216,178,148,88,16,209,226,23,17,187,168 };
    byte_vec_t pk { 2,4,155,41,17,19,94,143,83,156,143,215,59,136,45,190,162,90,182,162,133,162,6,75,36,169,1,3,57,151,123,96,63 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 983 ") {
    byte_vec_t msg { 239,113,58,24 };
    byte_vec_t sig { 149,236,222,147,80,66,201,69,98,19,121,174,128,150,17,113,108,217,241,128,248,140,60,42,35,155,219,223,54,238,135,160,75,120,76,152,206,8,119,157,17,133,181,102,125,89,69,33,175,207,221,63,55,180,20,41,51,186,198,182,41,98,89,170 };
    byte_vec_t pk { 4,162,101,79,115,140,90,234,215,124,4,18,197,152,93,196,144,240,20,182,77,108,34,214,201,248,86,129,70,92,237,32,228,85,89,166,245,235,72,186,80,99,125,14,30,155,70,70,54,84,172,186,28,180,44,65,132,226,65,97,99,229,16,197,187 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 983 ") {
    byte_vec_t msg { 183,0,184,140 };
    byte_vec_t sig { 226,147,121,20,0,220,153,99,121,119,81,208,227,73,215,198,183,157,238,201,110,140,31,148,195,92,71,161,16,145,26,5,34,142,198,88,34,145,124,31,7,149,185,136,81,26,225,0,16,214,66,131,62,128,248,223,144,146,81,112,211,187,136,122 };
    byte_vec_t pk { 4,20,161,145,185,193,165,68,42,90,13,100,116,165,50,167,120,155,27,97,244,171,20,63,174,184,239,12,178,6,211,2,179,169,189,206,254,240,202,254,245,102,21,237,242,237,111,254,77,233,65,32,129,194,36,36,214,244,181,172,48,21,177,125,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 983 ") {
    byte_vec_t msg { 207,21,160,15 };
    byte_vec_t sig { 131,131,82,109,151,66,149,57,224,52,29,195,25,191,114,196,59,133,234,170,144,96,76,233,2,146,119,13,43,160,136,56,243,18,125,225,188,202,228,113,35,4,110,101,84,70,27,0,240,121,9,55,149,69,203,173,243,59,254,94,120,233,173,150 };
    byte_vec_t pk { 2,238,39,39,43,25,214,56,52,135,97,174,25,0,84,107,56,212,99,144,137,211,54,115,2,197,227,2,106,245,129,182,221 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 983 ") {
    byte_vec_t msg { 107,73,97,47 };
    byte_vec_t sig { 126,194,107,239,109,20,150,66,103,42,5,141,190,45,104,246,156,139,100,97,92,148,216,236,254,201,38,78,255,8,166,69,41,88,79,112,109,4,15,102,200,69,241,192,248,253,224,35,133,12,54,194,60,110,82,208,182,239,145,55,39,189,176,172 };
    byte_vec_t pk { 3,10,215,185,193,32,10,187,100,207,183,202,244,84,244,49,100,54,147,111,88,153,214,251,23,157,56,189,107,38,213,71,171 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 984 ") {
    byte_vec_t msg { 28,125,85,190 };
    byte_vec_t sig { 135,193,25,54,37,14,143,153,178,203,125,47,246,98,112,44,48,115,69,240,42,129,220,150,246,227,86,242,162,217,120,10,30,38,75,244,248,72,128,193,231,115,251,182,41,40,227,118,108,84,21,45,169,7,214,195,100,162,253,82,211,130,222,192 };
    byte_vec_t pk { 4,244,71,183,19,152,10,153,92,135,249,188,156,130,163,122,65,9,173,232,206,91,151,183,56,71,148,231,154,36,215,130,195,62,52,117,139,202,3,221,217,32,36,175,220,196,28,238,179,70,167,242,57,51,167,49,212,151,53,5,250,46,143,245,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 984 ") {
    byte_vec_t msg { 42,183,177,97 };
    byte_vec_t sig { 55,178,165,6,166,208,183,93,139,8,252,58,61,26,84,156,206,123,188,53,174,111,148,85,191,128,74,242,189,209,132,90,205,85,34,0,35,202,178,33,4,10,5,172,102,121,94,15,69,59,210,249,6,219,165,90,167,211,68,44,22,61,149,243 };
    byte_vec_t pk { 4,77,81,220,186,230,69,99,88,59,235,155,84,209,179,219,129,238,201,2,211,77,134,193,109,176,38,208,223,105,79,90,105,146,138,115,43,21,214,10,104,74,123,245,32,48,222,52,92,162,17,82,252,52,112,66,6,18,90,85,225,200,131,189,89 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 984 ") {
    byte_vec_t msg { 172,147,139,205 };
    byte_vec_t sig { 155,204,47,246,112,223,240,228,229,100,243,80,134,149,255,29,41,38,45,29,155,154,128,96,252,46,68,150,217,224,50,128,189,251,107,196,154,199,26,198,30,187,233,109,145,223,223,171,131,225,214,37,156,40,30,134,46,177,132,65,53,128,122,104 };
    byte_vec_t pk { 3,20,92,189,100,94,187,55,63,231,165,116,76,239,127,46,149,30,155,50,151,250,167,181,251,172,116,176,5,193,154,55,213 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 984 ") {
    byte_vec_t msg { 93,33,32,52 };
    byte_vec_t sig { 85,198,142,79,132,230,170,110,143,129,219,13,230,5,121,245,99,255,107,182,91,68,35,174,172,76,114,204,112,23,241,42,212,91,43,28,166,30,63,177,193,168,156,112,56,249,75,162,181,187,198,198,68,188,47,254,56,6,73,198,2,127,37,102 };
    byte_vec_t pk { 2,159,185,36,85,223,167,86,90,200,186,204,185,249,156,152,161,150,96,15,80,214,20,31,139,154,247,101,33,212,41,119,159 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 985 ") {
    byte_vec_t msg { 71,118,171,46 };
    byte_vec_t sig { 75,168,123,252,103,183,226,164,231,196,221,9,218,140,231,135,19,28,247,173,112,84,122,162,239,241,170,122,227,142,67,3,31,204,155,210,91,155,66,112,170,208,173,236,93,212,228,163,126,221,146,40,23,134,86,219,176,136,214,239,0,147,30,232 };
    byte_vec_t pk { 4,246,183,199,143,52,137,130,225,222,145,70,55,164,143,244,93,128,232,161,234,126,161,80,174,136,55,142,207,165,107,9,72,28,208,247,96,255,27,231,67,41,231,156,14,242,191,230,198,231,151,17,222,73,238,9,32,198,231,0,48,201,2,104,2 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 985 ") {
    byte_vec_t msg { 173,84,30,128 };
    byte_vec_t sig { 251,137,224,152,121,184,88,205,23,247,42,87,5,125,54,124,80,150,140,37,208,139,131,247,104,143,223,61,237,233,194,62,161,87,91,48,57,135,10,127,122,26,160,19,81,34,158,221,51,108,234,4,187,51,142,7,10,179,231,6,0,114,116,238 };
    byte_vec_t pk { 4,206,153,23,40,54,194,208,201,217,111,199,72,168,78,130,77,159,186,152,65,152,71,110,195,27,198,93,78,219,165,247,251,220,130,104,100,38,93,19,250,198,226,5,155,12,64,145,224,165,95,192,179,122,161,183,207,204,238,47,138,104,38,50,72 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 985 ") {
    byte_vec_t msg { 77,80,109,121 };
    byte_vec_t sig { 55,2,162,18,246,43,252,156,52,2,221,156,132,87,136,154,241,63,10,129,225,166,100,51,249,101,236,159,204,45,37,107,22,253,219,88,241,56,92,175,207,85,117,25,119,180,44,207,157,130,32,2,197,48,121,245,49,113,105,35,116,212,94,171 };
    byte_vec_t pk { 3,189,253,171,105,129,103,96,137,133,196,241,231,15,192,166,87,173,183,121,140,20,29,134,165,213,181,135,119,209,40,28,62 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 985 ") {
    byte_vec_t msg { 239,110,40,98 };
    byte_vec_t sig { 208,90,74,177,228,47,192,127,229,121,250,200,136,89,146,4,173,31,91,255,38,37,212,67,54,17,26,190,56,235,77,105,238,226,5,29,195,156,173,148,162,207,249,218,252,71,122,111,122,120,154,187,239,132,139,211,53,79,114,123,215,90,75,151 };
    byte_vec_t pk { 2,178,3,13,237,6,235,10,226,153,25,206,147,160,158,90,199,172,70,115,245,61,207,193,161,51,91,138,37,77,12,18,199 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 986 ") {
    byte_vec_t msg { 248,210,26,188 };
    byte_vec_t sig { 87,53,200,145,55,196,194,125,85,241,30,111,100,20,178,229,15,128,198,15,81,220,199,27,221,101,20,170,174,209,243,147,169,45,166,17,95,228,18,159,210,120,172,194,57,50,199,225,158,117,72,151,127,203,78,135,115,81,234,101,90,250,52,125 };
    byte_vec_t pk { 4,46,254,187,71,22,5,211,122,85,218,218,100,113,48,210,76,95,9,59,65,117,237,205,247,251,74,202,48,22,250,154,140,215,164,219,57,44,142,0,33,71,7,247,77,133,151,239,241,1,71,203,62,43,90,220,160,176,252,116,92,194,19,186,121 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 986 ") {
    byte_vec_t msg { 148,162,201,104 };
    byte_vec_t sig { 225,208,86,196,131,189,71,133,11,48,46,82,223,40,202,34,79,243,150,33,59,100,47,150,152,64,47,230,232,11,170,204,106,138,127,179,127,141,68,73,193,242,104,54,218,52,95,171,252,19,185,57,104,27,209,150,21,41,240,122,62,33,78,187 };
    byte_vec_t pk { 4,222,76,82,218,74,227,101,181,68,200,160,142,235,60,84,70,126,22,165,217,84,161,188,45,163,154,199,248,248,146,161,86,244,178,235,81,115,238,147,23,119,203,61,213,84,70,80,172,229,88,187,23,1,195,22,210,43,149,244,7,143,171,163,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 986 ") {
    byte_vec_t msg { 167,105,247,190 };
    byte_vec_t sig { 69,172,151,0,82,167,32,52,64,202,207,161,223,87,246,93,205,28,7,243,234,225,71,119,217,214,72,70,213,29,23,216,177,95,215,126,220,194,123,38,150,155,66,190,186,164,69,82,115,206,249,3,45,35,221,102,140,190,94,122,135,110,171,154 };
    byte_vec_t pk { 2,27,242,8,236,169,116,238,192,212,83,42,73,187,215,136,231,167,117,71,36,93,155,223,212,217,46,61,158,143,209,147,152 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 986 ") {
    byte_vec_t msg { 177,146,212,160 };
    byte_vec_t sig { 77,166,85,217,142,242,117,131,147,1,97,150,98,12,250,34,120,166,35,172,239,135,17,250,21,206,46,139,140,34,56,162,85,110,52,184,218,98,89,253,175,219,203,14,97,144,9,30,228,50,221,171,160,104,160,29,81,5,192,88,121,224,52,12 };
    byte_vec_t pk { 3,72,220,35,98,182,252,132,189,138,255,126,144,114,193,114,193,151,2,90,63,241,86,217,172,252,207,230,213,111,202,243,108 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 987 ") {
    byte_vec_t msg { 6,62,249,190 };
    byte_vec_t sig { 237,25,181,51,214,34,218,219,136,239,116,26,172,215,41,73,145,221,111,227,43,104,36,150,24,173,148,129,43,161,250,46,216,128,11,213,187,236,26,170,72,37,235,58,118,84,221,139,108,3,192,127,14,190,177,225,44,182,79,4,13,7,89,94 };
    byte_vec_t pk { 4,192,196,230,207,145,160,129,47,137,108,219,60,231,158,24,195,253,154,136,247,155,89,117,148,190,58,216,11,246,217,254,187,176,53,6,117,212,131,62,233,85,15,66,232,182,87,77,64,65,77,53,218,217,232,216,206,152,177,243,0,78,124,190,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 987 ") {
    byte_vec_t msg { 61,48,216,161 };
    byte_vec_t sig { 150,57,91,69,233,127,181,121,39,236,175,129,56,86,30,253,120,58,197,89,57,181,187,248,113,135,249,10,64,5,191,73,109,178,28,202,189,34,182,62,11,136,197,83,48,144,2,176,180,197,99,124,17,14,142,148,25,162,245,90,243,166,112,173 };
    byte_vec_t pk { 4,175,107,216,194,24,99,64,235,158,62,75,147,182,226,44,109,202,200,11,175,242,146,213,7,29,109,245,133,151,205,162,64,188,127,103,74,53,180,226,214,255,25,212,141,80,197,230,8,237,229,94,229,23,82,232,96,224,198,79,245,73,56,242,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 987 ") {
    byte_vec_t msg { 240,167,185,11 };
    byte_vec_t sig { 176,195,189,14,251,158,139,122,2,139,155,145,16,195,42,213,102,221,164,81,151,179,13,13,70,20,151,187,84,37,154,205,249,248,140,57,50,143,25,147,19,220,132,10,173,36,80,176,217,185,252,249,169,80,28,156,162,183,220,80,211,102,90,199 };
    byte_vec_t pk { 2,162,186,221,144,153,77,89,213,163,60,63,117,100,236,209,92,144,7,246,151,20,116,71,111,202,75,71,170,99,241,21,174 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 987 ") {
    byte_vec_t msg { 185,91,231,118 };
    byte_vec_t sig { 167,105,205,9,82,109,190,162,149,15,228,55,204,129,176,237,205,255,201,147,219,51,31,85,70,35,121,68,238,8,156,20,33,35,113,100,199,156,220,117,53,64,17,214,31,53,18,173,189,15,164,178,140,175,164,125,169,213,238,93,197,91,112,252 };
    byte_vec_t pk { 3,115,128,12,35,181,245,118,207,185,79,68,254,38,4,127,192,227,109,162,52,130,106,166,146,174,63,129,103,137,214,25,234 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 988 ") {
    byte_vec_t msg { 255,223,57,140 };
    byte_vec_t sig { 183,31,154,119,42,185,199,170,152,122,254,158,97,41,93,51,49,74,122,125,210,179,234,229,54,136,19,67,186,33,29,13,2,102,137,220,255,17,46,194,76,124,181,44,110,249,9,206,49,59,164,112,204,72,170,155,4,61,137,42,105,2,242,18 };
    byte_vec_t pk { 4,143,132,180,101,12,213,221,137,22,156,96,62,244,24,19,39,43,21,23,28,86,18,112,164,123,233,12,127,177,234,210,219,56,208,177,185,175,139,162,214,120,98,24,207,252,217,93,37,40,218,222,215,228,25,196,196,52,30,171,52,163,121,198,170 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 988 ") {
    byte_vec_t msg { 48,46,104,6 };
    byte_vec_t sig { 133,36,10,46,79,6,156,176,94,115,237,241,119,146,251,57,1,238,216,225,243,44,209,179,139,57,194,244,212,30,233,13,169,102,91,194,117,163,148,59,174,210,206,0,89,2,65,170,3,55,249,174,150,235,119,21,220,220,106,231,19,208,117,9 };
    byte_vec_t pk { 4,196,39,194,236,198,149,107,213,126,3,188,75,16,51,178,9,202,194,28,73,174,98,25,252,88,12,124,253,48,3,142,172,72,68,27,208,73,186,9,191,121,184,47,206,156,22,88,148,186,188,176,154,200,132,42,113,25,185,202,94,71,17,241,96 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 988 ") {
    byte_vec_t msg { 56,178,58,104 };
    byte_vec_t sig { 31,136,61,133,13,188,222,247,96,7,78,186,197,30,80,160,74,183,222,64,229,148,16,25,255,136,60,238,78,255,152,136,207,2,17,183,125,214,180,249,3,200,27,254,50,83,99,186,69,247,198,81,214,210,13,9,245,41,129,96,33,24,151,104 };
    byte_vec_t pk { 2,226,154,106,241,230,26,116,14,117,3,123,156,58,85,167,115,104,171,237,232,75,14,204,224,91,117,76,108,125,106,208,144 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 988 ") {
    byte_vec_t msg { 54,200,12,88 };
    byte_vec_t sig { 167,213,231,222,124,233,142,242,65,77,229,229,149,173,235,31,231,39,29,13,201,8,213,125,232,181,155,5,248,145,140,61,19,175,62,180,199,205,213,38,102,142,238,255,12,161,182,48,173,224,227,193,230,117,103,15,188,108,177,191,106,149,168,225 };
    byte_vec_t pk { 3,231,231,233,23,104,14,64,154,6,196,160,242,34,189,39,111,195,251,203,40,141,167,69,100,182,140,210,6,189,48,21,220 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 989 ") {
    byte_vec_t msg { 208,201,45,211 };
    byte_vec_t sig { 229,212,119,70,205,208,122,5,33,250,123,93,35,184,109,189,253,86,208,114,108,251,143,228,244,161,33,174,26,222,199,51,217,156,184,11,216,229,144,195,198,115,189,195,187,196,57,3,217,108,64,162,244,222,98,130,182,34,124,247,136,47,72,103 };
    byte_vec_t pk { 4,19,109,90,143,25,21,124,80,83,135,124,124,174,228,31,125,112,24,12,127,79,186,236,131,22,164,195,54,141,91,22,131,119,195,118,117,92,147,161,54,201,144,181,31,164,111,150,244,199,146,23,126,202,212,225,108,162,40,240,13,15,252,199,37 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 989 ") {
    byte_vec_t msg { 73,17,47,229 };
    byte_vec_t sig { 189,193,15,69,37,134,254,171,96,55,4,214,76,20,222,160,253,12,111,71,129,115,86,98,253,14,25,249,91,216,118,201,212,248,191,0,81,1,52,186,176,224,160,216,154,103,25,225,71,200,4,205,27,34,53,68,149,190,79,84,199,35,126,184 };
    byte_vec_t pk { 4,125,111,161,222,98,201,221,195,63,58,192,235,31,30,212,211,96,133,143,247,212,170,51,100,252,13,110,162,171,178,145,191,49,144,120,207,63,43,78,53,78,20,55,221,186,2,23,212,93,19,245,146,171,177,114,224,25,2,77,88,42,159,246,104 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 989 ") {
    byte_vec_t msg { 34,73,158,9 };
    byte_vec_t sig { 85,161,217,130,12,134,39,219,82,135,103,85,159,179,226,170,72,75,35,185,190,35,153,231,139,121,109,139,38,105,97,189,245,182,218,57,186,39,3,134,148,166,86,163,105,208,93,155,115,160,145,110,15,181,13,11,237,27,252,214,198,212,94,121 };
    byte_vec_t pk { 2,120,103,74,69,200,204,96,25,177,116,4,87,123,212,109,93,56,73,191,93,231,91,215,140,194,137,211,191,195,103,58,142 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 989 ") {
    byte_vec_t msg { 14,41,218,14 };
    byte_vec_t sig { 232,40,5,107,156,254,119,253,216,117,87,183,136,48,234,22,167,96,68,24,4,156,107,80,218,236,225,187,225,254,186,170,247,5,35,162,73,220,78,201,114,67,21,220,102,194,128,82,191,35,202,201,53,56,161,52,215,157,44,207,61,242,73,78 };
    byte_vec_t pk { 3,28,123,90,144,192,248,74,11,81,190,42,56,100,235,253,111,84,113,208,241,48,78,34,137,234,20,253,237,36,134,28,119 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 990 ") {
    byte_vec_t msg { 45,95,191,158 };
    byte_vec_t sig { 129,66,25,196,199,152,205,213,148,251,83,110,87,176,243,73,68,133,170,159,209,32,200,130,188,133,15,227,169,223,78,44,5,52,199,129,182,168,194,187,136,86,136,120,156,49,122,142,76,174,172,198,48,97,42,6,176,200,189,137,166,12,202,180 };
    byte_vec_t pk { 4,139,239,103,242,117,102,63,75,177,183,61,181,211,35,171,139,141,18,229,197,57,205,4,160,79,50,129,4,53,182,21,184,196,100,73,14,5,185,61,167,200,212,103,202,39,13,239,104,110,175,5,9,148,4,48,107,101,246,202,211,52,185,187,83 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 990 ") {
    byte_vec_t msg { 122,81,45,203 };
    byte_vec_t sig { 68,156,171,194,18,92,110,214,164,176,65,107,65,244,82,181,202,41,165,5,61,184,12,92,159,121,17,183,219,189,166,228,102,178,201,95,7,250,102,171,237,127,84,141,68,224,78,42,192,131,248,229,50,186,22,192,234,50,244,52,152,176,220,99 };
    byte_vec_t pk { 4,124,69,179,42,79,89,47,176,186,100,250,11,236,81,27,168,222,128,57,221,37,9,233,56,166,153,122,3,96,235,237,246,172,248,96,48,17,147,3,238,39,176,233,119,171,15,227,2,85,173,248,236,248,11,138,100,118,31,151,215,63,171,165,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 990 ") {
    byte_vec_t msg { 17,50,50,153 };
    byte_vec_t sig { 249,243,134,238,241,134,72,56,202,232,226,130,198,225,108,105,170,24,30,125,187,233,116,225,185,25,60,238,248,97,233,165,116,126,165,215,227,14,195,237,81,141,99,186,106,186,94,91,47,73,130,78,101,103,188,150,229,147,158,63,214,233,9,252 };
    byte_vec_t pk { 3,24,63,181,139,179,102,180,68,35,241,254,223,13,188,68,223,187,137,176,111,144,74,246,202,232,138,16,95,128,95,174,93 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 990 ") {
    byte_vec_t msg { 210,100,202,228 };
    byte_vec_t sig { 255,246,229,40,110,2,213,0,189,165,237,74,204,247,50,206,221,115,182,10,21,116,201,242,176,216,106,100,32,134,156,187,22,122,149,179,202,160,224,106,94,203,91,152,171,102,203,73,94,165,212,188,222,217,247,196,226,188,35,172,194,42,119,179 };
    byte_vec_t pk { 2,8,2,161,254,5,125,24,189,166,105,199,56,148,113,129,189,47,62,150,253,76,174,114,231,189,111,13,64,108,156,160,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 991 ") {
    byte_vec_t msg { 195,116,110,122 };
    byte_vec_t sig { 110,50,187,221,197,67,89,226,108,32,142,233,117,9,234,215,153,70,126,13,120,222,191,226,133,95,89,50,125,209,201,135,67,247,176,171,179,60,27,23,1,73,154,125,218,67,92,53,255,169,185,175,30,174,147,22,33,39,180,46,140,53,75,244 };
    byte_vec_t pk { 4,161,176,52,94,181,243,235,149,42,246,174,69,211,148,227,227,17,143,74,74,222,66,63,110,189,7,239,74,88,41,221,114,88,90,251,152,10,49,211,242,189,116,29,122,231,150,177,213,202,18,99,226,127,180,232,30,117,45,241,249,242,218,105,22 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 991 ") {
    byte_vec_t msg { 12,181,229,85 };
    byte_vec_t sig { 122,76,29,107,8,6,156,47,202,186,235,66,235,221,166,119,85,125,122,186,246,73,0,189,73,100,202,155,158,248,74,23,174,18,180,150,8,43,112,197,46,254,160,23,15,115,39,245,215,239,198,51,153,234,23,180,124,2,200,132,48,137,32,112 };
    byte_vec_t pk { 4,124,41,61,99,107,48,168,211,91,192,165,55,96,125,203,199,87,116,234,9,89,49,216,71,134,114,10,181,251,97,0,212,228,152,98,234,91,172,228,206,37,211,5,245,97,137,238,147,56,123,109,70,121,55,123,62,118,242,13,11,146,166,159,77 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 991 ") {
    byte_vec_t msg { 127,30,208,171 };
    byte_vec_t sig { 19,244,179,114,173,15,222,132,48,121,103,222,251,34,218,73,193,122,241,59,68,212,139,216,250,238,16,11,212,117,149,115,59,205,30,87,78,133,13,87,171,213,121,186,82,124,163,235,181,213,226,186,228,177,118,253,145,161,70,230,144,127,11,67 };
    byte_vec_t pk { 2,119,137,113,11,124,146,129,151,151,124,61,198,45,49,225,127,112,56,143,188,221,7,222,66,41,14,58,237,70,202,103,215 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 991 ") {
    byte_vec_t msg { 24,35,10,240 };
    byte_vec_t sig { 246,69,176,202,178,151,146,225,221,251,138,131,183,246,44,245,244,229,121,151,70,234,213,28,133,36,227,124,250,63,103,98,128,47,95,5,188,170,83,165,74,11,223,154,147,101,160,114,235,155,168,63,74,221,203,82,98,177,183,174,56,15,113,77 };
    byte_vec_t pk { 3,22,130,254,208,2,232,228,7,165,113,89,172,14,17,61,31,20,139,19,138,67,63,178,184,155,169,25,139,81,61,126,244 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 992 ") {
    byte_vec_t msg { 225,40,216,62 };
    byte_vec_t sig { 14,97,221,143,227,112,94,13,90,235,183,82,194,180,5,175,40,154,50,37,171,158,173,223,241,70,245,130,175,75,185,51,13,20,58,163,37,3,28,152,185,10,183,65,221,234,227,83,113,255,154,250,109,135,32,45,161,1,63,167,187,152,142,21 };
    byte_vec_t pk { 4,10,64,192,206,138,100,183,99,166,106,180,67,68,141,37,174,15,148,169,183,231,79,105,217,33,238,210,156,49,199,157,23,254,239,158,167,63,254,24,20,232,48,255,123,243,8,38,151,186,135,14,245,110,248,56,162,13,223,47,234,28,216,18,160 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 992 ") {
    byte_vec_t msg { 178,64,184,127 };
    byte_vec_t sig { 72,14,246,7,242,154,164,147,90,16,96,175,221,248,146,87,198,20,169,75,134,60,93,47,46,228,52,129,111,72,180,40,83,219,150,35,247,216,57,62,184,161,148,119,214,138,242,149,73,91,147,247,76,45,143,129,196,146,239,119,157,80,78,38 };
    byte_vec_t pk { 4,0,215,85,111,195,15,86,236,208,107,144,65,228,96,94,205,173,6,46,147,9,253,74,148,54,202,46,50,101,29,195,25,219,155,127,159,48,154,130,24,16,116,114,236,152,94,5,5,220,62,149,154,231,233,127,206,177,167,44,106,123,178,151,58 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 992 ") {
    byte_vec_t msg { 175,22,218,107 };
    byte_vec_t sig { 138,160,195,181,18,137,56,193,27,227,134,98,103,118,156,105,255,221,226,194,168,27,213,76,194,196,232,159,147,31,74,94,50,250,255,103,212,158,176,69,149,54,251,77,3,114,69,66,217,245,63,252,132,182,199,18,172,218,34,229,194,22,137,238 };
    byte_vec_t pk { 2,190,207,59,96,65,51,84,2,204,62,127,232,164,255,184,195,125,214,34,186,42,223,116,206,186,118,36,40,135,0,229,228 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 992 ") {
    byte_vec_t msg { 37,53,103,14 };
    byte_vec_t sig { 84,250,106,149,150,200,212,36,97,154,185,207,252,230,63,225,166,12,222,121,63,223,200,157,93,182,214,117,15,59,72,133,14,195,139,235,127,216,180,210,95,203,60,14,65,82,184,86,13,218,170,152,90,129,3,208,219,131,141,109,98,69,91,233 };
    byte_vec_t pk { 3,120,114,3,202,91,181,152,156,183,18,71,139,82,35,155,36,165,216,53,25,41,230,152,94,242,78,173,251,73,226,156,49 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 993 ") {
    byte_vec_t msg { 197,145,79,142 };
    byte_vec_t sig { 247,70,134,76,9,226,37,146,117,174,8,208,165,4,69,204,231,225,164,84,19,245,85,81,155,150,20,181,201,116,242,8,18,79,105,121,150,167,115,223,22,79,239,30,127,149,242,13,237,231,175,254,177,78,132,53,110,32,159,178,225,140,145,148 };
    byte_vec_t pk { 4,220,101,100,245,11,168,103,149,25,81,218,83,218,86,31,149,96,9,47,77,33,159,73,91,77,148,107,94,40,161,134,18,168,94,19,20,252,83,117,118,218,177,80,56,227,200,231,79,53,54,254,78,191,247,31,67,70,117,58,27,210,102,173,243 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 993 ") {
    byte_vec_t msg { 250,242,229,191 };
    byte_vec_t sig { 58,49,53,168,121,252,197,112,108,253,32,21,236,254,92,55,140,14,38,252,98,192,134,64,30,99,19,129,238,195,153,212,37,90,99,37,161,159,200,192,31,36,25,30,46,0,209,141,145,71,83,56,167,73,81,11,37,116,154,6,128,32,153,137 };
    byte_vec_t pk { 4,234,192,37,160,133,157,84,100,230,12,28,162,65,25,131,60,4,240,243,255,112,226,67,171,15,69,71,19,30,238,152,116,251,130,227,122,69,83,6,29,71,209,229,60,225,214,191,190,187,230,134,150,54,168,30,168,48,174,188,95,93,107,111,198 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 993 ") {
    byte_vec_t msg { 4,254,129,241 };
    byte_vec_t sig { 35,228,196,152,184,64,134,20,101,30,33,158,145,244,230,86,126,50,179,123,67,114,23,51,84,227,137,73,211,121,32,201,142,29,111,177,148,85,35,7,175,13,101,151,92,142,123,97,29,118,140,164,214,5,244,151,238,43,62,99,198,250,54,173 };
    byte_vec_t pk { 3,199,111,240,250,90,118,148,114,3,196,161,0,206,219,131,22,125,45,124,151,17,74,209,147,199,116,231,116,112,55,89,147 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 993 ") {
    byte_vec_t msg { 187,29,20,213 };
    byte_vec_t sig { 150,242,18,168,107,112,38,3,62,176,150,228,158,28,108,115,27,15,234,74,128,76,74,225,5,72,198,193,232,41,135,248,174,248,234,133,118,203,184,123,135,70,49,4,68,179,143,234,151,231,113,16,33,160,34,155,211,21,81,0,229,159,204,168 };
    byte_vec_t pk { 3,161,192,32,35,158,68,0,245,104,102,181,183,107,125,82,108,142,74,40,71,191,55,68,181,235,224,102,202,189,79,106,136 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 994 ") {
    byte_vec_t msg { 253,83,187,219 };
    byte_vec_t sig { 148,72,1,183,171,246,136,196,45,74,4,208,34,150,16,110,166,207,161,193,194,95,91,230,163,231,69,18,88,255,6,62,38,192,66,4,64,154,202,80,57,226,194,20,225,31,249,15,141,87,226,214,53,42,112,139,6,204,167,144,57,5,193,245 };
    byte_vec_t pk { 4,117,99,124,45,54,66,220,135,204,101,231,113,8,232,4,204,61,127,119,66,32,241,177,232,2,197,166,202,26,205,36,86,213,22,20,14,14,137,85,121,129,49,151,7,225,133,3,236,60,16,62,213,251,71,169,167,208,93,104,56,28,152,164,175 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 994 ") {
    byte_vec_t msg { 158,35,255,153 };
    byte_vec_t sig { 50,88,157,206,28,142,141,170,186,182,183,51,89,71,30,52,127,56,24,110,214,61,131,45,85,166,249,47,242,65,45,255,255,30,79,3,88,15,13,104,242,254,173,148,22,144,99,85,185,22,142,87,161,197,54,26,1,5,179,117,209,249,150,184 };
    byte_vec_t pk { 4,205,10,178,24,202,231,104,200,14,105,208,185,206,171,105,71,247,240,81,122,107,140,136,244,89,58,5,72,242,103,234,20,198,79,119,221,254,200,20,89,42,249,56,75,126,244,253,33,80,32,120,36,205,230,150,2,181,111,236,242,154,140,111,188 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 994 ") {
    byte_vec_t msg { 254,175,249,149 };
    byte_vec_t sig { 1,70,98,73,154,35,234,250,43,203,32,0,45,209,195,101,21,133,9,107,184,172,231,230,11,91,54,206,145,33,92,161,245,34,99,121,0,56,243,34,232,218,253,164,177,189,119,50,72,199,36,35,85,161,16,217,190,228,12,105,90,62,156,138 };
    byte_vec_t pk { 2,115,163,191,155,217,179,251,81,118,41,65,147,173,161,17,233,246,101,117,73,34,171,125,244,162,94,254,107,119,24,208,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 994 ") {
    byte_vec_t msg { 220,182,146,63 };
    byte_vec_t sig { 12,158,32,236,223,166,78,234,154,170,184,152,80,231,55,162,94,203,65,225,188,228,215,173,25,255,27,113,22,253,184,146,179,42,116,182,111,57,120,230,75,22,55,218,212,131,134,244,117,3,239,98,134,19,207,216,201,145,220,172,216,142,106,38 };
    byte_vec_t pk { 3,25,145,247,57,111,215,85,102,147,101,139,0,192,36,23,162,241,230,10,235,155,17,189,206,42,125,224,42,60,36,201,41 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 995 ") {
    byte_vec_t msg { 180,153,181,169 };
    byte_vec_t sig { 127,34,133,149,118,226,23,199,22,158,16,43,97,25,104,14,220,45,240,221,116,153,165,187,136,121,140,76,128,128,235,143,164,176,32,16,29,33,55,224,121,40,136,69,239,113,127,100,103,244,105,64,204,181,91,107,13,36,76,172,183,215,143,123 };
    byte_vec_t pk { 4,212,230,164,228,245,152,52,87,127,226,248,174,186,199,203,123,236,45,15,135,255,194,57,183,43,211,201,208,43,85,102,217,168,127,91,128,23,243,118,218,119,99,147,229,108,29,201,95,83,17,66,88,216,222,49,243,170,58,252,170,234,4,184,254 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 995 ") {
    byte_vec_t msg { 221,3,214,89 };
    byte_vec_t sig { 96,56,250,3,71,226,193,75,135,219,239,255,185,54,190,198,234,236,141,94,67,80,91,203,158,102,108,5,26,92,164,122,208,214,253,157,43,2,31,16,67,135,166,5,5,139,45,85,156,215,204,46,188,168,197,153,30,220,236,208,231,208,78,249 };
    byte_vec_t pk { 4,31,139,157,218,195,218,159,252,56,189,81,165,131,161,48,138,94,40,245,89,102,229,6,251,109,171,198,244,198,193,123,69,232,173,149,248,32,22,151,173,197,18,50,150,38,119,219,203,9,90,101,79,15,115,10,210,194,120,184,60,13,24,171,75 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 995 ") {
    byte_vec_t msg { 135,108,183,74 };
    byte_vec_t sig { 247,97,232,240,178,207,142,134,168,39,82,173,77,109,51,45,50,35,148,212,49,32,173,135,211,212,146,160,91,157,23,139,221,116,241,110,4,177,250,222,19,227,69,110,125,131,150,220,183,151,51,139,51,253,245,252,96,76,120,38,82,111,86,16 };
    byte_vec_t pk { 3,210,27,68,247,238,231,56,151,109,255,72,204,90,219,195,94,221,104,197,204,226,148,122,174,80,140,101,45,98,165,201,47 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 995 ") {
    byte_vec_t msg { 131,6,224,51 };
    byte_vec_t sig { 216,16,215,8,17,125,166,217,144,254,133,193,162,112,208,96,160,191,232,102,32,94,132,121,157,168,216,201,248,253,4,12,41,177,94,172,159,174,133,125,168,216,226,169,96,54,161,2,236,201,14,206,181,186,117,132,83,31,205,47,66,140,160,148 };
    byte_vec_t pk { 2,188,126,150,126,61,155,127,172,235,81,27,61,51,53,203,197,59,70,252,204,182,114,158,163,182,240,63,240,243,30,91,167 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 996 ") {
    byte_vec_t msg { 197,126,76,240 };
    byte_vec_t sig { 163,31,235,60,44,17,117,151,4,200,129,103,32,136,111,253,96,128,75,211,230,15,110,76,16,74,66,218,184,253,200,152,34,240,44,146,39,174,12,188,97,206,187,47,86,255,23,147,212,46,248,208,74,189,228,110,33,175,216,187,110,35,138,217 };
    byte_vec_t pk { 4,164,25,189,173,254,217,240,205,79,179,167,138,3,210,10,57,194,212,91,150,93,173,70,136,191,216,67,193,192,215,18,158,211,242,149,139,114,165,144,84,71,99,235,171,119,132,115,110,171,190,107,205,25,46,149,213,3,169,39,216,23,83,38,43 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 996 ") {
    byte_vec_t msg { 28,102,240,96 };
    byte_vec_t sig { 62,224,119,144,96,249,161,0,241,209,190,46,51,46,130,19,216,36,62,247,201,110,151,197,24,242,68,121,136,106,35,241,21,128,56,222,21,167,227,131,161,221,56,172,183,148,54,189,75,29,88,107,206,144,145,164,230,113,178,18,26,18,71,131 };
    byte_vec_t pk { 4,0,74,186,136,228,110,97,214,140,184,73,1,130,44,150,186,96,39,176,184,137,117,27,88,112,35,240,254,129,126,226,3,200,36,220,180,84,184,249,139,189,19,3,87,136,183,184,145,33,206,179,158,69,31,18,252,9,226,108,244,31,86,155,209 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 996 ") {
    byte_vec_t msg { 56,69,127,232 };
    byte_vec_t sig { 107,156,132,27,131,77,97,175,243,241,0,144,205,132,78,102,156,150,173,108,158,202,180,253,144,30,224,164,72,25,183,35,160,162,65,144,126,182,47,228,227,199,232,66,193,107,227,99,126,147,186,121,88,25,127,157,242,228,177,234,198,192,230,254 };
    byte_vec_t pk { 2,8,198,77,11,213,136,66,129,115,72,222,160,9,59,198,169,183,202,47,205,88,179,53,94,143,156,8,227,147,172,204,123 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 996 ") {
    byte_vec_t msg { 49,197,135,41 };
    byte_vec_t sig { 199,56,123,198,48,90,37,53,140,133,169,124,117,241,188,98,154,216,191,121,84,211,161,134,208,49,221,194,126,23,95,201,9,178,162,123,2,90,90,106,124,138,123,246,16,184,214,88,77,26,85,145,224,99,228,160,35,20,221,192,233,232,222,163 };
    byte_vec_t pk { 2,141,185,204,1,144,113,25,123,4,163,10,127,5,254,84,221,69,49,99,22,129,209,166,100,253,19,61,163,105,118,103,137 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 997 ") {
    byte_vec_t msg { 28,54,125,69 };
    byte_vec_t sig { 68,177,173,7,143,207,3,173,86,172,14,106,211,36,195,20,112,207,229,200,239,52,93,148,196,138,230,173,42,24,181,233,57,19,92,223,250,226,65,61,114,21,117,183,237,186,10,140,76,10,217,203,184,112,12,39,226,14,121,23,84,142,110,96 };
    byte_vec_t pk { 4,76,219,27,162,16,148,248,111,185,204,222,81,183,253,26,183,180,176,37,238,124,7,155,107,23,163,29,86,212,93,0,220,28,64,142,64,31,143,119,180,232,151,181,152,30,144,26,106,173,226,80,27,232,129,203,52,98,206,200,146,154,142,34,176 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 997 ") {
    byte_vec_t msg { 202,171,159,37 };
    byte_vec_t sig { 0,110,1,211,17,3,87,19,212,34,168,100,193,250,80,147,149,116,129,56,71,242,233,40,76,145,119,187,99,3,40,111,68,90,84,180,109,10,160,123,192,85,227,49,95,234,222,230,255,235,69,6,102,53,177,136,74,235,182,73,119,205,57,51 };
    byte_vec_t pk { 4,23,170,251,233,242,15,48,235,177,107,136,139,240,104,172,135,108,151,93,90,96,171,178,10,38,112,27,104,162,85,208,88,200,249,238,31,105,172,47,236,219,154,222,36,105,129,65,215,106,144,189,181,119,187,186,233,27,166,58,180,230,91,112,163 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 997 ") {
    byte_vec_t msg { 99,145,210,80 };
    byte_vec_t sig { 139,156,62,234,19,11,201,39,220,141,71,232,88,153,253,242,225,49,188,144,87,242,32,66,23,140,192,183,146,211,201,162,246,155,222,70,209,31,124,142,231,30,60,174,240,226,239,61,127,172,103,203,182,148,10,183,8,18,121,231,5,132,82,148 };
    byte_vec_t pk { 2,244,76,147,178,93,188,230,186,223,245,209,95,132,114,174,150,87,239,119,42,2,241,181,24,78,26,134,216,74,23,65,65 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 997 ") {
    byte_vec_t msg { 101,184,72,137 };
    byte_vec_t sig { 116,226,108,33,154,251,22,31,239,17,190,178,243,158,238,81,152,129,111,133,183,190,112,220,16,179,1,54,72,156,18,77,6,155,48,68,62,56,146,251,70,228,7,76,20,25,8,34,59,180,71,153,99,114,161,159,243,191,94,11,4,1,125,89 };
    byte_vec_t pk { 3,5,123,150,237,214,49,12,52,10,149,93,22,138,70,224,197,210,59,122,173,199,137,173,101,129,192,85,37,21,11,110,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 998 ") {
    byte_vec_t msg { 73,81,111,187 };
    byte_vec_t sig { 242,63,229,242,72,174,133,65,249,193,193,224,163,248,87,59,144,118,92,32,218,239,154,25,162,189,50,255,22,133,212,211,28,108,228,110,82,97,154,83,97,71,12,161,249,225,203,192,77,250,130,124,194,121,176,164,201,34,15,79,51,235,191,155 };
    byte_vec_t pk { 4,31,90,80,85,13,121,185,9,48,171,241,222,59,213,157,247,68,180,48,41,68,111,7,82,44,93,250,132,159,189,105,223,4,253,102,63,243,244,214,6,234,72,175,131,84,23,206,108,137,101,24,146,252,54,96,96,147,152,139,41,141,237,79,127 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 998 ") {
    byte_vec_t msg { 216,135,46,18 };
    byte_vec_t sig { 45,49,208,240,68,200,49,19,172,157,193,186,23,212,169,154,192,21,65,166,16,63,228,72,190,91,11,132,187,76,121,24,199,46,163,176,243,96,92,122,112,30,44,75,254,102,3,100,118,157,208,197,16,206,249,83,216,12,159,202,230,202,231,162 };
    byte_vec_t pk { 4,4,53,123,98,208,206,164,29,170,247,231,108,159,124,74,199,146,171,154,230,95,192,227,24,180,98,168,115,219,193,32,77,56,165,160,134,23,126,37,40,137,103,95,107,241,231,137,108,97,141,159,255,181,86,206,117,89,208,2,186,178,2,83,61 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 998 ") {
    byte_vec_t msg { 221,138,20,162 };
    byte_vec_t sig { 225,71,180,135,23,173,31,78,230,225,212,126,84,247,147,196,161,192,5,133,194,203,156,21,208,17,234,221,67,152,172,212,209,11,80,243,249,154,126,143,152,180,125,74,155,38,173,152,39,90,46,46,194,17,118,31,209,252,93,163,182,115,19,187 };
    byte_vec_t pk { 2,109,230,208,224,149,220,36,57,164,84,205,43,160,48,104,3,228,167,193,91,120,232,200,241,127,120,201,1,82,107,249,143 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 998 ") {
    byte_vec_t msg { 48,23,56,136 };
    byte_vec_t sig { 143,212,185,102,85,184,167,199,146,234,202,69,112,75,118,109,40,205,1,69,250,252,84,43,157,205,119,46,140,92,224,120,226,81,107,4,192,35,42,33,153,209,82,223,78,166,191,118,169,82,104,172,161,86,207,141,92,173,1,176,52,27,233,218 };
    byte_vec_t pk { 3,173,185,37,189,81,68,86,57,225,17,114,231,243,106,58,136,217,134,69,246,57,236,51,95,220,144,160,117,196,3,130,113 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid uncompressed 999 ") {
    byte_vec_t msg { 11,255,136,246 };
    byte_vec_t sig { 146,236,176,179,250,137,0,93,52,186,219,87,27,173,35,132,217,133,133,174,113,18,164,213,49,171,219,27,157,174,126,229,152,126,60,10,112,199,225,12,1,147,153,141,58,129,185,85,174,172,53,148,56,216,127,238,62,69,49,116,32,6,159,127 };
    byte_vec_t pk { 4,1,64,55,57,200,16,248,239,44,155,150,105,10,20,137,33,35,30,206,223,46,19,59,63,215,182,251,82,178,198,151,245,124,193,233,63,3,84,99,124,93,160,223,159,19,122,41,227,101,54,49,175,35,226,184,54,11,241,68,64,150,135,175,156 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid uncompressed 999 ") {
    byte_vec_t msg { 14,23,114,133 };
    byte_vec_t sig { 239,59,204,51,16,27,243,255,216,122,181,255,215,96,87,139,180,23,176,183,144,136,185,105,149,182,124,48,253,135,225,68,113,160,11,178,40,79,115,189,239,162,0,162,29,225,73,42,2,183,86,21,47,108,38,113,205,80,152,47,102,66,128,244 };
    byte_vec_t pk { 4,73,86,72,69,138,161,195,31,173,60,65,71,162,39,38,72,173,54,116,232,83,130,103,35,250,228,5,49,6,77,183,144,190,208,178,203,167,87,183,178,129,27,156,113,142,120,187,140,221,111,170,21,253,196,194,87,81,143,55,7,43,33,112,183 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }


TEST_CASE(" test golang valid compressed 999 ") {
    byte_vec_t msg { 114,113,142,236 };
    byte_vec_t sig { 26,92,166,139,170,229,52,45,114,243,219,195,121,58,64,203,148,49,43,115,116,5,194,139,78,114,117,240,25,151,2,158,166,117,187,239,119,227,49,63,23,129,75,229,46,43,99,246,97,30,160,214,244,164,59,51,156,216,148,228,71,111,45,183 };
    byte_vec_t pk { 2,10,89,112,75,129,40,104,225,231,173,200,212,204,65,141,152,146,254,122,231,137,113,103,218,254,85,212,200,66,140,203,114 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_SUCCESS   );
    }


TEST_CASE(" test golang invalid compressed 999 ") {
    byte_vec_t msg { 177,21,77,115 };
    byte_vec_t sig { 151,169,86,118,12,57,129,47,84,69,151,31,186,40,21,208,6,84,192,75,105,126,206,145,121,140,32,64,193,29,131,43,163,200,168,120,206,163,45,155,208,91,221,82,196,136,134,137,7,156,149,181,198,130,94,52,203,207,222,127,190,168,245,59 };
    byte_vec_t pk { 3,103,23,98,6,67,75,70,213,237,69,226,97,118,149,82,184,245,10,203,160,87,238,239,221,34,59,78,168,143,170,123,190 };

    REQUIRE( p256_verify(msg.data(),
                            static_cast< unsigned >(msg.size()),
                            sig.data(),
                            pk.data()) ==  P256_INVALID_SIGNATURE   );
    }

